
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000042  00800100  00001d0c  00001da0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d0c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006f  00800142  00800142  00001de2  2**0
                  ALLOC
  3 .stab         000059c4  00000000  00000000  00001de4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000084be  00000000  00000000  000077a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  0000fc66  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000fca8  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 000000f8  00000000  00000000  0000fce8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00001905  00000000  00000000  0000fde0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000bbb  00000000  00000000  000116e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00000ef6  00000000  00000000  000122a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  0000025c  00000000  00000000  00013198  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0000070e  00000000  00000000  000133f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0000067e  00000000  00000000  00013b02  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000000d0  00000000  00000000  00014180  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__dtors_end>
       4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
       8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
       c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      24:	0c 94 c0 06 	jmp	0xd80	; 0xd80 <__vector_9>
      28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	84 07       	cpc	r24, r20

0000006a <__dtors_end>:
      6a:	11 24       	eor	r1, r1
      6c:	1f be       	out	0x3f, r1	; 63
      6e:	cf ef       	ldi	r28, 0xFF	; 255
      70:	d8 e0       	ldi	r29, 0x08	; 8
      72:	de bf       	out	0x3e, r29	; 62
      74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e0       	ldi	r26, 0x00	; 0
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	ec e0       	ldi	r30, 0x0C	; 12
      7e:	fd e1       	ldi	r31, 0x1D	; 29
      80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
      82:	05 90       	lpm	r0, Z+
      84:	0d 92       	st	X+, r0
      86:	a2 34       	cpi	r26, 0x42	; 66
      88:	b1 07       	cpc	r27, r17
      8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
      8c:	21 e0       	ldi	r18, 0x01	; 1
      8e:	a2 e4       	ldi	r26, 0x42	; 66
      90:	b1 e0       	ldi	r27, 0x01	; 1
      92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
      94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
      96:	a1 3b       	cpi	r26, 0xB1	; 177
      98:	b2 07       	cpc	r27, r18
      9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>
      9c:	0e 94 b5 00 	call	0x16a	; 0x16a <main>
      a0:	0c 94 79 0e 	jmp	0x1cf2	; 0x1cf2 <__do_global_dtors>

000000a4 <__bad_interrupt>:
      a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <batteryPercentage>:
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
      a8:	0e 94 34 04 	call	0x868	; 0x868 <read_battery_millivolts_3pi>

int batteryPercentage()//Should this function be in main or in display.c or something else?
{
	
	int milliVolts = read_battery_millivolts();
	int batteryPercent = milliVolts/50;
      ac:	62 e3       	ldi	r22, 0x32	; 50
      ae:	70 e0       	ldi	r23, 0x00	; 0
      b0:	0e 94 a4 0c 	call	0x1948	; 0x1948 <__divmodhi4>
      b4:	cb 01       	movw	r24, r22
	return batteryPercent;
}
      b6:	08 95       	ret

000000b8 <updateDisplay>:

void updateDisplay(int orderPercent, int batteryPercent, robotStates currentState)
{
      b8:	ef 92       	push	r14
      ba:	ff 92       	push	r15
      bc:	0f 93       	push	r16
      be:	1f 93       	push	r17
      c0:	cf 93       	push	r28
      c2:	7c 01       	movw	r14, r24
      c4:	8b 01       	movw	r16, r22
      c6:	c4 2f       	mov	r28, r20
	clear();
      c8:	0e 94 3d 05 	call	0xa7a	; 0xa7a <clear>
	lcd_goto_xy(0,0);
      cc:	60 e0       	ldi	r22, 0x00	; 0
      ce:	80 e0       	ldi	r24, 0x00	; 0
      d0:	0e 94 c4 05 	call	0xb88	; 0xb88 <lcd_goto_xy>
	print("Task:");
      d4:	8b e2       	ldi	r24, 0x2B	; 43
      d6:	91 e0       	ldi	r25, 0x01	; 1
      d8:	0e 94 4c 05 	call	0xa98	; 0xa98 <print>
	print_long(orderPercent);
      dc:	b7 01       	movw	r22, r14
      de:	ff 0c       	add	r15, r15
      e0:	88 0b       	sbc	r24, r24
      e2:	99 0b       	sbc	r25, r25
      e4:	0e 94 a1 05 	call	0xb42	; 0xb42 <print_long>
	print("%");
      e8:	81 e3       	ldi	r24, 0x31	; 49
      ea:	91 e0       	ldi	r25, 0x01	; 1
      ec:	0e 94 4c 05 	call	0xa98	; 0xa98 <print>
	
	lcd_goto_xy(0,1);
      f0:	61 e0       	ldi	r22, 0x01	; 1
      f2:	80 e0       	ldi	r24, 0x00	; 0
      f4:	0e 94 c4 05 	call	0xb88	; 0xb88 <lcd_goto_xy>
	print("Bat:");
      f8:	83 e3       	ldi	r24, 0x33	; 51
      fa:	91 e0       	ldi	r25, 0x01	; 1
      fc:	0e 94 4c 05 	call	0xa98	; 0xa98 <print>
	print_long(batteryPercent);
     100:	b8 01       	movw	r22, r16
     102:	11 0f       	add	r17, r17
     104:	88 0b       	sbc	r24, r24
     106:	99 0b       	sbc	r25, r25
     108:	0e 94 a1 05 	call	0xb42	; 0xb42 <print_long>
	print("%");
     10c:	81 e3       	ldi	r24, 0x31	; 49
     10e:	91 e0       	ldi	r25, 0x01	; 1
     110:	0e 94 4c 05 	call	0xa98	; 0xa98 <print>
	switch(currentState)
     114:	c2 30       	cpi	r28, 0x02	; 2
     116:	a9 f0       	breq	.+42     	; 0x142 <updateDisplay+0x8a>
     118:	28 f4       	brcc	.+10     	; 0x124 <updateDisplay+0x6c>
     11a:	cc 23       	and	r28, r28
     11c:	41 f0       	breq	.+16     	; 0x12e <updateDisplay+0x76>
     11e:	c1 30       	cpi	r28, 0x01	; 1
     120:	59 f0       	breq	.+22     	; 0x138 <updateDisplay+0x80>
     122:	1d c0       	rjmp	.+58     	; 0x15e <updateDisplay+0xa6>
     124:	c3 30       	cpi	r28, 0x03	; 3
     126:	91 f0       	breq	.+36     	; 0x14c <updateDisplay+0x94>
     128:	c4 30       	cpi	r28, 0x04	; 4
     12a:	a9 f0       	breq	.+42     	; 0x156 <updateDisplay+0x9e>
     12c:	18 c0       	rjmp	.+48     	; 0x15e <updateDisplay+0xa6>
	{
		case manualControl:
		print("M");//M for Manual
     12e:	88 e3       	ldi	r24, 0x38	; 56
     130:	91 e0       	ldi	r25, 0x01	; 1
     132:	0e 94 4c 05 	call	0xa98	; 0xa98 <print>
		break;
     136:	13 c0       	rjmp	.+38     	; 0x15e <updateDisplay+0xa6>
		case mazeSolver:
		print("P");//P for Parcours
     138:	8a e3       	ldi	r24, 0x3A	; 58
     13a:	91 e0       	ldi	r25, 0x01	; 1
     13c:	0e 94 4c 05 	call	0xa98	; 0xa98 <print>
		break;
     140:	0e c0       	rjmp	.+28     	; 0x15e <updateDisplay+0xa6>
		case logicsBot:
		print("O");//O for Order
     142:	8c e3       	ldi	r24, 0x3C	; 60
     144:	91 e0       	ldi	r25, 0x01	; 1
     146:	0e 94 4c 05 	call	0xa98	; 0xa98 <print>
		break;
     14a:	09 c0       	rjmp	.+18     	; 0x15e <updateDisplay+0xa6>
		case chargeMode:
		print("C");//C for Charge
     14c:	8e e3       	ldi	r24, 0x3E	; 62
     14e:	91 e0       	ldi	r25, 0x01	; 1
     150:	0e 94 4c 05 	call	0xa98	; 0xa98 <print>
		break;
     154:	04 c0       	rjmp	.+8      	; 0x15e <updateDisplay+0xa6>
		case homingMode:
		print("H");//H for Homing
     156:	80 e4       	ldi	r24, 0x40	; 64
     158:	91 e0       	ldi	r25, 0x01	; 1
     15a:	0e 94 4c 05 	call	0xa98	; 0xa98 <print>
		break;
	}
}
     15e:	cf 91       	pop	r28
     160:	1f 91       	pop	r17
     162:	0f 91       	pop	r16
     164:	ff 90       	pop	r15
     166:	ef 90       	pop	r14
     168:	08 95       	ret

0000016a <main>:
#include <avr/pgmspace.h>


int main()
{
	initialize();
     16a:	0e 94 bc 00 	call	0x178	; 0x178 <initialize>
	//parcour();
	warehouse();
     16e:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <warehouse>
     172:	80 e0       	ldi	r24, 0x00	; 0
     174:	90 e0       	ldi	r25, 0x00	; 0
     176:	08 95       	ret

00000178 <initialize>:
}

void inch(){
	set_motors(50,50);
	delay(200);
	set_motors(0,0);
     178:	cf 93       	push	r28
     17a:	df 93       	push	r29
     17c:	80 ed       	ldi	r24, 0xD0	; 208
     17e:	97 e0       	ldi	r25, 0x07	; 7
     180:	0e 94 80 07 	call	0xf00	; 0xf00 <pololu_3pi_init>
     184:	80 e1       	ldi	r24, 0x10	; 16
     186:	0e 94 bd 06 	call	0xd7a	; 0xd7a <button_is_pressed>
     18a:	88 23       	and	r24, r24
     18c:	d9 f3       	breq	.-10     	; 0x184 <initialize+0xc>
     18e:	80 e1       	ldi	r24, 0x10	; 16
     190:	0e 94 a9 06 	call	0xd52	; 0xd52 <wait_for_button_release>
     194:	88 ee       	ldi	r24, 0xE8	; 232
     196:	93 e0       	ldi	r25, 0x03	; 3
     198:	0e 94 08 07 	call	0xe10	; 0xe10 <delay_ms>
     19c:	c0 e0       	ldi	r28, 0x00	; 0
     19e:	d0 e0       	ldi	r29, 0x00	; 0
     1a0:	19 c0       	rjmp	.+50     	; 0x1d4 <initialize+0x5c>
     1a2:	ce 01       	movw	r24, r28
     1a4:	44 97       	sbiw	r24, 0x14	; 20
     1a6:	88 97       	sbiw	r24, 0x28	; 40
     1a8:	38 f0       	brcs	.+14     	; 0x1b8 <initialize+0x40>
     1aa:	68 ed       	ldi	r22, 0xD8	; 216
     1ac:	7f ef       	ldi	r23, 0xFF	; 255
     1ae:	88 e2       	ldi	r24, 0x28	; 40
     1b0:	90 e0       	ldi	r25, 0x00	; 0
     1b2:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <set_motors>
     1b6:	06 c0       	rjmp	.+12     	; 0x1c4 <initialize+0x4c>
     1b8:	68 e2       	ldi	r22, 0x28	; 40
     1ba:	70 e0       	ldi	r23, 0x00	; 0
     1bc:	88 ed       	ldi	r24, 0xD8	; 216
     1be:	9f ef       	ldi	r25, 0xFF	; 255
     1c0:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <set_motors>
     1c4:	81 e0       	ldi	r24, 0x01	; 1
     1c6:	0e 94 44 07 	call	0xe88	; 0xe88 <calibrate_line_sensors>
     1ca:	84 e1       	ldi	r24, 0x14	; 20
     1cc:	90 e0       	ldi	r25, 0x00	; 0
     1ce:	0e 94 08 07 	call	0xe10	; 0xe10 <delay_ms>
     1d2:	21 96       	adiw	r28, 0x01	; 1
     1d4:	c0 35       	cpi	r28, 0x50	; 80
     1d6:	d1 05       	cpc	r29, r1
     1d8:	20 f3       	brcs	.-56     	; 0x1a2 <initialize+0x2a>
     1da:	60 e0       	ldi	r22, 0x00	; 0
     1dc:	70 e0       	ldi	r23, 0x00	; 0
     1de:	80 e0       	ldi	r24, 0x00	; 0
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <set_motors>
     1e6:	80 e1       	ldi	r24, 0x10	; 16
     1e8:	0e 94 bd 06 	call	0xd7a	; 0xd7a <button_is_pressed>
     1ec:	88 23       	and	r24, r24
     1ee:	d9 f3       	breq	.-10     	; 0x1e6 <initialize+0x6e>
     1f0:	80 e1       	ldi	r24, 0x10	; 16
     1f2:	0e 94 a9 06 	call	0xd52	; 0xd52 <wait_for_button_release>
     1f6:	0e 94 3d 05 	call	0xa7a	; 0xa7a <clear>
     1fa:	df 91       	pop	r29
     1fc:	cf 91       	pop	r28
     1fe:	08 95       	ret

00000200 <motorControl>:
		
	}
}


void motorControl(char x){
     200:	cf 93       	push	r28
     202:	c8 2f       	mov	r28, r24
	read_line(sensors,IR_EMITTERS_ON);
     204:	61 e0       	ldi	r22, 0x01	; 1
     206:	83 ea       	ldi	r24, 0xA3	; 163
     208:	91 e0       	ldi	r25, 0x01	; 1
     20a:	0e 94 4a 07 	call	0xe94	; 0xe94 <read_line>
	
	if(x == 'N')
     20e:	ce 34       	cpi	r28, 0x4E	; 78
     210:	39 f4       	brne	.+14     	; 0x220 <motorControl+0x20>
	set_motors(0,0);
     212:	60 e0       	ldi	r22, 0x00	; 0
     214:	70 e0       	ldi	r23, 0x00	; 0
     216:	80 e0       	ldi	r24, 0x00	; 0
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <set_motors>
     21e:	b1 c0       	rjmp	.+354    	; 0x382 <motorControl+0x182>
	
	
	else if(x == 'L'){										//turn left
     220:	cc 34       	cpi	r28, 0x4C	; 76
     222:	09 f5       	brne	.+66     	; 0x266 <motorControl+0x66>
		set_motors(-50,50);
     224:	62 e3       	ldi	r22, 0x32	; 50
     226:	70 e0       	ldi	r23, 0x00	; 0
     228:	8e ec       	ldi	r24, 0xCE	; 206
     22a:	9f ef       	ldi	r25, 0xFF	; 255
     22c:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <set_motors>
		while (sensors[2] >=500){
     230:	05 c0       	rjmp	.+10     	; 0x23c <motorControl+0x3c>
			read_line(sensors,IR_EMITTERS_ON);
     232:	61 e0       	ldi	r22, 0x01	; 1
     234:	83 ea       	ldi	r24, 0xA3	; 163
     236:	91 e0       	ldi	r25, 0x01	; 1
     238:	0e 94 4a 07 	call	0xe94	; 0xe94 <read_line>
	set_motors(0,0);
	
	
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
     23c:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <sensors+0x4>
     240:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <sensors+0x5>
     244:	84 3f       	cpi	r24, 0xF4	; 244
     246:	91 40       	sbci	r25, 0x01	; 1
     248:	a0 f7       	brcc	.-24     	; 0x232 <motorControl+0x32>
     24a:	05 c0       	rjmp	.+10     	; 0x256 <motorControl+0x56>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     24c:	61 e0       	ldi	r22, 0x01	; 1
     24e:	83 ea       	ldi	r24, 0xA3	; 163
     250:	91 e0       	ldi	r25, 0x01	; 1
     252:	0e 94 4a 07 	call	0xe94	; 0xe94 <read_line>
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     256:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <sensors+0x4>
     25a:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <sensors+0x5>
     25e:	85 3f       	cpi	r24, 0xF5	; 245
     260:	91 40       	sbci	r25, 0x01	; 1
     262:	a0 f3       	brcs	.-24     	; 0x24c <motorControl+0x4c>
     264:	8e c0       	rjmp	.+284    	; 0x382 <motorControl+0x182>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'R'){									//turn right
     266:	c2 35       	cpi	r28, 0x52	; 82
     268:	09 f5       	brne	.+66     	; 0x2ac <motorControl+0xac>
		set_motors(50,-50);
     26a:	6e ec       	ldi	r22, 0xCE	; 206
     26c:	7f ef       	ldi	r23, 0xFF	; 255
     26e:	82 e3       	ldi	r24, 0x32	; 50
     270:	90 e0       	ldi	r25, 0x00	; 0
     272:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <set_motors>
		while (sensors[2] >=500){
     276:	05 c0       	rjmp	.+10     	; 0x282 <motorControl+0x82>
			read_line(sensors,IR_EMITTERS_ON);
     278:	61 e0       	ldi	r22, 0x01	; 1
     27a:	83 ea       	ldi	r24, 0xA3	; 163
     27c:	91 e0       	ldi	r25, 0x01	; 1
     27e:	0e 94 4a 07 	call	0xe94	; 0xe94 <read_line>
		}
	}
	
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
     282:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <sensors+0x4>
     286:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <sensors+0x5>
     28a:	84 3f       	cpi	r24, 0xF4	; 244
     28c:	91 40       	sbci	r25, 0x01	; 1
     28e:	a0 f7       	brcc	.-24     	; 0x278 <motorControl+0x78>
     290:	05 c0       	rjmp	.+10     	; 0x29c <motorControl+0x9c>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     292:	61 e0       	ldi	r22, 0x01	; 1
     294:	83 ea       	ldi	r24, 0xA3	; 163
     296:	91 e0       	ldi	r25, 0x01	; 1
     298:	0e 94 4a 07 	call	0xe94	; 0xe94 <read_line>
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     29c:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <sensors+0x4>
     2a0:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <sensors+0x5>
     2a4:	85 3f       	cpi	r24, 0xF5	; 245
     2a6:	91 40       	sbci	r25, 0x01	; 1
     2a8:	a0 f3       	brcs	.-24     	; 0x292 <motorControl+0x92>
     2aa:	6b c0       	rjmp	.+214    	; 0x382 <motorControl+0x182>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'S'){									//drive straight and corrects the adjusment of the robot if it aint straight
     2ac:	c3 35       	cpi	r28, 0x53	; 83
     2ae:	89 f5       	brne	.+98     	; 0x312 <motorControl+0x112>
		set_motors(50,50);
     2b0:	62 e3       	ldi	r22, 0x32	; 50
     2b2:	70 e0       	ldi	r23, 0x00	; 0
     2b4:	82 e3       	ldi	r24, 0x32	; 50
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <set_motors>
		
		if (sensors[3] >=400  && sensors[4] <=400 )
     2bc:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <sensors+0x6>
     2c0:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <sensors+0x7>
     2c4:	80 39       	cpi	r24, 0x90	; 144
     2c6:	91 40       	sbci	r25, 0x01	; 1
     2c8:	68 f0       	brcs	.+26     	; 0x2e4 <motorControl+0xe4>
     2ca:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <sensors+0x8>
     2ce:	90 91 ac 01 	lds	r25, 0x01AC	; 0x8001ac <sensors+0x9>
     2d2:	81 39       	cpi	r24, 0x91	; 145
     2d4:	91 40       	sbci	r25, 0x01	; 1
     2d6:	30 f4       	brcc	.+12     	; 0x2e4 <motorControl+0xe4>
		set_motors(100,40);
     2d8:	68 e2       	ldi	r22, 0x28	; 40
     2da:	70 e0       	ldi	r23, 0x00	; 0
     2dc:	84 e6       	ldi	r24, 0x64	; 100
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <set_motors>
		if (sensors[1] >=400 && sensors[0] <=400  )
     2e4:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <sensors+0x2>
     2e8:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <sensors+0x3>
     2ec:	80 39       	cpi	r24, 0x90	; 144
     2ee:	91 40       	sbci	r25, 0x01	; 1
     2f0:	08 f4       	brcc	.+2      	; 0x2f4 <motorControl+0xf4>
     2f2:	47 c0       	rjmp	.+142    	; 0x382 <motorControl+0x182>
     2f4:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <sensors>
     2f8:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <sensors+0x1>
     2fc:	81 39       	cpi	r24, 0x91	; 145
     2fe:	91 40       	sbci	r25, 0x01	; 1
     300:	08 f0       	brcs	.+2      	; 0x304 <motorControl+0x104>
     302:	3f c0       	rjmp	.+126    	; 0x382 <motorControl+0x182>
		set_motors(40,100);
     304:	64 e6       	ldi	r22, 0x64	; 100
     306:	70 e0       	ldi	r23, 0x00	; 0
     308:	88 e2       	ldi	r24, 0x28	; 40
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <set_motors>
     310:	38 c0       	rjmp	.+112    	; 0x382 <motorControl+0x182>
	}
	
	else if(x == 'B'){									// reverse
     312:	c2 34       	cpi	r28, 0x42	; 66
     314:	09 f5       	brne	.+66     	; 0x358 <motorControl+0x158>
		set_motors(-50,-50);
     316:	6e ec       	ldi	r22, 0xCE	; 206
     318:	7f ef       	ldi	r23, 0xFF	; 255
     31a:	8e ec       	ldi	r24, 0xCE	; 206
     31c:	9f ef       	ldi	r25, 0xFF	; 255
     31e:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <set_motors>
		if (sensors[3] >=400)
     322:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <sensors+0x6>
     326:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <sensors+0x7>
     32a:	80 39       	cpi	r24, 0x90	; 144
     32c:	91 40       	sbci	r25, 0x01	; 1
     32e:	30 f0       	brcs	.+12     	; 0x33c <motorControl+0x13c>
		set_motors(-50,-55);
     330:	69 ec       	ldi	r22, 0xC9	; 201
     332:	7f ef       	ldi	r23, 0xFF	; 255
     334:	8e ec       	ldi	r24, 0xCE	; 206
     336:	9f ef       	ldi	r25, 0xFF	; 255
     338:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <set_motors>
		if (sensors[1] >=400)
     33c:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <sensors+0x2>
     340:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <sensors+0x3>
     344:	80 39       	cpi	r24, 0x90	; 144
     346:	91 40       	sbci	r25, 0x01	; 1
     348:	e0 f0       	brcs	.+56     	; 0x382 <motorControl+0x182>
		set_motors(-55,-50);
     34a:	6e ec       	ldi	r22, 0xCE	; 206
     34c:	7f ef       	ldi	r23, 0xFF	; 255
     34e:	89 ec       	ldi	r24, 0xC9	; 201
     350:	9f ef       	ldi	r25, 0xFF	; 255
     352:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <set_motors>
     356:	15 c0       	rjmp	.+42     	; 0x382 <motorControl+0x182>
	}
	else if(x == 'T'){
     358:	c4 35       	cpi	r28, 0x54	; 84
     35a:	99 f4       	brne	.+38     	; 0x382 <motorControl+0x182>
		set_motors(-75,75);
     35c:	6b e4       	ldi	r22, 0x4B	; 75
     35e:	70 e0       	ldi	r23, 0x00	; 0
     360:	85 eb       	ldi	r24, 0xB5	; 181
     362:	9f ef       	ldi	r25, 0xFF	; 255
     364:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <set_motors>
		while (sensors[2] >=500){
     368:	05 c0       	rjmp	.+10     	; 0x374 <motorControl+0x174>
			read_line(sensors,IR_EMITTERS_ON);
     36a:	61 e0       	ldi	r22, 0x01	; 1
     36c:	83 ea       	ldi	r24, 0xA3	; 163
     36e:	91 e0       	ldi	r25, 0x01	; 1
     370:	0e 94 4a 07 	call	0xe94	; 0xe94 <read_line>
		if (sensors[1] >=400)
		set_motors(-55,-50);
	}
	else if(x == 'T'){
		set_motors(-75,75);
		while (sensors[2] >=500){
     374:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <sensors+0x4>
     378:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <sensors+0x5>
     37c:	84 3f       	cpi	r24, 0xF4	; 244
     37e:	91 40       	sbci	r25, 0x01	; 1
     380:	a0 f7       	brcc	.-24     	; 0x36a <motorControl+0x16a>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
     382:	cf 91       	pop	r28
     384:	08 95       	ret

00000386 <swap>:
//#include "sensor.h"
//#include <pololu/3pi.h>


void swap(int *a, int *b) {
    int temp = *a;
     386:	fc 01       	movw	r30, r24
     388:	20 81       	ld	r18, Z
     38a:	31 81       	ldd	r19, Z+1	; 0x01
    *a = *b;
     38c:	fb 01       	movw	r30, r22
     38e:	40 81       	ld	r20, Z
     390:	51 81       	ldd	r21, Z+1	; 0x01
     392:	fc 01       	movw	r30, r24
     394:	51 83       	std	Z+1, r21	; 0x01
     396:	40 83       	st	Z, r20
    *b = temp;
     398:	fb 01       	movw	r30, r22
     39a:	31 83       	std	Z+1, r19	; 0x01
     39c:	20 83       	st	Z, r18
     39e:	08 95       	ret

000003a0 <bubbleSort>:
}

void bubbleSort(int arr[],int orderY[], int n) {
     3a0:	6f 92       	push	r6
     3a2:	7f 92       	push	r7
     3a4:	8f 92       	push	r8
     3a6:	9f 92       	push	r9
     3a8:	af 92       	push	r10
     3aa:	bf 92       	push	r11
     3ac:	cf 92       	push	r12
     3ae:	df 92       	push	r13
     3b0:	ef 92       	push	r14
     3b2:	ff 92       	push	r15
     3b4:	0f 93       	push	r16
     3b6:	1f 93       	push	r17
     3b8:	cf 93       	push	r28
     3ba:	df 93       	push	r29
     3bc:	6c 01       	movw	r12, r24
     3be:	3b 01       	movw	r6, r22
     3c0:	4a 01       	movw	r8, r20
    for (int i = 0; i < n - 1; i++) {
     3c2:	a1 2c       	mov	r10, r1
     3c4:	b1 2c       	mov	r11, r1
     3c6:	30 c0       	rjmp	.+96     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
     3c8:	7e 01       	movw	r14, r28
     3ca:	ee 0c       	add	r14, r14
     3cc:	ff 1c       	adc	r15, r15
     3ce:	f6 01       	movw	r30, r12
     3d0:	ee 0d       	add	r30, r14
     3d2:	ff 1d       	adc	r31, r15
     3d4:	20 81       	ld	r18, Z
     3d6:	31 81       	ldd	r19, Z+1	; 0x01
     3d8:	8e 01       	movw	r16, r28
     3da:	0f 5f       	subi	r16, 0xFF	; 255
     3dc:	1f 4f       	sbci	r17, 0xFF	; 255
     3de:	00 0f       	add	r16, r16
     3e0:	11 1f       	adc	r17, r17
     3e2:	d6 01       	movw	r26, r12
     3e4:	a0 0f       	add	r26, r16
     3e6:	b1 1f       	adc	r27, r17
     3e8:	8d 91       	ld	r24, X+
     3ea:	9c 91       	ld	r25, X
     3ec:	11 97       	sbiw	r26, 0x01	; 1
     3ee:	82 17       	cp	r24, r18
     3f0:	93 07       	cpc	r25, r19
     3f2:	64 f4       	brge	.+24     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
                swap(&arr[j], &arr[j + 1]);
     3f4:	bd 01       	movw	r22, r26
     3f6:	cf 01       	movw	r24, r30
     3f8:	0e 94 c3 01 	call	0x386	; 0x386 <swap>
                swap(&orderY[j], &orderY[j + 1]);
     3fc:	b3 01       	movw	r22, r6
     3fe:	60 0f       	add	r22, r16
     400:	71 1f       	adc	r23, r17
     402:	c3 01       	movw	r24, r6
     404:	8e 0d       	add	r24, r14
     406:	9f 1d       	adc	r25, r15
     408:	0e 94 c3 01 	call	0x386	; 0x386 <swap>
    *b = temp;
}

void bubbleSort(int arr[],int orderY[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
     40c:	21 96       	adiw	r28, 0x01	; 1
     40e:	02 c0       	rjmp	.+4      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     410:	c0 e0       	ldi	r28, 0x00	; 0
     412:	d0 e0       	ldi	r29, 0x00	; 0
     414:	c4 01       	movw	r24, r8
     416:	8a 19       	sub	r24, r10
     418:	9b 09       	sbc	r25, r11
     41a:	01 97       	sbiw	r24, 0x01	; 1
     41c:	c8 17       	cp	r28, r24
     41e:	d9 07       	cpc	r29, r25
     420:	9c f2       	brlt	.-90     	; 0x3c8 <bubbleSort+0x28>
    *a = *b;
    *b = temp;
}

void bubbleSort(int arr[],int orderY[], int n) {
    for (int i = 0; i < n - 1; i++) {
     422:	8f ef       	ldi	r24, 0xFF	; 255
     424:	a8 1a       	sub	r10, r24
     426:	b8 0a       	sbc	r11, r24
     428:	c4 01       	movw	r24, r8
     42a:	01 97       	sbiw	r24, 0x01	; 1
     42c:	a8 16       	cp	r10, r24
     42e:	b9 06       	cpc	r11, r25
     430:	7c f3       	brlt	.-34     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
                swap(&orderY[j], &orderY[j + 1]);
				
            }
		}
    }
}
     432:	df 91       	pop	r29
     434:	cf 91       	pop	r28
     436:	1f 91       	pop	r17
     438:	0f 91       	pop	r16
     43a:	ff 90       	pop	r15
     43c:	ef 90       	pop	r14
     43e:	df 90       	pop	r13
     440:	cf 90       	pop	r12
     442:	bf 90       	pop	r11
     444:	af 90       	pop	r10
     446:	9f 90       	pop	r9
     448:	8f 90       	pop	r8
     44a:	7f 90       	pop	r7
     44c:	6f 90       	pop	r6
     44e:	08 95       	ret

00000450 <turnRobot>:


void turnRobot(char direction, piRobot *myRobot)
{
     450:	c8 2f       	mov	r28, r24
     452:	8b 01       	movw	r16, r22
    int changing = 1;
    while(changing)
     454:	71 c0       	rjmp	.+226    	; 0x538 <turnRobot+0xe8>
    {
        switch(myRobot->direction)
        {
            case 'N':
                if(direction == 'E')
     456:	c5 34       	cpi	r28, 0x45	; 69
     458:	39 f4       	brne	.+14     	; 0x468 <turnRobot+0x18>
                {
                    motorControl('R');
     45a:	82 e5       	ldi	r24, 0x52	; 82
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	0e 94 00 01 	call	0x200	; 0x200 <motorControl>
                    myRobot->direction = 'E';
     462:	85 e4       	ldi	r24, 0x45	; 69
     464:	f8 01       	movw	r30, r16
     466:	84 83       	std	Z+4, r24	; 0x04
                }
                if(direction == 'W')
     468:	c7 35       	cpi	r28, 0x57	; 87
     46a:	39 f4       	brne	.+14     	; 0x47a <turnRobot+0x2a>
                {
                    motorControl('L');
     46c:	8c e4       	ldi	r24, 0x4C	; 76
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	0e 94 00 01 	call	0x200	; 0x200 <motorControl>
                    myRobot->direction = 'W';
     474:	87 e5       	ldi	r24, 0x57	; 87
     476:	f8 01       	movw	r30, r16
     478:	84 83       	std	Z+4, r24	; 0x04
                }
                if(direction == 'S')
     47a:	c3 35       	cpi	r28, 0x53	; 83
     47c:	09 f0       	breq	.+2      	; 0x480 <turnRobot+0x30>
     47e:	5c c0       	rjmp	.+184    	; 0x538 <turnRobot+0xe8>
                {
                    motorControl('B');
     480:	82 e4       	ldi	r24, 0x42	; 66
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	0e 94 00 01 	call	0x200	; 0x200 <motorControl>
                    myRobot->direction = 'S';
     488:	83 e5       	ldi	r24, 0x53	; 83
     48a:	f8 01       	movw	r30, r16
     48c:	84 83       	std	Z+4, r24	; 0x04
     48e:	54 c0       	rjmp	.+168    	; 0x538 <turnRobot+0xe8>
                }
                break;
            case 'E':
                if(direction == 'S')
     490:	c3 35       	cpi	r28, 0x53	; 83
     492:	39 f4       	brne	.+14     	; 0x4a2 <turnRobot+0x52>
                {
                    motorControl('R');
     494:	82 e5       	ldi	r24, 0x52	; 82
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	0e 94 00 01 	call	0x200	; 0x200 <motorControl>
                    myRobot->direction = 'S';
     49c:	83 e5       	ldi	r24, 0x53	; 83
     49e:	f8 01       	movw	r30, r16
     4a0:	84 83       	std	Z+4, r24	; 0x04
                }
                if(direction == 'W')
     4a2:	c7 35       	cpi	r28, 0x57	; 87
     4a4:	39 f4       	brne	.+14     	; 0x4b4 <turnRobot+0x64>
                {
                    motorControl('L');
     4a6:	8c e4       	ldi	r24, 0x4C	; 76
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	0e 94 00 01 	call	0x200	; 0x200 <motorControl>
                    myRobot->direction = 'W';
     4ae:	87 e5       	ldi	r24, 0x57	; 87
     4b0:	f8 01       	movw	r30, r16
     4b2:	84 83       	std	Z+4, r24	; 0x04
                }
                if(direction == 'S')
     4b4:	c3 35       	cpi	r28, 0x53	; 83
     4b6:	09 f0       	breq	.+2      	; 0x4ba <turnRobot+0x6a>
     4b8:	3f c0       	rjmp	.+126    	; 0x538 <turnRobot+0xe8>
                {
                    motorControl('B');
     4ba:	82 e4       	ldi	r24, 0x42	; 66
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	0e 94 00 01 	call	0x200	; 0x200 <motorControl>
                    myRobot->direction = 'S';
     4c2:	83 e5       	ldi	r24, 0x53	; 83
     4c4:	f8 01       	movw	r30, r16
     4c6:	84 83       	std	Z+4, r24	; 0x04
     4c8:	37 c0       	rjmp	.+110    	; 0x538 <turnRobot+0xe8>
                }
                break;
            case 'S':
                if(direction == 'W')
     4ca:	c7 35       	cpi	r28, 0x57	; 87
     4cc:	39 f4       	brne	.+14     	; 0x4dc <turnRobot+0x8c>
                {
                    motorControl('R');
     4ce:	82 e5       	ldi	r24, 0x52	; 82
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	0e 94 00 01 	call	0x200	; 0x200 <motorControl>
                    myRobot->direction = 'W';
     4d6:	87 e5       	ldi	r24, 0x57	; 87
     4d8:	f8 01       	movw	r30, r16
     4da:	84 83       	std	Z+4, r24	; 0x04
                }
                if(direction == 'E')
     4dc:	c5 34       	cpi	r28, 0x45	; 69
     4de:	39 f4       	brne	.+14     	; 0x4ee <turnRobot+0x9e>
                {
                    motorControl('L');
     4e0:	8c e4       	ldi	r24, 0x4C	; 76
     4e2:	90 e0       	ldi	r25, 0x00	; 0
     4e4:	0e 94 00 01 	call	0x200	; 0x200 <motorControl>
                    myRobot->direction = 'E';
     4e8:	85 e4       	ldi	r24, 0x45	; 69
     4ea:	f8 01       	movw	r30, r16
     4ec:	84 83       	std	Z+4, r24	; 0x04
                }
                if(direction == 'N')
     4ee:	ce 34       	cpi	r28, 0x4E	; 78
     4f0:	19 f5       	brne	.+70     	; 0x538 <turnRobot+0xe8>
                {
                    motorControl('B');
     4f2:	82 e4       	ldi	r24, 0x42	; 66
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	0e 94 00 01 	call	0x200	; 0x200 <motorControl>
                    myRobot->direction = 'N';
     4fa:	8e e4       	ldi	r24, 0x4E	; 78
     4fc:	f8 01       	movw	r30, r16
     4fe:	84 83       	std	Z+4, r24	; 0x04
     500:	1b c0       	rjmp	.+54     	; 0x538 <turnRobot+0xe8>
                }
                break;
            case 'W':
                if(direction == 'N')
     502:	ce 34       	cpi	r28, 0x4E	; 78
     504:	39 f4       	brne	.+14     	; 0x514 <turnRobot+0xc4>
                {
                    motorControl('R');
     506:	82 e5       	ldi	r24, 0x52	; 82
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	0e 94 00 01 	call	0x200	; 0x200 <motorControl>
                    myRobot->direction = 'N';
     50e:	8e e4       	ldi	r24, 0x4E	; 78
     510:	f8 01       	movw	r30, r16
     512:	84 83       	std	Z+4, r24	; 0x04
                }
                if(direction == 'S')
     514:	c3 35       	cpi	r28, 0x53	; 83
     516:	39 f4       	brne	.+14     	; 0x526 <turnRobot+0xd6>
                {
                    motorControl('L');
     518:	8c e4       	ldi	r24, 0x4C	; 76
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	0e 94 00 01 	call	0x200	; 0x200 <motorControl>
                    myRobot->direction = 'S';
     520:	83 e5       	ldi	r24, 0x53	; 83
     522:	f8 01       	movw	r30, r16
     524:	84 83       	std	Z+4, r24	; 0x04
                }
                if(direction == 'E')
     526:	c5 34       	cpi	r28, 0x45	; 69
     528:	39 f4       	brne	.+14     	; 0x538 <turnRobot+0xe8>
                {
                    motorControl('B');
     52a:	82 e4       	ldi	r24, 0x42	; 66
     52c:	90 e0       	ldi	r25, 0x00	; 0
     52e:	0e 94 00 01 	call	0x200	; 0x200 <motorControl>
                    myRobot->direction = 'E';
     532:	85 e4       	ldi	r24, 0x45	; 69
     534:	f8 01       	movw	r30, r16
     536:	84 83       	std	Z+4, r24	; 0x04
void turnRobot(char direction, piRobot *myRobot)
{
    int changing = 1;
    while(changing)
    {
        switch(myRobot->direction)
     538:	f8 01       	movw	r30, r16
     53a:	84 81       	ldd	r24, Z+4	; 0x04
     53c:	8e 34       	cpi	r24, 0x4E	; 78
     53e:	09 f4       	brne	.+2      	; 0x542 <turnRobot+0xf2>
     540:	8a cf       	rjmp	.-236    	; 0x456 <turnRobot+0x6>
     542:	20 f4       	brcc	.+8      	; 0x54c <turnRobot+0xfc>
     544:	85 34       	cpi	r24, 0x45	; 69
     546:	09 f4       	brne	.+2      	; 0x54a <turnRobot+0xfa>
     548:	a3 cf       	rjmp	.-186    	; 0x490 <turnRobot+0x40>
     54a:	f6 cf       	rjmp	.-20     	; 0x538 <turnRobot+0xe8>
     54c:	83 35       	cpi	r24, 0x53	; 83
     54e:	09 f4       	brne	.+2      	; 0x552 <turnRobot+0x102>
     550:	bc cf       	rjmp	.-136    	; 0x4ca <turnRobot+0x7a>
     552:	87 35       	cpi	r24, 0x57	; 87
     554:	b1 f2       	breq	.-84     	; 0x502 <turnRobot+0xb2>
     556:	f0 cf       	rjmp	.-32     	; 0x538 <turnRobot+0xe8>

00000558 <moveX>:
    }
}


void moveX(int orderPos)
{
     558:	cf 93       	push	r28
     55a:	df 93       	push	r29
     55c:	00 d0       	rcall	.+0      	; 0x55e <moveX+0x6>
     55e:	00 d0       	rcall	.+0      	; 0x560 <moveX+0x8>
     560:	1f 92       	push	r1
     562:	cd b7       	in	r28, 0x3d	; 61
     564:	de b7       	in	r29, 0x3e	; 62
	piRobot robot;
    int junctions;
    if(robot.posX != orderPos)
     566:	29 81       	ldd	r18, Y+1	; 0x01
     568:	3a 81       	ldd	r19, Y+2	; 0x02
     56a:	28 17       	cp	r18, r24
     56c:	39 07       	cpc	r19, r25
     56e:	79 f0       	breq	.+30     	; 0x58e <moveX+0x36>
    {
        if(robot.posX < orderPos)
     570:	28 17       	cp	r18, r24
     572:	39 07       	cpc	r19, r25
     574:	34 f4       	brge	.+12     	; 0x582 <moveX+0x2a>
        {
            turnRobot('W', &robot);
     576:	be 01       	movw	r22, r28
     578:	6f 5f       	subi	r22, 0xFF	; 255
     57a:	7f 4f       	sbci	r23, 0xFF	; 255
     57c:	87 e5       	ldi	r24, 0x57	; 87
     57e:	0e 94 28 02 	call	0x450	; 0x450 <turnRobot>
            junctions = orderPos-robot.posX;
        }
        else{
            turnRobot('E', &robot);
     582:	be 01       	movw	r22, r28
     584:	6f 5f       	subi	r22, 0xFF	; 255
     586:	7f 4f       	sbci	r23, 0xFF	; 255
     588:	85 e4       	ldi	r24, 0x45	; 69
     58a:	0e 94 28 02 	call	0x450	; 0x450 <turnRobot>
        {
            motorControl('S');
        }

    }
}
     58e:	0f 90       	pop	r0
     590:	0f 90       	pop	r0
     592:	0f 90       	pop	r0
     594:	0f 90       	pop	r0
     596:	0f 90       	pop	r0
     598:	df 91       	pop	r29
     59a:	cf 91       	pop	r28
     59c:	08 95       	ret

0000059e <moveY>:

void moveY(int orderPos)
{
     59e:	cf 93       	push	r28
     5a0:	df 93       	push	r29
     5a2:	00 d0       	rcall	.+0      	; 0x5a4 <moveY+0x6>
     5a4:	00 d0       	rcall	.+0      	; 0x5a6 <moveY+0x8>
     5a6:	1f 92       	push	r1
     5a8:	cd b7       	in	r28, 0x3d	; 61
     5aa:	de b7       	in	r29, 0x3e	; 62
	piRobot robot;
    int junctions;
    if(robot.posY != orderPos)
     5ac:	2b 81       	ldd	r18, Y+3	; 0x03
     5ae:	3c 81       	ldd	r19, Y+4	; 0x04
     5b0:	28 17       	cp	r18, r24
     5b2:	39 07       	cpc	r19, r25
     5b4:	79 f0       	breq	.+30     	; 0x5d4 <moveY+0x36>
    {
        if(robot.posY < orderPos)
     5b6:	28 17       	cp	r18, r24
     5b8:	39 07       	cpc	r19, r25
     5ba:	34 f4       	brge	.+12     	; 0x5c8 <moveY+0x2a>
        {
            turnRobot('N', &robot);
     5bc:	be 01       	movw	r22, r28
     5be:	6f 5f       	subi	r22, 0xFF	; 255
     5c0:	7f 4f       	sbci	r23, 0xFF	; 255
     5c2:	8e e4       	ldi	r24, 0x4E	; 78
     5c4:	0e 94 28 02 	call	0x450	; 0x450 <turnRobot>
            junctions = orderPos-robot.posY;
        }
        else{
            turnRobot('S', &robot);
     5c8:	be 01       	movw	r22, r28
     5ca:	6f 5f       	subi	r22, 0xFF	; 255
     5cc:	7f 4f       	sbci	r23, 0xFF	; 255
     5ce:	83 e5       	ldi	r24, 0x53	; 83
     5d0:	0e 94 28 02 	call	0x450	; 0x450 <turnRobot>
        {
            motorControl('S');
        }

    }
}
     5d4:	0f 90       	pop	r0
     5d6:	0f 90       	pop	r0
     5d8:	0f 90       	pop	r0
     5da:	0f 90       	pop	r0
     5dc:	0f 90       	pop	r0
     5de:	df 91       	pop	r29
     5e0:	cf 91       	pop	r28
     5e2:	08 95       	ret

000005e4 <warehouse>:


void warehouse(void)
{
     5e4:	ef 92       	push	r14
     5e6:	ff 92       	push	r15
     5e8:	0f 93       	push	r16
     5ea:	1f 93       	push	r17
     5ec:	cf 93       	push	r28
     5ee:	df 93       	push	r29
     5f0:	cd b7       	in	r28, 0x3d	; 61
     5f2:	de b7       	in	r29, 0x3e	; 62
     5f4:	6c 97       	sbiw	r28, 0x1c	; 28
     5f6:	0f b6       	in	r0, 0x3f	; 63
     5f8:	f8 94       	cli
     5fa:	de bf       	out	0x3e, r29	; 62
     5fc:	0f be       	out	0x3f, r0	; 63
     5fe:	cd bf       	out	0x3d, r28	; 61
 robot.posY = 0;
   
//int orderX[] = getWixel("posX");
//int orderY[] = getWixel("posY");

    int orderX[] = {8,5,2,9,7,1,3};
     600:	8e e0       	ldi	r24, 0x0E	; 14
     602:	ea e0       	ldi	r30, 0x0A	; 10
     604:	f1 e0       	ldi	r31, 0x01	; 1
     606:	de 01       	movw	r26, r28
     608:	11 96       	adiw	r26, 0x01	; 1
     60a:	01 90       	ld	r0, Z+
     60c:	0d 92       	st	X+, r0
     60e:	8a 95       	dec	r24
     610:	e1 f7       	brne	.-8      	; 0x60a <warehouse+0x26>
    int orderY[] = {8,6,3,5,2,0,8};
     612:	8e e0       	ldi	r24, 0x0E	; 14
     614:	e8 e1       	ldi	r30, 0x18	; 24
     616:	f1 e0       	ldi	r31, 0x01	; 1
     618:	de 01       	movw	r26, r28
     61a:	1f 96       	adiw	r26, 0x0f	; 15
     61c:	01 90       	ld	r0, Z+
     61e:	0d 92       	st	X+, r0
     620:	8a 95       	dec	r24
     622:	e1 f7       	brne	.-8      	; 0x61c <warehouse+0x38>

    int arrayGrootte = sizeof(orderX) / sizeof(orderX[0]);
    bubbleSort(orderX, orderY, arrayGrootte);
     624:	47 e0       	ldi	r20, 0x07	; 7
     626:	50 e0       	ldi	r21, 0x00	; 0
     628:	be 01       	movw	r22, r28
     62a:	61 5f       	subi	r22, 0xF1	; 241
     62c:	7f 4f       	sbci	r23, 0xFF	; 255
     62e:	ce 01       	movw	r24, r28
     630:	01 96       	adiw	r24, 0x01	; 1
     632:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <bubbleSort>

    for(int locaties = 0; locaties<arrayGrootte;locaties++)
     636:	00 e0       	ldi	r16, 0x00	; 0
     638:	10 e0       	ldi	r17, 0x00	; 0
     63a:	2d c0       	rjmp	.+90     	; 0x696 <warehouse+0xb2>
    {
        moveX(orderX[locaties]);
     63c:	78 01       	movw	r14, r16
     63e:	ee 0c       	add	r14, r14
     640:	ff 1c       	adc	r15, r15
     642:	81 e0       	ldi	r24, 0x01	; 1
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	8c 0f       	add	r24, r28
     648:	9d 1f       	adc	r25, r29
     64a:	e8 0e       	add	r14, r24
     64c:	f9 1e       	adc	r15, r25
     64e:	f7 01       	movw	r30, r14
     650:	80 81       	ld	r24, Z
     652:	91 81       	ldd	r25, Z+1	; 0x01
     654:	0e 94 ac 02 	call	0x558	; 0x558 <moveX>
        moveY(orderY[locaties]);
     658:	f7 01       	movw	r30, r14
     65a:	86 85       	ldd	r24, Z+14	; 0x0e
     65c:	97 85       	ldd	r25, Z+15	; 0x0f
     65e:	0e 94 cf 02 	call	0x59e	; 0x59e <moveY>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     662:	88 ee       	ldi	r24, 0xE8	; 232
     664:	93 e0       	ldi	r25, 0x03	; 3
     666:	0e 94 08 07 	call	0xe10	; 0xe10 <delay_ms>
        delay(1000);//wait 1 second
        updateDisplay(((locaties/arrayGrootte)*100),batteryPercentage(),logicsBot);
     66a:	0e 94 54 00 	call	0xa8	; 0xa8 <batteryPercentage>
     66e:	9c 01       	movw	r18, r24
     670:	c8 01       	movw	r24, r16
     672:	67 e0       	ldi	r22, 0x07	; 7
     674:	70 e0       	ldi	r23, 0x00	; 0
     676:	0e 94 a4 0c 	call	0x1948	; 0x1948 <__divmodhi4>
     67a:	cb 01       	movw	r24, r22
     67c:	42 e0       	ldi	r20, 0x02	; 2
     67e:	b9 01       	movw	r22, r18
     680:	24 e6       	ldi	r18, 0x64	; 100
     682:	fc 01       	movw	r30, r24
     684:	2e 9f       	mul	r18, r30
     686:	c0 01       	movw	r24, r0
     688:	2f 9f       	mul	r18, r31
     68a:	90 0d       	add	r25, r0
     68c:	11 24       	eor	r1, r1
     68e:	0e 94 5c 00 	call	0xb8	; 0xb8 <updateDisplay>
    int orderY[] = {8,6,3,5,2,0,8};

    int arrayGrootte = sizeof(orderX) / sizeof(orderX[0]);
    bubbleSort(orderX, orderY, arrayGrootte);

    for(int locaties = 0; locaties<arrayGrootte;locaties++)
     692:	0f 5f       	subi	r16, 0xFF	; 255
     694:	1f 4f       	sbci	r17, 0xFF	; 255
     696:	07 30       	cpi	r16, 0x07	; 7
     698:	11 05       	cpc	r17, r1
     69a:	84 f2       	brlt	.-96     	; 0x63c <warehouse+0x58>
        moveX(orderX[locaties]);
        moveY(orderY[locaties]);
        delay(1000);//wait 1 second
        updateDisplay(((locaties/arrayGrootte)*100),batteryPercentage(),logicsBot);
    }
    moveY(0);
     69c:	80 e0       	ldi	r24, 0x00	; 0
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	0e 94 cf 02 	call	0x59e	; 0x59e <moveY>
    moveX(0);
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	0e 94 ac 02 	call	0x558	; 0x558 <moveX>
    //goHome();
}
     6ac:	6c 96       	adiw	r28, 0x1c	; 28
     6ae:	0f b6       	in	r0, 0x3f	; 63
     6b0:	f8 94       	cli
     6b2:	de bf       	out	0x3e, r29	; 62
     6b4:	0f be       	out	0x3f, r0	; 63
     6b6:	cd bf       	out	0x3d, r28	; 61
     6b8:	df 91       	pop	r29
     6ba:	cf 91       	pop	r28
     6bc:	1f 91       	pop	r17
     6be:	0f 91       	pop	r16
     6c0:	ff 90       	pop	r15
     6c2:	ef 90       	pop	r14
     6c4:	08 95       	ret

000006c6 <_ZN15OrangutanAnalog7setModeEh.part.0>:
     6c6:	ec e7       	ldi	r30, 0x7C	; 124
     6c8:	f0 e0       	ldi	r31, 0x00	; 0
     6ca:	80 81       	ld	r24, Z
     6cc:	8f 7d       	andi	r24, 0xDF	; 223
     6ce:	80 83       	st	Z, r24
     6d0:	08 95       	ret

000006d2 <_ZN15OrangutanAnalog7setModeEh>:
     6d2:	81 11       	cpse	r24, r1
     6d4:	03 c0       	rjmp	.+6      	; 0x6dc <_ZN15OrangutanAnalog7setModeEh+0xa>
     6d6:	0e 94 63 03 	call	0x6c6	; 0x6c6 <_ZN15OrangutanAnalog7setModeEh.part.0>
     6da:	08 95       	ret
     6dc:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     6e0:	80 62       	ori	r24, 0x20	; 32
     6e2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     6e6:	08 95       	ret

000006e8 <_ZN15OrangutanAnalog7getModeEv>:
     6e8:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     6ec:	85 fb       	bst	r24, 5
     6ee:	88 27       	eor	r24, r24
     6f0:	80 f9       	bld	r24, 0
     6f2:	08 95       	ret

000006f4 <_ZN15OrangutanAnalog16conversionResultEv>:
     6f4:	0e 94 74 03 	call	0x6e8	; 0x6e8 <_ZN15OrangutanAnalog7getModeEv>
     6f8:	88 23       	and	r24, r24
     6fa:	21 f0       	breq	.+8      	; 0x704 <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     6fc:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     700:	90 e0       	ldi	r25, 0x00	; 0
     702:	08 95       	ret
     704:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     708:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     70c:	08 95       	ret

0000070e <_ZN15OrangutanAnalog15startConversionEhh>:
     70e:	80 32       	cpi	r24, 0x20	; 32
     710:	a0 f4       	brcc	.+40     	; 0x73a <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
     712:	97 e8       	ldi	r25, 0x87	; 135
     714:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     718:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     71c:	66 23       	and	r22, r22
     71e:	11 f0       	breq	.+4      	; 0x724 <_ZN15OrangutanAnalog15startConversionEhh+0x16>
     720:	90 6c       	ori	r25, 0xC0	; 192
     722:	02 c0       	rjmp	.+4      	; 0x728 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
     724:	9f 77       	andi	r25, 0x7F	; 127
     726:	90 64       	ori	r25, 0x40	; 64
     728:	90 7e       	andi	r25, 0xE0	; 224
     72a:	98 2b       	or	r25, r24
     72c:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     730:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     734:	80 64       	ori	r24, 0x40	; 64
     736:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     73a:	08 95       	ret

0000073c <_ZN15OrangutanAnalog11readAverageEhj>:
     73c:	a0 e0       	ldi	r26, 0x00	; 0
     73e:	b0 e0       	ldi	r27, 0x00	; 0
     740:	e4 ea       	ldi	r30, 0xA4	; 164
     742:	f3 e0       	ldi	r31, 0x03	; 3
     744:	0c 94 2b 0d 	jmp	0x1a56	; 0x1a56 <__prologue_saves__+0x14>
     748:	eb 01       	movw	r28, r22
     74a:	60 e0       	ldi	r22, 0x00	; 0
     74c:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN15OrangutanAnalog15startConversionEhh>
     750:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     754:	86 fd       	sbrc	r24, 6
     756:	fc cf       	rjmp	.-8      	; 0x750 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
     758:	8e 01       	movw	r16, r28
     75a:	c1 2c       	mov	r12, r1
     75c:	d1 2c       	mov	r13, r1
     75e:	76 01       	movw	r14, r12
     760:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     764:	80 64       	ori	r24, 0x40	; 64
     766:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     76a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     76e:	86 fd       	sbrc	r24, 6
     770:	fc cf       	rjmp	.-8      	; 0x76a <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
     772:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <_ZN15OrangutanAnalog16conversionResultEv>
     776:	c8 0e       	add	r12, r24
     778:	d9 1e       	adc	r13, r25
     77a:	e1 1c       	adc	r14, r1
     77c:	f1 1c       	adc	r15, r1
     77e:	01 50       	subi	r16, 0x01	; 1
     780:	11 09       	sbc	r17, r1
     782:	01 15       	cp	r16, r1
     784:	11 05       	cpc	r17, r1
     786:	61 f7       	brne	.-40     	; 0x760 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
     788:	ce 01       	movw	r24, r28
     78a:	96 95       	lsr	r25
     78c:	87 95       	ror	r24
     78e:	c0 34       	cpi	r28, 0x40	; 64
     790:	d1 05       	cpc	r29, r1
     792:	38 f4       	brcc	.+14     	; 0x7a2 <_ZN15OrangutanAnalog11readAverageEhj+0x66>
     794:	8c 0d       	add	r24, r12
     796:	9d 1d       	adc	r25, r13
     798:	be 01       	movw	r22, r28
     79a:	0e 94 90 0c 	call	0x1920	; 0x1920 <__udivmodhi4>
     79e:	cb 01       	movw	r24, r22
     7a0:	0e c0       	rjmp	.+28     	; 0x7be <_ZN15OrangutanAnalog11readAverageEhj+0x82>
     7a2:	a7 01       	movw	r20, r14
     7a4:	96 01       	movw	r18, r12
     7a6:	28 0f       	add	r18, r24
     7a8:	39 1f       	adc	r19, r25
     7aa:	41 1d       	adc	r20, r1
     7ac:	51 1d       	adc	r21, r1
     7ae:	ca 01       	movw	r24, r20
     7b0:	b9 01       	movw	r22, r18
     7b2:	9e 01       	movw	r18, r28
     7b4:	40 e0       	ldi	r20, 0x00	; 0
     7b6:	50 e0       	ldi	r21, 0x00	; 0
     7b8:	0e 94 b8 0c 	call	0x1970	; 0x1970 <__udivmodsi4>
     7bc:	c9 01       	movw	r24, r18
     7be:	cd b7       	in	r28, 0x3d	; 61
     7c0:	de b7       	in	r29, 0x3e	; 62
     7c2:	e8 e0       	ldi	r30, 0x08	; 8
     7c4:	0c 94 47 0d 	jmp	0x1a8e	; 0x1a8e <__epilogue_restores__+0x14>

000007c8 <_ZN15OrangutanAnalog12toMillivoltsEj>:
     7c8:	cf 92       	push	r12
     7ca:	df 92       	push	r13
     7cc:	ef 92       	push	r14
     7ce:	ff 92       	push	r15
     7d0:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7d4:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7d8:	9c 01       	movw	r18, r24
     7da:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <__umulhisi3>
     7de:	6b 01       	movw	r12, r22
     7e0:	7c 01       	movw	r14, r24
     7e2:	0e 94 74 03 	call	0x6e8	; 0x6e8 <_ZN15OrangutanAnalog7getModeEv>
     7e6:	88 23       	and	r24, r24
     7e8:	59 f0       	breq	.+22     	; 0x800 <__DATA_REGION_LENGTH__>
     7ea:	c7 01       	movw	r24, r14
     7ec:	b6 01       	movw	r22, r12
     7ee:	61 58       	subi	r22, 0x81	; 129
     7f0:	7f 4f       	sbci	r23, 0xFF	; 255
     7f2:	8f 4f       	sbci	r24, 0xFF	; 255
     7f4:	9f 4f       	sbci	r25, 0xFF	; 255
     7f6:	2f ef       	ldi	r18, 0xFF	; 255
     7f8:	30 e0       	ldi	r19, 0x00	; 0
     7fa:	40 e0       	ldi	r20, 0x00	; 0
     7fc:	50 e0       	ldi	r21, 0x00	; 0
     7fe:	0a c0       	rjmp	.+20     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     800:	c7 01       	movw	r24, r14
     802:	b6 01       	movw	r22, r12
     804:	61 50       	subi	r22, 0x01	; 1
     806:	7e 4f       	sbci	r23, 0xFE	; 254
     808:	8f 4f       	sbci	r24, 0xFF	; 255
     80a:	9f 4f       	sbci	r25, 0xFF	; 255
     80c:	2f ef       	ldi	r18, 0xFF	; 255
     80e:	33 e0       	ldi	r19, 0x03	; 3
     810:	40 e0       	ldi	r20, 0x00	; 0
     812:	50 e0       	ldi	r21, 0x00	; 0
     814:	0e 94 b8 0c 	call	0x1970	; 0x1970 <__udivmodsi4>
     818:	c9 01       	movw	r24, r18
     81a:	ff 90       	pop	r15
     81c:	ef 90       	pop	r14
     81e:	df 90       	pop	r13
     820:	cf 90       	pop	r12
     822:	08 95       	ret

00000824 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
     824:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN15OrangutanAnalog11readAverageEhj>
     828:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <_ZN15OrangutanAnalog12toMillivoltsEj>
     82c:	08 95       	ret

0000082e <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
     82e:	1f 93       	push	r17
     830:	cf 93       	push	r28
     832:	df 93       	push	r29
     834:	0e 94 74 03 	call	0x6e8	; 0x6e8 <_ZN15OrangutanAnalog7getModeEv>
     838:	18 2f       	mov	r17, r24
     83a:	0e 94 63 03 	call	0x6c6	; 0x6c6 <_ZN15OrangutanAnalog7setModeEh.part.0>
     83e:	6a e0       	ldi	r22, 0x0A	; 10
     840:	70 e0       	ldi	r23, 0x00	; 0
     842:	86 e0       	ldi	r24, 0x06	; 6
     844:	0e 94 12 04 	call	0x824	; 0x824 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
     848:	ec 01       	movw	r28, r24
     84a:	81 2f       	mov	r24, r17
     84c:	0e 94 69 03 	call	0x6d2	; 0x6d2 <_ZN15OrangutanAnalog7setModeEh>
     850:	ce 01       	movw	r24, r28
     852:	88 0f       	add	r24, r24
     854:	99 1f       	adc	r25, r25
     856:	8c 0f       	add	r24, r28
     858:	9d 1f       	adc	r25, r29
     85a:	01 96       	adiw	r24, 0x01	; 1
     85c:	96 95       	lsr	r25
     85e:	87 95       	ror	r24
     860:	df 91       	pop	r29
     862:	cf 91       	pop	r28
     864:	1f 91       	pop	r17
     866:	08 95       	ret

00000868 <read_battery_millivolts_3pi>:
     868:	0e 94 17 04 	call	0x82e	; 0x82e <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
     86c:	08 95       	ret

0000086e <delay_us.constprop.0>:
     86e:	81 e0       	ldi	r24, 0x01	; 1
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	6f 93       	push	r22
     874:	64 e0       	ldi	r22, 0x04	; 4
     876:	6a 95       	dec	r22
     878:	f1 f7       	brne	.-4      	; 0x876 <delay_us.constprop.0+0x8>
     87a:	6f 91       	pop	r22
     87c:	01 97       	sbiw	r24, 0x01	; 1
     87e:	c9 f7       	brne	.-14     	; 0x872 <delay_us.constprop.0+0x4>
     880:	08 95       	ret

00000882 <_ZN12OrangutanLCD8busyWaitEv>:
     882:	0f 93       	push	r16
     884:	1f 93       	push	r17
     886:	cf 93       	push	r28
     888:	df 93       	push	r29
     88a:	1a b1       	in	r17, 0x0a	; 10
     88c:	57 98       	cbi	0x0a, 7	; 10
     88e:	5a 98       	cbi	0x0b, 2	; 11
     890:	28 9a       	sbi	0x05, 0	; 5
     892:	c0 e0       	ldi	r28, 0x00	; 0
     894:	d0 e0       	ldi	r29, 0x00	; 0
     896:	0e 94 37 04 	call	0x86e	; 0x86e <delay_us.constprop.0>
     89a:	5c 9a       	sbi	0x0b, 4	; 11
     89c:	0e 94 37 04 	call	0x86e	; 0x86e <delay_us.constprop.0>
     8a0:	09 b1       	in	r16, 0x09	; 9
     8a2:	5c 98       	cbi	0x0b, 4	; 11
     8a4:	0e 94 37 04 	call	0x86e	; 0x86e <delay_us.constprop.0>
     8a8:	5c 9a       	sbi	0x0b, 4	; 11
     8aa:	0e 94 37 04 	call	0x86e	; 0x86e <delay_us.constprop.0>
     8ae:	5c 98       	cbi	0x0b, 4	; 11
     8b0:	24 96       	adiw	r28, 0x04	; 4
     8b2:	07 ff       	sbrs	r16, 7
     8b4:	10 c0       	rjmp	.+32     	; 0x8d6 <_ZN12OrangutanLCD8busyWaitEv+0x54>
     8b6:	ae 01       	movw	r20, r28
     8b8:	60 e0       	ldi	r22, 0x00	; 0
     8ba:	70 e0       	ldi	r23, 0x00	; 0
     8bc:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__data_end>
     8c0:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <__data_end+0x1>
     8c4:	a0 91 44 01 	lds	r26, 0x0144	; 0x800144 <__data_end+0x2>
     8c8:	b0 91 45 01 	lds	r27, 0x0145	; 0x800145 <__data_end+0x3>
     8cc:	48 17       	cp	r20, r24
     8ce:	59 07       	cpc	r21, r25
     8d0:	6a 07       	cpc	r22, r26
     8d2:	7b 07       	cpc	r23, r27
     8d4:	00 f3       	brcs	.-64     	; 0x896 <_ZN12OrangutanLCD8busyWaitEv+0x14>
     8d6:	1a b9       	out	0x0a, r17	; 10
     8d8:	df 91       	pop	r29
     8da:	cf 91       	pop	r28
     8dc:	1f 91       	pop	r17
     8de:	0f 91       	pop	r16
     8e0:	08 95       	ret

000008e2 <_ZN12OrangutanLCD8sendDataEh>:
     8e2:	95 b1       	in	r25, 0x05	; 5
     8e4:	28 2f       	mov	r18, r24
     8e6:	21 70       	andi	r18, 0x01	; 1
     8e8:	30 e0       	ldi	r19, 0x00	; 0
     8ea:	22 0f       	add	r18, r18
     8ec:	33 1f       	adc	r19, r19
     8ee:	48 2f       	mov	r20, r24
     8f0:	46 70       	andi	r20, 0x06	; 6
     8f2:	68 e0       	ldi	r22, 0x08	; 8
     8f4:	46 9f       	mul	r20, r22
     8f6:	a0 01       	movw	r20, r0
     8f8:	11 24       	eor	r1, r1
     8fa:	24 2b       	or	r18, r20
     8fc:	9d 7c       	andi	r25, 0xCD	; 205
     8fe:	29 2b       	or	r18, r25
     900:	25 b9       	out	0x05, r18	; 5
     902:	9b b1       	in	r25, 0x0b	; 11
     904:	88 70       	andi	r24, 0x08	; 8
     906:	82 95       	swap	r24
     908:	80 7f       	andi	r24, 0xF0	; 240
     90a:	9f 77       	andi	r25, 0x7F	; 127
     90c:	89 2b       	or	r24, r25
     90e:	8b b9       	out	0x0b, r24	; 11
     910:	5c 9a       	sbi	0x0b, 4	; 11
     912:	0e 94 37 04 	call	0x86e	; 0x86e <delay_us.constprop.0>
     916:	5c 98       	cbi	0x0b, 4	; 11
     918:	0e 94 37 04 	call	0x86e	; 0x86e <delay_us.constprop.0>
     91c:	08 95       	ret

0000091e <_ZN12OrangutanLCD4sendEhhh>:
     91e:	a0 e0       	ldi	r26, 0x00	; 0
     920:	b0 e0       	ldi	r27, 0x00	; 0
     922:	e5 e9       	ldi	r30, 0x95	; 149
     924:	f4 e0       	ldi	r31, 0x04	; 4
     926:	0c 94 2c 0d 	jmp	0x1a58	; 0x1a58 <__prologue_saves__+0x16>
     92a:	c8 2f       	mov	r28, r24
     92c:	d6 2e       	mov	r13, r22
     92e:	e4 2e       	mov	r14, r20
     930:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <_ZZN12OrangutanLCD4initEvE11initialized>
     934:	81 11       	cpse	r24, r1
     936:	05 c0       	rjmp	.+10     	; 0x942 <_ZN12OrangutanLCD4sendEhhh+0x24>
     938:	81 e0       	ldi	r24, 0x01	; 1
     93a:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <_ZZN12OrangutanLCD4initEvE11initialized>
     93e:	0e 94 d5 04 	call	0x9aa	; 0x9aa <_ZN12OrangutanLCD5init2Ev>
     942:	0e 94 41 04 	call	0x882	; 0x882 <_ZN12OrangutanLCD8busyWaitEv>
     946:	14 b1       	in	r17, 0x04	; 4
     948:	d5 b1       	in	r29, 0x05	; 5
     94a:	fa b0       	in	r15, 0x0a	; 10
     94c:	0b b1       	in	r16, 0x0b	; 11
     94e:	28 98       	cbi	0x05, 0	; 5
     950:	dd 20       	and	r13, r13
     952:	11 f0       	breq	.+4      	; 0x958 <_ZN12OrangutanLCD4sendEhhh+0x3a>
     954:	5a 9a       	sbi	0x0b, 2	; 11
     956:	01 c0       	rjmp	.+2      	; 0x95a <_ZN12OrangutanLCD4sendEhhh+0x3c>
     958:	5a 98       	cbi	0x0b, 2	; 11
     95a:	94 b1       	in	r25, 0x04	; 4
     95c:	92 63       	ori	r25, 0x32	; 50
     95e:	94 b9       	out	0x04, r25	; 4
     960:	57 9a       	sbi	0x0a, 7	; 10
     962:	81 e0       	ldi	r24, 0x01	; 1
     964:	e8 16       	cp	r14, r24
     966:	29 f0       	breq	.+10     	; 0x972 <_ZN12OrangutanLCD4sendEhhh+0x54>
     968:	8c 2f       	mov	r24, r28
     96a:	82 95       	swap	r24
     96c:	8f 70       	andi	r24, 0x0F	; 15
     96e:	0e 94 71 04 	call	0x8e2	; 0x8e2 <_ZN12OrangutanLCD8sendDataEh>
     972:	8c 2f       	mov	r24, r28
     974:	8f 70       	andi	r24, 0x0F	; 15
     976:	0e 94 71 04 	call	0x8e2	; 0x8e2 <_ZN12OrangutanLCD8sendDataEh>
     97a:	fa b8       	out	0x0a, r15	; 10
     97c:	0b b9       	out	0x0b, r16	; 11
     97e:	14 b9       	out	0x04, r17	; 4
     980:	d5 b9       	out	0x05, r29	; 5
     982:	cd b7       	in	r28, 0x3d	; 61
     984:	de b7       	in	r29, 0x3e	; 62
     986:	e7 e0       	ldi	r30, 0x07	; 7
     988:	0c 94 48 0d 	jmp	0x1a90	; 0x1a90 <__epilogue_restores__+0x16>

0000098c <_ZN12OrangutanLCD8send_cmdEh>:
     98c:	42 e0       	ldi	r20, 0x02	; 2
     98e:	60 e0       	ldi	r22, 0x00	; 0
     990:	0e 94 8f 04 	call	0x91e	; 0x91e <_ZN12OrangutanLCD4sendEhhh>
     994:	08 95       	ret

00000996 <_ZN12OrangutanLCD9send_dataEh>:
     996:	42 e0       	ldi	r20, 0x02	; 2
     998:	61 e0       	ldi	r22, 0x01	; 1
     99a:	0e 94 8f 04 	call	0x91e	; 0x91e <_ZN12OrangutanLCD4sendEhhh>
     99e:	08 95       	ret

000009a0 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
     9a0:	41 e0       	ldi	r20, 0x01	; 1
     9a2:	60 e0       	ldi	r22, 0x00	; 0
     9a4:	0e 94 8f 04 	call	0x91e	; 0x91e <_ZN12OrangutanLCD4sendEhhh>
     9a8:	08 95       	ret

000009aa <_ZN12OrangutanLCD5init2Ev>:
     9aa:	80 e1       	ldi	r24, 0x10	; 16
     9ac:	97 e2       	ldi	r25, 0x27	; 39
     9ae:	a0 e0       	ldi	r26, 0x00	; 0
     9b0:	b0 e0       	ldi	r27, 0x00	; 0
     9b2:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__data_end>
     9b6:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <__data_end+0x1>
     9ba:	a0 93 44 01 	sts	0x0144, r26	; 0x800144 <__data_end+0x2>
     9be:	b0 93 45 01 	sts	0x0145, r27	; 0x800145 <__data_end+0x3>
     9c2:	52 9a       	sbi	0x0a, 2	; 10
     9c4:	20 9a       	sbi	0x04, 0	; 4
     9c6:	54 9a       	sbi	0x0a, 4	; 10
     9c8:	8e e1       	ldi	r24, 0x1E	; 30
     9ca:	90 e0       	ldi	r25, 0x00	; 0
     9cc:	0e 94 08 07 	call	0xe10	; 0xe10 <delay_ms>
     9d0:	83 e0       	ldi	r24, 0x03	; 3
     9d2:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     9d6:	86 e0       	ldi	r24, 0x06	; 6
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	0e 94 08 07 	call	0xe10	; 0xe10 <delay_ms>
     9de:	83 e0       	ldi	r24, 0x03	; 3
     9e0:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     9e4:	82 e0       	ldi	r24, 0x02	; 2
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	0e 94 08 07 	call	0xe10	; 0xe10 <delay_ms>
     9ec:	83 e0       	ldi	r24, 0x03	; 3
     9ee:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     9f2:	82 e0       	ldi	r24, 0x02	; 2
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	0e 94 08 07 	call	0xe10	; 0xe10 <delay_ms>
     9fa:	82 e0       	ldi	r24, 0x02	; 2
     9fc:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     a00:	82 e0       	ldi	r24, 0x02	; 2
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	0e 94 08 07 	call	0xe10	; 0xe10 <delay_ms>
     a08:	88 e2       	ldi	r24, 0x28	; 40
     a0a:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZN12OrangutanLCD8send_cmdEh>
     a0e:	88 e0       	ldi	r24, 0x08	; 8
     a10:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZN12OrangutanLCD8send_cmdEh>
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZN12OrangutanLCD8send_cmdEh>
     a1a:	86 e0       	ldi	r24, 0x06	; 6
     a1c:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZN12OrangutanLCD8send_cmdEh>
     a20:	8c e0       	ldi	r24, 0x0C	; 12
     a22:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZN12OrangutanLCD8send_cmdEh>
     a26:	08 95       	ret

00000a28 <_ZN12OrangutanLCD5clearEv>:
     a28:	81 e0       	ldi	r24, 0x01	; 1
     a2a:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZN12OrangutanLCD8send_cmdEh>
     a2e:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <printf_chars>
     a32:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <printf_chars+0x1>
     a36:	89 2b       	or	r24, r25
     a38:	f9 f0       	breq	.+62     	; 0xa78 <_ZN12OrangutanLCD5clearEv+0x50>
     a3a:	60 e0       	ldi	r22, 0x00	; 0
     a3c:	a0 e2       	ldi	r26, 0x20	; 32
     a3e:	26 2f       	mov	r18, r22
     a40:	30 e0       	ldi	r19, 0x00	; 0
     a42:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <numLCDCols>
     a46:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <numLCDRows>
     a4a:	90 e0       	ldi	r25, 0x00	; 0
     a4c:	01 97       	sbiw	r24, 0x01	; 1
     a4e:	78 9f       	mul	r23, r24
     a50:	a0 01       	movw	r20, r0
     a52:	79 9f       	mul	r23, r25
     a54:	50 0d       	add	r21, r0
     a56:	11 24       	eor	r1, r1
     a58:	24 17       	cp	r18, r20
     a5a:	35 07       	cpc	r19, r21
     a5c:	4c f4       	brge	.+18     	; 0xa70 <_ZN12OrangutanLCD5clearEv+0x48>
     a5e:	e0 91 48 01 	lds	r30, 0x0148	; 0x800148 <printf_chars>
     a62:	f0 91 49 01 	lds	r31, 0x0149	; 0x800149 <printf_chars+0x1>
     a66:	e2 0f       	add	r30, r18
     a68:	f3 1f       	adc	r31, r19
     a6a:	a0 83       	st	Z, r26
     a6c:	6f 5f       	subi	r22, 0xFF	; 255
     a6e:	e7 cf       	rjmp	.-50     	; 0xa3e <_ZN12OrangutanLCD5clearEv+0x16>
     a70:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <col>
     a74:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <row>
     a78:	08 95       	ret

00000a7a <clear>:
     a7a:	0e 94 14 05 	call	0xa28	; 0xa28 <_ZN12OrangutanLCD5clearEv>
     a7e:	08 95       	ret

00000a80 <_ZN12OrangutanLCD5printEPKc>:
     a80:	cf 93       	push	r28
     a82:	df 93       	push	r29
     a84:	ec 01       	movw	r28, r24
     a86:	89 91       	ld	r24, Y+
     a88:	88 23       	and	r24, r24
     a8a:	19 f0       	breq	.+6      	; 0xa92 <_ZN12OrangutanLCD5printEPKc+0x12>
     a8c:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD9send_dataEh>
     a90:	fa cf       	rjmp	.-12     	; 0xa86 <_ZN12OrangutanLCD5printEPKc+0x6>
     a92:	df 91       	pop	r29
     a94:	cf 91       	pop	r28
     a96:	08 95       	ret

00000a98 <print>:
     a98:	0e 94 40 05 	call	0xa80	; 0xa80 <_ZN12OrangutanLCD5printEPKc>
     a9c:	08 95       	ret

00000a9e <_ZN12OrangutanLCD5printEm>:
     a9e:	aa e0       	ldi	r26, 0x0A	; 10
     aa0:	b0 e0       	ldi	r27, 0x00	; 0
     aa2:	e5 e5       	ldi	r30, 0x55	; 85
     aa4:	f5 e0       	ldi	r31, 0x05	; 5
     aa6:	0c 94 2b 0d 	jmp	0x1a56	; 0x1a56 <__prologue_saves__+0x14>
     aaa:	1a e0       	ldi	r17, 0x0A	; 10
     aac:	5a e0       	ldi	r21, 0x0A	; 10
     aae:	c5 2e       	mov	r12, r21
     ab0:	d1 2c       	mov	r13, r1
     ab2:	e1 2c       	mov	r14, r1
     ab4:	f1 2c       	mov	r15, r1
     ab6:	06 2f       	mov	r16, r22
     ab8:	a7 01       	movw	r20, r14
     aba:	96 01       	movw	r18, r12
     abc:	0e 94 b8 0c 	call	0x1970	; 0x1970 <__udivmodsi4>
     ac0:	ca 01       	movw	r24, r20
     ac2:	b9 01       	movw	r22, r18
     ac4:	11 50       	subi	r17, 0x01	; 1
     ac6:	e1 e0       	ldi	r30, 0x01	; 1
     ac8:	f0 e0       	ldi	r31, 0x00	; 0
     aca:	ec 0f       	add	r30, r28
     acc:	fd 1f       	adc	r31, r29
     ace:	e1 0f       	add	r30, r17
     ad0:	f1 1d       	adc	r31, r1
     ad2:	00 5d       	subi	r16, 0xD0	; 208
     ad4:	2a e0       	ldi	r18, 0x0A	; 10
     ad6:	62 9f       	mul	r22, r18
     ad8:	00 19       	sub	r16, r0
     ada:	11 24       	eor	r1, r1
     adc:	00 83       	st	Z, r16
     ade:	61 15       	cp	r22, r1
     ae0:	71 05       	cpc	r23, r1
     ae2:	81 05       	cpc	r24, r1
     ae4:	91 05       	cpc	r25, r1
     ae6:	39 f7       	brne	.-50     	; 0xab6 <_ZN12OrangutanLCD5printEm+0x18>
     ae8:	1a 30       	cpi	r17, 0x0A	; 10
     aea:	58 f4       	brcc	.+22     	; 0xb02 <_ZN12OrangutanLCD5printEm+0x64>
     aec:	e1 e0       	ldi	r30, 0x01	; 1
     aee:	f0 e0       	ldi	r31, 0x00	; 0
     af0:	ec 0f       	add	r30, r28
     af2:	fd 1f       	adc	r31, r29
     af4:	e1 0f       	add	r30, r17
     af6:	f1 1d       	adc	r31, r1
     af8:	80 81       	ld	r24, Z
     afa:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD9send_dataEh>
     afe:	1f 5f       	subi	r17, 0xFF	; 255
     b00:	f3 cf       	rjmp	.-26     	; 0xae8 <_ZN12OrangutanLCD5printEm+0x4a>
     b02:	2a 96       	adiw	r28, 0x0a	; 10
     b04:	e8 e0       	ldi	r30, 0x08	; 8
     b06:	0c 94 47 0d 	jmp	0x1a8e	; 0x1a8e <__epilogue_restores__+0x14>

00000b0a <_ZN12OrangutanLCD5printEl>:
     b0a:	cf 92       	push	r12
     b0c:	df 92       	push	r13
     b0e:	ef 92       	push	r14
     b10:	ff 92       	push	r15
     b12:	6b 01       	movw	r12, r22
     b14:	7c 01       	movw	r14, r24
     b16:	97 ff       	sbrs	r25, 7
     b18:	0b c0       	rjmp	.+22     	; 0xb30 <_ZN12OrangutanLCD5printEl+0x26>
     b1a:	f0 94       	com	r15
     b1c:	e0 94       	com	r14
     b1e:	d0 94       	com	r13
     b20:	c0 94       	com	r12
     b22:	c1 1c       	adc	r12, r1
     b24:	d1 1c       	adc	r13, r1
     b26:	e1 1c       	adc	r14, r1
     b28:	f1 1c       	adc	r15, r1
     b2a:	8d e2       	ldi	r24, 0x2D	; 45
     b2c:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD9send_dataEh>
     b30:	c7 01       	movw	r24, r14
     b32:	b6 01       	movw	r22, r12
     b34:	0e 94 4f 05 	call	0xa9e	; 0xa9e <_ZN12OrangutanLCD5printEm>
     b38:	ff 90       	pop	r15
     b3a:	ef 90       	pop	r14
     b3c:	df 90       	pop	r13
     b3e:	cf 90       	pop	r12
     b40:	08 95       	ret

00000b42 <print_long>:
     b42:	0e 94 85 05 	call	0xb0a	; 0xb0a <_ZN12OrangutanLCD5printEl>
     b46:	08 95       	ret

00000b48 <_ZN12OrangutanLCD6gotoXYEhh>:
     b48:	a5 e0       	ldi	r26, 0x05	; 5
     b4a:	b0 e0       	ldi	r27, 0x00	; 0
     b4c:	ea ea       	ldi	r30, 0xAA	; 170
     b4e:	f5 e0       	ldi	r31, 0x05	; 5
     b50:	0c 94 30 0d 	jmp	0x1a60	; 0x1a60 <__prologue_saves__+0x1e>
     b54:	18 2f       	mov	r17, r24
     b56:	80 e8       	ldi	r24, 0x80	; 128
     b58:	89 83       	std	Y+1, r24	; 0x01
     b5a:	80 ec       	ldi	r24, 0xC0	; 192
     b5c:	8a 83       	std	Y+2, r24	; 0x02
     b5e:	84 e9       	ldi	r24, 0x94	; 148
     b60:	8b 83       	std	Y+3, r24	; 0x03
     b62:	84 ed       	ldi	r24, 0xD4	; 212
     b64:	8c 83       	std	Y+4, r24	; 0x04
     b66:	fe 01       	movw	r30, r28
     b68:	e6 0f       	add	r30, r22
     b6a:	f1 1d       	adc	r31, r1
     b6c:	81 81       	ldd	r24, Z+1	; 0x01
     b6e:	81 0f       	add	r24, r17
     b70:	6d 83       	std	Y+5, r22	; 0x05
     b72:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZN12OrangutanLCD8send_cmdEh>
     b76:	10 93 46 01 	sts	0x0146, r17	; 0x800146 <col>
     b7a:	6d 81       	ldd	r22, Y+5	; 0x05
     b7c:	60 93 47 01 	sts	0x0147, r22	; 0x800147 <row>
     b80:	25 96       	adiw	r28, 0x05	; 5
     b82:	e3 e0       	ldi	r30, 0x03	; 3
     b84:	0c 94 4c 0d 	jmp	0x1a98	; 0x1a98 <__epilogue_restores__+0x1e>

00000b88 <lcd_goto_xy>:
     b88:	0e 94 a4 05 	call	0xb48	; 0xb48 <_ZN12OrangutanLCD6gotoXYEhh>
     b8c:	08 95       	ret

00000b8e <_ZN16OrangutanDigital9setOutputEhh>:
     b8e:	88 30       	cpi	r24, 0x08	; 8
     b90:	58 f4       	brcc	.+22     	; 0xba8 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
     b92:	91 e0       	ldi	r25, 0x01	; 1
     b94:	01 c0       	rjmp	.+2      	; 0xb98 <_ZN16OrangutanDigital9setOutputEhh+0xa>
     b96:	99 0f       	add	r25, r25
     b98:	8a 95       	dec	r24
     b9a:	ea f7       	brpl	.-6      	; 0xb96 <_ZN16OrangutanDigital9setOutputEhh+0x8>
     b9c:	89 2f       	mov	r24, r25
     b9e:	aa e2       	ldi	r26, 0x2A	; 42
     ba0:	b0 e0       	ldi	r27, 0x00	; 0
     ba2:	eb e2       	ldi	r30, 0x2B	; 43
     ba4:	f0 e0       	ldi	r31, 0x00	; 0
     ba6:	21 c0       	rjmp	.+66     	; 0xbea <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     ba8:	8e 30       	cpi	r24, 0x0E	; 14
     baa:	60 f4       	brcc	.+24     	; 0xbc4 <_ZN16OrangutanDigital9setOutputEhh+0x36>
     bac:	98 ef       	ldi	r25, 0xF8	; 248
     bae:	98 0f       	add	r25, r24
     bb0:	81 e0       	ldi	r24, 0x01	; 1
     bb2:	01 c0       	rjmp	.+2      	; 0xbb6 <_ZN16OrangutanDigital9setOutputEhh+0x28>
     bb4:	88 0f       	add	r24, r24
     bb6:	9a 95       	dec	r25
     bb8:	ea f7       	brpl	.-6      	; 0xbb4 <_ZN16OrangutanDigital9setOutputEhh+0x26>
     bba:	a4 e2       	ldi	r26, 0x24	; 36
     bbc:	b0 e0       	ldi	r27, 0x00	; 0
     bbe:	e5 e2       	ldi	r30, 0x25	; 37
     bc0:	f0 e0       	ldi	r31, 0x00	; 0
     bc2:	13 c0       	rjmp	.+38     	; 0xbea <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     bc4:	85 31       	cpi	r24, 0x15	; 21
     bc6:	60 f4       	brcc	.+24     	; 0xbe0 <_ZN16OrangutanDigital9setOutputEhh+0x52>
     bc8:	92 ef       	ldi	r25, 0xF2	; 242
     bca:	98 0f       	add	r25, r24
     bcc:	81 e0       	ldi	r24, 0x01	; 1
     bce:	01 c0       	rjmp	.+2      	; 0xbd2 <_ZN16OrangutanDigital9setOutputEhh+0x44>
     bd0:	88 0f       	add	r24, r24
     bd2:	9a 95       	dec	r25
     bd4:	ea f7       	brpl	.-6      	; 0xbd0 <_ZN16OrangutanDigital9setOutputEhh+0x42>
     bd6:	a7 e2       	ldi	r26, 0x27	; 39
     bd8:	b0 e0       	ldi	r27, 0x00	; 0
     bda:	e8 e2       	ldi	r30, 0x28	; 40
     bdc:	f0 e0       	ldi	r31, 0x00	; 0
     bde:	05 c0       	rjmp	.+10     	; 0xbea <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     be0:	80 e0       	ldi	r24, 0x00	; 0
     be2:	a0 e0       	ldi	r26, 0x00	; 0
     be4:	b0 e0       	ldi	r27, 0x00	; 0
     be6:	e0 e0       	ldi	r30, 0x00	; 0
     be8:	f0 e0       	ldi	r31, 0x00	; 0
     bea:	6f 3f       	cpi	r22, 0xFF	; 255
     bec:	19 f4       	brne	.+6      	; 0xbf4 <_ZN16OrangutanDigital9setOutputEhh+0x66>
     bee:	90 81       	ld	r25, Z
     bf0:	98 27       	eor	r25, r24
     bf2:	09 c0       	rjmp	.+18     	; 0xc06 <_ZN16OrangutanDigital9setOutputEhh+0x78>
     bf4:	66 23       	and	r22, r22
     bf6:	19 f0       	breq	.+6      	; 0xbfe <_ZN16OrangutanDigital9setOutputEhh+0x70>
     bf8:	90 81       	ld	r25, Z
     bfa:	98 2b       	or	r25, r24
     bfc:	04 c0       	rjmp	.+8      	; 0xc06 <_ZN16OrangutanDigital9setOutputEhh+0x78>
     bfe:	20 81       	ld	r18, Z
     c00:	98 2f       	mov	r25, r24
     c02:	90 95       	com	r25
     c04:	92 23       	and	r25, r18
     c06:	90 83       	st	Z, r25
     c08:	9c 91       	ld	r25, X
     c0a:	98 2b       	or	r25, r24
     c0c:	9c 93       	st	X, r25
     c0e:	08 95       	ret

00000c10 <_ZN15OrangutanMotors5init2Ev>:
     c10:	83 ef       	ldi	r24, 0xF3	; 243
     c12:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     c16:	84 bd       	out	0x24, r24	; 36
     c18:	82 e0       	ldi	r24, 0x02	; 2
     c1a:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
     c1e:	85 bd       	out	0x25, r24	; 37
     c20:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     c24:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     c28:	18 bc       	out	0x28, r1	; 40
     c2a:	17 bc       	out	0x27, r1	; 39
     c2c:	60 e0       	ldi	r22, 0x00	; 0
     c2e:	86 e0       	ldi	r24, 0x06	; 6
     c30:	0e 94 c7 05 	call	0xb8e	; 0xb8e <_ZN16OrangutanDigital9setOutputEhh>
     c34:	60 e0       	ldi	r22, 0x00	; 0
     c36:	85 e0       	ldi	r24, 0x05	; 5
     c38:	0e 94 c7 05 	call	0xb8e	; 0xb8e <_ZN16OrangutanDigital9setOutputEhh>
     c3c:	60 e0       	ldi	r22, 0x00	; 0
     c3e:	8b e0       	ldi	r24, 0x0B	; 11
     c40:	0e 94 c7 05 	call	0xb8e	; 0xb8e <_ZN16OrangutanDigital9setOutputEhh>
     c44:	60 e0       	ldi	r22, 0x00	; 0
     c46:	83 e0       	ldi	r24, 0x03	; 3
     c48:	0e 94 c7 05 	call	0xb8e	; 0xb8e <_ZN16OrangutanDigital9setOutputEhh>
     c4c:	08 95       	ret

00000c4e <_ZN15OrangutanMotors4initEv>:
     c4e:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <_ZZN15OrangutanMotors4initEvE11initialized>
     c52:	81 11       	cpse	r24, r1
     c54:	05 c0       	rjmp	.+10     	; 0xc60 <_ZN15OrangutanMotors4initEv+0x12>
     c56:	81 e0       	ldi	r24, 0x01	; 1
     c58:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <_ZZN15OrangutanMotors4initEvE11initialized>
     c5c:	0e 94 08 06 	call	0xc10	; 0xc10 <_ZN15OrangutanMotors5init2Ev>
     c60:	08 95       	ret

00000c62 <_ZN15OrangutanMotors10setM1SpeedEi>:
     c62:	cf 93       	push	r28
     c64:	df 93       	push	r29
     c66:	ec 01       	movw	r28, r24
     c68:	0e 94 27 06 	call	0xc4e	; 0xc4e <_ZN15OrangutanMotors4initEv>
     c6c:	d7 ff       	sbrs	r29, 7
     c6e:	05 c0       	rjmp	.+10     	; 0xc7a <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
     c70:	d1 95       	neg	r29
     c72:	c1 95       	neg	r28
     c74:	d1 09       	sbc	r29, r1
     c76:	81 e0       	ldi	r24, 0x01	; 1
     c78:	01 c0       	rjmp	.+2      	; 0xc7c <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
     c7a:	80 e0       	ldi	r24, 0x00	; 0
     c7c:	cf 3f       	cpi	r28, 0xFF	; 255
     c7e:	d1 05       	cpc	r29, r1
     c80:	19 f0       	breq	.+6      	; 0xc88 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     c82:	14 f0       	brlt	.+4      	; 0xc88 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     c84:	cf ef       	ldi	r28, 0xFF	; 255
     c86:	d0 e0       	ldi	r29, 0x00	; 0
     c88:	88 23       	and	r24, r24
     c8a:	19 f0       	breq	.+6      	; 0xc92 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
     c8c:	18 bc       	out	0x28, r1	; 40
     c8e:	c7 bd       	out	0x27, r28	; 39
     c90:	02 c0       	rjmp	.+4      	; 0xc96 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
     c92:	c8 bd       	out	0x28, r28	; 40
     c94:	17 bc       	out	0x27, r1	; 39
     c96:	df 91       	pop	r29
     c98:	cf 91       	pop	r28
     c9a:	08 95       	ret

00000c9c <_ZN15OrangutanMotors10setM2SpeedEi>:
     c9c:	cf 93       	push	r28
     c9e:	df 93       	push	r29
     ca0:	ec 01       	movw	r28, r24
     ca2:	0e 94 27 06 	call	0xc4e	; 0xc4e <_ZN15OrangutanMotors4initEv>
     ca6:	d7 ff       	sbrs	r29, 7
     ca8:	05 c0       	rjmp	.+10     	; 0xcb4 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
     caa:	d1 95       	neg	r29
     cac:	c1 95       	neg	r28
     cae:	d1 09       	sbc	r29, r1
     cb0:	81 e0       	ldi	r24, 0x01	; 1
     cb2:	01 c0       	rjmp	.+2      	; 0xcb6 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
     cb4:	80 e0       	ldi	r24, 0x00	; 0
     cb6:	cf 3f       	cpi	r28, 0xFF	; 255
     cb8:	d1 05       	cpc	r29, r1
     cba:	19 f0       	breq	.+6      	; 0xcc2 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     cbc:	14 f0       	brlt	.+4      	; 0xcc2 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     cbe:	cf ef       	ldi	r28, 0xFF	; 255
     cc0:	d0 e0       	ldi	r29, 0x00	; 0
     cc2:	88 23       	and	r24, r24
     cc4:	29 f0       	breq	.+10     	; 0xcd0 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
     cc6:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     cca:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     cce:	04 c0       	rjmp	.+8      	; 0xcd8 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
     cd0:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     cd4:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     cd8:	df 91       	pop	r29
     cda:	cf 91       	pop	r28
     cdc:	08 95       	ret

00000cde <_ZN15OrangutanMotors9setSpeedsEii>:
     cde:	cf 93       	push	r28
     ce0:	df 93       	push	r29
     ce2:	eb 01       	movw	r28, r22
     ce4:	0e 94 31 06 	call	0xc62	; 0xc62 <_ZN15OrangutanMotors10setM1SpeedEi>
     ce8:	ce 01       	movw	r24, r28
     cea:	0e 94 4e 06 	call	0xc9c	; 0xc9c <_ZN15OrangutanMotors10setM2SpeedEi>
     cee:	df 91       	pop	r29
     cf0:	cf 91       	pop	r28
     cf2:	08 95       	ret

00000cf4 <set_motors>:
     cf4:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN15OrangutanMotors9setSpeedsEii>
     cf8:	08 95       	ret

00000cfa <_ZN20OrangutanPushbuttons5init2Ev>:
     cfa:	84 b1       	in	r24, 0x04	; 4
     cfc:	8d 7c       	andi	r24, 0xCD	; 205
     cfe:	84 b9       	out	0x04, r24	; 4
     d00:	85 b1       	in	r24, 0x05	; 5
     d02:	82 63       	ori	r24, 0x32	; 50
     d04:	85 b9       	out	0x05, r24	; 5
     d06:	85 e0       	ldi	r24, 0x05	; 5
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	6f 93       	push	r22
     d0c:	64 e0       	ldi	r22, 0x04	; 4
     d0e:	6a 95       	dec	r22
     d10:	f1 f7       	brne	.-4      	; 0xd0e <_ZN20OrangutanPushbuttons5init2Ev+0x14>
     d12:	6f 91       	pop	r22
     d14:	01 97       	sbiw	r24, 0x01	; 1
     d16:	c9 f7       	brne	.-14     	; 0xd0a <_ZN20OrangutanPushbuttons5init2Ev+0x10>
     d18:	08 95       	ret

00000d1a <_ZN20OrangutanPushbuttons4initEv>:
     d1a:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <_ZZN20OrangutanPushbuttons4initEvE11initialized>
     d1e:	81 11       	cpse	r24, r1
     d20:	05 c0       	rjmp	.+10     	; 0xd2c <_ZN20OrangutanPushbuttons4initEv+0x12>
     d22:	81 e0       	ldi	r24, 0x01	; 1
     d24:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <_ZZN20OrangutanPushbuttons4initEvE11initialized>
     d28:	0e 94 7d 06 	call	0xcfa	; 0xcfa <_ZN20OrangutanPushbuttons5init2Ev>
     d2c:	08 95       	ret

00000d2e <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
     d2e:	cf 93       	push	r28
     d30:	c8 2f       	mov	r28, r24
     d32:	0e 94 8d 06 	call	0xd1a	; 0xd1a <_ZN20OrangutanPushbuttons4initEv>
     d36:	83 b1       	in	r24, 0x03	; 3
     d38:	8c 23       	and	r24, r28
     d3a:	e9 f3       	breq	.-6      	; 0xd36 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
     d3c:	8a e0       	ldi	r24, 0x0A	; 10
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	0e 94 08 07 	call	0xe10	; 0xe10 <delay_ms>
     d44:	83 b1       	in	r24, 0x03	; 3
     d46:	8c 23       	and	r24, r28
     d48:	b1 f3       	breq	.-20     	; 0xd36 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
     d4a:	83 b1       	in	r24, 0x03	; 3
     d4c:	8c 23       	and	r24, r28
     d4e:	cf 91       	pop	r28
     d50:	08 95       	ret

00000d52 <wait_for_button_release>:
     d52:	0e 94 97 06 	call	0xd2e	; 0xd2e <_ZN20OrangutanPushbuttons14waitForReleaseEh>
     d56:	08 95       	ret

00000d58 <_ZN20OrangutanPushbuttons9isPressedEh>:
     d58:	a1 e0       	ldi	r26, 0x01	; 1
     d5a:	b0 e0       	ldi	r27, 0x00	; 0
     d5c:	e2 eb       	ldi	r30, 0xB2	; 178
     d5e:	f6 e0       	ldi	r31, 0x06	; 6
     d60:	0c 94 31 0d 	jmp	0x1a62	; 0x1a62 <__prologue_saves__+0x20>
     d64:	89 83       	std	Y+1, r24	; 0x01
     d66:	0e 94 8d 06 	call	0xd1a	; 0xd1a <_ZN20OrangutanPushbuttons4initEv>
     d6a:	93 b1       	in	r25, 0x03	; 3
     d6c:	90 95       	com	r25
     d6e:	89 81       	ldd	r24, Y+1	; 0x01
     d70:	89 23       	and	r24, r25
     d72:	21 96       	adiw	r28, 0x01	; 1
     d74:	e2 e0       	ldi	r30, 0x02	; 2
     d76:	0c 94 4d 0d 	jmp	0x1a9a	; 0x1a9a <__epilogue_restores__+0x20>

00000d7a <button_is_pressed>:
     d7a:	0e 94 ac 06 	call	0xd58	; 0xd58 <_ZN20OrangutanPushbuttons9isPressedEh>
     d7e:	08 95       	ret

00000d80 <__vector_9>:
     d80:	2f 92       	push	r2
     d82:	8f 93       	push	r24
     d84:	9f 93       	push	r25
     d86:	2f b6       	in	r2, 0x3f	; 63
     d88:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <tickCount+0x1>
     d8c:	90 91 52 01 	lds	r25, 0x0152	; 0x800152 <tickCount+0x2>
     d90:	01 96       	adiw	r24, 0x01	; 1
     d92:	80 93 51 01 	sts	0x0151, r24	; 0x800151 <tickCount+0x1>
     d96:	90 93 52 01 	sts	0x0152, r25	; 0x800152 <tickCount+0x2>
     d9a:	90 e0       	ldi	r25, 0x00	; 0
     d9c:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <tickCount+0x3>
     da0:	89 1f       	adc	r24, r25
     da2:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <tickCount+0x3>
     da6:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <us_over_10+0x1>
     daa:	9c 5f       	subi	r25, 0xFC	; 252
     dac:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <us_over_10+0x1>
     db0:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <us_over_10>
     db4:	80 51       	subi	r24, 0x10	; 16
     db6:	97 42       	sbci	r25, 0x27	; 39
     db8:	c0 f0       	brcs	.+48     	; 0xdea <end>
     dba:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <us_over_10+0x1>
     dbe:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <us_over_10>
     dc2:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <msCounter>
     dc6:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <msCounter+0x1>
     dca:	01 96       	adiw	r24, 0x01	; 1
     dcc:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <msCounter>
     dd0:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <msCounter+0x1>
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <msCounter+0x2>
     dda:	89 1f       	adc	r24, r25
     ddc:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <msCounter+0x2>
     de0:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <msCounter+0x3>
     de4:	89 1f       	adc	r24, r25
     de6:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <msCounter+0x3>

00000dea <end>:
     dea:	2f be       	out	0x3f, r2	; 63
     dec:	9f 91       	pop	r25
     dee:	8f 91       	pop	r24
     df0:	2f 90       	pop	r2
     df2:	18 95       	reti

00000df4 <_ZN13OrangutanTime17delayMillisecondsEj>:
     df4:	28 ee       	ldi	r18, 0xE8	; 232
     df6:	33 e0       	ldi	r19, 0x03	; 3
     df8:	01 97       	sbiw	r24, 0x01	; 1
     dfa:	48 f0       	brcs	.+18     	; 0xe0e <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
     dfc:	f9 01       	movw	r30, r18
     dfe:	6f 93       	push	r22
     e00:	64 e0       	ldi	r22, 0x04	; 4
     e02:	6a 95       	dec	r22
     e04:	f1 f7       	brne	.-4      	; 0xe02 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
     e06:	6f 91       	pop	r22
     e08:	31 97       	sbiw	r30, 0x01	; 1
     e0a:	c9 f7       	brne	.-14     	; 0xdfe <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
     e0c:	f5 cf       	rjmp	.-22     	; 0xdf8 <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
     e0e:	08 95       	ret

00000e10 <delay_ms>:
     e10:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <_ZN13OrangutanTime17delayMillisecondsEj>
     e14:	08 95       	ret

00000e16 <_ZN13OrangutanTime5init2Ev>:
     e16:	e0 e7       	ldi	r30, 0x70	; 112
     e18:	f0 e0       	ldi	r31, 0x00	; 0
     e1a:	80 81       	ld	r24, Z
     e1c:	8e 7f       	andi	r24, 0xFE	; 254
     e1e:	80 83       	st	Z, r24
     e20:	a0 eb       	ldi	r26, 0xB0	; 176
     e22:	b0 e0       	ldi	r27, 0x00	; 0
     e24:	8c 91       	ld	r24, X
     e26:	83 60       	ori	r24, 0x03	; 3
     e28:	8c 93       	st	X, r24
     e2a:	a1 eb       	ldi	r26, 0xB1	; 177
     e2c:	b0 e0       	ldi	r27, 0x00	; 0
     e2e:	8c 91       	ld	r24, X
     e30:	80 7f       	andi	r24, 0xF0	; 240
     e32:	8c 93       	st	X, r24
     e34:	8c 91       	ld	r24, X
     e36:	82 60       	ori	r24, 0x02	; 2
     e38:	8c 93       	st	X, r24
     e3a:	b8 9a       	sbi	0x17, 0	; 23
     e3c:	80 81       	ld	r24, Z
     e3e:	81 60       	ori	r24, 0x01	; 1
     e40:	80 83       	st	Z, r24
     e42:	78 94       	sei
     e44:	08 95       	ret

00000e46 <_ZN13OrangutanTime4initEv>:
     e46:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <_ZZN13OrangutanTime4initEvE11initialized>
     e4a:	81 11       	cpse	r24, r1
     e4c:	05 c0       	rjmp	.+10     	; 0xe58 <_ZN13OrangutanTime4initEv+0x12>
     e4e:	81 e0       	ldi	r24, 0x01	; 1
     e50:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <_ZZN13OrangutanTime4initEvE11initialized>
     e54:	0e 94 0b 07 	call	0xe16	; 0xe16 <_ZN13OrangutanTime5init2Ev>
     e58:	08 95       	ret

00000e5a <_ZN13OrangutanTime5resetEv>:
     e5a:	0e 94 23 07 	call	0xe46	; 0xe46 <_ZN13OrangutanTime4initEv>
     e5e:	e0 e7       	ldi	r30, 0x70	; 112
     e60:	f0 e0       	ldi	r31, 0x00	; 0
     e62:	80 81       	ld	r24, Z
     e64:	8e 7f       	andi	r24, 0xFE	; 254
     e66:	80 83       	st	Z, r24
     e68:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <msCounter>
     e6c:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <msCounter+0x1>
     e70:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <msCounter+0x2>
     e74:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <msCounter+0x3>
     e78:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <us_over_10+0x1>
     e7c:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <us_over_10>
     e80:	80 81       	ld	r24, Z
     e82:	81 60       	ori	r24, 0x01	; 1
     e84:	80 83       	st	Z, r24
     e86:	08 95       	ret

00000e88 <calibrate_line_sensors>:
     e88:	68 2f       	mov	r22, r24
     e8a:	84 e5       	ldi	r24, 0x54	; 84
     e8c:	91 e0       	ldi	r25, 0x01	; 1
     e8e:	0e 94 2c 0b 	call	0x1658	; 0x1658 <_ZN16PololuQTRSensors9calibrateEh>
     e92:	08 95       	ret

00000e94 <read_line>:
     e94:	46 2f       	mov	r20, r22
     e96:	20 e0       	ldi	r18, 0x00	; 0
     e98:	bc 01       	movw	r22, r24
     e9a:	84 e5       	ldi	r24, 0x54	; 84
     e9c:	91 e0       	ldi	r25, 0x01	; 1
     e9e:	0e 94 fd 0b 	call	0x17fa	; 0x17fa <_ZN16PololuQTRSensors8readLineEPjhh>
     ea2:	08 95       	ret

00000ea4 <_ZN9Pololu3pi4initEjh>:
     ea4:	0f 93       	push	r16
     ea6:	cf 93       	push	r28
     ea8:	df 93       	push	r29
     eaa:	00 d0       	rcall	.+0      	; 0xeac <_ZN9Pololu3pi4initEjh+0x8>
     eac:	00 d0       	rcall	.+0      	; 0xeae <_ZN9Pololu3pi4initEjh+0xa>
     eae:	1f 92       	push	r1
     eb0:	cd b7       	in	r28, 0x3d	; 61
     eb2:	de b7       	in	r29, 0x3e	; 62
     eb4:	9c 01       	movw	r18, r24
     eb6:	85 e0       	ldi	r24, 0x05	; 5
     eb8:	e6 e2       	ldi	r30, 0x26	; 38
     eba:	f1 e0       	ldi	r31, 0x01	; 1
     ebc:	de 01       	movw	r26, r28
     ebe:	11 96       	adiw	r26, 0x01	; 1
     ec0:	01 90       	ld	r0, Z+
     ec2:	0d 92       	st	X+, r0
     ec4:	8a 95       	dec	r24
     ec6:	e1 f7       	brne	.-8      	; 0xec0 <_ZN9Pololu3pi4initEjh+0x1c>
     ec8:	66 23       	and	r22, r22
     eca:	11 f0       	breq	.+4      	; 0xed0 <_ZN9Pololu3pi4initEjh+0x2c>
     ecc:	0f ef       	ldi	r16, 0xFF	; 255
     ece:	01 c0       	rjmp	.+2      	; 0xed2 <_ZN9Pololu3pi4initEjh+0x2e>
     ed0:	03 e1       	ldi	r16, 0x13	; 19
     ed2:	45 e0       	ldi	r20, 0x05	; 5
     ed4:	be 01       	movw	r22, r28
     ed6:	6f 5f       	subi	r22, 0xFF	; 255
     ed8:	7f 4f       	sbci	r23, 0xFF	; 255
     eda:	84 e5       	ldi	r24, 0x54	; 84
     edc:	91 e0       	ldi	r25, 0x01	; 1
     ede:	0e 94 24 08 	call	0x1048	; 0x1048 <_ZN18PololuQTRSensorsRC4initEPhhjh>
     ee2:	84 e5       	ldi	r24, 0x54	; 84
     ee4:	91 e0       	ldi	r25, 0x01	; 1
     ee6:	0e 94 fb 07 	call	0xff6	; 0xff6 <_ZN16PololuQTRSensors11emittersOffEv>
     eea:	0e 94 2d 07 	call	0xe5a	; 0xe5a <_ZN13OrangutanTime5resetEv>
     eee:	0f 90       	pop	r0
     ef0:	0f 90       	pop	r0
     ef2:	0f 90       	pop	r0
     ef4:	0f 90       	pop	r0
     ef6:	0f 90       	pop	r0
     ef8:	df 91       	pop	r29
     efa:	cf 91       	pop	r28
     efc:	0f 91       	pop	r16
     efe:	08 95       	ret

00000f00 <pololu_3pi_init>:
     f00:	60 e0       	ldi	r22, 0x00	; 0
     f02:	0e 94 52 07 	call	0xea4	; 0xea4 <_ZN9Pololu3pi4initEjh>
     f06:	08 95       	ret

00000f08 <_GLOBAL__sub_D_pololu_3pi_init>:
     f08:	84 e5       	ldi	r24, 0x54	; 84
     f0a:	91 e0       	ldi	r25, 0x01	; 1
     f0c:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <_ZN16PololuQTRSensorsD1Ev>
     f10:	08 95       	ret

00000f12 <delay_us>:
     f12:	6f 93       	push	r22
     f14:	64 e0       	ldi	r22, 0x04	; 4
     f16:	6a 95       	dec	r22
     f18:	f1 f7       	brne	.-4      	; 0xf16 <delay_us+0x4>
     f1a:	6f 91       	pop	r22
     f1c:	01 97       	sbiw	r24, 0x01	; 1
     f1e:	c9 f7       	brne	.-14     	; 0xf12 <delay_us>
     f20:	08 95       	ret

00000f22 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
     f22:	fc 01       	movw	r30, r24
     f24:	11 82       	std	Z+1, r1	; 0x01
     f26:	10 82       	st	Z, r1
     f28:	13 82       	std	Z+3, r1	; 0x03
     f2a:	12 82       	std	Z+2, r1	; 0x02
     f2c:	15 82       	std	Z+5, r1	; 0x05
     f2e:	14 82       	std	Z+4, r1	; 0x04
     f30:	16 82       	std	Z+6, r1	; 0x06
     f32:	68 30       	cpi	r22, 0x08	; 8
     f34:	68 f4       	brcc	.+26     	; 0xf50 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
     f36:	89 e2       	ldi	r24, 0x29	; 41
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	91 83       	std	Z+1, r25	; 0x01
     f3c:	80 83       	st	Z, r24
     f3e:	8b e2       	ldi	r24, 0x2B	; 43
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	93 83       	std	Z+3, r25	; 0x03
     f44:	82 83       	std	Z+2, r24	; 0x02
     f46:	8a e2       	ldi	r24, 0x2A	; 42
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	95 83       	std	Z+5, r25	; 0x05
     f4c:	84 83       	std	Z+4, r24	; 0x04
     f4e:	1f c0       	rjmp	.+62     	; 0xf8e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
     f50:	6e 30       	cpi	r22, 0x0E	; 14
     f52:	70 f4       	brcc	.+28     	; 0xf70 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
     f54:	83 e2       	ldi	r24, 0x23	; 35
     f56:	90 e0       	ldi	r25, 0x00	; 0
     f58:	91 83       	std	Z+1, r25	; 0x01
     f5a:	80 83       	st	Z, r24
     f5c:	85 e2       	ldi	r24, 0x25	; 37
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	93 83       	std	Z+3, r25	; 0x03
     f62:	82 83       	std	Z+2, r24	; 0x02
     f64:	84 e2       	ldi	r24, 0x24	; 36
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	95 83       	std	Z+5, r25	; 0x05
     f6a:	84 83       	std	Z+4, r24	; 0x04
     f6c:	68 50       	subi	r22, 0x08	; 8
     f6e:	0f c0       	rjmp	.+30     	; 0xf8e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
     f70:	65 31       	cpi	r22, 0x15	; 21
     f72:	98 f4       	brcc	.+38     	; 0xf9a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
     f74:	86 e2       	ldi	r24, 0x26	; 38
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	91 83       	std	Z+1, r25	; 0x01
     f7a:	80 83       	st	Z, r24
     f7c:	88 e2       	ldi	r24, 0x28	; 40
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	93 83       	std	Z+3, r25	; 0x03
     f82:	82 83       	std	Z+2, r24	; 0x02
     f84:	87 e2       	ldi	r24, 0x27	; 39
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	95 83       	std	Z+5, r25	; 0x05
     f8a:	84 83       	std	Z+4, r24	; 0x04
     f8c:	6e 50       	subi	r22, 0x0E	; 14
     f8e:	81 e0       	ldi	r24, 0x01	; 1
     f90:	01 c0       	rjmp	.+2      	; 0xf94 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
     f92:	88 0f       	add	r24, r24
     f94:	6a 95       	dec	r22
     f96:	ea f7       	brpl	.-6      	; 0xf92 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
     f98:	86 83       	std	Z+6, r24	; 0x06
     f9a:	08 95       	ret

00000f9c <_ZN16PololuQTRSensors4initEhhh>:
     f9c:	a7 e0       	ldi	r26, 0x07	; 7
     f9e:	b0 e0       	ldi	r27, 0x00	; 0
     fa0:	e4 ed       	ldi	r30, 0xD4	; 212
     fa2:	f7 e0       	ldi	r31, 0x07	; 7
     fa4:	0c 94 2f 0d 	jmp	0x1a5e	; 0x1a5e <__prologue_saves__+0x1c>
     fa8:	8c 01       	movw	r16, r24
     faa:	fc 01       	movw	r30, r24
     fac:	11 82       	std	Z+1, r1	; 0x01
     fae:	10 82       	st	Z, r1
     fb0:	13 82       	std	Z+3, r1	; 0x03
     fb2:	12 82       	std	Z+2, r1	; 0x02
     fb4:	15 82       	std	Z+5, r1	; 0x05
     fb6:	14 82       	std	Z+4, r1	; 0x04
     fb8:	17 82       	std	Z+7, r1	; 0x07
     fba:	16 82       	std	Z+6, r1	; 0x06
     fbc:	61 31       	cpi	r22, 0x11	; 17
     fbe:	18 f0       	brcs	.+6      	; 0xfc6 <_ZN16PololuQTRSensors4initEhhh+0x2a>
     fc0:	80 e1       	ldi	r24, 0x10	; 16
     fc2:	80 87       	std	Z+8, r24	; 0x08
     fc4:	02 c0       	rjmp	.+4      	; 0xfca <_ZN16PololuQTRSensors4initEhhh+0x2e>
     fc6:	fc 01       	movw	r30, r24
     fc8:	60 87       	std	Z+8, r22	; 0x08
     fca:	f8 01       	movw	r30, r16
     fcc:	20 8b       	std	Z+16, r18	; 0x10
     fce:	64 2f       	mov	r22, r20
     fd0:	ce 01       	movw	r24, r28
     fd2:	01 96       	adiw	r24, 0x01	; 1
     fd4:	0e 94 91 07 	call	0xf22	; 0xf22 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
     fd8:	8f 81       	ldd	r24, Y+7	; 0x07
     fda:	f8 01       	movw	r30, r16
     fdc:	81 87       	std	Z+9, r24	; 0x09
     fde:	8b 81       	ldd	r24, Y+3	; 0x03
     fe0:	9c 81       	ldd	r25, Y+4	; 0x04
     fe2:	93 87       	std	Z+11, r25	; 0x0b
     fe4:	82 87       	std	Z+10, r24	; 0x0a
     fe6:	8d 81       	ldd	r24, Y+5	; 0x05
     fe8:	9e 81       	ldd	r25, Y+6	; 0x06
     fea:	95 87       	std	Z+13, r25	; 0x0d
     fec:	84 87       	std	Z+12, r24	; 0x0c
     fee:	27 96       	adiw	r28, 0x07	; 7
     ff0:	e4 e0       	ldi	r30, 0x04	; 4
     ff2:	0c 94 4b 0d 	jmp	0x1a96	; 0x1a96 <__epilogue_restores__+0x1c>

00000ff6 <_ZN16PololuQTRSensors11emittersOffEv>:
     ff6:	fc 01       	movw	r30, r24
     ff8:	a4 85       	ldd	r26, Z+12	; 0x0c
     ffa:	b5 85       	ldd	r27, Z+13	; 0x0d
     ffc:	10 97       	sbiw	r26, 0x00	; 0
     ffe:	79 f0       	breq	.+30     	; 0x101e <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    1000:	8c 91       	ld	r24, X
    1002:	91 85       	ldd	r25, Z+9	; 0x09
    1004:	89 2b       	or	r24, r25
    1006:	8c 93       	st	X, r24
    1008:	a2 85       	ldd	r26, Z+10	; 0x0a
    100a:	b3 85       	ldd	r27, Z+11	; 0x0b
    100c:	9c 91       	ld	r25, X
    100e:	81 85       	ldd	r24, Z+9	; 0x09
    1010:	80 95       	com	r24
    1012:	89 23       	and	r24, r25
    1014:	8c 93       	st	X, r24
    1016:	88 ec       	ldi	r24, 0xC8	; 200
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	0e 94 89 07 	call	0xf12	; 0xf12 <delay_us>
    101e:	08 95       	ret

00001020 <_ZN16PololuQTRSensors10emittersOnEv>:
    1020:	fc 01       	movw	r30, r24
    1022:	a4 85       	ldd	r26, Z+12	; 0x0c
    1024:	b5 85       	ldd	r27, Z+13	; 0x0d
    1026:	10 97       	sbiw	r26, 0x00	; 0
    1028:	71 f0       	breq	.+28     	; 0x1046 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    102a:	8c 91       	ld	r24, X
    102c:	91 85       	ldd	r25, Z+9	; 0x09
    102e:	89 2b       	or	r24, r25
    1030:	8c 93       	st	X, r24
    1032:	a2 85       	ldd	r26, Z+10	; 0x0a
    1034:	b3 85       	ldd	r27, Z+11	; 0x0b
    1036:	8c 91       	ld	r24, X
    1038:	91 85       	ldd	r25, Z+9	; 0x09
    103a:	89 2b       	or	r24, r25
    103c:	8c 93       	st	X, r24
    103e:	88 ec       	ldi	r24, 0xC8	; 200
    1040:	90 e0       	ldi	r25, 0x00	; 0
    1042:	0e 94 89 07 	call	0xf12	; 0xf12 <delay_us>
    1046:	08 95       	ret

00001048 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    1048:	a7 e0       	ldi	r26, 0x07	; 7
    104a:	b0 e0       	ldi	r27, 0x00	; 0
    104c:	ea e2       	ldi	r30, 0x2A	; 42
    104e:	f8 e0       	ldi	r31, 0x08	; 8
    1050:	0c 94 24 0d 	jmp	0x1a48	; 0x1a48 <__prologue_saves__+0x6>
    1054:	7c 01       	movw	r14, r24
    1056:	4b 01       	movw	r8, r22
    1058:	64 2f       	mov	r22, r20
    105a:	39 01       	movw	r6, r18
    105c:	40 2f       	mov	r20, r16
    105e:	20 e0       	ldi	r18, 0x00	; 0
    1060:	0e 94 ce 07 	call	0xf9c	; 0xf9c <_ZN16PololuQTRSensors4initEhhh>
    1064:	87 01       	movw	r16, r14
    1066:	0f 5b       	subi	r16, 0xBF	; 191
    1068:	1f 4f       	sbci	r17, 0xFF	; 255
    106a:	f8 01       	movw	r30, r16
    106c:	10 82       	st	Z, r1
    106e:	67 01       	movw	r12, r14
    1070:	f2 e4       	ldi	r31, 0x42	; 66
    1072:	cf 0e       	add	r12, r31
    1074:	d1 1c       	adc	r13, r1
    1076:	f6 01       	movw	r30, r12
    1078:	10 82       	st	Z, r1
    107a:	57 01       	movw	r10, r14
    107c:	f3 e4       	ldi	r31, 0x43	; 67
    107e:	af 0e       	add	r10, r31
    1080:	b1 1c       	adc	r11, r1
    1082:	f5 01       	movw	r30, r10
    1084:	10 82       	st	Z, r1
    1086:	f7 01       	movw	r30, r14
    1088:	77 86       	std	Z+15, r7	; 0x0f
    108a:	66 86       	std	Z+14, r6	; 0x0e
    108c:	51 2c       	mov	r5, r1
    108e:	f7 01       	movw	r30, r14
    1090:	80 85       	ldd	r24, Z+8	; 0x08
    1092:	58 16       	cp	r5, r24
    1094:	50 f5       	brcc	.+84     	; 0x10ea <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    1096:	65 2c       	mov	r6, r5
    1098:	71 2c       	mov	r7, r1
    109a:	f4 01       	movw	r30, r8
    109c:	e6 0d       	add	r30, r6
    109e:	f7 1d       	adc	r31, r7
    10a0:	60 81       	ld	r22, Z
    10a2:	ce 01       	movw	r24, r28
    10a4:	01 96       	adiw	r24, 0x01	; 1
    10a6:	0e 94 91 07 	call	0xf22	; 0xf22 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    10aa:	2f 81       	ldd	r18, Y+7	; 0x07
    10ac:	f7 01       	movw	r30, r14
    10ae:	e6 0d       	add	r30, r6
    10b0:	f7 1d       	adc	r31, r7
    10b2:	21 8b       	std	Z+17, r18	; 0x11
    10b4:	89 81       	ldd	r24, Y+1	; 0x01
    10b6:	9a 81       	ldd	r25, Y+2	; 0x02
    10b8:	f3 01       	movw	r30, r6
    10ba:	ee 0f       	add	r30, r30
    10bc:	ff 1f       	adc	r31, r31
    10be:	ee 0d       	add	r30, r14
    10c0:	ff 1d       	adc	r31, r15
    10c2:	92 a3       	std	Z+34, r25	; 0x22
    10c4:	81 a3       	std	Z+33, r24	; 0x21
    10c6:	83 32       	cpi	r24, 0x23	; 35
    10c8:	91 05       	cpc	r25, r1
    10ca:	11 f4       	brne	.+4      	; 0x10d0 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    10cc:	f8 01       	movw	r30, r16
    10ce:	08 c0       	rjmp	.+16     	; 0x10e0 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    10d0:	86 32       	cpi	r24, 0x26	; 38
    10d2:	91 05       	cpc	r25, r1
    10d4:	11 f4       	brne	.+4      	; 0x10da <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    10d6:	f6 01       	movw	r30, r12
    10d8:	03 c0       	rjmp	.+6      	; 0x10e0 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    10da:	89 97       	sbiw	r24, 0x29	; 41
    10dc:	21 f4       	brne	.+8      	; 0x10e6 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    10de:	f5 01       	movw	r30, r10
    10e0:	80 81       	ld	r24, Z
    10e2:	82 2b       	or	r24, r18
    10e4:	80 83       	st	Z, r24
    10e6:	53 94       	inc	r5
    10e8:	d2 cf       	rjmp	.-92     	; 0x108e <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    10ea:	27 96       	adiw	r28, 0x07	; 7
    10ec:	ef e0       	ldi	r30, 0x0F	; 15
    10ee:	0c 94 40 0d 	jmp	0x1a80	; 0x1a80 <__epilogue_restores__+0x6>

000010f2 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    10f2:	a0 e0       	ldi	r26, 0x00	; 0
    10f4:	b0 e0       	ldi	r27, 0x00	; 0
    10f6:	ef e7       	ldi	r30, 0x7F	; 127
    10f8:	f8 e0       	ldi	r31, 0x08	; 8
    10fa:	0c 94 26 0d 	jmp	0x1a4c	; 0x1a4c <__prologue_saves__+0xa>
    10fe:	ec 01       	movw	r28, r24
    1100:	5b 01       	movw	r10, r22
    1102:	6c 01       	movw	r12, r24
    1104:	81 e4       	ldi	r24, 0x41	; 65
    1106:	c8 0e       	add	r12, r24
    1108:	d1 1c       	adc	r13, r1
    110a:	f6 01       	movw	r30, r12
    110c:	80 80       	ld	r8, Z
    110e:	7e 01       	movw	r14, r28
    1110:	f2 e4       	ldi	r31, 0x42	; 66
    1112:	ef 0e       	add	r14, r31
    1114:	f1 1c       	adc	r15, r1
    1116:	f7 01       	movw	r30, r14
    1118:	70 80       	ld	r7, Z
    111a:	8e 01       	movw	r16, r28
    111c:	0d 5b       	subi	r16, 0xBD	; 189
    111e:	1f 4f       	sbci	r17, 0xFF	; 255
    1120:	f8 01       	movw	r30, r16
    1122:	90 80       	ld	r9, Z
    1124:	80 e0       	ldi	r24, 0x00	; 0
    1126:	98 85       	ldd	r25, Y+8	; 0x08
    1128:	89 17       	cp	r24, r25
    112a:	48 f4       	brcc	.+18     	; 0x113e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    112c:	f5 01       	movw	r30, r10
    112e:	e8 0f       	add	r30, r24
    1130:	f1 1d       	adc	r31, r1
    1132:	e8 0f       	add	r30, r24
    1134:	f1 1d       	adc	r31, r1
    1136:	11 82       	std	Z+1, r1	; 0x01
    1138:	10 82       	st	Z, r1
    113a:	8f 5f       	subi	r24, 0xFF	; 255
    113c:	f4 cf       	rjmp	.-24     	; 0x1126 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    113e:	84 b1       	in	r24, 0x04	; 4
    1140:	f6 01       	movw	r30, r12
    1142:	90 81       	ld	r25, Z
    1144:	89 2b       	or	r24, r25
    1146:	84 b9       	out	0x04, r24	; 4
    1148:	87 b1       	in	r24, 0x07	; 7
    114a:	f7 01       	movw	r30, r14
    114c:	90 81       	ld	r25, Z
    114e:	89 2b       	or	r24, r25
    1150:	87 b9       	out	0x07, r24	; 7
    1152:	8a b1       	in	r24, 0x0a	; 10
    1154:	f8 01       	movw	r30, r16
    1156:	90 81       	ld	r25, Z
    1158:	89 2b       	or	r24, r25
    115a:	8a b9       	out	0x0a, r24	; 10
    115c:	85 b1       	in	r24, 0x05	; 5
    115e:	f6 01       	movw	r30, r12
    1160:	90 81       	ld	r25, Z
    1162:	89 2b       	or	r24, r25
    1164:	85 b9       	out	0x05, r24	; 5
    1166:	88 b1       	in	r24, 0x08	; 8
    1168:	f7 01       	movw	r30, r14
    116a:	90 81       	ld	r25, Z
    116c:	89 2b       	or	r24, r25
    116e:	88 b9       	out	0x08, r24	; 8
    1170:	8b b1       	in	r24, 0x0b	; 11
    1172:	f8 01       	movw	r30, r16
    1174:	90 81       	ld	r25, Z
    1176:	89 2b       	or	r24, r25
    1178:	8b b9       	out	0x0b, r24	; 11
    117a:	8a e0       	ldi	r24, 0x0A	; 10
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	0e 94 89 07 	call	0xf12	; 0xf12 <delay_us>
    1182:	94 b1       	in	r25, 0x04	; 4
    1184:	f6 01       	movw	r30, r12
    1186:	80 81       	ld	r24, Z
    1188:	80 95       	com	r24
    118a:	89 23       	and	r24, r25
    118c:	84 b9       	out	0x04, r24	; 4
    118e:	97 b1       	in	r25, 0x07	; 7
    1190:	f7 01       	movw	r30, r14
    1192:	80 81       	ld	r24, Z
    1194:	80 95       	com	r24
    1196:	89 23       	and	r24, r25
    1198:	87 b9       	out	0x07, r24	; 7
    119a:	9a b1       	in	r25, 0x0a	; 10
    119c:	f8 01       	movw	r30, r16
    119e:	80 81       	ld	r24, Z
    11a0:	80 95       	com	r24
    11a2:	89 23       	and	r24, r25
    11a4:	8a b9       	out	0x0a, r24	; 10
    11a6:	95 b1       	in	r25, 0x05	; 5
    11a8:	f6 01       	movw	r30, r12
    11aa:	80 81       	ld	r24, Z
    11ac:	80 95       	com	r24
    11ae:	89 23       	and	r24, r25
    11b0:	85 b9       	out	0x05, r24	; 5
    11b2:	98 b1       	in	r25, 0x08	; 8
    11b4:	f7 01       	movw	r30, r14
    11b6:	80 81       	ld	r24, Z
    11b8:	80 95       	com	r24
    11ba:	89 23       	and	r24, r25
    11bc:	88 b9       	out	0x08, r24	; 8
    11be:	9b b1       	in	r25, 0x0b	; 11
    11c0:	f8 01       	movw	r30, r16
    11c2:	80 81       	ld	r24, Z
    11c4:	80 95       	com	r24
    11c6:	89 23       	and	r24, r25
    11c8:	8b b9       	out	0x0b, r24	; 11
    11ca:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    11ce:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    11d2:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    11d6:	83 60       	ori	r24, 0x03	; 3
    11d8:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    11dc:	82 e0       	ldi	r24, 0x02	; 2
    11de:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    11e2:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    11e6:	80 e0       	ldi	r24, 0x00	; 0
    11e8:	90 e0       	ldi	r25, 0x00	; 0
    11ea:	2e 85       	ldd	r18, Y+14	; 0x0e
    11ec:	3f 85       	ldd	r19, Y+15	; 0x0f
    11ee:	82 17       	cp	r24, r18
    11f0:	93 07       	cpc	r25, r19
    11f2:	20 f5       	brcc	.+72     	; 0x123c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    11f4:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    11f8:	2c 2d       	mov	r18, r12
    11fa:	24 1b       	sub	r18, r20
    11fc:	82 0f       	add	r24, r18
    11fe:	91 1d       	adc	r25, r1
    1200:	03 b1       	in	r16, 0x03	; 3
    1202:	08 11       	cpse	r16, r8
    1204:	32 c0       	rjmp	.+100    	; 0x126a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1206:	f6 b0       	in	r15, 0x06	; 6
    1208:	f7 10       	cpse	r15, r7
    120a:	2f c0       	rjmp	.+94     	; 0x126a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    120c:	29 b1       	in	r18, 0x09	; 9
    120e:	29 11       	cpse	r18, r9
    1210:	2c c0       	rjmp	.+88     	; 0x126a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1212:	10 c0       	rjmp	.+32     	; 0x1234 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    1214:	21 2f       	mov	r18, r17
    1216:	30 e0       	ldi	r19, 0x00	; 0
    1218:	a9 01       	movw	r20, r18
    121a:	44 0f       	add	r20, r20
    121c:	55 1f       	adc	r21, r21
    121e:	f5 01       	movw	r30, r10
    1220:	e4 0f       	add	r30, r20
    1222:	f5 1f       	adc	r31, r21
    1224:	60 81       	ld	r22, Z
    1226:	71 81       	ldd	r23, Z+1	; 0x01
    1228:	67 2b       	or	r22, r23
    122a:	21 f1       	breq	.+72     	; 0x1274 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    122c:	1f 5f       	subi	r17, 0xFF	; 255
    122e:	28 85       	ldd	r18, Y+8	; 0x08
    1230:	12 17       	cp	r17, r18
    1232:	80 f3       	brcs	.-32     	; 0x1214 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    1234:	7f 2c       	mov	r7, r15
    1236:	80 2e       	mov	r8, r16
    1238:	4c 2d       	mov	r20, r12
    123a:	d7 cf       	rjmp	.-82     	; 0x11ea <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    123c:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1240:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1244:	20 e0       	ldi	r18, 0x00	; 0
    1246:	88 85       	ldd	r24, Y+8	; 0x08
    1248:	28 17       	cp	r18, r24
    124a:	30 f5       	brcc	.+76     	; 0x1298 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    124c:	f5 01       	movw	r30, r10
    124e:	e2 0f       	add	r30, r18
    1250:	f1 1d       	adc	r31, r1
    1252:	e2 0f       	add	r30, r18
    1254:	f1 1d       	adc	r31, r1
    1256:	80 81       	ld	r24, Z
    1258:	91 81       	ldd	r25, Z+1	; 0x01
    125a:	89 2b       	or	r24, r25
    125c:	21 f4       	brne	.+8      	; 0x1266 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    125e:	8e 85       	ldd	r24, Y+14	; 0x0e
    1260:	9f 85       	ldd	r25, Y+15	; 0x0f
    1262:	91 83       	std	Z+1, r25	; 0x01
    1264:	80 83       	st	Z, r24
    1266:	2f 5f       	subi	r18, 0xFF	; 255
    1268:	ee cf       	rjmp	.-36     	; 0x1246 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    126a:	03 b1       	in	r16, 0x03	; 3
    126c:	f6 b0       	in	r15, 0x06	; 6
    126e:	99 b0       	in	r9, 0x09	; 9
    1270:	10 e0       	ldi	r17, 0x00	; 0
    1272:	dd cf       	rjmp	.-70     	; 0x122e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    1274:	de 01       	movw	r26, r28
    1276:	a4 0f       	add	r26, r20
    1278:	b5 1f       	adc	r27, r21
    127a:	91 96       	adiw	r26, 0x21	; 33
    127c:	0d 90       	ld	r0, X+
    127e:	bc 91       	ld	r27, X
    1280:	a0 2d       	mov	r26, r0
    1282:	4c 91       	ld	r20, X
    1284:	de 01       	movw	r26, r28
    1286:	a2 0f       	add	r26, r18
    1288:	b3 1f       	adc	r27, r19
    128a:	51 96       	adiw	r26, 0x11	; 17
    128c:	2c 91       	ld	r18, X
    128e:	42 23       	and	r20, r18
    1290:	69 f6       	brne	.-102    	; 0x122c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    1292:	91 83       	std	Z+1, r25	; 0x01
    1294:	80 83       	st	Z, r24
    1296:	ca cf       	rjmp	.-108    	; 0x122c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    1298:	cd b7       	in	r28, 0x3d	; 61
    129a:	de b7       	in	r29, 0x3e	; 62
    129c:	ed e0       	ldi	r30, 0x0D	; 13
    129e:	0c 94 42 0d 	jmp	0x1a84	; 0x1a84 <__epilogue_restores__+0xa>

000012a2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    12a2:	ef 92       	push	r14
    12a4:	ff 92       	push	r15
    12a6:	0f 93       	push	r16
    12a8:	1f 93       	push	r17
    12aa:	cf 93       	push	r28
    12ac:	df 93       	push	r29
    12ae:	fc 01       	movw	r30, r24
    12b0:	9b 01       	movw	r18, r22
    12b2:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    12b6:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    12ba:	47 b1       	in	r20, 0x07	; 7
    12bc:	18 b1       	in	r17, 0x08	; 8
    12be:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    12c2:	86 fd       	sbrc	r24, 6
    12c4:	fc cf       	rjmp	.-8      	; 0x12be <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    12c6:	80 e0       	ldi	r24, 0x00	; 0
    12c8:	90 85       	ldd	r25, Z+8	; 0x08
    12ca:	89 17       	cp	r24, r25
    12cc:	48 f4       	brcc	.+18     	; 0x12e0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    12ce:	d9 01       	movw	r26, r18
    12d0:	a8 0f       	add	r26, r24
    12d2:	b1 1d       	adc	r27, r1
    12d4:	a8 0f       	add	r26, r24
    12d6:	b1 1d       	adc	r27, r1
    12d8:	1d 92       	st	X+, r1
    12da:	1c 92       	st	X, r1
    12dc:	8f 5f       	subi	r24, 0xFF	; 255
    12de:	f4 cf       	rjmp	.-24     	; 0x12c8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    12e0:	97 b1       	in	r25, 0x07	; 7
    12e2:	82 a1       	ldd	r24, Z+34	; 0x22
    12e4:	80 95       	com	r24
    12e6:	89 23       	and	r24, r25
    12e8:	87 b9       	out	0x07, r24	; 7
    12ea:	98 b1       	in	r25, 0x08	; 8
    12ec:	82 a1       	ldd	r24, Z+34	; 0x22
    12ee:	80 95       	com	r24
    12f0:	89 23       	and	r24, r25
    12f2:	88 b9       	out	0x08, r24	; 8
    12f4:	87 e8       	ldi	r24, 0x87	; 135
    12f6:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    12fa:	e1 2c       	mov	r14, r1
    12fc:	81 a1       	ldd	r24, Z+33	; 0x21
    12fe:	e8 16       	cp	r14, r24
    1300:	10 f0       	brcs	.+4      	; 0x1306 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    1302:	e1 2c       	mov	r14, r1
    1304:	29 c0       	rjmp	.+82     	; 0x1358 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    1306:	50 e0       	ldi	r21, 0x00	; 0
    1308:	80 85       	ldd	r24, Z+8	; 0x08
    130a:	58 17       	cp	r21, r24
    130c:	18 f5       	brcc	.+70     	; 0x1354 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    130e:	a5 2f       	mov	r26, r21
    1310:	b0 e0       	ldi	r27, 0x00	; 0
    1312:	ef 01       	movw	r28, r30
    1314:	ca 0f       	add	r28, r26
    1316:	db 1f       	adc	r29, r27
    1318:	89 89       	ldd	r24, Y+17	; 0x11
    131a:	80 64       	ori	r24, 0x40	; 64
    131c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1320:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1324:	80 64       	ori	r24, 0x40	; 64
    1326:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    132a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    132e:	86 fd       	sbrc	r24, 6
    1330:	fc cf       	rjmp	.-8      	; 0x132a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    1332:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    1336:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    133a:	aa 0f       	add	r26, r26
    133c:	bb 1f       	adc	r27, r27
    133e:	a2 0f       	add	r26, r18
    1340:	b3 1f       	adc	r27, r19
    1342:	8d 91       	ld	r24, X+
    1344:	9c 91       	ld	r25, X
    1346:	11 97       	sbiw	r26, 0x01	; 1
    1348:	86 0f       	add	r24, r22
    134a:	97 1f       	adc	r25, r23
    134c:	8d 93       	st	X+, r24
    134e:	9c 93       	st	X, r25
    1350:	5f 5f       	subi	r21, 0xFF	; 255
    1352:	da cf       	rjmp	.-76     	; 0x1308 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    1354:	e3 94       	inc	r14
    1356:	d2 cf       	rjmp	.-92     	; 0x12fc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    1358:	80 85       	ldd	r24, Z+8	; 0x08
    135a:	e8 16       	cp	r14, r24
    135c:	a0 f4       	brcc	.+40     	; 0x1386 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    135e:	e9 01       	movw	r28, r18
    1360:	ce 0d       	add	r28, r14
    1362:	d1 1d       	adc	r29, r1
    1364:	ce 0d       	add	r28, r14
    1366:	d1 1d       	adc	r29, r1
    1368:	61 a1       	ldd	r22, Z+33	; 0x21
    136a:	70 e0       	ldi	r23, 0x00	; 0
    136c:	cb 01       	movw	r24, r22
    136e:	95 95       	asr	r25
    1370:	87 95       	ror	r24
    1372:	a8 81       	ld	r26, Y
    1374:	b9 81       	ldd	r27, Y+1	; 0x01
    1376:	8a 0f       	add	r24, r26
    1378:	9b 1f       	adc	r25, r27
    137a:	0e 94 90 0c 	call	0x1920	; 0x1920 <__udivmodhi4>
    137e:	79 83       	std	Y+1, r23	; 0x01
    1380:	68 83       	st	Y, r22
    1382:	e3 94       	inc	r14
    1384:	e9 cf       	rjmp	.-46     	; 0x1358 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    1386:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    138a:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    138e:	18 b9       	out	0x08, r17	; 8
    1390:	47 b9       	out	0x07, r20	; 7
    1392:	cd b7       	in	r28, 0x3d	; 61
    1394:	de b7       	in	r29, 0x3e	; 62
    1396:	e6 e0       	ldi	r30, 0x06	; 6
    1398:	0c 94 49 0d 	jmp	0x1a92	; 0x1a92 <__epilogue_restores__+0x18>

0000139c <_ZN16PololuQTRSensors4readEPjh>:
    139c:	a0 e2       	ldi	r26, 0x20	; 32
    139e:	b0 e0       	ldi	r27, 0x00	; 0
    13a0:	e4 ed       	ldi	r30, 0xD4	; 212
    13a2:	f9 e0       	ldi	r31, 0x09	; 9
    13a4:	0c 94 2c 0d 	jmp	0x1a58	; 0x1a58 <__prologue_saves__+0x16>
    13a8:	8c 01       	movw	r16, r24
    13aa:	7b 01       	movw	r14, r22
    13ac:	d4 2e       	mov	r13, r20
    13ae:	8f ef       	ldi	r24, 0xFF	; 255
    13b0:	84 0f       	add	r24, r20
    13b2:	82 30       	cpi	r24, 0x02	; 2
    13b4:	18 f4       	brcc	.+6      	; 0x13bc <_ZN16PololuQTRSensors4readEPjh+0x20>
    13b6:	c8 01       	movw	r24, r16
    13b8:	0e 94 10 08 	call	0x1020	; 0x1020 <_ZN16PololuQTRSensors10emittersOnEv>
    13bc:	d8 01       	movw	r26, r16
    13be:	50 96       	adiw	r26, 0x10	; 16
    13c0:	8c 91       	ld	r24, X
    13c2:	b7 01       	movw	r22, r14
    13c4:	81 11       	cpse	r24, r1
    13c6:	10 c0       	rjmp	.+32     	; 0x13e8 <_ZN16PololuQTRSensors4readEPjh+0x4c>
    13c8:	c8 01       	movw	r24, r16
    13ca:	0e 94 79 08 	call	0x10f2	; 0x10f2 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    13ce:	c8 01       	movw	r24, r16
    13d0:	0e 94 fb 07 	call	0xff6	; 0xff6 <_ZN16PololuQTRSensors11emittersOffEv>
    13d4:	b2 e0       	ldi	r27, 0x02	; 2
    13d6:	db 12       	cpse	r13, r27
    13d8:	3a c0       	rjmp	.+116    	; 0x144e <_ZN16PololuQTRSensors4readEPjh+0xb2>
    13da:	be 01       	movw	r22, r28
    13dc:	6f 5f       	subi	r22, 0xFF	; 255
    13de:	7f 4f       	sbci	r23, 0xFF	; 255
    13e0:	c8 01       	movw	r24, r16
    13e2:	0e 94 79 08 	call	0x10f2	; 0x10f2 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    13e6:	0f c0       	rjmp	.+30     	; 0x1406 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    13e8:	c8 01       	movw	r24, r16
    13ea:	0e 94 51 09 	call	0x12a2	; 0x12a2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    13ee:	c8 01       	movw	r24, r16
    13f0:	0e 94 fb 07 	call	0xff6	; 0xff6 <_ZN16PololuQTRSensors11emittersOffEv>
    13f4:	e2 e0       	ldi	r30, 0x02	; 2
    13f6:	de 12       	cpse	r13, r30
    13f8:	2a c0       	rjmp	.+84     	; 0x144e <_ZN16PololuQTRSensors4readEPjh+0xb2>
    13fa:	be 01       	movw	r22, r28
    13fc:	6f 5f       	subi	r22, 0xFF	; 255
    13fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1400:	c8 01       	movw	r24, r16
    1402:	0e 94 51 09 	call	0x12a2	; 0x12a2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1406:	40 e0       	ldi	r20, 0x00	; 0
    1408:	f8 01       	movw	r30, r16
    140a:	80 85       	ldd	r24, Z+8	; 0x08
    140c:	48 17       	cp	r20, r24
    140e:	f8 f4       	brcc	.+62     	; 0x144e <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1410:	84 2f       	mov	r24, r20
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	88 0f       	add	r24, r24
    1416:	99 1f       	adc	r25, r25
    1418:	f7 01       	movw	r30, r14
    141a:	e8 0f       	add	r30, r24
    141c:	f9 1f       	adc	r31, r25
    141e:	21 e0       	ldi	r18, 0x01	; 1
    1420:	30 e0       	ldi	r19, 0x00	; 0
    1422:	2c 0f       	add	r18, r28
    1424:	3d 1f       	adc	r19, r29
    1426:	82 0f       	add	r24, r18
    1428:	93 1f       	adc	r25, r19
    142a:	d8 01       	movw	r26, r16
    142c:	1e 96       	adiw	r26, 0x0e	; 14
    142e:	2d 91       	ld	r18, X+
    1430:	3c 91       	ld	r19, X
    1432:	1f 97       	sbiw	r26, 0x0f	; 15
    1434:	dc 01       	movw	r26, r24
    1436:	8d 91       	ld	r24, X+
    1438:	9c 91       	ld	r25, X
    143a:	28 1b       	sub	r18, r24
    143c:	39 0b       	sbc	r19, r25
    143e:	80 81       	ld	r24, Z
    1440:	91 81       	ldd	r25, Z+1	; 0x01
    1442:	82 0f       	add	r24, r18
    1444:	93 1f       	adc	r25, r19
    1446:	91 83       	std	Z+1, r25	; 0x01
    1448:	80 83       	st	Z, r24
    144a:	4f 5f       	subi	r20, 0xFF	; 255
    144c:	dd cf       	rjmp	.-70     	; 0x1408 <_ZN16PololuQTRSensors4readEPjh+0x6c>
    144e:	a0 96       	adiw	r28, 0x20	; 32
    1450:	e7 e0       	ldi	r30, 0x07	; 7
    1452:	0c 94 48 0d 	jmp	0x1a90	; 0x1a90 <__epilogue_restores__+0x16>

00001456 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    1456:	2f 92       	push	r2
    1458:	3f 92       	push	r3
    145a:	5f 92       	push	r5
    145c:	6f 92       	push	r6
    145e:	7f 92       	push	r7
    1460:	8f 92       	push	r8
    1462:	9f 92       	push	r9
    1464:	af 92       	push	r10
    1466:	bf 92       	push	r11
    1468:	cf 92       	push	r12
    146a:	df 92       	push	r13
    146c:	ef 92       	push	r14
    146e:	ff 92       	push	r15
    1470:	0f 93       	push	r16
    1472:	1f 93       	push	r17
    1474:	cf 93       	push	r28
    1476:	df 93       	push	r29
    1478:	cd b7       	in	r28, 0x3d	; 61
    147a:	de b7       	in	r29, 0x3e	; 62
    147c:	c0 56       	subi	r28, 0x60	; 96
    147e:	d1 09       	sbc	r29, r1
    1480:	0f b6       	in	r0, 0x3f	; 63
    1482:	f8 94       	cli
    1484:	de bf       	out	0x3e, r29	; 62
    1486:	0f be       	out	0x3f, r0	; 63
    1488:	cd bf       	out	0x3d, r28	; 61
    148a:	8c 01       	movw	r16, r24
    148c:	4b 01       	movw	r8, r22
    148e:	5a 01       	movw	r10, r20
    1490:	52 2e       	mov	r5, r18
    1492:	da 01       	movw	r26, r20
    1494:	8d 91       	ld	r24, X+
    1496:	9c 91       	ld	r25, X
    1498:	89 2b       	or	r24, r25
    149a:	31 f0       	breq	.+12     	; 0x14a8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    149c:	f4 01       	movw	r30, r8
    149e:	80 81       	ld	r24, Z
    14a0:	91 81       	ldd	r25, Z+1	; 0x01
    14a2:	89 2b       	or	r24, r25
    14a4:	f1 f4       	brne	.+60     	; 0x14e2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    14a6:	24 c0       	rjmp	.+72     	; 0x14f0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    14a8:	d8 01       	movw	r26, r16
    14aa:	18 96       	adiw	r26, 0x08	; 8
    14ac:	8c 91       	ld	r24, X
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	88 0f       	add	r24, r24
    14b2:	99 1f       	adc	r25, r25
    14b4:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <malloc>
    14b8:	f5 01       	movw	r30, r10
    14ba:	91 83       	std	Z+1, r25	; 0x01
    14bc:	80 83       	st	Z, r24
    14be:	00 97       	sbiw	r24, 0x00	; 0
    14c0:	09 f4       	brne	.+2      	; 0x14c4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    14c2:	b1 c0       	rjmp	.+354    	; 0x1626 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    14c4:	fc 01       	movw	r30, r24
    14c6:	20 e0       	ldi	r18, 0x00	; 0
    14c8:	30 e0       	ldi	r19, 0x00	; 0
    14ca:	d8 01       	movw	r26, r16
    14cc:	18 96       	adiw	r26, 0x08	; 8
    14ce:	8c 91       	ld	r24, X
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	28 17       	cp	r18, r24
    14d4:	39 07       	cpc	r19, r25
    14d6:	14 f7       	brge	.-60     	; 0x149c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    14d8:	11 92       	st	Z+, r1
    14da:	11 92       	st	Z+, r1
    14dc:	2f 5f       	subi	r18, 0xFF	; 255
    14de:	3f 4f       	sbci	r19, 0xFF	; 255
    14e0:	f4 cf       	rjmp	.-24     	; 0x14ca <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    14e2:	e1 2c       	mov	r14, r1
    14e4:	f1 2c       	mov	r15, r1
    14e6:	6e 01       	movw	r12, r28
    14e8:	b1 e2       	ldi	r27, 0x21	; 33
    14ea:	cb 0e       	add	r12, r27
    14ec:	d1 1c       	adc	r13, r1
    14ee:	21 c0       	rjmp	.+66     	; 0x1532 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    14f0:	f8 01       	movw	r30, r16
    14f2:	80 85       	ldd	r24, Z+8	; 0x08
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	88 0f       	add	r24, r24
    14f8:	99 1f       	adc	r25, r25
    14fa:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <malloc>
    14fe:	d4 01       	movw	r26, r8
    1500:	8d 93       	st	X+, r24
    1502:	9c 93       	st	X, r25
    1504:	00 97       	sbiw	r24, 0x00	; 0
    1506:	09 f4       	brne	.+2      	; 0x150a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    1508:	8e c0       	rjmp	.+284    	; 0x1626 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    150a:	fc 01       	movw	r30, r24
    150c:	20 e0       	ldi	r18, 0x00	; 0
    150e:	30 e0       	ldi	r19, 0x00	; 0
    1510:	d8 01       	movw	r26, r16
    1512:	18 96       	adiw	r26, 0x08	; 8
    1514:	8c 91       	ld	r24, X
    1516:	90 e0       	ldi	r25, 0x00	; 0
    1518:	28 17       	cp	r18, r24
    151a:	39 07       	cpc	r19, r25
    151c:	14 f7       	brge	.-60     	; 0x14e2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    151e:	d8 01       	movw	r26, r16
    1520:	1e 96       	adiw	r26, 0x0e	; 14
    1522:	8d 91       	ld	r24, X+
    1524:	9c 91       	ld	r25, X
    1526:	1f 97       	sbiw	r26, 0x0f	; 15
    1528:	81 93       	st	Z+, r24
    152a:	91 93       	st	Z+, r25
    152c:	2f 5f       	subi	r18, 0xFF	; 255
    152e:	3f 4f       	sbci	r19, 0xFF	; 255
    1530:	ef cf       	rjmp	.-34     	; 0x1510 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    1532:	45 2d       	mov	r20, r5
    1534:	be 01       	movw	r22, r28
    1536:	6f 5b       	subi	r22, 0xBF	; 191
    1538:	7f 4f       	sbci	r23, 0xFF	; 255
    153a:	c8 01       	movw	r24, r16
    153c:	0e 94 ce 09 	call	0x139c	; 0x139c <_ZN16PololuQTRSensors4readEPjh>
    1540:	f8 01       	movw	r30, r16
    1542:	60 84       	ldd	r6, Z+8	; 0x08
    1544:	71 2c       	mov	r7, r1
    1546:	fe 01       	movw	r30, r28
    1548:	ef 5b       	subi	r30, 0xBF	; 191
    154a:	ff 4f       	sbci	r31, 0xFF	; 255
    154c:	c6 01       	movw	r24, r12
    154e:	9e 01       	movw	r18, r28
    1550:	2f 5f       	subi	r18, 0xFF	; 255
    1552:	3f 4f       	sbci	r19, 0xFF	; 255
    1554:	19 01       	movw	r2, r18
    1556:	20 e0       	ldi	r18, 0x00	; 0
    1558:	30 e0       	ldi	r19, 0x00	; 0
    155a:	26 15       	cp	r18, r6
    155c:	37 05       	cpc	r19, r7
    155e:	4c f5       	brge	.+82     	; 0x15b2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    1560:	e1 14       	cp	r14, r1
    1562:	f1 04       	cpc	r15, r1
    1564:	89 f0       	breq	.+34     	; 0x1588 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1566:	dc 01       	movw	r26, r24
    1568:	6d 91       	ld	r22, X+
    156a:	7c 91       	ld	r23, X
    156c:	40 81       	ld	r20, Z
    156e:	51 81       	ldd	r21, Z+1	; 0x01
    1570:	64 17       	cp	r22, r20
    1572:	75 07       	cpc	r23, r21
    1574:	48 f0       	brcs	.+18     	; 0x1588 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1576:	d1 01       	movw	r26, r2
    1578:	6d 91       	ld	r22, X+
    157a:	7c 91       	ld	r23, X
    157c:	40 81       	ld	r20, Z
    157e:	51 81       	ldd	r21, Z+1	; 0x01
    1580:	46 17       	cp	r20, r22
    1582:	57 07       	cpc	r21, r23
    1584:	48 f0       	brcs	.+18     	; 0x1598 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    1586:	0d c0       	rjmp	.+26     	; 0x15a2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    1588:	40 81       	ld	r20, Z
    158a:	51 81       	ldd	r21, Z+1	; 0x01
    158c:	dc 01       	movw	r26, r24
    158e:	4d 93       	st	X+, r20
    1590:	5c 93       	st	X, r21
    1592:	e1 14       	cp	r14, r1
    1594:	f1 04       	cpc	r15, r1
    1596:	79 f7       	brne	.-34     	; 0x1576 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    1598:	40 81       	ld	r20, Z
    159a:	51 81       	ldd	r21, Z+1	; 0x01
    159c:	d1 01       	movw	r26, r2
    159e:	4d 93       	st	X+, r20
    15a0:	5c 93       	st	X, r21
    15a2:	2f 5f       	subi	r18, 0xFF	; 255
    15a4:	3f 4f       	sbci	r19, 0xFF	; 255
    15a6:	b2 e0       	ldi	r27, 0x02	; 2
    15a8:	2b 0e       	add	r2, r27
    15aa:	31 1c       	adc	r3, r1
    15ac:	32 96       	adiw	r30, 0x02	; 2
    15ae:	02 96       	adiw	r24, 0x02	; 2
    15b0:	d4 cf       	rjmp	.-88     	; 0x155a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    15b2:	ef ef       	ldi	r30, 0xFF	; 255
    15b4:	ee 1a       	sub	r14, r30
    15b6:	fe 0a       	sbc	r15, r30
    15b8:	fa e0       	ldi	r31, 0x0A	; 10
    15ba:	ef 16       	cp	r14, r31
    15bc:	f1 04       	cpc	r15, r1
    15be:	09 f0       	breq	.+2      	; 0x15c2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    15c0:	b8 cf       	rjmp	.-144    	; 0x1532 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    15c2:	9e 01       	movw	r18, r28
    15c4:	2f 5f       	subi	r18, 0xFF	; 255
    15c6:	3f 4f       	sbci	r19, 0xFF	; 255
    15c8:	79 01       	movw	r14, r18
    15ca:	36 01       	movw	r6, r12
    15cc:	80 e0       	ldi	r24, 0x00	; 0
    15ce:	90 e0       	ldi	r25, 0x00	; 0
    15d0:	f8 01       	movw	r30, r16
    15d2:	20 85       	ldd	r18, Z+8	; 0x08
    15d4:	30 e0       	ldi	r19, 0x00	; 0
    15d6:	82 17       	cp	r24, r18
    15d8:	93 07       	cpc	r25, r19
    15da:	2c f5       	brge	.+74     	; 0x1626 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    15dc:	d7 01       	movw	r26, r14
    15de:	2d 91       	ld	r18, X+
    15e0:	3d 91       	ld	r19, X+
    15e2:	7d 01       	movw	r14, r26
    15e4:	b3 01       	movw	r22, r6
    15e6:	6c 19       	sub	r22, r12
    15e8:	7d 09       	sbc	r23, r13
    15ea:	d5 01       	movw	r26, r10
    15ec:	ed 91       	ld	r30, X+
    15ee:	fc 91       	ld	r31, X
    15f0:	e6 0f       	add	r30, r22
    15f2:	f7 1f       	adc	r31, r23
    15f4:	40 81       	ld	r20, Z
    15f6:	51 81       	ldd	r21, Z+1	; 0x01
    15f8:	42 17       	cp	r20, r18
    15fa:	53 07       	cpc	r21, r19
    15fc:	10 f4       	brcc	.+4      	; 0x1602 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    15fe:	31 83       	std	Z+1, r19	; 0x01
    1600:	20 83       	st	Z, r18
    1602:	f3 01       	movw	r30, r6
    1604:	21 91       	ld	r18, Z+
    1606:	31 91       	ld	r19, Z+
    1608:	3f 01       	movw	r6, r30
    160a:	d4 01       	movw	r26, r8
    160c:	ed 91       	ld	r30, X+
    160e:	fc 91       	ld	r31, X
    1610:	e6 0f       	add	r30, r22
    1612:	f7 1f       	adc	r31, r23
    1614:	40 81       	ld	r20, Z
    1616:	51 81       	ldd	r21, Z+1	; 0x01
    1618:	24 17       	cp	r18, r20
    161a:	35 07       	cpc	r19, r21
    161c:	10 f4       	brcc	.+4      	; 0x1622 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    161e:	31 83       	std	Z+1, r19	; 0x01
    1620:	20 83       	st	Z, r18
    1622:	01 96       	adiw	r24, 0x01	; 1
    1624:	d5 cf       	rjmp	.-86     	; 0x15d0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    1626:	c0 5a       	subi	r28, 0xA0	; 160
    1628:	df 4f       	sbci	r29, 0xFF	; 255
    162a:	0f b6       	in	r0, 0x3f	; 63
    162c:	f8 94       	cli
    162e:	de bf       	out	0x3e, r29	; 62
    1630:	0f be       	out	0x3f, r0	; 63
    1632:	cd bf       	out	0x3d, r28	; 61
    1634:	df 91       	pop	r29
    1636:	cf 91       	pop	r28
    1638:	1f 91       	pop	r17
    163a:	0f 91       	pop	r16
    163c:	ff 90       	pop	r15
    163e:	ef 90       	pop	r14
    1640:	df 90       	pop	r13
    1642:	cf 90       	pop	r12
    1644:	bf 90       	pop	r11
    1646:	af 90       	pop	r10
    1648:	9f 90       	pop	r9
    164a:	8f 90       	pop	r8
    164c:	7f 90       	pop	r7
    164e:	6f 90       	pop	r6
    1650:	5f 90       	pop	r5
    1652:	3f 90       	pop	r3
    1654:	2f 90       	pop	r2
    1656:	08 95       	ret

00001658 <_ZN16PololuQTRSensors9calibrateEh>:
    1658:	1f 93       	push	r17
    165a:	cf 93       	push	r28
    165c:	df 93       	push	r29
    165e:	ec 01       	movw	r28, r24
    1660:	16 2f       	mov	r17, r22
    1662:	8f ef       	ldi	r24, 0xFF	; 255
    1664:	86 0f       	add	r24, r22
    1666:	82 30       	cpi	r24, 0x02	; 2
    1668:	18 f0       	brcs	.+6      	; 0x1670 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    166a:	66 23       	and	r22, r22
    166c:	59 f0       	breq	.+22     	; 0x1684 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    166e:	14 c0       	rjmp	.+40     	; 0x1698 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1670:	21 e0       	ldi	r18, 0x01	; 1
    1672:	ae 01       	movw	r20, r28
    1674:	4e 5f       	subi	r20, 0xFE	; 254
    1676:	5f 4f       	sbci	r21, 0xFF	; 255
    1678:	be 01       	movw	r22, r28
    167a:	ce 01       	movw	r24, r28
    167c:	0e 94 2b 0a 	call	0x1456	; 0x1456 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1680:	12 30       	cpi	r17, 0x02	; 2
    1682:	51 f4       	brne	.+20     	; 0x1698 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1684:	ae 01       	movw	r20, r28
    1686:	4a 5f       	subi	r20, 0xFA	; 250
    1688:	5f 4f       	sbci	r21, 0xFF	; 255
    168a:	be 01       	movw	r22, r28
    168c:	6c 5f       	subi	r22, 0xFC	; 252
    168e:	7f 4f       	sbci	r23, 0xFF	; 255
    1690:	20 e0       	ldi	r18, 0x00	; 0
    1692:	ce 01       	movw	r24, r28
    1694:	0e 94 2b 0a 	call	0x1456	; 0x1456 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1698:	df 91       	pop	r29
    169a:	cf 91       	pop	r28
    169c:	1f 91       	pop	r17
    169e:	08 95       	ret

000016a0 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    16a0:	a0 e0       	ldi	r26, 0x00	; 0
    16a2:	b0 e0       	ldi	r27, 0x00	; 0
    16a4:	e6 e5       	ldi	r30, 0x56	; 86
    16a6:	fb e0       	ldi	r31, 0x0B	; 11
    16a8:	0c 94 2a 0d 	jmp	0x1a54	; 0x1a54 <__prologue_saves__+0x12>
    16ac:	ec 01       	movw	r28, r24
    16ae:	8b 01       	movw	r16, r22
    16b0:	b4 2e       	mov	r11, r20
    16b2:	84 2f       	mov	r24, r20
    16b4:	8d 7f       	andi	r24, 0xFD	; 253
    16b6:	51 f4       	brne	.+20     	; 0x16cc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    16b8:	8c 81       	ldd	r24, Y+4	; 0x04
    16ba:	9d 81       	ldd	r25, Y+5	; 0x05
    16bc:	89 2b       	or	r24, r25
    16be:	09 f4       	brne	.+2      	; 0x16c2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    16c0:	97 c0       	rjmp	.+302    	; 0x17f0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    16c2:	8e 81       	ldd	r24, Y+6	; 0x06
    16c4:	9f 81       	ldd	r25, Y+7	; 0x07
    16c6:	89 2b       	or	r24, r25
    16c8:	09 f4       	brne	.+2      	; 0x16cc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    16ca:	92 c0       	rjmp	.+292    	; 0x17f0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    16cc:	8f ef       	ldi	r24, 0xFF	; 255
    16ce:	8b 0d       	add	r24, r11
    16d0:	82 30       	cpi	r24, 0x02	; 2
    16d2:	50 f4       	brcc	.+20     	; 0x16e8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    16d4:	88 81       	ld	r24, Y
    16d6:	99 81       	ldd	r25, Y+1	; 0x01
    16d8:	89 2b       	or	r24, r25
    16da:	09 f4       	brne	.+2      	; 0x16de <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    16dc:	89 c0       	rjmp	.+274    	; 0x17f0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    16de:	8a 81       	ldd	r24, Y+2	; 0x02
    16e0:	9b 81       	ldd	r25, Y+3	; 0x03
    16e2:	89 2b       	or	r24, r25
    16e4:	09 f4       	brne	.+2      	; 0x16e8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    16e6:	84 c0       	rjmp	.+264    	; 0x17f0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    16e8:	4b 2d       	mov	r20, r11
    16ea:	b8 01       	movw	r22, r16
    16ec:	ce 01       	movw	r24, r28
    16ee:	0e 94 ce 09 	call	0x139c	; 0x139c <_ZN16PololuQTRSensors4readEPjh>
    16f2:	78 01       	movw	r14, r16
    16f4:	00 e0       	ldi	r16, 0x00	; 0
    16f6:	10 e0       	ldi	r17, 0x00	; 0
    16f8:	c1 2c       	mov	r12, r1
    16fa:	d1 2c       	mov	r13, r1
    16fc:	88 85       	ldd	r24, Y+8	; 0x08
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	c8 16       	cp	r12, r24
    1702:	d9 06       	cpc	r13, r25
    1704:	0c f0       	brlt	.+2      	; 0x1708 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    1706:	74 c0       	rjmp	.+232    	; 0x17f0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1708:	81 e0       	ldi	r24, 0x01	; 1
    170a:	b8 12       	cpse	r11, r24
    170c:	0a c0       	rjmp	.+20     	; 0x1722 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    170e:	ea 81       	ldd	r30, Y+2	; 0x02
    1710:	fb 81       	ldd	r31, Y+3	; 0x03
    1712:	e0 0f       	add	r30, r16
    1714:	f1 1f       	adc	r31, r17
    1716:	01 90       	ld	r0, Z+
    1718:	f0 81       	ld	r31, Z
    171a:	e0 2d       	mov	r30, r0
    171c:	a8 81       	ld	r26, Y
    171e:	b9 81       	ldd	r27, Y+1	; 0x01
    1720:	0d c0       	rjmp	.+26     	; 0x173c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    1722:	8c 81       	ldd	r24, Y+4	; 0x04
    1724:	9d 81       	ldd	r25, Y+5	; 0x05
    1726:	2e 81       	ldd	r18, Y+6	; 0x06
    1728:	3f 81       	ldd	r19, Y+7	; 0x07
    172a:	b1 10       	cpse	r11, r1
    172c:	0c c0       	rjmp	.+24     	; 0x1746 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    172e:	f9 01       	movw	r30, r18
    1730:	e0 0f       	add	r30, r16
    1732:	f1 1f       	adc	r31, r17
    1734:	01 90       	ld	r0, Z+
    1736:	f0 81       	ld	r31, Z
    1738:	e0 2d       	mov	r30, r0
    173a:	dc 01       	movw	r26, r24
    173c:	a0 0f       	add	r26, r16
    173e:	b1 1f       	adc	r27, r17
    1740:	8d 91       	ld	r24, X+
    1742:	9c 91       	ld	r25, X
    1744:	28 c0       	rjmp	.+80     	; 0x1796 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    1746:	fc 01       	movw	r30, r24
    1748:	e0 0f       	add	r30, r16
    174a:	f1 1f       	adc	r31, r17
    174c:	40 81       	ld	r20, Z
    174e:	51 81       	ldd	r21, Z+1	; 0x01
    1750:	e8 81       	ld	r30, Y
    1752:	f9 81       	ldd	r31, Y+1	; 0x01
    1754:	e0 0f       	add	r30, r16
    1756:	f1 1f       	adc	r31, r17
    1758:	80 81       	ld	r24, Z
    175a:	91 81       	ldd	r25, Z+1	; 0x01
    175c:	ee 85       	ldd	r30, Y+14	; 0x0e
    175e:	ff 85       	ldd	r31, Y+15	; 0x0f
    1760:	48 17       	cp	r20, r24
    1762:	59 07       	cpc	r21, r25
    1764:	10 f4       	brcc	.+4      	; 0x176a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    1766:	cf 01       	movw	r24, r30
    1768:	04 c0       	rjmp	.+8      	; 0x1772 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    176a:	8e 0f       	add	r24, r30
    176c:	9f 1f       	adc	r25, r31
    176e:	84 1b       	sub	r24, r20
    1770:	95 0b       	sbc	r25, r21
    1772:	d9 01       	movw	r26, r18
    1774:	a0 0f       	add	r26, r16
    1776:	b1 1f       	adc	r27, r17
    1778:	2d 91       	ld	r18, X+
    177a:	3c 91       	ld	r19, X
    177c:	aa 81       	ldd	r26, Y+2	; 0x02
    177e:	bb 81       	ldd	r27, Y+3	; 0x03
    1780:	a0 0f       	add	r26, r16
    1782:	b1 1f       	adc	r27, r17
    1784:	4d 91       	ld	r20, X+
    1786:	5c 91       	ld	r21, X
    1788:	24 17       	cp	r18, r20
    178a:	35 07       	cpc	r19, r21
    178c:	20 f0       	brcs	.+8      	; 0x1796 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    178e:	e4 0f       	add	r30, r20
    1790:	f5 1f       	adc	r31, r21
    1792:	e2 1b       	sub	r30, r18
    1794:	f3 0b       	sbc	r31, r19
    1796:	e8 1b       	sub	r30, r24
    1798:	f9 0b       	sbc	r31, r25
    179a:	a9 f0       	breq	.+42     	; 0x17c6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    179c:	d7 01       	movw	r26, r14
    179e:	2d 91       	ld	r18, X+
    17a0:	3c 91       	ld	r19, X
    17a2:	40 e0       	ldi	r20, 0x00	; 0
    17a4:	50 e0       	ldi	r21, 0x00	; 0
    17a6:	28 1b       	sub	r18, r24
    17a8:	39 0b       	sbc	r19, r25
    17aa:	41 09       	sbc	r20, r1
    17ac:	51 09       	sbc	r21, r1
    17ae:	a8 ee       	ldi	r26, 0xE8	; 232
    17b0:	b3 e0       	ldi	r27, 0x03	; 3
    17b2:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <__muluhisi3>
    17b6:	9f 01       	movw	r18, r30
    17b8:	40 e0       	ldi	r20, 0x00	; 0
    17ba:	50 e0       	ldi	r21, 0x00	; 0
    17bc:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <__divmodsi4>
    17c0:	37 fd       	sbrc	r19, 7
    17c2:	0a c0       	rjmp	.+20     	; 0x17d8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    17c4:	02 c0       	rjmp	.+4      	; 0x17ca <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    17c6:	20 e0       	ldi	r18, 0x00	; 0
    17c8:	30 e0       	ldi	r19, 0x00	; 0
    17ca:	29 3e       	cpi	r18, 0xE9	; 233
    17cc:	b3 e0       	ldi	r27, 0x03	; 3
    17ce:	3b 07       	cpc	r19, r27
    17d0:	2c f0       	brlt	.+10     	; 0x17dc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    17d2:	28 ee       	ldi	r18, 0xE8	; 232
    17d4:	33 e0       	ldi	r19, 0x03	; 3
    17d6:	02 c0       	rjmp	.+4      	; 0x17dc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    17d8:	20 e0       	ldi	r18, 0x00	; 0
    17da:	30 e0       	ldi	r19, 0x00	; 0
    17dc:	f7 01       	movw	r30, r14
    17de:	21 93       	st	Z+, r18
    17e0:	31 93       	st	Z+, r19
    17e2:	7f 01       	movw	r14, r30
    17e4:	ff ef       	ldi	r31, 0xFF	; 255
    17e6:	cf 1a       	sub	r12, r31
    17e8:	df 0a       	sbc	r13, r31
    17ea:	0e 5f       	subi	r16, 0xFE	; 254
    17ec:	1f 4f       	sbci	r17, 0xFF	; 255
    17ee:	86 cf       	rjmp	.-244    	; 0x16fc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    17f0:	cd b7       	in	r28, 0x3d	; 61
    17f2:	de b7       	in	r29, 0x3e	; 62
    17f4:	e9 e0       	ldi	r30, 0x09	; 9
    17f6:	0c 94 46 0d 	jmp	0x1a8c	; 0x1a8c <__epilogue_restores__+0x12>

000017fa <_ZN16PololuQTRSensors8readLineEPjhh>:
    17fa:	a0 e0       	ldi	r26, 0x00	; 0
    17fc:	b0 e0       	ldi	r27, 0x00	; 0
    17fe:	e3 e0       	ldi	r30, 0x03	; 3
    1800:	fc e0       	ldi	r31, 0x0C	; 12
    1802:	0c 94 21 0d 	jmp	0x1a42	; 0x1a42 <__prologue_saves__>
    1806:	ec 01       	movw	r28, r24
    1808:	8b 01       	movw	r16, r22
    180a:	82 2e       	mov	r8, r18
    180c:	0e 94 50 0b 	call	0x16a0	; 0x16a0 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    1810:	28 84       	ldd	r2, Y+8	; 0x08
    1812:	e8 01       	movw	r28, r16
    1814:	41 2c       	mov	r4, r1
    1816:	51 2c       	mov	r5, r1
    1818:	32 01       	movw	r6, r4
    181a:	00 e0       	ldi	r16, 0x00	; 0
    181c:	10 e0       	ldi	r17, 0x00	; 0
    181e:	c1 2c       	mov	r12, r1
    1820:	d1 2c       	mov	r13, r1
    1822:	76 01       	movw	r14, r12
    1824:	31 2c       	mov	r3, r1
    1826:	91 2c       	mov	r9, r1
    1828:	58 ee       	ldi	r21, 0xE8	; 232
    182a:	a5 2e       	mov	r10, r21
    182c:	53 e0       	ldi	r21, 0x03	; 3
    182e:	b5 2e       	mov	r11, r21
    1830:	92 14       	cp	r9, r2
    1832:	21 f1       	breq	.+72     	; 0x187c <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    1834:	e9 91       	ld	r30, Y+
    1836:	f9 91       	ld	r31, Y+
    1838:	88 20       	and	r8, r8
    183a:	21 f0       	breq	.+8      	; 0x1844 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    183c:	c5 01       	movw	r24, r10
    183e:	8e 1b       	sub	r24, r30
    1840:	9f 0b       	sbc	r25, r31
    1842:	fc 01       	movw	r30, r24
    1844:	e9 3c       	cpi	r30, 0xC9	; 201
    1846:	f1 05       	cpc	r31, r1
    1848:	24 f4       	brge	.+8      	; 0x1852 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    184a:	e3 33       	cpi	r30, 0x33	; 51
    184c:	f1 05       	cpc	r31, r1
    184e:	74 f0       	brlt	.+28     	; 0x186c <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    1850:	02 c0       	rjmp	.+4      	; 0x1856 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    1852:	33 24       	eor	r3, r3
    1854:	33 94       	inc	r3
    1856:	df 01       	movw	r26, r30
    1858:	a3 01       	movw	r20, r6
    185a:	92 01       	movw	r18, r4
    185c:	0e 94 19 0d 	call	0x1a32	; 0x1a32 <__mulshisi3>
    1860:	c6 0e       	add	r12, r22
    1862:	d7 1e       	adc	r13, r23
    1864:	e8 1e       	adc	r14, r24
    1866:	f9 1e       	adc	r15, r25
    1868:	0e 0f       	add	r16, r30
    186a:	1f 1f       	adc	r17, r31
    186c:	93 94       	inc	r9
    186e:	98 ee       	ldi	r25, 0xE8	; 232
    1870:	49 0e       	add	r4, r25
    1872:	93 e0       	ldi	r25, 0x03	; 3
    1874:	59 1e       	adc	r5, r25
    1876:	61 1c       	adc	r6, r1
    1878:	71 1c       	adc	r7, r1
    187a:	da cf       	rjmp	.-76     	; 0x1830 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    187c:	31 10       	cpse	r3, r1
    187e:	1e c0       	rjmp	.+60     	; 0x18bc <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    1880:	49 2d       	mov	r20, r9
    1882:	50 e0       	ldi	r21, 0x00	; 0
    1884:	41 50       	subi	r20, 0x01	; 1
    1886:	51 09       	sbc	r21, r1
    1888:	24 ef       	ldi	r18, 0xF4	; 244
    188a:	31 e0       	ldi	r19, 0x01	; 1
    188c:	42 9f       	mul	r20, r18
    188e:	c0 01       	movw	r24, r0
    1890:	43 9f       	mul	r20, r19
    1892:	90 0d       	add	r25, r0
    1894:	52 9f       	mul	r21, r18
    1896:	90 0d       	add	r25, r0
    1898:	11 24       	eor	r1, r1
    189a:	20 91 98 01 	lds	r18, 0x0198	; 0x800198 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    189e:	30 91 99 01 	lds	r19, 0x0199	; 0x800199 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    18a2:	28 17       	cp	r18, r24
    18a4:	39 07       	cpc	r19, r25
    18a6:	b4 f0       	brlt	.+44     	; 0x18d4 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    18a8:	88 ee       	ldi	r24, 0xE8	; 232
    18aa:	93 e0       	ldi	r25, 0x03	; 3
    18ac:	48 9f       	mul	r20, r24
    18ae:	90 01       	movw	r18, r0
    18b0:	49 9f       	mul	r20, r25
    18b2:	30 0d       	add	r19, r0
    18b4:	58 9f       	mul	r21, r24
    18b6:	30 0d       	add	r19, r0
    18b8:	11 24       	eor	r1, r1
    18ba:	0e c0       	rjmp	.+28     	; 0x18d8 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    18bc:	98 01       	movw	r18, r16
    18be:	40 e0       	ldi	r20, 0x00	; 0
    18c0:	50 e0       	ldi	r21, 0x00	; 0
    18c2:	c7 01       	movw	r24, r14
    18c4:	b6 01       	movw	r22, r12
    18c6:	0e 94 b8 0c 	call	0x1970	; 0x1970 <__udivmodsi4>
    18ca:	30 93 99 01 	sts	0x0199, r19	; 0x800199 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    18ce:	20 93 98 01 	sts	0x0198, r18	; 0x800198 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    18d2:	02 c0       	rjmp	.+4      	; 0x18d8 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    18d4:	20 e0       	ldi	r18, 0x00	; 0
    18d6:	30 e0       	ldi	r19, 0x00	; 0
    18d8:	c9 01       	movw	r24, r18
    18da:	cd b7       	in	r28, 0x3d	; 61
    18dc:	de b7       	in	r29, 0x3e	; 62
    18de:	e2 e1       	ldi	r30, 0x12	; 18
    18e0:	0c 94 3d 0d 	jmp	0x1a7a	; 0x1a7a <__epilogue_restores__>

000018e4 <_ZN16PololuQTRSensorsD1Ev>:
    18e4:	cf 93       	push	r28
    18e6:	df 93       	push	r29
    18e8:	ec 01       	movw	r28, r24
    18ea:	8a 81       	ldd	r24, Y+2	; 0x02
    18ec:	9b 81       	ldd	r25, Y+3	; 0x03
    18ee:	00 97       	sbiw	r24, 0x00	; 0
    18f0:	11 f0       	breq	.+4      	; 0x18f6 <_ZN16PololuQTRSensorsD1Ev+0x12>
    18f2:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <free>
    18f6:	8e 81       	ldd	r24, Y+6	; 0x06
    18f8:	9f 81       	ldd	r25, Y+7	; 0x07
    18fa:	00 97       	sbiw	r24, 0x00	; 0
    18fc:	11 f0       	breq	.+4      	; 0x1902 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    18fe:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <free>
    1902:	88 81       	ld	r24, Y
    1904:	99 81       	ldd	r25, Y+1	; 0x01
    1906:	00 97       	sbiw	r24, 0x00	; 0
    1908:	11 f0       	breq	.+4      	; 0x190e <_ZN16PololuQTRSensorsD1Ev+0x2a>
    190a:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <free>
    190e:	8c 81       	ldd	r24, Y+4	; 0x04
    1910:	9d 81       	ldd	r25, Y+5	; 0x05
    1912:	00 97       	sbiw	r24, 0x00	; 0
    1914:	11 f0       	breq	.+4      	; 0x191a <_ZN16PololuQTRSensorsD1Ev+0x36>
    1916:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <free>
    191a:	df 91       	pop	r29
    191c:	cf 91       	pop	r28
    191e:	08 95       	ret

00001920 <__udivmodhi4>:
    1920:	aa 1b       	sub	r26, r26
    1922:	bb 1b       	sub	r27, r27
    1924:	51 e1       	ldi	r21, 0x11	; 17
    1926:	07 c0       	rjmp	.+14     	; 0x1936 <__udivmodhi4_ep>

00001928 <__udivmodhi4_loop>:
    1928:	aa 1f       	adc	r26, r26
    192a:	bb 1f       	adc	r27, r27
    192c:	a6 17       	cp	r26, r22
    192e:	b7 07       	cpc	r27, r23
    1930:	10 f0       	brcs	.+4      	; 0x1936 <__udivmodhi4_ep>
    1932:	a6 1b       	sub	r26, r22
    1934:	b7 0b       	sbc	r27, r23

00001936 <__udivmodhi4_ep>:
    1936:	88 1f       	adc	r24, r24
    1938:	99 1f       	adc	r25, r25
    193a:	5a 95       	dec	r21
    193c:	a9 f7       	brne	.-22     	; 0x1928 <__udivmodhi4_loop>
    193e:	80 95       	com	r24
    1940:	90 95       	com	r25
    1942:	bc 01       	movw	r22, r24
    1944:	cd 01       	movw	r24, r26
    1946:	08 95       	ret

00001948 <__divmodhi4>:
    1948:	97 fb       	bst	r25, 7
    194a:	07 2e       	mov	r0, r23
    194c:	16 f4       	brtc	.+4      	; 0x1952 <__divmodhi4+0xa>
    194e:	00 94       	com	r0
    1950:	07 d0       	rcall	.+14     	; 0x1960 <__divmodhi4_neg1>
    1952:	77 fd       	sbrc	r23, 7
    1954:	09 d0       	rcall	.+18     	; 0x1968 <__divmodhi4_neg2>
    1956:	0e 94 90 0c 	call	0x1920	; 0x1920 <__udivmodhi4>
    195a:	07 fc       	sbrc	r0, 7
    195c:	05 d0       	rcall	.+10     	; 0x1968 <__divmodhi4_neg2>
    195e:	3e f4       	brtc	.+14     	; 0x196e <__divmodhi4_exit>

00001960 <__divmodhi4_neg1>:
    1960:	90 95       	com	r25
    1962:	81 95       	neg	r24
    1964:	9f 4f       	sbci	r25, 0xFF	; 255
    1966:	08 95       	ret

00001968 <__divmodhi4_neg2>:
    1968:	70 95       	com	r23
    196a:	61 95       	neg	r22
    196c:	7f 4f       	sbci	r23, 0xFF	; 255

0000196e <__divmodhi4_exit>:
    196e:	08 95       	ret

00001970 <__udivmodsi4>:
    1970:	a1 e2       	ldi	r26, 0x21	; 33
    1972:	1a 2e       	mov	r1, r26
    1974:	aa 1b       	sub	r26, r26
    1976:	bb 1b       	sub	r27, r27
    1978:	fd 01       	movw	r30, r26
    197a:	0d c0       	rjmp	.+26     	; 0x1996 <__udivmodsi4_ep>

0000197c <__udivmodsi4_loop>:
    197c:	aa 1f       	adc	r26, r26
    197e:	bb 1f       	adc	r27, r27
    1980:	ee 1f       	adc	r30, r30
    1982:	ff 1f       	adc	r31, r31
    1984:	a2 17       	cp	r26, r18
    1986:	b3 07       	cpc	r27, r19
    1988:	e4 07       	cpc	r30, r20
    198a:	f5 07       	cpc	r31, r21
    198c:	20 f0       	brcs	.+8      	; 0x1996 <__udivmodsi4_ep>
    198e:	a2 1b       	sub	r26, r18
    1990:	b3 0b       	sbc	r27, r19
    1992:	e4 0b       	sbc	r30, r20
    1994:	f5 0b       	sbc	r31, r21

00001996 <__udivmodsi4_ep>:
    1996:	66 1f       	adc	r22, r22
    1998:	77 1f       	adc	r23, r23
    199a:	88 1f       	adc	r24, r24
    199c:	99 1f       	adc	r25, r25
    199e:	1a 94       	dec	r1
    19a0:	69 f7       	brne	.-38     	; 0x197c <__udivmodsi4_loop>
    19a2:	60 95       	com	r22
    19a4:	70 95       	com	r23
    19a6:	80 95       	com	r24
    19a8:	90 95       	com	r25
    19aa:	9b 01       	movw	r18, r22
    19ac:	ac 01       	movw	r20, r24
    19ae:	bd 01       	movw	r22, r26
    19b0:	cf 01       	movw	r24, r30
    19b2:	08 95       	ret

000019b4 <__divmodsi4>:
    19b4:	05 2e       	mov	r0, r21
    19b6:	97 fb       	bst	r25, 7
    19b8:	1e f4       	brtc	.+6      	; 0x19c0 <__divmodsi4+0xc>
    19ba:	00 94       	com	r0
    19bc:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <__negsi2>
    19c0:	57 fd       	sbrc	r21, 7
    19c2:	07 d0       	rcall	.+14     	; 0x19d2 <__divmodsi4_neg2>
    19c4:	0e 94 b8 0c 	call	0x1970	; 0x1970 <__udivmodsi4>
    19c8:	07 fc       	sbrc	r0, 7
    19ca:	03 d0       	rcall	.+6      	; 0x19d2 <__divmodsi4_neg2>
    19cc:	4e f4       	brtc	.+18     	; 0x19e0 <__divmodsi4_exit>
    19ce:	0c 94 f1 0c 	jmp	0x19e2	; 0x19e2 <__negsi2>

000019d2 <__divmodsi4_neg2>:
    19d2:	50 95       	com	r21
    19d4:	40 95       	com	r20
    19d6:	30 95       	com	r19
    19d8:	21 95       	neg	r18
    19da:	3f 4f       	sbci	r19, 0xFF	; 255
    19dc:	4f 4f       	sbci	r20, 0xFF	; 255
    19de:	5f 4f       	sbci	r21, 0xFF	; 255

000019e0 <__divmodsi4_exit>:
    19e0:	08 95       	ret

000019e2 <__negsi2>:
    19e2:	90 95       	com	r25
    19e4:	80 95       	com	r24
    19e6:	70 95       	com	r23
    19e8:	61 95       	neg	r22
    19ea:	7f 4f       	sbci	r23, 0xFF	; 255
    19ec:	8f 4f       	sbci	r24, 0xFF	; 255
    19ee:	9f 4f       	sbci	r25, 0xFF	; 255
    19f0:	08 95       	ret

000019f2 <__tablejump2__>:
    19f2:	ee 0f       	add	r30, r30
    19f4:	ff 1f       	adc	r31, r31
    19f6:	05 90       	lpm	r0, Z+
    19f8:	f4 91       	lpm	r31, Z
    19fa:	e0 2d       	mov	r30, r0
    19fc:	09 94       	ijmp

000019fe <__umulhisi3>:
    19fe:	a2 9f       	mul	r26, r18
    1a00:	b0 01       	movw	r22, r0
    1a02:	b3 9f       	mul	r27, r19
    1a04:	c0 01       	movw	r24, r0
    1a06:	a3 9f       	mul	r26, r19
    1a08:	70 0d       	add	r23, r0
    1a0a:	81 1d       	adc	r24, r1
    1a0c:	11 24       	eor	r1, r1
    1a0e:	91 1d       	adc	r25, r1
    1a10:	b2 9f       	mul	r27, r18
    1a12:	70 0d       	add	r23, r0
    1a14:	81 1d       	adc	r24, r1
    1a16:	11 24       	eor	r1, r1
    1a18:	91 1d       	adc	r25, r1
    1a1a:	08 95       	ret

00001a1c <__muluhisi3>:
    1a1c:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <__umulhisi3>
    1a20:	a5 9f       	mul	r26, r21
    1a22:	90 0d       	add	r25, r0
    1a24:	b4 9f       	mul	r27, r20
    1a26:	90 0d       	add	r25, r0
    1a28:	a4 9f       	mul	r26, r20
    1a2a:	80 0d       	add	r24, r0
    1a2c:	91 1d       	adc	r25, r1
    1a2e:	11 24       	eor	r1, r1
    1a30:	08 95       	ret

00001a32 <__mulshisi3>:
    1a32:	b7 ff       	sbrs	r27, 7
    1a34:	0c 94 0e 0d 	jmp	0x1a1c	; 0x1a1c <__muluhisi3>

00001a38 <__mulohisi3>:
    1a38:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <__muluhisi3>
    1a3c:	82 1b       	sub	r24, r18
    1a3e:	93 0b       	sbc	r25, r19
    1a40:	08 95       	ret

00001a42 <__prologue_saves__>:
    1a42:	2f 92       	push	r2
    1a44:	3f 92       	push	r3
    1a46:	4f 92       	push	r4
    1a48:	5f 92       	push	r5
    1a4a:	6f 92       	push	r6
    1a4c:	7f 92       	push	r7
    1a4e:	8f 92       	push	r8
    1a50:	9f 92       	push	r9
    1a52:	af 92       	push	r10
    1a54:	bf 92       	push	r11
    1a56:	cf 92       	push	r12
    1a58:	df 92       	push	r13
    1a5a:	ef 92       	push	r14
    1a5c:	ff 92       	push	r15
    1a5e:	0f 93       	push	r16
    1a60:	1f 93       	push	r17
    1a62:	cf 93       	push	r28
    1a64:	df 93       	push	r29
    1a66:	cd b7       	in	r28, 0x3d	; 61
    1a68:	de b7       	in	r29, 0x3e	; 62
    1a6a:	ca 1b       	sub	r28, r26
    1a6c:	db 0b       	sbc	r29, r27
    1a6e:	0f b6       	in	r0, 0x3f	; 63
    1a70:	f8 94       	cli
    1a72:	de bf       	out	0x3e, r29	; 62
    1a74:	0f be       	out	0x3f, r0	; 63
    1a76:	cd bf       	out	0x3d, r28	; 61
    1a78:	09 94       	ijmp

00001a7a <__epilogue_restores__>:
    1a7a:	2a 88       	ldd	r2, Y+18	; 0x12
    1a7c:	39 88       	ldd	r3, Y+17	; 0x11
    1a7e:	48 88       	ldd	r4, Y+16	; 0x10
    1a80:	5f 84       	ldd	r5, Y+15	; 0x0f
    1a82:	6e 84       	ldd	r6, Y+14	; 0x0e
    1a84:	7d 84       	ldd	r7, Y+13	; 0x0d
    1a86:	8c 84       	ldd	r8, Y+12	; 0x0c
    1a88:	9b 84       	ldd	r9, Y+11	; 0x0b
    1a8a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1a8c:	b9 84       	ldd	r11, Y+9	; 0x09
    1a8e:	c8 84       	ldd	r12, Y+8	; 0x08
    1a90:	df 80       	ldd	r13, Y+7	; 0x07
    1a92:	ee 80       	ldd	r14, Y+6	; 0x06
    1a94:	fd 80       	ldd	r15, Y+5	; 0x05
    1a96:	0c 81       	ldd	r16, Y+4	; 0x04
    1a98:	1b 81       	ldd	r17, Y+3	; 0x03
    1a9a:	aa 81       	ldd	r26, Y+2	; 0x02
    1a9c:	b9 81       	ldd	r27, Y+1	; 0x01
    1a9e:	ce 0f       	add	r28, r30
    1aa0:	d1 1d       	adc	r29, r1
    1aa2:	0f b6       	in	r0, 0x3f	; 63
    1aa4:	f8 94       	cli
    1aa6:	de bf       	out	0x3e, r29	; 62
    1aa8:	0f be       	out	0x3f, r0	; 63
    1aaa:	cd bf       	out	0x3d, r28	; 61
    1aac:	ed 01       	movw	r28, r26
    1aae:	08 95       	ret

00001ab0 <malloc>:
    1ab0:	0f 93       	push	r16
    1ab2:	1f 93       	push	r17
    1ab4:	cf 93       	push	r28
    1ab6:	df 93       	push	r29
    1ab8:	82 30       	cpi	r24, 0x02	; 2
    1aba:	91 05       	cpc	r25, r1
    1abc:	10 f4       	brcc	.+4      	; 0x1ac2 <malloc+0x12>
    1abe:	82 e0       	ldi	r24, 0x02	; 2
    1ac0:	90 e0       	ldi	r25, 0x00	; 0
    1ac2:	e0 91 af 01 	lds	r30, 0x01AF	; 0x8001af <__flp>
    1ac6:	f0 91 b0 01 	lds	r31, 0x01B0	; 0x8001b0 <__flp+0x1>
    1aca:	20 e0       	ldi	r18, 0x00	; 0
    1acc:	30 e0       	ldi	r19, 0x00	; 0
    1ace:	a0 e0       	ldi	r26, 0x00	; 0
    1ad0:	b0 e0       	ldi	r27, 0x00	; 0
    1ad2:	30 97       	sbiw	r30, 0x00	; 0
    1ad4:	19 f1       	breq	.+70     	; 0x1b1c <malloc+0x6c>
    1ad6:	40 81       	ld	r20, Z
    1ad8:	51 81       	ldd	r21, Z+1	; 0x01
    1ada:	02 81       	ldd	r16, Z+2	; 0x02
    1adc:	13 81       	ldd	r17, Z+3	; 0x03
    1ade:	48 17       	cp	r20, r24
    1ae0:	59 07       	cpc	r21, r25
    1ae2:	c8 f0       	brcs	.+50     	; 0x1b16 <malloc+0x66>
    1ae4:	84 17       	cp	r24, r20
    1ae6:	95 07       	cpc	r25, r21
    1ae8:	69 f4       	brne	.+26     	; 0x1b04 <malloc+0x54>
    1aea:	10 97       	sbiw	r26, 0x00	; 0
    1aec:	31 f0       	breq	.+12     	; 0x1afa <malloc+0x4a>
    1aee:	12 96       	adiw	r26, 0x02	; 2
    1af0:	0c 93       	st	X, r16
    1af2:	12 97       	sbiw	r26, 0x02	; 2
    1af4:	13 96       	adiw	r26, 0x03	; 3
    1af6:	1c 93       	st	X, r17
    1af8:	27 c0       	rjmp	.+78     	; 0x1b48 <malloc+0x98>
    1afa:	00 93 af 01 	sts	0x01AF, r16	; 0x8001af <__flp>
    1afe:	10 93 b0 01 	sts	0x01B0, r17	; 0x8001b0 <__flp+0x1>
    1b02:	22 c0       	rjmp	.+68     	; 0x1b48 <malloc+0x98>
    1b04:	21 15       	cp	r18, r1
    1b06:	31 05       	cpc	r19, r1
    1b08:	19 f0       	breq	.+6      	; 0x1b10 <malloc+0x60>
    1b0a:	42 17       	cp	r20, r18
    1b0c:	53 07       	cpc	r21, r19
    1b0e:	18 f4       	brcc	.+6      	; 0x1b16 <malloc+0x66>
    1b10:	9a 01       	movw	r18, r20
    1b12:	bd 01       	movw	r22, r26
    1b14:	ef 01       	movw	r28, r30
    1b16:	df 01       	movw	r26, r30
    1b18:	f8 01       	movw	r30, r16
    1b1a:	db cf       	rjmp	.-74     	; 0x1ad2 <malloc+0x22>
    1b1c:	21 15       	cp	r18, r1
    1b1e:	31 05       	cpc	r19, r1
    1b20:	f9 f0       	breq	.+62     	; 0x1b60 <malloc+0xb0>
    1b22:	28 1b       	sub	r18, r24
    1b24:	39 0b       	sbc	r19, r25
    1b26:	24 30       	cpi	r18, 0x04	; 4
    1b28:	31 05       	cpc	r19, r1
    1b2a:	80 f4       	brcc	.+32     	; 0x1b4c <malloc+0x9c>
    1b2c:	8a 81       	ldd	r24, Y+2	; 0x02
    1b2e:	9b 81       	ldd	r25, Y+3	; 0x03
    1b30:	61 15       	cp	r22, r1
    1b32:	71 05       	cpc	r23, r1
    1b34:	21 f0       	breq	.+8      	; 0x1b3e <malloc+0x8e>
    1b36:	fb 01       	movw	r30, r22
    1b38:	93 83       	std	Z+3, r25	; 0x03
    1b3a:	82 83       	std	Z+2, r24	; 0x02
    1b3c:	04 c0       	rjmp	.+8      	; 0x1b46 <malloc+0x96>
    1b3e:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <__flp+0x1>
    1b42:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <__flp>
    1b46:	fe 01       	movw	r30, r28
    1b48:	32 96       	adiw	r30, 0x02	; 2
    1b4a:	44 c0       	rjmp	.+136    	; 0x1bd4 <malloc+0x124>
    1b4c:	fe 01       	movw	r30, r28
    1b4e:	e2 0f       	add	r30, r18
    1b50:	f3 1f       	adc	r31, r19
    1b52:	81 93       	st	Z+, r24
    1b54:	91 93       	st	Z+, r25
    1b56:	22 50       	subi	r18, 0x02	; 2
    1b58:	31 09       	sbc	r19, r1
    1b5a:	39 83       	std	Y+1, r19	; 0x01
    1b5c:	28 83       	st	Y, r18
    1b5e:	3a c0       	rjmp	.+116    	; 0x1bd4 <malloc+0x124>
    1b60:	20 91 ad 01 	lds	r18, 0x01AD	; 0x8001ad <__brkval>
    1b64:	30 91 ae 01 	lds	r19, 0x01AE	; 0x8001ae <__brkval+0x1>
    1b68:	23 2b       	or	r18, r19
    1b6a:	41 f4       	brne	.+16     	; 0x1b7c <malloc+0xcc>
    1b6c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    1b70:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    1b74:	30 93 ae 01 	sts	0x01AE, r19	; 0x8001ae <__brkval+0x1>
    1b78:	20 93 ad 01 	sts	0x01AD, r18	; 0x8001ad <__brkval>
    1b7c:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    1b80:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    1b84:	21 15       	cp	r18, r1
    1b86:	31 05       	cpc	r19, r1
    1b88:	41 f4       	brne	.+16     	; 0x1b9a <malloc+0xea>
    1b8a:	2d b7       	in	r18, 0x3d	; 61
    1b8c:	3e b7       	in	r19, 0x3e	; 62
    1b8e:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    1b92:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    1b96:	24 1b       	sub	r18, r20
    1b98:	35 0b       	sbc	r19, r21
    1b9a:	e0 91 ad 01 	lds	r30, 0x01AD	; 0x8001ad <__brkval>
    1b9e:	f0 91 ae 01 	lds	r31, 0x01AE	; 0x8001ae <__brkval+0x1>
    1ba2:	e2 17       	cp	r30, r18
    1ba4:	f3 07       	cpc	r31, r19
    1ba6:	a0 f4       	brcc	.+40     	; 0x1bd0 <malloc+0x120>
    1ba8:	2e 1b       	sub	r18, r30
    1baa:	3f 0b       	sbc	r19, r31
    1bac:	28 17       	cp	r18, r24
    1bae:	39 07       	cpc	r19, r25
    1bb0:	78 f0       	brcs	.+30     	; 0x1bd0 <malloc+0x120>
    1bb2:	ac 01       	movw	r20, r24
    1bb4:	4e 5f       	subi	r20, 0xFE	; 254
    1bb6:	5f 4f       	sbci	r21, 0xFF	; 255
    1bb8:	24 17       	cp	r18, r20
    1bba:	35 07       	cpc	r19, r21
    1bbc:	48 f0       	brcs	.+18     	; 0x1bd0 <malloc+0x120>
    1bbe:	4e 0f       	add	r20, r30
    1bc0:	5f 1f       	adc	r21, r31
    1bc2:	50 93 ae 01 	sts	0x01AE, r21	; 0x8001ae <__brkval+0x1>
    1bc6:	40 93 ad 01 	sts	0x01AD, r20	; 0x8001ad <__brkval>
    1bca:	81 93       	st	Z+, r24
    1bcc:	91 93       	st	Z+, r25
    1bce:	02 c0       	rjmp	.+4      	; 0x1bd4 <malloc+0x124>
    1bd0:	e0 e0       	ldi	r30, 0x00	; 0
    1bd2:	f0 e0       	ldi	r31, 0x00	; 0
    1bd4:	cf 01       	movw	r24, r30
    1bd6:	df 91       	pop	r29
    1bd8:	cf 91       	pop	r28
    1bda:	1f 91       	pop	r17
    1bdc:	0f 91       	pop	r16
    1bde:	08 95       	ret

00001be0 <free>:
    1be0:	cf 93       	push	r28
    1be2:	df 93       	push	r29
    1be4:	00 97       	sbiw	r24, 0x00	; 0
    1be6:	09 f4       	brne	.+2      	; 0x1bea <free+0xa>
    1be8:	81 c0       	rjmp	.+258    	; 0x1cec <free+0x10c>
    1bea:	fc 01       	movw	r30, r24
    1bec:	32 97       	sbiw	r30, 0x02	; 2
    1bee:	13 82       	std	Z+3, r1	; 0x03
    1bf0:	12 82       	std	Z+2, r1	; 0x02
    1bf2:	a0 91 af 01 	lds	r26, 0x01AF	; 0x8001af <__flp>
    1bf6:	b0 91 b0 01 	lds	r27, 0x01B0	; 0x8001b0 <__flp+0x1>
    1bfa:	10 97       	sbiw	r26, 0x00	; 0
    1bfc:	81 f4       	brne	.+32     	; 0x1c1e <free+0x3e>
    1bfe:	20 81       	ld	r18, Z
    1c00:	31 81       	ldd	r19, Z+1	; 0x01
    1c02:	82 0f       	add	r24, r18
    1c04:	93 1f       	adc	r25, r19
    1c06:	20 91 ad 01 	lds	r18, 0x01AD	; 0x8001ad <__brkval>
    1c0a:	30 91 ae 01 	lds	r19, 0x01AE	; 0x8001ae <__brkval+0x1>
    1c0e:	28 17       	cp	r18, r24
    1c10:	39 07       	cpc	r19, r25
    1c12:	51 f5       	brne	.+84     	; 0x1c68 <free+0x88>
    1c14:	f0 93 ae 01 	sts	0x01AE, r31	; 0x8001ae <__brkval+0x1>
    1c18:	e0 93 ad 01 	sts	0x01AD, r30	; 0x8001ad <__brkval>
    1c1c:	67 c0       	rjmp	.+206    	; 0x1cec <free+0x10c>
    1c1e:	ed 01       	movw	r28, r26
    1c20:	20 e0       	ldi	r18, 0x00	; 0
    1c22:	30 e0       	ldi	r19, 0x00	; 0
    1c24:	ce 17       	cp	r28, r30
    1c26:	df 07       	cpc	r29, r31
    1c28:	40 f4       	brcc	.+16     	; 0x1c3a <free+0x5a>
    1c2a:	4a 81       	ldd	r20, Y+2	; 0x02
    1c2c:	5b 81       	ldd	r21, Y+3	; 0x03
    1c2e:	9e 01       	movw	r18, r28
    1c30:	41 15       	cp	r20, r1
    1c32:	51 05       	cpc	r21, r1
    1c34:	f1 f0       	breq	.+60     	; 0x1c72 <free+0x92>
    1c36:	ea 01       	movw	r28, r20
    1c38:	f5 cf       	rjmp	.-22     	; 0x1c24 <free+0x44>
    1c3a:	d3 83       	std	Z+3, r29	; 0x03
    1c3c:	c2 83       	std	Z+2, r28	; 0x02
    1c3e:	40 81       	ld	r20, Z
    1c40:	51 81       	ldd	r21, Z+1	; 0x01
    1c42:	84 0f       	add	r24, r20
    1c44:	95 1f       	adc	r25, r21
    1c46:	c8 17       	cp	r28, r24
    1c48:	d9 07       	cpc	r29, r25
    1c4a:	59 f4       	brne	.+22     	; 0x1c62 <free+0x82>
    1c4c:	88 81       	ld	r24, Y
    1c4e:	99 81       	ldd	r25, Y+1	; 0x01
    1c50:	84 0f       	add	r24, r20
    1c52:	95 1f       	adc	r25, r21
    1c54:	02 96       	adiw	r24, 0x02	; 2
    1c56:	91 83       	std	Z+1, r25	; 0x01
    1c58:	80 83       	st	Z, r24
    1c5a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c5c:	9b 81       	ldd	r25, Y+3	; 0x03
    1c5e:	93 83       	std	Z+3, r25	; 0x03
    1c60:	82 83       	std	Z+2, r24	; 0x02
    1c62:	21 15       	cp	r18, r1
    1c64:	31 05       	cpc	r19, r1
    1c66:	29 f4       	brne	.+10     	; 0x1c72 <free+0x92>
    1c68:	f0 93 b0 01 	sts	0x01B0, r31	; 0x8001b0 <__flp+0x1>
    1c6c:	e0 93 af 01 	sts	0x01AF, r30	; 0x8001af <__flp>
    1c70:	3d c0       	rjmp	.+122    	; 0x1cec <free+0x10c>
    1c72:	e9 01       	movw	r28, r18
    1c74:	fb 83       	std	Y+3, r31	; 0x03
    1c76:	ea 83       	std	Y+2, r30	; 0x02
    1c78:	49 91       	ld	r20, Y+
    1c7a:	59 91       	ld	r21, Y+
    1c7c:	c4 0f       	add	r28, r20
    1c7e:	d5 1f       	adc	r29, r21
    1c80:	ec 17       	cp	r30, r28
    1c82:	fd 07       	cpc	r31, r29
    1c84:	61 f4       	brne	.+24     	; 0x1c9e <free+0xbe>
    1c86:	80 81       	ld	r24, Z
    1c88:	91 81       	ldd	r25, Z+1	; 0x01
    1c8a:	84 0f       	add	r24, r20
    1c8c:	95 1f       	adc	r25, r21
    1c8e:	02 96       	adiw	r24, 0x02	; 2
    1c90:	e9 01       	movw	r28, r18
    1c92:	99 83       	std	Y+1, r25	; 0x01
    1c94:	88 83       	st	Y, r24
    1c96:	82 81       	ldd	r24, Z+2	; 0x02
    1c98:	93 81       	ldd	r25, Z+3	; 0x03
    1c9a:	9b 83       	std	Y+3, r25	; 0x03
    1c9c:	8a 83       	std	Y+2, r24	; 0x02
    1c9e:	e0 e0       	ldi	r30, 0x00	; 0
    1ca0:	f0 e0       	ldi	r31, 0x00	; 0
    1ca2:	12 96       	adiw	r26, 0x02	; 2
    1ca4:	8d 91       	ld	r24, X+
    1ca6:	9c 91       	ld	r25, X
    1ca8:	13 97       	sbiw	r26, 0x03	; 3
    1caa:	00 97       	sbiw	r24, 0x00	; 0
    1cac:	19 f0       	breq	.+6      	; 0x1cb4 <free+0xd4>
    1cae:	fd 01       	movw	r30, r26
    1cb0:	dc 01       	movw	r26, r24
    1cb2:	f7 cf       	rjmp	.-18     	; 0x1ca2 <free+0xc2>
    1cb4:	8d 91       	ld	r24, X+
    1cb6:	9c 91       	ld	r25, X
    1cb8:	11 97       	sbiw	r26, 0x01	; 1
    1cba:	9d 01       	movw	r18, r26
    1cbc:	2e 5f       	subi	r18, 0xFE	; 254
    1cbe:	3f 4f       	sbci	r19, 0xFF	; 255
    1cc0:	82 0f       	add	r24, r18
    1cc2:	93 1f       	adc	r25, r19
    1cc4:	20 91 ad 01 	lds	r18, 0x01AD	; 0x8001ad <__brkval>
    1cc8:	30 91 ae 01 	lds	r19, 0x01AE	; 0x8001ae <__brkval+0x1>
    1ccc:	28 17       	cp	r18, r24
    1cce:	39 07       	cpc	r19, r25
    1cd0:	69 f4       	brne	.+26     	; 0x1cec <free+0x10c>
    1cd2:	30 97       	sbiw	r30, 0x00	; 0
    1cd4:	29 f4       	brne	.+10     	; 0x1ce0 <free+0x100>
    1cd6:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <__flp+0x1>
    1cda:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <__flp>
    1cde:	02 c0       	rjmp	.+4      	; 0x1ce4 <free+0x104>
    1ce0:	13 82       	std	Z+3, r1	; 0x03
    1ce2:	12 82       	std	Z+2, r1	; 0x02
    1ce4:	b0 93 ae 01 	sts	0x01AE, r27	; 0x8001ae <__brkval+0x1>
    1ce8:	a0 93 ad 01 	sts	0x01AD, r26	; 0x8001ad <__brkval>
    1cec:	df 91       	pop	r29
    1cee:	cf 91       	pop	r28
    1cf0:	08 95       	ret

00001cf2 <__do_global_dtors>:
    1cf2:	10 e0       	ldi	r17, 0x00	; 0
    1cf4:	c4 e3       	ldi	r28, 0x34	; 52
    1cf6:	d0 e0       	ldi	r29, 0x00	; 0
    1cf8:	04 c0       	rjmp	.+8      	; 0x1d02 <__do_global_dtors+0x10>
    1cfa:	fe 01       	movw	r30, r28
    1cfc:	0e 94 f9 0c 	call	0x19f2	; 0x19f2 <__tablejump2__>
    1d00:	21 96       	adiw	r28, 0x01	; 1
    1d02:	c5 33       	cpi	r28, 0x35	; 53
    1d04:	d1 07       	cpc	r29, r17
    1d06:	c9 f7       	brne	.-14     	; 0x1cfa <__do_global_dtors+0x8>
    1d08:	f8 94       	cli

00001d0a <__stop_program>:
    1d0a:	ff cf       	rjmp	.-2      	; 0x1d0a <__stop_program>
