
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  000025e6  0000267a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000025e6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000071  0080013a  0080013a  000026b4  2**0
                  ALLOC
  3 .stab         000059c4  00000000  00000000  000026b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000084be  00000000  00000000  00008078  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  00010536  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00010578  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000130  00000000  00000000  000105b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00001d55  00000000  00000000  000106e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000d56  00000000  00000000  0001243d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   000013d2  00000000  00000000  00013193  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000320  00000000  00000000  00014568  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0000075e  00000000  00000000  00014888  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00000a80  00000000  00000000  00014fe6  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000128  00000000  00000000  00015a66  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__dtors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__vector_9>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	10 03       	mulsu	r17, r16
      6a:	14 03       	mulsu	r17, r20
      6c:	6a 03       	fmul	r22, r18
      6e:	ff 02       	muls	r31, r31
      70:	06 03       	mulsu	r16, r22
      72:	0d 03       	fmul	r16, r21
      74:	ff 02       	muls	r31, r31
      76:	ff 02       	muls	r31, r31
      78:	ff 02       	muls	r31, r31

0000007a <__ctors_end>:
      7a:	f5 0b       	sbc	r31, r21

0000007c <__dtors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d8 e0       	ldi	r29, 0x08	; 8
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	11 e0       	ldi	r17, 0x01	; 1
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	e6 ee       	ldi	r30, 0xE6	; 230
      90:	f5 e2       	ldi	r31, 0x25	; 37
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	aa 33       	cpi	r26, 0x3A	; 58
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	21 e0       	ldi	r18, 0x01	; 1
      a0:	aa e3       	ldi	r26, 0x3A	; 58
      a2:	b1 e0       	ldi	r27, 0x01	; 1
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	ab 3a       	cpi	r26, 0xAB	; 171
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 d5 00 	call	0x1aa	; 0x1aa <main>
      b2:	0c 94 e6 12 	jmp	0x25cc	; 0x25cc <__do_global_dtors>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <batteryPercentage>:
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
      ba:	0e 94 a5 08 	call	0x114a	; 0x114a <read_battery_millivolts_3pi>

int batteryPercentage()//Should this function be in main or in display.c or something else?
{
	
	int milliVolts = read_battery_millivolts();
	int batteryPercent = 0.000000000632*((milliVolts)*(milliVolts)*(milliVolts));
      be:	88 9f       	mul	r24, r24
      c0:	90 01       	movw	r18, r0
      c2:	89 9f       	mul	r24, r25
      c4:	30 0d       	add	r19, r0
      c6:	30 0d       	add	r19, r0
      c8:	11 24       	eor	r1, r1
      ca:	82 9f       	mul	r24, r18
      cc:	b0 01       	movw	r22, r0
      ce:	83 9f       	mul	r24, r19
      d0:	70 0d       	add	r23, r0
      d2:	92 9f       	mul	r25, r18
      d4:	70 0d       	add	r23, r0
      d6:	11 24       	eor	r1, r1
      d8:	07 2e       	mov	r0, r23
      da:	00 0c       	add	r0, r0
      dc:	88 0b       	sbc	r24, r24
      de:	99 0b       	sbc	r25, r25
      e0:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__floatsisf>
      e4:	2c e0       	ldi	r18, 0x0C	; 12
      e6:	39 eb       	ldi	r19, 0xB9	; 185
      e8:	4d e2       	ldi	r20, 0x2D	; 45
      ea:	50 e3       	ldi	r21, 0x30	; 48
      ec:	0e 94 67 07 	call	0xece	; 0xece <__mulsf3>
      f0:	0e 94 a3 06 	call	0xd46	; 0xd46 <__fixsfsi>
	return batteryPercent;
}
      f4:	cb 01       	movw	r24, r22
      f6:	08 95       	ret

000000f8 <updateDisplay>:

void updateDisplay(int orderPercent, int batteryPercent, robotStates currentState)
{
      f8:	ef 92       	push	r14
      fa:	ff 92       	push	r15
      fc:	0f 93       	push	r16
      fe:	1f 93       	push	r17
     100:	cf 93       	push	r28
     102:	7c 01       	movw	r14, r24
     104:	8b 01       	movw	r16, r22
     106:	c4 2f       	mov	r28, r20
	clear();
     108:	0e 94 ae 09 	call	0x135c	; 0x135c <clear>
	lcd_goto_xy(0,0);
     10c:	60 e0       	ldi	r22, 0x00	; 0
     10e:	80 e0       	ldi	r24, 0x00	; 0
     110:	0e 94 35 0a 	call	0x146a	; 0x146a <lcd_goto_xy>
	print("Job:");
     114:	83 e2       	ldi	r24, 0x23	; 35
     116:	91 e0       	ldi	r25, 0x01	; 1
     118:	0e 94 bd 09 	call	0x137a	; 0x137a <print>
	print_long(orderPercent);
     11c:	b7 01       	movw	r22, r14
     11e:	ff 0c       	add	r15, r15
     120:	88 0b       	sbc	r24, r24
     122:	99 0b       	sbc	r25, r25
     124:	0e 94 12 0a 	call	0x1424	; 0x1424 <print_long>
	print("%");
     128:	88 e2       	ldi	r24, 0x28	; 40
     12a:	91 e0       	ldi	r25, 0x01	; 1
     12c:	0e 94 bd 09 	call	0x137a	; 0x137a <print>
	
	lcd_goto_xy(0,1);
     130:	61 e0       	ldi	r22, 0x01	; 1
     132:	80 e0       	ldi	r24, 0x00	; 0
     134:	0e 94 35 0a 	call	0x146a	; 0x146a <lcd_goto_xy>
	print("Bat:");
     138:	8a e2       	ldi	r24, 0x2A	; 42
     13a:	91 e0       	ldi	r25, 0x01	; 1
     13c:	0e 94 bd 09 	call	0x137a	; 0x137a <print>
	print_long(batteryPercent);
     140:	b8 01       	movw	r22, r16
     142:	11 0f       	add	r17, r17
     144:	88 0b       	sbc	r24, r24
     146:	99 0b       	sbc	r25, r25
     148:	0e 94 12 0a 	call	0x1424	; 0x1424 <print_long>
	print("%");
     14c:	88 e2       	ldi	r24, 0x28	; 40
     14e:	91 e0       	ldi	r25, 0x01	; 1
     150:	0e 94 bd 09 	call	0x137a	; 0x137a <print>
	switch(currentState)
     154:	c2 30       	cpi	r28, 0x02	; 2
     156:	a9 f0       	breq	.+42     	; 0x182 <updateDisplay+0x8a>
     158:	28 f4       	brcc	.+10     	; 0x164 <updateDisplay+0x6c>
     15a:	cc 23       	and	r28, r28
     15c:	41 f0       	breq	.+16     	; 0x16e <updateDisplay+0x76>
     15e:	c1 30       	cpi	r28, 0x01	; 1
     160:	59 f0       	breq	.+22     	; 0x178 <updateDisplay+0x80>
     162:	1d c0       	rjmp	.+58     	; 0x19e <updateDisplay+0xa6>
     164:	c3 30       	cpi	r28, 0x03	; 3
     166:	91 f0       	breq	.+36     	; 0x18c <updateDisplay+0x94>
     168:	c4 30       	cpi	r28, 0x04	; 4
     16a:	a9 f0       	breq	.+42     	; 0x196 <updateDisplay+0x9e>
     16c:	18 c0       	rjmp	.+48     	; 0x19e <updateDisplay+0xa6>
	{
		case manual:
		print("M");//M for Manual
     16e:	8f e2       	ldi	r24, 0x2F	; 47
     170:	91 e0       	ldi	r25, 0x01	; 1
     172:	0e 94 bd 09 	call	0x137a	; 0x137a <print>
		break;
     176:	13 c0       	rjmp	.+38     	; 0x19e <updateDisplay+0xa6>
		case mazeSolver:
		print("P");//P for Parcours
     178:	81 e3       	ldi	r24, 0x31	; 49
     17a:	91 e0       	ldi	r25, 0x01	; 1
     17c:	0e 94 bd 09 	call	0x137a	; 0x137a <print>
		break;
     180:	0e c0       	rjmp	.+28     	; 0x19e <updateDisplay+0xa6>
		case logicsBot:
		print("O");//O for Order
     182:	83 e3       	ldi	r24, 0x33	; 51
     184:	91 e0       	ldi	r25, 0x01	; 1
     186:	0e 94 bd 09 	call	0x137a	; 0x137a <print>
		break;
     18a:	09 c0       	rjmp	.+18     	; 0x19e <updateDisplay+0xa6>
		case chargeMode:
		print("C");//C for Charge
     18c:	85 e3       	ldi	r24, 0x35	; 53
     18e:	91 e0       	ldi	r25, 0x01	; 1
     190:	0e 94 bd 09 	call	0x137a	; 0x137a <print>
		break;
     194:	04 c0       	rjmp	.+8      	; 0x19e <updateDisplay+0xa6>
		case homingMode:
		print("H");//H for Homing
     196:	87 e3       	ldi	r24, 0x37	; 55
     198:	91 e0       	ldi	r25, 0x01	; 1
     19a:	0e 94 bd 09 	call	0x137a	; 0x137a <print>
		break;
	}
}
     19e:	cf 91       	pop	r28
     1a0:	1f 91       	pop	r17
     1a2:	0f 91       	pop	r16
     1a4:	ff 90       	pop	r15
     1a6:	ef 90       	pop	r14
     1a8:	08 95       	ret

000001aa <main>:
#include <pololu/3pi.h>
#include <avr/pgmspace.h>


int main()
{
     1aa:	cf 93       	push	r28
     1ac:	df 93       	push	r29
     1ae:	cd b7       	in	r28, 0x3d	; 61
     1b0:	de b7       	in	r29, 0x3e	; 62
     1b2:	64 97       	sbiw	r28, 0x14	; 20
     1b4:	0f b6       	in	r0, 0x3f	; 63
     1b6:	f8 94       	cli
     1b8:	de bf       	out	0x3e, r29	; 62
     1ba:	0f be       	out	0x3f, r0	; 63
     1bc:	cd bf       	out	0x3d, r28	; 61
	clear();
     1be:	0e 94 ae 09 	call	0x135c	; 0x135c <clear>
	pololu_3pi_init(2000);
     1c2:	80 ed       	ldi	r24, 0xD0	; 208
     1c4:	97 e0       	ldi	r25, 0x07	; 7
     1c6:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <pololu_3pi_init>
	initialize();
     1ca:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <initialize>
	
	
	
	char parecour[20];
	parcour(parecour);
     1ce:	ce 01       	movw	r24, r28
     1d0:	01 96       	adiw	r24, 0x01	; 1
     1d2:	0e 94 ef 02 	call	0x5de	; 0x5de <parcour>
	print(parecour);
     1d6:	ce 01       	movw	r24, r28
     1d8:	01 96       	adiw	r24, 0x01	; 1
     1da:	0e 94 bd 09 	call	0x137a	; 0x137a <print>
	
	
	
     1de:	80 e0       	ldi	r24, 0x00	; 0
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	64 96       	adiw	r28, 0x14	; 20
     1e4:	0f b6       	in	r0, 0x3f	; 63
     1e6:	f8 94       	cli
     1e8:	de bf       	out	0x3e, r29	; 62
     1ea:	0f be       	out	0x3f, r0	; 63
     1ec:	cd bf       	out	0x3d, r28	; 61
     1ee:	df 91       	pop	r29
     1f0:	cf 91       	pop	r28
     1f2:	08 95       	ret

000001f4 <initialize>:
     1f4:	cf 93       	push	r28
     1f6:	df 93       	push	r29
     1f8:	80 ed       	ldi	r24, 0xD0	; 208
     1fa:	97 e0       	ldi	r25, 0x07	; 7
     1fc:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <pololu_3pi_init>
     200:	80 e1       	ldi	r24, 0x10	; 16
     202:	0e 94 2e 0b 	call	0x165c	; 0x165c <button_is_pressed>
     206:	88 23       	and	r24, r24
     208:	d9 f3       	breq	.-10     	; 0x200 <initialize+0xc>
     20a:	80 e1       	ldi	r24, 0x10	; 16
     20c:	0e 94 1a 0b 	call	0x1634	; 0x1634 <wait_for_button_release>
     210:	88 ee       	ldi	r24, 0xE8	; 232
     212:	93 e0       	ldi	r25, 0x03	; 3
     214:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <delay_ms>
     218:	c0 e0       	ldi	r28, 0x00	; 0
     21a:	d0 e0       	ldi	r29, 0x00	; 0
     21c:	19 c0       	rjmp	.+50     	; 0x250 <initialize+0x5c>
     21e:	ce 01       	movw	r24, r28
     220:	44 97       	sbiw	r24, 0x14	; 20
     222:	88 97       	sbiw	r24, 0x28	; 40
     224:	38 f0       	brcs	.+14     	; 0x234 <initialize+0x40>
     226:	68 ed       	ldi	r22, 0xD8	; 216
     228:	7f ef       	ldi	r23, 0xFF	; 255
     22a:	88 e2       	ldi	r24, 0x28	; 40
     22c:	90 e0       	ldi	r25, 0x00	; 0
     22e:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
     232:	06 c0       	rjmp	.+12     	; 0x240 <initialize+0x4c>
     234:	68 e2       	ldi	r22, 0x28	; 40
     236:	70 e0       	ldi	r23, 0x00	; 0
     238:	88 ed       	ldi	r24, 0xD8	; 216
     23a:	9f ef       	ldi	r25, 0xFF	; 255
     23c:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
     240:	81 e0       	ldi	r24, 0x01	; 1
     242:	0e 94 b5 0b 	call	0x176a	; 0x176a <calibrate_line_sensors>
     246:	84 e1       	ldi	r24, 0x14	; 20
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <delay_ms>
     24e:	21 96       	adiw	r28, 0x01	; 1
     250:	c0 35       	cpi	r28, 0x50	; 80
     252:	d1 05       	cpc	r29, r1
     254:	20 f3       	brcs	.-56     	; 0x21e <initialize+0x2a>
     256:	60 e0       	ldi	r22, 0x00	; 0
     258:	70 e0       	ldi	r23, 0x00	; 0
     25a:	80 e0       	ldi	r24, 0x00	; 0
     25c:	90 e0       	ldi	r25, 0x00	; 0
     25e:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
     262:	80 e1       	ldi	r24, 0x10	; 16
     264:	0e 94 2e 0b 	call	0x165c	; 0x165c <button_is_pressed>
     268:	88 23       	and	r24, r24
     26a:	d9 f3       	breq	.-10     	; 0x262 <initialize+0x6e>
     26c:	80 e1       	ldi	r24, 0x10	; 16
     26e:	0e 94 1a 0b 	call	0x1634	; 0x1634 <wait_for_button_release>
     272:	0e 94 ae 09 	call	0x135c	; 0x135c <clear>
     276:	df 91       	pop	r29
     278:	cf 91       	pop	r28
     27a:	08 95       	ret

0000027c <inch>:
     27c:	62 e3       	ldi	r22, 0x32	; 50
     27e:	70 e0       	ldi	r23, 0x00	; 0
     280:	82 e3       	ldi	r24, 0x32	; 50
     282:	90 e0       	ldi	r25, 0x00	; 0
     284:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     288:	88 ec       	ldi	r24, 0xC8	; 200
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <delay_ms>
     290:	60 e0       	ldi	r22, 0x00	; 0
     292:	70 e0       	ldi	r23, 0x00	; 0
     294:	80 e0       	ldi	r24, 0x00	; 0
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
     29c:	08 95       	ret

0000029e <motorControl>:
     29e:	cf 93       	push	r28
     2a0:	df 93       	push	r29
     2a2:	c8 2f       	mov	r28, r24
     2a4:	61 e0       	ldi	r22, 0x01	; 1
     2a6:	8c e9       	ldi	r24, 0x9C	; 156
     2a8:	91 e0       	ldi	r25, 0x01	; 1
     2aa:	0e 94 bb 0b 	call	0x1776	; 0x1776 <read_line>
     2ae:	ce 34       	cpi	r28, 0x4E	; 78
     2b0:	39 f4       	brne	.+14     	; 0x2c0 <motorControl+0x22>
     2b2:	60 e0       	ldi	r22, 0x00	; 0
     2b4:	70 e0       	ldi	r23, 0x00	; 0
     2b6:	80 e0       	ldi	r24, 0x00	; 0
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
     2be:	c3 c0       	rjmp	.+390    	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     2c0:	cc 34       	cpi	r28, 0x4C	; 76
     2c2:	09 f5       	brne	.+66     	; 0x306 <motorControl+0x68>
     2c4:	62 e3       	ldi	r22, 0x32	; 50
     2c6:	70 e0       	ldi	r23, 0x00	; 0
     2c8:	8e ec       	ldi	r24, 0xCE	; 206
     2ca:	9f ef       	ldi	r25, 0xFF	; 255
     2cc:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
     2d0:	05 c0       	rjmp	.+10     	; 0x2dc <motorControl+0x3e>
     2d2:	61 e0       	ldi	r22, 0x01	; 1
     2d4:	8c e9       	ldi	r24, 0x9C	; 156
     2d6:	91 e0       	ldi	r25, 0x01	; 1
     2d8:	0e 94 bb 0b 	call	0x1776	; 0x1776 <read_line>
     2dc:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     2e0:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     2e4:	84 3f       	cpi	r24, 0xF4	; 244
     2e6:	91 40       	sbci	r25, 0x01	; 1
     2e8:	a0 f7       	brcc	.-24     	; 0x2d2 <motorControl+0x34>
     2ea:	05 c0       	rjmp	.+10     	; 0x2f6 <motorControl+0x58>
     2ec:	61 e0       	ldi	r22, 0x01	; 1
     2ee:	8c e9       	ldi	r24, 0x9C	; 156
     2f0:	91 e0       	ldi	r25, 0x01	; 1
     2f2:	0e 94 bb 0b 	call	0x1776	; 0x1776 <read_line>
     2f6:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     2fa:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     2fe:	85 3f       	cpi	r24, 0xF5	; 245
     300:	91 40       	sbci	r25, 0x01	; 1
     302:	a0 f3       	brcs	.-24     	; 0x2ec <motorControl+0x4e>
     304:	a0 c0       	rjmp	.+320    	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     306:	c2 35       	cpi	r28, 0x52	; 82
     308:	09 f5       	brne	.+66     	; 0x34c <motorControl+0xae>
     30a:	6e ec       	ldi	r22, 0xCE	; 206
     30c:	7f ef       	ldi	r23, 0xFF	; 255
     30e:	82 e3       	ldi	r24, 0x32	; 50
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
     316:	05 c0       	rjmp	.+10     	; 0x322 <motorControl+0x84>
     318:	61 e0       	ldi	r22, 0x01	; 1
     31a:	8c e9       	ldi	r24, 0x9C	; 156
     31c:	91 e0       	ldi	r25, 0x01	; 1
     31e:	0e 94 bb 0b 	call	0x1776	; 0x1776 <read_line>
     322:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     326:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     32a:	84 3f       	cpi	r24, 0xF4	; 244
     32c:	91 40       	sbci	r25, 0x01	; 1
     32e:	a0 f7       	brcc	.-24     	; 0x318 <motorControl+0x7a>
     330:	05 c0       	rjmp	.+10     	; 0x33c <motorControl+0x9e>
     332:	61 e0       	ldi	r22, 0x01	; 1
     334:	8c e9       	ldi	r24, 0x9C	; 156
     336:	91 e0       	ldi	r25, 0x01	; 1
     338:	0e 94 bb 0b 	call	0x1776	; 0x1776 <read_line>
     33c:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     340:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     344:	85 3f       	cpi	r24, 0xF5	; 245
     346:	91 40       	sbci	r25, 0x01	; 1
     348:	a0 f3       	brcs	.-24     	; 0x332 <motorControl+0x94>
     34a:	7d c0       	rjmp	.+250    	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     34c:	c3 35       	cpi	r28, 0x53	; 83
     34e:	89 f5       	brne	.+98     	; 0x3b2 <motorControl+0x114>
     350:	62 e3       	ldi	r22, 0x32	; 50
     352:	70 e0       	ldi	r23, 0x00	; 0
     354:	82 e3       	ldi	r24, 0x32	; 50
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
     35c:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <sensors+0x6>
     360:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <sensors+0x7>
     364:	84 3f       	cpi	r24, 0xF4	; 244
     366:	91 40       	sbci	r25, 0x01	; 1
     368:	68 f0       	brcs	.+26     	; 0x384 <motorControl+0xe6>
     36a:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <sensors+0x8>
     36e:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <sensors+0x9>
     372:	8d 32       	cpi	r24, 0x2D	; 45
     374:	91 40       	sbci	r25, 0x01	; 1
     376:	30 f4       	brcc	.+12     	; 0x384 <motorControl+0xe6>
     378:	6e e1       	ldi	r22, 0x1E	; 30
     37a:	70 e0       	ldi	r23, 0x00	; 0
     37c:	82 e3       	ldi	r24, 0x32	; 50
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
     384:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x2>
     388:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x3>
     38c:	84 3f       	cpi	r24, 0xF4	; 244
     38e:	91 40       	sbci	r25, 0x01	; 1
     390:	08 f4       	brcc	.+2      	; 0x394 <motorControl+0xf6>
     392:	59 c0       	rjmp	.+178    	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     394:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors>
     398:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x1>
     39c:	8d 32       	cpi	r24, 0x2D	; 45
     39e:	91 40       	sbci	r25, 0x01	; 1
     3a0:	08 f0       	brcs	.+2      	; 0x3a4 <motorControl+0x106>
     3a2:	51 c0       	rjmp	.+162    	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     3a4:	62 e3       	ldi	r22, 0x32	; 50
     3a6:	70 e0       	ldi	r23, 0x00	; 0
     3a8:	8e e1       	ldi	r24, 0x1E	; 30
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
     3b0:	4a c0       	rjmp	.+148    	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     3b2:	c2 34       	cpi	r28, 0x42	; 66
     3b4:	09 f5       	brne	.+66     	; 0x3f8 <motorControl+0x15a>
     3b6:	6e ec       	ldi	r22, 0xCE	; 206
     3b8:	7f ef       	ldi	r23, 0xFF	; 255
     3ba:	8e ec       	ldi	r24, 0xCE	; 206
     3bc:	9f ef       	ldi	r25, 0xFF	; 255
     3be:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
     3c2:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <sensors+0x6>
     3c6:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <sensors+0x7>
     3ca:	80 39       	cpi	r24, 0x90	; 144
     3cc:	91 40       	sbci	r25, 0x01	; 1
     3ce:	30 f0       	brcs	.+12     	; 0x3dc <motorControl+0x13e>
     3d0:	69 ec       	ldi	r22, 0xC9	; 201
     3d2:	7f ef       	ldi	r23, 0xFF	; 255
     3d4:	8e ec       	ldi	r24, 0xCE	; 206
     3d6:	9f ef       	ldi	r25, 0xFF	; 255
     3d8:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
     3dc:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x2>
     3e0:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x3>
     3e4:	80 39       	cpi	r24, 0x90	; 144
     3e6:	91 40       	sbci	r25, 0x01	; 1
     3e8:	70 f1       	brcs	.+92     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     3ea:	6e ec       	ldi	r22, 0xCE	; 206
     3ec:	7f ef       	ldi	r23, 0xFF	; 255
     3ee:	89 ec       	ldi	r24, 0xC9	; 201
     3f0:	9f ef       	ldi	r25, 0xFF	; 255
     3f2:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
     3f6:	27 c0       	rjmp	.+78     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     3f8:	c4 35       	cpi	r28, 0x54	; 84
     3fa:	a1 f4       	brne	.+40     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
     3fc:	6b e4       	ldi	r22, 0x4B	; 75
     3fe:	70 e0       	ldi	r23, 0x00	; 0
     400:	85 eb       	ldi	r24, 0xB5	; 181
     402:	9f ef       	ldi	r25, 0xFF	; 255
     404:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
     408:	05 c0       	rjmp	.+10     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     40a:	61 e0       	ldi	r22, 0x01	; 1
     40c:	8c e9       	ldi	r24, 0x9C	; 156
     40e:	91 e0       	ldi	r25, 0x01	; 1
     410:	0e 94 bb 0b 	call	0x1776	; 0x1776 <read_line>
     414:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     418:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     41c:	84 3f       	cpi	r24, 0xF4	; 244
     41e:	91 40       	sbci	r25, 0x01	; 1
     420:	a0 f7       	brcc	.-24     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
     422:	11 c0       	rjmp	.+34     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     424:	c0 35       	cpi	r28, 0x50	; 80
     426:	79 f4       	brne	.+30     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     428:	0a c0       	rjmp	.+20     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
     42a:	be 01       	movw	r22, r28
     42c:	ce 01       	movw	r24, r28
     42e:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <set_motors>
     432:	85 e0       	ldi	r24, 0x05	; 5
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <delay_ms>
     43a:	22 97       	sbiw	r28, 0x02	; 2
     43c:	02 c0       	rjmp	.+4      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
     43e:	c2 e3       	ldi	r28, 0x32	; 50
     440:	d0 e0       	ldi	r29, 0x00	; 0
     442:	dd 23       	and	r29, r29
     444:	94 f7       	brge	.-28     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
     446:	df 91       	pop	r29
     448:	cf 91       	pop	r28
     44a:	08 95       	ret

0000044c <lineType>:
     44c:	61 e0       	ldi	r22, 0x01	; 1
     44e:	8c e9       	ldi	r24, 0x9C	; 156
     450:	91 e0       	ldi	r25, 0x01	; 1
     452:	0e 94 bb 0b 	call	0x1776	; 0x1776 <read_line>
     456:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x2>
     45a:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x3>
     45e:	84 3f       	cpi	r24, 0xF4	; 244
     460:	21 e0       	ldi	r18, 0x01	; 1
     462:	92 07       	cpc	r25, r18
     464:	c0 f0       	brcs	.+48     	; 0x496 <lineType+0x4a>
     466:	20 91 a2 01 	lds	r18, 0x01A2	; 0x8001a2 <sensors+0x6>
     46a:	30 91 a3 01 	lds	r19, 0x01A3	; 0x8001a3 <sensors+0x7>
     46e:	24 3f       	cpi	r18, 0xF4	; 244
     470:	31 40       	sbci	r19, 0x01	; 1
     472:	88 f0       	brcs	.+34     	; 0x496 <lineType+0x4a>
     474:	0e 94 3e 01 	call	0x27c	; 0x27c <inch>
     478:	61 e0       	ldi	r22, 0x01	; 1
     47a:	8c e9       	ldi	r24, 0x9C	; 156
     47c:	91 e0       	ldi	r25, 0x01	; 1
     47e:	0e 94 bb 0b 	call	0x1776	; 0x1776 <read_line>
     482:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     486:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     48a:	84 3f       	cpi	r24, 0xF4	; 244
     48c:	91 40       	sbci	r25, 0x01	; 1
     48e:	08 f4       	brcc	.+2      	; 0x492 <lineType+0x46>
     490:	90 c0       	rjmp	.+288    	; 0x5b2 <lineType+0x166>
     492:	88 e0       	ldi	r24, 0x08	; 8
     494:	08 95       	ret
     496:	84 3f       	cpi	r24, 0xF4	; 244
     498:	21 e0       	ldi	r18, 0x01	; 1
     49a:	92 07       	cpc	r25, r18
     49c:	00 f1       	brcs	.+64     	; 0x4de <lineType+0x92>
     49e:	20 91 9c 01 	lds	r18, 0x019C	; 0x80019c <sensors>
     4a2:	30 91 9d 01 	lds	r19, 0x019D	; 0x80019d <sensors+0x1>
     4a6:	24 3f       	cpi	r18, 0xF4	; 244
     4a8:	31 40       	sbci	r19, 0x01	; 1
     4aa:	c8 f0       	brcs	.+50     	; 0x4de <lineType+0x92>
     4ac:	0e 94 3e 01 	call	0x27c	; 0x27c <inch>
     4b0:	61 e0       	ldi	r22, 0x01	; 1
     4b2:	8c e9       	ldi	r24, 0x9C	; 156
     4b4:	91 e0       	ldi	r25, 0x01	; 1
     4b6:	0e 94 bb 0b 	call	0x1776	; 0x1776 <read_line>
     4ba:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     4be:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     4c2:	84 3f       	cpi	r24, 0xF4	; 244
     4c4:	91 40       	sbci	r25, 0x01	; 1
     4c6:	08 f0       	brcs	.+2      	; 0x4ca <lineType+0x7e>
     4c8:	76 c0       	rjmp	.+236    	; 0x5b6 <lineType+0x16a>
     4ca:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <sensors+0x6>
     4ce:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <sensors+0x7>
     4d2:	84 3f       	cpi	r24, 0xF4	; 244
     4d4:	91 40       	sbci	r25, 0x01	; 1
     4d6:	08 f4       	brcc	.+2      	; 0x4da <lineType+0x8e>
     4d8:	70 c0       	rjmp	.+224    	; 0x5ba <lineType+0x16e>
     4da:	86 e0       	ldi	r24, 0x06	; 6
     4dc:	08 95       	ret
     4de:	40 91 a2 01 	lds	r20, 0x01A2	; 0x8001a2 <sensors+0x6>
     4e2:	50 91 a3 01 	lds	r21, 0x01A3	; 0x8001a3 <sensors+0x7>
     4e6:	44 3f       	cpi	r20, 0xF4	; 244
     4e8:	61 e0       	ldi	r22, 0x01	; 1
     4ea:	56 07       	cpc	r21, r22
     4ec:	00 f1       	brcs	.+64     	; 0x52e <lineType+0xe2>
     4ee:	20 91 a4 01 	lds	r18, 0x01A4	; 0x8001a4 <sensors+0x8>
     4f2:	30 91 a5 01 	lds	r19, 0x01A5	; 0x8001a5 <sensors+0x9>
     4f6:	24 3f       	cpi	r18, 0xF4	; 244
     4f8:	31 40       	sbci	r19, 0x01	; 1
     4fa:	c8 f0       	brcs	.+50     	; 0x52e <lineType+0xe2>
     4fc:	0e 94 3e 01 	call	0x27c	; 0x27c <inch>
     500:	61 e0       	ldi	r22, 0x01	; 1
     502:	8c e9       	ldi	r24, 0x9C	; 156
     504:	91 e0       	ldi	r25, 0x01	; 1
     506:	0e 94 bb 0b 	call	0x1776	; 0x1776 <read_line>
     50a:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     50e:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     512:	84 3f       	cpi	r24, 0xF4	; 244
     514:	91 40       	sbci	r25, 0x01	; 1
     516:	08 f0       	brcs	.+2      	; 0x51a <lineType+0xce>
     518:	52 c0       	rjmp	.+164    	; 0x5be <lineType+0x172>
     51a:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x2>
     51e:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x3>
     522:	84 3f       	cpi	r24, 0xF4	; 244
     524:	91 40       	sbci	r25, 0x01	; 1
     526:	08 f4       	brcc	.+2      	; 0x52a <lineType+0xde>
     528:	4c c0       	rjmp	.+152    	; 0x5c2 <lineType+0x176>
     52a:	85 e0       	ldi	r24, 0x05	; 5
     52c:	08 95       	ret
     52e:	20 91 a0 01 	lds	r18, 0x01A0	; 0x8001a0 <sensors+0x4>
     532:	30 91 a1 01 	lds	r19, 0x01A1	; 0x8001a1 <sensors+0x5>
     536:	29 3c       	cpi	r18, 0xC9	; 201
     538:	31 05       	cpc	r19, r1
     53a:	08 f4       	brcc	.+2      	; 0x53e <lineType+0xf2>
     53c:	44 c0       	rjmp	.+136    	; 0x5c6 <lineType+0x17a>
     53e:	24 3f       	cpi	r18, 0xF4	; 244
     540:	61 e0       	ldi	r22, 0x01	; 1
     542:	36 07       	cpc	r19, r22
     544:	08 f4       	brcc	.+2      	; 0x548 <lineType+0xfc>
     546:	82 cf       	rjmp	.-252    	; 0x44c <lineType>
     548:	24 3f       	cpi	r18, 0xF4	; 244
     54a:	61 e0       	ldi	r22, 0x01	; 1
     54c:	36 07       	cpc	r19, r22
     54e:	e8 f1       	brcs	.+122    	; 0x5ca <lineType+0x17e>
     550:	45 3f       	cpi	r20, 0xF5	; 245
     552:	51 40       	sbci	r21, 0x01	; 1
     554:	e0 f5       	brcc	.+120    	; 0x5ce <lineType+0x182>
     556:	40 91 a4 01 	lds	r20, 0x01A4	; 0x8001a4 <sensors+0x8>
     55a:	50 91 a5 01 	lds	r21, 0x01A5	; 0x8001a5 <sensors+0x9>
     55e:	44 3f       	cpi	r20, 0xF4	; 244
     560:	51 40       	sbci	r21, 0x01	; 1
     562:	b8 f1       	brcs	.+110    	; 0x5d2 <lineType+0x186>
     564:	40 91 9c 01 	lds	r20, 0x019C	; 0x80019c <sensors>
     568:	50 91 9d 01 	lds	r21, 0x019D	; 0x80019d <sensors+0x1>
     56c:	44 3f       	cpi	r20, 0xF4	; 244
     56e:	51 40       	sbci	r21, 0x01	; 1
     570:	90 f1       	brcs	.+100    	; 0x5d6 <lineType+0x18a>
     572:	85 3f       	cpi	r24, 0xF5	; 245
     574:	91 40       	sbci	r25, 0x01	; 1
     576:	88 f5       	brcc	.+98     	; 0x5da <lineType+0x18e>
     578:	24 3f       	cpi	r18, 0xF4	; 244
     57a:	31 40       	sbci	r19, 0x01	; 1
     57c:	50 f4       	brcc	.+20     	; 0x592 <lineType+0x146>
     57e:	80 e0       	ldi	r24, 0x00	; 0
     580:	08 95       	ret
     582:	61 e0       	ldi	r22, 0x01	; 1
     584:	8c e9       	ldi	r24, 0x9C	; 156
     586:	91 e0       	ldi	r25, 0x01	; 1
     588:	0e 94 bb 0b 	call	0x1776	; 0x1776 <read_line>
     58c:	83 e5       	ldi	r24, 0x53	; 83
     58e:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
     592:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <sensors+0x8>
     596:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <sensors+0x9>
     59a:	80 39       	cpi	r24, 0x90	; 144
     59c:	91 40       	sbci	r25, 0x01	; 1
     59e:	88 f7       	brcc	.-30     	; 0x582 <lineType+0x136>
     5a0:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors>
     5a4:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x1>
     5a8:	80 39       	cpi	r24, 0x90	; 144
     5aa:	91 40       	sbci	r25, 0x01	; 1
     5ac:	50 f7       	brcc	.-44     	; 0x582 <lineType+0x136>
     5ae:	82 e0       	ldi	r24, 0x02	; 2
     5b0:	08 95       	ret
     5b2:	87 e0       	ldi	r24, 0x07	; 7
     5b4:	08 95       	ret
     5b6:	86 e0       	ldi	r24, 0x06	; 6
     5b8:	08 95       	ret
     5ba:	83 e0       	ldi	r24, 0x03	; 3
     5bc:	08 95       	ret
     5be:	85 e0       	ldi	r24, 0x05	; 5
     5c0:	08 95       	ret
     5c2:	84 e0       	ldi	r24, 0x04	; 4
     5c4:	08 95       	ret
     5c6:	81 e0       	ldi	r24, 0x01	; 1
     5c8:	08 95       	ret
     5ca:	80 e0       	ldi	r24, 0x00	; 0
     5cc:	08 95       	ret
     5ce:	80 e0       	ldi	r24, 0x00	; 0
     5d0:	08 95       	ret
     5d2:	80 e0       	ldi	r24, 0x00	; 0
     5d4:	08 95       	ret
     5d6:	80 e0       	ldi	r24, 0x00	; 0
     5d8:	08 95       	ret
     5da:	80 e0       	ldi	r24, 0x00	; 0
     5dc:	08 95       	ret

000005de <parcour>:

char richting;

Junctions situatie = Straight;

char parcour(char *route) {
     5de:	cf 93       	push	r28
     5e0:	df 93       	push	r29
     5e2:	ec 01       	movw	r28, r24
	while(1) {
		situatie = lineType();
     5e4:	0e 94 26 02 	call	0x44c	; 0x44c <lineType>
     5e8:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <situatie>
		
		switch (situatie) {
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	89 30       	cpi	r24, 0x09	; 9
     5f0:	91 05       	cpc	r25, r1
     5f2:	00 f5       	brcc	.+64     	; 0x634 <parcour+0x56>
     5f4:	fc 01       	movw	r30, r24
     5f6:	ec 5c       	subi	r30, 0xCC	; 204
     5f8:	ff 4f       	sbci	r31, 0xFF	; 255
     5fa:	0c 94 56 11 	jmp	0x22ac	; 0x22ac <__tablejump2__>
			
			case X_junction:
			case Left_corner:
			case T_junction:
			case Straight_left_junction:
				motorControl('L');
     5fe:	8c e4       	ldi	r24, 0x4C	; 76
     600:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
				richting = 'L';
     604:	8c e4       	ldi	r24, 0x4C	; 76
     606:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
				//strncat(route, &richting, 1);
				break;
     60a:	14 c0       	rjmp	.+40     	; 0x634 <parcour+0x56>
			
			case Right_corner:
				motorControl('R');
     60c:	82 e5       	ldi	r24, 0x52	; 82
     60e:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
				richting = 'R';
     612:	82 e5       	ldi	r24, 0x52	; 82
     614:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
				//strncat(route, &richting, 1);
				break;
     618:	0d c0       	rjmp	.+26     	; 0x634 <parcour+0x56>
			
			case Straight_right_junction:
				richting = 'S';
     61a:	83 e5       	ldi	r24, 0x53	; 83
     61c:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
				//strncat(route, &richting, 1);
			case Straight:
				motorControl('S');
     620:	83 e5       	ldi	r24, 0x53	; 83
     622:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
				break;
     626:	06 c0       	rjmp	.+12     	; 0x634 <parcour+0x56>
			
			case Line_end:
				motorControl('T');
     628:	84 e5       	ldi	r24, 0x54	; 84
     62a:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
				richting = 'T';
     62e:	84 e5       	ldi	r24, 0x54	; 84
     630:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
				//strncat(route, &richting, 1);
				break;
		}
		
		
		if (route[-2] == 'T') {
     634:	fe 01       	movw	r30, r28
     636:	32 97       	sbiw	r30, 0x02	; 2
     638:	80 81       	ld	r24, Z
     63a:	84 35       	cpi	r24, 0x54	; 84
     63c:	99 f6       	brne	.-90     	; 0x5e4 <parcour+0x6>
			route[strlen(route)-3] = '\0';
     63e:	fe 01       	movw	r30, r28
     640:	01 90       	ld	r0, Z+
     642:	00 20       	and	r0, r0
     644:	e9 f7       	brne	.-6      	; 0x640 <parcour+0x62>
     646:	31 97       	sbiw	r30, 0x01	; 1
     648:	ec 1b       	sub	r30, r28
     64a:	fd 0b       	sbc	r31, r29
     64c:	33 97       	sbiw	r30, 0x03	; 3
     64e:	ec 0f       	add	r30, r28
     650:	fd 1f       	adc	r31, r29
     652:	10 82       	st	Z, r1
			if (route[-3] == 'L' && route[-1] == 'L') {
     654:	fe 01       	movw	r30, r28
     656:	33 97       	sbiw	r30, 0x03	; 3
     658:	80 81       	ld	r24, Z
     65a:	8c 34       	cpi	r24, 0x4C	; 76
     65c:	41 f4       	brne	.+16     	; 0x66e <parcour+0x90>
     65e:	32 96       	adiw	r30, 0x02	; 2
     660:	90 81       	ld	r25, Z
     662:	9c 34       	cpi	r25, 0x4C	; 76
     664:	21 f4       	brne	.+8      	; 0x66e <parcour+0x90>
				richting = 'S';
     666:	83 e5       	ldi	r24, 0x53	; 83
     668:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
     66c:	2b c0       	rjmp	.+86     	; 0x6c4 <parcour+0xe6>
			} else if (route[-3] == 'S' && route[-1] == 'L'){
     66e:	83 35       	cpi	r24, 0x53	; 83
     670:	49 f4       	brne	.+18     	; 0x684 <parcour+0xa6>
     672:	fe 01       	movw	r30, r28
     674:	31 97       	sbiw	r30, 0x01	; 1
     676:	90 81       	ld	r25, Z
     678:	9c 34       	cpi	r25, 0x4C	; 76
     67a:	21 f4       	brne	.+8      	; 0x684 <parcour+0xa6>
				richting = 'R';			
     67c:	82 e5       	ldi	r24, 0x52	; 82
     67e:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
     682:	20 c0       	rjmp	.+64     	; 0x6c4 <parcour+0xe6>
			} else if (route[-3] == 'R' && route[-1] == 'L'){
     684:	82 35       	cpi	r24, 0x52	; 82
     686:	49 f4       	brne	.+18     	; 0x69a <parcour+0xbc>
     688:	fe 01       	movw	r30, r28
     68a:	31 97       	sbiw	r30, 0x01	; 1
     68c:	90 81       	ld	r25, Z
     68e:	9c 34       	cpi	r25, 0x4C	; 76
     690:	21 f4       	brne	.+8      	; 0x69a <parcour+0xbc>
				richting = 'T';			
     692:	84 e5       	ldi	r24, 0x54	; 84
     694:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
     698:	15 c0       	rjmp	.+42     	; 0x6c4 <parcour+0xe6>
			} else if (route[-3] == 'L' && route[-1] == 'R'){
     69a:	8c 34       	cpi	r24, 0x4C	; 76
     69c:	49 f4       	brne	.+18     	; 0x6b0 <parcour+0xd2>
     69e:	fe 01       	movw	r30, r28
     6a0:	31 97       	sbiw	r30, 0x01	; 1
     6a2:	90 81       	ld	r25, Z
     6a4:	92 35       	cpi	r25, 0x52	; 82
     6a6:	21 f4       	brne	.+8      	; 0x6b0 <parcour+0xd2>
				richting = 'T';			
     6a8:	84 e5       	ldi	r24, 0x54	; 84
     6aa:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
     6ae:	0a c0       	rjmp	.+20     	; 0x6c4 <parcour+0xe6>
			} else if (route[-3] == 'L' && route[-1] == 'S'){
     6b0:	8c 34       	cpi	r24, 0x4C	; 76
     6b2:	41 f4       	brne	.+16     	; 0x6c4 <parcour+0xe6>
     6b4:	fe 01       	movw	r30, r28
     6b6:	31 97       	sbiw	r30, 0x01	; 1
     6b8:	80 81       	ld	r24, Z
     6ba:	83 35       	cpi	r24, 0x53	; 83
     6bc:	19 f4       	brne	.+6      	; 0x6c4 <parcour+0xe6>
				richting = 'R';			
     6be:	82 e5       	ldi	r24, 0x52	; 82
     6c0:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
			}
			strncat(route, &richting, 1);				
     6c4:	41 e0       	ldi	r20, 0x01	; 1
     6c6:	50 e0       	ldi	r21, 0x00	; 0
     6c8:	66 ea       	ldi	r22, 0xA6	; 166
     6ca:	71 e0       	ldi	r23, 0x01	; 1
     6cc:	ce 01       	movw	r24, r28
     6ce:	0e 94 d6 12 	call	0x25ac	; 0x25ac <strncat>
     6d2:	88 cf       	rjmp	.-240    	; 0x5e4 <parcour+0x6>
	while(1) {
		situatie = lineType();
		
		switch (situatie) {
			case Barcode: // end of parcour
				warehouse();
     6d4:	0e 94 19 05 	call	0xa32	; 0xa32 <warehouse>
			}
			strncat(route, &richting, 1);				
		}
	}
	return 0;
     6d8:	80 e0       	ldi	r24, 0x00	; 0
     6da:	df 91       	pop	r29
     6dc:	cf 91       	pop	r28
     6de:	08 95       	ret

000006e0 <swap>:
#include <pololu/3pi.h>
#include <avr/pgmspace.h>


void swap(int *a, int *b) {
    int temp = *a;
     6e0:	fc 01       	movw	r30, r24
     6e2:	20 81       	ld	r18, Z
     6e4:	31 81       	ldd	r19, Z+1	; 0x01
    *a = *b;
     6e6:	fb 01       	movw	r30, r22
     6e8:	40 81       	ld	r20, Z
     6ea:	51 81       	ldd	r21, Z+1	; 0x01
     6ec:	fc 01       	movw	r30, r24
     6ee:	51 83       	std	Z+1, r21	; 0x01
     6f0:	40 83       	st	Z, r20
    *b = temp;
     6f2:	fb 01       	movw	r30, r22
     6f4:	31 83       	std	Z+1, r19	; 0x01
     6f6:	20 83       	st	Z, r18
     6f8:	08 95       	ret

000006fa <bubbleSort>:
}

void bubbleSort(int arr[],int orderY[], int n) {
     6fa:	6f 92       	push	r6
     6fc:	7f 92       	push	r7
     6fe:	8f 92       	push	r8
     700:	9f 92       	push	r9
     702:	af 92       	push	r10
     704:	bf 92       	push	r11
     706:	cf 92       	push	r12
     708:	df 92       	push	r13
     70a:	ef 92       	push	r14
     70c:	ff 92       	push	r15
     70e:	0f 93       	push	r16
     710:	1f 93       	push	r17
     712:	cf 93       	push	r28
     714:	df 93       	push	r29
     716:	6c 01       	movw	r12, r24
     718:	3b 01       	movw	r6, r22
     71a:	4a 01       	movw	r8, r20
    for (int i = 0; i < n - 1; i++) {
     71c:	a1 2c       	mov	r10, r1
     71e:	b1 2c       	mov	r11, r1
     720:	30 c0       	rjmp	.+96     	; 0x782 <bubbleSort+0x88>
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
     722:	7e 01       	movw	r14, r28
     724:	ee 0c       	add	r14, r14
     726:	ff 1c       	adc	r15, r15
     728:	f6 01       	movw	r30, r12
     72a:	ee 0d       	add	r30, r14
     72c:	ff 1d       	adc	r31, r15
     72e:	20 81       	ld	r18, Z
     730:	31 81       	ldd	r19, Z+1	; 0x01
     732:	8e 01       	movw	r16, r28
     734:	0f 5f       	subi	r16, 0xFF	; 255
     736:	1f 4f       	sbci	r17, 0xFF	; 255
     738:	00 0f       	add	r16, r16
     73a:	11 1f       	adc	r17, r17
     73c:	d6 01       	movw	r26, r12
     73e:	a0 0f       	add	r26, r16
     740:	b1 1f       	adc	r27, r17
     742:	8d 91       	ld	r24, X+
     744:	9c 91       	ld	r25, X
     746:	11 97       	sbiw	r26, 0x01	; 1
     748:	82 17       	cp	r24, r18
     74a:	93 07       	cpc	r25, r19
     74c:	64 f4       	brge	.+24     	; 0x766 <bubbleSort+0x6c>
                swap(&arr[j], &arr[j + 1]);
     74e:	bd 01       	movw	r22, r26
     750:	cf 01       	movw	r24, r30
     752:	0e 94 70 03 	call	0x6e0	; 0x6e0 <swap>
                swap(&orderY[j], &orderY[j + 1]);
     756:	b3 01       	movw	r22, r6
     758:	60 0f       	add	r22, r16
     75a:	71 1f       	adc	r23, r17
     75c:	c3 01       	movw	r24, r6
     75e:	8e 0d       	add	r24, r14
     760:	9f 1d       	adc	r25, r15
     762:	0e 94 70 03 	call	0x6e0	; 0x6e0 <swap>
    *b = temp;
}

void bubbleSort(int arr[],int orderY[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
     766:	21 96       	adiw	r28, 0x01	; 1
     768:	02 c0       	rjmp	.+4      	; 0x76e <bubbleSort+0x74>
     76a:	c0 e0       	ldi	r28, 0x00	; 0
     76c:	d0 e0       	ldi	r29, 0x00	; 0
     76e:	c4 01       	movw	r24, r8
     770:	8a 19       	sub	r24, r10
     772:	9b 09       	sbc	r25, r11
     774:	01 97       	sbiw	r24, 0x01	; 1
     776:	c8 17       	cp	r28, r24
     778:	d9 07       	cpc	r29, r25
     77a:	9c f2       	brlt	.-90     	; 0x722 <bubbleSort+0x28>
    *a = *b;
    *b = temp;
}

void bubbleSort(int arr[],int orderY[], int n) {
    for (int i = 0; i < n - 1; i++) {
     77c:	8f ef       	ldi	r24, 0xFF	; 255
     77e:	a8 1a       	sub	r10, r24
     780:	b8 0a       	sbc	r11, r24
     782:	c4 01       	movw	r24, r8
     784:	01 97       	sbiw	r24, 0x01	; 1
     786:	a8 16       	cp	r10, r24
     788:	b9 06       	cpc	r11, r25
     78a:	7c f3       	brlt	.-34     	; 0x76a <bubbleSort+0x70>
                swap(&orderY[j], &orderY[j + 1]);
				
            }
		}
    }
}
     78c:	df 91       	pop	r29
     78e:	cf 91       	pop	r28
     790:	1f 91       	pop	r17
     792:	0f 91       	pop	r16
     794:	ff 90       	pop	r15
     796:	ef 90       	pop	r14
     798:	df 90       	pop	r13
     79a:	cf 90       	pop	r12
     79c:	bf 90       	pop	r11
     79e:	af 90       	pop	r10
     7a0:	9f 90       	pop	r9
     7a2:	8f 90       	pop	r8
     7a4:	7f 90       	pop	r7
     7a6:	6f 90       	pop	r6
     7a8:	08 95       	ret

000007aa <drive>:



void drive(int junctions)
{
     7aa:	ef 92       	push	r14
     7ac:	ff 92       	push	r15
     7ae:	0f 93       	push	r16
     7b0:	1f 93       	push	r17
     7b2:	cf 93       	push	r28
     7b4:	df 93       	push	r29
     7b6:	7c 01       	movw	r14, r24
	Junctions situatie;
	motorControl('S');
     7b8:	83 e5       	ldi	r24, 0x53	; 83
     7ba:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
	int driving = 1;
	int count = 0;
     7be:	00 e0       	ldi	r16, 0x00	; 0
     7c0:	10 e0       	ldi	r17, 0x00	; 0

void drive(int junctions)
{
	Junctions situatie;
	motorControl('S');
	int driving = 1;
     7c2:	c1 e0       	ldi	r28, 0x01	; 1
     7c4:	d0 e0       	ldi	r29, 0x00	; 0
	int count = 0;
	while(driving) {
     7c6:	1a c0       	rjmp	.+52     	; 0x7fc <drive+0x52>
		situatie = lineType();
     7c8:	0e 94 26 02 	call	0x44c	; 0x44c <lineType>
		//clear();
		switch (situatie) {
     7cc:	99 27       	eor	r25, r25
     7ce:	00 97       	sbiw	r24, 0x00	; 0
     7d0:	21 f0       	breq	.+8      	; 0x7da <drive+0x30>
     7d2:	03 97       	sbiw	r24, 0x03	; 3
     7d4:	06 97       	sbiw	r24, 0x06	; 6
     7d6:	28 f0       	brcs	.+10     	; 0x7e2 <drive+0x38>
     7d8:	11 c0       	rjmp	.+34     	; 0x7fc <drive+0x52>
			case Barcode: // end of parcour
			//motorControl('N');
			break;
			
			case Straight:
			motorControl('S');
     7da:	83 e5       	ldi	r24, 0x53	; 83
     7dc:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
			break;
     7e0:	0d c0       	rjmp	.+26     	; 0x7fc <drive+0x52>
			case Left_corner:
			case T_junction:
			case Straight_left_junction:
			case Right_corner:
			case Straight_right_junction:
				count++;
     7e2:	0f 5f       	subi	r16, 0xFF	; 255
     7e4:	1f 4f       	sbci	r17, 0xFF	; 255
				motorControl('S');
     7e6:	83 e5       	ldi	r24, 0x53	; 83
     7e8:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
				if(count == junctions)
     7ec:	0e 15       	cp	r16, r14
     7ee:	1f 05       	cpc	r17, r15
     7f0:	29 f4       	brne	.+10     	; 0x7fc <drive+0x52>
				{
					motorControl('N');
     7f2:	8e e4       	ldi	r24, 0x4E	; 78
     7f4:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
					driving = 0;
     7f8:	c0 e0       	ldi	r28, 0x00	; 0
     7fa:	d0 e0       	ldi	r29, 0x00	; 0
{
	Junctions situatie;
	motorControl('S');
	int driving = 1;
	int count = 0;
	while(driving) {
     7fc:	20 97       	sbiw	r28, 0x00	; 0
     7fe:	21 f7       	brne	.-56     	; 0x7c8 <drive+0x1e>
			
			
		}
		
	}
}
     800:	df 91       	pop	r29
     802:	cf 91       	pop	r28
     804:	1f 91       	pop	r17
     806:	0f 91       	pop	r16
     808:	ff 90       	pop	r15
     80a:	ef 90       	pop	r14
     80c:	08 95       	ret

0000080e <waitForTurn>:

void waitForTurn()
{
     80e:	cf 93       	push	r28
     810:	8f e0       	ldi	r24, 0x0F	; 15
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <delay_ms>
     818:	03 c0       	rjmp	.+6      	; 0x820 <waitForTurn+0x12>
	Junctions lijn;
	delay(15);
	while(lijn != Straight)
	{
		lijn  = lineType();
     81a:	0e 94 26 02 	call	0x44c	; 0x44c <lineType>
     81e:	c8 2f       	mov	r28, r24

void waitForTurn()
{
	Junctions lijn;
	delay(15);
	while(lijn != Straight)
     820:	c1 11       	cpse	r28, r1
     822:	fb cf       	rjmp	.-10     	; 0x81a <waitForTurn+0xc>
	{
		lijn  = lineType();
	}
	motorControl('N');
     824:	8e e4       	ldi	r24, 0x4E	; 78
     826:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
}
     82a:	cf 91       	pop	r28
     82c:	08 95       	ret

0000082e <turnRobot>:

void turnRobot(char direction, piRobot *myRobot)
{
     82e:	ef 92       	push	r14
     830:	ff 92       	push	r15
     832:	0f 93       	push	r16
     834:	1f 93       	push	r17
     836:	cf 93       	push	r28
     838:	c8 2f       	mov	r28, r24
     83a:	8b 01       	movw	r16, r22
    int changing = 1;
     83c:	ee 24       	eor	r14, r14
     83e:	e3 94       	inc	r14
     840:	f1 2c       	mov	r15, r1

    while(changing==1)
     842:	9a c0       	rjmp	.+308    	; 0x978 <__stack+0x79>
    {
		
        switch(myRobot->direction)
     844:	f8 01       	movw	r30, r16
     846:	84 81       	ldd	r24, Z+4	; 0x04
     848:	8e 34       	cpi	r24, 0x4E	; 78
     84a:	59 f0       	breq	.+22     	; 0x862 <turnRobot+0x34>
     84c:	18 f4       	brcc	.+6      	; 0x854 <turnRobot+0x26>
     84e:	85 34       	cpi	r24, 0x45	; 69
     850:	51 f1       	breq	.+84     	; 0x8a6 <turnRobot+0x78>
     852:	8c c0       	rjmp	.+280    	; 0x96c <__stack+0x6d>
     854:	83 35       	cpi	r24, 0x53	; 83
     856:	09 f4       	brne	.+2      	; 0x85a <turnRobot+0x2c>
     858:	48 c0       	rjmp	.+144    	; 0x8ea <turnRobot+0xbc>
     85a:	87 35       	cpi	r24, 0x57	; 87
     85c:	09 f4       	brne	.+2      	; 0x860 <turnRobot+0x32>
     85e:	66 c0       	rjmp	.+204    	; 0x92c <__stack+0x2d>
     860:	85 c0       	rjmp	.+266    	; 0x96c <__stack+0x6d>
        {
            case 'N':
                if(direction == 'E')
     862:	c5 34       	cpi	r28, 0x45	; 69
     864:	49 f4       	brne	.+18     	; 0x878 <turnRobot+0x4a>
                {
                    motorControl('R');
     866:	82 e5       	ldi	r24, 0x52	; 82
     868:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
					waitForTurn();
     86c:	0e 94 07 04 	call	0x80e	; 0x80e <waitForTurn>
                    myRobot->direction = 'E';
     870:	85 e4       	ldi	r24, 0x45	; 69
     872:	f8 01       	movw	r30, r16
     874:	84 83       	std	Z+4, r24	; 0x04
     876:	7a c0       	rjmp	.+244    	; 0x96c <__stack+0x6d>
                }
                else if(direction == 'W')
     878:	c7 35       	cpi	r28, 0x57	; 87
     87a:	49 f4       	brne	.+18     	; 0x88e <turnRobot+0x60>
                {
                    motorControl('L');
     87c:	8c e4       	ldi	r24, 0x4C	; 76
     87e:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
					waitForTurn();
     882:	0e 94 07 04 	call	0x80e	; 0x80e <waitForTurn>
                    myRobot->direction = 'W';
     886:	87 e5       	ldi	r24, 0x57	; 87
     888:	f8 01       	movw	r30, r16
     88a:	84 83       	std	Z+4, r24	; 0x04
     88c:	6f c0       	rjmp	.+222    	; 0x96c <__stack+0x6d>
                }
                else if(direction == 'S')
     88e:	c3 35       	cpi	r28, 0x53	; 83
     890:	09 f0       	breq	.+2      	; 0x894 <turnRobot+0x66>
     892:	6c c0       	rjmp	.+216    	; 0x96c <__stack+0x6d>
                {
                    motorControl('T');
     894:	84 e5       	ldi	r24, 0x54	; 84
     896:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
					waitForTurn();
     89a:	0e 94 07 04 	call	0x80e	; 0x80e <waitForTurn>
                    myRobot->direction = 'S';
     89e:	83 e5       	ldi	r24, 0x53	; 83
     8a0:	f8 01       	movw	r30, r16
     8a2:	84 83       	std	Z+4, r24	; 0x04
     8a4:	63 c0       	rjmp	.+198    	; 0x96c <__stack+0x6d>
                }
                break;
            case 'E':
                if(direction == 'S')
     8a6:	c3 35       	cpi	r28, 0x53	; 83
     8a8:	49 f4       	brne	.+18     	; 0x8bc <turnRobot+0x8e>
                {
                    motorControl('R');
     8aa:	82 e5       	ldi	r24, 0x52	; 82
     8ac:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
					waitForTurn();
     8b0:	0e 94 07 04 	call	0x80e	; 0x80e <waitForTurn>
                    myRobot->direction = 'S';
     8b4:	83 e5       	ldi	r24, 0x53	; 83
     8b6:	f8 01       	movw	r30, r16
     8b8:	84 83       	std	Z+4, r24	; 0x04
     8ba:	58 c0       	rjmp	.+176    	; 0x96c <__stack+0x6d>
                }
                else if(direction == 'W')
     8bc:	c7 35       	cpi	r28, 0x57	; 87
     8be:	49 f4       	brne	.+18     	; 0x8d2 <turnRobot+0xa4>
                {
                    motorControl('L');
     8c0:	8c e4       	ldi	r24, 0x4C	; 76
     8c2:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
					waitForTurn();
     8c6:	0e 94 07 04 	call	0x80e	; 0x80e <waitForTurn>
                    myRobot->direction = 'W';
     8ca:	87 e5       	ldi	r24, 0x57	; 87
     8cc:	f8 01       	movw	r30, r16
     8ce:	84 83       	std	Z+4, r24	; 0x04
     8d0:	4d c0       	rjmp	.+154    	; 0x96c <__stack+0x6d>
                }
                else if(direction == 'S')
     8d2:	c3 35       	cpi	r28, 0x53	; 83
     8d4:	09 f0       	breq	.+2      	; 0x8d8 <turnRobot+0xaa>
     8d6:	4a c0       	rjmp	.+148    	; 0x96c <__stack+0x6d>
                {
                    motorControl('T');
     8d8:	84 e5       	ldi	r24, 0x54	; 84
     8da:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
					waitForTurn();
     8de:	0e 94 07 04 	call	0x80e	; 0x80e <waitForTurn>
                    myRobot->direction = 'S';
     8e2:	83 e5       	ldi	r24, 0x53	; 83
     8e4:	f8 01       	movw	r30, r16
     8e6:	84 83       	std	Z+4, r24	; 0x04
     8e8:	41 c0       	rjmp	.+130    	; 0x96c <__stack+0x6d>
                }
                break;
            case 'S':
                if(direction == 'W')
     8ea:	c7 35       	cpi	r28, 0x57	; 87
     8ec:	49 f4       	brne	.+18     	; 0x900 <__stack+0x1>
                {
                    motorControl('R');
     8ee:	82 e5       	ldi	r24, 0x52	; 82
     8f0:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
					waitForTurn();
     8f4:	0e 94 07 04 	call	0x80e	; 0x80e <waitForTurn>
                    myRobot->direction = 'W';
     8f8:	87 e5       	ldi	r24, 0x57	; 87
     8fa:	f8 01       	movw	r30, r16
     8fc:	84 83       	std	Z+4, r24	; 0x04
     8fe:	36 c0       	rjmp	.+108    	; 0x96c <__stack+0x6d>
                }
                else if(direction == 'E')
     900:	c5 34       	cpi	r28, 0x45	; 69
     902:	49 f4       	brne	.+18     	; 0x916 <__stack+0x17>
                {
                    motorControl('L');
     904:	8c e4       	ldi	r24, 0x4C	; 76
     906:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
					waitForTurn();
     90a:	0e 94 07 04 	call	0x80e	; 0x80e <waitForTurn>
                    myRobot->direction = 'E';
     90e:	85 e4       	ldi	r24, 0x45	; 69
     910:	f8 01       	movw	r30, r16
     912:	84 83       	std	Z+4, r24	; 0x04
     914:	2b c0       	rjmp	.+86     	; 0x96c <__stack+0x6d>
                }
                else if(direction == 'N')
     916:	ce 34       	cpi	r28, 0x4E	; 78
     918:	49 f5       	brne	.+82     	; 0x96c <__stack+0x6d>
                {
                    motorControl('T');
     91a:	84 e5       	ldi	r24, 0x54	; 84
     91c:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
					waitForTurn();
     920:	0e 94 07 04 	call	0x80e	; 0x80e <waitForTurn>
                    myRobot->direction = 'N';
     924:	8e e4       	ldi	r24, 0x4E	; 78
     926:	f8 01       	movw	r30, r16
     928:	84 83       	std	Z+4, r24	; 0x04
     92a:	20 c0       	rjmp	.+64     	; 0x96c <__stack+0x6d>
                }
                break;
            case 'W':
                if(direction == 'N')
     92c:	ce 34       	cpi	r28, 0x4E	; 78
     92e:	49 f4       	brne	.+18     	; 0x942 <__stack+0x43>
                {
					
                    motorControl('R');
     930:	82 e5       	ldi	r24, 0x52	; 82
     932:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
					waitForTurn();
     936:	0e 94 07 04 	call	0x80e	; 0x80e <waitForTurn>
                    myRobot->direction = 'N';
     93a:	8e e4       	ldi	r24, 0x4E	; 78
     93c:	f8 01       	movw	r30, r16
     93e:	84 83       	std	Z+4, r24	; 0x04
     940:	15 c0       	rjmp	.+42     	; 0x96c <__stack+0x6d>
                }
                else if(direction == 'S')
     942:	c3 35       	cpi	r28, 0x53	; 83
     944:	49 f4       	brne	.+18     	; 0x958 <__stack+0x59>
                {
                    motorControl('L');
     946:	8c e4       	ldi	r24, 0x4C	; 76
     948:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
					waitForTurn();
     94c:	0e 94 07 04 	call	0x80e	; 0x80e <waitForTurn>
                    myRobot->direction = 'S';
     950:	83 e5       	ldi	r24, 0x53	; 83
     952:	f8 01       	movw	r30, r16
     954:	84 83       	std	Z+4, r24	; 0x04
     956:	0a c0       	rjmp	.+20     	; 0x96c <__stack+0x6d>
                }
                else if(direction == 'E')
     958:	c5 34       	cpi	r28, 0x45	; 69
     95a:	41 f4       	brne	.+16     	; 0x96c <__stack+0x6d>
                {
                    motorControl('T');
     95c:	84 e5       	ldi	r24, 0x54	; 84
     95e:	0e 94 4f 01 	call	0x29e	; 0x29e <motorControl>
					waitForTurn();
     962:	0e 94 07 04 	call	0x80e	; 0x80e <waitForTurn>
                    myRobot->direction = 'E';
     966:	85 e4       	ldi	r24, 0x45	; 69
     968:	f8 01       	movw	r30, r16
     96a:	84 83       	std	Z+4, r24	; 0x04
                }
                break;
		}
		
				if(myRobot->direction == direction)
     96c:	f8 01       	movw	r30, r16
     96e:	84 81       	ldd	r24, Z+4	; 0x04
     970:	c8 13       	cpse	r28, r24
     972:	02 c0       	rjmp	.+4      	; 0x978 <__stack+0x79>
				{
					changing = 0;
     974:	e1 2c       	mov	r14, r1
     976:	f1 2c       	mov	r15, r1

void turnRobot(char direction, piRobot *myRobot)
{
    int changing = 1;

    while(changing==1)
     978:	f1 e0       	ldi	r31, 0x01	; 1
     97a:	ef 16       	cp	r14, r31
     97c:	f1 04       	cpc	r15, r1
     97e:	09 f4       	brne	.+2      	; 0x982 <__stack+0x83>
     980:	61 cf       	rjmp	.-318    	; 0x844 <turnRobot+0x16>
				{
					changing = 0;
				}
		
    }
}
     982:	cf 91       	pop	r28
     984:	1f 91       	pop	r17
     986:	0f 91       	pop	r16
     988:	ff 90       	pop	r15
     98a:	ef 90       	pop	r14
     98c:	08 95       	ret

0000098e <moveX>:


void moveX(int orderPos, piRobot *robot)
{
     98e:	0f 93       	push	r16
     990:	1f 93       	push	r17
     992:	cf 93       	push	r28
     994:	df 93       	push	r29
	
    int junctions;
	
	
    if(robot->posX != orderPos)
     996:	fb 01       	movw	r30, r22
     998:	20 81       	ld	r18, Z
     99a:	31 81       	ldd	r19, Z+1	; 0x01
     99c:	28 17       	cp	r18, r24
     99e:	39 07       	cpc	r19, r25
     9a0:	d1 f0       	breq	.+52     	; 0x9d6 <moveX+0x48>
     9a2:	8b 01       	movw	r16, r22
     9a4:	ec 01       	movw	r28, r24
    {
		
        if(robot->posX < orderPos)
     9a6:	28 17       	cp	r18, r24
     9a8:	39 07       	cpc	r19, r25
     9aa:	5c f4       	brge	.+22     	; 0x9c2 <moveX+0x34>
        {
            turnRobot('W', robot);
     9ac:	87 e5       	ldi	r24, 0x57	; 87
     9ae:	0e 94 17 04 	call	0x82e	; 0x82e <turnRobot>
            junctions = orderPos-robot->posX;
     9b2:	f8 01       	movw	r30, r16
     9b4:	80 81       	ld	r24, Z
     9b6:	91 81       	ldd	r25, Z+1	; 0x01
     9b8:	9e 01       	movw	r18, r28
     9ba:	28 1b       	sub	r18, r24
     9bc:	39 0b       	sbc	r19, r25
     9be:	c9 01       	movw	r24, r18
     9c0:	08 c0       	rjmp	.+16     	; 0x9d2 <moveX+0x44>
        }
        else{
            turnRobot('E', robot);
     9c2:	85 e4       	ldi	r24, 0x45	; 69
     9c4:	0e 94 17 04 	call	0x82e	; 0x82e <turnRobot>
            junctions = robot->posX - orderPos;
     9c8:	f8 01       	movw	r30, r16
     9ca:	80 81       	ld	r24, Z
     9cc:	91 81       	ldd	r25, Z+1	; 0x01
     9ce:	8c 1b       	sub	r24, r28
     9d0:	9d 0b       	sbc	r25, r29
        }

        
		drive(junctions);
     9d2:	0e 94 d5 03 	call	0x7aa	; 0x7aa <drive>
        

    }
}
     9d6:	df 91       	pop	r29
     9d8:	cf 91       	pop	r28
     9da:	1f 91       	pop	r17
     9dc:	0f 91       	pop	r16
     9de:	08 95       	ret

000009e0 <moveY>:

void moveY(int orderPos, piRobot *robot)
{
     9e0:	0f 93       	push	r16
     9e2:	1f 93       	push	r17
     9e4:	cf 93       	push	r28
     9e6:	df 93       	push	r29

    int junctions;
    if(robot->posY != orderPos)
     9e8:	fb 01       	movw	r30, r22
     9ea:	22 81       	ldd	r18, Z+2	; 0x02
     9ec:	33 81       	ldd	r19, Z+3	; 0x03
     9ee:	28 17       	cp	r18, r24
     9f0:	39 07       	cpc	r19, r25
     9f2:	d1 f0       	breq	.+52     	; 0xa28 <moveY+0x48>
     9f4:	8b 01       	movw	r16, r22
     9f6:	ec 01       	movw	r28, r24
    {
        if(robot->posY < orderPos)
     9f8:	28 17       	cp	r18, r24
     9fa:	39 07       	cpc	r19, r25
     9fc:	5c f4       	brge	.+22     	; 0xa14 <moveY+0x34>
        {
            turnRobot('N', robot);
     9fe:	8e e4       	ldi	r24, 0x4E	; 78
     a00:	0e 94 17 04 	call	0x82e	; 0x82e <turnRobot>
            junctions = orderPos-robot->posY;
     a04:	f8 01       	movw	r30, r16
     a06:	82 81       	ldd	r24, Z+2	; 0x02
     a08:	93 81       	ldd	r25, Z+3	; 0x03
     a0a:	9e 01       	movw	r18, r28
     a0c:	28 1b       	sub	r18, r24
     a0e:	39 0b       	sbc	r19, r25
     a10:	c9 01       	movw	r24, r18
     a12:	08 c0       	rjmp	.+16     	; 0xa24 <moveY+0x44>
        }
        else{
            turnRobot('S', robot);
     a14:	83 e5       	ldi	r24, 0x53	; 83
     a16:	0e 94 17 04 	call	0x82e	; 0x82e <turnRobot>
            junctions = robot->posY - orderPos;
     a1a:	f8 01       	movw	r30, r16
     a1c:	82 81       	ldd	r24, Z+2	; 0x02
     a1e:	93 81       	ldd	r25, Z+3	; 0x03
     a20:	8c 1b       	sub	r24, r28
     a22:	9d 0b       	sbc	r25, r29
        }

            drive(junctions);
     a24:	0e 94 d5 03 	call	0x7aa	; 0x7aa <drive>
        

    }
}
     a28:	df 91       	pop	r29
     a2a:	cf 91       	pop	r28
     a2c:	1f 91       	pop	r17
     a2e:	0f 91       	pop	r16
     a30:	08 95       	ret

00000a32 <warehouse>:


void warehouse(void)
{
     a32:	8f 92       	push	r8
     a34:	9f 92       	push	r9
     a36:	af 92       	push	r10
     a38:	bf 92       	push	r11
     a3a:	ef 92       	push	r14
     a3c:	ff 92       	push	r15
     a3e:	0f 93       	push	r16
     a40:	1f 93       	push	r17
     a42:	cf 93       	push	r28
     a44:	df 93       	push	r29
     a46:	cd b7       	in	r28, 0x3d	; 61
     a48:	de b7       	in	r29, 0x3e	; 62
     a4a:	69 97       	sbiw	r28, 0x19	; 25
     a4c:	0f b6       	in	r0, 0x3f	; 63
     a4e:	f8 94       	cli
     a50:	de bf       	out	0x3e, r29	; 62
     a52:	0f be       	out	0x3f, r0	; 63
     a54:	cd bf       	out	0x3d, r28	; 61
 piRobot robot;
 robot.direction = 'W';
     a56:	87 e5       	ldi	r24, 0x57	; 87
     a58:	8d 83       	std	Y+5, r24	; 0x05
 robot.posX = -1;
     a5a:	8f ef       	ldi	r24, 0xFF	; 255
     a5c:	9f ef       	ldi	r25, 0xFF	; 255
     a5e:	9a 83       	std	Y+2, r25	; 0x02
     a60:	89 83       	std	Y+1, r24	; 0x01
 robot.posY = 0;
     a62:	1c 82       	std	Y+4, r1	; 0x04
     a64:	1b 82       	std	Y+3, r1	; 0x03
//int orderX[] = getWixel("posX");
//int orderY[] = getWixel("posY");

    int orderX[] = {0,3,1,2,4};
     a66:	8a e0       	ldi	r24, 0x0A	; 10
     a68:	ea e0       	ldi	r30, 0x0A	; 10
     a6a:	f1 e0       	ldi	r31, 0x01	; 1
     a6c:	de 01       	movw	r26, r28
     a6e:	16 96       	adiw	r26, 0x06	; 6
     a70:	01 90       	ld	r0, Z+
     a72:	0d 92       	st	X+, r0
     a74:	8a 95       	dec	r24
     a76:	e1 f7       	brne	.-8      	; 0xa70 <warehouse+0x3e>
    int orderY[] = {1,2,3,3,4};
     a78:	8a e0       	ldi	r24, 0x0A	; 10
     a7a:	e4 e1       	ldi	r30, 0x14	; 20
     a7c:	f1 e0       	ldi	r31, 0x01	; 1
     a7e:	de 01       	movw	r26, r28
     a80:	50 96       	adiw	r26, 0x10	; 16
     a82:	01 90       	ld	r0, Z+
     a84:	0d 92       	st	X+, r0
     a86:	8a 95       	dec	r24
     a88:	e1 f7       	brne	.-8      	; 0xa82 <warehouse+0x50>

    int arrayGrootte = sizeof(orderX) / sizeof(orderX[0]);
    bubbleSort(orderX, orderY, arrayGrootte);
     a8a:	45 e0       	ldi	r20, 0x05	; 5
     a8c:	50 e0       	ldi	r21, 0x00	; 0
     a8e:	be 01       	movw	r22, r28
     a90:	60 5f       	subi	r22, 0xF0	; 240
     a92:	7f 4f       	sbci	r23, 0xFF	; 255
     a94:	ce 01       	movw	r24, r28
     a96:	06 96       	adiw	r24, 0x06	; 6
     a98:	0e 94 7d 03 	call	0x6fa	; 0x6fa <bubbleSort>
	
	
	 //motorControl('S');
	//drive();
	
    for(int locaties = 0; locaties<arrayGrootte;locaties++)
     a9c:	e1 2c       	mov	r14, r1
     a9e:	f1 2c       	mov	r15, r1
     aa0:	4f c0       	rjmp	.+158    	; 0xb40 <warehouse+0x10e>
    {
		float completed = locaties;
     aa2:	b7 01       	movw	r22, r14
     aa4:	0f 2c       	mov	r0, r15
     aa6:	00 0c       	add	r0, r0
     aa8:	88 0b       	sbc	r24, r24
     aaa:	99 0b       	sbc	r25, r25
     aac:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__floatsisf>
     ab0:	4b 01       	movw	r8, r22
     ab2:	5c 01       	movw	r10, r24
		float total = arrayGrootte;
		
		
        moveX(orderX[locaties], &robot);
     ab4:	87 01       	movw	r16, r14
     ab6:	00 0f       	add	r16, r16
     ab8:	11 1f       	adc	r17, r17
     aba:	81 e0       	ldi	r24, 0x01	; 1
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	8c 0f       	add	r24, r28
     ac0:	9d 1f       	adc	r25, r29
     ac2:	08 0f       	add	r16, r24
     ac4:	19 1f       	adc	r17, r25
     ac6:	bc 01       	movw	r22, r24
     ac8:	f8 01       	movw	r30, r16
     aca:	85 81       	ldd	r24, Z+5	; 0x05
     acc:	96 81       	ldd	r25, Z+6	; 0x06
     ace:	0e 94 c7 04 	call	0x98e	; 0x98e <moveX>
		robot.posX = orderX[locaties];
     ad2:	f8 01       	movw	r30, r16
     ad4:	85 81       	ldd	r24, Z+5	; 0x05
     ad6:	96 81       	ldd	r25, Z+6	; 0x06
     ad8:	9a 83       	std	Y+2, r25	; 0x02
     ada:	89 83       	std	Y+1, r24	; 0x01
        moveY(orderY[locaties], &robot);
     adc:	be 01       	movw	r22, r28
     ade:	6f 5f       	subi	r22, 0xFF	; 255
     ae0:	7f 4f       	sbci	r23, 0xFF	; 255
     ae2:	87 85       	ldd	r24, Z+15	; 0x0f
     ae4:	90 89       	ldd	r25, Z+16	; 0x10
     ae6:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <moveY>
		robot.posY = orderY[locaties];
     aea:	f8 01       	movw	r30, r16
     aec:	87 85       	ldd	r24, Z+15	; 0x0f
     aee:	90 89       	ldd	r25, Z+16	; 0x10
     af0:	9c 83       	std	Y+4, r25	; 0x04
     af2:	8b 83       	std	Y+3, r24	; 0x03
     af4:	88 ee       	ldi	r24, 0xE8	; 232
     af6:	93 e0       	ldi	r25, 0x03	; 3
     af8:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <delay_ms>
        delay(1000);//wait 1 second
		
        updateDisplay((((completed+1)/total)*100),batteryPercentage(),logicsBot);
     afc:	0e 94 5d 00 	call	0xba	; 0xba <batteryPercentage>
     b00:	8c 01       	movw	r16, r24
     b02:	20 e0       	ldi	r18, 0x00	; 0
     b04:	30 e0       	ldi	r19, 0x00	; 0
     b06:	40 e8       	ldi	r20, 0x80	; 128
     b08:	5f e3       	ldi	r21, 0x3F	; 63
     b0a:	c5 01       	movw	r24, r10
     b0c:	b4 01       	movw	r22, r8
     b0e:	0e 94 c5 05 	call	0xb8a	; 0xb8a <__addsf3>
     b12:	20 e0       	ldi	r18, 0x00	; 0
     b14:	30 e0       	ldi	r19, 0x00	; 0
     b16:	40 ea       	ldi	r20, 0xA0	; 160
     b18:	50 e4       	ldi	r21, 0x40	; 64
     b1a:	0e 94 31 06 	call	0xc62	; 0xc62 <__divsf3>
     b1e:	20 e0       	ldi	r18, 0x00	; 0
     b20:	30 e0       	ldi	r19, 0x00	; 0
     b22:	48 ec       	ldi	r20, 0xC8	; 200
     b24:	52 e4       	ldi	r21, 0x42	; 66
     b26:	0e 94 67 07 	call	0xece	; 0xece <__mulsf3>
     b2a:	0e 94 a3 06 	call	0xd46	; 0xd46 <__fixsfsi>
     b2e:	dc 01       	movw	r26, r24
     b30:	cb 01       	movw	r24, r22
     b32:	42 e0       	ldi	r20, 0x02	; 2
     b34:	b8 01       	movw	r22, r16
     b36:	0e 94 7c 00 	call	0xf8	; 0xf8 <updateDisplay>
	
	
	 //motorControl('S');
	//drive();
	
    for(int locaties = 0; locaties<arrayGrootte;locaties++)
     b3a:	ff ef       	ldi	r31, 0xFF	; 255
     b3c:	ef 1a       	sub	r14, r31
     b3e:	ff 0a       	sbc	r15, r31
     b40:	85 e0       	ldi	r24, 0x05	; 5
     b42:	e8 16       	cp	r14, r24
     b44:	f1 04       	cpc	r15, r1
     b46:	0c f4       	brge	.+2      	; 0xb4a <warehouse+0x118>
     b48:	ac cf       	rjmp	.-168    	; 0xaa2 <warehouse+0x70>
		robot.posY = orderY[locaties];
        delay(1000);//wait 1 second
		
        updateDisplay((((completed+1)/total)*100),batteryPercentage(),logicsBot);
    }
    moveY(0, &robot);
     b4a:	be 01       	movw	r22, r28
     b4c:	6f 5f       	subi	r22, 0xFF	; 255
     b4e:	7f 4f       	sbci	r23, 0xFF	; 255
     b50:	80 e0       	ldi	r24, 0x00	; 0
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <moveY>
    moveX(0, &robot);
     b58:	be 01       	movw	r22, r28
     b5a:	6f 5f       	subi	r22, 0xFF	; 255
     b5c:	7f 4f       	sbci	r23, 0xFF	; 255
     b5e:	80 e0       	ldi	r24, 0x00	; 0
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	0e 94 c7 04 	call	0x98e	; 0x98e <moveX>
    //goHome();
}
     b66:	69 96       	adiw	r28, 0x19	; 25
     b68:	0f b6       	in	r0, 0x3f	; 63
     b6a:	f8 94       	cli
     b6c:	de bf       	out	0x3e, r29	; 62
     b6e:	0f be       	out	0x3f, r0	; 63
     b70:	cd bf       	out	0x3d, r28	; 61
     b72:	df 91       	pop	r29
     b74:	cf 91       	pop	r28
     b76:	1f 91       	pop	r17
     b78:	0f 91       	pop	r16
     b7a:	ff 90       	pop	r15
     b7c:	ef 90       	pop	r14
     b7e:	bf 90       	pop	r11
     b80:	af 90       	pop	r10
     b82:	9f 90       	pop	r9
     b84:	8f 90       	pop	r8
     b86:	08 95       	ret

00000b88 <__subsf3>:
     b88:	50 58       	subi	r21, 0x80	; 128

00000b8a <__addsf3>:
     b8a:	bb 27       	eor	r27, r27
     b8c:	aa 27       	eor	r26, r26
     b8e:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <__addsf3x>
     b92:	0c 94 2d 07 	jmp	0xe5a	; 0xe5a <__fp_round>
     b96:	0e 94 1f 07 	call	0xe3e	; 0xe3e <__fp_pscA>
     b9a:	38 f0       	brcs	.+14     	; 0xbaa <__addsf3+0x20>
     b9c:	0e 94 26 07 	call	0xe4c	; 0xe4c <__fp_pscB>
     ba0:	20 f0       	brcs	.+8      	; 0xbaa <__addsf3+0x20>
     ba2:	39 f4       	brne	.+14     	; 0xbb2 <__addsf3+0x28>
     ba4:	9f 3f       	cpi	r25, 0xFF	; 255
     ba6:	19 f4       	brne	.+6      	; 0xbae <__addsf3+0x24>
     ba8:	26 f4       	brtc	.+8      	; 0xbb2 <__addsf3+0x28>
     baa:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <__fp_nan>
     bae:	0e f4       	brtc	.+2      	; 0xbb2 <__addsf3+0x28>
     bb0:	e0 95       	com	r30
     bb2:	e7 fb       	bst	r30, 7
     bb4:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <__fp_inf>

00000bb8 <__addsf3x>:
     bb8:	e9 2f       	mov	r30, r25
     bba:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__fp_split3>
     bbe:	58 f3       	brcs	.-42     	; 0xb96 <__addsf3+0xc>
     bc0:	ba 17       	cp	r27, r26
     bc2:	62 07       	cpc	r22, r18
     bc4:	73 07       	cpc	r23, r19
     bc6:	84 07       	cpc	r24, r20
     bc8:	95 07       	cpc	r25, r21
     bca:	20 f0       	brcs	.+8      	; 0xbd4 <__addsf3x+0x1c>
     bcc:	79 f4       	brne	.+30     	; 0xbec <__addsf3x+0x34>
     bce:	a6 f5       	brtc	.+104    	; 0xc38 <__addsf3x+0x80>
     bd0:	0c 94 60 07 	jmp	0xec0	; 0xec0 <__fp_zero>
     bd4:	0e f4       	brtc	.+2      	; 0xbd8 <__addsf3x+0x20>
     bd6:	e0 95       	com	r30
     bd8:	0b 2e       	mov	r0, r27
     bda:	ba 2f       	mov	r27, r26
     bdc:	a0 2d       	mov	r26, r0
     bde:	0b 01       	movw	r0, r22
     be0:	b9 01       	movw	r22, r18
     be2:	90 01       	movw	r18, r0
     be4:	0c 01       	movw	r0, r24
     be6:	ca 01       	movw	r24, r20
     be8:	a0 01       	movw	r20, r0
     bea:	11 24       	eor	r1, r1
     bec:	ff 27       	eor	r31, r31
     bee:	59 1b       	sub	r21, r25
     bf0:	99 f0       	breq	.+38     	; 0xc18 <__addsf3x+0x60>
     bf2:	59 3f       	cpi	r21, 0xF9	; 249
     bf4:	50 f4       	brcc	.+20     	; 0xc0a <__addsf3x+0x52>
     bf6:	50 3e       	cpi	r21, 0xE0	; 224
     bf8:	68 f1       	brcs	.+90     	; 0xc54 <__addsf3x+0x9c>
     bfa:	1a 16       	cp	r1, r26
     bfc:	f0 40       	sbci	r31, 0x00	; 0
     bfe:	a2 2f       	mov	r26, r18
     c00:	23 2f       	mov	r18, r19
     c02:	34 2f       	mov	r19, r20
     c04:	44 27       	eor	r20, r20
     c06:	58 5f       	subi	r21, 0xF8	; 248
     c08:	f3 cf       	rjmp	.-26     	; 0xbf0 <__addsf3x+0x38>
     c0a:	46 95       	lsr	r20
     c0c:	37 95       	ror	r19
     c0e:	27 95       	ror	r18
     c10:	a7 95       	ror	r26
     c12:	f0 40       	sbci	r31, 0x00	; 0
     c14:	53 95       	inc	r21
     c16:	c9 f7       	brne	.-14     	; 0xc0a <__addsf3x+0x52>
     c18:	7e f4       	brtc	.+30     	; 0xc38 <__addsf3x+0x80>
     c1a:	1f 16       	cp	r1, r31
     c1c:	ba 0b       	sbc	r27, r26
     c1e:	62 0b       	sbc	r22, r18
     c20:	73 0b       	sbc	r23, r19
     c22:	84 0b       	sbc	r24, r20
     c24:	ba f0       	brmi	.+46     	; 0xc54 <__addsf3x+0x9c>
     c26:	91 50       	subi	r25, 0x01	; 1
     c28:	a1 f0       	breq	.+40     	; 0xc52 <__addsf3x+0x9a>
     c2a:	ff 0f       	add	r31, r31
     c2c:	bb 1f       	adc	r27, r27
     c2e:	66 1f       	adc	r22, r22
     c30:	77 1f       	adc	r23, r23
     c32:	88 1f       	adc	r24, r24
     c34:	c2 f7       	brpl	.-16     	; 0xc26 <__addsf3x+0x6e>
     c36:	0e c0       	rjmp	.+28     	; 0xc54 <__addsf3x+0x9c>
     c38:	ba 0f       	add	r27, r26
     c3a:	62 1f       	adc	r22, r18
     c3c:	73 1f       	adc	r23, r19
     c3e:	84 1f       	adc	r24, r20
     c40:	48 f4       	brcc	.+18     	; 0xc54 <__addsf3x+0x9c>
     c42:	87 95       	ror	r24
     c44:	77 95       	ror	r23
     c46:	67 95       	ror	r22
     c48:	b7 95       	ror	r27
     c4a:	f7 95       	ror	r31
     c4c:	9e 3f       	cpi	r25, 0xFE	; 254
     c4e:	08 f0       	brcs	.+2      	; 0xc52 <__addsf3x+0x9a>
     c50:	b0 cf       	rjmp	.-160    	; 0xbb2 <__addsf3+0x28>
     c52:	93 95       	inc	r25
     c54:	88 0f       	add	r24, r24
     c56:	08 f0       	brcs	.+2      	; 0xc5a <__addsf3x+0xa2>
     c58:	99 27       	eor	r25, r25
     c5a:	ee 0f       	add	r30, r30
     c5c:	97 95       	ror	r25
     c5e:	87 95       	ror	r24
     c60:	08 95       	ret

00000c62 <__divsf3>:
     c62:	0e 94 45 06 	call	0xc8a	; 0xc8a <__divsf3x>
     c66:	0c 94 2d 07 	jmp	0xe5a	; 0xe5a <__fp_round>
     c6a:	0e 94 26 07 	call	0xe4c	; 0xe4c <__fp_pscB>
     c6e:	58 f0       	brcs	.+22     	; 0xc86 <__divsf3+0x24>
     c70:	0e 94 1f 07 	call	0xe3e	; 0xe3e <__fp_pscA>
     c74:	40 f0       	brcs	.+16     	; 0xc86 <__divsf3+0x24>
     c76:	29 f4       	brne	.+10     	; 0xc82 <__divsf3+0x20>
     c78:	5f 3f       	cpi	r21, 0xFF	; 255
     c7a:	29 f0       	breq	.+10     	; 0xc86 <__divsf3+0x24>
     c7c:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <__fp_inf>
     c80:	51 11       	cpse	r21, r1
     c82:	0c 94 61 07 	jmp	0xec2	; 0xec2 <__fp_szero>
     c86:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <__fp_nan>

00000c8a <__divsf3x>:
     c8a:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__fp_split3>
     c8e:	68 f3       	brcs	.-38     	; 0xc6a <__divsf3+0x8>

00000c90 <__divsf3_pse>:
     c90:	99 23       	and	r25, r25
     c92:	b1 f3       	breq	.-20     	; 0xc80 <__divsf3+0x1e>
     c94:	55 23       	and	r21, r21
     c96:	91 f3       	breq	.-28     	; 0xc7c <__divsf3+0x1a>
     c98:	95 1b       	sub	r25, r21
     c9a:	55 0b       	sbc	r21, r21
     c9c:	bb 27       	eor	r27, r27
     c9e:	aa 27       	eor	r26, r26
     ca0:	62 17       	cp	r22, r18
     ca2:	73 07       	cpc	r23, r19
     ca4:	84 07       	cpc	r24, r20
     ca6:	38 f0       	brcs	.+14     	; 0xcb6 <__divsf3_pse+0x26>
     ca8:	9f 5f       	subi	r25, 0xFF	; 255
     caa:	5f 4f       	sbci	r21, 0xFF	; 255
     cac:	22 0f       	add	r18, r18
     cae:	33 1f       	adc	r19, r19
     cb0:	44 1f       	adc	r20, r20
     cb2:	aa 1f       	adc	r26, r26
     cb4:	a9 f3       	breq	.-22     	; 0xca0 <__divsf3_pse+0x10>
     cb6:	35 d0       	rcall	.+106    	; 0xd22 <__divsf3_pse+0x92>
     cb8:	0e 2e       	mov	r0, r30
     cba:	3a f0       	brmi	.+14     	; 0xcca <__divsf3_pse+0x3a>
     cbc:	e0 e8       	ldi	r30, 0x80	; 128
     cbe:	32 d0       	rcall	.+100    	; 0xd24 <__divsf3_pse+0x94>
     cc0:	91 50       	subi	r25, 0x01	; 1
     cc2:	50 40       	sbci	r21, 0x00	; 0
     cc4:	e6 95       	lsr	r30
     cc6:	00 1c       	adc	r0, r0
     cc8:	ca f7       	brpl	.-14     	; 0xcbc <__divsf3_pse+0x2c>
     cca:	2b d0       	rcall	.+86     	; 0xd22 <__divsf3_pse+0x92>
     ccc:	fe 2f       	mov	r31, r30
     cce:	29 d0       	rcall	.+82     	; 0xd22 <__divsf3_pse+0x92>
     cd0:	66 0f       	add	r22, r22
     cd2:	77 1f       	adc	r23, r23
     cd4:	88 1f       	adc	r24, r24
     cd6:	bb 1f       	adc	r27, r27
     cd8:	26 17       	cp	r18, r22
     cda:	37 07       	cpc	r19, r23
     cdc:	48 07       	cpc	r20, r24
     cde:	ab 07       	cpc	r26, r27
     ce0:	b0 e8       	ldi	r27, 0x80	; 128
     ce2:	09 f0       	breq	.+2      	; 0xce6 <__divsf3_pse+0x56>
     ce4:	bb 0b       	sbc	r27, r27
     ce6:	80 2d       	mov	r24, r0
     ce8:	bf 01       	movw	r22, r30
     cea:	ff 27       	eor	r31, r31
     cec:	93 58       	subi	r25, 0x83	; 131
     cee:	5f 4f       	sbci	r21, 0xFF	; 255
     cf0:	3a f0       	brmi	.+14     	; 0xd00 <__divsf3_pse+0x70>
     cf2:	9e 3f       	cpi	r25, 0xFE	; 254
     cf4:	51 05       	cpc	r21, r1
     cf6:	78 f0       	brcs	.+30     	; 0xd16 <__divsf3_pse+0x86>
     cf8:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <__fp_inf>
     cfc:	0c 94 61 07 	jmp	0xec2	; 0xec2 <__fp_szero>
     d00:	5f 3f       	cpi	r21, 0xFF	; 255
     d02:	e4 f3       	brlt	.-8      	; 0xcfc <__divsf3_pse+0x6c>
     d04:	98 3e       	cpi	r25, 0xE8	; 232
     d06:	d4 f3       	brlt	.-12     	; 0xcfc <__divsf3_pse+0x6c>
     d08:	86 95       	lsr	r24
     d0a:	77 95       	ror	r23
     d0c:	67 95       	ror	r22
     d0e:	b7 95       	ror	r27
     d10:	f7 95       	ror	r31
     d12:	9f 5f       	subi	r25, 0xFF	; 255
     d14:	c9 f7       	brne	.-14     	; 0xd08 <__divsf3_pse+0x78>
     d16:	88 0f       	add	r24, r24
     d18:	91 1d       	adc	r25, r1
     d1a:	96 95       	lsr	r25
     d1c:	87 95       	ror	r24
     d1e:	97 f9       	bld	r25, 7
     d20:	08 95       	ret
     d22:	e1 e0       	ldi	r30, 0x01	; 1
     d24:	66 0f       	add	r22, r22
     d26:	77 1f       	adc	r23, r23
     d28:	88 1f       	adc	r24, r24
     d2a:	bb 1f       	adc	r27, r27
     d2c:	62 17       	cp	r22, r18
     d2e:	73 07       	cpc	r23, r19
     d30:	84 07       	cpc	r24, r20
     d32:	ba 07       	cpc	r27, r26
     d34:	20 f0       	brcs	.+8      	; 0xd3e <__divsf3_pse+0xae>
     d36:	62 1b       	sub	r22, r18
     d38:	73 0b       	sbc	r23, r19
     d3a:	84 0b       	sbc	r24, r20
     d3c:	ba 0b       	sbc	r27, r26
     d3e:	ee 1f       	adc	r30, r30
     d40:	88 f7       	brcc	.-30     	; 0xd24 <__divsf3_pse+0x94>
     d42:	e0 95       	com	r30
     d44:	08 95       	ret

00000d46 <__fixsfsi>:
     d46:	0e 94 aa 06 	call	0xd54	; 0xd54 <__fixunssfsi>
     d4a:	68 94       	set
     d4c:	b1 11       	cpse	r27, r1
     d4e:	0c 94 61 07 	jmp	0xec2	; 0xec2 <__fp_szero>
     d52:	08 95       	ret

00000d54 <__fixunssfsi>:
     d54:	0e 94 46 07 	call	0xe8c	; 0xe8c <__fp_splitA>
     d58:	88 f0       	brcs	.+34     	; 0xd7c <__fixunssfsi+0x28>
     d5a:	9f 57       	subi	r25, 0x7F	; 127
     d5c:	98 f0       	brcs	.+38     	; 0xd84 <__fixunssfsi+0x30>
     d5e:	b9 2f       	mov	r27, r25
     d60:	99 27       	eor	r25, r25
     d62:	b7 51       	subi	r27, 0x17	; 23
     d64:	b0 f0       	brcs	.+44     	; 0xd92 <__fixunssfsi+0x3e>
     d66:	e1 f0       	breq	.+56     	; 0xda0 <__fixunssfsi+0x4c>
     d68:	66 0f       	add	r22, r22
     d6a:	77 1f       	adc	r23, r23
     d6c:	88 1f       	adc	r24, r24
     d6e:	99 1f       	adc	r25, r25
     d70:	1a f0       	brmi	.+6      	; 0xd78 <__fixunssfsi+0x24>
     d72:	ba 95       	dec	r27
     d74:	c9 f7       	brne	.-14     	; 0xd68 <__fixunssfsi+0x14>
     d76:	14 c0       	rjmp	.+40     	; 0xda0 <__fixunssfsi+0x4c>
     d78:	b1 30       	cpi	r27, 0x01	; 1
     d7a:	91 f0       	breq	.+36     	; 0xda0 <__fixunssfsi+0x4c>
     d7c:	0e 94 60 07 	call	0xec0	; 0xec0 <__fp_zero>
     d80:	b1 e0       	ldi	r27, 0x01	; 1
     d82:	08 95       	ret
     d84:	0c 94 60 07 	jmp	0xec0	; 0xec0 <__fp_zero>
     d88:	67 2f       	mov	r22, r23
     d8a:	78 2f       	mov	r23, r24
     d8c:	88 27       	eor	r24, r24
     d8e:	b8 5f       	subi	r27, 0xF8	; 248
     d90:	39 f0       	breq	.+14     	; 0xda0 <__fixunssfsi+0x4c>
     d92:	b9 3f       	cpi	r27, 0xF9	; 249
     d94:	cc f3       	brlt	.-14     	; 0xd88 <__fixunssfsi+0x34>
     d96:	86 95       	lsr	r24
     d98:	77 95       	ror	r23
     d9a:	67 95       	ror	r22
     d9c:	b3 95       	inc	r27
     d9e:	d9 f7       	brne	.-10     	; 0xd96 <__fixunssfsi+0x42>
     da0:	3e f4       	brtc	.+14     	; 0xdb0 <__fixunssfsi+0x5c>
     da2:	90 95       	com	r25
     da4:	80 95       	com	r24
     da6:	70 95       	com	r23
     da8:	61 95       	neg	r22
     daa:	7f 4f       	sbci	r23, 0xFF	; 255
     dac:	8f 4f       	sbci	r24, 0xFF	; 255
     dae:	9f 4f       	sbci	r25, 0xFF	; 255
     db0:	08 95       	ret

00000db2 <__floatunsisf>:
     db2:	e8 94       	clt
     db4:	09 c0       	rjmp	.+18     	; 0xdc8 <__floatsisf+0x12>

00000db6 <__floatsisf>:
     db6:	97 fb       	bst	r25, 7
     db8:	3e f4       	brtc	.+14     	; 0xdc8 <__floatsisf+0x12>
     dba:	90 95       	com	r25
     dbc:	80 95       	com	r24
     dbe:	70 95       	com	r23
     dc0:	61 95       	neg	r22
     dc2:	7f 4f       	sbci	r23, 0xFF	; 255
     dc4:	8f 4f       	sbci	r24, 0xFF	; 255
     dc6:	9f 4f       	sbci	r25, 0xFF	; 255
     dc8:	99 23       	and	r25, r25
     dca:	a9 f0       	breq	.+42     	; 0xdf6 <__floatsisf+0x40>
     dcc:	f9 2f       	mov	r31, r25
     dce:	96 e9       	ldi	r25, 0x96	; 150
     dd0:	bb 27       	eor	r27, r27
     dd2:	93 95       	inc	r25
     dd4:	f6 95       	lsr	r31
     dd6:	87 95       	ror	r24
     dd8:	77 95       	ror	r23
     dda:	67 95       	ror	r22
     ddc:	b7 95       	ror	r27
     dde:	f1 11       	cpse	r31, r1
     de0:	f8 cf       	rjmp	.-16     	; 0xdd2 <__floatsisf+0x1c>
     de2:	fa f4       	brpl	.+62     	; 0xe22 <__floatsisf+0x6c>
     de4:	bb 0f       	add	r27, r27
     de6:	11 f4       	brne	.+4      	; 0xdec <__floatsisf+0x36>
     de8:	60 ff       	sbrs	r22, 0
     dea:	1b c0       	rjmp	.+54     	; 0xe22 <__floatsisf+0x6c>
     dec:	6f 5f       	subi	r22, 0xFF	; 255
     dee:	7f 4f       	sbci	r23, 0xFF	; 255
     df0:	8f 4f       	sbci	r24, 0xFF	; 255
     df2:	9f 4f       	sbci	r25, 0xFF	; 255
     df4:	16 c0       	rjmp	.+44     	; 0xe22 <__floatsisf+0x6c>
     df6:	88 23       	and	r24, r24
     df8:	11 f0       	breq	.+4      	; 0xdfe <__floatsisf+0x48>
     dfa:	96 e9       	ldi	r25, 0x96	; 150
     dfc:	11 c0       	rjmp	.+34     	; 0xe20 <__floatsisf+0x6a>
     dfe:	77 23       	and	r23, r23
     e00:	21 f0       	breq	.+8      	; 0xe0a <__floatsisf+0x54>
     e02:	9e e8       	ldi	r25, 0x8E	; 142
     e04:	87 2f       	mov	r24, r23
     e06:	76 2f       	mov	r23, r22
     e08:	05 c0       	rjmp	.+10     	; 0xe14 <__floatsisf+0x5e>
     e0a:	66 23       	and	r22, r22
     e0c:	71 f0       	breq	.+28     	; 0xe2a <__floatsisf+0x74>
     e0e:	96 e8       	ldi	r25, 0x86	; 134
     e10:	86 2f       	mov	r24, r22
     e12:	70 e0       	ldi	r23, 0x00	; 0
     e14:	60 e0       	ldi	r22, 0x00	; 0
     e16:	2a f0       	brmi	.+10     	; 0xe22 <__floatsisf+0x6c>
     e18:	9a 95       	dec	r25
     e1a:	66 0f       	add	r22, r22
     e1c:	77 1f       	adc	r23, r23
     e1e:	88 1f       	adc	r24, r24
     e20:	da f7       	brpl	.-10     	; 0xe18 <__floatsisf+0x62>
     e22:	88 0f       	add	r24, r24
     e24:	96 95       	lsr	r25
     e26:	87 95       	ror	r24
     e28:	97 f9       	bld	r25, 7
     e2a:	08 95       	ret

00000e2c <__fp_inf>:
     e2c:	97 f9       	bld	r25, 7
     e2e:	9f 67       	ori	r25, 0x7F	; 127
     e30:	80 e8       	ldi	r24, 0x80	; 128
     e32:	70 e0       	ldi	r23, 0x00	; 0
     e34:	60 e0       	ldi	r22, 0x00	; 0
     e36:	08 95       	ret

00000e38 <__fp_nan>:
     e38:	9f ef       	ldi	r25, 0xFF	; 255
     e3a:	80 ec       	ldi	r24, 0xC0	; 192
     e3c:	08 95       	ret

00000e3e <__fp_pscA>:
     e3e:	00 24       	eor	r0, r0
     e40:	0a 94       	dec	r0
     e42:	16 16       	cp	r1, r22
     e44:	17 06       	cpc	r1, r23
     e46:	18 06       	cpc	r1, r24
     e48:	09 06       	cpc	r0, r25
     e4a:	08 95       	ret

00000e4c <__fp_pscB>:
     e4c:	00 24       	eor	r0, r0
     e4e:	0a 94       	dec	r0
     e50:	12 16       	cp	r1, r18
     e52:	13 06       	cpc	r1, r19
     e54:	14 06       	cpc	r1, r20
     e56:	05 06       	cpc	r0, r21
     e58:	08 95       	ret

00000e5a <__fp_round>:
     e5a:	09 2e       	mov	r0, r25
     e5c:	03 94       	inc	r0
     e5e:	00 0c       	add	r0, r0
     e60:	11 f4       	brne	.+4      	; 0xe66 <__fp_round+0xc>
     e62:	88 23       	and	r24, r24
     e64:	52 f0       	brmi	.+20     	; 0xe7a <__fp_round+0x20>
     e66:	bb 0f       	add	r27, r27
     e68:	40 f4       	brcc	.+16     	; 0xe7a <__fp_round+0x20>
     e6a:	bf 2b       	or	r27, r31
     e6c:	11 f4       	brne	.+4      	; 0xe72 <__fp_round+0x18>
     e6e:	60 ff       	sbrs	r22, 0
     e70:	04 c0       	rjmp	.+8      	; 0xe7a <__fp_round+0x20>
     e72:	6f 5f       	subi	r22, 0xFF	; 255
     e74:	7f 4f       	sbci	r23, 0xFF	; 255
     e76:	8f 4f       	sbci	r24, 0xFF	; 255
     e78:	9f 4f       	sbci	r25, 0xFF	; 255
     e7a:	08 95       	ret

00000e7c <__fp_split3>:
     e7c:	57 fd       	sbrc	r21, 7
     e7e:	90 58       	subi	r25, 0x80	; 128
     e80:	44 0f       	add	r20, r20
     e82:	55 1f       	adc	r21, r21
     e84:	59 f0       	breq	.+22     	; 0xe9c <__fp_splitA+0x10>
     e86:	5f 3f       	cpi	r21, 0xFF	; 255
     e88:	71 f0       	breq	.+28     	; 0xea6 <__fp_splitA+0x1a>
     e8a:	47 95       	ror	r20

00000e8c <__fp_splitA>:
     e8c:	88 0f       	add	r24, r24
     e8e:	97 fb       	bst	r25, 7
     e90:	99 1f       	adc	r25, r25
     e92:	61 f0       	breq	.+24     	; 0xeac <__fp_splitA+0x20>
     e94:	9f 3f       	cpi	r25, 0xFF	; 255
     e96:	79 f0       	breq	.+30     	; 0xeb6 <__fp_splitA+0x2a>
     e98:	87 95       	ror	r24
     e9a:	08 95       	ret
     e9c:	12 16       	cp	r1, r18
     e9e:	13 06       	cpc	r1, r19
     ea0:	14 06       	cpc	r1, r20
     ea2:	55 1f       	adc	r21, r21
     ea4:	f2 cf       	rjmp	.-28     	; 0xe8a <__fp_split3+0xe>
     ea6:	46 95       	lsr	r20
     ea8:	f1 df       	rcall	.-30     	; 0xe8c <__fp_splitA>
     eaa:	08 c0       	rjmp	.+16     	; 0xebc <__fp_splitA+0x30>
     eac:	16 16       	cp	r1, r22
     eae:	17 06       	cpc	r1, r23
     eb0:	18 06       	cpc	r1, r24
     eb2:	99 1f       	adc	r25, r25
     eb4:	f1 cf       	rjmp	.-30     	; 0xe98 <__fp_splitA+0xc>
     eb6:	86 95       	lsr	r24
     eb8:	71 05       	cpc	r23, r1
     eba:	61 05       	cpc	r22, r1
     ebc:	08 94       	sec
     ebe:	08 95       	ret

00000ec0 <__fp_zero>:
     ec0:	e8 94       	clt

00000ec2 <__fp_szero>:
     ec2:	bb 27       	eor	r27, r27
     ec4:	66 27       	eor	r22, r22
     ec6:	77 27       	eor	r23, r23
     ec8:	cb 01       	movw	r24, r22
     eca:	97 f9       	bld	r25, 7
     ecc:	08 95       	ret

00000ece <__mulsf3>:
     ece:	0e 94 7a 07 	call	0xef4	; 0xef4 <__mulsf3x>
     ed2:	0c 94 2d 07 	jmp	0xe5a	; 0xe5a <__fp_round>
     ed6:	0e 94 1f 07 	call	0xe3e	; 0xe3e <__fp_pscA>
     eda:	38 f0       	brcs	.+14     	; 0xeea <__mulsf3+0x1c>
     edc:	0e 94 26 07 	call	0xe4c	; 0xe4c <__fp_pscB>
     ee0:	20 f0       	brcs	.+8      	; 0xeea <__mulsf3+0x1c>
     ee2:	95 23       	and	r25, r21
     ee4:	11 f0       	breq	.+4      	; 0xeea <__mulsf3+0x1c>
     ee6:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <__fp_inf>
     eea:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <__fp_nan>
     eee:	11 24       	eor	r1, r1
     ef0:	0c 94 61 07 	jmp	0xec2	; 0xec2 <__fp_szero>

00000ef4 <__mulsf3x>:
     ef4:	0e 94 3e 07 	call	0xe7c	; 0xe7c <__fp_split3>
     ef8:	70 f3       	brcs	.-36     	; 0xed6 <__mulsf3+0x8>

00000efa <__mulsf3_pse>:
     efa:	95 9f       	mul	r25, r21
     efc:	c1 f3       	breq	.-16     	; 0xeee <__mulsf3+0x20>
     efe:	95 0f       	add	r25, r21
     f00:	50 e0       	ldi	r21, 0x00	; 0
     f02:	55 1f       	adc	r21, r21
     f04:	62 9f       	mul	r22, r18
     f06:	f0 01       	movw	r30, r0
     f08:	72 9f       	mul	r23, r18
     f0a:	bb 27       	eor	r27, r27
     f0c:	f0 0d       	add	r31, r0
     f0e:	b1 1d       	adc	r27, r1
     f10:	63 9f       	mul	r22, r19
     f12:	aa 27       	eor	r26, r26
     f14:	f0 0d       	add	r31, r0
     f16:	b1 1d       	adc	r27, r1
     f18:	aa 1f       	adc	r26, r26
     f1a:	64 9f       	mul	r22, r20
     f1c:	66 27       	eor	r22, r22
     f1e:	b0 0d       	add	r27, r0
     f20:	a1 1d       	adc	r26, r1
     f22:	66 1f       	adc	r22, r22
     f24:	82 9f       	mul	r24, r18
     f26:	22 27       	eor	r18, r18
     f28:	b0 0d       	add	r27, r0
     f2a:	a1 1d       	adc	r26, r1
     f2c:	62 1f       	adc	r22, r18
     f2e:	73 9f       	mul	r23, r19
     f30:	b0 0d       	add	r27, r0
     f32:	a1 1d       	adc	r26, r1
     f34:	62 1f       	adc	r22, r18
     f36:	83 9f       	mul	r24, r19
     f38:	a0 0d       	add	r26, r0
     f3a:	61 1d       	adc	r22, r1
     f3c:	22 1f       	adc	r18, r18
     f3e:	74 9f       	mul	r23, r20
     f40:	33 27       	eor	r19, r19
     f42:	a0 0d       	add	r26, r0
     f44:	61 1d       	adc	r22, r1
     f46:	23 1f       	adc	r18, r19
     f48:	84 9f       	mul	r24, r20
     f4a:	60 0d       	add	r22, r0
     f4c:	21 1d       	adc	r18, r1
     f4e:	82 2f       	mov	r24, r18
     f50:	76 2f       	mov	r23, r22
     f52:	6a 2f       	mov	r22, r26
     f54:	11 24       	eor	r1, r1
     f56:	9f 57       	subi	r25, 0x7F	; 127
     f58:	50 40       	sbci	r21, 0x00	; 0
     f5a:	9a f0       	brmi	.+38     	; 0xf82 <__mulsf3_pse+0x88>
     f5c:	f1 f0       	breq	.+60     	; 0xf9a <__mulsf3_pse+0xa0>
     f5e:	88 23       	and	r24, r24
     f60:	4a f0       	brmi	.+18     	; 0xf74 <__mulsf3_pse+0x7a>
     f62:	ee 0f       	add	r30, r30
     f64:	ff 1f       	adc	r31, r31
     f66:	bb 1f       	adc	r27, r27
     f68:	66 1f       	adc	r22, r22
     f6a:	77 1f       	adc	r23, r23
     f6c:	88 1f       	adc	r24, r24
     f6e:	91 50       	subi	r25, 0x01	; 1
     f70:	50 40       	sbci	r21, 0x00	; 0
     f72:	a9 f7       	brne	.-22     	; 0xf5e <__mulsf3_pse+0x64>
     f74:	9e 3f       	cpi	r25, 0xFE	; 254
     f76:	51 05       	cpc	r21, r1
     f78:	80 f0       	brcs	.+32     	; 0xf9a <__mulsf3_pse+0xa0>
     f7a:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <__fp_inf>
     f7e:	0c 94 61 07 	jmp	0xec2	; 0xec2 <__fp_szero>
     f82:	5f 3f       	cpi	r21, 0xFF	; 255
     f84:	e4 f3       	brlt	.-8      	; 0xf7e <__mulsf3_pse+0x84>
     f86:	98 3e       	cpi	r25, 0xE8	; 232
     f88:	d4 f3       	brlt	.-12     	; 0xf7e <__mulsf3_pse+0x84>
     f8a:	86 95       	lsr	r24
     f8c:	77 95       	ror	r23
     f8e:	67 95       	ror	r22
     f90:	b7 95       	ror	r27
     f92:	f7 95       	ror	r31
     f94:	e7 95       	ror	r30
     f96:	9f 5f       	subi	r25, 0xFF	; 255
     f98:	c1 f7       	brne	.-16     	; 0xf8a <__mulsf3_pse+0x90>
     f9a:	fe 2b       	or	r31, r30
     f9c:	88 0f       	add	r24, r24
     f9e:	91 1d       	adc	r25, r1
     fa0:	96 95       	lsr	r25
     fa2:	87 95       	ror	r24
     fa4:	97 f9       	bld	r25, 7
     fa6:	08 95       	ret

00000fa8 <_ZN15OrangutanAnalog7setModeEh.part.0>:
     fa8:	ec e7       	ldi	r30, 0x7C	; 124
     faa:	f0 e0       	ldi	r31, 0x00	; 0
     fac:	80 81       	ld	r24, Z
     fae:	8f 7d       	andi	r24, 0xDF	; 223
     fb0:	80 83       	st	Z, r24
     fb2:	08 95       	ret

00000fb4 <_ZN15OrangutanAnalog7setModeEh>:
     fb4:	81 11       	cpse	r24, r1
     fb6:	03 c0       	rjmp	.+6      	; 0xfbe <_ZN15OrangutanAnalog7setModeEh+0xa>
     fb8:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <_ZN15OrangutanAnalog7setModeEh.part.0>
     fbc:	08 95       	ret
     fbe:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     fc2:	80 62       	ori	r24, 0x20	; 32
     fc4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     fc8:	08 95       	ret

00000fca <_ZN15OrangutanAnalog7getModeEv>:
     fca:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     fce:	85 fb       	bst	r24, 5
     fd0:	88 27       	eor	r24, r24
     fd2:	80 f9       	bld	r24, 0
     fd4:	08 95       	ret

00000fd6 <_ZN15OrangutanAnalog16conversionResultEv>:
     fd6:	0e 94 e5 07 	call	0xfca	; 0xfca <_ZN15OrangutanAnalog7getModeEv>
     fda:	88 23       	and	r24, r24
     fdc:	21 f0       	breq	.+8      	; 0xfe6 <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     fde:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	08 95       	ret
     fe6:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     fea:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     fee:	08 95       	ret

00000ff0 <_ZN15OrangutanAnalog15startConversionEhh>:
     ff0:	80 32       	cpi	r24, 0x20	; 32
     ff2:	a0 f4       	brcc	.+40     	; 0x101c <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
     ff4:	97 e8       	ldi	r25, 0x87	; 135
     ff6:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     ffa:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     ffe:	66 23       	and	r22, r22
    1000:	11 f0       	breq	.+4      	; 0x1006 <_ZN15OrangutanAnalog15startConversionEhh+0x16>
    1002:	90 6c       	ori	r25, 0xC0	; 192
    1004:	02 c0       	rjmp	.+4      	; 0x100a <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
    1006:	9f 77       	andi	r25, 0x7F	; 127
    1008:	90 64       	ori	r25, 0x40	; 64
    100a:	90 7e       	andi	r25, 0xE0	; 224
    100c:	98 2b       	or	r25, r24
    100e:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1012:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1016:	80 64       	ori	r24, 0x40	; 64
    1018:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    101c:	08 95       	ret

0000101e <_ZN15OrangutanAnalog11readAverageEhj>:
    101e:	a0 e0       	ldi	r26, 0x00	; 0
    1020:	b0 e0       	ldi	r27, 0x00	; 0
    1022:	e5 e1       	ldi	r30, 0x15	; 21
    1024:	f8 e0       	ldi	r31, 0x08	; 8
    1026:	0c 94 88 11 	jmp	0x2310	; 0x2310 <__prologue_saves__+0x14>
    102a:	eb 01       	movw	r28, r22
    102c:	60 e0       	ldi	r22, 0x00	; 0
    102e:	0e 94 f8 07 	call	0xff0	; 0xff0 <_ZN15OrangutanAnalog15startConversionEhh>
    1032:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1036:	86 fd       	sbrc	r24, 6
    1038:	fc cf       	rjmp	.-8      	; 0x1032 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
    103a:	8e 01       	movw	r16, r28
    103c:	c1 2c       	mov	r12, r1
    103e:	d1 2c       	mov	r13, r1
    1040:	76 01       	movw	r14, r12
    1042:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1046:	80 64       	ori	r24, 0x40	; 64
    1048:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    104c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1050:	86 fd       	sbrc	r24, 6
    1052:	fc cf       	rjmp	.-8      	; 0x104c <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
    1054:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <_ZN15OrangutanAnalog16conversionResultEv>
    1058:	c8 0e       	add	r12, r24
    105a:	d9 1e       	adc	r13, r25
    105c:	e1 1c       	adc	r14, r1
    105e:	f1 1c       	adc	r15, r1
    1060:	01 50       	subi	r16, 0x01	; 1
    1062:	11 09       	sbc	r17, r1
    1064:	01 15       	cp	r16, r1
    1066:	11 05       	cpc	r17, r1
    1068:	61 f7       	brne	.-40     	; 0x1042 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
    106a:	ce 01       	movw	r24, r28
    106c:	96 95       	lsr	r25
    106e:	87 95       	ror	r24
    1070:	c0 34       	cpi	r28, 0x40	; 64
    1072:	d1 05       	cpc	r29, r1
    1074:	38 f4       	brcc	.+14     	; 0x1084 <_ZN15OrangutanAnalog11readAverageEhj+0x66>
    1076:	8c 0d       	add	r24, r12
    1078:	9d 1d       	adc	r25, r13
    107a:	be 01       	movw	r22, r28
    107c:	0e 94 01 11 	call	0x2202	; 0x2202 <__udivmodhi4>
    1080:	cb 01       	movw	r24, r22
    1082:	0e c0       	rjmp	.+28     	; 0x10a0 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
    1084:	a7 01       	movw	r20, r14
    1086:	96 01       	movw	r18, r12
    1088:	28 0f       	add	r18, r24
    108a:	39 1f       	adc	r19, r25
    108c:	41 1d       	adc	r20, r1
    108e:	51 1d       	adc	r21, r1
    1090:	ca 01       	movw	r24, r20
    1092:	b9 01       	movw	r22, r18
    1094:	9e 01       	movw	r18, r28
    1096:	40 e0       	ldi	r20, 0x00	; 0
    1098:	50 e0       	ldi	r21, 0x00	; 0
    109a:	0e 94 15 11 	call	0x222a	; 0x222a <__udivmodsi4>
    109e:	c9 01       	movw	r24, r18
    10a0:	cd b7       	in	r28, 0x3d	; 61
    10a2:	de b7       	in	r29, 0x3e	; 62
    10a4:	e8 e0       	ldi	r30, 0x08	; 8
    10a6:	0c 94 a4 11 	jmp	0x2348	; 0x2348 <__epilogue_restores__+0x14>

000010aa <_ZN15OrangutanAnalog12toMillivoltsEj>:
    10aa:	cf 92       	push	r12
    10ac:	df 92       	push	r13
    10ae:	ef 92       	push	r14
    10b0:	ff 92       	push	r15
    10b2:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    10b6:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    10ba:	9c 01       	movw	r18, r24
    10bc:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <__umulhisi3>
    10c0:	6b 01       	movw	r12, r22
    10c2:	7c 01       	movw	r14, r24
    10c4:	0e 94 e5 07 	call	0xfca	; 0xfca <_ZN15OrangutanAnalog7getModeEv>
    10c8:	88 23       	and	r24, r24
    10ca:	59 f0       	breq	.+22     	; 0x10e2 <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
    10cc:	c7 01       	movw	r24, r14
    10ce:	b6 01       	movw	r22, r12
    10d0:	61 58       	subi	r22, 0x81	; 129
    10d2:	7f 4f       	sbci	r23, 0xFF	; 255
    10d4:	8f 4f       	sbci	r24, 0xFF	; 255
    10d6:	9f 4f       	sbci	r25, 0xFF	; 255
    10d8:	2f ef       	ldi	r18, 0xFF	; 255
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	40 e0       	ldi	r20, 0x00	; 0
    10de:	50 e0       	ldi	r21, 0x00	; 0
    10e0:	0a c0       	rjmp	.+20     	; 0x10f6 <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
    10e2:	c7 01       	movw	r24, r14
    10e4:	b6 01       	movw	r22, r12
    10e6:	61 50       	subi	r22, 0x01	; 1
    10e8:	7e 4f       	sbci	r23, 0xFE	; 254
    10ea:	8f 4f       	sbci	r24, 0xFF	; 255
    10ec:	9f 4f       	sbci	r25, 0xFF	; 255
    10ee:	2f ef       	ldi	r18, 0xFF	; 255
    10f0:	33 e0       	ldi	r19, 0x03	; 3
    10f2:	40 e0       	ldi	r20, 0x00	; 0
    10f4:	50 e0       	ldi	r21, 0x00	; 0
    10f6:	0e 94 15 11 	call	0x222a	; 0x222a <__udivmodsi4>
    10fa:	c9 01       	movw	r24, r18
    10fc:	ff 90       	pop	r15
    10fe:	ef 90       	pop	r14
    1100:	df 90       	pop	r13
    1102:	cf 90       	pop	r12
    1104:	08 95       	ret

00001106 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
    1106:	0e 94 0f 08 	call	0x101e	; 0x101e <_ZN15OrangutanAnalog11readAverageEhj>
    110a:	0e 94 55 08 	call	0x10aa	; 0x10aa <_ZN15OrangutanAnalog12toMillivoltsEj>
    110e:	08 95       	ret

00001110 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
    1110:	1f 93       	push	r17
    1112:	cf 93       	push	r28
    1114:	df 93       	push	r29
    1116:	0e 94 e5 07 	call	0xfca	; 0xfca <_ZN15OrangutanAnalog7getModeEv>
    111a:	18 2f       	mov	r17, r24
    111c:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <_ZN15OrangutanAnalog7setModeEh.part.0>
    1120:	6a e0       	ldi	r22, 0x0A	; 10
    1122:	70 e0       	ldi	r23, 0x00	; 0
    1124:	86 e0       	ldi	r24, 0x06	; 6
    1126:	0e 94 83 08 	call	0x1106	; 0x1106 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
    112a:	ec 01       	movw	r28, r24
    112c:	81 2f       	mov	r24, r17
    112e:	0e 94 da 07 	call	0xfb4	; 0xfb4 <_ZN15OrangutanAnalog7setModeEh>
    1132:	ce 01       	movw	r24, r28
    1134:	88 0f       	add	r24, r24
    1136:	99 1f       	adc	r25, r25
    1138:	8c 0f       	add	r24, r28
    113a:	9d 1f       	adc	r25, r29
    113c:	01 96       	adiw	r24, 0x01	; 1
    113e:	96 95       	lsr	r25
    1140:	87 95       	ror	r24
    1142:	df 91       	pop	r29
    1144:	cf 91       	pop	r28
    1146:	1f 91       	pop	r17
    1148:	08 95       	ret

0000114a <read_battery_millivolts_3pi>:
    114a:	0e 94 88 08 	call	0x1110	; 0x1110 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
    114e:	08 95       	ret

00001150 <delay_us.constprop.0>:
    1150:	81 e0       	ldi	r24, 0x01	; 1
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	6f 93       	push	r22
    1156:	64 e0       	ldi	r22, 0x04	; 4
    1158:	6a 95       	dec	r22
    115a:	f1 f7       	brne	.-4      	; 0x1158 <delay_us.constprop.0+0x8>
    115c:	6f 91       	pop	r22
    115e:	01 97       	sbiw	r24, 0x01	; 1
    1160:	c9 f7       	brne	.-14     	; 0x1154 <delay_us.constprop.0+0x4>
    1162:	08 95       	ret

00001164 <_ZN12OrangutanLCD8busyWaitEv>:
    1164:	0f 93       	push	r16
    1166:	1f 93       	push	r17
    1168:	cf 93       	push	r28
    116a:	df 93       	push	r29
    116c:	1a b1       	in	r17, 0x0a	; 10
    116e:	57 98       	cbi	0x0a, 7	; 10
    1170:	5a 98       	cbi	0x0b, 2	; 11
    1172:	28 9a       	sbi	0x05, 0	; 5
    1174:	c0 e0       	ldi	r28, 0x00	; 0
    1176:	d0 e0       	ldi	r29, 0x00	; 0
    1178:	0e 94 a8 08 	call	0x1150	; 0x1150 <delay_us.constprop.0>
    117c:	5c 9a       	sbi	0x0b, 4	; 11
    117e:	0e 94 a8 08 	call	0x1150	; 0x1150 <delay_us.constprop.0>
    1182:	09 b1       	in	r16, 0x09	; 9
    1184:	5c 98       	cbi	0x0b, 4	; 11
    1186:	0e 94 a8 08 	call	0x1150	; 0x1150 <delay_us.constprop.0>
    118a:	5c 9a       	sbi	0x0b, 4	; 11
    118c:	0e 94 a8 08 	call	0x1150	; 0x1150 <delay_us.constprop.0>
    1190:	5c 98       	cbi	0x0b, 4	; 11
    1192:	24 96       	adiw	r28, 0x04	; 4
    1194:	07 ff       	sbrs	r16, 7
    1196:	10 c0       	rjmp	.+32     	; 0x11b8 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    1198:	ae 01       	movw	r20, r28
    119a:	60 e0       	ldi	r22, 0x00	; 0
    119c:	70 e0       	ldi	r23, 0x00	; 0
    119e:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
    11a2:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <__data_end+0x1>
    11a6:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <__data_end+0x2>
    11aa:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <__data_end+0x3>
    11ae:	48 17       	cp	r20, r24
    11b0:	59 07       	cpc	r21, r25
    11b2:	6a 07       	cpc	r22, r26
    11b4:	7b 07       	cpc	r23, r27
    11b6:	00 f3       	brcs	.-64     	; 0x1178 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    11b8:	1a b9       	out	0x0a, r17	; 10
    11ba:	df 91       	pop	r29
    11bc:	cf 91       	pop	r28
    11be:	1f 91       	pop	r17
    11c0:	0f 91       	pop	r16
    11c2:	08 95       	ret

000011c4 <_ZN12OrangutanLCD8sendDataEh>:
    11c4:	95 b1       	in	r25, 0x05	; 5
    11c6:	28 2f       	mov	r18, r24
    11c8:	21 70       	andi	r18, 0x01	; 1
    11ca:	30 e0       	ldi	r19, 0x00	; 0
    11cc:	22 0f       	add	r18, r18
    11ce:	33 1f       	adc	r19, r19
    11d0:	48 2f       	mov	r20, r24
    11d2:	46 70       	andi	r20, 0x06	; 6
    11d4:	68 e0       	ldi	r22, 0x08	; 8
    11d6:	46 9f       	mul	r20, r22
    11d8:	a0 01       	movw	r20, r0
    11da:	11 24       	eor	r1, r1
    11dc:	24 2b       	or	r18, r20
    11de:	9d 7c       	andi	r25, 0xCD	; 205
    11e0:	29 2b       	or	r18, r25
    11e2:	25 b9       	out	0x05, r18	; 5
    11e4:	9b b1       	in	r25, 0x0b	; 11
    11e6:	88 70       	andi	r24, 0x08	; 8
    11e8:	82 95       	swap	r24
    11ea:	80 7f       	andi	r24, 0xF0	; 240
    11ec:	9f 77       	andi	r25, 0x7F	; 127
    11ee:	89 2b       	or	r24, r25
    11f0:	8b b9       	out	0x0b, r24	; 11
    11f2:	5c 9a       	sbi	0x0b, 4	; 11
    11f4:	0e 94 a8 08 	call	0x1150	; 0x1150 <delay_us.constprop.0>
    11f8:	5c 98       	cbi	0x0b, 4	; 11
    11fa:	0e 94 a8 08 	call	0x1150	; 0x1150 <delay_us.constprop.0>
    11fe:	08 95       	ret

00001200 <_ZN12OrangutanLCD4sendEhhh>:
    1200:	a0 e0       	ldi	r26, 0x00	; 0
    1202:	b0 e0       	ldi	r27, 0x00	; 0
    1204:	e6 e0       	ldi	r30, 0x06	; 6
    1206:	f9 e0       	ldi	r31, 0x09	; 9
    1208:	0c 94 89 11 	jmp	0x2312	; 0x2312 <__prologue_saves__+0x16>
    120c:	c8 2f       	mov	r28, r24
    120e:	d6 2e       	mov	r13, r22
    1210:	e4 2e       	mov	r14, r20
    1212:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <_ZZN12OrangutanLCD4initEvE11initialized>
    1216:	81 11       	cpse	r24, r1
    1218:	05 c0       	rjmp	.+10     	; 0x1224 <_ZN12OrangutanLCD4sendEhhh+0x24>
    121a:	81 e0       	ldi	r24, 0x01	; 1
    121c:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <_ZZN12OrangutanLCD4initEvE11initialized>
    1220:	0e 94 46 09 	call	0x128c	; 0x128c <_ZN12OrangutanLCD5init2Ev>
    1224:	0e 94 b2 08 	call	0x1164	; 0x1164 <_ZN12OrangutanLCD8busyWaitEv>
    1228:	14 b1       	in	r17, 0x04	; 4
    122a:	d5 b1       	in	r29, 0x05	; 5
    122c:	fa b0       	in	r15, 0x0a	; 10
    122e:	0b b1       	in	r16, 0x0b	; 11
    1230:	28 98       	cbi	0x05, 0	; 5
    1232:	dd 20       	and	r13, r13
    1234:	11 f0       	breq	.+4      	; 0x123a <_ZN12OrangutanLCD4sendEhhh+0x3a>
    1236:	5a 9a       	sbi	0x0b, 2	; 11
    1238:	01 c0       	rjmp	.+2      	; 0x123c <_ZN12OrangutanLCD4sendEhhh+0x3c>
    123a:	5a 98       	cbi	0x0b, 2	; 11
    123c:	94 b1       	in	r25, 0x04	; 4
    123e:	92 63       	ori	r25, 0x32	; 50
    1240:	94 b9       	out	0x04, r25	; 4
    1242:	57 9a       	sbi	0x0a, 7	; 10
    1244:	81 e0       	ldi	r24, 0x01	; 1
    1246:	e8 16       	cp	r14, r24
    1248:	29 f0       	breq	.+10     	; 0x1254 <_ZN12OrangutanLCD4sendEhhh+0x54>
    124a:	8c 2f       	mov	r24, r28
    124c:	82 95       	swap	r24
    124e:	8f 70       	andi	r24, 0x0F	; 15
    1250:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <_ZN12OrangutanLCD8sendDataEh>
    1254:	8c 2f       	mov	r24, r28
    1256:	8f 70       	andi	r24, 0x0F	; 15
    1258:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <_ZN12OrangutanLCD8sendDataEh>
    125c:	fa b8       	out	0x0a, r15	; 10
    125e:	0b b9       	out	0x0b, r16	; 11
    1260:	14 b9       	out	0x04, r17	; 4
    1262:	d5 b9       	out	0x05, r29	; 5
    1264:	cd b7       	in	r28, 0x3d	; 61
    1266:	de b7       	in	r29, 0x3e	; 62
    1268:	e7 e0       	ldi	r30, 0x07	; 7
    126a:	0c 94 a5 11 	jmp	0x234a	; 0x234a <__epilogue_restores__+0x16>

0000126e <_ZN12OrangutanLCD8send_cmdEh>:
    126e:	42 e0       	ldi	r20, 0x02	; 2
    1270:	60 e0       	ldi	r22, 0x00	; 0
    1272:	0e 94 00 09 	call	0x1200	; 0x1200 <_ZN12OrangutanLCD4sendEhhh>
    1276:	08 95       	ret

00001278 <_ZN12OrangutanLCD9send_dataEh>:
    1278:	42 e0       	ldi	r20, 0x02	; 2
    127a:	61 e0       	ldi	r22, 0x01	; 1
    127c:	0e 94 00 09 	call	0x1200	; 0x1200 <_ZN12OrangutanLCD4sendEhhh>
    1280:	08 95       	ret

00001282 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    1282:	41 e0       	ldi	r20, 0x01	; 1
    1284:	60 e0       	ldi	r22, 0x00	; 0
    1286:	0e 94 00 09 	call	0x1200	; 0x1200 <_ZN12OrangutanLCD4sendEhhh>
    128a:	08 95       	ret

0000128c <_ZN12OrangutanLCD5init2Ev>:
    128c:	80 e1       	ldi	r24, 0x10	; 16
    128e:	97 e2       	ldi	r25, 0x27	; 39
    1290:	a0 e0       	ldi	r26, 0x00	; 0
    1292:	b0 e0       	ldi	r27, 0x00	; 0
    1294:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
    1298:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <__data_end+0x1>
    129c:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <__data_end+0x2>
    12a0:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <__data_end+0x3>
    12a4:	52 9a       	sbi	0x0a, 2	; 10
    12a6:	20 9a       	sbi	0x04, 0	; 4
    12a8:	54 9a       	sbi	0x0a, 4	; 10
    12aa:	8e e1       	ldi	r24, 0x1E	; 30
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <delay_ms>
    12b2:	83 e0       	ldi	r24, 0x03	; 3
    12b4:	0e 94 41 09 	call	0x1282	; 0x1282 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    12b8:	86 e0       	ldi	r24, 0x06	; 6
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <delay_ms>
    12c0:	83 e0       	ldi	r24, 0x03	; 3
    12c2:	0e 94 41 09 	call	0x1282	; 0x1282 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    12c6:	82 e0       	ldi	r24, 0x02	; 2
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <delay_ms>
    12ce:	83 e0       	ldi	r24, 0x03	; 3
    12d0:	0e 94 41 09 	call	0x1282	; 0x1282 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    12d4:	82 e0       	ldi	r24, 0x02	; 2
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <delay_ms>
    12dc:	82 e0       	ldi	r24, 0x02	; 2
    12de:	0e 94 41 09 	call	0x1282	; 0x1282 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    12e2:	82 e0       	ldi	r24, 0x02	; 2
    12e4:	90 e0       	ldi	r25, 0x00	; 0
    12e6:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <delay_ms>
    12ea:	88 e2       	ldi	r24, 0x28	; 40
    12ec:	0e 94 37 09 	call	0x126e	; 0x126e <_ZN12OrangutanLCD8send_cmdEh>
    12f0:	88 e0       	ldi	r24, 0x08	; 8
    12f2:	0e 94 37 09 	call	0x126e	; 0x126e <_ZN12OrangutanLCD8send_cmdEh>
    12f6:	81 e0       	ldi	r24, 0x01	; 1
    12f8:	0e 94 37 09 	call	0x126e	; 0x126e <_ZN12OrangutanLCD8send_cmdEh>
    12fc:	86 e0       	ldi	r24, 0x06	; 6
    12fe:	0e 94 37 09 	call	0x126e	; 0x126e <_ZN12OrangutanLCD8send_cmdEh>
    1302:	8c e0       	ldi	r24, 0x0C	; 12
    1304:	0e 94 37 09 	call	0x126e	; 0x126e <_ZN12OrangutanLCD8send_cmdEh>
    1308:	08 95       	ret

0000130a <_ZN12OrangutanLCD5clearEv>:
    130a:	81 e0       	ldi	r24, 0x01	; 1
    130c:	0e 94 37 09 	call	0x126e	; 0x126e <_ZN12OrangutanLCD8send_cmdEh>
    1310:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <printf_chars>
    1314:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <printf_chars+0x1>
    1318:	89 2b       	or	r24, r25
    131a:	f9 f0       	breq	.+62     	; 0x135a <_ZN12OrangutanLCD5clearEv+0x50>
    131c:	60 e0       	ldi	r22, 0x00	; 0
    131e:	a0 e2       	ldi	r26, 0x20	; 32
    1320:	26 2f       	mov	r18, r22
    1322:	30 e0       	ldi	r19, 0x00	; 0
    1324:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <numLCDCols>
    1328:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <numLCDRows>
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	01 97       	sbiw	r24, 0x01	; 1
    1330:	78 9f       	mul	r23, r24
    1332:	a0 01       	movw	r20, r0
    1334:	79 9f       	mul	r23, r25
    1336:	50 0d       	add	r21, r0
    1338:	11 24       	eor	r1, r1
    133a:	24 17       	cp	r18, r20
    133c:	35 07       	cpc	r19, r21
    133e:	4c f4       	brge	.+18     	; 0x1352 <_ZN12OrangutanLCD5clearEv+0x48>
    1340:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <printf_chars>
    1344:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <printf_chars+0x1>
    1348:	e2 0f       	add	r30, r18
    134a:	f3 1f       	adc	r31, r19
    134c:	a0 83       	st	Z, r26
    134e:	6f 5f       	subi	r22, 0xFF	; 255
    1350:	e7 cf       	rjmp	.-50     	; 0x1320 <_ZN12OrangutanLCD5clearEv+0x16>
    1352:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <col>
    1356:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <row>
    135a:	08 95       	ret

0000135c <clear>:
    135c:	0e 94 85 09 	call	0x130a	; 0x130a <_ZN12OrangutanLCD5clearEv>
    1360:	08 95       	ret

00001362 <_ZN12OrangutanLCD5printEPKc>:
    1362:	cf 93       	push	r28
    1364:	df 93       	push	r29
    1366:	ec 01       	movw	r28, r24
    1368:	89 91       	ld	r24, Y+
    136a:	88 23       	and	r24, r24
    136c:	19 f0       	breq	.+6      	; 0x1374 <_ZN12OrangutanLCD5printEPKc+0x12>
    136e:	0e 94 3c 09 	call	0x1278	; 0x1278 <_ZN12OrangutanLCD9send_dataEh>
    1372:	fa cf       	rjmp	.-12     	; 0x1368 <_ZN12OrangutanLCD5printEPKc+0x6>
    1374:	df 91       	pop	r29
    1376:	cf 91       	pop	r28
    1378:	08 95       	ret

0000137a <print>:
    137a:	0e 94 b1 09 	call	0x1362	; 0x1362 <_ZN12OrangutanLCD5printEPKc>
    137e:	08 95       	ret

00001380 <_ZN12OrangutanLCD5printEm>:
    1380:	aa e0       	ldi	r26, 0x0A	; 10
    1382:	b0 e0       	ldi	r27, 0x00	; 0
    1384:	e6 ec       	ldi	r30, 0xC6	; 198
    1386:	f9 e0       	ldi	r31, 0x09	; 9
    1388:	0c 94 88 11 	jmp	0x2310	; 0x2310 <__prologue_saves__+0x14>
    138c:	1a e0       	ldi	r17, 0x0A	; 10
    138e:	5a e0       	ldi	r21, 0x0A	; 10
    1390:	c5 2e       	mov	r12, r21
    1392:	d1 2c       	mov	r13, r1
    1394:	e1 2c       	mov	r14, r1
    1396:	f1 2c       	mov	r15, r1
    1398:	06 2f       	mov	r16, r22
    139a:	a7 01       	movw	r20, r14
    139c:	96 01       	movw	r18, r12
    139e:	0e 94 15 11 	call	0x222a	; 0x222a <__udivmodsi4>
    13a2:	ca 01       	movw	r24, r20
    13a4:	b9 01       	movw	r22, r18
    13a6:	11 50       	subi	r17, 0x01	; 1
    13a8:	e1 e0       	ldi	r30, 0x01	; 1
    13aa:	f0 e0       	ldi	r31, 0x00	; 0
    13ac:	ec 0f       	add	r30, r28
    13ae:	fd 1f       	adc	r31, r29
    13b0:	e1 0f       	add	r30, r17
    13b2:	f1 1d       	adc	r31, r1
    13b4:	00 5d       	subi	r16, 0xD0	; 208
    13b6:	2a e0       	ldi	r18, 0x0A	; 10
    13b8:	62 9f       	mul	r22, r18
    13ba:	00 19       	sub	r16, r0
    13bc:	11 24       	eor	r1, r1
    13be:	00 83       	st	Z, r16
    13c0:	61 15       	cp	r22, r1
    13c2:	71 05       	cpc	r23, r1
    13c4:	81 05       	cpc	r24, r1
    13c6:	91 05       	cpc	r25, r1
    13c8:	39 f7       	brne	.-50     	; 0x1398 <_ZN12OrangutanLCD5printEm+0x18>
    13ca:	1a 30       	cpi	r17, 0x0A	; 10
    13cc:	58 f4       	brcc	.+22     	; 0x13e4 <_ZN12OrangutanLCD5printEm+0x64>
    13ce:	e1 e0       	ldi	r30, 0x01	; 1
    13d0:	f0 e0       	ldi	r31, 0x00	; 0
    13d2:	ec 0f       	add	r30, r28
    13d4:	fd 1f       	adc	r31, r29
    13d6:	e1 0f       	add	r30, r17
    13d8:	f1 1d       	adc	r31, r1
    13da:	80 81       	ld	r24, Z
    13dc:	0e 94 3c 09 	call	0x1278	; 0x1278 <_ZN12OrangutanLCD9send_dataEh>
    13e0:	1f 5f       	subi	r17, 0xFF	; 255
    13e2:	f3 cf       	rjmp	.-26     	; 0x13ca <_ZN12OrangutanLCD5printEm+0x4a>
    13e4:	2a 96       	adiw	r28, 0x0a	; 10
    13e6:	e8 e0       	ldi	r30, 0x08	; 8
    13e8:	0c 94 a4 11 	jmp	0x2348	; 0x2348 <__epilogue_restores__+0x14>

000013ec <_ZN12OrangutanLCD5printEl>:
    13ec:	cf 92       	push	r12
    13ee:	df 92       	push	r13
    13f0:	ef 92       	push	r14
    13f2:	ff 92       	push	r15
    13f4:	6b 01       	movw	r12, r22
    13f6:	7c 01       	movw	r14, r24
    13f8:	97 ff       	sbrs	r25, 7
    13fa:	0b c0       	rjmp	.+22     	; 0x1412 <_ZN12OrangutanLCD5printEl+0x26>
    13fc:	f0 94       	com	r15
    13fe:	e0 94       	com	r14
    1400:	d0 94       	com	r13
    1402:	c0 94       	com	r12
    1404:	c1 1c       	adc	r12, r1
    1406:	d1 1c       	adc	r13, r1
    1408:	e1 1c       	adc	r14, r1
    140a:	f1 1c       	adc	r15, r1
    140c:	8d e2       	ldi	r24, 0x2D	; 45
    140e:	0e 94 3c 09 	call	0x1278	; 0x1278 <_ZN12OrangutanLCD9send_dataEh>
    1412:	c7 01       	movw	r24, r14
    1414:	b6 01       	movw	r22, r12
    1416:	0e 94 c0 09 	call	0x1380	; 0x1380 <_ZN12OrangutanLCD5printEm>
    141a:	ff 90       	pop	r15
    141c:	ef 90       	pop	r14
    141e:	df 90       	pop	r13
    1420:	cf 90       	pop	r12
    1422:	08 95       	ret

00001424 <print_long>:
    1424:	0e 94 f6 09 	call	0x13ec	; 0x13ec <_ZN12OrangutanLCD5printEl>
    1428:	08 95       	ret

0000142a <_ZN12OrangutanLCD6gotoXYEhh>:
    142a:	a5 e0       	ldi	r26, 0x05	; 5
    142c:	b0 e0       	ldi	r27, 0x00	; 0
    142e:	eb e1       	ldi	r30, 0x1B	; 27
    1430:	fa e0       	ldi	r31, 0x0A	; 10
    1432:	0c 94 8d 11 	jmp	0x231a	; 0x231a <__prologue_saves__+0x1e>
    1436:	18 2f       	mov	r17, r24
    1438:	80 e8       	ldi	r24, 0x80	; 128
    143a:	89 83       	std	Y+1, r24	; 0x01
    143c:	80 ec       	ldi	r24, 0xC0	; 192
    143e:	8a 83       	std	Y+2, r24	; 0x02
    1440:	84 e9       	ldi	r24, 0x94	; 148
    1442:	8b 83       	std	Y+3, r24	; 0x03
    1444:	84 ed       	ldi	r24, 0xD4	; 212
    1446:	8c 83       	std	Y+4, r24	; 0x04
    1448:	fe 01       	movw	r30, r28
    144a:	e6 0f       	add	r30, r22
    144c:	f1 1d       	adc	r31, r1
    144e:	81 81       	ldd	r24, Z+1	; 0x01
    1450:	81 0f       	add	r24, r17
    1452:	6d 83       	std	Y+5, r22	; 0x05
    1454:	0e 94 37 09 	call	0x126e	; 0x126e <_ZN12OrangutanLCD8send_cmdEh>
    1458:	10 93 3e 01 	sts	0x013E, r17	; 0x80013e <col>
    145c:	6d 81       	ldd	r22, Y+5	; 0x05
    145e:	60 93 3f 01 	sts	0x013F, r22	; 0x80013f <row>
    1462:	25 96       	adiw	r28, 0x05	; 5
    1464:	e3 e0       	ldi	r30, 0x03	; 3
    1466:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__epilogue_restores__+0x1e>

0000146a <lcd_goto_xy>:
    146a:	0e 94 15 0a 	call	0x142a	; 0x142a <_ZN12OrangutanLCD6gotoXYEhh>
    146e:	08 95       	ret

00001470 <_ZN16OrangutanDigital9setOutputEhh>:
    1470:	88 30       	cpi	r24, 0x08	; 8
    1472:	58 f4       	brcc	.+22     	; 0x148a <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    1474:	91 e0       	ldi	r25, 0x01	; 1
    1476:	01 c0       	rjmp	.+2      	; 0x147a <_ZN16OrangutanDigital9setOutputEhh+0xa>
    1478:	99 0f       	add	r25, r25
    147a:	8a 95       	dec	r24
    147c:	ea f7       	brpl	.-6      	; 0x1478 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    147e:	89 2f       	mov	r24, r25
    1480:	aa e2       	ldi	r26, 0x2A	; 42
    1482:	b0 e0       	ldi	r27, 0x00	; 0
    1484:	eb e2       	ldi	r30, 0x2B	; 43
    1486:	f0 e0       	ldi	r31, 0x00	; 0
    1488:	21 c0       	rjmp	.+66     	; 0x14cc <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    148a:	8e 30       	cpi	r24, 0x0E	; 14
    148c:	60 f4       	brcc	.+24     	; 0x14a6 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    148e:	98 ef       	ldi	r25, 0xF8	; 248
    1490:	98 0f       	add	r25, r24
    1492:	81 e0       	ldi	r24, 0x01	; 1
    1494:	01 c0       	rjmp	.+2      	; 0x1498 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    1496:	88 0f       	add	r24, r24
    1498:	9a 95       	dec	r25
    149a:	ea f7       	brpl	.-6      	; 0x1496 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    149c:	a4 e2       	ldi	r26, 0x24	; 36
    149e:	b0 e0       	ldi	r27, 0x00	; 0
    14a0:	e5 e2       	ldi	r30, 0x25	; 37
    14a2:	f0 e0       	ldi	r31, 0x00	; 0
    14a4:	13 c0       	rjmp	.+38     	; 0x14cc <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    14a6:	85 31       	cpi	r24, 0x15	; 21
    14a8:	60 f4       	brcc	.+24     	; 0x14c2 <_ZN16OrangutanDigital9setOutputEhh+0x52>
    14aa:	92 ef       	ldi	r25, 0xF2	; 242
    14ac:	98 0f       	add	r25, r24
    14ae:	81 e0       	ldi	r24, 0x01	; 1
    14b0:	01 c0       	rjmp	.+2      	; 0x14b4 <_ZN16OrangutanDigital9setOutputEhh+0x44>
    14b2:	88 0f       	add	r24, r24
    14b4:	9a 95       	dec	r25
    14b6:	ea f7       	brpl	.-6      	; 0x14b2 <_ZN16OrangutanDigital9setOutputEhh+0x42>
    14b8:	a7 e2       	ldi	r26, 0x27	; 39
    14ba:	b0 e0       	ldi	r27, 0x00	; 0
    14bc:	e8 e2       	ldi	r30, 0x28	; 40
    14be:	f0 e0       	ldi	r31, 0x00	; 0
    14c0:	05 c0       	rjmp	.+10     	; 0x14cc <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    14c2:	80 e0       	ldi	r24, 0x00	; 0
    14c4:	a0 e0       	ldi	r26, 0x00	; 0
    14c6:	b0 e0       	ldi	r27, 0x00	; 0
    14c8:	e0 e0       	ldi	r30, 0x00	; 0
    14ca:	f0 e0       	ldi	r31, 0x00	; 0
    14cc:	6f 3f       	cpi	r22, 0xFF	; 255
    14ce:	19 f4       	brne	.+6      	; 0x14d6 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    14d0:	90 81       	ld	r25, Z
    14d2:	98 27       	eor	r25, r24
    14d4:	09 c0       	rjmp	.+18     	; 0x14e8 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    14d6:	66 23       	and	r22, r22
    14d8:	19 f0       	breq	.+6      	; 0x14e0 <_ZN16OrangutanDigital9setOutputEhh+0x70>
    14da:	90 81       	ld	r25, Z
    14dc:	98 2b       	or	r25, r24
    14de:	04 c0       	rjmp	.+8      	; 0x14e8 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    14e0:	20 81       	ld	r18, Z
    14e2:	98 2f       	mov	r25, r24
    14e4:	90 95       	com	r25
    14e6:	92 23       	and	r25, r18
    14e8:	90 83       	st	Z, r25
    14ea:	9c 91       	ld	r25, X
    14ec:	98 2b       	or	r25, r24
    14ee:	9c 93       	st	X, r25
    14f0:	08 95       	ret

000014f2 <_ZN15OrangutanMotors5init2Ev>:
    14f2:	83 ef       	ldi	r24, 0xF3	; 243
    14f4:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    14f8:	84 bd       	out	0x24, r24	; 36
    14fa:	82 e0       	ldi	r24, 0x02	; 2
    14fc:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1500:	85 bd       	out	0x25, r24	; 37
    1502:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    1506:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    150a:	18 bc       	out	0x28, r1	; 40
    150c:	17 bc       	out	0x27, r1	; 39
    150e:	60 e0       	ldi	r22, 0x00	; 0
    1510:	86 e0       	ldi	r24, 0x06	; 6
    1512:	0e 94 38 0a 	call	0x1470	; 0x1470 <_ZN16OrangutanDigital9setOutputEhh>
    1516:	60 e0       	ldi	r22, 0x00	; 0
    1518:	85 e0       	ldi	r24, 0x05	; 5
    151a:	0e 94 38 0a 	call	0x1470	; 0x1470 <_ZN16OrangutanDigital9setOutputEhh>
    151e:	60 e0       	ldi	r22, 0x00	; 0
    1520:	8b e0       	ldi	r24, 0x0B	; 11
    1522:	0e 94 38 0a 	call	0x1470	; 0x1470 <_ZN16OrangutanDigital9setOutputEhh>
    1526:	60 e0       	ldi	r22, 0x00	; 0
    1528:	83 e0       	ldi	r24, 0x03	; 3
    152a:	0e 94 38 0a 	call	0x1470	; 0x1470 <_ZN16OrangutanDigital9setOutputEhh>
    152e:	08 95       	ret

00001530 <_ZN15OrangutanMotors4initEv>:
    1530:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <_ZZN15OrangutanMotors4initEvE11initialized>
    1534:	81 11       	cpse	r24, r1
    1536:	05 c0       	rjmp	.+10     	; 0x1542 <_ZN15OrangutanMotors4initEv+0x12>
    1538:	81 e0       	ldi	r24, 0x01	; 1
    153a:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <_ZZN15OrangutanMotors4initEvE11initialized>
    153e:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <_ZN15OrangutanMotors5init2Ev>
    1542:	08 95       	ret

00001544 <_ZN15OrangutanMotors10setM1SpeedEi>:
    1544:	cf 93       	push	r28
    1546:	df 93       	push	r29
    1548:	ec 01       	movw	r28, r24
    154a:	0e 94 98 0a 	call	0x1530	; 0x1530 <_ZN15OrangutanMotors4initEv>
    154e:	d7 ff       	sbrs	r29, 7
    1550:	05 c0       	rjmp	.+10     	; 0x155c <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    1552:	d1 95       	neg	r29
    1554:	c1 95       	neg	r28
    1556:	d1 09       	sbc	r29, r1
    1558:	81 e0       	ldi	r24, 0x01	; 1
    155a:	01 c0       	rjmp	.+2      	; 0x155e <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    155c:	80 e0       	ldi	r24, 0x00	; 0
    155e:	cf 3f       	cpi	r28, 0xFF	; 255
    1560:	d1 05       	cpc	r29, r1
    1562:	19 f0       	breq	.+6      	; 0x156a <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    1564:	14 f0       	brlt	.+4      	; 0x156a <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    1566:	cf ef       	ldi	r28, 0xFF	; 255
    1568:	d0 e0       	ldi	r29, 0x00	; 0
    156a:	88 23       	and	r24, r24
    156c:	19 f0       	breq	.+6      	; 0x1574 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    156e:	18 bc       	out	0x28, r1	; 40
    1570:	c7 bd       	out	0x27, r28	; 39
    1572:	02 c0       	rjmp	.+4      	; 0x1578 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    1574:	c8 bd       	out	0x28, r28	; 40
    1576:	17 bc       	out	0x27, r1	; 39
    1578:	df 91       	pop	r29
    157a:	cf 91       	pop	r28
    157c:	08 95       	ret

0000157e <_ZN15OrangutanMotors10setM2SpeedEi>:
    157e:	cf 93       	push	r28
    1580:	df 93       	push	r29
    1582:	ec 01       	movw	r28, r24
    1584:	0e 94 98 0a 	call	0x1530	; 0x1530 <_ZN15OrangutanMotors4initEv>
    1588:	d7 ff       	sbrs	r29, 7
    158a:	05 c0       	rjmp	.+10     	; 0x1596 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    158c:	d1 95       	neg	r29
    158e:	c1 95       	neg	r28
    1590:	d1 09       	sbc	r29, r1
    1592:	81 e0       	ldi	r24, 0x01	; 1
    1594:	01 c0       	rjmp	.+2      	; 0x1598 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    1596:	80 e0       	ldi	r24, 0x00	; 0
    1598:	cf 3f       	cpi	r28, 0xFF	; 255
    159a:	d1 05       	cpc	r29, r1
    159c:	19 f0       	breq	.+6      	; 0x15a4 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    159e:	14 f0       	brlt	.+4      	; 0x15a4 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    15a0:	cf ef       	ldi	r28, 0xFF	; 255
    15a2:	d0 e0       	ldi	r29, 0x00	; 0
    15a4:	88 23       	and	r24, r24
    15a6:	29 f0       	breq	.+10     	; 0x15b2 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    15a8:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    15ac:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    15b0:	04 c0       	rjmp	.+8      	; 0x15ba <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    15b2:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    15b6:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    15ba:	df 91       	pop	r29
    15bc:	cf 91       	pop	r28
    15be:	08 95       	ret

000015c0 <_ZN15OrangutanMotors9setSpeedsEii>:
    15c0:	cf 93       	push	r28
    15c2:	df 93       	push	r29
    15c4:	eb 01       	movw	r28, r22
    15c6:	0e 94 a2 0a 	call	0x1544	; 0x1544 <_ZN15OrangutanMotors10setM1SpeedEi>
    15ca:	ce 01       	movw	r24, r28
    15cc:	0e 94 bf 0a 	call	0x157e	; 0x157e <_ZN15OrangutanMotors10setM2SpeedEi>
    15d0:	df 91       	pop	r29
    15d2:	cf 91       	pop	r28
    15d4:	08 95       	ret

000015d6 <set_motors>:
    15d6:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <_ZN15OrangutanMotors9setSpeedsEii>
    15da:	08 95       	ret

000015dc <_ZN20OrangutanPushbuttons5init2Ev>:
    15dc:	84 b1       	in	r24, 0x04	; 4
    15de:	8d 7c       	andi	r24, 0xCD	; 205
    15e0:	84 b9       	out	0x04, r24	; 4
    15e2:	85 b1       	in	r24, 0x05	; 5
    15e4:	82 63       	ori	r24, 0x32	; 50
    15e6:	85 b9       	out	0x05, r24	; 5
    15e8:	85 e0       	ldi	r24, 0x05	; 5
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	6f 93       	push	r22
    15ee:	64 e0       	ldi	r22, 0x04	; 4
    15f0:	6a 95       	dec	r22
    15f2:	f1 f7       	brne	.-4      	; 0x15f0 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    15f4:	6f 91       	pop	r22
    15f6:	01 97       	sbiw	r24, 0x01	; 1
    15f8:	c9 f7       	brne	.-14     	; 0x15ec <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    15fa:	08 95       	ret

000015fc <_ZN20OrangutanPushbuttons4initEv>:
    15fc:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    1600:	81 11       	cpse	r24, r1
    1602:	05 c0       	rjmp	.+10     	; 0x160e <_ZN20OrangutanPushbuttons4initEv+0x12>
    1604:	81 e0       	ldi	r24, 0x01	; 1
    1606:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    160a:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <_ZN20OrangutanPushbuttons5init2Ev>
    160e:	08 95       	ret

00001610 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    1610:	cf 93       	push	r28
    1612:	c8 2f       	mov	r28, r24
    1614:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <_ZN20OrangutanPushbuttons4initEv>
    1618:	83 b1       	in	r24, 0x03	; 3
    161a:	8c 23       	and	r24, r28
    161c:	e9 f3       	breq	.-6      	; 0x1618 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    161e:	8a e0       	ldi	r24, 0x0A	; 10
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <delay_ms>
    1626:	83 b1       	in	r24, 0x03	; 3
    1628:	8c 23       	and	r24, r28
    162a:	b1 f3       	breq	.-20     	; 0x1618 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    162c:	83 b1       	in	r24, 0x03	; 3
    162e:	8c 23       	and	r24, r28
    1630:	cf 91       	pop	r28
    1632:	08 95       	ret

00001634 <wait_for_button_release>:
    1634:	0e 94 08 0b 	call	0x1610	; 0x1610 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    1638:	08 95       	ret

0000163a <_ZN20OrangutanPushbuttons9isPressedEh>:
    163a:	a1 e0       	ldi	r26, 0x01	; 1
    163c:	b0 e0       	ldi	r27, 0x00	; 0
    163e:	e3 e2       	ldi	r30, 0x23	; 35
    1640:	fb e0       	ldi	r31, 0x0B	; 11
    1642:	0c 94 8e 11 	jmp	0x231c	; 0x231c <__prologue_saves__+0x20>
    1646:	89 83       	std	Y+1, r24	; 0x01
    1648:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <_ZN20OrangutanPushbuttons4initEv>
    164c:	93 b1       	in	r25, 0x03	; 3
    164e:	90 95       	com	r25
    1650:	89 81       	ldd	r24, Y+1	; 0x01
    1652:	89 23       	and	r24, r25
    1654:	21 96       	adiw	r28, 0x01	; 1
    1656:	e2 e0       	ldi	r30, 0x02	; 2
    1658:	0c 94 aa 11 	jmp	0x2354	; 0x2354 <__epilogue_restores__+0x20>

0000165c <button_is_pressed>:
    165c:	0e 94 1d 0b 	call	0x163a	; 0x163a <_ZN20OrangutanPushbuttons9isPressedEh>
    1660:	08 95       	ret

00001662 <__vector_9>:
    1662:	2f 92       	push	r2
    1664:	8f 93       	push	r24
    1666:	9f 93       	push	r25
    1668:	2f b6       	in	r2, 0x3f	; 63
    166a:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <tickCount+0x1>
    166e:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <tickCount+0x2>
    1672:	01 96       	adiw	r24, 0x01	; 1
    1674:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <tickCount+0x1>
    1678:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <tickCount+0x2>
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <tickCount+0x3>
    1682:	89 1f       	adc	r24, r25
    1684:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <tickCount+0x3>
    1688:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <us_over_10+0x1>
    168c:	9c 5f       	subi	r25, 0xFC	; 252
    168e:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <us_over_10+0x1>
    1692:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <us_over_10>
    1696:	80 51       	subi	r24, 0x10	; 16
    1698:	97 42       	sbci	r25, 0x27	; 39
    169a:	c0 f0       	brcs	.+48     	; 0x16cc <end>
    169c:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <us_over_10+0x1>
    16a0:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <us_over_10>
    16a4:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <msCounter>
    16a8:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <msCounter+0x1>
    16ac:	01 96       	adiw	r24, 0x01	; 1
    16ae:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <msCounter>
    16b2:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <msCounter+0x1>
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <msCounter+0x2>
    16bc:	89 1f       	adc	r24, r25
    16be:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <msCounter+0x2>
    16c2:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <msCounter+0x3>
    16c6:	89 1f       	adc	r24, r25
    16c8:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <msCounter+0x3>

000016cc <end>:
    16cc:	2f be       	out	0x3f, r2	; 63
    16ce:	9f 91       	pop	r25
    16d0:	8f 91       	pop	r24
    16d2:	2f 90       	pop	r2
    16d4:	18 95       	reti

000016d6 <_ZN13OrangutanTime17delayMillisecondsEj>:
    16d6:	28 ee       	ldi	r18, 0xE8	; 232
    16d8:	33 e0       	ldi	r19, 0x03	; 3
    16da:	01 97       	sbiw	r24, 0x01	; 1
    16dc:	48 f0       	brcs	.+18     	; 0x16f0 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    16de:	f9 01       	movw	r30, r18
    16e0:	6f 93       	push	r22
    16e2:	64 e0       	ldi	r22, 0x04	; 4
    16e4:	6a 95       	dec	r22
    16e6:	f1 f7       	brne	.-4      	; 0x16e4 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    16e8:	6f 91       	pop	r22
    16ea:	31 97       	sbiw	r30, 0x01	; 1
    16ec:	c9 f7       	brne	.-14     	; 0x16e0 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    16ee:	f5 cf       	rjmp	.-22     	; 0x16da <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    16f0:	08 95       	ret

000016f2 <delay_ms>:
    16f2:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <_ZN13OrangutanTime17delayMillisecondsEj>
    16f6:	08 95       	ret

000016f8 <_ZN13OrangutanTime5init2Ev>:
    16f8:	e0 e7       	ldi	r30, 0x70	; 112
    16fa:	f0 e0       	ldi	r31, 0x00	; 0
    16fc:	80 81       	ld	r24, Z
    16fe:	8e 7f       	andi	r24, 0xFE	; 254
    1700:	80 83       	st	Z, r24
    1702:	a0 eb       	ldi	r26, 0xB0	; 176
    1704:	b0 e0       	ldi	r27, 0x00	; 0
    1706:	8c 91       	ld	r24, X
    1708:	83 60       	ori	r24, 0x03	; 3
    170a:	8c 93       	st	X, r24
    170c:	a1 eb       	ldi	r26, 0xB1	; 177
    170e:	b0 e0       	ldi	r27, 0x00	; 0
    1710:	8c 91       	ld	r24, X
    1712:	80 7f       	andi	r24, 0xF0	; 240
    1714:	8c 93       	st	X, r24
    1716:	8c 91       	ld	r24, X
    1718:	82 60       	ori	r24, 0x02	; 2
    171a:	8c 93       	st	X, r24
    171c:	b8 9a       	sbi	0x17, 0	; 23
    171e:	80 81       	ld	r24, Z
    1720:	81 60       	ori	r24, 0x01	; 1
    1722:	80 83       	st	Z, r24
    1724:	78 94       	sei
    1726:	08 95       	ret

00001728 <_ZN13OrangutanTime4initEv>:
    1728:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <_ZZN13OrangutanTime4initEvE11initialized>
    172c:	81 11       	cpse	r24, r1
    172e:	05 c0       	rjmp	.+10     	; 0x173a <_ZN13OrangutanTime4initEv+0x12>
    1730:	81 e0       	ldi	r24, 0x01	; 1
    1732:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <_ZZN13OrangutanTime4initEvE11initialized>
    1736:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <_ZN13OrangutanTime5init2Ev>
    173a:	08 95       	ret

0000173c <_ZN13OrangutanTime5resetEv>:
    173c:	0e 94 94 0b 	call	0x1728	; 0x1728 <_ZN13OrangutanTime4initEv>
    1740:	e0 e7       	ldi	r30, 0x70	; 112
    1742:	f0 e0       	ldi	r31, 0x00	; 0
    1744:	80 81       	ld	r24, Z
    1746:	8e 7f       	andi	r24, 0xFE	; 254
    1748:	80 83       	st	Z, r24
    174a:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <msCounter>
    174e:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <msCounter+0x1>
    1752:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <msCounter+0x2>
    1756:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <msCounter+0x3>
    175a:	10 92 43 01 	sts	0x0143, r1	; 0x800143 <us_over_10+0x1>
    175e:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <us_over_10>
    1762:	80 81       	ld	r24, Z
    1764:	81 60       	ori	r24, 0x01	; 1
    1766:	80 83       	st	Z, r24
    1768:	08 95       	ret

0000176a <calibrate_line_sensors>:
    176a:	68 2f       	mov	r22, r24
    176c:	8c e4       	ldi	r24, 0x4C	; 76
    176e:	91 e0       	ldi	r25, 0x01	; 1
    1770:	0e 94 9d 0f 	call	0x1f3a	; 0x1f3a <_ZN16PololuQTRSensors9calibrateEh>
    1774:	08 95       	ret

00001776 <read_line>:
    1776:	46 2f       	mov	r20, r22
    1778:	20 e0       	ldi	r18, 0x00	; 0
    177a:	bc 01       	movw	r22, r24
    177c:	8c e4       	ldi	r24, 0x4C	; 76
    177e:	91 e0       	ldi	r25, 0x01	; 1
    1780:	0e 94 6e 10 	call	0x20dc	; 0x20dc <_ZN16PololuQTRSensors8readLineEPjhh>
    1784:	08 95       	ret

00001786 <_ZN9Pololu3pi4initEjh>:
    1786:	0f 93       	push	r16
    1788:	cf 93       	push	r28
    178a:	df 93       	push	r29
    178c:	00 d0       	rcall	.+0      	; 0x178e <_ZN9Pololu3pi4initEjh+0x8>
    178e:	00 d0       	rcall	.+0      	; 0x1790 <_ZN9Pololu3pi4initEjh+0xa>
    1790:	1f 92       	push	r1
    1792:	cd b7       	in	r28, 0x3d	; 61
    1794:	de b7       	in	r29, 0x3e	; 62
    1796:	9c 01       	movw	r18, r24
    1798:	85 e0       	ldi	r24, 0x05	; 5
    179a:	ee e1       	ldi	r30, 0x1E	; 30
    179c:	f1 e0       	ldi	r31, 0x01	; 1
    179e:	de 01       	movw	r26, r28
    17a0:	11 96       	adiw	r26, 0x01	; 1
    17a2:	01 90       	ld	r0, Z+
    17a4:	0d 92       	st	X+, r0
    17a6:	8a 95       	dec	r24
    17a8:	e1 f7       	brne	.-8      	; 0x17a2 <_ZN9Pololu3pi4initEjh+0x1c>
    17aa:	66 23       	and	r22, r22
    17ac:	11 f0       	breq	.+4      	; 0x17b2 <_ZN9Pololu3pi4initEjh+0x2c>
    17ae:	0f ef       	ldi	r16, 0xFF	; 255
    17b0:	01 c0       	rjmp	.+2      	; 0x17b4 <_ZN9Pololu3pi4initEjh+0x2e>
    17b2:	03 e1       	ldi	r16, 0x13	; 19
    17b4:	45 e0       	ldi	r20, 0x05	; 5
    17b6:	be 01       	movw	r22, r28
    17b8:	6f 5f       	subi	r22, 0xFF	; 255
    17ba:	7f 4f       	sbci	r23, 0xFF	; 255
    17bc:	8c e4       	ldi	r24, 0x4C	; 76
    17be:	91 e0       	ldi	r25, 0x01	; 1
    17c0:	0e 94 95 0c 	call	0x192a	; 0x192a <_ZN18PololuQTRSensorsRC4initEPhhjh>
    17c4:	8c e4       	ldi	r24, 0x4C	; 76
    17c6:	91 e0       	ldi	r25, 0x01	; 1
    17c8:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <_ZN16PololuQTRSensors11emittersOffEv>
    17cc:	0e 94 9e 0b 	call	0x173c	; 0x173c <_ZN13OrangutanTime5resetEv>
    17d0:	0f 90       	pop	r0
    17d2:	0f 90       	pop	r0
    17d4:	0f 90       	pop	r0
    17d6:	0f 90       	pop	r0
    17d8:	0f 90       	pop	r0
    17da:	df 91       	pop	r29
    17dc:	cf 91       	pop	r28
    17de:	0f 91       	pop	r16
    17e0:	08 95       	ret

000017e2 <pololu_3pi_init>:
    17e2:	60 e0       	ldi	r22, 0x00	; 0
    17e4:	0e 94 c3 0b 	call	0x1786	; 0x1786 <_ZN9Pololu3pi4initEjh>
    17e8:	08 95       	ret

000017ea <_GLOBAL__sub_D_pololu_3pi_init>:
    17ea:	8c e4       	ldi	r24, 0x4C	; 76
    17ec:	91 e0       	ldi	r25, 0x01	; 1
    17ee:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <_ZN16PololuQTRSensorsD1Ev>
    17f2:	08 95       	ret

000017f4 <delay_us>:
    17f4:	6f 93       	push	r22
    17f6:	64 e0       	ldi	r22, 0x04	; 4
    17f8:	6a 95       	dec	r22
    17fa:	f1 f7       	brne	.-4      	; 0x17f8 <delay_us+0x4>
    17fc:	6f 91       	pop	r22
    17fe:	01 97       	sbiw	r24, 0x01	; 1
    1800:	c9 f7       	brne	.-14     	; 0x17f4 <delay_us>
    1802:	08 95       	ret

00001804 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    1804:	fc 01       	movw	r30, r24
    1806:	11 82       	std	Z+1, r1	; 0x01
    1808:	10 82       	st	Z, r1
    180a:	13 82       	std	Z+3, r1	; 0x03
    180c:	12 82       	std	Z+2, r1	; 0x02
    180e:	15 82       	std	Z+5, r1	; 0x05
    1810:	14 82       	std	Z+4, r1	; 0x04
    1812:	16 82       	std	Z+6, r1	; 0x06
    1814:	68 30       	cpi	r22, 0x08	; 8
    1816:	68 f4       	brcc	.+26     	; 0x1832 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    1818:	89 e2       	ldi	r24, 0x29	; 41
    181a:	90 e0       	ldi	r25, 0x00	; 0
    181c:	91 83       	std	Z+1, r25	; 0x01
    181e:	80 83       	st	Z, r24
    1820:	8b e2       	ldi	r24, 0x2B	; 43
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	93 83       	std	Z+3, r25	; 0x03
    1826:	82 83       	std	Z+2, r24	; 0x02
    1828:	8a e2       	ldi	r24, 0x2A	; 42
    182a:	90 e0       	ldi	r25, 0x00	; 0
    182c:	95 83       	std	Z+5, r25	; 0x05
    182e:	84 83       	std	Z+4, r24	; 0x04
    1830:	1f c0       	rjmp	.+62     	; 0x1870 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    1832:	6e 30       	cpi	r22, 0x0E	; 14
    1834:	70 f4       	brcc	.+28     	; 0x1852 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    1836:	83 e2       	ldi	r24, 0x23	; 35
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	91 83       	std	Z+1, r25	; 0x01
    183c:	80 83       	st	Z, r24
    183e:	85 e2       	ldi	r24, 0x25	; 37
    1840:	90 e0       	ldi	r25, 0x00	; 0
    1842:	93 83       	std	Z+3, r25	; 0x03
    1844:	82 83       	std	Z+2, r24	; 0x02
    1846:	84 e2       	ldi	r24, 0x24	; 36
    1848:	90 e0       	ldi	r25, 0x00	; 0
    184a:	95 83       	std	Z+5, r25	; 0x05
    184c:	84 83       	std	Z+4, r24	; 0x04
    184e:	68 50       	subi	r22, 0x08	; 8
    1850:	0f c0       	rjmp	.+30     	; 0x1870 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    1852:	65 31       	cpi	r22, 0x15	; 21
    1854:	98 f4       	brcc	.+38     	; 0x187c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    1856:	86 e2       	ldi	r24, 0x26	; 38
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	91 83       	std	Z+1, r25	; 0x01
    185c:	80 83       	st	Z, r24
    185e:	88 e2       	ldi	r24, 0x28	; 40
    1860:	90 e0       	ldi	r25, 0x00	; 0
    1862:	93 83       	std	Z+3, r25	; 0x03
    1864:	82 83       	std	Z+2, r24	; 0x02
    1866:	87 e2       	ldi	r24, 0x27	; 39
    1868:	90 e0       	ldi	r25, 0x00	; 0
    186a:	95 83       	std	Z+5, r25	; 0x05
    186c:	84 83       	std	Z+4, r24	; 0x04
    186e:	6e 50       	subi	r22, 0x0E	; 14
    1870:	81 e0       	ldi	r24, 0x01	; 1
    1872:	01 c0       	rjmp	.+2      	; 0x1876 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    1874:	88 0f       	add	r24, r24
    1876:	6a 95       	dec	r22
    1878:	ea f7       	brpl	.-6      	; 0x1874 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    187a:	86 83       	std	Z+6, r24	; 0x06
    187c:	08 95       	ret

0000187e <_ZN16PololuQTRSensors4initEhhh>:
    187e:	a7 e0       	ldi	r26, 0x07	; 7
    1880:	b0 e0       	ldi	r27, 0x00	; 0
    1882:	e5 e4       	ldi	r30, 0x45	; 69
    1884:	fc e0       	ldi	r31, 0x0C	; 12
    1886:	0c 94 8c 11 	jmp	0x2318	; 0x2318 <__prologue_saves__+0x1c>
    188a:	8c 01       	movw	r16, r24
    188c:	fc 01       	movw	r30, r24
    188e:	11 82       	std	Z+1, r1	; 0x01
    1890:	10 82       	st	Z, r1
    1892:	13 82       	std	Z+3, r1	; 0x03
    1894:	12 82       	std	Z+2, r1	; 0x02
    1896:	15 82       	std	Z+5, r1	; 0x05
    1898:	14 82       	std	Z+4, r1	; 0x04
    189a:	17 82       	std	Z+7, r1	; 0x07
    189c:	16 82       	std	Z+6, r1	; 0x06
    189e:	61 31       	cpi	r22, 0x11	; 17
    18a0:	18 f0       	brcs	.+6      	; 0x18a8 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    18a2:	80 e1       	ldi	r24, 0x10	; 16
    18a4:	80 87       	std	Z+8, r24	; 0x08
    18a6:	02 c0       	rjmp	.+4      	; 0x18ac <_ZN16PololuQTRSensors4initEhhh+0x2e>
    18a8:	fc 01       	movw	r30, r24
    18aa:	60 87       	std	Z+8, r22	; 0x08
    18ac:	f8 01       	movw	r30, r16
    18ae:	20 8b       	std	Z+16, r18	; 0x10
    18b0:	64 2f       	mov	r22, r20
    18b2:	ce 01       	movw	r24, r28
    18b4:	01 96       	adiw	r24, 0x01	; 1
    18b6:	0e 94 02 0c 	call	0x1804	; 0x1804 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    18ba:	8f 81       	ldd	r24, Y+7	; 0x07
    18bc:	f8 01       	movw	r30, r16
    18be:	81 87       	std	Z+9, r24	; 0x09
    18c0:	8b 81       	ldd	r24, Y+3	; 0x03
    18c2:	9c 81       	ldd	r25, Y+4	; 0x04
    18c4:	93 87       	std	Z+11, r25	; 0x0b
    18c6:	82 87       	std	Z+10, r24	; 0x0a
    18c8:	8d 81       	ldd	r24, Y+5	; 0x05
    18ca:	9e 81       	ldd	r25, Y+6	; 0x06
    18cc:	95 87       	std	Z+13, r25	; 0x0d
    18ce:	84 87       	std	Z+12, r24	; 0x0c
    18d0:	27 96       	adiw	r28, 0x07	; 7
    18d2:	e4 e0       	ldi	r30, 0x04	; 4
    18d4:	0c 94 a8 11 	jmp	0x2350	; 0x2350 <__epilogue_restores__+0x1c>

000018d8 <_ZN16PololuQTRSensors11emittersOffEv>:
    18d8:	fc 01       	movw	r30, r24
    18da:	a4 85       	ldd	r26, Z+12	; 0x0c
    18dc:	b5 85       	ldd	r27, Z+13	; 0x0d
    18de:	10 97       	sbiw	r26, 0x00	; 0
    18e0:	79 f0       	breq	.+30     	; 0x1900 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    18e2:	8c 91       	ld	r24, X
    18e4:	91 85       	ldd	r25, Z+9	; 0x09
    18e6:	89 2b       	or	r24, r25
    18e8:	8c 93       	st	X, r24
    18ea:	a2 85       	ldd	r26, Z+10	; 0x0a
    18ec:	b3 85       	ldd	r27, Z+11	; 0x0b
    18ee:	9c 91       	ld	r25, X
    18f0:	81 85       	ldd	r24, Z+9	; 0x09
    18f2:	80 95       	com	r24
    18f4:	89 23       	and	r24, r25
    18f6:	8c 93       	st	X, r24
    18f8:	88 ec       	ldi	r24, 0xC8	; 200
    18fa:	90 e0       	ldi	r25, 0x00	; 0
    18fc:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <delay_us>
    1900:	08 95       	ret

00001902 <_ZN16PololuQTRSensors10emittersOnEv>:
    1902:	fc 01       	movw	r30, r24
    1904:	a4 85       	ldd	r26, Z+12	; 0x0c
    1906:	b5 85       	ldd	r27, Z+13	; 0x0d
    1908:	10 97       	sbiw	r26, 0x00	; 0
    190a:	71 f0       	breq	.+28     	; 0x1928 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    190c:	8c 91       	ld	r24, X
    190e:	91 85       	ldd	r25, Z+9	; 0x09
    1910:	89 2b       	or	r24, r25
    1912:	8c 93       	st	X, r24
    1914:	a2 85       	ldd	r26, Z+10	; 0x0a
    1916:	b3 85       	ldd	r27, Z+11	; 0x0b
    1918:	8c 91       	ld	r24, X
    191a:	91 85       	ldd	r25, Z+9	; 0x09
    191c:	89 2b       	or	r24, r25
    191e:	8c 93       	st	X, r24
    1920:	88 ec       	ldi	r24, 0xC8	; 200
    1922:	90 e0       	ldi	r25, 0x00	; 0
    1924:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <delay_us>
    1928:	08 95       	ret

0000192a <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    192a:	a7 e0       	ldi	r26, 0x07	; 7
    192c:	b0 e0       	ldi	r27, 0x00	; 0
    192e:	eb e9       	ldi	r30, 0x9B	; 155
    1930:	fc e0       	ldi	r31, 0x0C	; 12
    1932:	0c 94 81 11 	jmp	0x2302	; 0x2302 <__prologue_saves__+0x6>
    1936:	7c 01       	movw	r14, r24
    1938:	4b 01       	movw	r8, r22
    193a:	64 2f       	mov	r22, r20
    193c:	39 01       	movw	r6, r18
    193e:	40 2f       	mov	r20, r16
    1940:	20 e0       	ldi	r18, 0x00	; 0
    1942:	0e 94 3f 0c 	call	0x187e	; 0x187e <_ZN16PololuQTRSensors4initEhhh>
    1946:	87 01       	movw	r16, r14
    1948:	0f 5b       	subi	r16, 0xBF	; 191
    194a:	1f 4f       	sbci	r17, 0xFF	; 255
    194c:	f8 01       	movw	r30, r16
    194e:	10 82       	st	Z, r1
    1950:	67 01       	movw	r12, r14
    1952:	f2 e4       	ldi	r31, 0x42	; 66
    1954:	cf 0e       	add	r12, r31
    1956:	d1 1c       	adc	r13, r1
    1958:	f6 01       	movw	r30, r12
    195a:	10 82       	st	Z, r1
    195c:	57 01       	movw	r10, r14
    195e:	f3 e4       	ldi	r31, 0x43	; 67
    1960:	af 0e       	add	r10, r31
    1962:	b1 1c       	adc	r11, r1
    1964:	f5 01       	movw	r30, r10
    1966:	10 82       	st	Z, r1
    1968:	f7 01       	movw	r30, r14
    196a:	77 86       	std	Z+15, r7	; 0x0f
    196c:	66 86       	std	Z+14, r6	; 0x0e
    196e:	51 2c       	mov	r5, r1
    1970:	f7 01       	movw	r30, r14
    1972:	80 85       	ldd	r24, Z+8	; 0x08
    1974:	58 16       	cp	r5, r24
    1976:	50 f5       	brcc	.+84     	; 0x19cc <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    1978:	65 2c       	mov	r6, r5
    197a:	71 2c       	mov	r7, r1
    197c:	f4 01       	movw	r30, r8
    197e:	e6 0d       	add	r30, r6
    1980:	f7 1d       	adc	r31, r7
    1982:	60 81       	ld	r22, Z
    1984:	ce 01       	movw	r24, r28
    1986:	01 96       	adiw	r24, 0x01	; 1
    1988:	0e 94 02 0c 	call	0x1804	; 0x1804 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    198c:	2f 81       	ldd	r18, Y+7	; 0x07
    198e:	f7 01       	movw	r30, r14
    1990:	e6 0d       	add	r30, r6
    1992:	f7 1d       	adc	r31, r7
    1994:	21 8b       	std	Z+17, r18	; 0x11
    1996:	89 81       	ldd	r24, Y+1	; 0x01
    1998:	9a 81       	ldd	r25, Y+2	; 0x02
    199a:	f3 01       	movw	r30, r6
    199c:	ee 0f       	add	r30, r30
    199e:	ff 1f       	adc	r31, r31
    19a0:	ee 0d       	add	r30, r14
    19a2:	ff 1d       	adc	r31, r15
    19a4:	92 a3       	std	Z+34, r25	; 0x22
    19a6:	81 a3       	std	Z+33, r24	; 0x21
    19a8:	83 32       	cpi	r24, 0x23	; 35
    19aa:	91 05       	cpc	r25, r1
    19ac:	11 f4       	brne	.+4      	; 0x19b2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    19ae:	f8 01       	movw	r30, r16
    19b0:	08 c0       	rjmp	.+16     	; 0x19c2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    19b2:	86 32       	cpi	r24, 0x26	; 38
    19b4:	91 05       	cpc	r25, r1
    19b6:	11 f4       	brne	.+4      	; 0x19bc <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    19b8:	f6 01       	movw	r30, r12
    19ba:	03 c0       	rjmp	.+6      	; 0x19c2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    19bc:	89 97       	sbiw	r24, 0x29	; 41
    19be:	21 f4       	brne	.+8      	; 0x19c8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    19c0:	f5 01       	movw	r30, r10
    19c2:	80 81       	ld	r24, Z
    19c4:	82 2b       	or	r24, r18
    19c6:	80 83       	st	Z, r24
    19c8:	53 94       	inc	r5
    19ca:	d2 cf       	rjmp	.-92     	; 0x1970 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    19cc:	27 96       	adiw	r28, 0x07	; 7
    19ce:	ef e0       	ldi	r30, 0x0F	; 15
    19d0:	0c 94 9d 11 	jmp	0x233a	; 0x233a <__epilogue_restores__+0x6>

000019d4 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    19d4:	a0 e0       	ldi	r26, 0x00	; 0
    19d6:	b0 e0       	ldi	r27, 0x00	; 0
    19d8:	e0 ef       	ldi	r30, 0xF0	; 240
    19da:	fc e0       	ldi	r31, 0x0C	; 12
    19dc:	0c 94 83 11 	jmp	0x2306	; 0x2306 <__prologue_saves__+0xa>
    19e0:	ec 01       	movw	r28, r24
    19e2:	5b 01       	movw	r10, r22
    19e4:	6c 01       	movw	r12, r24
    19e6:	81 e4       	ldi	r24, 0x41	; 65
    19e8:	c8 0e       	add	r12, r24
    19ea:	d1 1c       	adc	r13, r1
    19ec:	f6 01       	movw	r30, r12
    19ee:	80 80       	ld	r8, Z
    19f0:	7e 01       	movw	r14, r28
    19f2:	f2 e4       	ldi	r31, 0x42	; 66
    19f4:	ef 0e       	add	r14, r31
    19f6:	f1 1c       	adc	r15, r1
    19f8:	f7 01       	movw	r30, r14
    19fa:	70 80       	ld	r7, Z
    19fc:	8e 01       	movw	r16, r28
    19fe:	0d 5b       	subi	r16, 0xBD	; 189
    1a00:	1f 4f       	sbci	r17, 0xFF	; 255
    1a02:	f8 01       	movw	r30, r16
    1a04:	90 80       	ld	r9, Z
    1a06:	80 e0       	ldi	r24, 0x00	; 0
    1a08:	98 85       	ldd	r25, Y+8	; 0x08
    1a0a:	89 17       	cp	r24, r25
    1a0c:	48 f4       	brcc	.+18     	; 0x1a20 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    1a0e:	f5 01       	movw	r30, r10
    1a10:	e8 0f       	add	r30, r24
    1a12:	f1 1d       	adc	r31, r1
    1a14:	e8 0f       	add	r30, r24
    1a16:	f1 1d       	adc	r31, r1
    1a18:	11 82       	std	Z+1, r1	; 0x01
    1a1a:	10 82       	st	Z, r1
    1a1c:	8f 5f       	subi	r24, 0xFF	; 255
    1a1e:	f4 cf       	rjmp	.-24     	; 0x1a08 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    1a20:	84 b1       	in	r24, 0x04	; 4
    1a22:	f6 01       	movw	r30, r12
    1a24:	90 81       	ld	r25, Z
    1a26:	89 2b       	or	r24, r25
    1a28:	84 b9       	out	0x04, r24	; 4
    1a2a:	87 b1       	in	r24, 0x07	; 7
    1a2c:	f7 01       	movw	r30, r14
    1a2e:	90 81       	ld	r25, Z
    1a30:	89 2b       	or	r24, r25
    1a32:	87 b9       	out	0x07, r24	; 7
    1a34:	8a b1       	in	r24, 0x0a	; 10
    1a36:	f8 01       	movw	r30, r16
    1a38:	90 81       	ld	r25, Z
    1a3a:	89 2b       	or	r24, r25
    1a3c:	8a b9       	out	0x0a, r24	; 10
    1a3e:	85 b1       	in	r24, 0x05	; 5
    1a40:	f6 01       	movw	r30, r12
    1a42:	90 81       	ld	r25, Z
    1a44:	89 2b       	or	r24, r25
    1a46:	85 b9       	out	0x05, r24	; 5
    1a48:	88 b1       	in	r24, 0x08	; 8
    1a4a:	f7 01       	movw	r30, r14
    1a4c:	90 81       	ld	r25, Z
    1a4e:	89 2b       	or	r24, r25
    1a50:	88 b9       	out	0x08, r24	; 8
    1a52:	8b b1       	in	r24, 0x0b	; 11
    1a54:	f8 01       	movw	r30, r16
    1a56:	90 81       	ld	r25, Z
    1a58:	89 2b       	or	r24, r25
    1a5a:	8b b9       	out	0x0b, r24	; 11
    1a5c:	8a e0       	ldi	r24, 0x0A	; 10
    1a5e:	90 e0       	ldi	r25, 0x00	; 0
    1a60:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <delay_us>
    1a64:	94 b1       	in	r25, 0x04	; 4
    1a66:	f6 01       	movw	r30, r12
    1a68:	80 81       	ld	r24, Z
    1a6a:	80 95       	com	r24
    1a6c:	89 23       	and	r24, r25
    1a6e:	84 b9       	out	0x04, r24	; 4
    1a70:	97 b1       	in	r25, 0x07	; 7
    1a72:	f7 01       	movw	r30, r14
    1a74:	80 81       	ld	r24, Z
    1a76:	80 95       	com	r24
    1a78:	89 23       	and	r24, r25
    1a7a:	87 b9       	out	0x07, r24	; 7
    1a7c:	9a b1       	in	r25, 0x0a	; 10
    1a7e:	f8 01       	movw	r30, r16
    1a80:	80 81       	ld	r24, Z
    1a82:	80 95       	com	r24
    1a84:	89 23       	and	r24, r25
    1a86:	8a b9       	out	0x0a, r24	; 10
    1a88:	95 b1       	in	r25, 0x05	; 5
    1a8a:	f6 01       	movw	r30, r12
    1a8c:	80 81       	ld	r24, Z
    1a8e:	80 95       	com	r24
    1a90:	89 23       	and	r24, r25
    1a92:	85 b9       	out	0x05, r24	; 5
    1a94:	98 b1       	in	r25, 0x08	; 8
    1a96:	f7 01       	movw	r30, r14
    1a98:	80 81       	ld	r24, Z
    1a9a:	80 95       	com	r24
    1a9c:	89 23       	and	r24, r25
    1a9e:	88 b9       	out	0x08, r24	; 8
    1aa0:	9b b1       	in	r25, 0x0b	; 11
    1aa2:	f8 01       	movw	r30, r16
    1aa4:	80 81       	ld	r24, Z
    1aa6:	80 95       	com	r24
    1aa8:	89 23       	and	r24, r25
    1aaa:	8b b9       	out	0x0b, r24	; 11
    1aac:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1ab0:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1ab4:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1ab8:	83 60       	ori	r24, 0x03	; 3
    1aba:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1abe:	82 e0       	ldi	r24, 0x02	; 2
    1ac0:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1ac4:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1ac8:	80 e0       	ldi	r24, 0x00	; 0
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	2e 85       	ldd	r18, Y+14	; 0x0e
    1ace:	3f 85       	ldd	r19, Y+15	; 0x0f
    1ad0:	82 17       	cp	r24, r18
    1ad2:	93 07       	cpc	r25, r19
    1ad4:	20 f5       	brcc	.+72     	; 0x1b1e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    1ad6:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1ada:	2c 2d       	mov	r18, r12
    1adc:	24 1b       	sub	r18, r20
    1ade:	82 0f       	add	r24, r18
    1ae0:	91 1d       	adc	r25, r1
    1ae2:	03 b1       	in	r16, 0x03	; 3
    1ae4:	08 11       	cpse	r16, r8
    1ae6:	32 c0       	rjmp	.+100    	; 0x1b4c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1ae8:	f6 b0       	in	r15, 0x06	; 6
    1aea:	f7 10       	cpse	r15, r7
    1aec:	2f c0       	rjmp	.+94     	; 0x1b4c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1aee:	29 b1       	in	r18, 0x09	; 9
    1af0:	29 11       	cpse	r18, r9
    1af2:	2c c0       	rjmp	.+88     	; 0x1b4c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1af4:	10 c0       	rjmp	.+32     	; 0x1b16 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    1af6:	21 2f       	mov	r18, r17
    1af8:	30 e0       	ldi	r19, 0x00	; 0
    1afa:	a9 01       	movw	r20, r18
    1afc:	44 0f       	add	r20, r20
    1afe:	55 1f       	adc	r21, r21
    1b00:	f5 01       	movw	r30, r10
    1b02:	e4 0f       	add	r30, r20
    1b04:	f5 1f       	adc	r31, r21
    1b06:	60 81       	ld	r22, Z
    1b08:	71 81       	ldd	r23, Z+1	; 0x01
    1b0a:	67 2b       	or	r22, r23
    1b0c:	21 f1       	breq	.+72     	; 0x1b56 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    1b0e:	1f 5f       	subi	r17, 0xFF	; 255
    1b10:	28 85       	ldd	r18, Y+8	; 0x08
    1b12:	12 17       	cp	r17, r18
    1b14:	80 f3       	brcs	.-32     	; 0x1af6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    1b16:	7f 2c       	mov	r7, r15
    1b18:	80 2e       	mov	r8, r16
    1b1a:	4c 2d       	mov	r20, r12
    1b1c:	d7 cf       	rjmp	.-82     	; 0x1acc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    1b1e:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1b22:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1b26:	20 e0       	ldi	r18, 0x00	; 0
    1b28:	88 85       	ldd	r24, Y+8	; 0x08
    1b2a:	28 17       	cp	r18, r24
    1b2c:	30 f5       	brcc	.+76     	; 0x1b7a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    1b2e:	f5 01       	movw	r30, r10
    1b30:	e2 0f       	add	r30, r18
    1b32:	f1 1d       	adc	r31, r1
    1b34:	e2 0f       	add	r30, r18
    1b36:	f1 1d       	adc	r31, r1
    1b38:	80 81       	ld	r24, Z
    1b3a:	91 81       	ldd	r25, Z+1	; 0x01
    1b3c:	89 2b       	or	r24, r25
    1b3e:	21 f4       	brne	.+8      	; 0x1b48 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    1b40:	8e 85       	ldd	r24, Y+14	; 0x0e
    1b42:	9f 85       	ldd	r25, Y+15	; 0x0f
    1b44:	91 83       	std	Z+1, r25	; 0x01
    1b46:	80 83       	st	Z, r24
    1b48:	2f 5f       	subi	r18, 0xFF	; 255
    1b4a:	ee cf       	rjmp	.-36     	; 0x1b28 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    1b4c:	03 b1       	in	r16, 0x03	; 3
    1b4e:	f6 b0       	in	r15, 0x06	; 6
    1b50:	99 b0       	in	r9, 0x09	; 9
    1b52:	10 e0       	ldi	r17, 0x00	; 0
    1b54:	dd cf       	rjmp	.-70     	; 0x1b10 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    1b56:	de 01       	movw	r26, r28
    1b58:	a4 0f       	add	r26, r20
    1b5a:	b5 1f       	adc	r27, r21
    1b5c:	91 96       	adiw	r26, 0x21	; 33
    1b5e:	0d 90       	ld	r0, X+
    1b60:	bc 91       	ld	r27, X
    1b62:	a0 2d       	mov	r26, r0
    1b64:	4c 91       	ld	r20, X
    1b66:	de 01       	movw	r26, r28
    1b68:	a2 0f       	add	r26, r18
    1b6a:	b3 1f       	adc	r27, r19
    1b6c:	51 96       	adiw	r26, 0x11	; 17
    1b6e:	2c 91       	ld	r18, X
    1b70:	42 23       	and	r20, r18
    1b72:	69 f6       	brne	.-102    	; 0x1b0e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    1b74:	91 83       	std	Z+1, r25	; 0x01
    1b76:	80 83       	st	Z, r24
    1b78:	ca cf       	rjmp	.-108    	; 0x1b0e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    1b7a:	cd b7       	in	r28, 0x3d	; 61
    1b7c:	de b7       	in	r29, 0x3e	; 62
    1b7e:	ed e0       	ldi	r30, 0x0D	; 13
    1b80:	0c 94 9f 11 	jmp	0x233e	; 0x233e <__epilogue_restores__+0xa>

00001b84 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    1b84:	ef 92       	push	r14
    1b86:	ff 92       	push	r15
    1b88:	0f 93       	push	r16
    1b8a:	1f 93       	push	r17
    1b8c:	cf 93       	push	r28
    1b8e:	df 93       	push	r29
    1b90:	fc 01       	movw	r30, r24
    1b92:	9b 01       	movw	r18, r22
    1b94:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1b98:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1b9c:	47 b1       	in	r20, 0x07	; 7
    1b9e:	18 b1       	in	r17, 0x08	; 8
    1ba0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1ba4:	86 fd       	sbrc	r24, 6
    1ba6:	fc cf       	rjmp	.-8      	; 0x1ba0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    1ba8:	80 e0       	ldi	r24, 0x00	; 0
    1baa:	90 85       	ldd	r25, Z+8	; 0x08
    1bac:	89 17       	cp	r24, r25
    1bae:	48 f4       	brcc	.+18     	; 0x1bc2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    1bb0:	d9 01       	movw	r26, r18
    1bb2:	a8 0f       	add	r26, r24
    1bb4:	b1 1d       	adc	r27, r1
    1bb6:	a8 0f       	add	r26, r24
    1bb8:	b1 1d       	adc	r27, r1
    1bba:	1d 92       	st	X+, r1
    1bbc:	1c 92       	st	X, r1
    1bbe:	8f 5f       	subi	r24, 0xFF	; 255
    1bc0:	f4 cf       	rjmp	.-24     	; 0x1baa <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    1bc2:	97 b1       	in	r25, 0x07	; 7
    1bc4:	82 a1       	ldd	r24, Z+34	; 0x22
    1bc6:	80 95       	com	r24
    1bc8:	89 23       	and	r24, r25
    1bca:	87 b9       	out	0x07, r24	; 7
    1bcc:	98 b1       	in	r25, 0x08	; 8
    1bce:	82 a1       	ldd	r24, Z+34	; 0x22
    1bd0:	80 95       	com	r24
    1bd2:	89 23       	and	r24, r25
    1bd4:	88 b9       	out	0x08, r24	; 8
    1bd6:	87 e8       	ldi	r24, 0x87	; 135
    1bd8:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1bdc:	e1 2c       	mov	r14, r1
    1bde:	81 a1       	ldd	r24, Z+33	; 0x21
    1be0:	e8 16       	cp	r14, r24
    1be2:	10 f0       	brcs	.+4      	; 0x1be8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    1be4:	e1 2c       	mov	r14, r1
    1be6:	29 c0       	rjmp	.+82     	; 0x1c3a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    1be8:	50 e0       	ldi	r21, 0x00	; 0
    1bea:	80 85       	ldd	r24, Z+8	; 0x08
    1bec:	58 17       	cp	r21, r24
    1bee:	18 f5       	brcc	.+70     	; 0x1c36 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1bf0:	a5 2f       	mov	r26, r21
    1bf2:	b0 e0       	ldi	r27, 0x00	; 0
    1bf4:	ef 01       	movw	r28, r30
    1bf6:	ca 0f       	add	r28, r26
    1bf8:	db 1f       	adc	r29, r27
    1bfa:	89 89       	ldd	r24, Y+17	; 0x11
    1bfc:	80 64       	ori	r24, 0x40	; 64
    1bfe:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1c02:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1c06:	80 64       	ori	r24, 0x40	; 64
    1c08:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1c0c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1c10:	86 fd       	sbrc	r24, 6
    1c12:	fc cf       	rjmp	.-8      	; 0x1c0c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    1c14:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    1c18:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1c1c:	aa 0f       	add	r26, r26
    1c1e:	bb 1f       	adc	r27, r27
    1c20:	a2 0f       	add	r26, r18
    1c22:	b3 1f       	adc	r27, r19
    1c24:	8d 91       	ld	r24, X+
    1c26:	9c 91       	ld	r25, X
    1c28:	11 97       	sbiw	r26, 0x01	; 1
    1c2a:	86 0f       	add	r24, r22
    1c2c:	97 1f       	adc	r25, r23
    1c2e:	8d 93       	st	X+, r24
    1c30:	9c 93       	st	X, r25
    1c32:	5f 5f       	subi	r21, 0xFF	; 255
    1c34:	da cf       	rjmp	.-76     	; 0x1bea <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    1c36:	e3 94       	inc	r14
    1c38:	d2 cf       	rjmp	.-92     	; 0x1bde <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    1c3a:	80 85       	ldd	r24, Z+8	; 0x08
    1c3c:	e8 16       	cp	r14, r24
    1c3e:	a0 f4       	brcc	.+40     	; 0x1c68 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    1c40:	e9 01       	movw	r28, r18
    1c42:	ce 0d       	add	r28, r14
    1c44:	d1 1d       	adc	r29, r1
    1c46:	ce 0d       	add	r28, r14
    1c48:	d1 1d       	adc	r29, r1
    1c4a:	61 a1       	ldd	r22, Z+33	; 0x21
    1c4c:	70 e0       	ldi	r23, 0x00	; 0
    1c4e:	cb 01       	movw	r24, r22
    1c50:	95 95       	asr	r25
    1c52:	87 95       	ror	r24
    1c54:	a8 81       	ld	r26, Y
    1c56:	b9 81       	ldd	r27, Y+1	; 0x01
    1c58:	8a 0f       	add	r24, r26
    1c5a:	9b 1f       	adc	r25, r27
    1c5c:	0e 94 01 11 	call	0x2202	; 0x2202 <__udivmodhi4>
    1c60:	79 83       	std	Y+1, r23	; 0x01
    1c62:	68 83       	st	Y, r22
    1c64:	e3 94       	inc	r14
    1c66:	e9 cf       	rjmp	.-46     	; 0x1c3a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    1c68:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1c6c:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1c70:	18 b9       	out	0x08, r17	; 8
    1c72:	47 b9       	out	0x07, r20	; 7
    1c74:	cd b7       	in	r28, 0x3d	; 61
    1c76:	de b7       	in	r29, 0x3e	; 62
    1c78:	e6 e0       	ldi	r30, 0x06	; 6
    1c7a:	0c 94 a6 11 	jmp	0x234c	; 0x234c <__epilogue_restores__+0x18>

00001c7e <_ZN16PololuQTRSensors4readEPjh>:
    1c7e:	a0 e2       	ldi	r26, 0x20	; 32
    1c80:	b0 e0       	ldi	r27, 0x00	; 0
    1c82:	e5 e4       	ldi	r30, 0x45	; 69
    1c84:	fe e0       	ldi	r31, 0x0E	; 14
    1c86:	0c 94 89 11 	jmp	0x2312	; 0x2312 <__prologue_saves__+0x16>
    1c8a:	8c 01       	movw	r16, r24
    1c8c:	7b 01       	movw	r14, r22
    1c8e:	d4 2e       	mov	r13, r20
    1c90:	8f ef       	ldi	r24, 0xFF	; 255
    1c92:	84 0f       	add	r24, r20
    1c94:	82 30       	cpi	r24, 0x02	; 2
    1c96:	18 f4       	brcc	.+6      	; 0x1c9e <_ZN16PololuQTRSensors4readEPjh+0x20>
    1c98:	c8 01       	movw	r24, r16
    1c9a:	0e 94 81 0c 	call	0x1902	; 0x1902 <_ZN16PololuQTRSensors10emittersOnEv>
    1c9e:	d8 01       	movw	r26, r16
    1ca0:	50 96       	adiw	r26, 0x10	; 16
    1ca2:	8c 91       	ld	r24, X
    1ca4:	b7 01       	movw	r22, r14
    1ca6:	81 11       	cpse	r24, r1
    1ca8:	10 c0       	rjmp	.+32     	; 0x1cca <_ZN16PololuQTRSensors4readEPjh+0x4c>
    1caa:	c8 01       	movw	r24, r16
    1cac:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1cb0:	c8 01       	movw	r24, r16
    1cb2:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <_ZN16PololuQTRSensors11emittersOffEv>
    1cb6:	b2 e0       	ldi	r27, 0x02	; 2
    1cb8:	db 12       	cpse	r13, r27
    1cba:	3a c0       	rjmp	.+116    	; 0x1d30 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1cbc:	be 01       	movw	r22, r28
    1cbe:	6f 5f       	subi	r22, 0xFF	; 255
    1cc0:	7f 4f       	sbci	r23, 0xFF	; 255
    1cc2:	c8 01       	movw	r24, r16
    1cc4:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1cc8:	0f c0       	rjmp	.+30     	; 0x1ce8 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    1cca:	c8 01       	movw	r24, r16
    1ccc:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1cd0:	c8 01       	movw	r24, r16
    1cd2:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <_ZN16PololuQTRSensors11emittersOffEv>
    1cd6:	e2 e0       	ldi	r30, 0x02	; 2
    1cd8:	de 12       	cpse	r13, r30
    1cda:	2a c0       	rjmp	.+84     	; 0x1d30 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1cdc:	be 01       	movw	r22, r28
    1cde:	6f 5f       	subi	r22, 0xFF	; 255
    1ce0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ce2:	c8 01       	movw	r24, r16
    1ce4:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1ce8:	40 e0       	ldi	r20, 0x00	; 0
    1cea:	f8 01       	movw	r30, r16
    1cec:	80 85       	ldd	r24, Z+8	; 0x08
    1cee:	48 17       	cp	r20, r24
    1cf0:	f8 f4       	brcc	.+62     	; 0x1d30 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1cf2:	84 2f       	mov	r24, r20
    1cf4:	90 e0       	ldi	r25, 0x00	; 0
    1cf6:	88 0f       	add	r24, r24
    1cf8:	99 1f       	adc	r25, r25
    1cfa:	f7 01       	movw	r30, r14
    1cfc:	e8 0f       	add	r30, r24
    1cfe:	f9 1f       	adc	r31, r25
    1d00:	21 e0       	ldi	r18, 0x01	; 1
    1d02:	30 e0       	ldi	r19, 0x00	; 0
    1d04:	2c 0f       	add	r18, r28
    1d06:	3d 1f       	adc	r19, r29
    1d08:	82 0f       	add	r24, r18
    1d0a:	93 1f       	adc	r25, r19
    1d0c:	d8 01       	movw	r26, r16
    1d0e:	1e 96       	adiw	r26, 0x0e	; 14
    1d10:	2d 91       	ld	r18, X+
    1d12:	3c 91       	ld	r19, X
    1d14:	1f 97       	sbiw	r26, 0x0f	; 15
    1d16:	dc 01       	movw	r26, r24
    1d18:	8d 91       	ld	r24, X+
    1d1a:	9c 91       	ld	r25, X
    1d1c:	28 1b       	sub	r18, r24
    1d1e:	39 0b       	sbc	r19, r25
    1d20:	80 81       	ld	r24, Z
    1d22:	91 81       	ldd	r25, Z+1	; 0x01
    1d24:	82 0f       	add	r24, r18
    1d26:	93 1f       	adc	r25, r19
    1d28:	91 83       	std	Z+1, r25	; 0x01
    1d2a:	80 83       	st	Z, r24
    1d2c:	4f 5f       	subi	r20, 0xFF	; 255
    1d2e:	dd cf       	rjmp	.-70     	; 0x1cea <_ZN16PololuQTRSensors4readEPjh+0x6c>
    1d30:	a0 96       	adiw	r28, 0x20	; 32
    1d32:	e7 e0       	ldi	r30, 0x07	; 7
    1d34:	0c 94 a5 11 	jmp	0x234a	; 0x234a <__epilogue_restores__+0x16>

00001d38 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    1d38:	2f 92       	push	r2
    1d3a:	3f 92       	push	r3
    1d3c:	5f 92       	push	r5
    1d3e:	6f 92       	push	r6
    1d40:	7f 92       	push	r7
    1d42:	8f 92       	push	r8
    1d44:	9f 92       	push	r9
    1d46:	af 92       	push	r10
    1d48:	bf 92       	push	r11
    1d4a:	cf 92       	push	r12
    1d4c:	df 92       	push	r13
    1d4e:	ef 92       	push	r14
    1d50:	ff 92       	push	r15
    1d52:	0f 93       	push	r16
    1d54:	1f 93       	push	r17
    1d56:	cf 93       	push	r28
    1d58:	df 93       	push	r29
    1d5a:	cd b7       	in	r28, 0x3d	; 61
    1d5c:	de b7       	in	r29, 0x3e	; 62
    1d5e:	c0 56       	subi	r28, 0x60	; 96
    1d60:	d1 09       	sbc	r29, r1
    1d62:	0f b6       	in	r0, 0x3f	; 63
    1d64:	f8 94       	cli
    1d66:	de bf       	out	0x3e, r29	; 62
    1d68:	0f be       	out	0x3f, r0	; 63
    1d6a:	cd bf       	out	0x3d, r28	; 61
    1d6c:	8c 01       	movw	r16, r24
    1d6e:	4b 01       	movw	r8, r22
    1d70:	5a 01       	movw	r10, r20
    1d72:	52 2e       	mov	r5, r18
    1d74:	da 01       	movw	r26, r20
    1d76:	8d 91       	ld	r24, X+
    1d78:	9c 91       	ld	r25, X
    1d7a:	89 2b       	or	r24, r25
    1d7c:	31 f0       	breq	.+12     	; 0x1d8a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    1d7e:	f4 01       	movw	r30, r8
    1d80:	80 81       	ld	r24, Z
    1d82:	91 81       	ldd	r25, Z+1	; 0x01
    1d84:	89 2b       	or	r24, r25
    1d86:	f1 f4       	brne	.+60     	; 0x1dc4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1d88:	24 c0       	rjmp	.+72     	; 0x1dd2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    1d8a:	d8 01       	movw	r26, r16
    1d8c:	18 96       	adiw	r26, 0x08	; 8
    1d8e:	8c 91       	ld	r24, X
    1d90:	90 e0       	ldi	r25, 0x00	; 0
    1d92:	88 0f       	add	r24, r24
    1d94:	99 1f       	adc	r25, r25
    1d96:	0e 94 b5 11 	call	0x236a	; 0x236a <malloc>
    1d9a:	f5 01       	movw	r30, r10
    1d9c:	91 83       	std	Z+1, r25	; 0x01
    1d9e:	80 83       	st	Z, r24
    1da0:	00 97       	sbiw	r24, 0x00	; 0
    1da2:	09 f4       	brne	.+2      	; 0x1da6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    1da4:	b1 c0       	rjmp	.+354    	; 0x1f08 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1da6:	fc 01       	movw	r30, r24
    1da8:	20 e0       	ldi	r18, 0x00	; 0
    1daa:	30 e0       	ldi	r19, 0x00	; 0
    1dac:	d8 01       	movw	r26, r16
    1dae:	18 96       	adiw	r26, 0x08	; 8
    1db0:	8c 91       	ld	r24, X
    1db2:	90 e0       	ldi	r25, 0x00	; 0
    1db4:	28 17       	cp	r18, r24
    1db6:	39 07       	cpc	r19, r25
    1db8:	14 f7       	brge	.-60     	; 0x1d7e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    1dba:	11 92       	st	Z+, r1
    1dbc:	11 92       	st	Z+, r1
    1dbe:	2f 5f       	subi	r18, 0xFF	; 255
    1dc0:	3f 4f       	sbci	r19, 0xFF	; 255
    1dc2:	f4 cf       	rjmp	.-24     	; 0x1dac <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    1dc4:	e1 2c       	mov	r14, r1
    1dc6:	f1 2c       	mov	r15, r1
    1dc8:	6e 01       	movw	r12, r28
    1dca:	b1 e2       	ldi	r27, 0x21	; 33
    1dcc:	cb 0e       	add	r12, r27
    1dce:	d1 1c       	adc	r13, r1
    1dd0:	21 c0       	rjmp	.+66     	; 0x1e14 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    1dd2:	f8 01       	movw	r30, r16
    1dd4:	80 85       	ldd	r24, Z+8	; 0x08
    1dd6:	90 e0       	ldi	r25, 0x00	; 0
    1dd8:	88 0f       	add	r24, r24
    1dda:	99 1f       	adc	r25, r25
    1ddc:	0e 94 b5 11 	call	0x236a	; 0x236a <malloc>
    1de0:	d4 01       	movw	r26, r8
    1de2:	8d 93       	st	X+, r24
    1de4:	9c 93       	st	X, r25
    1de6:	00 97       	sbiw	r24, 0x00	; 0
    1de8:	09 f4       	brne	.+2      	; 0x1dec <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    1dea:	8e c0       	rjmp	.+284    	; 0x1f08 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1dec:	fc 01       	movw	r30, r24
    1dee:	20 e0       	ldi	r18, 0x00	; 0
    1df0:	30 e0       	ldi	r19, 0x00	; 0
    1df2:	d8 01       	movw	r26, r16
    1df4:	18 96       	adiw	r26, 0x08	; 8
    1df6:	8c 91       	ld	r24, X
    1df8:	90 e0       	ldi	r25, 0x00	; 0
    1dfa:	28 17       	cp	r18, r24
    1dfc:	39 07       	cpc	r19, r25
    1dfe:	14 f7       	brge	.-60     	; 0x1dc4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1e00:	d8 01       	movw	r26, r16
    1e02:	1e 96       	adiw	r26, 0x0e	; 14
    1e04:	8d 91       	ld	r24, X+
    1e06:	9c 91       	ld	r25, X
    1e08:	1f 97       	sbiw	r26, 0x0f	; 15
    1e0a:	81 93       	st	Z+, r24
    1e0c:	91 93       	st	Z+, r25
    1e0e:	2f 5f       	subi	r18, 0xFF	; 255
    1e10:	3f 4f       	sbci	r19, 0xFF	; 255
    1e12:	ef cf       	rjmp	.-34     	; 0x1df2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    1e14:	45 2d       	mov	r20, r5
    1e16:	be 01       	movw	r22, r28
    1e18:	6f 5b       	subi	r22, 0xBF	; 191
    1e1a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e1c:	c8 01       	movw	r24, r16
    1e1e:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <_ZN16PololuQTRSensors4readEPjh>
    1e22:	f8 01       	movw	r30, r16
    1e24:	60 84       	ldd	r6, Z+8	; 0x08
    1e26:	71 2c       	mov	r7, r1
    1e28:	fe 01       	movw	r30, r28
    1e2a:	ef 5b       	subi	r30, 0xBF	; 191
    1e2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e2e:	c6 01       	movw	r24, r12
    1e30:	9e 01       	movw	r18, r28
    1e32:	2f 5f       	subi	r18, 0xFF	; 255
    1e34:	3f 4f       	sbci	r19, 0xFF	; 255
    1e36:	19 01       	movw	r2, r18
    1e38:	20 e0       	ldi	r18, 0x00	; 0
    1e3a:	30 e0       	ldi	r19, 0x00	; 0
    1e3c:	26 15       	cp	r18, r6
    1e3e:	37 05       	cpc	r19, r7
    1e40:	4c f5       	brge	.+82     	; 0x1e94 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    1e42:	e1 14       	cp	r14, r1
    1e44:	f1 04       	cpc	r15, r1
    1e46:	89 f0       	breq	.+34     	; 0x1e6a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1e48:	dc 01       	movw	r26, r24
    1e4a:	6d 91       	ld	r22, X+
    1e4c:	7c 91       	ld	r23, X
    1e4e:	40 81       	ld	r20, Z
    1e50:	51 81       	ldd	r21, Z+1	; 0x01
    1e52:	64 17       	cp	r22, r20
    1e54:	75 07       	cpc	r23, r21
    1e56:	48 f0       	brcs	.+18     	; 0x1e6a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1e58:	d1 01       	movw	r26, r2
    1e5a:	6d 91       	ld	r22, X+
    1e5c:	7c 91       	ld	r23, X
    1e5e:	40 81       	ld	r20, Z
    1e60:	51 81       	ldd	r21, Z+1	; 0x01
    1e62:	46 17       	cp	r20, r22
    1e64:	57 07       	cpc	r21, r23
    1e66:	48 f0       	brcs	.+18     	; 0x1e7a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    1e68:	0d c0       	rjmp	.+26     	; 0x1e84 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    1e6a:	40 81       	ld	r20, Z
    1e6c:	51 81       	ldd	r21, Z+1	; 0x01
    1e6e:	dc 01       	movw	r26, r24
    1e70:	4d 93       	st	X+, r20
    1e72:	5c 93       	st	X, r21
    1e74:	e1 14       	cp	r14, r1
    1e76:	f1 04       	cpc	r15, r1
    1e78:	79 f7       	brne	.-34     	; 0x1e58 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    1e7a:	40 81       	ld	r20, Z
    1e7c:	51 81       	ldd	r21, Z+1	; 0x01
    1e7e:	d1 01       	movw	r26, r2
    1e80:	4d 93       	st	X+, r20
    1e82:	5c 93       	st	X, r21
    1e84:	2f 5f       	subi	r18, 0xFF	; 255
    1e86:	3f 4f       	sbci	r19, 0xFF	; 255
    1e88:	b2 e0       	ldi	r27, 0x02	; 2
    1e8a:	2b 0e       	add	r2, r27
    1e8c:	31 1c       	adc	r3, r1
    1e8e:	32 96       	adiw	r30, 0x02	; 2
    1e90:	02 96       	adiw	r24, 0x02	; 2
    1e92:	d4 cf       	rjmp	.-88     	; 0x1e3c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    1e94:	ef ef       	ldi	r30, 0xFF	; 255
    1e96:	ee 1a       	sub	r14, r30
    1e98:	fe 0a       	sbc	r15, r30
    1e9a:	fa e0       	ldi	r31, 0x0A	; 10
    1e9c:	ef 16       	cp	r14, r31
    1e9e:	f1 04       	cpc	r15, r1
    1ea0:	09 f0       	breq	.+2      	; 0x1ea4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    1ea2:	b8 cf       	rjmp	.-144    	; 0x1e14 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    1ea4:	9e 01       	movw	r18, r28
    1ea6:	2f 5f       	subi	r18, 0xFF	; 255
    1ea8:	3f 4f       	sbci	r19, 0xFF	; 255
    1eaa:	79 01       	movw	r14, r18
    1eac:	36 01       	movw	r6, r12
    1eae:	80 e0       	ldi	r24, 0x00	; 0
    1eb0:	90 e0       	ldi	r25, 0x00	; 0
    1eb2:	f8 01       	movw	r30, r16
    1eb4:	20 85       	ldd	r18, Z+8	; 0x08
    1eb6:	30 e0       	ldi	r19, 0x00	; 0
    1eb8:	82 17       	cp	r24, r18
    1eba:	93 07       	cpc	r25, r19
    1ebc:	2c f5       	brge	.+74     	; 0x1f08 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1ebe:	d7 01       	movw	r26, r14
    1ec0:	2d 91       	ld	r18, X+
    1ec2:	3d 91       	ld	r19, X+
    1ec4:	7d 01       	movw	r14, r26
    1ec6:	b3 01       	movw	r22, r6
    1ec8:	6c 19       	sub	r22, r12
    1eca:	7d 09       	sbc	r23, r13
    1ecc:	d5 01       	movw	r26, r10
    1ece:	ed 91       	ld	r30, X+
    1ed0:	fc 91       	ld	r31, X
    1ed2:	e6 0f       	add	r30, r22
    1ed4:	f7 1f       	adc	r31, r23
    1ed6:	40 81       	ld	r20, Z
    1ed8:	51 81       	ldd	r21, Z+1	; 0x01
    1eda:	42 17       	cp	r20, r18
    1edc:	53 07       	cpc	r21, r19
    1ede:	10 f4       	brcc	.+4      	; 0x1ee4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    1ee0:	31 83       	std	Z+1, r19	; 0x01
    1ee2:	20 83       	st	Z, r18
    1ee4:	f3 01       	movw	r30, r6
    1ee6:	21 91       	ld	r18, Z+
    1ee8:	31 91       	ld	r19, Z+
    1eea:	3f 01       	movw	r6, r30
    1eec:	d4 01       	movw	r26, r8
    1eee:	ed 91       	ld	r30, X+
    1ef0:	fc 91       	ld	r31, X
    1ef2:	e6 0f       	add	r30, r22
    1ef4:	f7 1f       	adc	r31, r23
    1ef6:	40 81       	ld	r20, Z
    1ef8:	51 81       	ldd	r21, Z+1	; 0x01
    1efa:	24 17       	cp	r18, r20
    1efc:	35 07       	cpc	r19, r21
    1efe:	10 f4       	brcc	.+4      	; 0x1f04 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    1f00:	31 83       	std	Z+1, r19	; 0x01
    1f02:	20 83       	st	Z, r18
    1f04:	01 96       	adiw	r24, 0x01	; 1
    1f06:	d5 cf       	rjmp	.-86     	; 0x1eb2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    1f08:	c0 5a       	subi	r28, 0xA0	; 160
    1f0a:	df 4f       	sbci	r29, 0xFF	; 255
    1f0c:	0f b6       	in	r0, 0x3f	; 63
    1f0e:	f8 94       	cli
    1f10:	de bf       	out	0x3e, r29	; 62
    1f12:	0f be       	out	0x3f, r0	; 63
    1f14:	cd bf       	out	0x3d, r28	; 61
    1f16:	df 91       	pop	r29
    1f18:	cf 91       	pop	r28
    1f1a:	1f 91       	pop	r17
    1f1c:	0f 91       	pop	r16
    1f1e:	ff 90       	pop	r15
    1f20:	ef 90       	pop	r14
    1f22:	df 90       	pop	r13
    1f24:	cf 90       	pop	r12
    1f26:	bf 90       	pop	r11
    1f28:	af 90       	pop	r10
    1f2a:	9f 90       	pop	r9
    1f2c:	8f 90       	pop	r8
    1f2e:	7f 90       	pop	r7
    1f30:	6f 90       	pop	r6
    1f32:	5f 90       	pop	r5
    1f34:	3f 90       	pop	r3
    1f36:	2f 90       	pop	r2
    1f38:	08 95       	ret

00001f3a <_ZN16PololuQTRSensors9calibrateEh>:
    1f3a:	1f 93       	push	r17
    1f3c:	cf 93       	push	r28
    1f3e:	df 93       	push	r29
    1f40:	ec 01       	movw	r28, r24
    1f42:	16 2f       	mov	r17, r22
    1f44:	8f ef       	ldi	r24, 0xFF	; 255
    1f46:	86 0f       	add	r24, r22
    1f48:	82 30       	cpi	r24, 0x02	; 2
    1f4a:	18 f0       	brcs	.+6      	; 0x1f52 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    1f4c:	66 23       	and	r22, r22
    1f4e:	59 f0       	breq	.+22     	; 0x1f66 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    1f50:	14 c0       	rjmp	.+40     	; 0x1f7a <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1f52:	21 e0       	ldi	r18, 0x01	; 1
    1f54:	ae 01       	movw	r20, r28
    1f56:	4e 5f       	subi	r20, 0xFE	; 254
    1f58:	5f 4f       	sbci	r21, 0xFF	; 255
    1f5a:	be 01       	movw	r22, r28
    1f5c:	ce 01       	movw	r24, r28
    1f5e:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1f62:	12 30       	cpi	r17, 0x02	; 2
    1f64:	51 f4       	brne	.+20     	; 0x1f7a <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1f66:	ae 01       	movw	r20, r28
    1f68:	4a 5f       	subi	r20, 0xFA	; 250
    1f6a:	5f 4f       	sbci	r21, 0xFF	; 255
    1f6c:	be 01       	movw	r22, r28
    1f6e:	6c 5f       	subi	r22, 0xFC	; 252
    1f70:	7f 4f       	sbci	r23, 0xFF	; 255
    1f72:	20 e0       	ldi	r18, 0x00	; 0
    1f74:	ce 01       	movw	r24, r28
    1f76:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1f7a:	df 91       	pop	r29
    1f7c:	cf 91       	pop	r28
    1f7e:	1f 91       	pop	r17
    1f80:	08 95       	ret

00001f82 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    1f82:	a0 e0       	ldi	r26, 0x00	; 0
    1f84:	b0 e0       	ldi	r27, 0x00	; 0
    1f86:	e7 ec       	ldi	r30, 0xC7	; 199
    1f88:	ff e0       	ldi	r31, 0x0F	; 15
    1f8a:	0c 94 87 11 	jmp	0x230e	; 0x230e <__prologue_saves__+0x12>
    1f8e:	ec 01       	movw	r28, r24
    1f90:	8b 01       	movw	r16, r22
    1f92:	b4 2e       	mov	r11, r20
    1f94:	84 2f       	mov	r24, r20
    1f96:	8d 7f       	andi	r24, 0xFD	; 253
    1f98:	51 f4       	brne	.+20     	; 0x1fae <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    1f9a:	8c 81       	ldd	r24, Y+4	; 0x04
    1f9c:	9d 81       	ldd	r25, Y+5	; 0x05
    1f9e:	89 2b       	or	r24, r25
    1fa0:	09 f4       	brne	.+2      	; 0x1fa4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    1fa2:	97 c0       	rjmp	.+302    	; 0x20d2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1fa4:	8e 81       	ldd	r24, Y+6	; 0x06
    1fa6:	9f 81       	ldd	r25, Y+7	; 0x07
    1fa8:	89 2b       	or	r24, r25
    1faa:	09 f4       	brne	.+2      	; 0x1fae <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    1fac:	92 c0       	rjmp	.+292    	; 0x20d2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1fae:	8f ef       	ldi	r24, 0xFF	; 255
    1fb0:	8b 0d       	add	r24, r11
    1fb2:	82 30       	cpi	r24, 0x02	; 2
    1fb4:	50 f4       	brcc	.+20     	; 0x1fca <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    1fb6:	88 81       	ld	r24, Y
    1fb8:	99 81       	ldd	r25, Y+1	; 0x01
    1fba:	89 2b       	or	r24, r25
    1fbc:	09 f4       	brne	.+2      	; 0x1fc0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    1fbe:	89 c0       	rjmp	.+274    	; 0x20d2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1fc0:	8a 81       	ldd	r24, Y+2	; 0x02
    1fc2:	9b 81       	ldd	r25, Y+3	; 0x03
    1fc4:	89 2b       	or	r24, r25
    1fc6:	09 f4       	brne	.+2      	; 0x1fca <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    1fc8:	84 c0       	rjmp	.+264    	; 0x20d2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1fca:	4b 2d       	mov	r20, r11
    1fcc:	b8 01       	movw	r22, r16
    1fce:	ce 01       	movw	r24, r28
    1fd0:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <_ZN16PololuQTRSensors4readEPjh>
    1fd4:	78 01       	movw	r14, r16
    1fd6:	00 e0       	ldi	r16, 0x00	; 0
    1fd8:	10 e0       	ldi	r17, 0x00	; 0
    1fda:	c1 2c       	mov	r12, r1
    1fdc:	d1 2c       	mov	r13, r1
    1fde:	88 85       	ldd	r24, Y+8	; 0x08
    1fe0:	90 e0       	ldi	r25, 0x00	; 0
    1fe2:	c8 16       	cp	r12, r24
    1fe4:	d9 06       	cpc	r13, r25
    1fe6:	0c f0       	brlt	.+2      	; 0x1fea <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    1fe8:	74 c0       	rjmp	.+232    	; 0x20d2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1fea:	81 e0       	ldi	r24, 0x01	; 1
    1fec:	b8 12       	cpse	r11, r24
    1fee:	0a c0       	rjmp	.+20     	; 0x2004 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    1ff0:	ea 81       	ldd	r30, Y+2	; 0x02
    1ff2:	fb 81       	ldd	r31, Y+3	; 0x03
    1ff4:	e0 0f       	add	r30, r16
    1ff6:	f1 1f       	adc	r31, r17
    1ff8:	01 90       	ld	r0, Z+
    1ffa:	f0 81       	ld	r31, Z
    1ffc:	e0 2d       	mov	r30, r0
    1ffe:	a8 81       	ld	r26, Y
    2000:	b9 81       	ldd	r27, Y+1	; 0x01
    2002:	0d c0       	rjmp	.+26     	; 0x201e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    2004:	8c 81       	ldd	r24, Y+4	; 0x04
    2006:	9d 81       	ldd	r25, Y+5	; 0x05
    2008:	2e 81       	ldd	r18, Y+6	; 0x06
    200a:	3f 81       	ldd	r19, Y+7	; 0x07
    200c:	b1 10       	cpse	r11, r1
    200e:	0c c0       	rjmp	.+24     	; 0x2028 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    2010:	f9 01       	movw	r30, r18
    2012:	e0 0f       	add	r30, r16
    2014:	f1 1f       	adc	r31, r17
    2016:	01 90       	ld	r0, Z+
    2018:	f0 81       	ld	r31, Z
    201a:	e0 2d       	mov	r30, r0
    201c:	dc 01       	movw	r26, r24
    201e:	a0 0f       	add	r26, r16
    2020:	b1 1f       	adc	r27, r17
    2022:	8d 91       	ld	r24, X+
    2024:	9c 91       	ld	r25, X
    2026:	28 c0       	rjmp	.+80     	; 0x2078 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    2028:	fc 01       	movw	r30, r24
    202a:	e0 0f       	add	r30, r16
    202c:	f1 1f       	adc	r31, r17
    202e:	40 81       	ld	r20, Z
    2030:	51 81       	ldd	r21, Z+1	; 0x01
    2032:	e8 81       	ld	r30, Y
    2034:	f9 81       	ldd	r31, Y+1	; 0x01
    2036:	e0 0f       	add	r30, r16
    2038:	f1 1f       	adc	r31, r17
    203a:	80 81       	ld	r24, Z
    203c:	91 81       	ldd	r25, Z+1	; 0x01
    203e:	ee 85       	ldd	r30, Y+14	; 0x0e
    2040:	ff 85       	ldd	r31, Y+15	; 0x0f
    2042:	48 17       	cp	r20, r24
    2044:	59 07       	cpc	r21, r25
    2046:	10 f4       	brcc	.+4      	; 0x204c <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    2048:	cf 01       	movw	r24, r30
    204a:	04 c0       	rjmp	.+8      	; 0x2054 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    204c:	8e 0f       	add	r24, r30
    204e:	9f 1f       	adc	r25, r31
    2050:	84 1b       	sub	r24, r20
    2052:	95 0b       	sbc	r25, r21
    2054:	d9 01       	movw	r26, r18
    2056:	a0 0f       	add	r26, r16
    2058:	b1 1f       	adc	r27, r17
    205a:	2d 91       	ld	r18, X+
    205c:	3c 91       	ld	r19, X
    205e:	aa 81       	ldd	r26, Y+2	; 0x02
    2060:	bb 81       	ldd	r27, Y+3	; 0x03
    2062:	a0 0f       	add	r26, r16
    2064:	b1 1f       	adc	r27, r17
    2066:	4d 91       	ld	r20, X+
    2068:	5c 91       	ld	r21, X
    206a:	24 17       	cp	r18, r20
    206c:	35 07       	cpc	r19, r21
    206e:	20 f0       	brcs	.+8      	; 0x2078 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    2070:	e4 0f       	add	r30, r20
    2072:	f5 1f       	adc	r31, r21
    2074:	e2 1b       	sub	r30, r18
    2076:	f3 0b       	sbc	r31, r19
    2078:	e8 1b       	sub	r30, r24
    207a:	f9 0b       	sbc	r31, r25
    207c:	a9 f0       	breq	.+42     	; 0x20a8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    207e:	d7 01       	movw	r26, r14
    2080:	2d 91       	ld	r18, X+
    2082:	3c 91       	ld	r19, X
    2084:	40 e0       	ldi	r20, 0x00	; 0
    2086:	50 e0       	ldi	r21, 0x00	; 0
    2088:	28 1b       	sub	r18, r24
    208a:	39 0b       	sbc	r19, r25
    208c:	41 09       	sbc	r20, r1
    208e:	51 09       	sbc	r21, r1
    2090:	a8 ee       	ldi	r26, 0xE8	; 232
    2092:	b3 e0       	ldi	r27, 0x03	; 3
    2094:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <__muluhisi3>
    2098:	9f 01       	movw	r18, r30
    209a:	40 e0       	ldi	r20, 0x00	; 0
    209c:	50 e0       	ldi	r21, 0x00	; 0
    209e:	0e 94 37 11 	call	0x226e	; 0x226e <__divmodsi4>
    20a2:	37 fd       	sbrc	r19, 7
    20a4:	0a c0       	rjmp	.+20     	; 0x20ba <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    20a6:	02 c0       	rjmp	.+4      	; 0x20ac <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    20a8:	20 e0       	ldi	r18, 0x00	; 0
    20aa:	30 e0       	ldi	r19, 0x00	; 0
    20ac:	29 3e       	cpi	r18, 0xE9	; 233
    20ae:	b3 e0       	ldi	r27, 0x03	; 3
    20b0:	3b 07       	cpc	r19, r27
    20b2:	2c f0       	brlt	.+10     	; 0x20be <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    20b4:	28 ee       	ldi	r18, 0xE8	; 232
    20b6:	33 e0       	ldi	r19, 0x03	; 3
    20b8:	02 c0       	rjmp	.+4      	; 0x20be <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    20ba:	20 e0       	ldi	r18, 0x00	; 0
    20bc:	30 e0       	ldi	r19, 0x00	; 0
    20be:	f7 01       	movw	r30, r14
    20c0:	21 93       	st	Z+, r18
    20c2:	31 93       	st	Z+, r19
    20c4:	7f 01       	movw	r14, r30
    20c6:	ff ef       	ldi	r31, 0xFF	; 255
    20c8:	cf 1a       	sub	r12, r31
    20ca:	df 0a       	sbc	r13, r31
    20cc:	0e 5f       	subi	r16, 0xFE	; 254
    20ce:	1f 4f       	sbci	r17, 0xFF	; 255
    20d0:	86 cf       	rjmp	.-244    	; 0x1fde <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    20d2:	cd b7       	in	r28, 0x3d	; 61
    20d4:	de b7       	in	r29, 0x3e	; 62
    20d6:	e9 e0       	ldi	r30, 0x09	; 9
    20d8:	0c 94 a3 11 	jmp	0x2346	; 0x2346 <__epilogue_restores__+0x12>

000020dc <_ZN16PololuQTRSensors8readLineEPjhh>:
    20dc:	a0 e0       	ldi	r26, 0x00	; 0
    20de:	b0 e0       	ldi	r27, 0x00	; 0
    20e0:	e4 e7       	ldi	r30, 0x74	; 116
    20e2:	f0 e1       	ldi	r31, 0x10	; 16
    20e4:	0c 94 7e 11 	jmp	0x22fc	; 0x22fc <__prologue_saves__>
    20e8:	ec 01       	movw	r28, r24
    20ea:	8b 01       	movw	r16, r22
    20ec:	82 2e       	mov	r8, r18
    20ee:	0e 94 c1 0f 	call	0x1f82	; 0x1f82 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    20f2:	28 84       	ldd	r2, Y+8	; 0x08
    20f4:	e8 01       	movw	r28, r16
    20f6:	41 2c       	mov	r4, r1
    20f8:	51 2c       	mov	r5, r1
    20fa:	32 01       	movw	r6, r4
    20fc:	00 e0       	ldi	r16, 0x00	; 0
    20fe:	10 e0       	ldi	r17, 0x00	; 0
    2100:	c1 2c       	mov	r12, r1
    2102:	d1 2c       	mov	r13, r1
    2104:	76 01       	movw	r14, r12
    2106:	31 2c       	mov	r3, r1
    2108:	91 2c       	mov	r9, r1
    210a:	58 ee       	ldi	r21, 0xE8	; 232
    210c:	a5 2e       	mov	r10, r21
    210e:	53 e0       	ldi	r21, 0x03	; 3
    2110:	b5 2e       	mov	r11, r21
    2112:	92 14       	cp	r9, r2
    2114:	21 f1       	breq	.+72     	; 0x215e <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    2116:	e9 91       	ld	r30, Y+
    2118:	f9 91       	ld	r31, Y+
    211a:	88 20       	and	r8, r8
    211c:	21 f0       	breq	.+8      	; 0x2126 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    211e:	c5 01       	movw	r24, r10
    2120:	8e 1b       	sub	r24, r30
    2122:	9f 0b       	sbc	r25, r31
    2124:	fc 01       	movw	r30, r24
    2126:	e9 3c       	cpi	r30, 0xC9	; 201
    2128:	f1 05       	cpc	r31, r1
    212a:	24 f4       	brge	.+8      	; 0x2134 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    212c:	e3 33       	cpi	r30, 0x33	; 51
    212e:	f1 05       	cpc	r31, r1
    2130:	74 f0       	brlt	.+28     	; 0x214e <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    2132:	02 c0       	rjmp	.+4      	; 0x2138 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    2134:	33 24       	eor	r3, r3
    2136:	33 94       	inc	r3
    2138:	df 01       	movw	r26, r30
    213a:	a3 01       	movw	r20, r6
    213c:	92 01       	movw	r18, r4
    213e:	0e 94 76 11 	call	0x22ec	; 0x22ec <__mulshisi3>
    2142:	c6 0e       	add	r12, r22
    2144:	d7 1e       	adc	r13, r23
    2146:	e8 1e       	adc	r14, r24
    2148:	f9 1e       	adc	r15, r25
    214a:	0e 0f       	add	r16, r30
    214c:	1f 1f       	adc	r17, r31
    214e:	93 94       	inc	r9
    2150:	98 ee       	ldi	r25, 0xE8	; 232
    2152:	49 0e       	add	r4, r25
    2154:	93 e0       	ldi	r25, 0x03	; 3
    2156:	59 1e       	adc	r5, r25
    2158:	61 1c       	adc	r6, r1
    215a:	71 1c       	adc	r7, r1
    215c:	da cf       	rjmp	.-76     	; 0x2112 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    215e:	31 10       	cpse	r3, r1
    2160:	1e c0       	rjmp	.+60     	; 0x219e <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    2162:	49 2d       	mov	r20, r9
    2164:	50 e0       	ldi	r21, 0x00	; 0
    2166:	41 50       	subi	r20, 0x01	; 1
    2168:	51 09       	sbc	r21, r1
    216a:	24 ef       	ldi	r18, 0xF4	; 244
    216c:	31 e0       	ldi	r19, 0x01	; 1
    216e:	42 9f       	mul	r20, r18
    2170:	c0 01       	movw	r24, r0
    2172:	43 9f       	mul	r20, r19
    2174:	90 0d       	add	r25, r0
    2176:	52 9f       	mul	r21, r18
    2178:	90 0d       	add	r25, r0
    217a:	11 24       	eor	r1, r1
    217c:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    2180:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    2184:	28 17       	cp	r18, r24
    2186:	39 07       	cpc	r19, r25
    2188:	b4 f0       	brlt	.+44     	; 0x21b6 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    218a:	88 ee       	ldi	r24, 0xE8	; 232
    218c:	93 e0       	ldi	r25, 0x03	; 3
    218e:	48 9f       	mul	r20, r24
    2190:	90 01       	movw	r18, r0
    2192:	49 9f       	mul	r20, r25
    2194:	30 0d       	add	r19, r0
    2196:	58 9f       	mul	r21, r24
    2198:	30 0d       	add	r19, r0
    219a:	11 24       	eor	r1, r1
    219c:	0e c0       	rjmp	.+28     	; 0x21ba <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    219e:	98 01       	movw	r18, r16
    21a0:	40 e0       	ldi	r20, 0x00	; 0
    21a2:	50 e0       	ldi	r21, 0x00	; 0
    21a4:	c7 01       	movw	r24, r14
    21a6:	b6 01       	movw	r22, r12
    21a8:	0e 94 15 11 	call	0x222a	; 0x222a <__udivmodsi4>
    21ac:	30 93 91 01 	sts	0x0191, r19	; 0x800191 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    21b0:	20 93 90 01 	sts	0x0190, r18	; 0x800190 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    21b4:	02 c0       	rjmp	.+4      	; 0x21ba <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    21b6:	20 e0       	ldi	r18, 0x00	; 0
    21b8:	30 e0       	ldi	r19, 0x00	; 0
    21ba:	c9 01       	movw	r24, r18
    21bc:	cd b7       	in	r28, 0x3d	; 61
    21be:	de b7       	in	r29, 0x3e	; 62
    21c0:	e2 e1       	ldi	r30, 0x12	; 18
    21c2:	0c 94 9a 11 	jmp	0x2334	; 0x2334 <__epilogue_restores__>

000021c6 <_ZN16PololuQTRSensorsD1Ev>:
    21c6:	cf 93       	push	r28
    21c8:	df 93       	push	r29
    21ca:	ec 01       	movw	r28, r24
    21cc:	8a 81       	ldd	r24, Y+2	; 0x02
    21ce:	9b 81       	ldd	r25, Y+3	; 0x03
    21d0:	00 97       	sbiw	r24, 0x00	; 0
    21d2:	11 f0       	breq	.+4      	; 0x21d8 <_ZN16PololuQTRSensorsD1Ev+0x12>
    21d4:	0e 94 4d 12 	call	0x249a	; 0x249a <free>
    21d8:	8e 81       	ldd	r24, Y+6	; 0x06
    21da:	9f 81       	ldd	r25, Y+7	; 0x07
    21dc:	00 97       	sbiw	r24, 0x00	; 0
    21de:	11 f0       	breq	.+4      	; 0x21e4 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    21e0:	0e 94 4d 12 	call	0x249a	; 0x249a <free>
    21e4:	88 81       	ld	r24, Y
    21e6:	99 81       	ldd	r25, Y+1	; 0x01
    21e8:	00 97       	sbiw	r24, 0x00	; 0
    21ea:	11 f0       	breq	.+4      	; 0x21f0 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    21ec:	0e 94 4d 12 	call	0x249a	; 0x249a <free>
    21f0:	8c 81       	ldd	r24, Y+4	; 0x04
    21f2:	9d 81       	ldd	r25, Y+5	; 0x05
    21f4:	00 97       	sbiw	r24, 0x00	; 0
    21f6:	11 f0       	breq	.+4      	; 0x21fc <_ZN16PololuQTRSensorsD1Ev+0x36>
    21f8:	0e 94 4d 12 	call	0x249a	; 0x249a <free>
    21fc:	df 91       	pop	r29
    21fe:	cf 91       	pop	r28
    2200:	08 95       	ret

00002202 <__udivmodhi4>:
    2202:	aa 1b       	sub	r26, r26
    2204:	bb 1b       	sub	r27, r27
    2206:	51 e1       	ldi	r21, 0x11	; 17
    2208:	07 c0       	rjmp	.+14     	; 0x2218 <__udivmodhi4_ep>

0000220a <__udivmodhi4_loop>:
    220a:	aa 1f       	adc	r26, r26
    220c:	bb 1f       	adc	r27, r27
    220e:	a6 17       	cp	r26, r22
    2210:	b7 07       	cpc	r27, r23
    2212:	10 f0       	brcs	.+4      	; 0x2218 <__udivmodhi4_ep>
    2214:	a6 1b       	sub	r26, r22
    2216:	b7 0b       	sbc	r27, r23

00002218 <__udivmodhi4_ep>:
    2218:	88 1f       	adc	r24, r24
    221a:	99 1f       	adc	r25, r25
    221c:	5a 95       	dec	r21
    221e:	a9 f7       	brne	.-22     	; 0x220a <__udivmodhi4_loop>
    2220:	80 95       	com	r24
    2222:	90 95       	com	r25
    2224:	bc 01       	movw	r22, r24
    2226:	cd 01       	movw	r24, r26
    2228:	08 95       	ret

0000222a <__udivmodsi4>:
    222a:	a1 e2       	ldi	r26, 0x21	; 33
    222c:	1a 2e       	mov	r1, r26
    222e:	aa 1b       	sub	r26, r26
    2230:	bb 1b       	sub	r27, r27
    2232:	fd 01       	movw	r30, r26
    2234:	0d c0       	rjmp	.+26     	; 0x2250 <__udivmodsi4_ep>

00002236 <__udivmodsi4_loop>:
    2236:	aa 1f       	adc	r26, r26
    2238:	bb 1f       	adc	r27, r27
    223a:	ee 1f       	adc	r30, r30
    223c:	ff 1f       	adc	r31, r31
    223e:	a2 17       	cp	r26, r18
    2240:	b3 07       	cpc	r27, r19
    2242:	e4 07       	cpc	r30, r20
    2244:	f5 07       	cpc	r31, r21
    2246:	20 f0       	brcs	.+8      	; 0x2250 <__udivmodsi4_ep>
    2248:	a2 1b       	sub	r26, r18
    224a:	b3 0b       	sbc	r27, r19
    224c:	e4 0b       	sbc	r30, r20
    224e:	f5 0b       	sbc	r31, r21

00002250 <__udivmodsi4_ep>:
    2250:	66 1f       	adc	r22, r22
    2252:	77 1f       	adc	r23, r23
    2254:	88 1f       	adc	r24, r24
    2256:	99 1f       	adc	r25, r25
    2258:	1a 94       	dec	r1
    225a:	69 f7       	brne	.-38     	; 0x2236 <__udivmodsi4_loop>
    225c:	60 95       	com	r22
    225e:	70 95       	com	r23
    2260:	80 95       	com	r24
    2262:	90 95       	com	r25
    2264:	9b 01       	movw	r18, r22
    2266:	ac 01       	movw	r20, r24
    2268:	bd 01       	movw	r22, r26
    226a:	cf 01       	movw	r24, r30
    226c:	08 95       	ret

0000226e <__divmodsi4>:
    226e:	05 2e       	mov	r0, r21
    2270:	97 fb       	bst	r25, 7
    2272:	1e f4       	brtc	.+6      	; 0x227a <__divmodsi4+0xc>
    2274:	00 94       	com	r0
    2276:	0e 94 4e 11 	call	0x229c	; 0x229c <__negsi2>
    227a:	57 fd       	sbrc	r21, 7
    227c:	07 d0       	rcall	.+14     	; 0x228c <__divmodsi4_neg2>
    227e:	0e 94 15 11 	call	0x222a	; 0x222a <__udivmodsi4>
    2282:	07 fc       	sbrc	r0, 7
    2284:	03 d0       	rcall	.+6      	; 0x228c <__divmodsi4_neg2>
    2286:	4e f4       	brtc	.+18     	; 0x229a <__divmodsi4_exit>
    2288:	0c 94 4e 11 	jmp	0x229c	; 0x229c <__negsi2>

0000228c <__divmodsi4_neg2>:
    228c:	50 95       	com	r21
    228e:	40 95       	com	r20
    2290:	30 95       	com	r19
    2292:	21 95       	neg	r18
    2294:	3f 4f       	sbci	r19, 0xFF	; 255
    2296:	4f 4f       	sbci	r20, 0xFF	; 255
    2298:	5f 4f       	sbci	r21, 0xFF	; 255

0000229a <__divmodsi4_exit>:
    229a:	08 95       	ret

0000229c <__negsi2>:
    229c:	90 95       	com	r25
    229e:	80 95       	com	r24
    22a0:	70 95       	com	r23
    22a2:	61 95       	neg	r22
    22a4:	7f 4f       	sbci	r23, 0xFF	; 255
    22a6:	8f 4f       	sbci	r24, 0xFF	; 255
    22a8:	9f 4f       	sbci	r25, 0xFF	; 255
    22aa:	08 95       	ret

000022ac <__tablejump2__>:
    22ac:	ee 0f       	add	r30, r30
    22ae:	ff 1f       	adc	r31, r31
    22b0:	05 90       	lpm	r0, Z+
    22b2:	f4 91       	lpm	r31, Z
    22b4:	e0 2d       	mov	r30, r0
    22b6:	09 94       	ijmp

000022b8 <__umulhisi3>:
    22b8:	a2 9f       	mul	r26, r18
    22ba:	b0 01       	movw	r22, r0
    22bc:	b3 9f       	mul	r27, r19
    22be:	c0 01       	movw	r24, r0
    22c0:	a3 9f       	mul	r26, r19
    22c2:	70 0d       	add	r23, r0
    22c4:	81 1d       	adc	r24, r1
    22c6:	11 24       	eor	r1, r1
    22c8:	91 1d       	adc	r25, r1
    22ca:	b2 9f       	mul	r27, r18
    22cc:	70 0d       	add	r23, r0
    22ce:	81 1d       	adc	r24, r1
    22d0:	11 24       	eor	r1, r1
    22d2:	91 1d       	adc	r25, r1
    22d4:	08 95       	ret

000022d6 <__muluhisi3>:
    22d6:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <__umulhisi3>
    22da:	a5 9f       	mul	r26, r21
    22dc:	90 0d       	add	r25, r0
    22de:	b4 9f       	mul	r27, r20
    22e0:	90 0d       	add	r25, r0
    22e2:	a4 9f       	mul	r26, r20
    22e4:	80 0d       	add	r24, r0
    22e6:	91 1d       	adc	r25, r1
    22e8:	11 24       	eor	r1, r1
    22ea:	08 95       	ret

000022ec <__mulshisi3>:
    22ec:	b7 ff       	sbrs	r27, 7
    22ee:	0c 94 6b 11 	jmp	0x22d6	; 0x22d6 <__muluhisi3>

000022f2 <__mulohisi3>:
    22f2:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <__muluhisi3>
    22f6:	82 1b       	sub	r24, r18
    22f8:	93 0b       	sbc	r25, r19
    22fa:	08 95       	ret

000022fc <__prologue_saves__>:
    22fc:	2f 92       	push	r2
    22fe:	3f 92       	push	r3
    2300:	4f 92       	push	r4
    2302:	5f 92       	push	r5
    2304:	6f 92       	push	r6
    2306:	7f 92       	push	r7
    2308:	8f 92       	push	r8
    230a:	9f 92       	push	r9
    230c:	af 92       	push	r10
    230e:	bf 92       	push	r11
    2310:	cf 92       	push	r12
    2312:	df 92       	push	r13
    2314:	ef 92       	push	r14
    2316:	ff 92       	push	r15
    2318:	0f 93       	push	r16
    231a:	1f 93       	push	r17
    231c:	cf 93       	push	r28
    231e:	df 93       	push	r29
    2320:	cd b7       	in	r28, 0x3d	; 61
    2322:	de b7       	in	r29, 0x3e	; 62
    2324:	ca 1b       	sub	r28, r26
    2326:	db 0b       	sbc	r29, r27
    2328:	0f b6       	in	r0, 0x3f	; 63
    232a:	f8 94       	cli
    232c:	de bf       	out	0x3e, r29	; 62
    232e:	0f be       	out	0x3f, r0	; 63
    2330:	cd bf       	out	0x3d, r28	; 61
    2332:	09 94       	ijmp

00002334 <__epilogue_restores__>:
    2334:	2a 88       	ldd	r2, Y+18	; 0x12
    2336:	39 88       	ldd	r3, Y+17	; 0x11
    2338:	48 88       	ldd	r4, Y+16	; 0x10
    233a:	5f 84       	ldd	r5, Y+15	; 0x0f
    233c:	6e 84       	ldd	r6, Y+14	; 0x0e
    233e:	7d 84       	ldd	r7, Y+13	; 0x0d
    2340:	8c 84       	ldd	r8, Y+12	; 0x0c
    2342:	9b 84       	ldd	r9, Y+11	; 0x0b
    2344:	aa 84       	ldd	r10, Y+10	; 0x0a
    2346:	b9 84       	ldd	r11, Y+9	; 0x09
    2348:	c8 84       	ldd	r12, Y+8	; 0x08
    234a:	df 80       	ldd	r13, Y+7	; 0x07
    234c:	ee 80       	ldd	r14, Y+6	; 0x06
    234e:	fd 80       	ldd	r15, Y+5	; 0x05
    2350:	0c 81       	ldd	r16, Y+4	; 0x04
    2352:	1b 81       	ldd	r17, Y+3	; 0x03
    2354:	aa 81       	ldd	r26, Y+2	; 0x02
    2356:	b9 81       	ldd	r27, Y+1	; 0x01
    2358:	ce 0f       	add	r28, r30
    235a:	d1 1d       	adc	r29, r1
    235c:	0f b6       	in	r0, 0x3f	; 63
    235e:	f8 94       	cli
    2360:	de bf       	out	0x3e, r29	; 62
    2362:	0f be       	out	0x3f, r0	; 63
    2364:	cd bf       	out	0x3d, r28	; 61
    2366:	ed 01       	movw	r28, r26
    2368:	08 95       	ret

0000236a <malloc>:
    236a:	0f 93       	push	r16
    236c:	1f 93       	push	r17
    236e:	cf 93       	push	r28
    2370:	df 93       	push	r29
    2372:	82 30       	cpi	r24, 0x02	; 2
    2374:	91 05       	cpc	r25, r1
    2376:	10 f4       	brcc	.+4      	; 0x237c <malloc+0x12>
    2378:	82 e0       	ldi	r24, 0x02	; 2
    237a:	90 e0       	ldi	r25, 0x00	; 0
    237c:	e0 91 a9 01 	lds	r30, 0x01A9	; 0x8001a9 <__flp>
    2380:	f0 91 aa 01 	lds	r31, 0x01AA	; 0x8001aa <__flp+0x1>
    2384:	20 e0       	ldi	r18, 0x00	; 0
    2386:	30 e0       	ldi	r19, 0x00	; 0
    2388:	a0 e0       	ldi	r26, 0x00	; 0
    238a:	b0 e0       	ldi	r27, 0x00	; 0
    238c:	30 97       	sbiw	r30, 0x00	; 0
    238e:	19 f1       	breq	.+70     	; 0x23d6 <malloc+0x6c>
    2390:	40 81       	ld	r20, Z
    2392:	51 81       	ldd	r21, Z+1	; 0x01
    2394:	02 81       	ldd	r16, Z+2	; 0x02
    2396:	13 81       	ldd	r17, Z+3	; 0x03
    2398:	48 17       	cp	r20, r24
    239a:	59 07       	cpc	r21, r25
    239c:	c8 f0       	brcs	.+50     	; 0x23d0 <malloc+0x66>
    239e:	84 17       	cp	r24, r20
    23a0:	95 07       	cpc	r25, r21
    23a2:	69 f4       	brne	.+26     	; 0x23be <malloc+0x54>
    23a4:	10 97       	sbiw	r26, 0x00	; 0
    23a6:	31 f0       	breq	.+12     	; 0x23b4 <malloc+0x4a>
    23a8:	12 96       	adiw	r26, 0x02	; 2
    23aa:	0c 93       	st	X, r16
    23ac:	12 97       	sbiw	r26, 0x02	; 2
    23ae:	13 96       	adiw	r26, 0x03	; 3
    23b0:	1c 93       	st	X, r17
    23b2:	27 c0       	rjmp	.+78     	; 0x2402 <malloc+0x98>
    23b4:	00 93 a9 01 	sts	0x01A9, r16	; 0x8001a9 <__flp>
    23b8:	10 93 aa 01 	sts	0x01AA, r17	; 0x8001aa <__flp+0x1>
    23bc:	22 c0       	rjmp	.+68     	; 0x2402 <malloc+0x98>
    23be:	21 15       	cp	r18, r1
    23c0:	31 05       	cpc	r19, r1
    23c2:	19 f0       	breq	.+6      	; 0x23ca <malloc+0x60>
    23c4:	42 17       	cp	r20, r18
    23c6:	53 07       	cpc	r21, r19
    23c8:	18 f4       	brcc	.+6      	; 0x23d0 <malloc+0x66>
    23ca:	9a 01       	movw	r18, r20
    23cc:	bd 01       	movw	r22, r26
    23ce:	ef 01       	movw	r28, r30
    23d0:	df 01       	movw	r26, r30
    23d2:	f8 01       	movw	r30, r16
    23d4:	db cf       	rjmp	.-74     	; 0x238c <malloc+0x22>
    23d6:	21 15       	cp	r18, r1
    23d8:	31 05       	cpc	r19, r1
    23da:	f9 f0       	breq	.+62     	; 0x241a <malloc+0xb0>
    23dc:	28 1b       	sub	r18, r24
    23de:	39 0b       	sbc	r19, r25
    23e0:	24 30       	cpi	r18, 0x04	; 4
    23e2:	31 05       	cpc	r19, r1
    23e4:	80 f4       	brcc	.+32     	; 0x2406 <malloc+0x9c>
    23e6:	8a 81       	ldd	r24, Y+2	; 0x02
    23e8:	9b 81       	ldd	r25, Y+3	; 0x03
    23ea:	61 15       	cp	r22, r1
    23ec:	71 05       	cpc	r23, r1
    23ee:	21 f0       	breq	.+8      	; 0x23f8 <malloc+0x8e>
    23f0:	fb 01       	movw	r30, r22
    23f2:	93 83       	std	Z+3, r25	; 0x03
    23f4:	82 83       	std	Z+2, r24	; 0x02
    23f6:	04 c0       	rjmp	.+8      	; 0x2400 <malloc+0x96>
    23f8:	90 93 aa 01 	sts	0x01AA, r25	; 0x8001aa <__flp+0x1>
    23fc:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <__flp>
    2400:	fe 01       	movw	r30, r28
    2402:	32 96       	adiw	r30, 0x02	; 2
    2404:	44 c0       	rjmp	.+136    	; 0x248e <malloc+0x124>
    2406:	fe 01       	movw	r30, r28
    2408:	e2 0f       	add	r30, r18
    240a:	f3 1f       	adc	r31, r19
    240c:	81 93       	st	Z+, r24
    240e:	91 93       	st	Z+, r25
    2410:	22 50       	subi	r18, 0x02	; 2
    2412:	31 09       	sbc	r19, r1
    2414:	39 83       	std	Y+1, r19	; 0x01
    2416:	28 83       	st	Y, r18
    2418:	3a c0       	rjmp	.+116    	; 0x248e <malloc+0x124>
    241a:	20 91 a7 01 	lds	r18, 0x01A7	; 0x8001a7 <__brkval>
    241e:	30 91 a8 01 	lds	r19, 0x01A8	; 0x8001a8 <__brkval+0x1>
    2422:	23 2b       	or	r18, r19
    2424:	41 f4       	brne	.+16     	; 0x2436 <malloc+0xcc>
    2426:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    242a:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    242e:	30 93 a8 01 	sts	0x01A8, r19	; 0x8001a8 <__brkval+0x1>
    2432:	20 93 a7 01 	sts	0x01A7, r18	; 0x8001a7 <__brkval>
    2436:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    243a:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    243e:	21 15       	cp	r18, r1
    2440:	31 05       	cpc	r19, r1
    2442:	41 f4       	brne	.+16     	; 0x2454 <malloc+0xea>
    2444:	2d b7       	in	r18, 0x3d	; 61
    2446:	3e b7       	in	r19, 0x3e	; 62
    2448:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    244c:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    2450:	24 1b       	sub	r18, r20
    2452:	35 0b       	sbc	r19, r21
    2454:	e0 91 a7 01 	lds	r30, 0x01A7	; 0x8001a7 <__brkval>
    2458:	f0 91 a8 01 	lds	r31, 0x01A8	; 0x8001a8 <__brkval+0x1>
    245c:	e2 17       	cp	r30, r18
    245e:	f3 07       	cpc	r31, r19
    2460:	a0 f4       	brcc	.+40     	; 0x248a <malloc+0x120>
    2462:	2e 1b       	sub	r18, r30
    2464:	3f 0b       	sbc	r19, r31
    2466:	28 17       	cp	r18, r24
    2468:	39 07       	cpc	r19, r25
    246a:	78 f0       	brcs	.+30     	; 0x248a <malloc+0x120>
    246c:	ac 01       	movw	r20, r24
    246e:	4e 5f       	subi	r20, 0xFE	; 254
    2470:	5f 4f       	sbci	r21, 0xFF	; 255
    2472:	24 17       	cp	r18, r20
    2474:	35 07       	cpc	r19, r21
    2476:	48 f0       	brcs	.+18     	; 0x248a <malloc+0x120>
    2478:	4e 0f       	add	r20, r30
    247a:	5f 1f       	adc	r21, r31
    247c:	50 93 a8 01 	sts	0x01A8, r21	; 0x8001a8 <__brkval+0x1>
    2480:	40 93 a7 01 	sts	0x01A7, r20	; 0x8001a7 <__brkval>
    2484:	81 93       	st	Z+, r24
    2486:	91 93       	st	Z+, r25
    2488:	02 c0       	rjmp	.+4      	; 0x248e <malloc+0x124>
    248a:	e0 e0       	ldi	r30, 0x00	; 0
    248c:	f0 e0       	ldi	r31, 0x00	; 0
    248e:	cf 01       	movw	r24, r30
    2490:	df 91       	pop	r29
    2492:	cf 91       	pop	r28
    2494:	1f 91       	pop	r17
    2496:	0f 91       	pop	r16
    2498:	08 95       	ret

0000249a <free>:
    249a:	cf 93       	push	r28
    249c:	df 93       	push	r29
    249e:	00 97       	sbiw	r24, 0x00	; 0
    24a0:	09 f4       	brne	.+2      	; 0x24a4 <free+0xa>
    24a2:	81 c0       	rjmp	.+258    	; 0x25a6 <free+0x10c>
    24a4:	fc 01       	movw	r30, r24
    24a6:	32 97       	sbiw	r30, 0x02	; 2
    24a8:	13 82       	std	Z+3, r1	; 0x03
    24aa:	12 82       	std	Z+2, r1	; 0x02
    24ac:	a0 91 a9 01 	lds	r26, 0x01A9	; 0x8001a9 <__flp>
    24b0:	b0 91 aa 01 	lds	r27, 0x01AA	; 0x8001aa <__flp+0x1>
    24b4:	10 97       	sbiw	r26, 0x00	; 0
    24b6:	81 f4       	brne	.+32     	; 0x24d8 <free+0x3e>
    24b8:	20 81       	ld	r18, Z
    24ba:	31 81       	ldd	r19, Z+1	; 0x01
    24bc:	82 0f       	add	r24, r18
    24be:	93 1f       	adc	r25, r19
    24c0:	20 91 a7 01 	lds	r18, 0x01A7	; 0x8001a7 <__brkval>
    24c4:	30 91 a8 01 	lds	r19, 0x01A8	; 0x8001a8 <__brkval+0x1>
    24c8:	28 17       	cp	r18, r24
    24ca:	39 07       	cpc	r19, r25
    24cc:	51 f5       	brne	.+84     	; 0x2522 <free+0x88>
    24ce:	f0 93 a8 01 	sts	0x01A8, r31	; 0x8001a8 <__brkval+0x1>
    24d2:	e0 93 a7 01 	sts	0x01A7, r30	; 0x8001a7 <__brkval>
    24d6:	67 c0       	rjmp	.+206    	; 0x25a6 <free+0x10c>
    24d8:	ed 01       	movw	r28, r26
    24da:	20 e0       	ldi	r18, 0x00	; 0
    24dc:	30 e0       	ldi	r19, 0x00	; 0
    24de:	ce 17       	cp	r28, r30
    24e0:	df 07       	cpc	r29, r31
    24e2:	40 f4       	brcc	.+16     	; 0x24f4 <free+0x5a>
    24e4:	4a 81       	ldd	r20, Y+2	; 0x02
    24e6:	5b 81       	ldd	r21, Y+3	; 0x03
    24e8:	9e 01       	movw	r18, r28
    24ea:	41 15       	cp	r20, r1
    24ec:	51 05       	cpc	r21, r1
    24ee:	f1 f0       	breq	.+60     	; 0x252c <free+0x92>
    24f0:	ea 01       	movw	r28, r20
    24f2:	f5 cf       	rjmp	.-22     	; 0x24de <free+0x44>
    24f4:	d3 83       	std	Z+3, r29	; 0x03
    24f6:	c2 83       	std	Z+2, r28	; 0x02
    24f8:	40 81       	ld	r20, Z
    24fa:	51 81       	ldd	r21, Z+1	; 0x01
    24fc:	84 0f       	add	r24, r20
    24fe:	95 1f       	adc	r25, r21
    2500:	c8 17       	cp	r28, r24
    2502:	d9 07       	cpc	r29, r25
    2504:	59 f4       	brne	.+22     	; 0x251c <free+0x82>
    2506:	88 81       	ld	r24, Y
    2508:	99 81       	ldd	r25, Y+1	; 0x01
    250a:	84 0f       	add	r24, r20
    250c:	95 1f       	adc	r25, r21
    250e:	02 96       	adiw	r24, 0x02	; 2
    2510:	91 83       	std	Z+1, r25	; 0x01
    2512:	80 83       	st	Z, r24
    2514:	8a 81       	ldd	r24, Y+2	; 0x02
    2516:	9b 81       	ldd	r25, Y+3	; 0x03
    2518:	93 83       	std	Z+3, r25	; 0x03
    251a:	82 83       	std	Z+2, r24	; 0x02
    251c:	21 15       	cp	r18, r1
    251e:	31 05       	cpc	r19, r1
    2520:	29 f4       	brne	.+10     	; 0x252c <free+0x92>
    2522:	f0 93 aa 01 	sts	0x01AA, r31	; 0x8001aa <__flp+0x1>
    2526:	e0 93 a9 01 	sts	0x01A9, r30	; 0x8001a9 <__flp>
    252a:	3d c0       	rjmp	.+122    	; 0x25a6 <free+0x10c>
    252c:	e9 01       	movw	r28, r18
    252e:	fb 83       	std	Y+3, r31	; 0x03
    2530:	ea 83       	std	Y+2, r30	; 0x02
    2532:	49 91       	ld	r20, Y+
    2534:	59 91       	ld	r21, Y+
    2536:	c4 0f       	add	r28, r20
    2538:	d5 1f       	adc	r29, r21
    253a:	ec 17       	cp	r30, r28
    253c:	fd 07       	cpc	r31, r29
    253e:	61 f4       	brne	.+24     	; 0x2558 <free+0xbe>
    2540:	80 81       	ld	r24, Z
    2542:	91 81       	ldd	r25, Z+1	; 0x01
    2544:	84 0f       	add	r24, r20
    2546:	95 1f       	adc	r25, r21
    2548:	02 96       	adiw	r24, 0x02	; 2
    254a:	e9 01       	movw	r28, r18
    254c:	99 83       	std	Y+1, r25	; 0x01
    254e:	88 83       	st	Y, r24
    2550:	82 81       	ldd	r24, Z+2	; 0x02
    2552:	93 81       	ldd	r25, Z+3	; 0x03
    2554:	9b 83       	std	Y+3, r25	; 0x03
    2556:	8a 83       	std	Y+2, r24	; 0x02
    2558:	e0 e0       	ldi	r30, 0x00	; 0
    255a:	f0 e0       	ldi	r31, 0x00	; 0
    255c:	12 96       	adiw	r26, 0x02	; 2
    255e:	8d 91       	ld	r24, X+
    2560:	9c 91       	ld	r25, X
    2562:	13 97       	sbiw	r26, 0x03	; 3
    2564:	00 97       	sbiw	r24, 0x00	; 0
    2566:	19 f0       	breq	.+6      	; 0x256e <free+0xd4>
    2568:	fd 01       	movw	r30, r26
    256a:	dc 01       	movw	r26, r24
    256c:	f7 cf       	rjmp	.-18     	; 0x255c <free+0xc2>
    256e:	8d 91       	ld	r24, X+
    2570:	9c 91       	ld	r25, X
    2572:	11 97       	sbiw	r26, 0x01	; 1
    2574:	9d 01       	movw	r18, r26
    2576:	2e 5f       	subi	r18, 0xFE	; 254
    2578:	3f 4f       	sbci	r19, 0xFF	; 255
    257a:	82 0f       	add	r24, r18
    257c:	93 1f       	adc	r25, r19
    257e:	20 91 a7 01 	lds	r18, 0x01A7	; 0x8001a7 <__brkval>
    2582:	30 91 a8 01 	lds	r19, 0x01A8	; 0x8001a8 <__brkval+0x1>
    2586:	28 17       	cp	r18, r24
    2588:	39 07       	cpc	r19, r25
    258a:	69 f4       	brne	.+26     	; 0x25a6 <free+0x10c>
    258c:	30 97       	sbiw	r30, 0x00	; 0
    258e:	29 f4       	brne	.+10     	; 0x259a <free+0x100>
    2590:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__flp+0x1>
    2594:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <__flp>
    2598:	02 c0       	rjmp	.+4      	; 0x259e <free+0x104>
    259a:	13 82       	std	Z+3, r1	; 0x03
    259c:	12 82       	std	Z+2, r1	; 0x02
    259e:	b0 93 a8 01 	sts	0x01A8, r27	; 0x8001a8 <__brkval+0x1>
    25a2:	a0 93 a7 01 	sts	0x01A7, r26	; 0x8001a7 <__brkval>
    25a6:	df 91       	pop	r29
    25a8:	cf 91       	pop	r28
    25aa:	08 95       	ret

000025ac <strncat>:
    25ac:	fb 01       	movw	r30, r22
    25ae:	dc 01       	movw	r26, r24
    25b0:	0d 90       	ld	r0, X+
    25b2:	00 20       	and	r0, r0
    25b4:	e9 f7       	brne	.-6      	; 0x25b0 <strncat+0x4>
    25b6:	11 97       	sbiw	r26, 0x01	; 1
    25b8:	41 50       	subi	r20, 0x01	; 1
    25ba:	50 40       	sbci	r21, 0x00	; 0
    25bc:	28 f0       	brcs	.+10     	; 0x25c8 <strncat+0x1c>
    25be:	01 90       	ld	r0, Z+
    25c0:	00 20       	and	r0, r0
    25c2:	0d 92       	st	X+, r0
    25c4:	c9 f7       	brne	.-14     	; 0x25b8 <strncat+0xc>
    25c6:	08 95       	ret
    25c8:	1c 92       	st	X, r1
    25ca:	08 95       	ret

000025cc <__do_global_dtors>:
    25cc:	10 e0       	ldi	r17, 0x00	; 0
    25ce:	cd e3       	ldi	r28, 0x3D	; 61
    25d0:	d0 e0       	ldi	r29, 0x00	; 0
    25d2:	04 c0       	rjmp	.+8      	; 0x25dc <__do_global_dtors+0x10>
    25d4:	fe 01       	movw	r30, r28
    25d6:	0e 94 56 11 	call	0x22ac	; 0x22ac <__tablejump2__>
    25da:	21 96       	adiw	r28, 0x01	; 1
    25dc:	ce 33       	cpi	r28, 0x3E	; 62
    25de:	d1 07       	cpc	r29, r17
    25e0:	c9 f7       	brne	.-14     	; 0x25d4 <__do_global_dtors+0x8>
    25e2:	f8 94       	cli

000025e4 <__stop_program>:
    25e4:	ff cf       	rjmp	.-2      	; 0x25e4 <__stop_program>
