
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  00001d3e  00001dd2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d3e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000070  00800138  00800138  00001e0a  2**0
                  ALLOC
  3 .stab         00005af0  00000000  00000000  00001e0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000084be  00000000  00000000  000078fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  0000fdba  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000fdfc  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 000000a0  00000000  00000000  0000fe3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   000014da  00000000  00000000  0000fedc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000993  00000000  00000000  000113b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00000d85  00000000  00000000  00011d49  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000130  00000000  00000000  00012ad0  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    000005c1  00000000  00000000  00012c00  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00000205  00000000  00000000  000131c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000070  00000000  00000000  000133c6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 45 00 	jmp	0x8a	; 0x8a <__dtors_end>
       4:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
       8:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
       c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      10:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      14:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      18:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      1c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      20:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      24:	0c 94 ed 06 	jmp	0xdda	; 0xdda <__vector_9>
      28:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      2c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      30:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      34:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      38:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      3c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      40:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      44:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      48:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      4c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      50:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      54:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      58:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      5c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      60:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      64:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      68:	46 03       	mulsu	r20, r22
      6a:	56 03       	mulsu	r21, r22
      6c:	11 03       	mulsu	r17, r17
      6e:	26 03       	mulsu	r18, r22
      70:	36 03       	mulsu	r19, r22
      72:	46 03       	mulsu	r20, r22
      74:	26 03       	mulsu	r18, r22
      76:	26 03       	mulsu	r18, r22
      78:	26 03       	mulsu	r18, r22

0000007a <__trampolines_end>:
      7a:	00 00       	nop
      7c:	00 00       	nop
      7e:	00 00       	nop
      80:	00 1f       	adc	r16, r16
      82:	1f 1f       	adc	r17, r31
      84:	1f 1f       	adc	r17, r31
      86:	1f 1f       	adc	r17, r31

00000088 <__ctors_end>:
      88:	b1 07       	cpc	r27, r17

0000008a <__dtors_end>:
      8a:	11 24       	eor	r1, r1
      8c:	1f be       	out	0x3f, r1	; 63
      8e:	cf ef       	ldi	r28, 0xFF	; 255
      90:	d8 e0       	ldi	r29, 0x08	; 8
      92:	de bf       	out	0x3e, r29	; 62
      94:	cd bf       	out	0x3d, r28	; 61

00000096 <__do_copy_data>:
      96:	11 e0       	ldi	r17, 0x01	; 1
      98:	a0 e0       	ldi	r26, 0x00	; 0
      9a:	b1 e0       	ldi	r27, 0x01	; 1
      9c:	ee e3       	ldi	r30, 0x3E	; 62
      9e:	fd e1       	ldi	r31, 0x1D	; 29
      a0:	02 c0       	rjmp	.+4      	; 0xa6 <__do_copy_data+0x10>
      a2:	05 90       	lpm	r0, Z+
      a4:	0d 92       	st	X+, r0
      a6:	a8 33       	cpi	r26, 0x38	; 56
      a8:	b1 07       	cpc	r27, r17
      aa:	d9 f7       	brne	.-10     	; 0xa2 <__do_copy_data+0xc>

000000ac <__do_clear_bss>:
      ac:	21 e0       	ldi	r18, 0x01	; 1
      ae:	a8 e3       	ldi	r26, 0x38	; 56
      b0:	b1 e0       	ldi	r27, 0x01	; 1
      b2:	01 c0       	rjmp	.+2      	; 0xb6 <.do_clear_bss_start>

000000b4 <.do_clear_bss_loop>:
      b4:	1d 92       	st	X+, r1

000000b6 <.do_clear_bss_start>:
      b6:	a8 3a       	cpi	r26, 0xA8	; 168
      b8:	b2 07       	cpc	r27, r18
      ba:	e1 f7       	brne	.-8      	; 0xb4 <.do_clear_bss_loop>
      bc:	0e 94 64 00 	call	0xc8	; 0xc8 <main>
      c0:	0c 94 92 0e 	jmp	0x1d24	; 0x1d24 <__do_global_dtors>

000000c4 <__bad_interrupt>:
      c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c8 <main>:
#include <avr/pgmspace.h>


int main()
{
	pololu_3pi_init(2000);
      c8:	80 ed       	ldi	r24, 0xD0	; 208
      ca:	97 e0       	ldi	r25, 0x07	; 7
      cc:	0e 94 ad 07 	call	0xf5a	; 0xf5a <pololu_3pi_init>
	initialize();
      d0:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <initialize>
	parcour();
      d4:	0e 94 04 03 	call	0x608	; 0x608 <parcour>
      d8:	80 e0       	ldi	r24, 0x00	; 0
      da:	90 e0       	ldi	r25, 0x00	; 0
      dc:	08 95       	ret

000000de <load_custom_characters>:
	0b11111
};

void load_custom_characters()
{
	lcd_load_custom_character(levels+0,0); // no offset, e.g. one bar
      de:	60 e0       	ldi	r22, 0x00	; 0
      e0:	8a e7       	ldi	r24, 0x7A	; 122
      e2:	90 e0       	ldi	r25, 0x00	; 0
      e4:	0e 94 f7 04 	call	0x9ee	; 0x9ee <lcd_load_custom_character>
	lcd_load_custom_character(levels+1,1); // two bars
      e8:	61 e0       	ldi	r22, 0x01	; 1
      ea:	8b e7       	ldi	r24, 0x7B	; 123
      ec:	90 e0       	ldi	r25, 0x00	; 0
      ee:	0e 94 f7 04 	call	0x9ee	; 0x9ee <lcd_load_custom_character>
	lcd_load_custom_character(levels+2,2); // etc...
      f2:	62 e0       	ldi	r22, 0x02	; 2
      f4:	8c e7       	ldi	r24, 0x7C	; 124
      f6:	90 e0       	ldi	r25, 0x00	; 0
      f8:	0e 94 f7 04 	call	0x9ee	; 0x9ee <lcd_load_custom_character>
	lcd_load_custom_character(levels+3,3);
      fc:	63 e0       	ldi	r22, 0x03	; 3
      fe:	8d e7       	ldi	r24, 0x7D	; 125
     100:	90 e0       	ldi	r25, 0x00	; 0
     102:	0e 94 f7 04 	call	0x9ee	; 0x9ee <lcd_load_custom_character>
	lcd_load_custom_character(levels+4,4);
     106:	64 e0       	ldi	r22, 0x04	; 4
     108:	8e e7       	ldi	r24, 0x7E	; 126
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	0e 94 f7 04 	call	0x9ee	; 0x9ee <lcd_load_custom_character>
	lcd_load_custom_character(levels+5,5);
     110:	65 e0       	ldi	r22, 0x05	; 5
     112:	8f e7       	ldi	r24, 0x7F	; 127
     114:	90 e0       	ldi	r25, 0x00	; 0
     116:	0e 94 f7 04 	call	0x9ee	; 0x9ee <lcd_load_custom_character>
	lcd_load_custom_character(levels+6,6);
     11a:	66 e0       	ldi	r22, 0x06	; 6
     11c:	80 e8       	ldi	r24, 0x80	; 128
     11e:	90 e0       	ldi	r25, 0x00	; 0
     120:	0e 94 f7 04 	call	0x9ee	; 0x9ee <lcd_load_custom_character>
	clear(); // the LCD must be cleared for the characters to take effect
     124:	0e 94 6a 05 	call	0xad4	; 0xad4 <clear>
     128:	08 95       	ret

0000012a <display_readings>:
}

void display_readings(const unsigned int *calibrated_values)
{
     12a:	ef 92       	push	r14
     12c:	ff 92       	push	r15
     12e:	1f 93       	push	r17
     130:	cf 93       	push	r28
     132:	df 93       	push	r29
     134:	cd b7       	in	r28, 0x3d	; 61
     136:	de b7       	in	r29, 0x3e	; 62
     138:	2a 97       	sbiw	r28, 0x0a	; 10
     13a:	0f b6       	in	r0, 0x3f	; 63
     13c:	f8 94       	cli
     13e:	de bf       	out	0x3e, r29	; 62
     140:	0f be       	out	0x3f, r0	; 63
     142:	cd bf       	out	0x3d, r28	; 61
     144:	7c 01       	movw	r14, r24
	unsigned char i;
	
	for(i=0;i<5;i++) {
     146:	10 e0       	ldi	r17, 0x00	; 0
     148:	25 c0       	rjmp	.+74     	; 0x194 <display_readings+0x6a>
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};		// Initialize the array of characters that we will use for the
     14a:	8a e0       	ldi	r24, 0x0A	; 10
     14c:	ea e0       	ldi	r30, 0x0A	; 10
     14e:	f1 e0       	ldi	r31, 0x01	; 1
     150:	de 01       	movw	r26, r28
     152:	11 96       	adiw	r26, 0x01	; 1
     154:	01 90       	ld	r0, Z+
     156:	0d 92       	st	X+, r0
     158:	8a 95       	dec	r24
     15a:	e1 f7       	brne	.-8      	; 0x154 <display_readings+0x2a>
		char c = display_characters[calibrated_values[i]/101];			    // The variable c will have values from 0 to 9, since
     15c:	e1 2f       	mov	r30, r17
     15e:	f0 e0       	ldi	r31, 0x00	; 0
     160:	ee 0f       	add	r30, r30
     162:	ff 1f       	adc	r31, r31
     164:	ee 0d       	add	r30, r14
     166:	ff 1d       	adc	r31, r15
     168:	20 81       	ld	r18, Z
     16a:	31 81       	ldd	r19, Z+1	; 0x01
     16c:	a7 e4       	ldi	r26, 0x47	; 71
     16e:	b4 e1       	ldi	r27, 0x14	; 20
     170:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <__umulhisi3>
     174:	96 95       	lsr	r25
     176:	87 95       	ror	r24
     178:	96 95       	lsr	r25
     17a:	87 95       	ror	r24
     17c:	96 95       	lsr	r25
     17e:	87 95       	ror	r24
     180:	e1 e0       	ldi	r30, 0x01	; 1
     182:	f0 e0       	ldi	r31, 0x00	; 0
     184:	ec 0f       	add	r30, r28
     186:	fd 1f       	adc	r31, r29
     188:	e8 0f       	add	r30, r24
     18a:	f9 1f       	adc	r31, r25
		print_character(c);
     18c:	80 81       	ld	r24, Z
     18e:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <print_character>

void display_readings(const unsigned int *calibrated_values)
{
	unsigned char i;
	
	for(i=0;i<5;i++) {
     192:	1f 5f       	subi	r17, 0xFF	; 255
     194:	15 30       	cpi	r17, 0x05	; 5
     196:	c8 f2       	brcs	.-78     	; 0x14a <display_readings+0x20>
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};		// Initialize the array of characters that we will use for the
		char c = display_characters[calibrated_values[i]/101];			    // The variable c will have values from 0 to 9, since
		print_character(c);
	}
}
     198:	2a 96       	adiw	r28, 0x0a	; 10
     19a:	0f b6       	in	r0, 0x3f	; 63
     19c:	f8 94       	cli
     19e:	de bf       	out	0x3e, r29	; 62
     1a0:	0f be       	out	0x3f, r0	; 63
     1a2:	cd bf       	out	0x3d, r28	; 61
     1a4:	df 91       	pop	r29
     1a6:	cf 91       	pop	r28
     1a8:	1f 91       	pop	r17
     1aa:	ff 90       	pop	r15
     1ac:	ef 90       	pop	r14
     1ae:	08 95       	ret

000001b0 <initialize>:

void initialize()
{
     1b0:	0f 93       	push	r16
     1b2:	1f 93       	push	r17
     1b4:	cf 93       	push	r28
     1b6:	df 93       	push	r29
     1b8:	cd b7       	in	r28, 0x3d	; 61
     1ba:	de b7       	in	r29, 0x3e	; 62
     1bc:	2a 97       	sbiw	r28, 0x0a	; 10
     1be:	0f b6       	in	r0, 0x3f	; 63
     1c0:	f8 94       	cli
     1c2:	de bf       	out	0x3e, r29	; 62
     1c4:	0f be       	out	0x3f, r0	; 63
     1c6:	cd bf       	out	0x3d, r28	; 61
	unsigned int counter; // used as a simple timer
	unsigned int sensors[5]; // an array to hold sensor values
	
	pololu_3pi_init(2000);
     1c8:	80 ed       	ldi	r24, 0xD0	; 208
     1ca:	97 e0       	ldi	r25, 0x07	; 7
     1cc:	0e 94 ad 07 	call	0xf5a	; 0xf5a <pololu_3pi_init>
	load_custom_characters(); // load the custom characters
     1d0:	0e 94 6f 00 	call	0xde	; 0xde <load_custom_characters>
	
	while(!button_is_pressed(BUTTON_B))
     1d4:	1b c0       	rjmp	.+54     	; 0x20c <initialize+0x5c>
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     1d6:	0e 94 37 04 	call	0x86e	; 0x86e <read_battery_millivolts_3pi>
     1da:	8c 01       	movw	r16, r24
	{
		int bat = read_battery_millivolts();
		
		clear();
     1dc:	0e 94 6a 05 	call	0xad4	; 0xad4 <clear>
		print_long(bat);
     1e0:	b8 01       	movw	r22, r16
     1e2:	11 0f       	add	r17, r17
     1e4:	88 0b       	sbc	r24, r24
     1e6:	99 0b       	sbc	r25, r25
     1e8:	0e 94 ce 05 	call	0xb9c	; 0xb9c <print_long>
		print("mV");
     1ec:	89 e1       	ldi	r24, 0x19	; 25
     1ee:	91 e0       	ldi	r25, 0x01	; 1
     1f0:	0e 94 79 05 	call	0xaf2	; 0xaf2 <print>
		lcd_goto_xy(0,1);
     1f4:	61 e0       	ldi	r22, 0x01	; 1
     1f6:	80 e0       	ldi	r24, 0x00	; 0
     1f8:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <lcd_goto_xy>
		print("Press B");
     1fc:	8c e1       	ldi	r24, 0x1C	; 28
     1fe:	91 e0       	ldi	r25, 0x01	; 1
     200:	0e 94 79 05 	call	0xaf2	; 0xaf2 <print>
		
		delay_ms(100);
     204:	84 e6       	ldi	r24, 0x64	; 100
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	0e 94 35 07 	call	0xe6a	; 0xe6a <delay_ms>
	unsigned int sensors[5]; // an array to hold sensor values
	
	pololu_3pi_init(2000);
	load_custom_characters(); // load the custom characters
	
	while(!button_is_pressed(BUTTON_B))
     20c:	80 e1       	ldi	r24, 0x10	; 16
     20e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <button_is_pressed>
     212:	88 23       	and	r24, r24
     214:	01 f3       	breq	.-64     	; 0x1d6 <initialize+0x26>
		print("Press B");
		
		delay_ms(100);
	}
	
	wait_for_button_release(BUTTON_B);
     216:	80 e1       	ldi	r24, 0x10	; 16
     218:	0e 94 d6 06 	call	0xdac	; 0xdac <wait_for_button_release>
	delay_ms(1000);
     21c:	88 ee       	ldi	r24, 0xE8	; 232
     21e:	93 e0       	ldi	r25, 0x03	; 3
     220:	0e 94 35 07 	call	0xe6a	; 0xe6a <delay_ms>

	for(counter=0;counter<80;counter++)
     224:	00 e0       	ldi	r16, 0x00	; 0
     226:	10 e0       	ldi	r17, 0x00	; 0
     228:	1a c0       	rjmp	.+52     	; 0x25e <initialize+0xae>
	{
		if(counter < 20 || counter >= 60)
     22a:	c8 01       	movw	r24, r16
     22c:	44 97       	sbiw	r24, 0x14	; 20
     22e:	88 97       	sbiw	r24, 0x28	; 40
     230:	38 f0       	brcs	.+14     	; 0x240 <initialize+0x90>
		set_motors(40,-40);
     232:	68 ed       	ldi	r22, 0xD8	; 216
     234:	7f ef       	ldi	r23, 0xFF	; 255
     236:	88 e2       	ldi	r24, 0x28	; 40
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
     23e:	06 c0       	rjmp	.+12     	; 0x24c <initialize+0x9c>
		else
		set_motors(-40,40);
     240:	68 e2       	ldi	r22, 0x28	; 40
     242:	70 e0       	ldi	r23, 0x00	; 0
     244:	88 ed       	ldi	r24, 0xD8	; 216
     246:	9f ef       	ldi	r25, 0xFF	; 255
     248:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
		calibrate_line_sensors(IR_EMITTERS_ON);
     24c:	81 e0       	ldi	r24, 0x01	; 1
     24e:	0e 94 71 07 	call	0xee2	; 0xee2 <calibrate_line_sensors>

		delay_ms(20);
     252:	84 e1       	ldi	r24, 0x14	; 20
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	0e 94 35 07 	call	0xe6a	; 0xe6a <delay_ms>
	}
	
	wait_for_button_release(BUTTON_B);
	delay_ms(1000);

	for(counter=0;counter<80;counter++)
     25a:	0f 5f       	subi	r16, 0xFF	; 255
     25c:	1f 4f       	sbci	r17, 0xFF	; 255
     25e:	00 35       	cpi	r16, 0x50	; 80
     260:	11 05       	cpc	r17, r1
     262:	18 f3       	brcs	.-58     	; 0x22a <initialize+0x7a>
		set_motors(-40,40);
		calibrate_line_sensors(IR_EMITTERS_ON);

		delay_ms(20);
	}
	set_motors(0,0);
     264:	60 e0       	ldi	r22, 0x00	; 0
     266:	70 e0       	ldi	r23, 0x00	; 0
     268:	80 e0       	ldi	r24, 0x00	; 0
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
	
	// Display calibrated values as a bar graph.
	while(!button_is_pressed(BUTTON_B))
     270:	19 c0       	rjmp	.+50     	; 0x2a4 <initialize+0xf4>
	{
		// Read the sensor values and get the position measurement.
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     272:	61 e0       	ldi	r22, 0x01	; 1
     274:	ce 01       	movw	r24, r28
     276:	01 96       	adiw	r24, 0x01	; 1
     278:	0e 94 77 07 	call	0xeee	; 0xeee <read_line>
     27c:	8c 01       	movw	r16, r24
		// Display the position measurement, which will go from 0
		// (when the leftmost sensor is over the line) to 4000 (when
		// the rightmost sensor is over the line) on the 3pi, along
		// with a bar graph of the sensor readings.  This allows you
		// to make sure the robot is ready to go.
		clear();
     27e:	0e 94 6a 05 	call	0xad4	; 0xad4 <clear>
		print_long(position);
     282:	b8 01       	movw	r22, r16
     284:	80 e0       	ldi	r24, 0x00	; 0
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	0e 94 ce 05 	call	0xb9c	; 0xb9c <print_long>
		lcd_goto_xy(0,1);
     28c:	61 e0       	ldi	r22, 0x01	; 1
     28e:	80 e0       	ldi	r24, 0x00	; 0
     290:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <lcd_goto_xy>
		display_readings(sensors);
     294:	ce 01       	movw	r24, r28
     296:	01 96       	adiw	r24, 0x01	; 1
     298:	0e 94 95 00 	call	0x12a	; 0x12a <display_readings>
		
		delay_ms(100);
     29c:	84 e6       	ldi	r24, 0x64	; 100
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	0e 94 35 07 	call	0xe6a	; 0xe6a <delay_ms>
		delay_ms(20);
	}
	set_motors(0,0);
	
	// Display calibrated values as a bar graph.
	while(!button_is_pressed(BUTTON_B))
     2a4:	80 e1       	ldi	r24, 0x10	; 16
     2a6:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <button_is_pressed>
     2aa:	88 23       	and	r24, r24
     2ac:	11 f3       	breq	.-60     	; 0x272 <initialize+0xc2>
		lcd_goto_xy(0,1);
		display_readings(sensors);
		
		delay_ms(100);
	}
	wait_for_button_release(BUTTON_B);
     2ae:	80 e1       	ldi	r24, 0x10	; 16
     2b0:	0e 94 d6 06 	call	0xdac	; 0xdac <wait_for_button_release>
	
	clear();
     2b4:	0e 94 6a 05 	call	0xad4	; 0xad4 <clear>
	
	
}
     2b8:	2a 96       	adiw	r28, 0x0a	; 10
     2ba:	0f b6       	in	r0, 0x3f	; 63
     2bc:	f8 94       	cli
     2be:	de bf       	out	0x3e, r29	; 62
     2c0:	0f be       	out	0x3f, r0	; 63
     2c2:	cd bf       	out	0x3d, r28	; 61
     2c4:	df 91       	pop	r29
     2c6:	cf 91       	pop	r28
     2c8:	1f 91       	pop	r17
     2ca:	0f 91       	pop	r16
     2cc:	08 95       	ret

000002ce <inch>:

void inch(){
	set_motors(50,50);
     2ce:	62 e3       	ldi	r22, 0x32	; 50
     2d0:	70 e0       	ldi	r23, 0x00	; 0
     2d2:	82 e3       	ldi	r24, 0x32	; 50
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     2da:	86 e9       	ldi	r24, 0x96	; 150
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	0e 94 35 07 	call	0xe6a	; 0xe6a <delay_ms>
	delay(150);
	set_motors(0,0);
     2e2:	60 e0       	ldi	r22, 0x00	; 0
     2e4:	70 e0       	ldi	r23, 0x00	; 0
     2e6:	80 e0       	ldi	r24, 0x00	; 0
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
     2ee:	08 95       	ret

000002f0 <motorControl>:
		
	}
}


void motorControl(char x){
     2f0:	cf 93       	push	r28
     2f2:	c8 2f       	mov	r28, r24
	read_line(sensors,IR_EMITTERS_ON);
     2f4:	61 e0       	ldi	r22, 0x01	; 1
     2f6:	8a e9       	ldi	r24, 0x9A	; 154
     2f8:	91 e0       	ldi	r25, 0x01	; 1
     2fa:	0e 94 77 07 	call	0xeee	; 0xeee <read_line>
	
	if(x == 'N')
     2fe:	ce 34       	cpi	r28, 0x4E	; 78
     300:	39 f4       	brne	.+14     	; 0x310 <motorControl+0x20>
	set_motors(0,0);
     302:	60 e0       	ldi	r22, 0x00	; 0
     304:	70 e0       	ldi	r23, 0x00	; 0
     306:	80 e0       	ldi	r24, 0x00	; 0
     308:	90 e0       	ldi	r25, 0x00	; 0
     30a:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
     30e:	b1 c0       	rjmp	.+354    	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
	
	
	else if(x == 'L'){										//turn left
     310:	cc 34       	cpi	r28, 0x4C	; 76
     312:	09 f5       	brne	.+66     	; 0x356 <motorControl+0x66>
		set_motors(-50,50);
     314:	62 e3       	ldi	r22, 0x32	; 50
     316:	70 e0       	ldi	r23, 0x00	; 0
     318:	8e ec       	ldi	r24, 0xCE	; 206
     31a:	9f ef       	ldi	r25, 0xFF	; 255
     31c:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
		while (sensors[2] >=500){
     320:	05 c0       	rjmp	.+10     	; 0x32c <motorControl+0x3c>
			read_line(sensors,IR_EMITTERS_ON);
     322:	61 e0       	ldi	r22, 0x01	; 1
     324:	8a e9       	ldi	r24, 0x9A	; 154
     326:	91 e0       	ldi	r25, 0x01	; 1
     328:	0e 94 77 07 	call	0xeee	; 0xeee <read_line>
	set_motors(0,0);
	
	
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
     32c:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     330:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     334:	84 3f       	cpi	r24, 0xF4	; 244
     336:	91 40       	sbci	r25, 0x01	; 1
     338:	a0 f7       	brcc	.-24     	; 0x322 <motorControl+0x32>
     33a:	05 c0       	rjmp	.+10     	; 0x346 <motorControl+0x56>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     33c:	61 e0       	ldi	r22, 0x01	; 1
     33e:	8a e9       	ldi	r24, 0x9A	; 154
     340:	91 e0       	ldi	r25, 0x01	; 1
     342:	0e 94 77 07 	call	0xeee	; 0xeee <read_line>
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     346:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     34a:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     34e:	85 3f       	cpi	r24, 0xF5	; 245
     350:	91 40       	sbci	r25, 0x01	; 1
     352:	a0 f3       	brcs	.-24     	; 0x33c <motorControl+0x4c>
     354:	8e c0       	rjmp	.+284    	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'R'){									//turn right
     356:	c2 35       	cpi	r28, 0x52	; 82
     358:	09 f5       	brne	.+66     	; 0x39c <motorControl+0xac>
		set_motors(50,-50);
     35a:	6e ec       	ldi	r22, 0xCE	; 206
     35c:	7f ef       	ldi	r23, 0xFF	; 255
     35e:	82 e3       	ldi	r24, 0x32	; 50
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
		while (sensors[2] >=500){
     366:	05 c0       	rjmp	.+10     	; 0x372 <motorControl+0x82>
			read_line(sensors,IR_EMITTERS_ON);
     368:	61 e0       	ldi	r22, 0x01	; 1
     36a:	8a e9       	ldi	r24, 0x9A	; 154
     36c:	91 e0       	ldi	r25, 0x01	; 1
     36e:	0e 94 77 07 	call	0xeee	; 0xeee <read_line>
		}
	}
	
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
     372:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     376:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     37a:	84 3f       	cpi	r24, 0xF4	; 244
     37c:	91 40       	sbci	r25, 0x01	; 1
     37e:	a0 f7       	brcc	.-24     	; 0x368 <motorControl+0x78>
     380:	05 c0       	rjmp	.+10     	; 0x38c <motorControl+0x9c>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     382:	61 e0       	ldi	r22, 0x01	; 1
     384:	8a e9       	ldi	r24, 0x9A	; 154
     386:	91 e0       	ldi	r25, 0x01	; 1
     388:	0e 94 77 07 	call	0xeee	; 0xeee <read_line>
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     38c:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     390:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     394:	85 3f       	cpi	r24, 0xF5	; 245
     396:	91 40       	sbci	r25, 0x01	; 1
     398:	a0 f3       	brcs	.-24     	; 0x382 <motorControl+0x92>
     39a:	6b c0       	rjmp	.+214    	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'S'){									//drive straight and corrects the adjusment of the robot if it aint straight
     39c:	c3 35       	cpi	r28, 0x53	; 83
     39e:	89 f5       	brne	.+98     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
		set_motors(50,50);
     3a0:	62 e3       	ldi	r22, 0x32	; 50
     3a2:	70 e0       	ldi	r23, 0x00	; 0
     3a4:	82 e3       	ldi	r24, 0x32	; 50
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
		
		if (sensors[3] >=400  && sensors[4] <=400 )
     3ac:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x6>
     3b0:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x7>
     3b4:	80 39       	cpi	r24, 0x90	; 144
     3b6:	91 40       	sbci	r25, 0x01	; 1
     3b8:	68 f0       	brcs	.+26     	; 0x3d4 <motorControl+0xe4>
     3ba:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <sensors+0x8>
     3be:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <sensors+0x9>
     3c2:	81 39       	cpi	r24, 0x91	; 145
     3c4:	91 40       	sbci	r25, 0x01	; 1
     3c6:	30 f4       	brcc	.+12     	; 0x3d4 <motorControl+0xe4>
		set_motors(100,40);
     3c8:	68 e2       	ldi	r22, 0x28	; 40
     3ca:	70 e0       	ldi	r23, 0x00	; 0
     3cc:	84 e6       	ldi	r24, 0x64	; 100
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
		if (sensors[1] >=400 && sensors[0] <=400  )
     3d4:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors+0x2>
     3d8:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x3>
     3dc:	80 39       	cpi	r24, 0x90	; 144
     3de:	91 40       	sbci	r25, 0x01	; 1
     3e0:	08 f4       	brcc	.+2      	; 0x3e4 <motorControl+0xf4>
     3e2:	47 c0       	rjmp	.+142    	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
     3e4:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <sensors>
     3e8:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <sensors+0x1>
     3ec:	81 39       	cpi	r24, 0x91	; 145
     3ee:	91 40       	sbci	r25, 0x01	; 1
     3f0:	08 f0       	brcs	.+2      	; 0x3f4 <motorControl+0x104>
     3f2:	3f c0       	rjmp	.+126    	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
		set_motors(40,100);
     3f4:	64 e6       	ldi	r22, 0x64	; 100
     3f6:	70 e0       	ldi	r23, 0x00	; 0
     3f8:	88 e2       	ldi	r24, 0x28	; 40
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
     400:	38 c0       	rjmp	.+112    	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
	}
	
	else if(x == 'B'){									// reverse
     402:	c2 34       	cpi	r28, 0x42	; 66
     404:	09 f5       	brne	.+66     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
		set_motors(-50,-50);
     406:	6e ec       	ldi	r22, 0xCE	; 206
     408:	7f ef       	ldi	r23, 0xFF	; 255
     40a:	8e ec       	ldi	r24, 0xCE	; 206
     40c:	9f ef       	ldi	r25, 0xFF	; 255
     40e:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
		if (sensors[3] >=400)
     412:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x6>
     416:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x7>
     41a:	80 39       	cpi	r24, 0x90	; 144
     41c:	91 40       	sbci	r25, 0x01	; 1
     41e:	30 f0       	brcs	.+12     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
		set_motors(-50,-55);
     420:	69 ec       	ldi	r22, 0xC9	; 201
     422:	7f ef       	ldi	r23, 0xFF	; 255
     424:	8e ec       	ldi	r24, 0xCE	; 206
     426:	9f ef       	ldi	r25, 0xFF	; 255
     428:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
		if (sensors[1] >=400)
     42c:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors+0x2>
     430:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x3>
     434:	80 39       	cpi	r24, 0x90	; 144
     436:	91 40       	sbci	r25, 0x01	; 1
     438:	e0 f0       	brcs	.+56     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
		set_motors(-55,-50);
     43a:	6e ec       	ldi	r22, 0xCE	; 206
     43c:	7f ef       	ldi	r23, 0xFF	; 255
     43e:	89 ec       	ldi	r24, 0xC9	; 201
     440:	9f ef       	ldi	r25, 0xFF	; 255
     442:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
     446:	15 c0       	rjmp	.+42     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
	}
	else if(x == 'T'){
     448:	c4 35       	cpi	r28, 0x54	; 84
     44a:	99 f4       	brne	.+38     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
		set_motors(-75,75);
     44c:	6b e4       	ldi	r22, 0x4B	; 75
     44e:	70 e0       	ldi	r23, 0x00	; 0
     450:	85 eb       	ldi	r24, 0xB5	; 181
     452:	9f ef       	ldi	r25, 0xFF	; 255
     454:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
		while (sensors[2] >=500){
     458:	05 c0       	rjmp	.+10     	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
			read_line(sensors,IR_EMITTERS_ON);
     45a:	61 e0       	ldi	r22, 0x01	; 1
     45c:	8a e9       	ldi	r24, 0x9A	; 154
     45e:	91 e0       	ldi	r25, 0x01	; 1
     460:	0e 94 77 07 	call	0xeee	; 0xeee <read_line>
		if (sensors[1] >=400)
		set_motors(-55,-50);
	}
	else if(x == 'T'){
		set_motors(-75,75);
		while (sensors[2] >=500){
     464:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     468:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     46c:	84 3f       	cpi	r24, 0xF4	; 244
     46e:	91 40       	sbci	r25, 0x01	; 1
     470:	a0 f7       	brcc	.-24     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
     472:	cf 91       	pop	r28
     474:	08 95       	ret

00000476 <direction>:
	set_motors(0,0);
}

char direction(){																											// function that returns the type of junction it detects
	while(1){																												// >= 500 = black line		<=500 = white
		read_line(sensors,IR_EMITTERS_ON);
     476:	61 e0       	ldi	r22, 0x01	; 1
     478:	8a e9       	ldi	r24, 0x9A	; 154
     47a:	91 e0       	ldi	r25, 0x01	; 1
     47c:	0e 94 77 07 	call	0xeee	; 0xeee <read_line>
		
		if (sensors[1] >=500 && sensors[3] >= 500){																			// this checks if its a X junction or a T junction
     480:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors+0x2>
     484:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x3>
     488:	84 3f       	cpi	r24, 0xF4	; 244
     48a:	21 e0       	ldi	r18, 0x01	; 1
     48c:	92 07       	cpc	r25, r18
     48e:	c0 f0       	brcs	.+48     	; 0x4c0 <direction+0x4a>
     490:	20 91 a0 01 	lds	r18, 0x01A0	; 0x8001a0 <sensors+0x6>
     494:	30 91 a1 01 	lds	r19, 0x01A1	; 0x8001a1 <sensors+0x7>
     498:	24 3f       	cpi	r18, 0xF4	; 244
     49a:	31 40       	sbci	r19, 0x01	; 1
     49c:	88 f0       	brcs	.+34     	; 0x4c0 <direction+0x4a>
			inch();
     49e:	0e 94 67 01 	call	0x2ce	; 0x2ce <inch>
			read_line(sensors,IR_EMITTERS_ON);
     4a2:	61 e0       	ldi	r22, 0x01	; 1
     4a4:	8a e9       	ldi	r24, 0x9A	; 154
     4a6:	91 e0       	ldi	r25, 0x01	; 1
     4a8:	0e 94 77 07 	call	0xeee	; 0xeee <read_line>
			
			if (sensors[2] >=500)
     4ac:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     4b0:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     4b4:	84 3f       	cpi	r24, 0xF4	; 244
     4b6:	91 40       	sbci	r25, 0x01	; 1
     4b8:	08 f4       	brcc	.+2      	; 0x4bc <direction+0x46>
     4ba:	90 c0       	rjmp	.+288    	; 0x5dc <direction+0x166>
			return X_junction;
     4bc:	88 e0       	ldi	r24, 0x08	; 8
     4be:	08 95       	ret
			else
			return T_junction;
		}
		
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
     4c0:	84 3f       	cpi	r24, 0xF4	; 244
     4c2:	21 e0       	ldi	r18, 0x01	; 1
     4c4:	92 07       	cpc	r25, r18
     4c6:	00 f1       	brcs	.+64     	; 0x508 <direction+0x92>
     4c8:	20 91 9a 01 	lds	r18, 0x019A	; 0x80019a <sensors>
     4cc:	30 91 9b 01 	lds	r19, 0x019B	; 0x80019b <sensors+0x1>
     4d0:	24 3f       	cpi	r18, 0xF4	; 244
     4d2:	31 40       	sbci	r19, 0x01	; 1
     4d4:	c8 f0       	brcs	.+50     	; 0x508 <direction+0x92>
			inch();
     4d6:	0e 94 67 01 	call	0x2ce	; 0x2ce <inch>
			read_line(sensors,IR_EMITTERS_ON);
     4da:	61 e0       	ldi	r22, 0x01	; 1
     4dc:	8a e9       	ldi	r24, 0x9A	; 154
     4de:	91 e0       	ldi	r25, 0x01	; 1
     4e0:	0e 94 77 07 	call	0xeee	; 0xeee <read_line>
			
			if (sensors[2] >= 500 || sensors[3] >=500)
     4e4:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     4e8:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     4ec:	84 3f       	cpi	r24, 0xF4	; 244
     4ee:	91 40       	sbci	r25, 0x01	; 1
     4f0:	08 f0       	brcs	.+2      	; 0x4f4 <direction+0x7e>
     4f2:	76 c0       	rjmp	.+236    	; 0x5e0 <direction+0x16a>
     4f4:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x6>
     4f8:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x7>
     4fc:	84 3f       	cpi	r24, 0xF4	; 244
     4fe:	91 40       	sbci	r25, 0x01	; 1
     500:	08 f4       	brcc	.+2      	; 0x504 <direction+0x8e>
     502:	70 c0       	rjmp	.+224    	; 0x5e4 <direction+0x16e>
			return Straight_left_junction;
     504:	86 e0       	ldi	r24, 0x06	; 6
     506:	08 95       	ret
			else
			return Left_corner;
		}
		
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
     508:	40 91 a0 01 	lds	r20, 0x01A0	; 0x8001a0 <sensors+0x6>
     50c:	50 91 a1 01 	lds	r21, 0x01A1	; 0x8001a1 <sensors+0x7>
     510:	44 3f       	cpi	r20, 0xF4	; 244
     512:	61 e0       	ldi	r22, 0x01	; 1
     514:	56 07       	cpc	r21, r22
     516:	00 f1       	brcs	.+64     	; 0x558 <direction+0xe2>
     518:	20 91 a2 01 	lds	r18, 0x01A2	; 0x8001a2 <sensors+0x8>
     51c:	30 91 a3 01 	lds	r19, 0x01A3	; 0x8001a3 <sensors+0x9>
     520:	24 3f       	cpi	r18, 0xF4	; 244
     522:	31 40       	sbci	r19, 0x01	; 1
     524:	c8 f0       	brcs	.+50     	; 0x558 <direction+0xe2>
			inch();
     526:	0e 94 67 01 	call	0x2ce	; 0x2ce <inch>
			read_line(sensors,IR_EMITTERS_ON);
     52a:	61 e0       	ldi	r22, 0x01	; 1
     52c:	8a e9       	ldi	r24, 0x9A	; 154
     52e:	91 e0       	ldi	r25, 0x01	; 1
     530:	0e 94 77 07 	call	0xeee	; 0xeee <read_line>
			
			if (sensors[2] >= 500 || sensors[1] >=500)
     534:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     538:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     53c:	84 3f       	cpi	r24, 0xF4	; 244
     53e:	91 40       	sbci	r25, 0x01	; 1
     540:	08 f0       	brcs	.+2      	; 0x544 <direction+0xce>
     542:	52 c0       	rjmp	.+164    	; 0x5e8 <direction+0x172>
     544:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors+0x2>
     548:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x3>
     54c:	84 3f       	cpi	r24, 0xF4	; 244
     54e:	91 40       	sbci	r25, 0x01	; 1
     550:	08 f4       	brcc	.+2      	; 0x554 <direction+0xde>
     552:	4c c0       	rjmp	.+152    	; 0x5ec <direction+0x176>
			return Straight_right_junction;
     554:	85 e0       	ldi	r24, 0x05	; 5
     556:	08 95       	ret
			else
			return Right_corner;
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
     558:	20 91 9e 01 	lds	r18, 0x019E	; 0x80019e <sensors+0x4>
     55c:	30 91 9f 01 	lds	r19, 0x019F	; 0x80019f <sensors+0x5>
     560:	29 3c       	cpi	r18, 0xC9	; 201
     562:	31 05       	cpc	r19, r1
     564:	08 f4       	brcc	.+2      	; 0x568 <direction+0xf2>
     566:	44 c0       	rjmp	.+136    	; 0x5f0 <direction+0x17a>
			return Line_end;
		}

		
		else if (sensors[2] >=500){
     568:	24 3f       	cpi	r18, 0xF4	; 244
     56a:	61 e0       	ldi	r22, 0x01	; 1
     56c:	36 07       	cpc	r19, r22
     56e:	08 f4       	brcc	.+2      	; 0x572 <direction+0xfc>
     570:	82 cf       	rjmp	.-252    	; 0x476 <direction>
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
     572:	24 3f       	cpi	r18, 0xF4	; 244
     574:	61 e0       	ldi	r22, 0x01	; 1
     576:	36 07       	cpc	r19, r22
     578:	e8 f1       	brcs	.+122    	; 0x5f4 <direction+0x17e>
     57a:	45 3f       	cpi	r20, 0xF5	; 245
     57c:	51 40       	sbci	r21, 0x01	; 1
     57e:	e0 f5       	brcc	.+120    	; 0x5f8 <direction+0x182>
     580:	40 91 a2 01 	lds	r20, 0x01A2	; 0x8001a2 <sensors+0x8>
     584:	50 91 a3 01 	lds	r21, 0x01A3	; 0x8001a3 <sensors+0x9>
     588:	44 3f       	cpi	r20, 0xF4	; 244
     58a:	51 40       	sbci	r21, 0x01	; 1
     58c:	b8 f1       	brcs	.+110    	; 0x5fc <direction+0x186>
     58e:	40 91 9a 01 	lds	r20, 0x019A	; 0x80019a <sensors>
     592:	50 91 9b 01 	lds	r21, 0x019B	; 0x80019b <sensors+0x1>
     596:	44 3f       	cpi	r20, 0xF4	; 244
     598:	51 40       	sbci	r21, 0x01	; 1
     59a:	90 f1       	brcs	.+100    	; 0x600 <direction+0x18a>
     59c:	85 3f       	cpi	r24, 0xF5	; 245
     59e:	91 40       	sbci	r25, 0x01	; 1
     5a0:	88 f5       	brcc	.+98     	; 0x604 <direction+0x18e>
     5a2:	24 3f       	cpi	r18, 0xF4	; 244
     5a4:	31 40       	sbci	r19, 0x01	; 1
     5a6:	50 f4       	brcc	.+20     	; 0x5bc <direction+0x146>
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
			}
			else
			return Straight;																						// check if its straight without any corners
     5a8:	80 e0       	ldi	r24, 0x00	; 0
     5aa:	08 95       	ret

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
					read_line(sensors,IR_EMITTERS_ON);
     5ac:	61 e0       	ldi	r22, 0x01	; 1
     5ae:	8a e9       	ldi	r24, 0x9A	; 154
     5b0:	91 e0       	ldi	r25, 0x01	; 1
     5b2:	0e 94 77 07 	call	0xeee	; 0xeee <read_line>
					motorControl('S');
     5b6:	83 e5       	ldi	r24, 0x53	; 83
     5b8:	0e 94 78 01 	call	0x2f0	; 0x2f0 <motorControl>
		}

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
     5bc:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <sensors+0x8>
     5c0:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <sensors+0x9>
     5c4:	80 39       	cpi	r24, 0x90	; 144
     5c6:	91 40       	sbci	r25, 0x01	; 1
     5c8:	88 f7       	brcc	.-30     	; 0x5ac <direction+0x136>
     5ca:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <sensors>
     5ce:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <sensors+0x1>
     5d2:	80 39       	cpi	r24, 0x90	; 144
     5d4:	91 40       	sbci	r25, 0x01	; 1
     5d6:	50 f7       	brcc	.-44     	; 0x5ac <direction+0x136>
					read_line(sensors,IR_EMITTERS_ON);
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
     5d8:	82 e0       	ldi	r24, 0x02	; 2
     5da:	08 95       	ret
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >=500)
			return X_junction;
			else
			return T_junction;
     5dc:	87 e0       	ldi	r24, 0x07	; 7
     5de:	08 95       	ret
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[3] >=500)
			return Straight_left_junction;
     5e0:	86 e0       	ldi	r24, 0x06	; 6
     5e2:	08 95       	ret
			else
			return Left_corner;
     5e4:	83 e0       	ldi	r24, 0x03	; 3
     5e6:	08 95       	ret
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[1] >=500)
			return Straight_right_junction;
     5e8:	85 e0       	ldi	r24, 0x05	; 5
     5ea:	08 95       	ret
			else
			return Right_corner;
     5ec:	84 e0       	ldi	r24, 0x04	; 4
     5ee:	08 95       	ret
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
			return Line_end;
     5f0:	81 e0       	ldi	r24, 0x01	; 1
     5f2:	08 95       	ret
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
			}
			else
			return Straight;																						// check if its straight without any corners
     5f4:	80 e0       	ldi	r24, 0x00	; 0
     5f6:	08 95       	ret
     5f8:	80 e0       	ldi	r24, 0x00	; 0
     5fa:	08 95       	ret
     5fc:	80 e0       	ldi	r24, 0x00	; 0
     5fe:	08 95       	ret
     600:	80 e0       	ldi	r24, 0x00	; 0
     602:	08 95       	ret
     604:	80 e0       	ldi	r24, 0x00	; 0
			
		}
		
	}
}
     606:	08 95       	ret

00000608 <parcour>:
Junctions situatie = Straight;


void parcour() {
	while(1) {
		situatie = direction();
     608:	0e 94 3b 02 	call	0x476	; 0x476 <direction>
     60c:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <situatie>
		
		switch (situatie) {
     610:	e8 2f       	mov	r30, r24
     612:	f0 e0       	ldi	r31, 0x00	; 0
     614:	e9 30       	cpi	r30, 0x09	; 9
     616:	f1 05       	cpc	r31, r1
     618:	b8 f7       	brcc	.-18     	; 0x608 <parcour>
     61a:	ec 5c       	subi	r30, 0xCC	; 204
     61c:	ff 4f       	sbci	r31, 0xFF	; 255
     61e:	0c 94 12 0d 	jmp	0x1a24	; 0x1a24 <__tablejump2__>
			case Barcode: // end of parcour
			clear();
     622:	0e 94 6a 05 	call	0xad4	; 0xad4 <clear>
			lcd_goto_xy(0, 0);
     626:	60 e0       	ldi	r22, 0x00	; 0
     628:	80 e0       	ldi	r24, 0x00	; 0
     62a:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <lcd_goto_xy>
			print("bar code");
     62e:	84 e2       	ldi	r24, 0x24	; 36
     630:	91 e0       	ldi	r25, 0x01	; 1
     632:	0e 94 79 05 	call	0xaf2	; 0xaf2 <print>
			set_motors(0,0);
     636:	60 e0       	ldi	r22, 0x00	; 0
     638:	70 e0       	ldi	r23, 0x00	; 0
     63a:	80 e0       	ldi	r24, 0x00	; 0
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	0e 94 a7 06 	call	0xd4e	; 0xd4e <set_motors>
     642:	88 ee       	ldi	r24, 0xE8	; 232
     644:	93 e0       	ldi	r25, 0x03	; 3
     646:	0e 94 35 07 	call	0xe6a	; 0xe6a <delay_ms>
     64a:	de cf       	rjmp	.-68     	; 0x608 <parcour>
			
			case X_junction:
			case Left_corner:
			case T_junction:
			case Straight_left_junction:
			clear();
     64c:	0e 94 6a 05 	call	0xad4	; 0xad4 <clear>
			lcd_goto_xy(0, 0);
     650:	60 e0       	ldi	r22, 0x00	; 0
     652:	80 e0       	ldi	r24, 0x00	; 0
     654:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <lcd_goto_xy>
			print("L");
     658:	8d e2       	ldi	r24, 0x2D	; 45
     65a:	91 e0       	ldi	r25, 0x01	; 1
     65c:	0e 94 79 05 	call	0xaf2	; 0xaf2 <print>
			motorControl('L');
     660:	8c e4       	ldi	r24, 0x4C	; 76
     662:	0e 94 78 01 	call	0x2f0	; 0x2f0 <motorControl>
			clear();
     666:	0e 94 6a 05 	call	0xad4	; 0xad4 <clear>
			break;
     66a:	ce cf       	rjmp	.-100    	; 0x608 <parcour>
			
			case Right_corner:
			clear();
     66c:	0e 94 6a 05 	call	0xad4	; 0xad4 <clear>
			lcd_goto_xy(0, 0);
     670:	60 e0       	ldi	r22, 0x00	; 0
     672:	80 e0       	ldi	r24, 0x00	; 0
     674:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <lcd_goto_xy>
			print("R");
     678:	8f e2       	ldi	r24, 0x2F	; 47
     67a:	91 e0       	ldi	r25, 0x01	; 1
     67c:	0e 94 79 05 	call	0xaf2	; 0xaf2 <print>
			motorControl('R');
     680:	82 e5       	ldi	r24, 0x52	; 82
     682:	0e 94 78 01 	call	0x2f0	; 0x2f0 <motorControl>
			clear();
     686:	0e 94 6a 05 	call	0xad4	; 0xad4 <clear>
			break;
     68a:	be cf       	rjmp	.-132    	; 0x608 <parcour>
			
			case Straight_right_junction:
			case Straight:
			clear();
     68c:	0e 94 6a 05 	call	0xad4	; 0xad4 <clear>
			lcd_goto_xy(0, 0);
     690:	60 e0       	ldi	r22, 0x00	; 0
     692:	80 e0       	ldi	r24, 0x00	; 0
     694:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <lcd_goto_xy>
			print("S");
     698:	81 e3       	ldi	r24, 0x31	; 49
     69a:	91 e0       	ldi	r25, 0x01	; 1
     69c:	0e 94 79 05 	call	0xaf2	; 0xaf2 <print>
			motorControl('S');
     6a0:	83 e5       	ldi	r24, 0x53	; 83
     6a2:	0e 94 78 01 	call	0x2f0	; 0x2f0 <motorControl>
			clear();
     6a6:	0e 94 6a 05 	call	0xad4	; 0xad4 <clear>
			break;
     6aa:	ae cf       	rjmp	.-164    	; 0x608 <parcour>
			
			case Line_end:
			clear();
     6ac:	0e 94 6a 05 	call	0xad4	; 0xad4 <clear>
			lcd_goto_xy(0, 0);
     6b0:	60 e0       	ldi	r22, 0x00	; 0
     6b2:	80 e0       	ldi	r24, 0x00	; 0
     6b4:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <lcd_goto_xy>
			print("End");
     6b8:	83 e3       	ldi	r24, 0x33	; 51
     6ba:	91 e0       	ldi	r25, 0x01	; 1
     6bc:	0e 94 79 05 	call	0xaf2	; 0xaf2 <print>
			motorControl('T');
     6c0:	84 e5       	ldi	r24, 0x54	; 84
     6c2:	0e 94 78 01 	call	0x2f0	; 0x2f0 <motorControl>
			clear();
     6c6:	0e 94 6a 05 	call	0xad4	; 0xad4 <clear>
			break;
     6ca:	9e cf       	rjmp	.-196    	; 0x608 <parcour>

000006cc <_ZN15OrangutanAnalog7setModeEh.part.0>:
     6cc:	ec e7       	ldi	r30, 0x7C	; 124
     6ce:	f0 e0       	ldi	r31, 0x00	; 0
     6d0:	80 81       	ld	r24, Z
     6d2:	8f 7d       	andi	r24, 0xDF	; 223
     6d4:	80 83       	st	Z, r24
     6d6:	08 95       	ret

000006d8 <_ZN15OrangutanAnalog7setModeEh>:
     6d8:	81 11       	cpse	r24, r1
     6da:	03 c0       	rjmp	.+6      	; 0x6e2 <_ZN15OrangutanAnalog7setModeEh+0xa>
     6dc:	0e 94 66 03 	call	0x6cc	; 0x6cc <_ZN15OrangutanAnalog7setModeEh.part.0>
     6e0:	08 95       	ret
     6e2:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     6e6:	80 62       	ori	r24, 0x20	; 32
     6e8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     6ec:	08 95       	ret

000006ee <_ZN15OrangutanAnalog7getModeEv>:
     6ee:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     6f2:	85 fb       	bst	r24, 5
     6f4:	88 27       	eor	r24, r24
     6f6:	80 f9       	bld	r24, 0
     6f8:	08 95       	ret

000006fa <_ZN15OrangutanAnalog16conversionResultEv>:
     6fa:	0e 94 77 03 	call	0x6ee	; 0x6ee <_ZN15OrangutanAnalog7getModeEv>
     6fe:	88 23       	and	r24, r24
     700:	21 f0       	breq	.+8      	; 0x70a <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     702:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	08 95       	ret
     70a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     70e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     712:	08 95       	ret

00000714 <_ZN15OrangutanAnalog15startConversionEhh>:
     714:	80 32       	cpi	r24, 0x20	; 32
     716:	a0 f4       	brcc	.+40     	; 0x740 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
     718:	97 e8       	ldi	r25, 0x87	; 135
     71a:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     71e:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     722:	66 23       	and	r22, r22
     724:	11 f0       	breq	.+4      	; 0x72a <_ZN15OrangutanAnalog15startConversionEhh+0x16>
     726:	90 6c       	ori	r25, 0xC0	; 192
     728:	02 c0       	rjmp	.+4      	; 0x72e <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
     72a:	9f 77       	andi	r25, 0x7F	; 127
     72c:	90 64       	ori	r25, 0x40	; 64
     72e:	90 7e       	andi	r25, 0xE0	; 224
     730:	98 2b       	or	r25, r24
     732:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     736:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     73a:	80 64       	ori	r24, 0x40	; 64
     73c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     740:	08 95       	ret

00000742 <_ZN15OrangutanAnalog11readAverageEhj>:
     742:	a0 e0       	ldi	r26, 0x00	; 0
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 44 0d 	jmp	0x1a88	; 0x1a88 <__prologue_saves__+0x14>
     74e:	eb 01       	movw	r28, r22
     750:	60 e0       	ldi	r22, 0x00	; 0
     752:	0e 94 8a 03 	call	0x714	; 0x714 <_ZN15OrangutanAnalog15startConversionEhh>
     756:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     75a:	86 fd       	sbrc	r24, 6
     75c:	fc cf       	rjmp	.-8      	; 0x756 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
     75e:	8e 01       	movw	r16, r28
     760:	c1 2c       	mov	r12, r1
     762:	d1 2c       	mov	r13, r1
     764:	76 01       	movw	r14, r12
     766:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     76a:	80 64       	ori	r24, 0x40	; 64
     76c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     770:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     774:	86 fd       	sbrc	r24, 6
     776:	fc cf       	rjmp	.-8      	; 0x770 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
     778:	0e 94 7d 03 	call	0x6fa	; 0x6fa <_ZN15OrangutanAnalog16conversionResultEv>
     77c:	c8 0e       	add	r12, r24
     77e:	d9 1e       	adc	r13, r25
     780:	e1 1c       	adc	r14, r1
     782:	f1 1c       	adc	r15, r1
     784:	01 50       	subi	r16, 0x01	; 1
     786:	11 09       	sbc	r17, r1
     788:	01 15       	cp	r16, r1
     78a:	11 05       	cpc	r17, r1
     78c:	61 f7       	brne	.-40     	; 0x766 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
     78e:	ce 01       	movw	r24, r28
     790:	96 95       	lsr	r25
     792:	87 95       	ror	r24
     794:	c0 34       	cpi	r28, 0x40	; 64
     796:	d1 05       	cpc	r29, r1
     798:	38 f4       	brcc	.+14     	; 0x7a8 <_ZN15OrangutanAnalog11readAverageEhj+0x66>
     79a:	8c 0d       	add	r24, r12
     79c:	9d 1d       	adc	r25, r13
     79e:	be 01       	movw	r22, r28
     7a0:	0e 94 bd 0c 	call	0x197a	; 0x197a <__udivmodhi4>
     7a4:	cb 01       	movw	r24, r22
     7a6:	0e c0       	rjmp	.+28     	; 0x7c4 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
     7a8:	a7 01       	movw	r20, r14
     7aa:	96 01       	movw	r18, r12
     7ac:	28 0f       	add	r18, r24
     7ae:	39 1f       	adc	r19, r25
     7b0:	41 1d       	adc	r20, r1
     7b2:	51 1d       	adc	r21, r1
     7b4:	ca 01       	movw	r24, r20
     7b6:	b9 01       	movw	r22, r18
     7b8:	9e 01       	movw	r18, r28
     7ba:	40 e0       	ldi	r20, 0x00	; 0
     7bc:	50 e0       	ldi	r21, 0x00	; 0
     7be:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <__udivmodsi4>
     7c2:	c9 01       	movw	r24, r18
     7c4:	cd b7       	in	r28, 0x3d	; 61
     7c6:	de b7       	in	r29, 0x3e	; 62
     7c8:	e8 e0       	ldi	r30, 0x08	; 8
     7ca:	0c 94 60 0d 	jmp	0x1ac0	; 0x1ac0 <__epilogue_restores__+0x14>

000007ce <_ZN15OrangutanAnalog12toMillivoltsEj>:
     7ce:	cf 92       	push	r12
     7d0:	df 92       	push	r13
     7d2:	ef 92       	push	r14
     7d4:	ff 92       	push	r15
     7d6:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7da:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7de:	9c 01       	movw	r18, r24
     7e0:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <__umulhisi3>
     7e4:	6b 01       	movw	r12, r22
     7e6:	7c 01       	movw	r14, r24
     7e8:	0e 94 77 03 	call	0x6ee	; 0x6ee <_ZN15OrangutanAnalog7getModeEv>
     7ec:	88 23       	and	r24, r24
     7ee:	59 f0       	breq	.+22     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     7f0:	c7 01       	movw	r24, r14
     7f2:	b6 01       	movw	r22, r12
     7f4:	61 58       	subi	r22, 0x81	; 129
     7f6:	7f 4f       	sbci	r23, 0xFF	; 255
     7f8:	8f 4f       	sbci	r24, 0xFF	; 255
     7fa:	9f 4f       	sbci	r25, 0xFF	; 255
     7fc:	2f ef       	ldi	r18, 0xFF	; 255
     7fe:	30 e0       	ldi	r19, 0x00	; 0
     800:	40 e0       	ldi	r20, 0x00	; 0
     802:	50 e0       	ldi	r21, 0x00	; 0
     804:	0a c0       	rjmp	.+20     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
     806:	c7 01       	movw	r24, r14
     808:	b6 01       	movw	r22, r12
     80a:	61 50       	subi	r22, 0x01	; 1
     80c:	7e 4f       	sbci	r23, 0xFE	; 254
     80e:	8f 4f       	sbci	r24, 0xFF	; 255
     810:	9f 4f       	sbci	r25, 0xFF	; 255
     812:	2f ef       	ldi	r18, 0xFF	; 255
     814:	33 e0       	ldi	r19, 0x03	; 3
     816:	40 e0       	ldi	r20, 0x00	; 0
     818:	50 e0       	ldi	r21, 0x00	; 0
     81a:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <__udivmodsi4>
     81e:	c9 01       	movw	r24, r18
     820:	ff 90       	pop	r15
     822:	ef 90       	pop	r14
     824:	df 90       	pop	r13
     826:	cf 90       	pop	r12
     828:	08 95       	ret

0000082a <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
     82a:	0e 94 a1 03 	call	0x742	; 0x742 <_ZN15OrangutanAnalog11readAverageEhj>
     82e:	0e 94 e7 03 	call	0x7ce	; 0x7ce <_ZN15OrangutanAnalog12toMillivoltsEj>
     832:	08 95       	ret

00000834 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
     834:	1f 93       	push	r17
     836:	cf 93       	push	r28
     838:	df 93       	push	r29
     83a:	0e 94 77 03 	call	0x6ee	; 0x6ee <_ZN15OrangutanAnalog7getModeEv>
     83e:	18 2f       	mov	r17, r24
     840:	0e 94 66 03 	call	0x6cc	; 0x6cc <_ZN15OrangutanAnalog7setModeEh.part.0>
     844:	6a e0       	ldi	r22, 0x0A	; 10
     846:	70 e0       	ldi	r23, 0x00	; 0
     848:	86 e0       	ldi	r24, 0x06	; 6
     84a:	0e 94 15 04 	call	0x82a	; 0x82a <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
     84e:	ec 01       	movw	r28, r24
     850:	81 2f       	mov	r24, r17
     852:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <_ZN15OrangutanAnalog7setModeEh>
     856:	ce 01       	movw	r24, r28
     858:	88 0f       	add	r24, r24
     85a:	99 1f       	adc	r25, r25
     85c:	8c 0f       	add	r24, r28
     85e:	9d 1f       	adc	r25, r29
     860:	01 96       	adiw	r24, 0x01	; 1
     862:	96 95       	lsr	r25
     864:	87 95       	ror	r24
     866:	df 91       	pop	r29
     868:	cf 91       	pop	r28
     86a:	1f 91       	pop	r17
     86c:	08 95       	ret

0000086e <read_battery_millivolts_3pi>:
     86e:	0e 94 1a 04 	call	0x834	; 0x834 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
     872:	08 95       	ret

00000874 <delay_us.constprop.0>:
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	6f 93       	push	r22
     87a:	64 e0       	ldi	r22, 0x04	; 4
     87c:	6a 95       	dec	r22
     87e:	f1 f7       	brne	.-4      	; 0x87c <delay_us.constprop.0+0x8>
     880:	6f 91       	pop	r22
     882:	01 97       	sbiw	r24, 0x01	; 1
     884:	c9 f7       	brne	.-14     	; 0x878 <delay_us.constprop.0+0x4>
     886:	08 95       	ret

00000888 <_ZN12OrangutanLCD8busyWaitEv>:
     888:	0f 93       	push	r16
     88a:	1f 93       	push	r17
     88c:	cf 93       	push	r28
     88e:	df 93       	push	r29
     890:	1a b1       	in	r17, 0x0a	; 10
     892:	57 98       	cbi	0x0a, 7	; 10
     894:	5a 98       	cbi	0x0b, 2	; 11
     896:	28 9a       	sbi	0x05, 0	; 5
     898:	c0 e0       	ldi	r28, 0x00	; 0
     89a:	d0 e0       	ldi	r29, 0x00	; 0
     89c:	0e 94 3a 04 	call	0x874	; 0x874 <delay_us.constprop.0>
     8a0:	5c 9a       	sbi	0x0b, 4	; 11
     8a2:	0e 94 3a 04 	call	0x874	; 0x874 <delay_us.constprop.0>
     8a6:	09 b1       	in	r16, 0x09	; 9
     8a8:	5c 98       	cbi	0x0b, 4	; 11
     8aa:	0e 94 3a 04 	call	0x874	; 0x874 <delay_us.constprop.0>
     8ae:	5c 9a       	sbi	0x0b, 4	; 11
     8b0:	0e 94 3a 04 	call	0x874	; 0x874 <delay_us.constprop.0>
     8b4:	5c 98       	cbi	0x0b, 4	; 11
     8b6:	24 96       	adiw	r28, 0x04	; 4
     8b8:	07 ff       	sbrs	r16, 7
     8ba:	10 c0       	rjmp	.+32     	; 0x8dc <_ZN12OrangutanLCD8busyWaitEv+0x54>
     8bc:	ae 01       	movw	r20, r28
     8be:	60 e0       	ldi	r22, 0x00	; 0
     8c0:	70 e0       	ldi	r23, 0x00	; 0
     8c2:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     8c6:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     8ca:	a0 91 3a 01 	lds	r26, 0x013A	; 0x80013a <__data_end+0x2>
     8ce:	b0 91 3b 01 	lds	r27, 0x013B	; 0x80013b <__data_end+0x3>
     8d2:	48 17       	cp	r20, r24
     8d4:	59 07       	cpc	r21, r25
     8d6:	6a 07       	cpc	r22, r26
     8d8:	7b 07       	cpc	r23, r27
     8da:	00 f3       	brcs	.-64     	; 0x89c <_ZN12OrangutanLCD8busyWaitEv+0x14>
     8dc:	1a b9       	out	0x0a, r17	; 10
     8de:	df 91       	pop	r29
     8e0:	cf 91       	pop	r28
     8e2:	1f 91       	pop	r17
     8e4:	0f 91       	pop	r16
     8e6:	08 95       	ret

000008e8 <_ZN12OrangutanLCD8sendDataEh>:
     8e8:	95 b1       	in	r25, 0x05	; 5
     8ea:	28 2f       	mov	r18, r24
     8ec:	21 70       	andi	r18, 0x01	; 1
     8ee:	30 e0       	ldi	r19, 0x00	; 0
     8f0:	22 0f       	add	r18, r18
     8f2:	33 1f       	adc	r19, r19
     8f4:	48 2f       	mov	r20, r24
     8f6:	46 70       	andi	r20, 0x06	; 6
     8f8:	68 e0       	ldi	r22, 0x08	; 8
     8fa:	46 9f       	mul	r20, r22
     8fc:	a0 01       	movw	r20, r0
     8fe:	11 24       	eor	r1, r1
     900:	24 2b       	or	r18, r20
     902:	9d 7c       	andi	r25, 0xCD	; 205
     904:	29 2b       	or	r18, r25
     906:	25 b9       	out	0x05, r18	; 5
     908:	9b b1       	in	r25, 0x0b	; 11
     90a:	88 70       	andi	r24, 0x08	; 8
     90c:	82 95       	swap	r24
     90e:	80 7f       	andi	r24, 0xF0	; 240
     910:	9f 77       	andi	r25, 0x7F	; 127
     912:	89 2b       	or	r24, r25
     914:	8b b9       	out	0x0b, r24	; 11
     916:	5c 9a       	sbi	0x0b, 4	; 11
     918:	0e 94 3a 04 	call	0x874	; 0x874 <delay_us.constprop.0>
     91c:	5c 98       	cbi	0x0b, 4	; 11
     91e:	0e 94 3a 04 	call	0x874	; 0x874 <delay_us.constprop.0>
     922:	08 95       	ret

00000924 <_ZN12OrangutanLCD4sendEhhh>:
     924:	a0 e0       	ldi	r26, 0x00	; 0
     926:	b0 e0       	ldi	r27, 0x00	; 0
     928:	e8 e9       	ldi	r30, 0x98	; 152
     92a:	f4 e0       	ldi	r31, 0x04	; 4
     92c:	0c 94 45 0d 	jmp	0x1a8a	; 0x1a8a <__prologue_saves__+0x16>
     930:	c8 2f       	mov	r28, r24
     932:	d6 2e       	mov	r13, r22
     934:	e4 2e       	mov	r14, r20
     936:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <_ZZN12OrangutanLCD4initEvE11initialized>
     93a:	81 11       	cpse	r24, r1
     93c:	05 c0       	rjmp	.+10     	; 0x948 <_ZN12OrangutanLCD4sendEhhh+0x24>
     93e:	81 e0       	ldi	r24, 0x01	; 1
     940:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <_ZZN12OrangutanLCD4initEvE11initialized>
     944:	0e 94 02 05 	call	0xa04	; 0xa04 <_ZN12OrangutanLCD5init2Ev>
     948:	0e 94 44 04 	call	0x888	; 0x888 <_ZN12OrangutanLCD8busyWaitEv>
     94c:	14 b1       	in	r17, 0x04	; 4
     94e:	d5 b1       	in	r29, 0x05	; 5
     950:	fa b0       	in	r15, 0x0a	; 10
     952:	0b b1       	in	r16, 0x0b	; 11
     954:	28 98       	cbi	0x05, 0	; 5
     956:	dd 20       	and	r13, r13
     958:	11 f0       	breq	.+4      	; 0x95e <_ZN12OrangutanLCD4sendEhhh+0x3a>
     95a:	5a 9a       	sbi	0x0b, 2	; 11
     95c:	01 c0       	rjmp	.+2      	; 0x960 <_ZN12OrangutanLCD4sendEhhh+0x3c>
     95e:	5a 98       	cbi	0x0b, 2	; 11
     960:	94 b1       	in	r25, 0x04	; 4
     962:	92 63       	ori	r25, 0x32	; 50
     964:	94 b9       	out	0x04, r25	; 4
     966:	57 9a       	sbi	0x0a, 7	; 10
     968:	81 e0       	ldi	r24, 0x01	; 1
     96a:	e8 16       	cp	r14, r24
     96c:	29 f0       	breq	.+10     	; 0x978 <_ZN12OrangutanLCD4sendEhhh+0x54>
     96e:	8c 2f       	mov	r24, r28
     970:	82 95       	swap	r24
     972:	8f 70       	andi	r24, 0x0F	; 15
     974:	0e 94 74 04 	call	0x8e8	; 0x8e8 <_ZN12OrangutanLCD8sendDataEh>
     978:	8c 2f       	mov	r24, r28
     97a:	8f 70       	andi	r24, 0x0F	; 15
     97c:	0e 94 74 04 	call	0x8e8	; 0x8e8 <_ZN12OrangutanLCD8sendDataEh>
     980:	fa b8       	out	0x0a, r15	; 10
     982:	0b b9       	out	0x0b, r16	; 11
     984:	14 b9       	out	0x04, r17	; 4
     986:	d5 b9       	out	0x05, r29	; 5
     988:	cd b7       	in	r28, 0x3d	; 61
     98a:	de b7       	in	r29, 0x3e	; 62
     98c:	e7 e0       	ldi	r30, 0x07	; 7
     98e:	0c 94 61 0d 	jmp	0x1ac2	; 0x1ac2 <__epilogue_restores__+0x16>

00000992 <_ZN12OrangutanLCD8send_cmdEh>:
     992:	42 e0       	ldi	r20, 0x02	; 2
     994:	60 e0       	ldi	r22, 0x00	; 0
     996:	0e 94 92 04 	call	0x924	; 0x924 <_ZN12OrangutanLCD4sendEhhh>
     99a:	08 95       	ret

0000099c <_ZN12OrangutanLCD9send_dataEh>:
     99c:	42 e0       	ldi	r20, 0x02	; 2
     99e:	61 e0       	ldi	r22, 0x01	; 1
     9a0:	0e 94 92 04 	call	0x924	; 0x924 <_ZN12OrangutanLCD4sendEhhh>
     9a4:	08 95       	ret

000009a6 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>:
     9a6:	a1 e0       	ldi	r26, 0x01	; 1
     9a8:	b0 e0       	ldi	r27, 0x00	; 0
     9aa:	e9 ed       	ldi	r30, 0xD9	; 217
     9ac:	f4 e0       	ldi	r31, 0x04	; 4
     9ae:	0c 94 46 0d 	jmp	0x1a8c	; 0x1a8c <__prologue_saves__+0x18>
     9b2:	8c 01       	movw	r16, r24
     9b4:	66 0f       	add	r22, r22
     9b6:	66 0f       	add	r22, r22
     9b8:	66 0f       	add	r22, r22
     9ba:	e1 2c       	mov	r14, r1
     9bc:	f1 2c       	mov	r15, r1
     9be:	8e 2d       	mov	r24, r14
     9c0:	86 0f       	add	r24, r22
     9c2:	80 64       	ori	r24, 0x40	; 64
     9c4:	69 83       	std	Y+1, r22	; 0x01
     9c6:	0e 94 c9 04 	call	0x992	; 0x992 <_ZN12OrangutanLCD8send_cmdEh>
     9ca:	f8 01       	movw	r30, r16
     9cc:	ee 0d       	add	r30, r14
     9ce:	ff 1d       	adc	r31, r15
     9d0:	84 91       	lpm	r24, Z
     9d2:	0e 94 ce 04 	call	0x99c	; 0x99c <_ZN12OrangutanLCD9send_dataEh>
     9d6:	8f ef       	ldi	r24, 0xFF	; 255
     9d8:	e8 1a       	sub	r14, r24
     9da:	f8 0a       	sbc	r15, r24
     9dc:	69 81       	ldd	r22, Y+1	; 0x01
     9de:	e8 e0       	ldi	r30, 0x08	; 8
     9e0:	ee 16       	cp	r14, r30
     9e2:	f1 04       	cpc	r15, r1
     9e4:	61 f7       	brne	.-40     	; 0x9be <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x18>
     9e6:	21 96       	adiw	r28, 0x01	; 1
     9e8:	e6 e0       	ldi	r30, 0x06	; 6
     9ea:	0c 94 62 0d 	jmp	0x1ac4	; 0x1ac4 <__epilogue_restores__+0x18>

000009ee <lcd_load_custom_character>:
     9ee:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>
     9f2:	08 95       	ret

000009f4 <print_character>:
     9f4:	0e 94 ce 04 	call	0x99c	; 0x99c <_ZN12OrangutanLCD9send_dataEh>
     9f8:	08 95       	ret

000009fa <_ZN12OrangutanLCD13send_4bit_cmdEh>:
     9fa:	41 e0       	ldi	r20, 0x01	; 1
     9fc:	60 e0       	ldi	r22, 0x00	; 0
     9fe:	0e 94 92 04 	call	0x924	; 0x924 <_ZN12OrangutanLCD4sendEhhh>
     a02:	08 95       	ret

00000a04 <_ZN12OrangutanLCD5init2Ev>:
     a04:	80 e1       	ldi	r24, 0x10	; 16
     a06:	97 e2       	ldi	r25, 0x27	; 39
     a08:	a0 e0       	ldi	r26, 0x00	; 0
     a0a:	b0 e0       	ldi	r27, 0x00	; 0
     a0c:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <__data_end>
     a10:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <__data_end+0x1>
     a14:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <__data_end+0x2>
     a18:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <__data_end+0x3>
     a1c:	52 9a       	sbi	0x0a, 2	; 10
     a1e:	20 9a       	sbi	0x04, 0	; 4
     a20:	54 9a       	sbi	0x0a, 4	; 10
     a22:	8e e1       	ldi	r24, 0x1E	; 30
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	0e 94 35 07 	call	0xe6a	; 0xe6a <delay_ms>
     a2a:	83 e0       	ldi	r24, 0x03	; 3
     a2c:	0e 94 fd 04 	call	0x9fa	; 0x9fa <_ZN12OrangutanLCD13send_4bit_cmdEh>
     a30:	86 e0       	ldi	r24, 0x06	; 6
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	0e 94 35 07 	call	0xe6a	; 0xe6a <delay_ms>
     a38:	83 e0       	ldi	r24, 0x03	; 3
     a3a:	0e 94 fd 04 	call	0x9fa	; 0x9fa <_ZN12OrangutanLCD13send_4bit_cmdEh>
     a3e:	82 e0       	ldi	r24, 0x02	; 2
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	0e 94 35 07 	call	0xe6a	; 0xe6a <delay_ms>
     a46:	83 e0       	ldi	r24, 0x03	; 3
     a48:	0e 94 fd 04 	call	0x9fa	; 0x9fa <_ZN12OrangutanLCD13send_4bit_cmdEh>
     a4c:	82 e0       	ldi	r24, 0x02	; 2
     a4e:	90 e0       	ldi	r25, 0x00	; 0
     a50:	0e 94 35 07 	call	0xe6a	; 0xe6a <delay_ms>
     a54:	82 e0       	ldi	r24, 0x02	; 2
     a56:	0e 94 fd 04 	call	0x9fa	; 0x9fa <_ZN12OrangutanLCD13send_4bit_cmdEh>
     a5a:	82 e0       	ldi	r24, 0x02	; 2
     a5c:	90 e0       	ldi	r25, 0x00	; 0
     a5e:	0e 94 35 07 	call	0xe6a	; 0xe6a <delay_ms>
     a62:	88 e2       	ldi	r24, 0x28	; 40
     a64:	0e 94 c9 04 	call	0x992	; 0x992 <_ZN12OrangutanLCD8send_cmdEh>
     a68:	88 e0       	ldi	r24, 0x08	; 8
     a6a:	0e 94 c9 04 	call	0x992	; 0x992 <_ZN12OrangutanLCD8send_cmdEh>
     a6e:	81 e0       	ldi	r24, 0x01	; 1
     a70:	0e 94 c9 04 	call	0x992	; 0x992 <_ZN12OrangutanLCD8send_cmdEh>
     a74:	86 e0       	ldi	r24, 0x06	; 6
     a76:	0e 94 c9 04 	call	0x992	; 0x992 <_ZN12OrangutanLCD8send_cmdEh>
     a7a:	8c e0       	ldi	r24, 0x0C	; 12
     a7c:	0e 94 c9 04 	call	0x992	; 0x992 <_ZN12OrangutanLCD8send_cmdEh>
     a80:	08 95       	ret

00000a82 <_ZN12OrangutanLCD5clearEv>:
     a82:	81 e0       	ldi	r24, 0x01	; 1
     a84:	0e 94 c9 04 	call	0x992	; 0x992 <_ZN12OrangutanLCD8send_cmdEh>
     a88:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <printf_chars>
     a8c:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <printf_chars+0x1>
     a90:	89 2b       	or	r24, r25
     a92:	f9 f0       	breq	.+62     	; 0xad2 <_ZN12OrangutanLCD5clearEv+0x50>
     a94:	60 e0       	ldi	r22, 0x00	; 0
     a96:	a0 e2       	ldi	r26, 0x20	; 32
     a98:	26 2f       	mov	r18, r22
     a9a:	30 e0       	ldi	r19, 0x00	; 0
     a9c:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <numLCDCols>
     aa0:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <numLCDRows>
     aa4:	90 e0       	ldi	r25, 0x00	; 0
     aa6:	01 97       	sbiw	r24, 0x01	; 1
     aa8:	78 9f       	mul	r23, r24
     aaa:	a0 01       	movw	r20, r0
     aac:	79 9f       	mul	r23, r25
     aae:	50 0d       	add	r21, r0
     ab0:	11 24       	eor	r1, r1
     ab2:	24 17       	cp	r18, r20
     ab4:	35 07       	cpc	r19, r21
     ab6:	4c f4       	brge	.+18     	; 0xaca <_ZN12OrangutanLCD5clearEv+0x48>
     ab8:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <printf_chars>
     abc:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <printf_chars+0x1>
     ac0:	e2 0f       	add	r30, r18
     ac2:	f3 1f       	adc	r31, r19
     ac4:	a0 83       	st	Z, r26
     ac6:	6f 5f       	subi	r22, 0xFF	; 255
     ac8:	e7 cf       	rjmp	.-50     	; 0xa98 <_ZN12OrangutanLCD5clearEv+0x16>
     aca:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <col>
     ace:	10 92 3d 01 	sts	0x013D, r1	; 0x80013d <row>
     ad2:	08 95       	ret

00000ad4 <clear>:
     ad4:	0e 94 41 05 	call	0xa82	; 0xa82 <_ZN12OrangutanLCD5clearEv>
     ad8:	08 95       	ret

00000ada <_ZN12OrangutanLCD5printEPKc>:
     ada:	cf 93       	push	r28
     adc:	df 93       	push	r29
     ade:	ec 01       	movw	r28, r24
     ae0:	89 91       	ld	r24, Y+
     ae2:	88 23       	and	r24, r24
     ae4:	19 f0       	breq	.+6      	; 0xaec <_ZN12OrangutanLCD5printEPKc+0x12>
     ae6:	0e 94 ce 04 	call	0x99c	; 0x99c <_ZN12OrangutanLCD9send_dataEh>
     aea:	fa cf       	rjmp	.-12     	; 0xae0 <_ZN12OrangutanLCD5printEPKc+0x6>
     aec:	df 91       	pop	r29
     aee:	cf 91       	pop	r28
     af0:	08 95       	ret

00000af2 <print>:
     af2:	0e 94 6d 05 	call	0xada	; 0xada <_ZN12OrangutanLCD5printEPKc>
     af6:	08 95       	ret

00000af8 <_ZN12OrangutanLCD5printEm>:
     af8:	aa e0       	ldi	r26, 0x0A	; 10
     afa:	b0 e0       	ldi	r27, 0x00	; 0
     afc:	e2 e8       	ldi	r30, 0x82	; 130
     afe:	f5 e0       	ldi	r31, 0x05	; 5
     b00:	0c 94 44 0d 	jmp	0x1a88	; 0x1a88 <__prologue_saves__+0x14>
     b04:	1a e0       	ldi	r17, 0x0A	; 10
     b06:	5a e0       	ldi	r21, 0x0A	; 10
     b08:	c5 2e       	mov	r12, r21
     b0a:	d1 2c       	mov	r13, r1
     b0c:	e1 2c       	mov	r14, r1
     b0e:	f1 2c       	mov	r15, r1
     b10:	06 2f       	mov	r16, r22
     b12:	a7 01       	movw	r20, r14
     b14:	96 01       	movw	r18, r12
     b16:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <__udivmodsi4>
     b1a:	ca 01       	movw	r24, r20
     b1c:	b9 01       	movw	r22, r18
     b1e:	11 50       	subi	r17, 0x01	; 1
     b20:	e1 e0       	ldi	r30, 0x01	; 1
     b22:	f0 e0       	ldi	r31, 0x00	; 0
     b24:	ec 0f       	add	r30, r28
     b26:	fd 1f       	adc	r31, r29
     b28:	e1 0f       	add	r30, r17
     b2a:	f1 1d       	adc	r31, r1
     b2c:	00 5d       	subi	r16, 0xD0	; 208
     b2e:	2a e0       	ldi	r18, 0x0A	; 10
     b30:	62 9f       	mul	r22, r18
     b32:	00 19       	sub	r16, r0
     b34:	11 24       	eor	r1, r1
     b36:	00 83       	st	Z, r16
     b38:	61 15       	cp	r22, r1
     b3a:	71 05       	cpc	r23, r1
     b3c:	81 05       	cpc	r24, r1
     b3e:	91 05       	cpc	r25, r1
     b40:	39 f7       	brne	.-50     	; 0xb10 <_ZN12OrangutanLCD5printEm+0x18>
     b42:	1a 30       	cpi	r17, 0x0A	; 10
     b44:	58 f4       	brcc	.+22     	; 0xb5c <_ZN12OrangutanLCD5printEm+0x64>
     b46:	e1 e0       	ldi	r30, 0x01	; 1
     b48:	f0 e0       	ldi	r31, 0x00	; 0
     b4a:	ec 0f       	add	r30, r28
     b4c:	fd 1f       	adc	r31, r29
     b4e:	e1 0f       	add	r30, r17
     b50:	f1 1d       	adc	r31, r1
     b52:	80 81       	ld	r24, Z
     b54:	0e 94 ce 04 	call	0x99c	; 0x99c <_ZN12OrangutanLCD9send_dataEh>
     b58:	1f 5f       	subi	r17, 0xFF	; 255
     b5a:	f3 cf       	rjmp	.-26     	; 0xb42 <_ZN12OrangutanLCD5printEm+0x4a>
     b5c:	2a 96       	adiw	r28, 0x0a	; 10
     b5e:	e8 e0       	ldi	r30, 0x08	; 8
     b60:	0c 94 60 0d 	jmp	0x1ac0	; 0x1ac0 <__epilogue_restores__+0x14>

00000b64 <_ZN12OrangutanLCD5printEl>:
     b64:	cf 92       	push	r12
     b66:	df 92       	push	r13
     b68:	ef 92       	push	r14
     b6a:	ff 92       	push	r15
     b6c:	6b 01       	movw	r12, r22
     b6e:	7c 01       	movw	r14, r24
     b70:	97 ff       	sbrs	r25, 7
     b72:	0b c0       	rjmp	.+22     	; 0xb8a <_ZN12OrangutanLCD5printEl+0x26>
     b74:	f0 94       	com	r15
     b76:	e0 94       	com	r14
     b78:	d0 94       	com	r13
     b7a:	c0 94       	com	r12
     b7c:	c1 1c       	adc	r12, r1
     b7e:	d1 1c       	adc	r13, r1
     b80:	e1 1c       	adc	r14, r1
     b82:	f1 1c       	adc	r15, r1
     b84:	8d e2       	ldi	r24, 0x2D	; 45
     b86:	0e 94 ce 04 	call	0x99c	; 0x99c <_ZN12OrangutanLCD9send_dataEh>
     b8a:	c7 01       	movw	r24, r14
     b8c:	b6 01       	movw	r22, r12
     b8e:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <_ZN12OrangutanLCD5printEm>
     b92:	ff 90       	pop	r15
     b94:	ef 90       	pop	r14
     b96:	df 90       	pop	r13
     b98:	cf 90       	pop	r12
     b9a:	08 95       	ret

00000b9c <print_long>:
     b9c:	0e 94 b2 05 	call	0xb64	; 0xb64 <_ZN12OrangutanLCD5printEl>
     ba0:	08 95       	ret

00000ba2 <_ZN12OrangutanLCD6gotoXYEhh>:
     ba2:	a5 e0       	ldi	r26, 0x05	; 5
     ba4:	b0 e0       	ldi	r27, 0x00	; 0
     ba6:	e7 ed       	ldi	r30, 0xD7	; 215
     ba8:	f5 e0       	ldi	r31, 0x05	; 5
     baa:	0c 94 49 0d 	jmp	0x1a92	; 0x1a92 <__prologue_saves__+0x1e>
     bae:	18 2f       	mov	r17, r24
     bb0:	80 e8       	ldi	r24, 0x80	; 128
     bb2:	89 83       	std	Y+1, r24	; 0x01
     bb4:	80 ec       	ldi	r24, 0xC0	; 192
     bb6:	8a 83       	std	Y+2, r24	; 0x02
     bb8:	84 e9       	ldi	r24, 0x94	; 148
     bba:	8b 83       	std	Y+3, r24	; 0x03
     bbc:	84 ed       	ldi	r24, 0xD4	; 212
     bbe:	8c 83       	std	Y+4, r24	; 0x04
     bc0:	fe 01       	movw	r30, r28
     bc2:	e6 0f       	add	r30, r22
     bc4:	f1 1d       	adc	r31, r1
     bc6:	81 81       	ldd	r24, Z+1	; 0x01
     bc8:	81 0f       	add	r24, r17
     bca:	6d 83       	std	Y+5, r22	; 0x05
     bcc:	0e 94 c9 04 	call	0x992	; 0x992 <_ZN12OrangutanLCD8send_cmdEh>
     bd0:	10 93 3c 01 	sts	0x013C, r17	; 0x80013c <col>
     bd4:	6d 81       	ldd	r22, Y+5	; 0x05
     bd6:	60 93 3d 01 	sts	0x013D, r22	; 0x80013d <row>
     bda:	25 96       	adiw	r28, 0x05	; 5
     bdc:	e3 e0       	ldi	r30, 0x03	; 3
     bde:	0c 94 65 0d 	jmp	0x1aca	; 0x1aca <__epilogue_restores__+0x1e>

00000be2 <lcd_goto_xy>:
     be2:	0e 94 d1 05 	call	0xba2	; 0xba2 <_ZN12OrangutanLCD6gotoXYEhh>
     be6:	08 95       	ret

00000be8 <_ZN16OrangutanDigital9setOutputEhh>:
     be8:	88 30       	cpi	r24, 0x08	; 8
     bea:	58 f4       	brcc	.+22     	; 0xc02 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
     bec:	91 e0       	ldi	r25, 0x01	; 1
     bee:	01 c0       	rjmp	.+2      	; 0xbf2 <_ZN16OrangutanDigital9setOutputEhh+0xa>
     bf0:	99 0f       	add	r25, r25
     bf2:	8a 95       	dec	r24
     bf4:	ea f7       	brpl	.-6      	; 0xbf0 <_ZN16OrangutanDigital9setOutputEhh+0x8>
     bf6:	89 2f       	mov	r24, r25
     bf8:	aa e2       	ldi	r26, 0x2A	; 42
     bfa:	b0 e0       	ldi	r27, 0x00	; 0
     bfc:	eb e2       	ldi	r30, 0x2B	; 43
     bfe:	f0 e0       	ldi	r31, 0x00	; 0
     c00:	21 c0       	rjmp	.+66     	; 0xc44 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     c02:	8e 30       	cpi	r24, 0x0E	; 14
     c04:	60 f4       	brcc	.+24     	; 0xc1e <_ZN16OrangutanDigital9setOutputEhh+0x36>
     c06:	98 ef       	ldi	r25, 0xF8	; 248
     c08:	98 0f       	add	r25, r24
     c0a:	81 e0       	ldi	r24, 0x01	; 1
     c0c:	01 c0       	rjmp	.+2      	; 0xc10 <_ZN16OrangutanDigital9setOutputEhh+0x28>
     c0e:	88 0f       	add	r24, r24
     c10:	9a 95       	dec	r25
     c12:	ea f7       	brpl	.-6      	; 0xc0e <_ZN16OrangutanDigital9setOutputEhh+0x26>
     c14:	a4 e2       	ldi	r26, 0x24	; 36
     c16:	b0 e0       	ldi	r27, 0x00	; 0
     c18:	e5 e2       	ldi	r30, 0x25	; 37
     c1a:	f0 e0       	ldi	r31, 0x00	; 0
     c1c:	13 c0       	rjmp	.+38     	; 0xc44 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     c1e:	85 31       	cpi	r24, 0x15	; 21
     c20:	60 f4       	brcc	.+24     	; 0xc3a <_ZN16OrangutanDigital9setOutputEhh+0x52>
     c22:	92 ef       	ldi	r25, 0xF2	; 242
     c24:	98 0f       	add	r25, r24
     c26:	81 e0       	ldi	r24, 0x01	; 1
     c28:	01 c0       	rjmp	.+2      	; 0xc2c <_ZN16OrangutanDigital9setOutputEhh+0x44>
     c2a:	88 0f       	add	r24, r24
     c2c:	9a 95       	dec	r25
     c2e:	ea f7       	brpl	.-6      	; 0xc2a <_ZN16OrangutanDigital9setOutputEhh+0x42>
     c30:	a7 e2       	ldi	r26, 0x27	; 39
     c32:	b0 e0       	ldi	r27, 0x00	; 0
     c34:	e8 e2       	ldi	r30, 0x28	; 40
     c36:	f0 e0       	ldi	r31, 0x00	; 0
     c38:	05 c0       	rjmp	.+10     	; 0xc44 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     c3a:	80 e0       	ldi	r24, 0x00	; 0
     c3c:	a0 e0       	ldi	r26, 0x00	; 0
     c3e:	b0 e0       	ldi	r27, 0x00	; 0
     c40:	e0 e0       	ldi	r30, 0x00	; 0
     c42:	f0 e0       	ldi	r31, 0x00	; 0
     c44:	6f 3f       	cpi	r22, 0xFF	; 255
     c46:	19 f4       	brne	.+6      	; 0xc4e <_ZN16OrangutanDigital9setOutputEhh+0x66>
     c48:	90 81       	ld	r25, Z
     c4a:	98 27       	eor	r25, r24
     c4c:	09 c0       	rjmp	.+18     	; 0xc60 <_ZN16OrangutanDigital9setOutputEhh+0x78>
     c4e:	66 23       	and	r22, r22
     c50:	19 f0       	breq	.+6      	; 0xc58 <_ZN16OrangutanDigital9setOutputEhh+0x70>
     c52:	90 81       	ld	r25, Z
     c54:	98 2b       	or	r25, r24
     c56:	04 c0       	rjmp	.+8      	; 0xc60 <_ZN16OrangutanDigital9setOutputEhh+0x78>
     c58:	20 81       	ld	r18, Z
     c5a:	98 2f       	mov	r25, r24
     c5c:	90 95       	com	r25
     c5e:	92 23       	and	r25, r18
     c60:	90 83       	st	Z, r25
     c62:	9c 91       	ld	r25, X
     c64:	98 2b       	or	r25, r24
     c66:	9c 93       	st	X, r25
     c68:	08 95       	ret

00000c6a <_ZN15OrangutanMotors5init2Ev>:
     c6a:	83 ef       	ldi	r24, 0xF3	; 243
     c6c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     c70:	84 bd       	out	0x24, r24	; 36
     c72:	82 e0       	ldi	r24, 0x02	; 2
     c74:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
     c78:	85 bd       	out	0x25, r24	; 37
     c7a:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     c7e:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     c82:	18 bc       	out	0x28, r1	; 40
     c84:	17 bc       	out	0x27, r1	; 39
     c86:	60 e0       	ldi	r22, 0x00	; 0
     c88:	86 e0       	ldi	r24, 0x06	; 6
     c8a:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <_ZN16OrangutanDigital9setOutputEhh>
     c8e:	60 e0       	ldi	r22, 0x00	; 0
     c90:	85 e0       	ldi	r24, 0x05	; 5
     c92:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <_ZN16OrangutanDigital9setOutputEhh>
     c96:	60 e0       	ldi	r22, 0x00	; 0
     c98:	8b e0       	ldi	r24, 0x0B	; 11
     c9a:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <_ZN16OrangutanDigital9setOutputEhh>
     c9e:	60 e0       	ldi	r22, 0x00	; 0
     ca0:	83 e0       	ldi	r24, 0x03	; 3
     ca2:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <_ZN16OrangutanDigital9setOutputEhh>
     ca6:	08 95       	ret

00000ca8 <_ZN15OrangutanMotors4initEv>:
     ca8:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <_ZZN15OrangutanMotors4initEvE11initialized>
     cac:	81 11       	cpse	r24, r1
     cae:	05 c0       	rjmp	.+10     	; 0xcba <_ZN15OrangutanMotors4initEv+0x12>
     cb0:	81 e0       	ldi	r24, 0x01	; 1
     cb2:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <_ZZN15OrangutanMotors4initEvE11initialized>
     cb6:	0e 94 35 06 	call	0xc6a	; 0xc6a <_ZN15OrangutanMotors5init2Ev>
     cba:	08 95       	ret

00000cbc <_ZN15OrangutanMotors10setM1SpeedEi>:
     cbc:	cf 93       	push	r28
     cbe:	df 93       	push	r29
     cc0:	ec 01       	movw	r28, r24
     cc2:	0e 94 54 06 	call	0xca8	; 0xca8 <_ZN15OrangutanMotors4initEv>
     cc6:	d7 ff       	sbrs	r29, 7
     cc8:	05 c0       	rjmp	.+10     	; 0xcd4 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
     cca:	d1 95       	neg	r29
     ccc:	c1 95       	neg	r28
     cce:	d1 09       	sbc	r29, r1
     cd0:	81 e0       	ldi	r24, 0x01	; 1
     cd2:	01 c0       	rjmp	.+2      	; 0xcd6 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
     cd4:	80 e0       	ldi	r24, 0x00	; 0
     cd6:	cf 3f       	cpi	r28, 0xFF	; 255
     cd8:	d1 05       	cpc	r29, r1
     cda:	19 f0       	breq	.+6      	; 0xce2 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     cdc:	14 f0       	brlt	.+4      	; 0xce2 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     cde:	cf ef       	ldi	r28, 0xFF	; 255
     ce0:	d0 e0       	ldi	r29, 0x00	; 0
     ce2:	88 23       	and	r24, r24
     ce4:	19 f0       	breq	.+6      	; 0xcec <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
     ce6:	18 bc       	out	0x28, r1	; 40
     ce8:	c7 bd       	out	0x27, r28	; 39
     cea:	02 c0       	rjmp	.+4      	; 0xcf0 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
     cec:	c8 bd       	out	0x28, r28	; 40
     cee:	17 bc       	out	0x27, r1	; 39
     cf0:	df 91       	pop	r29
     cf2:	cf 91       	pop	r28
     cf4:	08 95       	ret

00000cf6 <_ZN15OrangutanMotors10setM2SpeedEi>:
     cf6:	cf 93       	push	r28
     cf8:	df 93       	push	r29
     cfa:	ec 01       	movw	r28, r24
     cfc:	0e 94 54 06 	call	0xca8	; 0xca8 <_ZN15OrangutanMotors4initEv>
     d00:	d7 ff       	sbrs	r29, 7
     d02:	05 c0       	rjmp	.+10     	; 0xd0e <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
     d04:	d1 95       	neg	r29
     d06:	c1 95       	neg	r28
     d08:	d1 09       	sbc	r29, r1
     d0a:	81 e0       	ldi	r24, 0x01	; 1
     d0c:	01 c0       	rjmp	.+2      	; 0xd10 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
     d0e:	80 e0       	ldi	r24, 0x00	; 0
     d10:	cf 3f       	cpi	r28, 0xFF	; 255
     d12:	d1 05       	cpc	r29, r1
     d14:	19 f0       	breq	.+6      	; 0xd1c <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     d16:	14 f0       	brlt	.+4      	; 0xd1c <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     d18:	cf ef       	ldi	r28, 0xFF	; 255
     d1a:	d0 e0       	ldi	r29, 0x00	; 0
     d1c:	88 23       	and	r24, r24
     d1e:	29 f0       	breq	.+10     	; 0xd2a <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
     d20:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     d24:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     d28:	04 c0       	rjmp	.+8      	; 0xd32 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
     d2a:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     d2e:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     d32:	df 91       	pop	r29
     d34:	cf 91       	pop	r28
     d36:	08 95       	ret

00000d38 <_ZN15OrangutanMotors9setSpeedsEii>:
     d38:	cf 93       	push	r28
     d3a:	df 93       	push	r29
     d3c:	eb 01       	movw	r28, r22
     d3e:	0e 94 5e 06 	call	0xcbc	; 0xcbc <_ZN15OrangutanMotors10setM1SpeedEi>
     d42:	ce 01       	movw	r24, r28
     d44:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <_ZN15OrangutanMotors10setM2SpeedEi>
     d48:	df 91       	pop	r29
     d4a:	cf 91       	pop	r28
     d4c:	08 95       	ret

00000d4e <set_motors>:
     d4e:	0e 94 9c 06 	call	0xd38	; 0xd38 <_ZN15OrangutanMotors9setSpeedsEii>
     d52:	08 95       	ret

00000d54 <_ZN20OrangutanPushbuttons5init2Ev>:
     d54:	84 b1       	in	r24, 0x04	; 4
     d56:	8d 7c       	andi	r24, 0xCD	; 205
     d58:	84 b9       	out	0x04, r24	; 4
     d5a:	85 b1       	in	r24, 0x05	; 5
     d5c:	82 63       	ori	r24, 0x32	; 50
     d5e:	85 b9       	out	0x05, r24	; 5
     d60:	85 e0       	ldi	r24, 0x05	; 5
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	6f 93       	push	r22
     d66:	64 e0       	ldi	r22, 0x04	; 4
     d68:	6a 95       	dec	r22
     d6a:	f1 f7       	brne	.-4      	; 0xd68 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
     d6c:	6f 91       	pop	r22
     d6e:	01 97       	sbiw	r24, 0x01	; 1
     d70:	c9 f7       	brne	.-14     	; 0xd64 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
     d72:	08 95       	ret

00000d74 <_ZN20OrangutanPushbuttons4initEv>:
     d74:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
     d78:	81 11       	cpse	r24, r1
     d7a:	05 c0       	rjmp	.+10     	; 0xd86 <_ZN20OrangutanPushbuttons4initEv+0x12>
     d7c:	81 e0       	ldi	r24, 0x01	; 1
     d7e:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
     d82:	0e 94 aa 06 	call	0xd54	; 0xd54 <_ZN20OrangutanPushbuttons5init2Ev>
     d86:	08 95       	ret

00000d88 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
     d88:	cf 93       	push	r28
     d8a:	c8 2f       	mov	r28, r24
     d8c:	0e 94 ba 06 	call	0xd74	; 0xd74 <_ZN20OrangutanPushbuttons4initEv>
     d90:	83 b1       	in	r24, 0x03	; 3
     d92:	8c 23       	and	r24, r28
     d94:	e9 f3       	breq	.-6      	; 0xd90 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
     d96:	8a e0       	ldi	r24, 0x0A	; 10
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	0e 94 35 07 	call	0xe6a	; 0xe6a <delay_ms>
     d9e:	83 b1       	in	r24, 0x03	; 3
     da0:	8c 23       	and	r24, r28
     da2:	b1 f3       	breq	.-20     	; 0xd90 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
     da4:	83 b1       	in	r24, 0x03	; 3
     da6:	8c 23       	and	r24, r28
     da8:	cf 91       	pop	r28
     daa:	08 95       	ret

00000dac <wait_for_button_release>:
     dac:	0e 94 c4 06 	call	0xd88	; 0xd88 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
     db0:	08 95       	ret

00000db2 <_ZN20OrangutanPushbuttons9isPressedEh>:
     db2:	a1 e0       	ldi	r26, 0x01	; 1
     db4:	b0 e0       	ldi	r27, 0x00	; 0
     db6:	ef ed       	ldi	r30, 0xDF	; 223
     db8:	f6 e0       	ldi	r31, 0x06	; 6
     dba:	0c 94 4a 0d 	jmp	0x1a94	; 0x1a94 <__prologue_saves__+0x20>
     dbe:	89 83       	std	Y+1, r24	; 0x01
     dc0:	0e 94 ba 06 	call	0xd74	; 0xd74 <_ZN20OrangutanPushbuttons4initEv>
     dc4:	93 b1       	in	r25, 0x03	; 3
     dc6:	90 95       	com	r25
     dc8:	89 81       	ldd	r24, Y+1	; 0x01
     dca:	89 23       	and	r24, r25
     dcc:	21 96       	adiw	r28, 0x01	; 1
     dce:	e2 e0       	ldi	r30, 0x02	; 2
     dd0:	0c 94 66 0d 	jmp	0x1acc	; 0x1acc <__epilogue_restores__+0x20>

00000dd4 <button_is_pressed>:
     dd4:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <_ZN20OrangutanPushbuttons9isPressedEh>
     dd8:	08 95       	ret

00000dda <__vector_9>:
     dda:	2f 92       	push	r2
     ddc:	8f 93       	push	r24
     dde:	9f 93       	push	r25
     de0:	2f b6       	in	r2, 0x3f	; 63
     de2:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <tickCount+0x1>
     de6:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <tickCount+0x2>
     dea:	01 96       	adiw	r24, 0x01	; 1
     dec:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <tickCount+0x1>
     df0:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <tickCount+0x2>
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <tickCount+0x3>
     dfa:	89 1f       	adc	r24, r25
     dfc:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <tickCount+0x3>
     e00:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <us_over_10+0x1>
     e04:	9c 5f       	subi	r25, 0xFC	; 252
     e06:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <us_over_10+0x1>
     e0a:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <us_over_10>
     e0e:	80 51       	subi	r24, 0x10	; 16
     e10:	97 42       	sbci	r25, 0x27	; 39
     e12:	c0 f0       	brcs	.+48     	; 0xe44 <end>
     e14:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <us_over_10+0x1>
     e18:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <us_over_10>
     e1c:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <msCounter>
     e20:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <msCounter+0x1>
     e24:	01 96       	adiw	r24, 0x01	; 1
     e26:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <msCounter>
     e2a:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <msCounter+0x1>
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <msCounter+0x2>
     e34:	89 1f       	adc	r24, r25
     e36:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <msCounter+0x2>
     e3a:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <msCounter+0x3>
     e3e:	89 1f       	adc	r24, r25
     e40:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <msCounter+0x3>

00000e44 <end>:
     e44:	2f be       	out	0x3f, r2	; 63
     e46:	9f 91       	pop	r25
     e48:	8f 91       	pop	r24
     e4a:	2f 90       	pop	r2
     e4c:	18 95       	reti

00000e4e <_ZN13OrangutanTime17delayMillisecondsEj>:
     e4e:	28 ee       	ldi	r18, 0xE8	; 232
     e50:	33 e0       	ldi	r19, 0x03	; 3
     e52:	01 97       	sbiw	r24, 0x01	; 1
     e54:	48 f0       	brcs	.+18     	; 0xe68 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
     e56:	f9 01       	movw	r30, r18
     e58:	6f 93       	push	r22
     e5a:	64 e0       	ldi	r22, 0x04	; 4
     e5c:	6a 95       	dec	r22
     e5e:	f1 f7       	brne	.-4      	; 0xe5c <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
     e60:	6f 91       	pop	r22
     e62:	31 97       	sbiw	r30, 0x01	; 1
     e64:	c9 f7       	brne	.-14     	; 0xe58 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
     e66:	f5 cf       	rjmp	.-22     	; 0xe52 <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
     e68:	08 95       	ret

00000e6a <delay_ms>:
     e6a:	0e 94 27 07 	call	0xe4e	; 0xe4e <_ZN13OrangutanTime17delayMillisecondsEj>
     e6e:	08 95       	ret

00000e70 <_ZN13OrangutanTime5init2Ev>:
     e70:	e0 e7       	ldi	r30, 0x70	; 112
     e72:	f0 e0       	ldi	r31, 0x00	; 0
     e74:	80 81       	ld	r24, Z
     e76:	8e 7f       	andi	r24, 0xFE	; 254
     e78:	80 83       	st	Z, r24
     e7a:	a0 eb       	ldi	r26, 0xB0	; 176
     e7c:	b0 e0       	ldi	r27, 0x00	; 0
     e7e:	8c 91       	ld	r24, X
     e80:	83 60       	ori	r24, 0x03	; 3
     e82:	8c 93       	st	X, r24
     e84:	a1 eb       	ldi	r26, 0xB1	; 177
     e86:	b0 e0       	ldi	r27, 0x00	; 0
     e88:	8c 91       	ld	r24, X
     e8a:	80 7f       	andi	r24, 0xF0	; 240
     e8c:	8c 93       	st	X, r24
     e8e:	8c 91       	ld	r24, X
     e90:	82 60       	ori	r24, 0x02	; 2
     e92:	8c 93       	st	X, r24
     e94:	b8 9a       	sbi	0x17, 0	; 23
     e96:	80 81       	ld	r24, Z
     e98:	81 60       	ori	r24, 0x01	; 1
     e9a:	80 83       	st	Z, r24
     e9c:	78 94       	sei
     e9e:	08 95       	ret

00000ea0 <_ZN13OrangutanTime4initEv>:
     ea0:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <_ZZN13OrangutanTime4initEvE11initialized>
     ea4:	81 11       	cpse	r24, r1
     ea6:	05 c0       	rjmp	.+10     	; 0xeb2 <_ZN13OrangutanTime4initEv+0x12>
     ea8:	81 e0       	ldi	r24, 0x01	; 1
     eaa:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <_ZZN13OrangutanTime4initEvE11initialized>
     eae:	0e 94 38 07 	call	0xe70	; 0xe70 <_ZN13OrangutanTime5init2Ev>
     eb2:	08 95       	ret

00000eb4 <_ZN13OrangutanTime5resetEv>:
     eb4:	0e 94 50 07 	call	0xea0	; 0xea0 <_ZN13OrangutanTime4initEv>
     eb8:	e0 e7       	ldi	r30, 0x70	; 112
     eba:	f0 e0       	ldi	r31, 0x00	; 0
     ebc:	80 81       	ld	r24, Z
     ebe:	8e 7f       	andi	r24, 0xFE	; 254
     ec0:	80 83       	st	Z, r24
     ec2:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <msCounter>
     ec6:	10 92 43 01 	sts	0x0143, r1	; 0x800143 <msCounter+0x1>
     eca:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <msCounter+0x2>
     ece:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <msCounter+0x3>
     ed2:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <us_over_10+0x1>
     ed6:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <us_over_10>
     eda:	80 81       	ld	r24, Z
     edc:	81 60       	ori	r24, 0x01	; 1
     ede:	80 83       	st	Z, r24
     ee0:	08 95       	ret

00000ee2 <calibrate_line_sensors>:
     ee2:	68 2f       	mov	r22, r24
     ee4:	8a e4       	ldi	r24, 0x4A	; 74
     ee6:	91 e0       	ldi	r25, 0x01	; 1
     ee8:	0e 94 59 0b 	call	0x16b2	; 0x16b2 <_ZN16PololuQTRSensors9calibrateEh>
     eec:	08 95       	ret

00000eee <read_line>:
     eee:	46 2f       	mov	r20, r22
     ef0:	20 e0       	ldi	r18, 0x00	; 0
     ef2:	bc 01       	movw	r22, r24
     ef4:	8a e4       	ldi	r24, 0x4A	; 74
     ef6:	91 e0       	ldi	r25, 0x01	; 1
     ef8:	0e 94 2a 0c 	call	0x1854	; 0x1854 <_ZN16PololuQTRSensors8readLineEPjhh>
     efc:	08 95       	ret

00000efe <_ZN9Pololu3pi4initEjh>:
     efe:	0f 93       	push	r16
     f00:	cf 93       	push	r28
     f02:	df 93       	push	r29
     f04:	00 d0       	rcall	.+0      	; 0xf06 <_ZN9Pololu3pi4initEjh+0x8>
     f06:	00 d0       	rcall	.+0      	; 0xf08 <_ZN9Pololu3pi4initEjh+0xa>
     f08:	1f 92       	push	r1
     f0a:	cd b7       	in	r28, 0x3d	; 61
     f0c:	de b7       	in	r29, 0x3e	; 62
     f0e:	9c 01       	movw	r18, r24
     f10:	85 e0       	ldi	r24, 0x05	; 5
     f12:	e4 e1       	ldi	r30, 0x14	; 20
     f14:	f1 e0       	ldi	r31, 0x01	; 1
     f16:	de 01       	movw	r26, r28
     f18:	11 96       	adiw	r26, 0x01	; 1
     f1a:	01 90       	ld	r0, Z+
     f1c:	0d 92       	st	X+, r0
     f1e:	8a 95       	dec	r24
     f20:	e1 f7       	brne	.-8      	; 0xf1a <_ZN9Pololu3pi4initEjh+0x1c>
     f22:	66 23       	and	r22, r22
     f24:	11 f0       	breq	.+4      	; 0xf2a <_ZN9Pololu3pi4initEjh+0x2c>
     f26:	0f ef       	ldi	r16, 0xFF	; 255
     f28:	01 c0       	rjmp	.+2      	; 0xf2c <_ZN9Pololu3pi4initEjh+0x2e>
     f2a:	03 e1       	ldi	r16, 0x13	; 19
     f2c:	45 e0       	ldi	r20, 0x05	; 5
     f2e:	be 01       	movw	r22, r28
     f30:	6f 5f       	subi	r22, 0xFF	; 255
     f32:	7f 4f       	sbci	r23, 0xFF	; 255
     f34:	8a e4       	ldi	r24, 0x4A	; 74
     f36:	91 e0       	ldi	r25, 0x01	; 1
     f38:	0e 94 51 08 	call	0x10a2	; 0x10a2 <_ZN18PololuQTRSensorsRC4initEPhhjh>
     f3c:	8a e4       	ldi	r24, 0x4A	; 74
     f3e:	91 e0       	ldi	r25, 0x01	; 1
     f40:	0e 94 28 08 	call	0x1050	; 0x1050 <_ZN16PololuQTRSensors11emittersOffEv>
     f44:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <_ZN13OrangutanTime5resetEv>
     f48:	0f 90       	pop	r0
     f4a:	0f 90       	pop	r0
     f4c:	0f 90       	pop	r0
     f4e:	0f 90       	pop	r0
     f50:	0f 90       	pop	r0
     f52:	df 91       	pop	r29
     f54:	cf 91       	pop	r28
     f56:	0f 91       	pop	r16
     f58:	08 95       	ret

00000f5a <pololu_3pi_init>:
     f5a:	60 e0       	ldi	r22, 0x00	; 0
     f5c:	0e 94 7f 07 	call	0xefe	; 0xefe <_ZN9Pololu3pi4initEjh>
     f60:	08 95       	ret

00000f62 <_GLOBAL__sub_D_pololu_3pi_init>:
     f62:	8a e4       	ldi	r24, 0x4A	; 74
     f64:	91 e0       	ldi	r25, 0x01	; 1
     f66:	0e 94 9f 0c 	call	0x193e	; 0x193e <_ZN16PololuQTRSensorsD1Ev>
     f6a:	08 95       	ret

00000f6c <delay_us>:
     f6c:	6f 93       	push	r22
     f6e:	64 e0       	ldi	r22, 0x04	; 4
     f70:	6a 95       	dec	r22
     f72:	f1 f7       	brne	.-4      	; 0xf70 <delay_us+0x4>
     f74:	6f 91       	pop	r22
     f76:	01 97       	sbiw	r24, 0x01	; 1
     f78:	c9 f7       	brne	.-14     	; 0xf6c <delay_us>
     f7a:	08 95       	ret

00000f7c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
     f7c:	fc 01       	movw	r30, r24
     f7e:	11 82       	std	Z+1, r1	; 0x01
     f80:	10 82       	st	Z, r1
     f82:	13 82       	std	Z+3, r1	; 0x03
     f84:	12 82       	std	Z+2, r1	; 0x02
     f86:	15 82       	std	Z+5, r1	; 0x05
     f88:	14 82       	std	Z+4, r1	; 0x04
     f8a:	16 82       	std	Z+6, r1	; 0x06
     f8c:	68 30       	cpi	r22, 0x08	; 8
     f8e:	68 f4       	brcc	.+26     	; 0xfaa <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
     f90:	89 e2       	ldi	r24, 0x29	; 41
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	91 83       	std	Z+1, r25	; 0x01
     f96:	80 83       	st	Z, r24
     f98:	8b e2       	ldi	r24, 0x2B	; 43
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	93 83       	std	Z+3, r25	; 0x03
     f9e:	82 83       	std	Z+2, r24	; 0x02
     fa0:	8a e2       	ldi	r24, 0x2A	; 42
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	95 83       	std	Z+5, r25	; 0x05
     fa6:	84 83       	std	Z+4, r24	; 0x04
     fa8:	1f c0       	rjmp	.+62     	; 0xfe8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
     faa:	6e 30       	cpi	r22, 0x0E	; 14
     fac:	70 f4       	brcc	.+28     	; 0xfca <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
     fae:	83 e2       	ldi	r24, 0x23	; 35
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	91 83       	std	Z+1, r25	; 0x01
     fb4:	80 83       	st	Z, r24
     fb6:	85 e2       	ldi	r24, 0x25	; 37
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	93 83       	std	Z+3, r25	; 0x03
     fbc:	82 83       	std	Z+2, r24	; 0x02
     fbe:	84 e2       	ldi	r24, 0x24	; 36
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	95 83       	std	Z+5, r25	; 0x05
     fc4:	84 83       	std	Z+4, r24	; 0x04
     fc6:	68 50       	subi	r22, 0x08	; 8
     fc8:	0f c0       	rjmp	.+30     	; 0xfe8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
     fca:	65 31       	cpi	r22, 0x15	; 21
     fcc:	98 f4       	brcc	.+38     	; 0xff4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
     fce:	86 e2       	ldi	r24, 0x26	; 38
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	91 83       	std	Z+1, r25	; 0x01
     fd4:	80 83       	st	Z, r24
     fd6:	88 e2       	ldi	r24, 0x28	; 40
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	93 83       	std	Z+3, r25	; 0x03
     fdc:	82 83       	std	Z+2, r24	; 0x02
     fde:	87 e2       	ldi	r24, 0x27	; 39
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	95 83       	std	Z+5, r25	; 0x05
     fe4:	84 83       	std	Z+4, r24	; 0x04
     fe6:	6e 50       	subi	r22, 0x0E	; 14
     fe8:	81 e0       	ldi	r24, 0x01	; 1
     fea:	01 c0       	rjmp	.+2      	; 0xfee <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
     fec:	88 0f       	add	r24, r24
     fee:	6a 95       	dec	r22
     ff0:	ea f7       	brpl	.-6      	; 0xfec <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
     ff2:	86 83       	std	Z+6, r24	; 0x06
     ff4:	08 95       	ret

00000ff6 <_ZN16PololuQTRSensors4initEhhh>:
     ff6:	a7 e0       	ldi	r26, 0x07	; 7
     ff8:	b0 e0       	ldi	r27, 0x00	; 0
     ffa:	e1 e0       	ldi	r30, 0x01	; 1
     ffc:	f8 e0       	ldi	r31, 0x08	; 8
     ffe:	0c 94 48 0d 	jmp	0x1a90	; 0x1a90 <__prologue_saves__+0x1c>
    1002:	8c 01       	movw	r16, r24
    1004:	fc 01       	movw	r30, r24
    1006:	11 82       	std	Z+1, r1	; 0x01
    1008:	10 82       	st	Z, r1
    100a:	13 82       	std	Z+3, r1	; 0x03
    100c:	12 82       	std	Z+2, r1	; 0x02
    100e:	15 82       	std	Z+5, r1	; 0x05
    1010:	14 82       	std	Z+4, r1	; 0x04
    1012:	17 82       	std	Z+7, r1	; 0x07
    1014:	16 82       	std	Z+6, r1	; 0x06
    1016:	61 31       	cpi	r22, 0x11	; 17
    1018:	18 f0       	brcs	.+6      	; 0x1020 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    101a:	80 e1       	ldi	r24, 0x10	; 16
    101c:	80 87       	std	Z+8, r24	; 0x08
    101e:	02 c0       	rjmp	.+4      	; 0x1024 <_ZN16PololuQTRSensors4initEhhh+0x2e>
    1020:	fc 01       	movw	r30, r24
    1022:	60 87       	std	Z+8, r22	; 0x08
    1024:	f8 01       	movw	r30, r16
    1026:	20 8b       	std	Z+16, r18	; 0x10
    1028:	64 2f       	mov	r22, r20
    102a:	ce 01       	movw	r24, r28
    102c:	01 96       	adiw	r24, 0x01	; 1
    102e:	0e 94 be 07 	call	0xf7c	; 0xf7c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1032:	8f 81       	ldd	r24, Y+7	; 0x07
    1034:	f8 01       	movw	r30, r16
    1036:	81 87       	std	Z+9, r24	; 0x09
    1038:	8b 81       	ldd	r24, Y+3	; 0x03
    103a:	9c 81       	ldd	r25, Y+4	; 0x04
    103c:	93 87       	std	Z+11, r25	; 0x0b
    103e:	82 87       	std	Z+10, r24	; 0x0a
    1040:	8d 81       	ldd	r24, Y+5	; 0x05
    1042:	9e 81       	ldd	r25, Y+6	; 0x06
    1044:	95 87       	std	Z+13, r25	; 0x0d
    1046:	84 87       	std	Z+12, r24	; 0x0c
    1048:	27 96       	adiw	r28, 0x07	; 7
    104a:	e4 e0       	ldi	r30, 0x04	; 4
    104c:	0c 94 64 0d 	jmp	0x1ac8	; 0x1ac8 <__epilogue_restores__+0x1c>

00001050 <_ZN16PololuQTRSensors11emittersOffEv>:
    1050:	fc 01       	movw	r30, r24
    1052:	a4 85       	ldd	r26, Z+12	; 0x0c
    1054:	b5 85       	ldd	r27, Z+13	; 0x0d
    1056:	10 97       	sbiw	r26, 0x00	; 0
    1058:	79 f0       	breq	.+30     	; 0x1078 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    105a:	8c 91       	ld	r24, X
    105c:	91 85       	ldd	r25, Z+9	; 0x09
    105e:	89 2b       	or	r24, r25
    1060:	8c 93       	st	X, r24
    1062:	a2 85       	ldd	r26, Z+10	; 0x0a
    1064:	b3 85       	ldd	r27, Z+11	; 0x0b
    1066:	9c 91       	ld	r25, X
    1068:	81 85       	ldd	r24, Z+9	; 0x09
    106a:	80 95       	com	r24
    106c:	89 23       	and	r24, r25
    106e:	8c 93       	st	X, r24
    1070:	88 ec       	ldi	r24, 0xC8	; 200
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	0e 94 b6 07 	call	0xf6c	; 0xf6c <delay_us>
    1078:	08 95       	ret

0000107a <_ZN16PololuQTRSensors10emittersOnEv>:
    107a:	fc 01       	movw	r30, r24
    107c:	a4 85       	ldd	r26, Z+12	; 0x0c
    107e:	b5 85       	ldd	r27, Z+13	; 0x0d
    1080:	10 97       	sbiw	r26, 0x00	; 0
    1082:	71 f0       	breq	.+28     	; 0x10a0 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    1084:	8c 91       	ld	r24, X
    1086:	91 85       	ldd	r25, Z+9	; 0x09
    1088:	89 2b       	or	r24, r25
    108a:	8c 93       	st	X, r24
    108c:	a2 85       	ldd	r26, Z+10	; 0x0a
    108e:	b3 85       	ldd	r27, Z+11	; 0x0b
    1090:	8c 91       	ld	r24, X
    1092:	91 85       	ldd	r25, Z+9	; 0x09
    1094:	89 2b       	or	r24, r25
    1096:	8c 93       	st	X, r24
    1098:	88 ec       	ldi	r24, 0xC8	; 200
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	0e 94 b6 07 	call	0xf6c	; 0xf6c <delay_us>
    10a0:	08 95       	ret

000010a2 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    10a2:	a7 e0       	ldi	r26, 0x07	; 7
    10a4:	b0 e0       	ldi	r27, 0x00	; 0
    10a6:	e7 e5       	ldi	r30, 0x57	; 87
    10a8:	f8 e0       	ldi	r31, 0x08	; 8
    10aa:	0c 94 3d 0d 	jmp	0x1a7a	; 0x1a7a <__prologue_saves__+0x6>
    10ae:	7c 01       	movw	r14, r24
    10b0:	4b 01       	movw	r8, r22
    10b2:	64 2f       	mov	r22, r20
    10b4:	39 01       	movw	r6, r18
    10b6:	40 2f       	mov	r20, r16
    10b8:	20 e0       	ldi	r18, 0x00	; 0
    10ba:	0e 94 fb 07 	call	0xff6	; 0xff6 <_ZN16PololuQTRSensors4initEhhh>
    10be:	87 01       	movw	r16, r14
    10c0:	0f 5b       	subi	r16, 0xBF	; 191
    10c2:	1f 4f       	sbci	r17, 0xFF	; 255
    10c4:	f8 01       	movw	r30, r16
    10c6:	10 82       	st	Z, r1
    10c8:	67 01       	movw	r12, r14
    10ca:	f2 e4       	ldi	r31, 0x42	; 66
    10cc:	cf 0e       	add	r12, r31
    10ce:	d1 1c       	adc	r13, r1
    10d0:	f6 01       	movw	r30, r12
    10d2:	10 82       	st	Z, r1
    10d4:	57 01       	movw	r10, r14
    10d6:	f3 e4       	ldi	r31, 0x43	; 67
    10d8:	af 0e       	add	r10, r31
    10da:	b1 1c       	adc	r11, r1
    10dc:	f5 01       	movw	r30, r10
    10de:	10 82       	st	Z, r1
    10e0:	f7 01       	movw	r30, r14
    10e2:	77 86       	std	Z+15, r7	; 0x0f
    10e4:	66 86       	std	Z+14, r6	; 0x0e
    10e6:	51 2c       	mov	r5, r1
    10e8:	f7 01       	movw	r30, r14
    10ea:	80 85       	ldd	r24, Z+8	; 0x08
    10ec:	58 16       	cp	r5, r24
    10ee:	50 f5       	brcc	.+84     	; 0x1144 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    10f0:	65 2c       	mov	r6, r5
    10f2:	71 2c       	mov	r7, r1
    10f4:	f4 01       	movw	r30, r8
    10f6:	e6 0d       	add	r30, r6
    10f8:	f7 1d       	adc	r31, r7
    10fa:	60 81       	ld	r22, Z
    10fc:	ce 01       	movw	r24, r28
    10fe:	01 96       	adiw	r24, 0x01	; 1
    1100:	0e 94 be 07 	call	0xf7c	; 0xf7c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1104:	2f 81       	ldd	r18, Y+7	; 0x07
    1106:	f7 01       	movw	r30, r14
    1108:	e6 0d       	add	r30, r6
    110a:	f7 1d       	adc	r31, r7
    110c:	21 8b       	std	Z+17, r18	; 0x11
    110e:	89 81       	ldd	r24, Y+1	; 0x01
    1110:	9a 81       	ldd	r25, Y+2	; 0x02
    1112:	f3 01       	movw	r30, r6
    1114:	ee 0f       	add	r30, r30
    1116:	ff 1f       	adc	r31, r31
    1118:	ee 0d       	add	r30, r14
    111a:	ff 1d       	adc	r31, r15
    111c:	92 a3       	std	Z+34, r25	; 0x22
    111e:	81 a3       	std	Z+33, r24	; 0x21
    1120:	83 32       	cpi	r24, 0x23	; 35
    1122:	91 05       	cpc	r25, r1
    1124:	11 f4       	brne	.+4      	; 0x112a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    1126:	f8 01       	movw	r30, r16
    1128:	08 c0       	rjmp	.+16     	; 0x113a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    112a:	86 32       	cpi	r24, 0x26	; 38
    112c:	91 05       	cpc	r25, r1
    112e:	11 f4       	brne	.+4      	; 0x1134 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    1130:	f6 01       	movw	r30, r12
    1132:	03 c0       	rjmp	.+6      	; 0x113a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    1134:	89 97       	sbiw	r24, 0x29	; 41
    1136:	21 f4       	brne	.+8      	; 0x1140 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    1138:	f5 01       	movw	r30, r10
    113a:	80 81       	ld	r24, Z
    113c:	82 2b       	or	r24, r18
    113e:	80 83       	st	Z, r24
    1140:	53 94       	inc	r5
    1142:	d2 cf       	rjmp	.-92     	; 0x10e8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    1144:	27 96       	adiw	r28, 0x07	; 7
    1146:	ef e0       	ldi	r30, 0x0F	; 15
    1148:	0c 94 59 0d 	jmp	0x1ab2	; 0x1ab2 <__epilogue_restores__+0x6>

0000114c <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    114c:	a0 e0       	ldi	r26, 0x00	; 0
    114e:	b0 e0       	ldi	r27, 0x00	; 0
    1150:	ec ea       	ldi	r30, 0xAC	; 172
    1152:	f8 e0       	ldi	r31, 0x08	; 8
    1154:	0c 94 3f 0d 	jmp	0x1a7e	; 0x1a7e <__prologue_saves__+0xa>
    1158:	ec 01       	movw	r28, r24
    115a:	5b 01       	movw	r10, r22
    115c:	6c 01       	movw	r12, r24
    115e:	81 e4       	ldi	r24, 0x41	; 65
    1160:	c8 0e       	add	r12, r24
    1162:	d1 1c       	adc	r13, r1
    1164:	f6 01       	movw	r30, r12
    1166:	80 80       	ld	r8, Z
    1168:	7e 01       	movw	r14, r28
    116a:	f2 e4       	ldi	r31, 0x42	; 66
    116c:	ef 0e       	add	r14, r31
    116e:	f1 1c       	adc	r15, r1
    1170:	f7 01       	movw	r30, r14
    1172:	70 80       	ld	r7, Z
    1174:	8e 01       	movw	r16, r28
    1176:	0d 5b       	subi	r16, 0xBD	; 189
    1178:	1f 4f       	sbci	r17, 0xFF	; 255
    117a:	f8 01       	movw	r30, r16
    117c:	90 80       	ld	r9, Z
    117e:	80 e0       	ldi	r24, 0x00	; 0
    1180:	98 85       	ldd	r25, Y+8	; 0x08
    1182:	89 17       	cp	r24, r25
    1184:	48 f4       	brcc	.+18     	; 0x1198 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    1186:	f5 01       	movw	r30, r10
    1188:	e8 0f       	add	r30, r24
    118a:	f1 1d       	adc	r31, r1
    118c:	e8 0f       	add	r30, r24
    118e:	f1 1d       	adc	r31, r1
    1190:	11 82       	std	Z+1, r1	; 0x01
    1192:	10 82       	st	Z, r1
    1194:	8f 5f       	subi	r24, 0xFF	; 255
    1196:	f4 cf       	rjmp	.-24     	; 0x1180 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    1198:	84 b1       	in	r24, 0x04	; 4
    119a:	f6 01       	movw	r30, r12
    119c:	90 81       	ld	r25, Z
    119e:	89 2b       	or	r24, r25
    11a0:	84 b9       	out	0x04, r24	; 4
    11a2:	87 b1       	in	r24, 0x07	; 7
    11a4:	f7 01       	movw	r30, r14
    11a6:	90 81       	ld	r25, Z
    11a8:	89 2b       	or	r24, r25
    11aa:	87 b9       	out	0x07, r24	; 7
    11ac:	8a b1       	in	r24, 0x0a	; 10
    11ae:	f8 01       	movw	r30, r16
    11b0:	90 81       	ld	r25, Z
    11b2:	89 2b       	or	r24, r25
    11b4:	8a b9       	out	0x0a, r24	; 10
    11b6:	85 b1       	in	r24, 0x05	; 5
    11b8:	f6 01       	movw	r30, r12
    11ba:	90 81       	ld	r25, Z
    11bc:	89 2b       	or	r24, r25
    11be:	85 b9       	out	0x05, r24	; 5
    11c0:	88 b1       	in	r24, 0x08	; 8
    11c2:	f7 01       	movw	r30, r14
    11c4:	90 81       	ld	r25, Z
    11c6:	89 2b       	or	r24, r25
    11c8:	88 b9       	out	0x08, r24	; 8
    11ca:	8b b1       	in	r24, 0x0b	; 11
    11cc:	f8 01       	movw	r30, r16
    11ce:	90 81       	ld	r25, Z
    11d0:	89 2b       	or	r24, r25
    11d2:	8b b9       	out	0x0b, r24	; 11
    11d4:	8a e0       	ldi	r24, 0x0A	; 10
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	0e 94 b6 07 	call	0xf6c	; 0xf6c <delay_us>
    11dc:	94 b1       	in	r25, 0x04	; 4
    11de:	f6 01       	movw	r30, r12
    11e0:	80 81       	ld	r24, Z
    11e2:	80 95       	com	r24
    11e4:	89 23       	and	r24, r25
    11e6:	84 b9       	out	0x04, r24	; 4
    11e8:	97 b1       	in	r25, 0x07	; 7
    11ea:	f7 01       	movw	r30, r14
    11ec:	80 81       	ld	r24, Z
    11ee:	80 95       	com	r24
    11f0:	89 23       	and	r24, r25
    11f2:	87 b9       	out	0x07, r24	; 7
    11f4:	9a b1       	in	r25, 0x0a	; 10
    11f6:	f8 01       	movw	r30, r16
    11f8:	80 81       	ld	r24, Z
    11fa:	80 95       	com	r24
    11fc:	89 23       	and	r24, r25
    11fe:	8a b9       	out	0x0a, r24	; 10
    1200:	95 b1       	in	r25, 0x05	; 5
    1202:	f6 01       	movw	r30, r12
    1204:	80 81       	ld	r24, Z
    1206:	80 95       	com	r24
    1208:	89 23       	and	r24, r25
    120a:	85 b9       	out	0x05, r24	; 5
    120c:	98 b1       	in	r25, 0x08	; 8
    120e:	f7 01       	movw	r30, r14
    1210:	80 81       	ld	r24, Z
    1212:	80 95       	com	r24
    1214:	89 23       	and	r24, r25
    1216:	88 b9       	out	0x08, r24	; 8
    1218:	9b b1       	in	r25, 0x0b	; 11
    121a:	f8 01       	movw	r30, r16
    121c:	80 81       	ld	r24, Z
    121e:	80 95       	com	r24
    1220:	89 23       	and	r24, r25
    1222:	8b b9       	out	0x0b, r24	; 11
    1224:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1228:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    122c:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1230:	83 60       	ori	r24, 0x03	; 3
    1232:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1236:	82 e0       	ldi	r24, 0x02	; 2
    1238:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    123c:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1240:	80 e0       	ldi	r24, 0x00	; 0
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	2e 85       	ldd	r18, Y+14	; 0x0e
    1246:	3f 85       	ldd	r19, Y+15	; 0x0f
    1248:	82 17       	cp	r24, r18
    124a:	93 07       	cpc	r25, r19
    124c:	20 f5       	brcc	.+72     	; 0x1296 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    124e:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1252:	2c 2d       	mov	r18, r12
    1254:	24 1b       	sub	r18, r20
    1256:	82 0f       	add	r24, r18
    1258:	91 1d       	adc	r25, r1
    125a:	03 b1       	in	r16, 0x03	; 3
    125c:	08 11       	cpse	r16, r8
    125e:	32 c0       	rjmp	.+100    	; 0x12c4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1260:	f6 b0       	in	r15, 0x06	; 6
    1262:	f7 10       	cpse	r15, r7
    1264:	2f c0       	rjmp	.+94     	; 0x12c4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1266:	29 b1       	in	r18, 0x09	; 9
    1268:	29 11       	cpse	r18, r9
    126a:	2c c0       	rjmp	.+88     	; 0x12c4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    126c:	10 c0       	rjmp	.+32     	; 0x128e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    126e:	21 2f       	mov	r18, r17
    1270:	30 e0       	ldi	r19, 0x00	; 0
    1272:	a9 01       	movw	r20, r18
    1274:	44 0f       	add	r20, r20
    1276:	55 1f       	adc	r21, r21
    1278:	f5 01       	movw	r30, r10
    127a:	e4 0f       	add	r30, r20
    127c:	f5 1f       	adc	r31, r21
    127e:	60 81       	ld	r22, Z
    1280:	71 81       	ldd	r23, Z+1	; 0x01
    1282:	67 2b       	or	r22, r23
    1284:	21 f1       	breq	.+72     	; 0x12ce <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    1286:	1f 5f       	subi	r17, 0xFF	; 255
    1288:	28 85       	ldd	r18, Y+8	; 0x08
    128a:	12 17       	cp	r17, r18
    128c:	80 f3       	brcs	.-32     	; 0x126e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    128e:	7f 2c       	mov	r7, r15
    1290:	80 2e       	mov	r8, r16
    1292:	4c 2d       	mov	r20, r12
    1294:	d7 cf       	rjmp	.-82     	; 0x1244 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    1296:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    129a:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    129e:	20 e0       	ldi	r18, 0x00	; 0
    12a0:	88 85       	ldd	r24, Y+8	; 0x08
    12a2:	28 17       	cp	r18, r24
    12a4:	30 f5       	brcc	.+76     	; 0x12f2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    12a6:	f5 01       	movw	r30, r10
    12a8:	e2 0f       	add	r30, r18
    12aa:	f1 1d       	adc	r31, r1
    12ac:	e2 0f       	add	r30, r18
    12ae:	f1 1d       	adc	r31, r1
    12b0:	80 81       	ld	r24, Z
    12b2:	91 81       	ldd	r25, Z+1	; 0x01
    12b4:	89 2b       	or	r24, r25
    12b6:	21 f4       	brne	.+8      	; 0x12c0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    12b8:	8e 85       	ldd	r24, Y+14	; 0x0e
    12ba:	9f 85       	ldd	r25, Y+15	; 0x0f
    12bc:	91 83       	std	Z+1, r25	; 0x01
    12be:	80 83       	st	Z, r24
    12c0:	2f 5f       	subi	r18, 0xFF	; 255
    12c2:	ee cf       	rjmp	.-36     	; 0x12a0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    12c4:	03 b1       	in	r16, 0x03	; 3
    12c6:	f6 b0       	in	r15, 0x06	; 6
    12c8:	99 b0       	in	r9, 0x09	; 9
    12ca:	10 e0       	ldi	r17, 0x00	; 0
    12cc:	dd cf       	rjmp	.-70     	; 0x1288 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    12ce:	de 01       	movw	r26, r28
    12d0:	a4 0f       	add	r26, r20
    12d2:	b5 1f       	adc	r27, r21
    12d4:	91 96       	adiw	r26, 0x21	; 33
    12d6:	0d 90       	ld	r0, X+
    12d8:	bc 91       	ld	r27, X
    12da:	a0 2d       	mov	r26, r0
    12dc:	4c 91       	ld	r20, X
    12de:	de 01       	movw	r26, r28
    12e0:	a2 0f       	add	r26, r18
    12e2:	b3 1f       	adc	r27, r19
    12e4:	51 96       	adiw	r26, 0x11	; 17
    12e6:	2c 91       	ld	r18, X
    12e8:	42 23       	and	r20, r18
    12ea:	69 f6       	brne	.-102    	; 0x1286 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    12ec:	91 83       	std	Z+1, r25	; 0x01
    12ee:	80 83       	st	Z, r24
    12f0:	ca cf       	rjmp	.-108    	; 0x1286 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    12f2:	cd b7       	in	r28, 0x3d	; 61
    12f4:	de b7       	in	r29, 0x3e	; 62
    12f6:	ed e0       	ldi	r30, 0x0D	; 13
    12f8:	0c 94 5b 0d 	jmp	0x1ab6	; 0x1ab6 <__epilogue_restores__+0xa>

000012fc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    12fc:	ef 92       	push	r14
    12fe:	ff 92       	push	r15
    1300:	0f 93       	push	r16
    1302:	1f 93       	push	r17
    1304:	cf 93       	push	r28
    1306:	df 93       	push	r29
    1308:	fc 01       	movw	r30, r24
    130a:	9b 01       	movw	r18, r22
    130c:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1310:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1314:	47 b1       	in	r20, 0x07	; 7
    1316:	18 b1       	in	r17, 0x08	; 8
    1318:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    131c:	86 fd       	sbrc	r24, 6
    131e:	fc cf       	rjmp	.-8      	; 0x1318 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    1320:	80 e0       	ldi	r24, 0x00	; 0
    1322:	90 85       	ldd	r25, Z+8	; 0x08
    1324:	89 17       	cp	r24, r25
    1326:	48 f4       	brcc	.+18     	; 0x133a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    1328:	d9 01       	movw	r26, r18
    132a:	a8 0f       	add	r26, r24
    132c:	b1 1d       	adc	r27, r1
    132e:	a8 0f       	add	r26, r24
    1330:	b1 1d       	adc	r27, r1
    1332:	1d 92       	st	X+, r1
    1334:	1c 92       	st	X, r1
    1336:	8f 5f       	subi	r24, 0xFF	; 255
    1338:	f4 cf       	rjmp	.-24     	; 0x1322 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    133a:	97 b1       	in	r25, 0x07	; 7
    133c:	82 a1       	ldd	r24, Z+34	; 0x22
    133e:	80 95       	com	r24
    1340:	89 23       	and	r24, r25
    1342:	87 b9       	out	0x07, r24	; 7
    1344:	98 b1       	in	r25, 0x08	; 8
    1346:	82 a1       	ldd	r24, Z+34	; 0x22
    1348:	80 95       	com	r24
    134a:	89 23       	and	r24, r25
    134c:	88 b9       	out	0x08, r24	; 8
    134e:	87 e8       	ldi	r24, 0x87	; 135
    1350:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1354:	e1 2c       	mov	r14, r1
    1356:	81 a1       	ldd	r24, Z+33	; 0x21
    1358:	e8 16       	cp	r14, r24
    135a:	10 f0       	brcs	.+4      	; 0x1360 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    135c:	e1 2c       	mov	r14, r1
    135e:	29 c0       	rjmp	.+82     	; 0x13b2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    1360:	50 e0       	ldi	r21, 0x00	; 0
    1362:	80 85       	ldd	r24, Z+8	; 0x08
    1364:	58 17       	cp	r21, r24
    1366:	18 f5       	brcc	.+70     	; 0x13ae <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1368:	a5 2f       	mov	r26, r21
    136a:	b0 e0       	ldi	r27, 0x00	; 0
    136c:	ef 01       	movw	r28, r30
    136e:	ca 0f       	add	r28, r26
    1370:	db 1f       	adc	r29, r27
    1372:	89 89       	ldd	r24, Y+17	; 0x11
    1374:	80 64       	ori	r24, 0x40	; 64
    1376:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    137a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    137e:	80 64       	ori	r24, 0x40	; 64
    1380:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1384:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1388:	86 fd       	sbrc	r24, 6
    138a:	fc cf       	rjmp	.-8      	; 0x1384 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    138c:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    1390:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1394:	aa 0f       	add	r26, r26
    1396:	bb 1f       	adc	r27, r27
    1398:	a2 0f       	add	r26, r18
    139a:	b3 1f       	adc	r27, r19
    139c:	8d 91       	ld	r24, X+
    139e:	9c 91       	ld	r25, X
    13a0:	11 97       	sbiw	r26, 0x01	; 1
    13a2:	86 0f       	add	r24, r22
    13a4:	97 1f       	adc	r25, r23
    13a6:	8d 93       	st	X+, r24
    13a8:	9c 93       	st	X, r25
    13aa:	5f 5f       	subi	r21, 0xFF	; 255
    13ac:	da cf       	rjmp	.-76     	; 0x1362 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    13ae:	e3 94       	inc	r14
    13b0:	d2 cf       	rjmp	.-92     	; 0x1356 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    13b2:	80 85       	ldd	r24, Z+8	; 0x08
    13b4:	e8 16       	cp	r14, r24
    13b6:	a0 f4       	brcc	.+40     	; 0x13e0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    13b8:	e9 01       	movw	r28, r18
    13ba:	ce 0d       	add	r28, r14
    13bc:	d1 1d       	adc	r29, r1
    13be:	ce 0d       	add	r28, r14
    13c0:	d1 1d       	adc	r29, r1
    13c2:	61 a1       	ldd	r22, Z+33	; 0x21
    13c4:	70 e0       	ldi	r23, 0x00	; 0
    13c6:	cb 01       	movw	r24, r22
    13c8:	95 95       	asr	r25
    13ca:	87 95       	ror	r24
    13cc:	a8 81       	ld	r26, Y
    13ce:	b9 81       	ldd	r27, Y+1	; 0x01
    13d0:	8a 0f       	add	r24, r26
    13d2:	9b 1f       	adc	r25, r27
    13d4:	0e 94 bd 0c 	call	0x197a	; 0x197a <__udivmodhi4>
    13d8:	79 83       	std	Y+1, r23	; 0x01
    13da:	68 83       	st	Y, r22
    13dc:	e3 94       	inc	r14
    13de:	e9 cf       	rjmp	.-46     	; 0x13b2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    13e0:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    13e4:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    13e8:	18 b9       	out	0x08, r17	; 8
    13ea:	47 b9       	out	0x07, r20	; 7
    13ec:	cd b7       	in	r28, 0x3d	; 61
    13ee:	de b7       	in	r29, 0x3e	; 62
    13f0:	e6 e0       	ldi	r30, 0x06	; 6
    13f2:	0c 94 62 0d 	jmp	0x1ac4	; 0x1ac4 <__epilogue_restores__+0x18>

000013f6 <_ZN16PololuQTRSensors4readEPjh>:
    13f6:	a0 e2       	ldi	r26, 0x20	; 32
    13f8:	b0 e0       	ldi	r27, 0x00	; 0
    13fa:	e1 e0       	ldi	r30, 0x01	; 1
    13fc:	fa e0       	ldi	r31, 0x0A	; 10
    13fe:	0c 94 45 0d 	jmp	0x1a8a	; 0x1a8a <__prologue_saves__+0x16>
    1402:	8c 01       	movw	r16, r24
    1404:	7b 01       	movw	r14, r22
    1406:	d4 2e       	mov	r13, r20
    1408:	8f ef       	ldi	r24, 0xFF	; 255
    140a:	84 0f       	add	r24, r20
    140c:	82 30       	cpi	r24, 0x02	; 2
    140e:	18 f4       	brcc	.+6      	; 0x1416 <_ZN16PololuQTRSensors4readEPjh+0x20>
    1410:	c8 01       	movw	r24, r16
    1412:	0e 94 3d 08 	call	0x107a	; 0x107a <_ZN16PololuQTRSensors10emittersOnEv>
    1416:	d8 01       	movw	r26, r16
    1418:	50 96       	adiw	r26, 0x10	; 16
    141a:	8c 91       	ld	r24, X
    141c:	b7 01       	movw	r22, r14
    141e:	81 11       	cpse	r24, r1
    1420:	10 c0       	rjmp	.+32     	; 0x1442 <_ZN16PololuQTRSensors4readEPjh+0x4c>
    1422:	c8 01       	movw	r24, r16
    1424:	0e 94 a6 08 	call	0x114c	; 0x114c <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1428:	c8 01       	movw	r24, r16
    142a:	0e 94 28 08 	call	0x1050	; 0x1050 <_ZN16PololuQTRSensors11emittersOffEv>
    142e:	b2 e0       	ldi	r27, 0x02	; 2
    1430:	db 12       	cpse	r13, r27
    1432:	3a c0       	rjmp	.+116    	; 0x14a8 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1434:	be 01       	movw	r22, r28
    1436:	6f 5f       	subi	r22, 0xFF	; 255
    1438:	7f 4f       	sbci	r23, 0xFF	; 255
    143a:	c8 01       	movw	r24, r16
    143c:	0e 94 a6 08 	call	0x114c	; 0x114c <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1440:	0f c0       	rjmp	.+30     	; 0x1460 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    1442:	c8 01       	movw	r24, r16
    1444:	0e 94 7e 09 	call	0x12fc	; 0x12fc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1448:	c8 01       	movw	r24, r16
    144a:	0e 94 28 08 	call	0x1050	; 0x1050 <_ZN16PololuQTRSensors11emittersOffEv>
    144e:	e2 e0       	ldi	r30, 0x02	; 2
    1450:	de 12       	cpse	r13, r30
    1452:	2a c0       	rjmp	.+84     	; 0x14a8 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1454:	be 01       	movw	r22, r28
    1456:	6f 5f       	subi	r22, 0xFF	; 255
    1458:	7f 4f       	sbci	r23, 0xFF	; 255
    145a:	c8 01       	movw	r24, r16
    145c:	0e 94 7e 09 	call	0x12fc	; 0x12fc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1460:	40 e0       	ldi	r20, 0x00	; 0
    1462:	f8 01       	movw	r30, r16
    1464:	80 85       	ldd	r24, Z+8	; 0x08
    1466:	48 17       	cp	r20, r24
    1468:	f8 f4       	brcc	.+62     	; 0x14a8 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    146a:	84 2f       	mov	r24, r20
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	88 0f       	add	r24, r24
    1470:	99 1f       	adc	r25, r25
    1472:	f7 01       	movw	r30, r14
    1474:	e8 0f       	add	r30, r24
    1476:	f9 1f       	adc	r31, r25
    1478:	21 e0       	ldi	r18, 0x01	; 1
    147a:	30 e0       	ldi	r19, 0x00	; 0
    147c:	2c 0f       	add	r18, r28
    147e:	3d 1f       	adc	r19, r29
    1480:	82 0f       	add	r24, r18
    1482:	93 1f       	adc	r25, r19
    1484:	d8 01       	movw	r26, r16
    1486:	1e 96       	adiw	r26, 0x0e	; 14
    1488:	2d 91       	ld	r18, X+
    148a:	3c 91       	ld	r19, X
    148c:	1f 97       	sbiw	r26, 0x0f	; 15
    148e:	dc 01       	movw	r26, r24
    1490:	8d 91       	ld	r24, X+
    1492:	9c 91       	ld	r25, X
    1494:	28 1b       	sub	r18, r24
    1496:	39 0b       	sbc	r19, r25
    1498:	80 81       	ld	r24, Z
    149a:	91 81       	ldd	r25, Z+1	; 0x01
    149c:	82 0f       	add	r24, r18
    149e:	93 1f       	adc	r25, r19
    14a0:	91 83       	std	Z+1, r25	; 0x01
    14a2:	80 83       	st	Z, r24
    14a4:	4f 5f       	subi	r20, 0xFF	; 255
    14a6:	dd cf       	rjmp	.-70     	; 0x1462 <_ZN16PololuQTRSensors4readEPjh+0x6c>
    14a8:	a0 96       	adiw	r28, 0x20	; 32
    14aa:	e7 e0       	ldi	r30, 0x07	; 7
    14ac:	0c 94 61 0d 	jmp	0x1ac2	; 0x1ac2 <__epilogue_restores__+0x16>

000014b0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    14b0:	2f 92       	push	r2
    14b2:	3f 92       	push	r3
    14b4:	5f 92       	push	r5
    14b6:	6f 92       	push	r6
    14b8:	7f 92       	push	r7
    14ba:	8f 92       	push	r8
    14bc:	9f 92       	push	r9
    14be:	af 92       	push	r10
    14c0:	bf 92       	push	r11
    14c2:	cf 92       	push	r12
    14c4:	df 92       	push	r13
    14c6:	ef 92       	push	r14
    14c8:	ff 92       	push	r15
    14ca:	0f 93       	push	r16
    14cc:	1f 93       	push	r17
    14ce:	cf 93       	push	r28
    14d0:	df 93       	push	r29
    14d2:	cd b7       	in	r28, 0x3d	; 61
    14d4:	de b7       	in	r29, 0x3e	; 62
    14d6:	c0 56       	subi	r28, 0x60	; 96
    14d8:	d1 09       	sbc	r29, r1
    14da:	0f b6       	in	r0, 0x3f	; 63
    14dc:	f8 94       	cli
    14de:	de bf       	out	0x3e, r29	; 62
    14e0:	0f be       	out	0x3f, r0	; 63
    14e2:	cd bf       	out	0x3d, r28	; 61
    14e4:	8c 01       	movw	r16, r24
    14e6:	4b 01       	movw	r8, r22
    14e8:	5a 01       	movw	r10, r20
    14ea:	52 2e       	mov	r5, r18
    14ec:	da 01       	movw	r26, r20
    14ee:	8d 91       	ld	r24, X+
    14f0:	9c 91       	ld	r25, X
    14f2:	89 2b       	or	r24, r25
    14f4:	31 f0       	breq	.+12     	; 0x1502 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    14f6:	f4 01       	movw	r30, r8
    14f8:	80 81       	ld	r24, Z
    14fa:	91 81       	ldd	r25, Z+1	; 0x01
    14fc:	89 2b       	or	r24, r25
    14fe:	f1 f4       	brne	.+60     	; 0x153c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1500:	24 c0       	rjmp	.+72     	; 0x154a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    1502:	d8 01       	movw	r26, r16
    1504:	18 96       	adiw	r26, 0x08	; 8
    1506:	8c 91       	ld	r24, X
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	88 0f       	add	r24, r24
    150c:	99 1f       	adc	r25, r25
    150e:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <malloc>
    1512:	f5 01       	movw	r30, r10
    1514:	91 83       	std	Z+1, r25	; 0x01
    1516:	80 83       	st	Z, r24
    1518:	00 97       	sbiw	r24, 0x00	; 0
    151a:	09 f4       	brne	.+2      	; 0x151e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    151c:	b1 c0       	rjmp	.+354    	; 0x1680 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    151e:	fc 01       	movw	r30, r24
    1520:	20 e0       	ldi	r18, 0x00	; 0
    1522:	30 e0       	ldi	r19, 0x00	; 0
    1524:	d8 01       	movw	r26, r16
    1526:	18 96       	adiw	r26, 0x08	; 8
    1528:	8c 91       	ld	r24, X
    152a:	90 e0       	ldi	r25, 0x00	; 0
    152c:	28 17       	cp	r18, r24
    152e:	39 07       	cpc	r19, r25
    1530:	14 f7       	brge	.-60     	; 0x14f6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    1532:	11 92       	st	Z+, r1
    1534:	11 92       	st	Z+, r1
    1536:	2f 5f       	subi	r18, 0xFF	; 255
    1538:	3f 4f       	sbci	r19, 0xFF	; 255
    153a:	f4 cf       	rjmp	.-24     	; 0x1524 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    153c:	e1 2c       	mov	r14, r1
    153e:	f1 2c       	mov	r15, r1
    1540:	6e 01       	movw	r12, r28
    1542:	b1 e2       	ldi	r27, 0x21	; 33
    1544:	cb 0e       	add	r12, r27
    1546:	d1 1c       	adc	r13, r1
    1548:	21 c0       	rjmp	.+66     	; 0x158c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    154a:	f8 01       	movw	r30, r16
    154c:	80 85       	ldd	r24, Z+8	; 0x08
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	88 0f       	add	r24, r24
    1552:	99 1f       	adc	r25, r25
    1554:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <malloc>
    1558:	d4 01       	movw	r26, r8
    155a:	8d 93       	st	X+, r24
    155c:	9c 93       	st	X, r25
    155e:	00 97       	sbiw	r24, 0x00	; 0
    1560:	09 f4       	brne	.+2      	; 0x1564 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    1562:	8e c0       	rjmp	.+284    	; 0x1680 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1564:	fc 01       	movw	r30, r24
    1566:	20 e0       	ldi	r18, 0x00	; 0
    1568:	30 e0       	ldi	r19, 0x00	; 0
    156a:	d8 01       	movw	r26, r16
    156c:	18 96       	adiw	r26, 0x08	; 8
    156e:	8c 91       	ld	r24, X
    1570:	90 e0       	ldi	r25, 0x00	; 0
    1572:	28 17       	cp	r18, r24
    1574:	39 07       	cpc	r19, r25
    1576:	14 f7       	brge	.-60     	; 0x153c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1578:	d8 01       	movw	r26, r16
    157a:	1e 96       	adiw	r26, 0x0e	; 14
    157c:	8d 91       	ld	r24, X+
    157e:	9c 91       	ld	r25, X
    1580:	1f 97       	sbiw	r26, 0x0f	; 15
    1582:	81 93       	st	Z+, r24
    1584:	91 93       	st	Z+, r25
    1586:	2f 5f       	subi	r18, 0xFF	; 255
    1588:	3f 4f       	sbci	r19, 0xFF	; 255
    158a:	ef cf       	rjmp	.-34     	; 0x156a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    158c:	45 2d       	mov	r20, r5
    158e:	be 01       	movw	r22, r28
    1590:	6f 5b       	subi	r22, 0xBF	; 191
    1592:	7f 4f       	sbci	r23, 0xFF	; 255
    1594:	c8 01       	movw	r24, r16
    1596:	0e 94 fb 09 	call	0x13f6	; 0x13f6 <_ZN16PololuQTRSensors4readEPjh>
    159a:	f8 01       	movw	r30, r16
    159c:	60 84       	ldd	r6, Z+8	; 0x08
    159e:	71 2c       	mov	r7, r1
    15a0:	fe 01       	movw	r30, r28
    15a2:	ef 5b       	subi	r30, 0xBF	; 191
    15a4:	ff 4f       	sbci	r31, 0xFF	; 255
    15a6:	c6 01       	movw	r24, r12
    15a8:	9e 01       	movw	r18, r28
    15aa:	2f 5f       	subi	r18, 0xFF	; 255
    15ac:	3f 4f       	sbci	r19, 0xFF	; 255
    15ae:	19 01       	movw	r2, r18
    15b0:	20 e0       	ldi	r18, 0x00	; 0
    15b2:	30 e0       	ldi	r19, 0x00	; 0
    15b4:	26 15       	cp	r18, r6
    15b6:	37 05       	cpc	r19, r7
    15b8:	4c f5       	brge	.+82     	; 0x160c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    15ba:	e1 14       	cp	r14, r1
    15bc:	f1 04       	cpc	r15, r1
    15be:	89 f0       	breq	.+34     	; 0x15e2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    15c0:	dc 01       	movw	r26, r24
    15c2:	6d 91       	ld	r22, X+
    15c4:	7c 91       	ld	r23, X
    15c6:	40 81       	ld	r20, Z
    15c8:	51 81       	ldd	r21, Z+1	; 0x01
    15ca:	64 17       	cp	r22, r20
    15cc:	75 07       	cpc	r23, r21
    15ce:	48 f0       	brcs	.+18     	; 0x15e2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    15d0:	d1 01       	movw	r26, r2
    15d2:	6d 91       	ld	r22, X+
    15d4:	7c 91       	ld	r23, X
    15d6:	40 81       	ld	r20, Z
    15d8:	51 81       	ldd	r21, Z+1	; 0x01
    15da:	46 17       	cp	r20, r22
    15dc:	57 07       	cpc	r21, r23
    15de:	48 f0       	brcs	.+18     	; 0x15f2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    15e0:	0d c0       	rjmp	.+26     	; 0x15fc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    15e2:	40 81       	ld	r20, Z
    15e4:	51 81       	ldd	r21, Z+1	; 0x01
    15e6:	dc 01       	movw	r26, r24
    15e8:	4d 93       	st	X+, r20
    15ea:	5c 93       	st	X, r21
    15ec:	e1 14       	cp	r14, r1
    15ee:	f1 04       	cpc	r15, r1
    15f0:	79 f7       	brne	.-34     	; 0x15d0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    15f2:	40 81       	ld	r20, Z
    15f4:	51 81       	ldd	r21, Z+1	; 0x01
    15f6:	d1 01       	movw	r26, r2
    15f8:	4d 93       	st	X+, r20
    15fa:	5c 93       	st	X, r21
    15fc:	2f 5f       	subi	r18, 0xFF	; 255
    15fe:	3f 4f       	sbci	r19, 0xFF	; 255
    1600:	b2 e0       	ldi	r27, 0x02	; 2
    1602:	2b 0e       	add	r2, r27
    1604:	31 1c       	adc	r3, r1
    1606:	32 96       	adiw	r30, 0x02	; 2
    1608:	02 96       	adiw	r24, 0x02	; 2
    160a:	d4 cf       	rjmp	.-88     	; 0x15b4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    160c:	ef ef       	ldi	r30, 0xFF	; 255
    160e:	ee 1a       	sub	r14, r30
    1610:	fe 0a       	sbc	r15, r30
    1612:	fa e0       	ldi	r31, 0x0A	; 10
    1614:	ef 16       	cp	r14, r31
    1616:	f1 04       	cpc	r15, r1
    1618:	09 f0       	breq	.+2      	; 0x161c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    161a:	b8 cf       	rjmp	.-144    	; 0x158c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    161c:	9e 01       	movw	r18, r28
    161e:	2f 5f       	subi	r18, 0xFF	; 255
    1620:	3f 4f       	sbci	r19, 0xFF	; 255
    1622:	79 01       	movw	r14, r18
    1624:	36 01       	movw	r6, r12
    1626:	80 e0       	ldi	r24, 0x00	; 0
    1628:	90 e0       	ldi	r25, 0x00	; 0
    162a:	f8 01       	movw	r30, r16
    162c:	20 85       	ldd	r18, Z+8	; 0x08
    162e:	30 e0       	ldi	r19, 0x00	; 0
    1630:	82 17       	cp	r24, r18
    1632:	93 07       	cpc	r25, r19
    1634:	2c f5       	brge	.+74     	; 0x1680 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1636:	d7 01       	movw	r26, r14
    1638:	2d 91       	ld	r18, X+
    163a:	3d 91       	ld	r19, X+
    163c:	7d 01       	movw	r14, r26
    163e:	b3 01       	movw	r22, r6
    1640:	6c 19       	sub	r22, r12
    1642:	7d 09       	sbc	r23, r13
    1644:	d5 01       	movw	r26, r10
    1646:	ed 91       	ld	r30, X+
    1648:	fc 91       	ld	r31, X
    164a:	e6 0f       	add	r30, r22
    164c:	f7 1f       	adc	r31, r23
    164e:	40 81       	ld	r20, Z
    1650:	51 81       	ldd	r21, Z+1	; 0x01
    1652:	42 17       	cp	r20, r18
    1654:	53 07       	cpc	r21, r19
    1656:	10 f4       	brcc	.+4      	; 0x165c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    1658:	31 83       	std	Z+1, r19	; 0x01
    165a:	20 83       	st	Z, r18
    165c:	f3 01       	movw	r30, r6
    165e:	21 91       	ld	r18, Z+
    1660:	31 91       	ld	r19, Z+
    1662:	3f 01       	movw	r6, r30
    1664:	d4 01       	movw	r26, r8
    1666:	ed 91       	ld	r30, X+
    1668:	fc 91       	ld	r31, X
    166a:	e6 0f       	add	r30, r22
    166c:	f7 1f       	adc	r31, r23
    166e:	40 81       	ld	r20, Z
    1670:	51 81       	ldd	r21, Z+1	; 0x01
    1672:	24 17       	cp	r18, r20
    1674:	35 07       	cpc	r19, r21
    1676:	10 f4       	brcc	.+4      	; 0x167c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    1678:	31 83       	std	Z+1, r19	; 0x01
    167a:	20 83       	st	Z, r18
    167c:	01 96       	adiw	r24, 0x01	; 1
    167e:	d5 cf       	rjmp	.-86     	; 0x162a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    1680:	c0 5a       	subi	r28, 0xA0	; 160
    1682:	df 4f       	sbci	r29, 0xFF	; 255
    1684:	0f b6       	in	r0, 0x3f	; 63
    1686:	f8 94       	cli
    1688:	de bf       	out	0x3e, r29	; 62
    168a:	0f be       	out	0x3f, r0	; 63
    168c:	cd bf       	out	0x3d, r28	; 61
    168e:	df 91       	pop	r29
    1690:	cf 91       	pop	r28
    1692:	1f 91       	pop	r17
    1694:	0f 91       	pop	r16
    1696:	ff 90       	pop	r15
    1698:	ef 90       	pop	r14
    169a:	df 90       	pop	r13
    169c:	cf 90       	pop	r12
    169e:	bf 90       	pop	r11
    16a0:	af 90       	pop	r10
    16a2:	9f 90       	pop	r9
    16a4:	8f 90       	pop	r8
    16a6:	7f 90       	pop	r7
    16a8:	6f 90       	pop	r6
    16aa:	5f 90       	pop	r5
    16ac:	3f 90       	pop	r3
    16ae:	2f 90       	pop	r2
    16b0:	08 95       	ret

000016b2 <_ZN16PololuQTRSensors9calibrateEh>:
    16b2:	1f 93       	push	r17
    16b4:	cf 93       	push	r28
    16b6:	df 93       	push	r29
    16b8:	ec 01       	movw	r28, r24
    16ba:	16 2f       	mov	r17, r22
    16bc:	8f ef       	ldi	r24, 0xFF	; 255
    16be:	86 0f       	add	r24, r22
    16c0:	82 30       	cpi	r24, 0x02	; 2
    16c2:	18 f0       	brcs	.+6      	; 0x16ca <_ZN16PololuQTRSensors9calibrateEh+0x18>
    16c4:	66 23       	and	r22, r22
    16c6:	59 f0       	breq	.+22     	; 0x16de <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    16c8:	14 c0       	rjmp	.+40     	; 0x16f2 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    16ca:	21 e0       	ldi	r18, 0x01	; 1
    16cc:	ae 01       	movw	r20, r28
    16ce:	4e 5f       	subi	r20, 0xFE	; 254
    16d0:	5f 4f       	sbci	r21, 0xFF	; 255
    16d2:	be 01       	movw	r22, r28
    16d4:	ce 01       	movw	r24, r28
    16d6:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    16da:	12 30       	cpi	r17, 0x02	; 2
    16dc:	51 f4       	brne	.+20     	; 0x16f2 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    16de:	ae 01       	movw	r20, r28
    16e0:	4a 5f       	subi	r20, 0xFA	; 250
    16e2:	5f 4f       	sbci	r21, 0xFF	; 255
    16e4:	be 01       	movw	r22, r28
    16e6:	6c 5f       	subi	r22, 0xFC	; 252
    16e8:	7f 4f       	sbci	r23, 0xFF	; 255
    16ea:	20 e0       	ldi	r18, 0x00	; 0
    16ec:	ce 01       	movw	r24, r28
    16ee:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    16f2:	df 91       	pop	r29
    16f4:	cf 91       	pop	r28
    16f6:	1f 91       	pop	r17
    16f8:	08 95       	ret

000016fa <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    16fa:	a0 e0       	ldi	r26, 0x00	; 0
    16fc:	b0 e0       	ldi	r27, 0x00	; 0
    16fe:	e3 e8       	ldi	r30, 0x83	; 131
    1700:	fb e0       	ldi	r31, 0x0B	; 11
    1702:	0c 94 43 0d 	jmp	0x1a86	; 0x1a86 <__prologue_saves__+0x12>
    1706:	ec 01       	movw	r28, r24
    1708:	8b 01       	movw	r16, r22
    170a:	b4 2e       	mov	r11, r20
    170c:	84 2f       	mov	r24, r20
    170e:	8d 7f       	andi	r24, 0xFD	; 253
    1710:	51 f4       	brne	.+20     	; 0x1726 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    1712:	8c 81       	ldd	r24, Y+4	; 0x04
    1714:	9d 81       	ldd	r25, Y+5	; 0x05
    1716:	89 2b       	or	r24, r25
    1718:	09 f4       	brne	.+2      	; 0x171c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    171a:	97 c0       	rjmp	.+302    	; 0x184a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    171c:	8e 81       	ldd	r24, Y+6	; 0x06
    171e:	9f 81       	ldd	r25, Y+7	; 0x07
    1720:	89 2b       	or	r24, r25
    1722:	09 f4       	brne	.+2      	; 0x1726 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    1724:	92 c0       	rjmp	.+292    	; 0x184a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1726:	8f ef       	ldi	r24, 0xFF	; 255
    1728:	8b 0d       	add	r24, r11
    172a:	82 30       	cpi	r24, 0x02	; 2
    172c:	50 f4       	brcc	.+20     	; 0x1742 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    172e:	88 81       	ld	r24, Y
    1730:	99 81       	ldd	r25, Y+1	; 0x01
    1732:	89 2b       	or	r24, r25
    1734:	09 f4       	brne	.+2      	; 0x1738 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    1736:	89 c0       	rjmp	.+274    	; 0x184a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1738:	8a 81       	ldd	r24, Y+2	; 0x02
    173a:	9b 81       	ldd	r25, Y+3	; 0x03
    173c:	89 2b       	or	r24, r25
    173e:	09 f4       	brne	.+2      	; 0x1742 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    1740:	84 c0       	rjmp	.+264    	; 0x184a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1742:	4b 2d       	mov	r20, r11
    1744:	b8 01       	movw	r22, r16
    1746:	ce 01       	movw	r24, r28
    1748:	0e 94 fb 09 	call	0x13f6	; 0x13f6 <_ZN16PololuQTRSensors4readEPjh>
    174c:	78 01       	movw	r14, r16
    174e:	00 e0       	ldi	r16, 0x00	; 0
    1750:	10 e0       	ldi	r17, 0x00	; 0
    1752:	c1 2c       	mov	r12, r1
    1754:	d1 2c       	mov	r13, r1
    1756:	88 85       	ldd	r24, Y+8	; 0x08
    1758:	90 e0       	ldi	r25, 0x00	; 0
    175a:	c8 16       	cp	r12, r24
    175c:	d9 06       	cpc	r13, r25
    175e:	0c f0       	brlt	.+2      	; 0x1762 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    1760:	74 c0       	rjmp	.+232    	; 0x184a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1762:	81 e0       	ldi	r24, 0x01	; 1
    1764:	b8 12       	cpse	r11, r24
    1766:	0a c0       	rjmp	.+20     	; 0x177c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    1768:	ea 81       	ldd	r30, Y+2	; 0x02
    176a:	fb 81       	ldd	r31, Y+3	; 0x03
    176c:	e0 0f       	add	r30, r16
    176e:	f1 1f       	adc	r31, r17
    1770:	01 90       	ld	r0, Z+
    1772:	f0 81       	ld	r31, Z
    1774:	e0 2d       	mov	r30, r0
    1776:	a8 81       	ld	r26, Y
    1778:	b9 81       	ldd	r27, Y+1	; 0x01
    177a:	0d c0       	rjmp	.+26     	; 0x1796 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    177c:	8c 81       	ldd	r24, Y+4	; 0x04
    177e:	9d 81       	ldd	r25, Y+5	; 0x05
    1780:	2e 81       	ldd	r18, Y+6	; 0x06
    1782:	3f 81       	ldd	r19, Y+7	; 0x07
    1784:	b1 10       	cpse	r11, r1
    1786:	0c c0       	rjmp	.+24     	; 0x17a0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    1788:	f9 01       	movw	r30, r18
    178a:	e0 0f       	add	r30, r16
    178c:	f1 1f       	adc	r31, r17
    178e:	01 90       	ld	r0, Z+
    1790:	f0 81       	ld	r31, Z
    1792:	e0 2d       	mov	r30, r0
    1794:	dc 01       	movw	r26, r24
    1796:	a0 0f       	add	r26, r16
    1798:	b1 1f       	adc	r27, r17
    179a:	8d 91       	ld	r24, X+
    179c:	9c 91       	ld	r25, X
    179e:	28 c0       	rjmp	.+80     	; 0x17f0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    17a0:	fc 01       	movw	r30, r24
    17a2:	e0 0f       	add	r30, r16
    17a4:	f1 1f       	adc	r31, r17
    17a6:	40 81       	ld	r20, Z
    17a8:	51 81       	ldd	r21, Z+1	; 0x01
    17aa:	e8 81       	ld	r30, Y
    17ac:	f9 81       	ldd	r31, Y+1	; 0x01
    17ae:	e0 0f       	add	r30, r16
    17b0:	f1 1f       	adc	r31, r17
    17b2:	80 81       	ld	r24, Z
    17b4:	91 81       	ldd	r25, Z+1	; 0x01
    17b6:	ee 85       	ldd	r30, Y+14	; 0x0e
    17b8:	ff 85       	ldd	r31, Y+15	; 0x0f
    17ba:	48 17       	cp	r20, r24
    17bc:	59 07       	cpc	r21, r25
    17be:	10 f4       	brcc	.+4      	; 0x17c4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    17c0:	cf 01       	movw	r24, r30
    17c2:	04 c0       	rjmp	.+8      	; 0x17cc <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    17c4:	8e 0f       	add	r24, r30
    17c6:	9f 1f       	adc	r25, r31
    17c8:	84 1b       	sub	r24, r20
    17ca:	95 0b       	sbc	r25, r21
    17cc:	d9 01       	movw	r26, r18
    17ce:	a0 0f       	add	r26, r16
    17d0:	b1 1f       	adc	r27, r17
    17d2:	2d 91       	ld	r18, X+
    17d4:	3c 91       	ld	r19, X
    17d6:	aa 81       	ldd	r26, Y+2	; 0x02
    17d8:	bb 81       	ldd	r27, Y+3	; 0x03
    17da:	a0 0f       	add	r26, r16
    17dc:	b1 1f       	adc	r27, r17
    17de:	4d 91       	ld	r20, X+
    17e0:	5c 91       	ld	r21, X
    17e2:	24 17       	cp	r18, r20
    17e4:	35 07       	cpc	r19, r21
    17e6:	20 f0       	brcs	.+8      	; 0x17f0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    17e8:	e4 0f       	add	r30, r20
    17ea:	f5 1f       	adc	r31, r21
    17ec:	e2 1b       	sub	r30, r18
    17ee:	f3 0b       	sbc	r31, r19
    17f0:	e8 1b       	sub	r30, r24
    17f2:	f9 0b       	sbc	r31, r25
    17f4:	a9 f0       	breq	.+42     	; 0x1820 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    17f6:	d7 01       	movw	r26, r14
    17f8:	2d 91       	ld	r18, X+
    17fa:	3c 91       	ld	r19, X
    17fc:	40 e0       	ldi	r20, 0x00	; 0
    17fe:	50 e0       	ldi	r21, 0x00	; 0
    1800:	28 1b       	sub	r18, r24
    1802:	39 0b       	sbc	r19, r25
    1804:	41 09       	sbc	r20, r1
    1806:	51 09       	sbc	r21, r1
    1808:	a8 ee       	ldi	r26, 0xE8	; 232
    180a:	b3 e0       	ldi	r27, 0x03	; 3
    180c:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <__muluhisi3>
    1810:	9f 01       	movw	r18, r30
    1812:	40 e0       	ldi	r20, 0x00	; 0
    1814:	50 e0       	ldi	r21, 0x00	; 0
    1816:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <__divmodsi4>
    181a:	37 fd       	sbrc	r19, 7
    181c:	0a c0       	rjmp	.+20     	; 0x1832 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    181e:	02 c0       	rjmp	.+4      	; 0x1824 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    1820:	20 e0       	ldi	r18, 0x00	; 0
    1822:	30 e0       	ldi	r19, 0x00	; 0
    1824:	29 3e       	cpi	r18, 0xE9	; 233
    1826:	b3 e0       	ldi	r27, 0x03	; 3
    1828:	3b 07       	cpc	r19, r27
    182a:	2c f0       	brlt	.+10     	; 0x1836 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    182c:	28 ee       	ldi	r18, 0xE8	; 232
    182e:	33 e0       	ldi	r19, 0x03	; 3
    1830:	02 c0       	rjmp	.+4      	; 0x1836 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1832:	20 e0       	ldi	r18, 0x00	; 0
    1834:	30 e0       	ldi	r19, 0x00	; 0
    1836:	f7 01       	movw	r30, r14
    1838:	21 93       	st	Z+, r18
    183a:	31 93       	st	Z+, r19
    183c:	7f 01       	movw	r14, r30
    183e:	ff ef       	ldi	r31, 0xFF	; 255
    1840:	cf 1a       	sub	r12, r31
    1842:	df 0a       	sbc	r13, r31
    1844:	0e 5f       	subi	r16, 0xFE	; 254
    1846:	1f 4f       	sbci	r17, 0xFF	; 255
    1848:	86 cf       	rjmp	.-244    	; 0x1756 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    184a:	cd b7       	in	r28, 0x3d	; 61
    184c:	de b7       	in	r29, 0x3e	; 62
    184e:	e9 e0       	ldi	r30, 0x09	; 9
    1850:	0c 94 5f 0d 	jmp	0x1abe	; 0x1abe <__epilogue_restores__+0x12>

00001854 <_ZN16PololuQTRSensors8readLineEPjhh>:
    1854:	a0 e0       	ldi	r26, 0x00	; 0
    1856:	b0 e0       	ldi	r27, 0x00	; 0
    1858:	e0 e3       	ldi	r30, 0x30	; 48
    185a:	fc e0       	ldi	r31, 0x0C	; 12
    185c:	0c 94 3a 0d 	jmp	0x1a74	; 0x1a74 <__prologue_saves__>
    1860:	ec 01       	movw	r28, r24
    1862:	8b 01       	movw	r16, r22
    1864:	82 2e       	mov	r8, r18
    1866:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <_ZN16PololuQTRSensors14readCalibratedEPjh>
    186a:	28 84       	ldd	r2, Y+8	; 0x08
    186c:	e8 01       	movw	r28, r16
    186e:	41 2c       	mov	r4, r1
    1870:	51 2c       	mov	r5, r1
    1872:	32 01       	movw	r6, r4
    1874:	00 e0       	ldi	r16, 0x00	; 0
    1876:	10 e0       	ldi	r17, 0x00	; 0
    1878:	c1 2c       	mov	r12, r1
    187a:	d1 2c       	mov	r13, r1
    187c:	76 01       	movw	r14, r12
    187e:	31 2c       	mov	r3, r1
    1880:	91 2c       	mov	r9, r1
    1882:	58 ee       	ldi	r21, 0xE8	; 232
    1884:	a5 2e       	mov	r10, r21
    1886:	53 e0       	ldi	r21, 0x03	; 3
    1888:	b5 2e       	mov	r11, r21
    188a:	92 14       	cp	r9, r2
    188c:	21 f1       	breq	.+72     	; 0x18d6 <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    188e:	e9 91       	ld	r30, Y+
    1890:	f9 91       	ld	r31, Y+
    1892:	88 20       	and	r8, r8
    1894:	21 f0       	breq	.+8      	; 0x189e <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    1896:	c5 01       	movw	r24, r10
    1898:	8e 1b       	sub	r24, r30
    189a:	9f 0b       	sbc	r25, r31
    189c:	fc 01       	movw	r30, r24
    189e:	e9 3c       	cpi	r30, 0xC9	; 201
    18a0:	f1 05       	cpc	r31, r1
    18a2:	24 f4       	brge	.+8      	; 0x18ac <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    18a4:	e3 33       	cpi	r30, 0x33	; 51
    18a6:	f1 05       	cpc	r31, r1
    18a8:	74 f0       	brlt	.+28     	; 0x18c6 <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    18aa:	02 c0       	rjmp	.+4      	; 0x18b0 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    18ac:	33 24       	eor	r3, r3
    18ae:	33 94       	inc	r3
    18b0:	df 01       	movw	r26, r30
    18b2:	a3 01       	movw	r20, r6
    18b4:	92 01       	movw	r18, r4
    18b6:	0e 94 32 0d 	call	0x1a64	; 0x1a64 <__mulshisi3>
    18ba:	c6 0e       	add	r12, r22
    18bc:	d7 1e       	adc	r13, r23
    18be:	e8 1e       	adc	r14, r24
    18c0:	f9 1e       	adc	r15, r25
    18c2:	0e 0f       	add	r16, r30
    18c4:	1f 1f       	adc	r17, r31
    18c6:	93 94       	inc	r9
    18c8:	98 ee       	ldi	r25, 0xE8	; 232
    18ca:	49 0e       	add	r4, r25
    18cc:	93 e0       	ldi	r25, 0x03	; 3
    18ce:	59 1e       	adc	r5, r25
    18d0:	61 1c       	adc	r6, r1
    18d2:	71 1c       	adc	r7, r1
    18d4:	da cf       	rjmp	.-76     	; 0x188a <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    18d6:	31 10       	cpse	r3, r1
    18d8:	1e c0       	rjmp	.+60     	; 0x1916 <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    18da:	49 2d       	mov	r20, r9
    18dc:	50 e0       	ldi	r21, 0x00	; 0
    18de:	41 50       	subi	r20, 0x01	; 1
    18e0:	51 09       	sbc	r21, r1
    18e2:	24 ef       	ldi	r18, 0xF4	; 244
    18e4:	31 e0       	ldi	r19, 0x01	; 1
    18e6:	42 9f       	mul	r20, r18
    18e8:	c0 01       	movw	r24, r0
    18ea:	43 9f       	mul	r20, r19
    18ec:	90 0d       	add	r25, r0
    18ee:	52 9f       	mul	r21, r18
    18f0:	90 0d       	add	r25, r0
    18f2:	11 24       	eor	r1, r1
    18f4:	20 91 8e 01 	lds	r18, 0x018E	; 0x80018e <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    18f8:	30 91 8f 01 	lds	r19, 0x018F	; 0x80018f <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    18fc:	28 17       	cp	r18, r24
    18fe:	39 07       	cpc	r19, r25
    1900:	b4 f0       	brlt	.+44     	; 0x192e <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    1902:	88 ee       	ldi	r24, 0xE8	; 232
    1904:	93 e0       	ldi	r25, 0x03	; 3
    1906:	48 9f       	mul	r20, r24
    1908:	90 01       	movw	r18, r0
    190a:	49 9f       	mul	r20, r25
    190c:	30 0d       	add	r19, r0
    190e:	58 9f       	mul	r21, r24
    1910:	30 0d       	add	r19, r0
    1912:	11 24       	eor	r1, r1
    1914:	0e c0       	rjmp	.+28     	; 0x1932 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    1916:	98 01       	movw	r18, r16
    1918:	40 e0       	ldi	r20, 0x00	; 0
    191a:	50 e0       	ldi	r21, 0x00	; 0
    191c:	c7 01       	movw	r24, r14
    191e:	b6 01       	movw	r22, r12
    1920:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <__udivmodsi4>
    1924:	30 93 8f 01 	sts	0x018F, r19	; 0x80018f <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    1928:	20 93 8e 01 	sts	0x018E, r18	; 0x80018e <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    192c:	02 c0       	rjmp	.+4      	; 0x1932 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    192e:	20 e0       	ldi	r18, 0x00	; 0
    1930:	30 e0       	ldi	r19, 0x00	; 0
    1932:	c9 01       	movw	r24, r18
    1934:	cd b7       	in	r28, 0x3d	; 61
    1936:	de b7       	in	r29, 0x3e	; 62
    1938:	e2 e1       	ldi	r30, 0x12	; 18
    193a:	0c 94 56 0d 	jmp	0x1aac	; 0x1aac <__epilogue_restores__>

0000193e <_ZN16PololuQTRSensorsD1Ev>:
    193e:	cf 93       	push	r28
    1940:	df 93       	push	r29
    1942:	ec 01       	movw	r28, r24
    1944:	8a 81       	ldd	r24, Y+2	; 0x02
    1946:	9b 81       	ldd	r25, Y+3	; 0x03
    1948:	00 97       	sbiw	r24, 0x00	; 0
    194a:	11 f0       	breq	.+4      	; 0x1950 <_ZN16PololuQTRSensorsD1Ev+0x12>
    194c:	0e 94 09 0e 	call	0x1c12	; 0x1c12 <free>
    1950:	8e 81       	ldd	r24, Y+6	; 0x06
    1952:	9f 81       	ldd	r25, Y+7	; 0x07
    1954:	00 97       	sbiw	r24, 0x00	; 0
    1956:	11 f0       	breq	.+4      	; 0x195c <_ZN16PololuQTRSensorsD1Ev+0x1e>
    1958:	0e 94 09 0e 	call	0x1c12	; 0x1c12 <free>
    195c:	88 81       	ld	r24, Y
    195e:	99 81       	ldd	r25, Y+1	; 0x01
    1960:	00 97       	sbiw	r24, 0x00	; 0
    1962:	11 f0       	breq	.+4      	; 0x1968 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    1964:	0e 94 09 0e 	call	0x1c12	; 0x1c12 <free>
    1968:	8c 81       	ldd	r24, Y+4	; 0x04
    196a:	9d 81       	ldd	r25, Y+5	; 0x05
    196c:	00 97       	sbiw	r24, 0x00	; 0
    196e:	11 f0       	breq	.+4      	; 0x1974 <_ZN16PololuQTRSensorsD1Ev+0x36>
    1970:	0e 94 09 0e 	call	0x1c12	; 0x1c12 <free>
    1974:	df 91       	pop	r29
    1976:	cf 91       	pop	r28
    1978:	08 95       	ret

0000197a <__udivmodhi4>:
    197a:	aa 1b       	sub	r26, r26
    197c:	bb 1b       	sub	r27, r27
    197e:	51 e1       	ldi	r21, 0x11	; 17
    1980:	07 c0       	rjmp	.+14     	; 0x1990 <__udivmodhi4_ep>

00001982 <__udivmodhi4_loop>:
    1982:	aa 1f       	adc	r26, r26
    1984:	bb 1f       	adc	r27, r27
    1986:	a6 17       	cp	r26, r22
    1988:	b7 07       	cpc	r27, r23
    198a:	10 f0       	brcs	.+4      	; 0x1990 <__udivmodhi4_ep>
    198c:	a6 1b       	sub	r26, r22
    198e:	b7 0b       	sbc	r27, r23

00001990 <__udivmodhi4_ep>:
    1990:	88 1f       	adc	r24, r24
    1992:	99 1f       	adc	r25, r25
    1994:	5a 95       	dec	r21
    1996:	a9 f7       	brne	.-22     	; 0x1982 <__udivmodhi4_loop>
    1998:	80 95       	com	r24
    199a:	90 95       	com	r25
    199c:	bc 01       	movw	r22, r24
    199e:	cd 01       	movw	r24, r26
    19a0:	08 95       	ret

000019a2 <__udivmodsi4>:
    19a2:	a1 e2       	ldi	r26, 0x21	; 33
    19a4:	1a 2e       	mov	r1, r26
    19a6:	aa 1b       	sub	r26, r26
    19a8:	bb 1b       	sub	r27, r27
    19aa:	fd 01       	movw	r30, r26
    19ac:	0d c0       	rjmp	.+26     	; 0x19c8 <__udivmodsi4_ep>

000019ae <__udivmodsi4_loop>:
    19ae:	aa 1f       	adc	r26, r26
    19b0:	bb 1f       	adc	r27, r27
    19b2:	ee 1f       	adc	r30, r30
    19b4:	ff 1f       	adc	r31, r31
    19b6:	a2 17       	cp	r26, r18
    19b8:	b3 07       	cpc	r27, r19
    19ba:	e4 07       	cpc	r30, r20
    19bc:	f5 07       	cpc	r31, r21
    19be:	20 f0       	brcs	.+8      	; 0x19c8 <__udivmodsi4_ep>
    19c0:	a2 1b       	sub	r26, r18
    19c2:	b3 0b       	sbc	r27, r19
    19c4:	e4 0b       	sbc	r30, r20
    19c6:	f5 0b       	sbc	r31, r21

000019c8 <__udivmodsi4_ep>:
    19c8:	66 1f       	adc	r22, r22
    19ca:	77 1f       	adc	r23, r23
    19cc:	88 1f       	adc	r24, r24
    19ce:	99 1f       	adc	r25, r25
    19d0:	1a 94       	dec	r1
    19d2:	69 f7       	brne	.-38     	; 0x19ae <__udivmodsi4_loop>
    19d4:	60 95       	com	r22
    19d6:	70 95       	com	r23
    19d8:	80 95       	com	r24
    19da:	90 95       	com	r25
    19dc:	9b 01       	movw	r18, r22
    19de:	ac 01       	movw	r20, r24
    19e0:	bd 01       	movw	r22, r26
    19e2:	cf 01       	movw	r24, r30
    19e4:	08 95       	ret

000019e6 <__divmodsi4>:
    19e6:	05 2e       	mov	r0, r21
    19e8:	97 fb       	bst	r25, 7
    19ea:	1e f4       	brtc	.+6      	; 0x19f2 <__divmodsi4+0xc>
    19ec:	00 94       	com	r0
    19ee:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <__negsi2>
    19f2:	57 fd       	sbrc	r21, 7
    19f4:	07 d0       	rcall	.+14     	; 0x1a04 <__divmodsi4_neg2>
    19f6:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <__udivmodsi4>
    19fa:	07 fc       	sbrc	r0, 7
    19fc:	03 d0       	rcall	.+6      	; 0x1a04 <__divmodsi4_neg2>
    19fe:	4e f4       	brtc	.+18     	; 0x1a12 <__divmodsi4_exit>
    1a00:	0c 94 0a 0d 	jmp	0x1a14	; 0x1a14 <__negsi2>

00001a04 <__divmodsi4_neg2>:
    1a04:	50 95       	com	r21
    1a06:	40 95       	com	r20
    1a08:	30 95       	com	r19
    1a0a:	21 95       	neg	r18
    1a0c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a0e:	4f 4f       	sbci	r20, 0xFF	; 255
    1a10:	5f 4f       	sbci	r21, 0xFF	; 255

00001a12 <__divmodsi4_exit>:
    1a12:	08 95       	ret

00001a14 <__negsi2>:
    1a14:	90 95       	com	r25
    1a16:	80 95       	com	r24
    1a18:	70 95       	com	r23
    1a1a:	61 95       	neg	r22
    1a1c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a1e:	8f 4f       	sbci	r24, 0xFF	; 255
    1a20:	9f 4f       	sbci	r25, 0xFF	; 255
    1a22:	08 95       	ret

00001a24 <__tablejump2__>:
    1a24:	ee 0f       	add	r30, r30
    1a26:	ff 1f       	adc	r31, r31
    1a28:	05 90       	lpm	r0, Z+
    1a2a:	f4 91       	lpm	r31, Z
    1a2c:	e0 2d       	mov	r30, r0
    1a2e:	09 94       	ijmp

00001a30 <__umulhisi3>:
    1a30:	a2 9f       	mul	r26, r18
    1a32:	b0 01       	movw	r22, r0
    1a34:	b3 9f       	mul	r27, r19
    1a36:	c0 01       	movw	r24, r0
    1a38:	a3 9f       	mul	r26, r19
    1a3a:	70 0d       	add	r23, r0
    1a3c:	81 1d       	adc	r24, r1
    1a3e:	11 24       	eor	r1, r1
    1a40:	91 1d       	adc	r25, r1
    1a42:	b2 9f       	mul	r27, r18
    1a44:	70 0d       	add	r23, r0
    1a46:	81 1d       	adc	r24, r1
    1a48:	11 24       	eor	r1, r1
    1a4a:	91 1d       	adc	r25, r1
    1a4c:	08 95       	ret

00001a4e <__muluhisi3>:
    1a4e:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <__umulhisi3>
    1a52:	a5 9f       	mul	r26, r21
    1a54:	90 0d       	add	r25, r0
    1a56:	b4 9f       	mul	r27, r20
    1a58:	90 0d       	add	r25, r0
    1a5a:	a4 9f       	mul	r26, r20
    1a5c:	80 0d       	add	r24, r0
    1a5e:	91 1d       	adc	r25, r1
    1a60:	11 24       	eor	r1, r1
    1a62:	08 95       	ret

00001a64 <__mulshisi3>:
    1a64:	b7 ff       	sbrs	r27, 7
    1a66:	0c 94 27 0d 	jmp	0x1a4e	; 0x1a4e <__muluhisi3>

00001a6a <__mulohisi3>:
    1a6a:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <__muluhisi3>
    1a6e:	82 1b       	sub	r24, r18
    1a70:	93 0b       	sbc	r25, r19
    1a72:	08 95       	ret

00001a74 <__prologue_saves__>:
    1a74:	2f 92       	push	r2
    1a76:	3f 92       	push	r3
    1a78:	4f 92       	push	r4
    1a7a:	5f 92       	push	r5
    1a7c:	6f 92       	push	r6
    1a7e:	7f 92       	push	r7
    1a80:	8f 92       	push	r8
    1a82:	9f 92       	push	r9
    1a84:	af 92       	push	r10
    1a86:	bf 92       	push	r11
    1a88:	cf 92       	push	r12
    1a8a:	df 92       	push	r13
    1a8c:	ef 92       	push	r14
    1a8e:	ff 92       	push	r15
    1a90:	0f 93       	push	r16
    1a92:	1f 93       	push	r17
    1a94:	cf 93       	push	r28
    1a96:	df 93       	push	r29
    1a98:	cd b7       	in	r28, 0x3d	; 61
    1a9a:	de b7       	in	r29, 0x3e	; 62
    1a9c:	ca 1b       	sub	r28, r26
    1a9e:	db 0b       	sbc	r29, r27
    1aa0:	0f b6       	in	r0, 0x3f	; 63
    1aa2:	f8 94       	cli
    1aa4:	de bf       	out	0x3e, r29	; 62
    1aa6:	0f be       	out	0x3f, r0	; 63
    1aa8:	cd bf       	out	0x3d, r28	; 61
    1aaa:	09 94       	ijmp

00001aac <__epilogue_restores__>:
    1aac:	2a 88       	ldd	r2, Y+18	; 0x12
    1aae:	39 88       	ldd	r3, Y+17	; 0x11
    1ab0:	48 88       	ldd	r4, Y+16	; 0x10
    1ab2:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ab4:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ab6:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ab8:	8c 84       	ldd	r8, Y+12	; 0x0c
    1aba:	9b 84       	ldd	r9, Y+11	; 0x0b
    1abc:	aa 84       	ldd	r10, Y+10	; 0x0a
    1abe:	b9 84       	ldd	r11, Y+9	; 0x09
    1ac0:	c8 84       	ldd	r12, Y+8	; 0x08
    1ac2:	df 80       	ldd	r13, Y+7	; 0x07
    1ac4:	ee 80       	ldd	r14, Y+6	; 0x06
    1ac6:	fd 80       	ldd	r15, Y+5	; 0x05
    1ac8:	0c 81       	ldd	r16, Y+4	; 0x04
    1aca:	1b 81       	ldd	r17, Y+3	; 0x03
    1acc:	aa 81       	ldd	r26, Y+2	; 0x02
    1ace:	b9 81       	ldd	r27, Y+1	; 0x01
    1ad0:	ce 0f       	add	r28, r30
    1ad2:	d1 1d       	adc	r29, r1
    1ad4:	0f b6       	in	r0, 0x3f	; 63
    1ad6:	f8 94       	cli
    1ad8:	de bf       	out	0x3e, r29	; 62
    1ada:	0f be       	out	0x3f, r0	; 63
    1adc:	cd bf       	out	0x3d, r28	; 61
    1ade:	ed 01       	movw	r28, r26
    1ae0:	08 95       	ret

00001ae2 <malloc>:
    1ae2:	0f 93       	push	r16
    1ae4:	1f 93       	push	r17
    1ae6:	cf 93       	push	r28
    1ae8:	df 93       	push	r29
    1aea:	82 30       	cpi	r24, 0x02	; 2
    1aec:	91 05       	cpc	r25, r1
    1aee:	10 f4       	brcc	.+4      	; 0x1af4 <malloc+0x12>
    1af0:	82 e0       	ldi	r24, 0x02	; 2
    1af2:	90 e0       	ldi	r25, 0x00	; 0
    1af4:	e0 91 a6 01 	lds	r30, 0x01A6	; 0x8001a6 <__flp>
    1af8:	f0 91 a7 01 	lds	r31, 0x01A7	; 0x8001a7 <__flp+0x1>
    1afc:	20 e0       	ldi	r18, 0x00	; 0
    1afe:	30 e0       	ldi	r19, 0x00	; 0
    1b00:	a0 e0       	ldi	r26, 0x00	; 0
    1b02:	b0 e0       	ldi	r27, 0x00	; 0
    1b04:	30 97       	sbiw	r30, 0x00	; 0
    1b06:	19 f1       	breq	.+70     	; 0x1b4e <malloc+0x6c>
    1b08:	40 81       	ld	r20, Z
    1b0a:	51 81       	ldd	r21, Z+1	; 0x01
    1b0c:	02 81       	ldd	r16, Z+2	; 0x02
    1b0e:	13 81       	ldd	r17, Z+3	; 0x03
    1b10:	48 17       	cp	r20, r24
    1b12:	59 07       	cpc	r21, r25
    1b14:	c8 f0       	brcs	.+50     	; 0x1b48 <malloc+0x66>
    1b16:	84 17       	cp	r24, r20
    1b18:	95 07       	cpc	r25, r21
    1b1a:	69 f4       	brne	.+26     	; 0x1b36 <malloc+0x54>
    1b1c:	10 97       	sbiw	r26, 0x00	; 0
    1b1e:	31 f0       	breq	.+12     	; 0x1b2c <malloc+0x4a>
    1b20:	12 96       	adiw	r26, 0x02	; 2
    1b22:	0c 93       	st	X, r16
    1b24:	12 97       	sbiw	r26, 0x02	; 2
    1b26:	13 96       	adiw	r26, 0x03	; 3
    1b28:	1c 93       	st	X, r17
    1b2a:	27 c0       	rjmp	.+78     	; 0x1b7a <malloc+0x98>
    1b2c:	00 93 a6 01 	sts	0x01A6, r16	; 0x8001a6 <__flp>
    1b30:	10 93 a7 01 	sts	0x01A7, r17	; 0x8001a7 <__flp+0x1>
    1b34:	22 c0       	rjmp	.+68     	; 0x1b7a <malloc+0x98>
    1b36:	21 15       	cp	r18, r1
    1b38:	31 05       	cpc	r19, r1
    1b3a:	19 f0       	breq	.+6      	; 0x1b42 <malloc+0x60>
    1b3c:	42 17       	cp	r20, r18
    1b3e:	53 07       	cpc	r21, r19
    1b40:	18 f4       	brcc	.+6      	; 0x1b48 <malloc+0x66>
    1b42:	9a 01       	movw	r18, r20
    1b44:	bd 01       	movw	r22, r26
    1b46:	ef 01       	movw	r28, r30
    1b48:	df 01       	movw	r26, r30
    1b4a:	f8 01       	movw	r30, r16
    1b4c:	db cf       	rjmp	.-74     	; 0x1b04 <malloc+0x22>
    1b4e:	21 15       	cp	r18, r1
    1b50:	31 05       	cpc	r19, r1
    1b52:	f9 f0       	breq	.+62     	; 0x1b92 <malloc+0xb0>
    1b54:	28 1b       	sub	r18, r24
    1b56:	39 0b       	sbc	r19, r25
    1b58:	24 30       	cpi	r18, 0x04	; 4
    1b5a:	31 05       	cpc	r19, r1
    1b5c:	80 f4       	brcc	.+32     	; 0x1b7e <malloc+0x9c>
    1b5e:	8a 81       	ldd	r24, Y+2	; 0x02
    1b60:	9b 81       	ldd	r25, Y+3	; 0x03
    1b62:	61 15       	cp	r22, r1
    1b64:	71 05       	cpc	r23, r1
    1b66:	21 f0       	breq	.+8      	; 0x1b70 <malloc+0x8e>
    1b68:	fb 01       	movw	r30, r22
    1b6a:	93 83       	std	Z+3, r25	; 0x03
    1b6c:	82 83       	std	Z+2, r24	; 0x02
    1b6e:	04 c0       	rjmp	.+8      	; 0x1b78 <malloc+0x96>
    1b70:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <__flp+0x1>
    1b74:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <__flp>
    1b78:	fe 01       	movw	r30, r28
    1b7a:	32 96       	adiw	r30, 0x02	; 2
    1b7c:	44 c0       	rjmp	.+136    	; 0x1c06 <malloc+0x124>
    1b7e:	fe 01       	movw	r30, r28
    1b80:	e2 0f       	add	r30, r18
    1b82:	f3 1f       	adc	r31, r19
    1b84:	81 93       	st	Z+, r24
    1b86:	91 93       	st	Z+, r25
    1b88:	22 50       	subi	r18, 0x02	; 2
    1b8a:	31 09       	sbc	r19, r1
    1b8c:	39 83       	std	Y+1, r19	; 0x01
    1b8e:	28 83       	st	Y, r18
    1b90:	3a c0       	rjmp	.+116    	; 0x1c06 <malloc+0x124>
    1b92:	20 91 a4 01 	lds	r18, 0x01A4	; 0x8001a4 <__brkval>
    1b96:	30 91 a5 01 	lds	r19, 0x01A5	; 0x8001a5 <__brkval+0x1>
    1b9a:	23 2b       	or	r18, r19
    1b9c:	41 f4       	brne	.+16     	; 0x1bae <malloc+0xcc>
    1b9e:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    1ba2:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    1ba6:	30 93 a5 01 	sts	0x01A5, r19	; 0x8001a5 <__brkval+0x1>
    1baa:	20 93 a4 01 	sts	0x01A4, r18	; 0x8001a4 <__brkval>
    1bae:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    1bb2:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    1bb6:	21 15       	cp	r18, r1
    1bb8:	31 05       	cpc	r19, r1
    1bba:	41 f4       	brne	.+16     	; 0x1bcc <malloc+0xea>
    1bbc:	2d b7       	in	r18, 0x3d	; 61
    1bbe:	3e b7       	in	r19, 0x3e	; 62
    1bc0:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    1bc4:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    1bc8:	24 1b       	sub	r18, r20
    1bca:	35 0b       	sbc	r19, r21
    1bcc:	e0 91 a4 01 	lds	r30, 0x01A4	; 0x8001a4 <__brkval>
    1bd0:	f0 91 a5 01 	lds	r31, 0x01A5	; 0x8001a5 <__brkval+0x1>
    1bd4:	e2 17       	cp	r30, r18
    1bd6:	f3 07       	cpc	r31, r19
    1bd8:	a0 f4       	brcc	.+40     	; 0x1c02 <malloc+0x120>
    1bda:	2e 1b       	sub	r18, r30
    1bdc:	3f 0b       	sbc	r19, r31
    1bde:	28 17       	cp	r18, r24
    1be0:	39 07       	cpc	r19, r25
    1be2:	78 f0       	brcs	.+30     	; 0x1c02 <malloc+0x120>
    1be4:	ac 01       	movw	r20, r24
    1be6:	4e 5f       	subi	r20, 0xFE	; 254
    1be8:	5f 4f       	sbci	r21, 0xFF	; 255
    1bea:	24 17       	cp	r18, r20
    1bec:	35 07       	cpc	r19, r21
    1bee:	48 f0       	brcs	.+18     	; 0x1c02 <malloc+0x120>
    1bf0:	4e 0f       	add	r20, r30
    1bf2:	5f 1f       	adc	r21, r31
    1bf4:	50 93 a5 01 	sts	0x01A5, r21	; 0x8001a5 <__brkval+0x1>
    1bf8:	40 93 a4 01 	sts	0x01A4, r20	; 0x8001a4 <__brkval>
    1bfc:	81 93       	st	Z+, r24
    1bfe:	91 93       	st	Z+, r25
    1c00:	02 c0       	rjmp	.+4      	; 0x1c06 <malloc+0x124>
    1c02:	e0 e0       	ldi	r30, 0x00	; 0
    1c04:	f0 e0       	ldi	r31, 0x00	; 0
    1c06:	cf 01       	movw	r24, r30
    1c08:	df 91       	pop	r29
    1c0a:	cf 91       	pop	r28
    1c0c:	1f 91       	pop	r17
    1c0e:	0f 91       	pop	r16
    1c10:	08 95       	ret

00001c12 <free>:
    1c12:	cf 93       	push	r28
    1c14:	df 93       	push	r29
    1c16:	00 97       	sbiw	r24, 0x00	; 0
    1c18:	09 f4       	brne	.+2      	; 0x1c1c <free+0xa>
    1c1a:	81 c0       	rjmp	.+258    	; 0x1d1e <free+0x10c>
    1c1c:	fc 01       	movw	r30, r24
    1c1e:	32 97       	sbiw	r30, 0x02	; 2
    1c20:	13 82       	std	Z+3, r1	; 0x03
    1c22:	12 82       	std	Z+2, r1	; 0x02
    1c24:	a0 91 a6 01 	lds	r26, 0x01A6	; 0x8001a6 <__flp>
    1c28:	b0 91 a7 01 	lds	r27, 0x01A7	; 0x8001a7 <__flp+0x1>
    1c2c:	10 97       	sbiw	r26, 0x00	; 0
    1c2e:	81 f4       	brne	.+32     	; 0x1c50 <free+0x3e>
    1c30:	20 81       	ld	r18, Z
    1c32:	31 81       	ldd	r19, Z+1	; 0x01
    1c34:	82 0f       	add	r24, r18
    1c36:	93 1f       	adc	r25, r19
    1c38:	20 91 a4 01 	lds	r18, 0x01A4	; 0x8001a4 <__brkval>
    1c3c:	30 91 a5 01 	lds	r19, 0x01A5	; 0x8001a5 <__brkval+0x1>
    1c40:	28 17       	cp	r18, r24
    1c42:	39 07       	cpc	r19, r25
    1c44:	51 f5       	brne	.+84     	; 0x1c9a <free+0x88>
    1c46:	f0 93 a5 01 	sts	0x01A5, r31	; 0x8001a5 <__brkval+0x1>
    1c4a:	e0 93 a4 01 	sts	0x01A4, r30	; 0x8001a4 <__brkval>
    1c4e:	67 c0       	rjmp	.+206    	; 0x1d1e <free+0x10c>
    1c50:	ed 01       	movw	r28, r26
    1c52:	20 e0       	ldi	r18, 0x00	; 0
    1c54:	30 e0       	ldi	r19, 0x00	; 0
    1c56:	ce 17       	cp	r28, r30
    1c58:	df 07       	cpc	r29, r31
    1c5a:	40 f4       	brcc	.+16     	; 0x1c6c <free+0x5a>
    1c5c:	4a 81       	ldd	r20, Y+2	; 0x02
    1c5e:	5b 81       	ldd	r21, Y+3	; 0x03
    1c60:	9e 01       	movw	r18, r28
    1c62:	41 15       	cp	r20, r1
    1c64:	51 05       	cpc	r21, r1
    1c66:	f1 f0       	breq	.+60     	; 0x1ca4 <free+0x92>
    1c68:	ea 01       	movw	r28, r20
    1c6a:	f5 cf       	rjmp	.-22     	; 0x1c56 <free+0x44>
    1c6c:	d3 83       	std	Z+3, r29	; 0x03
    1c6e:	c2 83       	std	Z+2, r28	; 0x02
    1c70:	40 81       	ld	r20, Z
    1c72:	51 81       	ldd	r21, Z+1	; 0x01
    1c74:	84 0f       	add	r24, r20
    1c76:	95 1f       	adc	r25, r21
    1c78:	c8 17       	cp	r28, r24
    1c7a:	d9 07       	cpc	r29, r25
    1c7c:	59 f4       	brne	.+22     	; 0x1c94 <free+0x82>
    1c7e:	88 81       	ld	r24, Y
    1c80:	99 81       	ldd	r25, Y+1	; 0x01
    1c82:	84 0f       	add	r24, r20
    1c84:	95 1f       	adc	r25, r21
    1c86:	02 96       	adiw	r24, 0x02	; 2
    1c88:	91 83       	std	Z+1, r25	; 0x01
    1c8a:	80 83       	st	Z, r24
    1c8c:	8a 81       	ldd	r24, Y+2	; 0x02
    1c8e:	9b 81       	ldd	r25, Y+3	; 0x03
    1c90:	93 83       	std	Z+3, r25	; 0x03
    1c92:	82 83       	std	Z+2, r24	; 0x02
    1c94:	21 15       	cp	r18, r1
    1c96:	31 05       	cpc	r19, r1
    1c98:	29 f4       	brne	.+10     	; 0x1ca4 <free+0x92>
    1c9a:	f0 93 a7 01 	sts	0x01A7, r31	; 0x8001a7 <__flp+0x1>
    1c9e:	e0 93 a6 01 	sts	0x01A6, r30	; 0x8001a6 <__flp>
    1ca2:	3d c0       	rjmp	.+122    	; 0x1d1e <free+0x10c>
    1ca4:	e9 01       	movw	r28, r18
    1ca6:	fb 83       	std	Y+3, r31	; 0x03
    1ca8:	ea 83       	std	Y+2, r30	; 0x02
    1caa:	49 91       	ld	r20, Y+
    1cac:	59 91       	ld	r21, Y+
    1cae:	c4 0f       	add	r28, r20
    1cb0:	d5 1f       	adc	r29, r21
    1cb2:	ec 17       	cp	r30, r28
    1cb4:	fd 07       	cpc	r31, r29
    1cb6:	61 f4       	brne	.+24     	; 0x1cd0 <free+0xbe>
    1cb8:	80 81       	ld	r24, Z
    1cba:	91 81       	ldd	r25, Z+1	; 0x01
    1cbc:	84 0f       	add	r24, r20
    1cbe:	95 1f       	adc	r25, r21
    1cc0:	02 96       	adiw	r24, 0x02	; 2
    1cc2:	e9 01       	movw	r28, r18
    1cc4:	99 83       	std	Y+1, r25	; 0x01
    1cc6:	88 83       	st	Y, r24
    1cc8:	82 81       	ldd	r24, Z+2	; 0x02
    1cca:	93 81       	ldd	r25, Z+3	; 0x03
    1ccc:	9b 83       	std	Y+3, r25	; 0x03
    1cce:	8a 83       	std	Y+2, r24	; 0x02
    1cd0:	e0 e0       	ldi	r30, 0x00	; 0
    1cd2:	f0 e0       	ldi	r31, 0x00	; 0
    1cd4:	12 96       	adiw	r26, 0x02	; 2
    1cd6:	8d 91       	ld	r24, X+
    1cd8:	9c 91       	ld	r25, X
    1cda:	13 97       	sbiw	r26, 0x03	; 3
    1cdc:	00 97       	sbiw	r24, 0x00	; 0
    1cde:	19 f0       	breq	.+6      	; 0x1ce6 <free+0xd4>
    1ce0:	fd 01       	movw	r30, r26
    1ce2:	dc 01       	movw	r26, r24
    1ce4:	f7 cf       	rjmp	.-18     	; 0x1cd4 <free+0xc2>
    1ce6:	8d 91       	ld	r24, X+
    1ce8:	9c 91       	ld	r25, X
    1cea:	11 97       	sbiw	r26, 0x01	; 1
    1cec:	9d 01       	movw	r18, r26
    1cee:	2e 5f       	subi	r18, 0xFE	; 254
    1cf0:	3f 4f       	sbci	r19, 0xFF	; 255
    1cf2:	82 0f       	add	r24, r18
    1cf4:	93 1f       	adc	r25, r19
    1cf6:	20 91 a4 01 	lds	r18, 0x01A4	; 0x8001a4 <__brkval>
    1cfa:	30 91 a5 01 	lds	r19, 0x01A5	; 0x8001a5 <__brkval+0x1>
    1cfe:	28 17       	cp	r18, r24
    1d00:	39 07       	cpc	r19, r25
    1d02:	69 f4       	brne	.+26     	; 0x1d1e <free+0x10c>
    1d04:	30 97       	sbiw	r30, 0x00	; 0
    1d06:	29 f4       	brne	.+10     	; 0x1d12 <free+0x100>
    1d08:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <__flp+0x1>
    1d0c:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <__flp>
    1d10:	02 c0       	rjmp	.+4      	; 0x1d16 <free+0x104>
    1d12:	13 82       	std	Z+3, r1	; 0x03
    1d14:	12 82       	std	Z+2, r1	; 0x02
    1d16:	b0 93 a5 01 	sts	0x01A5, r27	; 0x8001a5 <__brkval+0x1>
    1d1a:	a0 93 a4 01 	sts	0x01A4, r26	; 0x8001a4 <__brkval>
    1d1e:	df 91       	pop	r29
    1d20:	cf 91       	pop	r28
    1d22:	08 95       	ret

00001d24 <__do_global_dtors>:
    1d24:	10 e0       	ldi	r17, 0x00	; 0
    1d26:	c4 e4       	ldi	r28, 0x44	; 68
    1d28:	d0 e0       	ldi	r29, 0x00	; 0
    1d2a:	04 c0       	rjmp	.+8      	; 0x1d34 <__do_global_dtors+0x10>
    1d2c:	fe 01       	movw	r30, r28
    1d2e:	0e 94 12 0d 	call	0x1a24	; 0x1a24 <__tablejump2__>
    1d32:	21 96       	adiw	r28, 0x01	; 1
    1d34:	c5 34       	cpi	r28, 0x45	; 69
    1d36:	d1 07       	cpc	r29, r17
    1d38:	c9 f7       	brne	.-14     	; 0x1d2c <__do_global_dtors+0x8>
    1d3a:	f8 94       	cli

00001d3c <__stop_program>:
    1d3c:	ff cf       	rjmp	.-2      	; 0x1d3c <__stop_program>
