
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000094  00800100  00003a7a  00003b0e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003a7a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000008f  00800194  00800194  00003ba2  2**0
                  ALLOC
  3 .stab         00007b48  00000000  00000000  00003ba4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000a086  00000000  00000000  0000b6ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  00015772  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000157b4  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 000001c0  00000000  00000000  000157f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   000035e0  00000000  00000000  000159b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000011fa  00000000  00000000  00018f94  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00002145  00000000  00000000  0001a18e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000570  00000000  00000000  0001c2d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000a84  00000000  00000000  0001c844  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    000016fc  00000000  00000000  0001d2c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000001d8  00000000  00000000  0001e9c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 43 00 	jmp	0x86	; 0x86 <__dtors_end>
       4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
       8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
       c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      24:	0c 94 3e 15 	jmp	0x2a7c	; 0x2a7c <__vector_9>
      28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      34:	0c 94 d5 10 	jmp	0x21aa	; 0x21aa <__vector_13>
      38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      48:	0c 94 4d 14 	jmp	0x289a	; 0x289a <__vector_18>
      4c:	0c 94 19 15 	jmp	0x2a32	; 0x2a32 <__vector_19>
      50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      68:	42 07       	cpc	r20, r18
      6a:	70 07       	cpc	r23, r16
      6c:	db 07       	cpc	r29, r27
      6e:	46 07       	cpc	r20, r22
      70:	55 07       	cpc	r21, r21
      72:	64 07       	cpc	r22, r20
      74:	46 07       	cpc	r20, r22
      76:	46 07       	cpc	r20, r22
      78:	46 07       	cpc	r20, r22

0000007a <__trampolines_end>:
      7a:	3e 67       	ori	r19, 0x7E	; 126
      7c:	33 32       	cpi	r19, 0x23	; 35
      7e:	3e 3e       	cpi	r19, 0xEE	; 238
      80:	63 33       	cpi	r22, 0x33	; 51
      82:	32 00       	.word	0x0032	; ????

00000084 <__ctors_end>:
      84:	1f 16       	cp	r1, r31

00000086 <__dtors_end>:
      86:	11 24       	eor	r1, r1
      88:	1f be       	out	0x3f, r1	; 63
      8a:	cf ef       	ldi	r28, 0xFF	; 255
      8c:	d8 e0       	ldi	r29, 0x08	; 8
      8e:	de bf       	out	0x3e, r29	; 62
      90:	cd bf       	out	0x3d, r28	; 61

00000092 <__do_copy_data>:
      92:	11 e0       	ldi	r17, 0x01	; 1
      94:	a0 e0       	ldi	r26, 0x00	; 0
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	ea e7       	ldi	r30, 0x7A	; 122
      9a:	fa e3       	ldi	r31, 0x3A	; 58
      9c:	02 c0       	rjmp	.+4      	; 0xa2 <__do_copy_data+0x10>
      9e:	05 90       	lpm	r0, Z+
      a0:	0d 92       	st	X+, r0
      a2:	a4 39       	cpi	r26, 0x94	; 148
      a4:	b1 07       	cpc	r27, r17
      a6:	d9 f7       	brne	.-10     	; 0x9e <__do_copy_data+0xc>

000000a8 <__do_clear_bss>:
      a8:	22 e0       	ldi	r18, 0x02	; 2
      aa:	a4 e9       	ldi	r26, 0x94	; 148
      ac:	b1 e0       	ldi	r27, 0x01	; 1
      ae:	01 c0       	rjmp	.+2      	; 0xb2 <.do_clear_bss_start>

000000b0 <.do_clear_bss_loop>:
      b0:	1d 92       	st	X+, r1

000000b2 <.do_clear_bss_start>:
      b2:	a3 32       	cpi	r26, 0x23	; 35
      b4:	b2 07       	cpc	r27, r18
      b6:	e1 f7       	brne	.-8      	; 0xb0 <.do_clear_bss_loop>
      b8:	0e 94 91 03 	call	0x722	; 0x722 <main>
      bc:	0c 94 30 1d 	jmp	0x3a60	; 0x3a60 <__do_global_dtors>

000000c0 <__bad_interrupt>:
      c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <filllocationarrays>:
      c4:	cf 93       	push	r28
      c6:	df 93       	push	r29
      c8:	cd b7       	in	r28, 0x3d	; 61
      ca:	de b7       	in	r29, 0x3e	; 62
      cc:	e2 97       	sbiw	r28, 0x32	; 50
      ce:	0f b6       	in	r0, 0x3f	; 63
      d0:	f8 94       	cli
      d2:	de bf       	out	0x3e, r29	; 62
      d4:	0f be       	out	0x3f, r0	; 63
      d6:	cd bf       	out	0x3d, r28	; 61
      d8:	dc 01       	movw	r26, r24
      da:	20 e0       	ldi	r18, 0x00	; 0
      dc:	30 e0       	ldi	r19, 0x00	; 0
      de:	1a c0       	rjmp	.+52     	; 0x114 <filllocationarrays+0x50>
      e0:	ad 01       	movw	r20, r26
      e2:	42 0f       	add	r20, r18
      e4:	53 1f       	adc	r21, r19
      e6:	ca 01       	movw	r24, r20
      e8:	8e 5a       	subi	r24, 0xAE	; 174
      ea:	9f 4f       	sbci	r25, 0xFF	; 255
      ec:	fc 01       	movw	r30, r24
      ee:	10 82       	st	Z, r1
      f0:	fa 01       	movw	r30, r20
      f2:	11 ae       	std	Z+57, r1	; 0x39
      f4:	ea e1       	ldi	r30, 0x1A	; 26
      f6:	f0 e0       	ldi	r31, 0x00	; 0
      f8:	ec 0f       	add	r30, r28
      fa:	fd 1f       	adc	r31, r29
      fc:	e2 0f       	add	r30, r18
      fe:	f3 1f       	adc	r31, r19
     100:	10 82       	st	Z, r1
     102:	e1 e0       	ldi	r30, 0x01	; 1
     104:	f0 e0       	ldi	r31, 0x00	; 0
     106:	ec 0f       	add	r30, r28
     108:	fd 1f       	adc	r31, r29
     10a:	e2 0f       	add	r30, r18
     10c:	f3 1f       	adc	r31, r19
     10e:	10 82       	st	Z, r1
     110:	2f 5f       	subi	r18, 0xFF	; 255
     112:	3f 4f       	sbci	r19, 0xFF	; 255
     114:	29 31       	cpi	r18, 0x19	; 25
     116:	31 05       	cpc	r19, r1
     118:	1c f3       	brlt	.-58     	; 0xe0 <filllocationarrays+0x1c>
     11a:	5c 96       	adiw	r26, 0x1c	; 28
     11c:	8c 91       	ld	r24, X
     11e:	5c 97       	sbiw	r26, 0x1c	; 28
     120:	81 30       	cpi	r24, 0x01	; 1
     122:	29 f4       	brne	.+10     	; 0x12e <filllocationarrays+0x6a>
     124:	89 83       	std	Y+1, r24	; 0x01
     126:	8a 8f       	std	Y+26, r24	; 0x1a
     128:	21 e0       	ldi	r18, 0x01	; 1
     12a:	30 e0       	ldi	r19, 0x00	; 0
     12c:	02 c0       	rjmp	.+4      	; 0x132 <filllocationarrays+0x6e>
     12e:	20 e0       	ldi	r18, 0x00	; 0
     130:	30 e0       	ldi	r19, 0x00	; 0
     132:	40 e0       	ldi	r20, 0x00	; 0
     134:	50 e0       	ldi	r21, 0x00	; 0
     136:	3b c0       	rjmp	.+118    	; 0x1ae <filllocationarrays+0xea>
     138:	5d 96       	adiw	r26, 0x1d	; 29
     13a:	8c 91       	ld	r24, X
     13c:	5d 97       	sbiw	r26, 0x1d	; 29
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	04 2e       	mov	r0, r20
     142:	02 c0       	rjmp	.+4      	; 0x148 <filllocationarrays+0x84>
     144:	95 95       	asr	r25
     146:	87 95       	ror	r24
     148:	0a 94       	dec	r0
     14a:	e2 f7       	brpl	.-8      	; 0x144 <filllocationarrays+0x80>
     14c:	81 70       	andi	r24, 0x01	; 1
     14e:	44 30       	cpi	r20, 0x04	; 4
     150:	51 05       	cpc	r21, r1
     152:	b4 f4       	brge	.+44     	; 0x180 <filllocationarrays+0xbc>
     154:	81 30       	cpi	r24, 0x01	; 1
     156:	49 f5       	brne	.+82     	; 0x1aa <filllocationarrays+0xe6>
     158:	e1 e0       	ldi	r30, 0x01	; 1
     15a:	f0 e0       	ldi	r31, 0x00	; 0
     15c:	ec 0f       	add	r30, r28
     15e:	fd 1f       	adc	r31, r29
     160:	e2 0f       	add	r30, r18
     162:	f3 1f       	adc	r31, r19
     164:	82 e0       	ldi	r24, 0x02	; 2
     166:	84 0f       	add	r24, r20
     168:	80 83       	st	Z, r24
     16a:	ea e1       	ldi	r30, 0x1A	; 26
     16c:	f0 e0       	ldi	r31, 0x00	; 0
     16e:	ec 0f       	add	r30, r28
     170:	fd 1f       	adc	r31, r29
     172:	e2 0f       	add	r30, r18
     174:	f3 1f       	adc	r31, r19
     176:	81 e0       	ldi	r24, 0x01	; 1
     178:	80 83       	st	Z, r24
     17a:	2f 5f       	subi	r18, 0xFF	; 255
     17c:	3f 4f       	sbci	r19, 0xFF	; 255
     17e:	15 c0       	rjmp	.+42     	; 0x1aa <filllocationarrays+0xe6>
     180:	81 30       	cpi	r24, 0x01	; 1
     182:	99 f4       	brne	.+38     	; 0x1aa <filllocationarrays+0xe6>
     184:	e1 e0       	ldi	r30, 0x01	; 1
     186:	f0 e0       	ldi	r31, 0x00	; 0
     188:	ec 0f       	add	r30, r28
     18a:	fd 1f       	adc	r31, r29
     18c:	e2 0f       	add	r30, r18
     18e:	f3 1f       	adc	r31, r19
     190:	8d ef       	ldi	r24, 0xFD	; 253
     192:	84 0f       	add	r24, r20
     194:	80 83       	st	Z, r24
     196:	ea e1       	ldi	r30, 0x1A	; 26
     198:	f0 e0       	ldi	r31, 0x00	; 0
     19a:	ec 0f       	add	r30, r28
     19c:	fd 1f       	adc	r31, r29
     19e:	e2 0f       	add	r30, r18
     1a0:	f3 1f       	adc	r31, r19
     1a2:	82 e0       	ldi	r24, 0x02	; 2
     1a4:	80 83       	st	Z, r24
     1a6:	2f 5f       	subi	r18, 0xFF	; 255
     1a8:	3f 4f       	sbci	r19, 0xFF	; 255
     1aa:	4f 5f       	subi	r20, 0xFF	; 255
     1ac:	5f 4f       	sbci	r21, 0xFF	; 255
     1ae:	48 30       	cpi	r20, 0x08	; 8
     1b0:	51 05       	cpc	r21, r1
     1b2:	14 f2       	brlt	.-124    	; 0x138 <filllocationarrays+0x74>
     1b4:	40 e0       	ldi	r20, 0x00	; 0
     1b6:	50 e0       	ldi	r21, 0x00	; 0
     1b8:	53 c0       	rjmp	.+166    	; 0x260 <filllocationarrays+0x19c>
     1ba:	5e 96       	adiw	r26, 0x1e	; 30
     1bc:	8c 91       	ld	r24, X
     1be:	5e 97       	sbiw	r26, 0x1e	; 30
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	04 2e       	mov	r0, r20
     1c4:	02 c0       	rjmp	.+4      	; 0x1ca <filllocationarrays+0x106>
     1c6:	95 95       	asr	r25
     1c8:	87 95       	ror	r24
     1ca:	0a 94       	dec	r0
     1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <filllocationarrays+0x102>
     1ce:	81 70       	andi	r24, 0x01	; 1
     1d0:	41 15       	cp	r20, r1
     1d2:	51 05       	cpc	r21, r1
     1d4:	b9 f4       	brne	.+46     	; 0x204 <filllocationarrays+0x140>
     1d6:	81 30       	cpi	r24, 0x01	; 1
     1d8:	09 f0       	breq	.+2      	; 0x1dc <filllocationarrays+0x118>
     1da:	40 c0       	rjmp	.+128    	; 0x25c <filllocationarrays+0x198>
     1dc:	e1 e0       	ldi	r30, 0x01	; 1
     1de:	f0 e0       	ldi	r31, 0x00	; 0
     1e0:	ec 0f       	add	r30, r28
     1e2:	fd 1f       	adc	r31, r29
     1e4:	e2 0f       	add	r30, r18
     1e6:	f3 1f       	adc	r31, r19
     1e8:	85 e0       	ldi	r24, 0x05	; 5
     1ea:	84 0f       	add	r24, r20
     1ec:	80 83       	st	Z, r24
     1ee:	ea e1       	ldi	r30, 0x1A	; 26
     1f0:	f0 e0       	ldi	r31, 0x00	; 0
     1f2:	ec 0f       	add	r30, r28
     1f4:	fd 1f       	adc	r31, r29
     1f6:	e2 0f       	add	r30, r18
     1f8:	f3 1f       	adc	r31, r19
     1fa:	82 e0       	ldi	r24, 0x02	; 2
     1fc:	80 83       	st	Z, r24
     1fe:	2f 5f       	subi	r18, 0xFF	; 255
     200:	3f 4f       	sbci	r19, 0xFF	; 255
     202:	2c c0       	rjmp	.+88     	; 0x25c <filllocationarrays+0x198>
     204:	46 30       	cpi	r20, 0x06	; 6
     206:	51 05       	cpc	r21, r1
     208:	a4 f4       	brge	.+40     	; 0x232 <filllocationarrays+0x16e>
     20a:	81 30       	cpi	r24, 0x01	; 1
     20c:	39 f5       	brne	.+78     	; 0x25c <filllocationarrays+0x198>
     20e:	e1 e0       	ldi	r30, 0x01	; 1
     210:	f0 e0       	ldi	r31, 0x00	; 0
     212:	ec 0f       	add	r30, r28
     214:	fd 1f       	adc	r31, r29
     216:	e2 0f       	add	r30, r18
     218:	f3 1f       	adc	r31, r19
     21a:	40 83       	st	Z, r20
     21c:	ea e1       	ldi	r30, 0x1A	; 26
     21e:	f0 e0       	ldi	r31, 0x00	; 0
     220:	ec 0f       	add	r30, r28
     222:	fd 1f       	adc	r31, r29
     224:	e2 0f       	add	r30, r18
     226:	f3 1f       	adc	r31, r19
     228:	83 e0       	ldi	r24, 0x03	; 3
     22a:	80 83       	st	Z, r24
     22c:	2f 5f       	subi	r18, 0xFF	; 255
     22e:	3f 4f       	sbci	r19, 0xFF	; 255
     230:	15 c0       	rjmp	.+42     	; 0x25c <filllocationarrays+0x198>
     232:	81 30       	cpi	r24, 0x01	; 1
     234:	99 f4       	brne	.+38     	; 0x25c <filllocationarrays+0x198>
     236:	e1 e0       	ldi	r30, 0x01	; 1
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	ec 0f       	add	r30, r28
     23c:	fd 1f       	adc	r31, r29
     23e:	e2 0f       	add	r30, r18
     240:	f3 1f       	adc	r31, r19
     242:	8b ef       	ldi	r24, 0xFB	; 251
     244:	84 0f       	add	r24, r20
     246:	80 83       	st	Z, r24
     248:	ea e1       	ldi	r30, 0x1A	; 26
     24a:	f0 e0       	ldi	r31, 0x00	; 0
     24c:	ec 0f       	add	r30, r28
     24e:	fd 1f       	adc	r31, r29
     250:	e2 0f       	add	r30, r18
     252:	f3 1f       	adc	r31, r19
     254:	84 e0       	ldi	r24, 0x04	; 4
     256:	80 83       	st	Z, r24
     258:	2f 5f       	subi	r18, 0xFF	; 255
     25a:	3f 4f       	sbci	r19, 0xFF	; 255
     25c:	4f 5f       	subi	r20, 0xFF	; 255
     25e:	5f 4f       	sbci	r21, 0xFF	; 255
     260:	48 30       	cpi	r20, 0x08	; 8
     262:	51 05       	cpc	r21, r1
     264:	0c f4       	brge	.+2      	; 0x268 <filllocationarrays+0x1a4>
     266:	a9 cf       	rjmp	.-174    	; 0x1ba <filllocationarrays+0xf6>
     268:	40 e0       	ldi	r20, 0x00	; 0
     26a:	50 e0       	ldi	r21, 0x00	; 0
     26c:	3b c0       	rjmp	.+118    	; 0x2e4 <filllocationarrays+0x220>
     26e:	5f 96       	adiw	r26, 0x1f	; 31
     270:	8c 91       	ld	r24, X
     272:	5f 97       	sbiw	r26, 0x1f	; 31
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	04 2e       	mov	r0, r20
     278:	02 c0       	rjmp	.+4      	; 0x27e <filllocationarrays+0x1ba>
     27a:	95 95       	asr	r25
     27c:	87 95       	ror	r24
     27e:	0a 94       	dec	r0
     280:	e2 f7       	brpl	.-8      	; 0x27a <filllocationarrays+0x1b6>
     282:	81 70       	andi	r24, 0x01	; 1
     284:	43 30       	cpi	r20, 0x03	; 3
     286:	51 05       	cpc	r21, r1
     288:	b4 f4       	brge	.+44     	; 0x2b6 <filllocationarrays+0x1f2>
     28a:	81 30       	cpi	r24, 0x01	; 1
     28c:	49 f5       	brne	.+82     	; 0x2e0 <filllocationarrays+0x21c>
     28e:	e1 e0       	ldi	r30, 0x01	; 1
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	ec 0f       	add	r30, r28
     294:	fd 1f       	adc	r31, r29
     296:	e2 0f       	add	r30, r18
     298:	f3 1f       	adc	r31, r19
     29a:	83 e0       	ldi	r24, 0x03	; 3
     29c:	84 0f       	add	r24, r20
     29e:	80 83       	st	Z, r24
     2a0:	ea e1       	ldi	r30, 0x1A	; 26
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	ec 0f       	add	r30, r28
     2a6:	fd 1f       	adc	r31, r29
     2a8:	e2 0f       	add	r30, r18
     2aa:	f3 1f       	adc	r31, r19
     2ac:	84 e0       	ldi	r24, 0x04	; 4
     2ae:	80 83       	st	Z, r24
     2b0:	2f 5f       	subi	r18, 0xFF	; 255
     2b2:	3f 4f       	sbci	r19, 0xFF	; 255
     2b4:	15 c0       	rjmp	.+42     	; 0x2e0 <filllocationarrays+0x21c>
     2b6:	81 30       	cpi	r24, 0x01	; 1
     2b8:	99 f4       	brne	.+38     	; 0x2e0 <filllocationarrays+0x21c>
     2ba:	e1 e0       	ldi	r30, 0x01	; 1
     2bc:	f0 e0       	ldi	r31, 0x00	; 0
     2be:	ec 0f       	add	r30, r28
     2c0:	fd 1f       	adc	r31, r29
     2c2:	e2 0f       	add	r30, r18
     2c4:	f3 1f       	adc	r31, r19
     2c6:	8e ef       	ldi	r24, 0xFE	; 254
     2c8:	84 0f       	add	r24, r20
     2ca:	80 83       	st	Z, r24
     2cc:	ea e1       	ldi	r30, 0x1A	; 26
     2ce:	f0 e0       	ldi	r31, 0x00	; 0
     2d0:	ec 0f       	add	r30, r28
     2d2:	fd 1f       	adc	r31, r29
     2d4:	e2 0f       	add	r30, r18
     2d6:	f3 1f       	adc	r31, r19
     2d8:	85 e0       	ldi	r24, 0x05	; 5
     2da:	80 83       	st	Z, r24
     2dc:	2f 5f       	subi	r18, 0xFF	; 255
     2de:	3f 4f       	sbci	r19, 0xFF	; 255
     2e0:	4f 5f       	subi	r20, 0xFF	; 255
     2e2:	5f 4f       	sbci	r21, 0xFF	; 255
     2e4:	48 30       	cpi	r20, 0x08	; 8
     2e6:	51 05       	cpc	r21, r1
     2e8:	14 f2       	brlt	.-124    	; 0x26e <filllocationarrays+0x1aa>
     2ea:	20 e0       	ldi	r18, 0x00	; 0
     2ec:	30 e0       	ldi	r19, 0x00	; 0
     2ee:	19 c0       	rjmp	.+50     	; 0x322 <filllocationarrays+0x25e>
     2f0:	e1 e0       	ldi	r30, 0x01	; 1
     2f2:	f0 e0       	ldi	r31, 0x00	; 0
     2f4:	ec 0f       	add	r30, r28
     2f6:	fd 1f       	adc	r31, r29
     2f8:	e2 0f       	add	r30, r18
     2fa:	f3 1f       	adc	r31, r19
     2fc:	40 81       	ld	r20, Z
     2fe:	cd 01       	movw	r24, r26
     300:	82 0f       	add	r24, r18
     302:	93 1f       	adc	r25, r19
     304:	fc 01       	movw	r30, r24
     306:	ee 5a       	subi	r30, 0xAE	; 174
     308:	ff 4f       	sbci	r31, 0xFF	; 255
     30a:	40 83       	st	Z, r20
     30c:	ea e1       	ldi	r30, 0x1A	; 26
     30e:	f0 e0       	ldi	r31, 0x00	; 0
     310:	ec 0f       	add	r30, r28
     312:	fd 1f       	adc	r31, r29
     314:	e2 0f       	add	r30, r18
     316:	f3 1f       	adc	r31, r19
     318:	40 81       	ld	r20, Z
     31a:	fc 01       	movw	r30, r24
     31c:	41 af       	std	Z+57, r20	; 0x39
     31e:	2f 5f       	subi	r18, 0xFF	; 255
     320:	3f 4f       	sbci	r19, 0xFF	; 255
     322:	29 31       	cpi	r18, 0x19	; 25
     324:	31 05       	cpc	r19, r1
     326:	24 f3       	brlt	.-56     	; 0x2f0 <filllocationarrays+0x22c>
     328:	e2 96       	adiw	r28, 0x32	; 50
     32a:	0f b6       	in	r0, 0x3f	; 63
     32c:	f8 94       	cli
     32e:	de bf       	out	0x3e, r29	; 62
     330:	0f be       	out	0x3f, r0	; 63
     332:	cd bf       	out	0x3d, r28	; 61
     334:	df 91       	pop	r29
     336:	cf 91       	pop	r28
     338:	08 95       	ret

0000033a <sendACK>:
     33a:	cf 93       	push	r28
     33c:	df 93       	push	r29
     33e:	00 d0       	rcall	.+0      	; 0x340 <sendACK+0x6>
     340:	1f 92       	push	r1
     342:	cd b7       	in	r28, 0x3d	; 61
     344:	de b7       	in	r29, 0x3e	; 62
     346:	88 e0       	ldi	r24, 0x08	; 8
     348:	89 83       	std	Y+1, r24	; 0x01
     34a:	8f ef       	ldi	r24, 0xFF	; 255
     34c:	8a 83       	std	Y+2, r24	; 0x02
     34e:	85 e6       	ldi	r24, 0x65	; 101
     350:	8b 83       	std	Y+3, r24	; 0x03
     352:	64 e0       	ldi	r22, 0x04	; 4
     354:	ce 01       	movw	r24, r28
     356:	01 96       	adiw	r24, 0x01	; 1
     358:	0e 94 16 15 	call	0x2a2c	; 0x2a2c <serial_send_blocking>
     35c:	0f 90       	pop	r0
     35e:	0f 90       	pop	r0
     360:	0f 90       	pop	r0
     362:	df 91       	pop	r29
     364:	cf 91       	pop	r28
     366:	08 95       	ret

00000368 <Update>:
     368:	cf 92       	push	r12
     36a:	df 92       	push	r13
     36c:	ef 92       	push	r14
     36e:	ff 92       	push	r15
     370:	1f 93       	push	r17
     372:	cf 93       	push	r28
     374:	df 93       	push	r29
     376:	ec 01       	movw	r28, r24
     378:	0e 94 c3 13 	call	0x2786	; 0x2786 <serial_receive_buffer_full>
     37c:	81 30       	cpi	r24, 0x01	; 1
     37e:	09 f0       	breq	.+2      	; 0x382 <Update+0x1a>
     380:	5c c0       	rjmp	.+184    	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
     382:	8b 8d       	ldd	r24, Y+27	; 0x1b
     384:	88 30       	cpi	r24, 0x08	; 8
     386:	09 f0       	breq	.+2      	; 0x38a <Update+0x22>
     388:	5a c0       	rjmp	.+180    	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
     38a:	e8 81       	ld	r30, Y
     38c:	f0 e0       	ldi	r31, 0x00	; 0
     38e:	31 97       	sbiw	r30, 0x01	; 1
     390:	ec 0f       	add	r30, r28
     392:	fd 1f       	adc	r31, r29
     394:	83 8d       	ldd	r24, Z+27	; 0x1b
     396:	85 36       	cpi	r24, 0x65	; 101
     398:	09 f0       	breq	.+2      	; 0x39c <Update+0x34>
     39a:	53 c0       	rjmp	.+166    	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
     39c:	ce 01       	movw	r24, r28
     39e:	0e 94 9d 01 	call	0x33a	; 0x33a <sendACK>
     3a2:	0e 94 40 12 	call	0x2480	; 0x2480 <clear>
     3a6:	68 a1       	ldd	r22, Y+32	; 0x20
     3a8:	70 e0       	ldi	r23, 0x00	; 0
     3aa:	80 e0       	ldi	r24, 0x00	; 0
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	0e 94 a4 12 	call	0x2548	; 0x2548 <print_long>
     3b2:	88 a1       	ldd	r24, Y+32	; 0x20
     3b4:	8e 3f       	cpi	r24, 0xFE	; 254
     3b6:	19 f0       	breq	.+6      	; 0x3be <Update+0x56>
     3b8:	8b a1       	ldd	r24, Y+35	; 0x23
     3ba:	8e 3f       	cpi	r24, 0xFE	; 254
     3bc:	29 f4       	brne	.+10     	; 0x3c8 <Update+0x60>
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	fe 01       	movw	r30, r28
     3c2:	e5 59       	subi	r30, 0x95	; 149
     3c4:	ff 4f       	sbci	r31, 0xFF	; 255
     3c6:	80 83       	st	Z, r24
     3c8:	8b a1       	ldd	r24, Y+35	; 0x23
     3ca:	8a 3f       	cpi	r24, 0xFA	; 250
     3cc:	21 f4       	brne	.+8      	; 0x3d6 <Update+0x6e>
     3ce:	fe 01       	movw	r30, r28
     3d0:	e5 59       	subi	r30, 0x95	; 149
     3d2:	ff 4f       	sbci	r31, 0xFF	; 255
     3d4:	10 82       	st	Z, r1
     3d6:	85 3f       	cpi	r24, 0xF5	; 245
     3d8:	29 f4       	brne	.+10     	; 0x3e4 <Update+0x7c>
     3da:	92 e0       	ldi	r25, 0x02	; 2
     3dc:	fe 01       	movw	r30, r28
     3de:	e5 59       	subi	r30, 0x95	; 149
     3e0:	ff 4f       	sbci	r31, 0xFF	; 255
     3e2:	90 83       	st	Z, r25
     3e4:	80 3f       	cpi	r24, 0xF0	; 240
     3e6:	a9 f4       	brne	.+42     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
     3e8:	83 e0       	ldi	r24, 0x03	; 3
     3ea:	fe 01       	movw	r30, r28
     3ec:	e5 59       	subi	r30, 0x95	; 149
     3ee:	ff 4f       	sbci	r31, 0xFF	; 255
     3f0:	80 83       	st	Z, r24
     3f2:	80 e0       	ldi	r24, 0x00	; 0
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	0a c0       	rjmp	.+20     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
     3f8:	fc 01       	movw	r30, r24
     3fa:	39 96       	adiw	r30, 0x09	; 9
     3fc:	ec 0f       	add	r30, r28
     3fe:	fd 1f       	adc	r31, r29
     400:	23 8d       	ldd	r18, Z+27	; 0x1b
     402:	fe 01       	movw	r30, r28
     404:	e8 0f       	add	r30, r24
     406:	f9 1f       	adc	r31, r25
     408:	25 ab       	std	Z+53, r18	; 0x35
     40a:	01 96       	adiw	r24, 0x01	; 1
     40c:	84 30       	cpi	r24, 0x04	; 4
     40e:	91 05       	cpc	r25, r1
     410:	9c f3       	brlt	.-26     	; 0x3f8 <Update+0x90>
     412:	fe 01       	movw	r30, r28
     414:	e2 59       	subi	r30, 0x92	; 146
     416:	ff 4f       	sbci	r31, 0xFF	; 255
     418:	80 81       	ld	r24, Z
     41a:	8f 3f       	cpi	r24, 0xFF	; 255
     41c:	a1 f4       	brne	.+40     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     41e:	31 96       	adiw	r30, 0x01	; 1
     420:	80 81       	ld	r24, Z
     422:	8f 3f       	cpi	r24, 0xFF	; 255
     424:	91 f4       	brne	.+36     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     426:	ce 01       	movw	r24, r28
     428:	0e 94 62 00 	call	0xc4	; 0xc4 <filllocationarrays>
     42c:	81 e0       	ldi	r24, 0x01	; 1
     42e:	fe 01       	movw	r30, r28
     430:	e0 59       	subi	r30, 0x90	; 144
     432:	ff 4f       	sbci	r31, 0xFF	; 255
     434:	80 83       	st	Z, r24
     436:	11 e0       	ldi	r17, 0x01	; 1
     438:	09 c0       	rjmp	.+18     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     43a:	10 e0       	ldi	r17, 0x00	; 0
     43c:	07 c0       	rjmp	.+14     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     43e:	10 e0       	ldi	r17, 0x00	; 0
     440:	05 c0       	rjmp	.+10     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     442:	10 e0       	ldi	r17, 0x00	; 0
     444:	03 c0       	rjmp	.+6      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     446:	11 e0       	ldi	r17, 0x01	; 1
     448:	01 c0       	rjmp	.+2      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     44a:	11 e0       	ldi	r17, 0x01	; 1
     44c:	c0 90 01 02 	lds	r12, 0x0201	; 0x800201 <timesincelastsend.2211>
     450:	d0 90 02 02 	lds	r13, 0x0202	; 0x800202 <timesincelastsend.2211+0x1>
     454:	e0 90 03 02 	lds	r14, 0x0203	; 0x800203 <timesincelastsend.2211+0x2>
     458:	f0 90 04 02 	lds	r15, 0x0204	; 0x800204 <timesincelastsend.2211+0x3>
     45c:	82 e3       	ldi	r24, 0x32	; 50
     45e:	c8 0e       	add	r12, r24
     460:	d1 1c       	adc	r13, r1
     462:	e1 1c       	adc	r14, r1
     464:	f1 1c       	adc	r15, r1
     466:	0e 94 be 15 	call	0x2b7c	; 0x2b7c <get_ms>
     46a:	6c 15       	cp	r22, r12
     46c:	7d 05       	cpc	r23, r13
     46e:	8e 05       	cpc	r24, r14
     470:	9f 05       	cpc	r25, r15
     472:	c8 f1       	brcs	.+114    	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
     474:	0e 94 be 15 	call	0x2b7c	; 0x2b7c <get_ms>
     478:	60 93 01 02 	sts	0x0201, r22	; 0x800201 <timesincelastsend.2211>
     47c:	70 93 02 02 	sts	0x0202, r23	; 0x800202 <timesincelastsend.2211+0x1>
     480:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <timesincelastsend.2211+0x2>
     484:	90 93 04 02 	sts	0x0204, r25	; 0x800204 <timesincelastsend.2211+0x3>
     488:	80 e0       	ldi	r24, 0x00	; 0
     48a:	05 c0       	rjmp	.+10     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
     48c:	fe 01       	movw	r30, r28
     48e:	e8 0f       	add	r30, r24
     490:	f1 1d       	adc	r31, r1
     492:	81 83       	std	Z+1, r24	; 0x01
     494:	8f 5f       	subi	r24, 0xFF	; 255
     496:	68 81       	ld	r22, Y
     498:	86 17       	cp	r24, r22
     49a:	c0 f3       	brcs	.-16     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
     49c:	88 e0       	ldi	r24, 0x08	; 8
     49e:	89 83       	std	Y+1, r24	; 0x01
     4a0:	fe 01       	movw	r30, r28
     4a2:	e4 59       	subi	r30, 0x94	; 148
     4a4:	ff 4f       	sbci	r31, 0xFF	; 255
     4a6:	80 81       	ld	r24, Z
     4a8:	8a 83       	std	Y+2, r24	; 0x02
     4aa:	31 96       	adiw	r30, 0x01	; 1
     4ac:	80 81       	ld	r24, Z
     4ae:	8b 83       	std	Y+3, r24	; 0x03
     4b0:	31 96       	adiw	r30, 0x01	; 1
     4b2:	80 81       	ld	r24, Z
     4b4:	8c 83       	std	Y+4, r24	; 0x04
     4b6:	31 96       	adiw	r30, 0x01	; 1
     4b8:	80 81       	ld	r24, Z
     4ba:	8d 83       	std	Y+5, r24	; 0x05
     4bc:	34 97       	sbiw	r30, 0x04	; 4
     4be:	80 81       	ld	r24, Z
     4c0:	8e 83       	std	Y+6, r24	; 0x06
     4c2:	e6 2f       	mov	r30, r22
     4c4:	f0 e0       	ldi	r31, 0x00	; 0
     4c6:	31 97       	sbiw	r30, 0x01	; 1
     4c8:	ec 0f       	add	r30, r28
     4ca:	fd 1f       	adc	r31, r29
     4cc:	85 e6       	ldi	r24, 0x65	; 101
     4ce:	81 83       	std	Z+1, r24	; 0x01
     4d0:	ce 01       	movw	r24, r28
     4d2:	01 96       	adiw	r24, 0x01	; 1
     4d4:	0e 94 d1 14 	call	0x29a2	; 0x29a2 <serial_send>
     4d8:	11 30       	cpi	r17, 0x01	; 1
     4da:	29 f4       	brne	.+10     	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
     4dc:	68 81       	ld	r22, Y
     4de:	ce 01       	movw	r24, r28
     4e0:	4b 96       	adiw	r24, 0x1b	; 27
     4e2:	0e 94 4a 14 	call	0x2894	; 0x2894 <serial_receive>
     4e6:	df 91       	pop	r29
     4e8:	cf 91       	pop	r28
     4ea:	1f 91       	pop	r17
     4ec:	ff 90       	pop	r15
     4ee:	ef 90       	pop	r14
     4f0:	df 90       	pop	r13
     4f2:	cf 90       	pop	r12
     4f4:	08 95       	ret

000004f6 <fillarrays>:
     4f6:	cf 93       	push	r28
     4f8:	df 93       	push	r29
     4fa:	cd b7       	in	r28, 0x3d	; 61
     4fc:	de b7       	in	r29, 0x3e	; 62
     4fe:	60 97       	sbiw	r28, 0x10	; 16
     500:	0f b6       	in	r0, 0x3f	; 63
     502:	f8 94       	cli
     504:	de bf       	out	0x3e, r29	; 62
     506:	0f be       	out	0x3f, r0	; 63
     508:	cd bf       	out	0x3d, r28	; 61
     50a:	ac 01       	movw	r20, r24
     50c:	88 e0       	ldi	r24, 0x08	; 8
     50e:	e8 e2       	ldi	r30, 0x28	; 40
     510:	f1 e0       	ldi	r31, 0x01	; 1
     512:	de 01       	movw	r26, r28
     514:	11 96       	adiw	r26, 0x01	; 1
     516:	01 90       	ld	r0, Z+
     518:	0d 92       	st	X+, r0
     51a:	8a 95       	dec	r24
     51c:	e1 f7       	brne	.-8      	; 0x516 <fillarrays+0x20>
     51e:	88 e0       	ldi	r24, 0x08	; 8
     520:	e0 e3       	ldi	r30, 0x30	; 48
     522:	f1 e0       	ldi	r31, 0x01	; 1
     524:	de 01       	movw	r26, r28
     526:	19 96       	adiw	r26, 0x09	; 9
     528:	01 90       	ld	r0, Z+
     52a:	0d 92       	st	X+, r0
     52c:	8a 95       	dec	r24
     52e:	e1 f7       	brne	.-8      	; 0x528 <fillarrays+0x32>
     530:	20 e0       	ldi	r18, 0x00	; 0
     532:	30 e0       	ldi	r19, 0x00	; 0
     534:	19 c0       	rjmp	.+50     	; 0x568 <fillarrays+0x72>
     536:	e1 e0       	ldi	r30, 0x01	; 1
     538:	f0 e0       	ldi	r31, 0x00	; 0
     53a:	ec 0f       	add	r30, r28
     53c:	fd 1f       	adc	r31, r29
     53e:	e2 0f       	add	r30, r18
     540:	f3 1f       	adc	r31, r19
     542:	90 81       	ld	r25, Z
     544:	da 01       	movw	r26, r20
     546:	a2 0f       	add	r26, r18
     548:	b3 1f       	adc	r27, r19
     54a:	fd 01       	movw	r30, r26
     54c:	ee 5a       	subi	r30, 0xAE	; 174
     54e:	ff 4f       	sbci	r31, 0xFF	; 255
     550:	90 83       	st	Z, r25
     552:	e9 e0       	ldi	r30, 0x09	; 9
     554:	f0 e0       	ldi	r31, 0x00	; 0
     556:	ec 0f       	add	r30, r28
     558:	fd 1f       	adc	r31, r29
     55a:	e2 0f       	add	r30, r18
     55c:	f3 1f       	adc	r31, r19
     55e:	90 81       	ld	r25, Z
     560:	d9 96       	adiw	r26, 0x39	; 57
     562:	9c 93       	st	X, r25
     564:	2f 5f       	subi	r18, 0xFF	; 255
     566:	3f 4f       	sbci	r19, 0xFF	; 255
     568:	28 30       	cpi	r18, 0x08	; 8
     56a:	31 05       	cpc	r19, r1
     56c:	24 f3       	brlt	.-56     	; 0x536 <fillarrays+0x40>
     56e:	60 96       	adiw	r28, 0x10	; 16
     570:	0f b6       	in	r0, 0x3f	; 63
     572:	f8 94       	cli
     574:	de bf       	out	0x3e, r29	; 62
     576:	0f be       	out	0x3f, r0	; 63
     578:	cd bf       	out	0x3d, r28	; 61
     57a:	df 91       	pop	r29
     57c:	cf 91       	pop	r28
     57e:	08 95       	ret

00000580 <Communications_INIT>:
     580:	cf 93       	push	r28
     582:	df 93       	push	r29
     584:	ec 01       	movw	r28, r24
     586:	8a e1       	ldi	r24, 0x1A	; 26
     588:	88 83       	st	Y, r24
     58a:	60 e8       	ldi	r22, 0x80	; 128
     58c:	75 e2       	ldi	r23, 0x25	; 37
     58e:	80 e0       	ldi	r24, 0x00	; 0
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	0e 94 a1 14 	call	0x2942	; 0x2942 <serial_set_baud_rate>
     596:	68 81       	ld	r22, Y
     598:	ce 01       	movw	r24, r28
     59a:	4b 96       	adiw	r24, 0x1b	; 27
     59c:	0e 94 4a 14 	call	0x2894	; 0x2894 <serial_receive>
     5a0:	fe 01       	movw	r30, r28
     5a2:	ef 58       	subi	r30, 0x8F	; 143
     5a4:	ff 4f       	sbci	r31, 0xFF	; 255
     5a6:	84 eb       	ldi	r24, 0xB4	; 180
     5a8:	91 e0       	ldi	r25, 0x01	; 1
     5aa:	91 83       	std	Z+1, r25	; 0x01
     5ac:	80 83       	st	Z, r24
     5ae:	36 97       	sbiw	r30, 0x06	; 6
     5b0:	10 82       	st	Z, r1
     5b2:	31 96       	adiw	r30, 0x01	; 1
     5b4:	87 e3       	ldi	r24, 0x37	; 55
     5b6:	80 83       	st	Z, r24
     5b8:	31 96       	adiw	r30, 0x01	; 1
     5ba:	84 e1       	ldi	r24, 0x14	; 20
     5bc:	80 83       	st	Z, r24
     5be:	31 96       	adiw	r30, 0x01	; 1
     5c0:	84 e0       	ldi	r24, 0x04	; 4
     5c2:	80 83       	st	Z, r24
     5c4:	31 96       	adiw	r30, 0x01	; 1
     5c6:	85 e0       	ldi	r24, 0x05	; 5
     5c8:	80 83       	st	Z, r24
     5ca:	ce 01       	movw	r24, r28
     5cc:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <fillarrays>
     5d0:	df 91       	pop	r29
     5d2:	cf 91       	pop	r28
     5d4:	08 95       	ret

000005d6 <batteryPercentage>:
     5d6:	cf 92       	push	r12
     5d8:	df 92       	push	r13
     5da:	ef 92       	push	r14
     5dc:	ff 92       	push	r15
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     5de:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <read_battery_millivolts_3pi>
     5e2:	bc 01       	movw	r22, r24
     5e4:	80 e0       	ldi	r24, 0x00	; 0
     5e6:	90 e0       	ldi	r25, 0x00	; 0
     5e8:	0e 94 42 0c 	call	0x1884	; 0x1884 <__floatunsisf>
     5ec:	6b 01       	movw	r12, r22
     5ee:	7c 01       	movw	r14, r24
     5f0:	9b 01       	movw	r18, r22
     5f2:	ac 01       	movw	r20, r24
     5f4:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__mulsf3>
     5f8:	9b 01       	movw	r18, r22
     5fa:	ac 01       	movw	r20, r24
     5fc:	c7 01       	movw	r24, r14
     5fe:	b6 01       	movw	r22, r12
     600:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__mulsf3>
     604:	2c e0       	ldi	r18, 0x0C	; 12
     606:	39 eb       	ldi	r19, 0xB9	; 185
     608:	4d e2       	ldi	r20, 0x2D	; 45
     60a:	50 e3       	ldi	r21, 0x30	; 48
     60c:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__mulsf3>
     610:	ff 90       	pop	r15
     612:	ef 90       	pop	r14
     614:	df 90       	pop	r13
     616:	cf 90       	pop	r12
     618:	08 95       	ret

0000061a <updateDisplay>:
     61a:	ef 92       	push	r14
     61c:	ff 92       	push	r15
     61e:	0f 93       	push	r16
     620:	1f 93       	push	r17
     622:	cf 93       	push	r28
     624:	7c 01       	movw	r14, r24
     626:	8b 01       	movw	r16, r22
     628:	c4 2f       	mov	r28, r20
     62a:	0e 94 40 12 	call	0x2480	; 0x2480 <clear>
     62e:	60 e0       	ldi	r22, 0x00	; 0
     630:	80 e0       	ldi	r24, 0x00	; 0
     632:	0e 94 c7 12 	call	0x258e	; 0x258e <lcd_goto_xy>
     636:	85 e5       	ldi	r24, 0x55	; 85
     638:	91 e0       	ldi	r25, 0x01	; 1
     63a:	0e 94 4f 12 	call	0x249e	; 0x249e <print>
     63e:	b7 01       	movw	r22, r14
     640:	ff 0c       	add	r15, r15
     642:	88 0b       	sbc	r24, r24
     644:	99 0b       	sbc	r25, r25
     646:	0e 94 a4 12 	call	0x2548	; 0x2548 <print_long>
     64a:	8a e5       	ldi	r24, 0x5A	; 90
     64c:	91 e0       	ldi	r25, 0x01	; 1
     64e:	0e 94 4f 12 	call	0x249e	; 0x249e <print>
     652:	61 e0       	ldi	r22, 0x01	; 1
     654:	80 e0       	ldi	r24, 0x00	; 0
     656:	0e 94 c7 12 	call	0x258e	; 0x258e <lcd_goto_xy>
     65a:	8c e5       	ldi	r24, 0x5C	; 92
     65c:	91 e0       	ldi	r25, 0x01	; 1
     65e:	0e 94 4f 12 	call	0x249e	; 0x249e <print>
     662:	b8 01       	movw	r22, r16
     664:	11 0f       	add	r17, r17
     666:	88 0b       	sbc	r24, r24
     668:	99 0b       	sbc	r25, r25
     66a:	0e 94 a4 12 	call	0x2548	; 0x2548 <print_long>
     66e:	8a e5       	ldi	r24, 0x5A	; 90
     670:	91 e0       	ldi	r25, 0x01	; 1
     672:	0e 94 4f 12 	call	0x249e	; 0x249e <print>
     676:	c2 30       	cpi	r28, 0x02	; 2
     678:	a9 f0       	breq	.+42     	; 0x6a4 <updateDisplay+0x8a>
     67a:	28 f4       	brcc	.+10     	; 0x686 <updateDisplay+0x6c>
     67c:	cc 23       	and	r28, r28
     67e:	41 f0       	breq	.+16     	; 0x690 <updateDisplay+0x76>
     680:	c1 30       	cpi	r28, 0x01	; 1
     682:	59 f0       	breq	.+22     	; 0x69a <updateDisplay+0x80>
     684:	1d c0       	rjmp	.+58     	; 0x6c0 <updateDisplay+0xa6>
     686:	c3 30       	cpi	r28, 0x03	; 3
     688:	91 f0       	breq	.+36     	; 0x6ae <updateDisplay+0x94>
     68a:	c4 30       	cpi	r28, 0x04	; 4
     68c:	a9 f0       	breq	.+42     	; 0x6b8 <updateDisplay+0x9e>
     68e:	18 c0       	rjmp	.+48     	; 0x6c0 <updateDisplay+0xa6>
     690:	81 e6       	ldi	r24, 0x61	; 97
     692:	91 e0       	ldi	r25, 0x01	; 1
     694:	0e 94 4f 12 	call	0x249e	; 0x249e <print>
     698:	13 c0       	rjmp	.+38     	; 0x6c0 <updateDisplay+0xa6>
     69a:	83 e6       	ldi	r24, 0x63	; 99
     69c:	91 e0       	ldi	r25, 0x01	; 1
     69e:	0e 94 4f 12 	call	0x249e	; 0x249e <print>
     6a2:	0e c0       	rjmp	.+28     	; 0x6c0 <updateDisplay+0xa6>
     6a4:	85 e6       	ldi	r24, 0x65	; 101
     6a6:	91 e0       	ldi	r25, 0x01	; 1
     6a8:	0e 94 4f 12 	call	0x249e	; 0x249e <print>
     6ac:	09 c0       	rjmp	.+18     	; 0x6c0 <updateDisplay+0xa6>
     6ae:	87 e6       	ldi	r24, 0x67	; 103
     6b0:	91 e0       	ldi	r25, 0x01	; 1
     6b2:	0e 94 4f 12 	call	0x249e	; 0x249e <print>
     6b6:	04 c0       	rjmp	.+8      	; 0x6c0 <updateDisplay+0xa6>
     6b8:	89 e6       	ldi	r24, 0x69	; 105
     6ba:	91 e0       	ldi	r25, 0x01	; 1
     6bc:	0e 94 4f 12 	call	0x249e	; 0x249e <print>
     6c0:	cf 91       	pop	r28
     6c2:	1f 91       	pop	r17
     6c4:	0f 91       	pop	r16
     6c6:	ff 90       	pop	r15
     6c8:	ef 90       	pop	r14
     6ca:	08 95       	ret

000006cc <whileBarcode>:
	whileBarcode();
	updateDisplay(0, batteryPercentage(), mazeSolver);
	parcours('B', communications);
	whileLineEnd();
	motorControl('L');
}
     6cc:	03 c0       	rjmp	.+6      	; 0x6d4 <whileBarcode+0x8>
     6ce:	83 e5       	ldi	r24, 0x53	; 83
     6d0:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
     6d4:	0e 94 65 04 	call	0x8ca	; 0x8ca <lineType>
     6d8:	82 30       	cpi	r24, 0x02	; 2
     6da:	c9 f7       	brne	.-14     	; 0x6ce <whileBarcode+0x2>
     6dc:	08 95       	ret

000006de <whileLineEnd>:
     6de:	03 c0       	rjmp	.+6      	; 0x6e6 <whileLineEnd+0x8>
     6e0:	83 e5       	ldi	r24, 0x53	; 83
     6e2:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
     6e6:	0e 94 65 04 	call	0x8ca	; 0x8ca <lineType>
     6ea:	81 30       	cpi	r24, 0x01	; 1
     6ec:	c9 f7       	brne	.-14     	; 0x6e0 <whileLineEnd+0x2>
     6ee:	08 95       	ret

000006f0 <pickOrder>:

void pickOrder(Communications *communications)
{
     6f0:	cf 93       	push	r28
     6f2:	df 93       	push	r29
     6f4:	ec 01       	movw	r28, r24
	whileBarcode();
     6f6:	0e 94 66 03 	call	0x6cc	; 0x6cc <whileBarcode>
	parcours('T', communications);
     6fa:	be 01       	movw	r22, r28
     6fc:	84 e5       	ldi	r24, 0x54	; 84
     6fe:	0e 94 e7 07 	call	0xfce	; 0xfce <parcours>
	warehouse(orderPicking, communications); 	
     702:	be 01       	movw	r22, r28
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <warehouse>
	parcours('B', communications);
     70a:	be 01       	movw	r22, r28
     70c:	82 e4       	ldi	r24, 0x42	; 66
     70e:	0e 94 e7 07 	call	0xfce	; 0xfce <parcours>
	whileLineEnd();
     712:	0e 94 6f 03 	call	0x6de	; 0x6de <whileLineEnd>
	motorControl('L');
     716:	8c e4       	ldi	r24, 0x4C	; 76
     718:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
}
     71c:	df 91       	pop	r29
     71e:	cf 91       	pop	r28
     720:	08 95       	ret

00000722 <main>:

int main()
{
     722:	cf 93       	push	r28
     724:	df 93       	push	r29
     726:	cd b7       	in	r28, 0x3d	; 61
     728:	de b7       	in	r29, 0x3e	; 62
     72a:	c3 57       	subi	r28, 0x73	; 115
     72c:	d1 09       	sbc	r29, r1
     72e:	0f b6       	in	r0, 0x3f	; 63
     730:	f8 94       	cli
     732:	de bf       	out	0x3e, r29	; 62
     734:	0f be       	out	0x3f, r0	; 63
     736:	cd bf       	out	0x3d, r28	; 61
	play_from_program_space(welcome);
     738:	8a e7       	ldi	r24, 0x7A	; 122
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	0e 94 34 11 	call	0x2268	; 0x2268 <play_from_program_space>
	
	Communications communications;
	Communications_INIT(&communications);
     740:	ce 01       	movw	r24, r28
     742:	01 96       	adiw	r24, 0x01	; 1
     744:	0e 94 c0 02 	call	0x580	; 0x580 <Communications_INIT>
	
	initialize(&communications);
     748:	ce 01       	movw	r24, r28
     74a:	01 96       	adiw	r24, 0x01	; 1
     74c:	0e 94 ef 03 	call	0x7de	; 0x7de <initialize>
		
	while(1) 
	{
		//updateDisplay(0, batteryPercentage(), homingMode);
		communications.Update(&communications);
     750:	e4 96       	adiw	r28, 0x34	; 52
     752:	ee ad       	ldd	r30, Y+62	; 0x3e
     754:	ff ad       	ldd	r31, Y+63	; 0x3f
     756:	e4 97       	sbiw	r28, 0x34	; 52
     758:	ce 01       	movw	r24, r28
     75a:	01 96       	adiw	r24, 0x01	; 1
     75c:	09 95       	icall
		
		communications.locationx = -1;
     75e:	8f ef       	ldi	r24, 0xFF	; 255
     760:	e0 96       	adiw	r28, 0x30	; 48
     762:	8f af       	std	Y+63, r24	; 0x3f
     764:	e0 97       	sbiw	r28, 0x30	; 48
		communications.locationy = -1;
     766:	e1 96       	adiw	r28, 0x31	; 49
     768:	8f af       	std	Y+63, r24	; 0x3f
     76a:	e1 97       	sbiw	r28, 0x31	; 49
		
		lcd_goto_xy(0, 0);
     76c:	60 e0       	ldi	r22, 0x00	; 0
     76e:	80 e0       	ldi	r24, 0x00	; 0
     770:	0e 94 c7 12 	call	0x258e	; 0x258e <lcd_goto_xy>
		print_long(communications.EmergencyStop);
     774:	ad 96       	adiw	r28, 0x2d	; 45
     776:	6f ad       	ldd	r22, Y+63	; 0x3f
     778:	ad 97       	sbiw	r28, 0x2d	; 45
     77a:	70 e0       	ldi	r23, 0x00	; 0
     77c:	80 e0       	ldi	r24, 0x00	; 0
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	0e 94 a4 12 	call	0x2548	; 0x2548 <print_long>
		
		switch (communications.EmergencyStop) {
     784:	ad 96       	adiw	r28, 0x2d	; 45
     786:	8f ad       	ldd	r24, Y+63	; 0x3f
     788:	ad 97       	sbiw	r28, 0x2d	; 45
     78a:	82 30       	cpi	r24, 0x02	; 2
     78c:	11 f1       	breq	.+68     	; 0x7d2 <main+0xb0>
     78e:	18 f0       	brcs	.+6      	; 0x796 <main+0x74>
     790:	83 30       	cpi	r24, 0x03	; 3
     792:	11 f1       	breq	.+68     	; 0x7d8 <main+0xb6>
     794:	dd cf       	rjmp	.-70     	; 0x750 <main+0x2e>
				}
				else*/
// 				print_long(communications.locationx);
// 				print_long(communications.locationy);
				
				if (communications.flag==1)
     796:	e2 96       	adiw	r28, 0x32	; 50
     798:	8f ad       	ldd	r24, Y+63	; 0x3f
     79a:	e2 97       	sbiw	r28, 0x32	; 50
     79c:	81 30       	cpi	r24, 0x01	; 1
     79e:	c1 f6       	brne	.-80     	; 0x750 <main+0x2e>
				{
					communications.flag=0;
     7a0:	e2 96       	adiw	r28, 0x32	; 50
     7a2:	1f ae       	std	Y+63, r1	; 0x3f
     7a4:	e2 97       	sbiw	r28, 0x32	; 50
					
					play_from_program_space(welcome);
     7a6:	8a e7       	ldi	r24, 0x7A	; 122
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	0e 94 34 11 	call	0x2268	; 0x2268 <play_from_program_space>
					communications.locationx = 0;
     7ae:	e0 96       	adiw	r28, 0x30	; 48
     7b0:	1f ae       	std	Y+63, r1	; 0x3f
     7b2:	e0 97       	sbiw	r28, 0x30	; 48
					communications.locationy = 0;
     7b4:	e1 96       	adiw	r28, 0x31	; 49
     7b6:	1f ae       	std	Y+63, r1	; 0x3f
     7b8:	e1 97       	sbiw	r28, 0x31	; 49
					pickOrder(&communications);
     7ba:	ce 01       	movw	r24, r28
     7bc:	01 96       	adiw	r24, 0x01	; 1
     7be:	0e 94 78 03 	call	0x6f0	; 0x6f0 <pickOrder>
					communications.locationx = -1;
     7c2:	8f ef       	ldi	r24, 0xFF	; 255
     7c4:	e0 96       	adiw	r28, 0x30	; 48
     7c6:	8f af       	std	Y+63, r24	; 0x3f
     7c8:	e0 97       	sbiw	r28, 0x30	; 48
					communications.locationy = -1;
     7ca:	e1 96       	adiw	r28, 0x31	; 49
     7cc:	8f af       	std	Y+63, r24	; 0x3f
     7ce:	e1 97       	sbiw	r28, 0x31	; 49
     7d0:	bf cf       	rjmp	.-130    	; 0x750 <main+0x2e>
				}
				break;
				delay(100);
			case 2:
				Spin();
     7d2:	0e 94 ee 06 	call	0xddc	; 0xddc <Spin>
				break;
     7d6:	bc cf       	rjmp	.-136    	; 0x750 <main+0x2e>
			case 3:
				manualControl();
     7d8:	0e 94 a7 06 	call	0xd4e	; 0xd4e <manualControl>
				break;
     7dc:	b9 cf       	rjmp	.-142    	; 0x750 <main+0x2e>

000007de <initialize>:
void inch(){
	set_motors(50,50);
	delay(200);
	set_motors(0,0);
}
void println(int x){
     7de:	cf 93       	push	r28
     7e0:	df 93       	push	r29
     7e2:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <myComs+0x1>
     7e6:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <myComs>
     7ea:	80 ed       	ldi	r24, 0xD0	; 208
     7ec:	97 e0       	ldi	r25, 0x07	; 7
     7ee:	0e 94 1b 16 	call	0x2c36	; 0x2c36 <pololu_3pi_init>
     7f2:	0d c0       	rjmp	.+26     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
     7f4:	0e 94 40 12 	call	0x2480	; 0x2480 <clear>
     7f8:	60 e0       	ldi	r22, 0x00	; 0
     7fa:	80 e0       	ldi	r24, 0x00	; 0
     7fc:	0e 94 c7 12 	call	0x258e	; 0x258e <lcd_goto_xy>
     800:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <read_battery_millivolts_3pi>
     804:	bc 01       	movw	r22, r24
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	0e 94 a4 12 	call	0x2548	; 0x2548 <print_long>
     80e:	80 e1       	ldi	r24, 0x10	; 16
     810:	0e 94 c0 13 	call	0x2780	; 0x2780 <button_is_pressed>
     814:	88 23       	and	r24, r24
     816:	71 f3       	breq	.-36     	; 0x7f4 <initialize+0x16>
     818:	80 e1       	ldi	r24, 0x10	; 16
     81a:	0e 94 ac 13 	call	0x2758	; 0x2758 <wait_for_button_release>
     81e:	88 ee       	ldi	r24, 0xE8	; 232
     820:	93 e0       	ldi	r25, 0x03	; 3
     822:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <delay_ms>
     826:	c0 e0       	ldi	r28, 0x00	; 0
     828:	d0 e0       	ldi	r29, 0x00	; 0
     82a:	19 c0       	rjmp	.+50     	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     82c:	ce 01       	movw	r24, r28
     82e:	44 97       	sbiw	r24, 0x14	; 20
     830:	88 97       	sbiw	r24, 0x28	; 40
     832:	38 f0       	brcs	.+14     	; 0x842 <__DATA_REGION_LENGTH__+0x42>
     834:	68 ed       	ldi	r22, 0xD8	; 216
     836:	7f ef       	ldi	r23, 0xFF	; 255
     838:	88 e2       	ldi	r24, 0x28	; 40
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
     840:	06 c0       	rjmp	.+12     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
     842:	68 e2       	ldi	r22, 0x28	; 40
     844:	70 e0       	ldi	r23, 0x00	; 0
     846:	88 ed       	ldi	r24, 0xD8	; 216
     848:	9f ef       	ldi	r25, 0xFF	; 255
     84a:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
     84e:	81 e0       	ldi	r24, 0x01	; 1
     850:	0e 94 d8 15 	call	0x2bb0	; 0x2bb0 <calibrate_line_sensors>
     854:	84 e1       	ldi	r24, 0x14	; 20
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <delay_ms>
     85c:	21 96       	adiw	r28, 0x01	; 1
     85e:	c0 35       	cpi	r28, 0x50	; 80
     860:	d1 05       	cpc	r29, r1
     862:	20 f3       	brcs	.-56     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
     864:	60 e0       	ldi	r22, 0x00	; 0
     866:	70 e0       	ldi	r23, 0x00	; 0
     868:	80 e0       	ldi	r24, 0x00	; 0
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
     870:	80 e1       	ldi	r24, 0x10	; 16
     872:	0e 94 c0 13 	call	0x2780	; 0x2780 <button_is_pressed>
     876:	88 23       	and	r24, r24
     878:	d9 f3       	breq	.-10     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
     87a:	80 e1       	ldi	r24, 0x10	; 16
     87c:	0e 94 ac 13 	call	0x2758	; 0x2758 <wait_for_button_release>
     880:	0e 94 40 12 	call	0x2480	; 0x2480 <clear>
     884:	df 91       	pop	r29
     886:	cf 91       	pop	r28
     888:	08 95       	ret

0000088a <inch>:
     88a:	62 e3       	ldi	r22, 0x32	; 50
     88c:	70 e0       	ldi	r23, 0x00	; 0
     88e:	82 e3       	ldi	r24, 0x32	; 50
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
     896:	88 ec       	ldi	r24, 0xC8	; 200
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <delay_ms>
     89e:	60 e0       	ldi	r22, 0x00	; 0
     8a0:	70 e0       	ldi	r23, 0x00	; 0
     8a2:	80 e0       	ldi	r24, 0x00	; 0
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
     8aa:	08 95       	ret

000008ac <wait>:
	lcd_goto_xy(0,0);
	print_long(x);	*/
}

void wait(){
	set_motors(0,0);
     8ac:	60 e0       	ldi	r22, 0x00	; 0
     8ae:	70 e0       	ldi	r23, 0x00	; 0
     8b0:	80 e0       	ldi	r24, 0x00	; 0
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
						
	while(!button_is_pressed(BUTTON_B)){}
     8b8:	80 e1       	ldi	r24, 0x10	; 16
     8ba:	0e 94 c0 13 	call	0x2780	; 0x2780 <button_is_pressed>
     8be:	88 23       	and	r24, r24
     8c0:	d9 f3       	breq	.-10     	; 0x8b8 <wait+0xc>
	wait_for_button_release(BUTTON_B);
     8c2:	80 e1       	ldi	r24, 0x10	; 16
     8c4:	0e 94 ac 13 	call	0x2758	; 0x2758 <wait_for_button_release>
     8c8:	08 95       	ret

000008ca <lineType>:
}

char lineType(){																																	// function that returns the type of junction it detects
	while(1){																																		// >= 500 = black line		<=500 = white
		read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     8ca:	61 e0       	ldi	r22, 0x01	; 1
     8cc:	85 e1       	ldi	r24, 0x15	; 21
     8ce:	92 e0       	ldi	r25, 0x02	; 2
     8d0:	0e 94 de 15 	call	0x2bbc	; 0x2bbc <read_line_sensors_calibrated>

			if (sensors[0] >= Refrence_value && sensors[4] >= Refrence_value){																									//Checks if its a X junction or a T junction
     8d4:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors>
     8d8:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x1>
     8dc:	80 39       	cpi	r24, 0x90	; 144
     8de:	21 e0       	ldi	r18, 0x01	; 1
     8e0:	92 07       	cpc	r25, r18
     8e2:	08 f4       	brcc	.+2      	; 0x8e6 <lineType+0x1c>
     8e4:	67 c0       	rjmp	.+206    	; 0x9b4 <__stack+0xb5>
     8e6:	20 91 1d 02 	lds	r18, 0x021D	; 0x80021d <sensors+0x8>
     8ea:	30 91 1e 02 	lds	r19, 0x021E	; 0x80021e <sensors+0x9>
     8ee:	20 39       	cpi	r18, 0x90	; 144
     8f0:	31 40       	sbci	r19, 0x01	; 1
     8f2:	08 f4       	brcc	.+2      	; 0x8f6 <lineType+0x2c>
     8f4:	5f c0       	rjmp	.+190    	; 0x9b4 <__stack+0xb5>
					inch();
     8f6:	0e 94 45 04 	call	0x88a	; 0x88a <inch>
					read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     8fa:	61 e0       	ldi	r22, 0x01	; 1
     8fc:	85 e1       	ldi	r24, 0x15	; 21
     8fe:	92 e0       	ldi	r25, 0x02	; 2
     900:	0e 94 de 15 	call	0x2bbc	; 0x2bbc <read_line_sensors_calibrated>
					if (sensors[0] >=Refrence_value && sensors[1] >=Refrence_value && sensors[3] >= Refrence_value && sensors[4] >=Refrence_value){
     904:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors>
     908:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x1>
     90c:	80 39       	cpi	r24, 0x90	; 144
     90e:	91 40       	sbci	r25, 0x01	; 1
     910:	b8 f1       	brcs	.+110    	; 0x980 <__stack+0x81>
     912:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x2>
     916:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x3>
     91a:	80 39       	cpi	r24, 0x90	; 144
     91c:	91 40       	sbci	r25, 0x01	; 1
     91e:	80 f1       	brcs	.+96     	; 0x980 <__stack+0x81>
     920:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <sensors+0x6>
     924:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <sensors+0x7>
     928:	80 39       	cpi	r24, 0x90	; 144
     92a:	91 40       	sbci	r25, 0x01	; 1
     92c:	48 f1       	brcs	.+82     	; 0x980 <__stack+0x81>
     92e:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sensors+0x8>
     932:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sensors+0x9>
     936:	80 39       	cpi	r24, 0x90	; 144
     938:	91 40       	sbci	r25, 0x01	; 1
     93a:	10 f1       	brcs	.+68     	; 0x980 <__stack+0x81>
						clear();
     93c:	0e 94 40 12 	call	0x2480	; 0x2480 <clear>
						while(sensors[0] >= 400 || sensors[4] >=400)
     940:	0b c0       	rjmp	.+22     	; 0x958 <__stack+0x59>
						{
							read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     942:	61 e0       	ldi	r22, 0x01	; 1
     944:	85 e1       	ldi	r24, 0x15	; 21
     946:	92 e0       	ldi	r25, 0x02	; 2
     948:	0e 94 de 15 	call	0x2bbc	; 0x2bbc <read_line_sensors_calibrated>
							set_motors(75,75);
     94c:	6b e4       	ldi	r22, 0x4B	; 75
     94e:	70 e0       	ldi	r23, 0x00	; 0
     950:	8b e4       	ldi	r24, 0x4B	; 75
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
			if (sensors[0] >= Refrence_value && sensors[4] >= Refrence_value){																									//Checks if its a X junction or a T junction
					inch();
					read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
					if (sensors[0] >=Refrence_value && sensors[1] >=Refrence_value && sensors[3] >= Refrence_value && sensors[4] >=Refrence_value){
						clear();
						while(sensors[0] >= 400 || sensors[4] >=400)
     958:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors>
     95c:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x1>
     960:	80 39       	cpi	r24, 0x90	; 144
     962:	91 40       	sbci	r25, 0x01	; 1
     964:	70 f7       	brcc	.-36     	; 0x942 <__stack+0x43>
     966:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sensors+0x8>
     96a:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sensors+0x9>
     96e:	80 39       	cpi	r24, 0x90	; 144
     970:	91 40       	sbci	r25, 0x01	; 1
     972:	38 f7       	brcc	.-50     	; 0x942 <__stack+0x43>
						{
							read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
							set_motors(75,75);
						}
						inch();
     974:	0e 94 45 04 	call	0x88a	; 0x88a <inch>
						wait();
     978:	0e 94 56 04 	call	0x8ac	; 0x8ac <wait>
						return Barcode;
     97c:	82 e0       	ldi	r24, 0x02	; 2
     97e:	08 95       	ret
					}
					else if (sensors[2] >=Refrence_value || (sensors[1] >= Refrence_value || sensors[3] >= Refrence_value)){
     980:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     984:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     988:	80 39       	cpi	r24, 0x90	; 144
     98a:	91 40       	sbci	r25, 0x01	; 1
     98c:	08 f0       	brcs	.+2      	; 0x990 <__stack+0x91>
     98e:	79 c0       	rjmp	.+242    	; 0xa82 <__stack+0x183>
     990:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x2>
     994:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x3>
     998:	80 39       	cpi	r24, 0x90	; 144
     99a:	91 40       	sbci	r25, 0x01	; 1
     99c:	08 f0       	brcs	.+2      	; 0x9a0 <__stack+0xa1>
     99e:	73 c0       	rjmp	.+230    	; 0xa86 <__stack+0x187>
     9a0:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <sensors+0x6>
     9a4:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <sensors+0x7>
     9a8:	80 39       	cpi	r24, 0x90	; 144
     9aa:	91 40       	sbci	r25, 0x01	; 1
     9ac:	08 f4       	brcc	.+2      	; 0x9b0 <__stack+0xb1>
     9ae:	6d c0       	rjmp	.+218    	; 0xa8a <__stack+0x18b>
						println(X_junction);
						return X_junction;
     9b0:	88 e0       	ldi	r24, 0x08	; 8
     9b2:	08 95       	ret
						println(T_junction);
						return T_junction;
					}
				}
							
		else if (sensors[0] >=Refrence_value && sensors[1] >= Refrence_value && sensors[4] <= Refrence_value ){																							//Checks if its a left corner or a straight with left corner
     9b4:	80 39       	cpi	r24, 0x90	; 144
     9b6:	61 e0       	ldi	r22, 0x01	; 1
     9b8:	96 07       	cpc	r25, r22
     9ba:	38 f1       	brcs	.+78     	; 0xa0a <__stack+0x10b>
     9bc:	20 91 17 02 	lds	r18, 0x0217	; 0x800217 <sensors+0x2>
     9c0:	30 91 18 02 	lds	r19, 0x0218	; 0x800218 <sensors+0x3>
     9c4:	20 39       	cpi	r18, 0x90	; 144
     9c6:	31 40       	sbci	r19, 0x01	; 1
     9c8:	00 f1       	brcs	.+64     	; 0xa0a <__stack+0x10b>
     9ca:	20 91 1d 02 	lds	r18, 0x021D	; 0x80021d <sensors+0x8>
     9ce:	30 91 1e 02 	lds	r19, 0x021E	; 0x80021e <sensors+0x9>
     9d2:	21 39       	cpi	r18, 0x91	; 145
     9d4:	31 40       	sbci	r19, 0x01	; 1
     9d6:	c8 f4       	brcc	.+50     	; 0xa0a <__stack+0x10b>
			inch();
     9d8:	0e 94 45 04 	call	0x88a	; 0x88a <inch>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     9dc:	61 e0       	ldi	r22, 0x01	; 1
     9de:	85 e1       	ldi	r24, 0x15	; 21
     9e0:	92 e0       	ldi	r25, 0x02	; 2
     9e2:	0e 94 de 15 	call	0x2bbc	; 0x2bbc <read_line_sensors_calibrated>
			
			if (sensors[2] >= Refrence_value || sensors[3] >=Refrence_value){
     9e6:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     9ea:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     9ee:	80 39       	cpi	r24, 0x90	; 144
     9f0:	91 40       	sbci	r25, 0x01	; 1
     9f2:	08 f0       	brcs	.+2      	; 0x9f6 <__stack+0xf7>
     9f4:	4c c0       	rjmp	.+152    	; 0xa8e <__stack+0x18f>
     9f6:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <sensors+0x6>
     9fa:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <sensors+0x7>
     9fe:	80 39       	cpi	r24, 0x90	; 144
     a00:	91 40       	sbci	r25, 0x01	; 1
     a02:	08 f4       	brcc	.+2      	; 0xa06 <__stack+0x107>
     a04:	46 c0       	rjmp	.+140    	; 0xa92 <__stack+0x193>
				println(Straight_left_junction);
				return Straight_left_junction;
     a06:	86 e0       	ldi	r24, 0x06	; 6
     a08:	08 95       	ret
				return Left_corner;
			}
		}
		
		
		else if (sensors[3] >=Refrence_value && sensors[4] >= Refrence_value && sensors[0] <= Refrence_value){																							//Checks if its a right corner or a straight with right corner
     a0a:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <sensors+0x6>
     a0e:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <sensors+0x7>
     a12:	20 39       	cpi	r18, 0x90	; 144
     a14:	61 e0       	ldi	r22, 0x01	; 1
     a16:	36 07       	cpc	r19, r22
     a18:	08 f1       	brcs	.+66     	; 0xa5c <__stack+0x15d>
     a1a:	40 91 1d 02 	lds	r20, 0x021D	; 0x80021d <sensors+0x8>
     a1e:	50 91 1e 02 	lds	r21, 0x021E	; 0x80021e <sensors+0x9>
     a22:	40 39       	cpi	r20, 0x90	; 144
     a24:	51 40       	sbci	r21, 0x01	; 1
     a26:	d0 f0       	brcs	.+52     	; 0xa5c <__stack+0x15d>
     a28:	81 39       	cpi	r24, 0x91	; 145
     a2a:	91 40       	sbci	r25, 0x01	; 1
     a2c:	b8 f4       	brcc	.+46     	; 0xa5c <__stack+0x15d>
			inch();
     a2e:	0e 94 45 04 	call	0x88a	; 0x88a <inch>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     a32:	61 e0       	ldi	r22, 0x01	; 1
     a34:	85 e1       	ldi	r24, 0x15	; 21
     a36:	92 e0       	ldi	r25, 0x02	; 2
     a38:	0e 94 de 15 	call	0x2bbc	; 0x2bbc <read_line_sensors_calibrated>
			
			if (sensors[2] >= Refrence_value || sensors[1] >=Refrence_value){
     a3c:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     a40:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     a44:	80 39       	cpi	r24, 0x90	; 144
     a46:	91 40       	sbci	r25, 0x01	; 1
     a48:	30 f5       	brcc	.+76     	; 0xa96 <__stack+0x197>
     a4a:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x2>
     a4e:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x3>
     a52:	80 39       	cpi	r24, 0x90	; 144
     a54:	91 40       	sbci	r25, 0x01	; 1
     a56:	08 f1       	brcs	.+66     	; 0xa9a <__stack+0x19b>
				println(Straight_right_junction);
				return Straight_right_junction;
     a58:	85 e0       	ldi	r24, 0x05	; 5
     a5a:	08 95       	ret
				println(Straight_left_junction);
				return Right_corner;
			}
		}
		
				else if(sensors[2] <= End_Line_Value && sensors[1] <=End_Line_Value && sensors[3] <=End_Line_Value){
     a5c:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     a60:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     a64:	89 3c       	cpi	r24, 0xC9	; 201
     a66:	91 05       	cpc	r25, r1
     a68:	d0 f4       	brcc	.+52     	; 0xa9e <__stack+0x19f>
     a6a:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x2>
     a6e:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x3>
     a72:	89 3c       	cpi	r24, 0xC9	; 201
     a74:	91 05       	cpc	r25, r1
     a76:	a8 f4       	brcc	.+42     	; 0xaa2 <__stack+0x1a3>
     a78:	29 3c       	cpi	r18, 0xC9	; 201
     a7a:	31 05       	cpc	r19, r1
     a7c:	a0 f0       	brcs	.+40     	; 0xaa6 <__stack+0x1a7>
			}
			else{
				println(Straight);
				return Straight;
			}				*/																					// check if its straight without any corners
			return Straight;
     a7e:	80 e0       	ldi	r24, 0x00	; 0
     a80:	08 95       	ret
						wait();
						return Barcode;
					}
					else if (sensors[2] >=Refrence_value || (sensors[1] >= Refrence_value || sensors[3] >= Refrence_value)){
						println(X_junction);
						return X_junction;
     a82:	88 e0       	ldi	r24, 0x08	; 8
     a84:	08 95       	ret
     a86:	88 e0       	ldi	r24, 0x08	; 8
     a88:	08 95       	ret
					}
					else {
						println(T_junction);
						return T_junction;
     a8a:	87 e0       	ldi	r24, 0x07	; 7
     a8c:	08 95       	ret
			inch();
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= Refrence_value || sensors[3] >=Refrence_value){
				println(Straight_left_junction);
				return Straight_left_junction;
     a8e:	86 e0       	ldi	r24, 0x06	; 6
     a90:	08 95       	ret
			}
			else{
				println(Left_corner);
				return Left_corner;
     a92:	83 e0       	ldi	r24, 0x03	; 3
     a94:	08 95       	ret
			inch();
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= Refrence_value || sensors[1] >=Refrence_value){
				println(Straight_right_junction);
				return Straight_right_junction;
     a96:	85 e0       	ldi	r24, 0x05	; 5
     a98:	08 95       	ret
			}
			else{
				println(Straight_left_junction);
				return Right_corner;
     a9a:	84 e0       	ldi	r24, 0x04	; 4
     a9c:	08 95       	ret
			}
			else{
				println(Straight);
				return Straight;
			}				*/																					// check if its straight without any corners
			return Straight;
     a9e:	80 e0       	ldi	r24, 0x00	; 0
     aa0:	08 95       	ret
     aa2:	80 e0       	ldi	r24, 0x00	; 0
     aa4:	08 95       	ret
			}
		}
		
				else if(sensors[2] <= End_Line_Value && sensors[1] <=End_Line_Value && sensors[3] <=End_Line_Value){
					println(Line_end);																													// check if the line ends
					return Line_end;
     aa6:	81 e0       	ldi	r24, 0x01	; 1
			return Straight;
		}
		
	
	}
}
     aa8:	08 95       	ret

00000aaa <motorControl>:

void motorControl(char x){													// function that controlls the motor movement and the turns
     aaa:	8f 92       	push	r8
     aac:	9f 92       	push	r9
     aae:	af 92       	push	r10
     ab0:	bf 92       	push	r11
     ab2:	cf 92       	push	r12
     ab4:	df 92       	push	r13
     ab6:	ef 92       	push	r14
     ab8:	ff 92       	push	r15
     aba:	0f 93       	push	r16
     abc:	1f 93       	push	r17
     abe:	cf 93       	push	r28
     ac0:	df 93       	push	r29
     ac2:	c8 2f       	mov	r28, r24

		


	myComs->Update(myComs);
     ac4:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <myComs>
     ac8:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <myComs+0x1>
     acc:	fc 01       	movw	r30, r24
     ace:	ef 58       	subi	r30, 0x8F	; 143
     ad0:	ff 4f       	sbci	r31, 0xFF	; 255
     ad2:	01 90       	ld	r0, Z+
     ad4:	f0 81       	ld	r31, Z
     ad6:	e0 2d       	mov	r30, r0
     ad8:	09 95       	icall
	unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     ada:	61 e0       	ldi	r22, 0x01	; 1
     adc:	85 e1       	ldi	r24, 0x15	; 21
     ade:	92 e0       	ldi	r25, 0x02	; 2
     ae0:	0e 94 e5 15 	call	0x2bca	; 0x2bca <read_line>
     ae4:	8c 01       	movw	r16, r24
	read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     ae6:	61 e0       	ldi	r22, 0x01	; 1
     ae8:	85 e1       	ldi	r24, 0x15	; 21
     aea:	92 e0       	ldi	r25, 0x02	; 2
     aec:	0e 94 de 15 	call	0x2bbc	; 0x2bbc <read_line_sensors_calibrated>

	while (analog_read(5) <= 200) {
     af0:	06 c0       	rjmp	.+12     	; 0xafe <motorControl+0x54>
		set_motors(0, 0);
     af2:	60 e0       	ldi	r22, 0x00	; 0
     af4:	70 e0       	ldi	r23, 0x00	; 0
     af6:	80 e0       	ldi	r24, 0x00	; 0
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>

	myComs->Update(myComs);
	unsigned int position = read_line(sensors,IR_EMITTERS_ON);
	read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);

	while (analog_read(5) <= 200) {
     afe:	85 e0       	ldi	r24, 0x05	; 5
     b00:	0e 94 82 0d 	call	0x1b04	; 0x1b04 <analog_read>
     b04:	89 3c       	cpi	r24, 0xC9	; 201
     b06:	91 05       	cpc	r25, r1
     b08:	a0 f3       	brcs	.-24     	; 0xaf2 <motorControl+0x48>
		set_motors(0, 0);
	}
	
	if(myComs->EmergencyStop == 1)		{													//Emergency Brake
     b0a:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <myComs>
     b0e:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <myComs+0x1>
     b12:	e5 59       	subi	r30, 0x95	; 149
     b14:	ff 4f       	sbci	r31, 0xFF	; 255
     b16:	80 81       	ld	r24, Z
     b18:	81 30       	cpi	r24, 0x01	; 1
     b1a:	39 f4       	brne	.+14     	; 0xb2a <motorControl+0x80>
		set_motors(0,0);
     b1c:	60 e0       	ldi	r22, 0x00	; 0
     b1e:	70 e0       	ldi	r23, 0x00	; 0
     b20:	80 e0       	ldi	r24, 0x00	; 0
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
     b28:	05 c1       	rjmp	.+522    	; 0xd34 <motorControl+0x28a>
	}else if(x == 'L'){														//Turn Left
     b2a:	cc 34       	cpi	r28, 0x4C	; 76
     b2c:	39 f5       	brne	.+78     	; 0xb7c <motorControl+0xd2>
		set_motors(-turn_value,turn_value);
     b2e:	6c e3       	ldi	r22, 0x3C	; 60
     b30:	70 e0       	ldi	r23, 0x00	; 0
     b32:	84 ec       	ldi	r24, 0xC4	; 196
     b34:	9f ef       	ldi	r25, 0xFF	; 255
     b36:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
		
		while (sensors[2] >=Refrence_value)
     b3a:	05 c0       	rjmp	.+10     	; 0xb46 <motorControl+0x9c>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     b3c:	61 e0       	ldi	r22, 0x01	; 1
     b3e:	85 e1       	ldi	r24, 0x15	; 21
     b40:	92 e0       	ldi	r25, 0x02	; 2
     b42:	0e 94 de 15 	call	0x2bbc	; 0x2bbc <read_line_sensors_calibrated>
	if(myComs->EmergencyStop == 1)		{													//Emergency Brake
		set_motors(0,0);
	}else if(x == 'L'){														//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] >=Refrence_value)
     b46:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     b4a:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     b4e:	80 39       	cpi	r24, 0x90	; 144
     b50:	91 40       	sbci	r25, 0x01	; 1
     b52:	a0 f7       	brcc	.-24     	; 0xb3c <motorControl+0x92>
     b54:	05 c0       	rjmp	.+10     	; 0xb60 <motorControl+0xb6>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     b56:	61 e0       	ldi	r22, 0x01	; 1
     b58:	85 e1       	ldi	r24, 0x15	; 21
     b5a:	92 e0       	ldi	r25, 0x02	; 2
     b5c:	0e 94 de 15 	call	0x2bbc	; 0x2bbc <read_line_sensors_calibrated>
	}else if(x == 'L'){														//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] >=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
     b60:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     b64:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     b68:	81 39       	cpi	r24, 0x91	; 145
     b6a:	91 40       	sbci	r25, 0x01	; 1
     b6c:	a0 f3       	brcs	.-24     	; 0xb56 <motorControl+0xac>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		set_motors(0,0);
     b6e:	60 e0       	ldi	r22, 0x00	; 0
     b70:	70 e0       	ldi	r23, 0x00	; 0
     b72:	80 e0       	ldi	r24, 0x00	; 0
     b74:	90 e0       	ldi	r25, 0x00	; 0
     b76:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
     b7a:	dc c0       	rjmp	.+440    	; 0xd34 <motorControl+0x28a>
	}
	
	
	else if(x == 'R'){														//Turn Right
     b7c:	c2 35       	cpi	r28, 0x52	; 82
     b7e:	39 f5       	brne	.+78     	; 0xbce <motorControl+0x124>
		set_motors(turn_value,-turn_value);
     b80:	64 ec       	ldi	r22, 0xC4	; 196
     b82:	7f ef       	ldi	r23, 0xFF	; 255
     b84:	8c e3       	ldi	r24, 0x3C	; 60
     b86:	90 e0       	ldi	r25, 0x00	; 0
     b88:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
		
		while (sensors[2] >=Refrence_value)
     b8c:	05 c0       	rjmp	.+10     	; 0xb98 <motorControl+0xee>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     b8e:	61 e0       	ldi	r22, 0x01	; 1
     b90:	85 e1       	ldi	r24, 0x15	; 21
     b92:	92 e0       	ldi	r25, 0x02	; 2
     b94:	0e 94 de 15 	call	0x2bbc	; 0x2bbc <read_line_sensors_calibrated>
	
	
	else if(x == 'R'){														//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] >=Refrence_value)
     b98:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     b9c:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     ba0:	80 39       	cpi	r24, 0x90	; 144
     ba2:	91 40       	sbci	r25, 0x01	; 1
     ba4:	a0 f7       	brcc	.-24     	; 0xb8e <motorControl+0xe4>
     ba6:	05 c0       	rjmp	.+10     	; 0xbb2 <motorControl+0x108>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     ba8:	61 e0       	ldi	r22, 0x01	; 1
     baa:	85 e1       	ldi	r24, 0x15	; 21
     bac:	92 e0       	ldi	r25, 0x02	; 2
     bae:	0e 94 de 15 	call	0x2bbc	; 0x2bbc <read_line_sensors_calibrated>
	else if(x == 'R'){														//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] >=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
     bb2:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     bb6:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     bba:	81 39       	cpi	r24, 0x91	; 145
     bbc:	91 40       	sbci	r25, 0x01	; 1
     bbe:	a0 f3       	brcs	.-24     	; 0xba8 <motorControl+0xfe>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		set_motors(0,0);
     bc0:	60 e0       	ldi	r22, 0x00	; 0
     bc2:	70 e0       	ldi	r23, 0x00	; 0
     bc4:	80 e0       	ldi	r24, 0x00	; 0
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
     bcc:	b3 c0       	rjmp	.+358    	; 0xd34 <motorControl+0x28a>
	}
		
			
	else if(x == 'S'){												//drive straight and adjusts the robot so it follows the line
     bce:	c3 35       	cpi	r28, 0x53	; 83
     bd0:	09 f0       	breq	.+2      	; 0xbd4 <motorControl+0x12a>
     bd2:	66 c0       	rjmp	.+204    	; 0xca0 <motorControl+0x1f6>
		// are not interested in the individual sensor readings.
		// The "proportional" term should be 0 when we are on the line.
		int proportional = ((int)position) - 2000;
     bd4:	c8 01       	movw	r24, r16
     bd6:	80 5d       	subi	r24, 0xD0	; 208
     bd8:	97 40       	sbci	r25, 0x07	; 7

		// Compute the derivative (change) and integral (sum) of the
		// position.
		int derivative = proportional - last_proportional;
     bda:	20 91 11 02 	lds	r18, 0x0211	; 0x800211 <last_proportional>
     bde:	30 91 12 02 	lds	r19, 0x0212	; 0x800212 <last_proportional+0x1>
     be2:	ec 01       	movw	r28, r24
     be4:	c2 1b       	sub	r28, r18
     be6:	d3 0b       	sbc	r29, r19
		integral = integral + proportional;
     be8:	60 91 13 02 	lds	r22, 0x0213	; 0x800213 <integral>
     bec:	70 91 14 02 	lds	r23, 0x0214	; 0x800214 <integral+0x1>
     bf0:	fc 01       	movw	r30, r24
     bf2:	e6 0f       	add	r30, r22
     bf4:	f7 1f       	adc	r31, r23
     bf6:	f0 93 14 02 	sts	0x0214, r31	; 0x800214 <integral+0x1>
     bfa:	e0 93 13 02 	sts	0x0213, r30	; 0x800213 <integral>

		// Remember the last position.
		 last_proportional = proportional;
     bfe:	90 93 12 02 	sts	0x0212, r25	; 0x800212 <last_proportional+0x1>
     c02:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <last_proportional>
 
 
		int power_difference = proportional/10 + integral/40000 + derivative*0.50;						// derivative == stuur snelheid
     c06:	6a e0       	ldi	r22, 0x0A	; 10
     c08:	70 e0       	ldi	r23, 0x00	; 0
     c0a:	0e 94 4b 1b 	call	0x3696	; 0x3696 <__divmodhi4>
     c0e:	6b 01       	movw	r12, r22
     c10:	bf 01       	movw	r22, r30
     c12:	ff 0f       	add	r31, r31
     c14:	88 0b       	sbc	r24, r24
     c16:	99 0b       	sbc	r25, r25
     c18:	20 e4       	ldi	r18, 0x40	; 64
     c1a:	3c e9       	ldi	r19, 0x9C	; 156
     c1c:	40 e0       	ldi	r20, 0x00	; 0
     c1e:	50 e0       	ldi	r21, 0x00	; 0
     c20:	0e 94 81 1b 	call	0x3702	; 0x3702 <__divmodsi4>
     c24:	0d 2c       	mov	r0, r13
     c26:	00 0c       	add	r0, r0
     c28:	ee 08       	sbc	r14, r14
     c2a:	ff 08       	sbc	r15, r15
     c2c:	c2 0e       	add	r12, r18
     c2e:	d3 1e       	adc	r13, r19
     c30:	e4 1e       	adc	r14, r20
     c32:	f5 1e       	adc	r15, r21
     c34:	be 01       	movw	r22, r28
     c36:	dd 0f       	add	r29, r29
     c38:	88 0b       	sbc	r24, r24
     c3a:	99 0b       	sbc	r25, r25
     c3c:	0e 94 44 0c 	call	0x1888	; 0x1888 <__floatsisf>
     c40:	20 e0       	ldi	r18, 0x00	; 0
     c42:	30 e0       	ldi	r19, 0x00	; 0
     c44:	40 e0       	ldi	r20, 0x00	; 0
     c46:	5f e3       	ldi	r21, 0x3F	; 63
     c48:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__mulsf3>
     c4c:	4b 01       	movw	r8, r22
     c4e:	5c 01       	movw	r10, r24
     c50:	c7 01       	movw	r24, r14
     c52:	b6 01       	movw	r22, r12
     c54:	0e 94 44 0c 	call	0x1888	; 0x1888 <__floatsisf>
     c58:	a5 01       	movw	r20, r10
     c5a:	94 01       	movw	r18, r8
     c5c:	0e 94 2e 0b 	call	0x165c	; 0x165c <__addsf3>
     c60:	0e 94 0c 0c 	call	0x1818	; 0x1818 <__fixsfsi>
     c64:	cb 01       	movw	r24, r22

		// Compute the actual motor settings.  We never set either motor
		// to a negative value.
		const int max = 70;
		if(power_difference > max)
     c66:	67 34       	cpi	r22, 0x47	; 71
     c68:	71 05       	cpc	r23, r1
     c6a:	14 f0       	brlt	.+4      	; 0xc70 <motorControl+0x1c6>
			power_difference = max;
     c6c:	86 e4       	ldi	r24, 0x46	; 70
     c6e:	90 e0       	ldi	r25, 0x00	; 0
		if(power_difference < -max)
     c70:	8a 3b       	cpi	r24, 0xBA	; 186
     c72:	2f ef       	ldi	r18, 0xFF	; 255
     c74:	92 07       	cpc	r25, r18
     c76:	14 f4       	brge	.+4      	; 0xc7c <motorControl+0x1d2>
			power_difference = -max;
     c78:	8a eb       	ldi	r24, 0xBA	; 186
     c7a:	9f ef       	ldi	r25, 0xFF	; 255

		if(power_difference < 0)
     c7c:	99 23       	and	r25, r25
     c7e:	3c f4       	brge	.+14     	; 0xc8e <motorControl+0x1e4>
			set_motors(max+power_difference, max);
     c80:	66 e4       	ldi	r22, 0x46	; 70
     c82:	70 e0       	ldi	r23, 0x00	; 0
     c84:	8a 5b       	subi	r24, 0xBA	; 186
     c86:	9f 4f       	sbci	r25, 0xFF	; 255
     c88:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
     c8c:	53 c0       	rjmp	.+166    	; 0xd34 <motorControl+0x28a>
		else
			set_motors(max, max-power_difference);
     c8e:	66 e4       	ldi	r22, 0x46	; 70
     c90:	70 e0       	ldi	r23, 0x00	; 0
     c92:	68 1b       	sub	r22, r24
     c94:	79 0b       	sbc	r23, r25
     c96:	86 e4       	ldi	r24, 0x46	; 70
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
     c9e:	4a c0       	rjmp	.+148    	; 0xd34 <motorControl+0x28a>
		
	}
	
	
	else if(x == 'B'){														//Reverse while following the line
     ca0:	c2 34       	cpi	r28, 0x42	; 66
     ca2:	09 f5       	brne	.+66     	; 0xce6 <motorControl+0x23c>
		set_motors(-50,-50);
     ca4:	6e ec       	ldi	r22, 0xCE	; 206
     ca6:	7f ef       	ldi	r23, 0xFF	; 255
     ca8:	8e ec       	ldi	r24, 0xCE	; 206
     caa:	9f ef       	ldi	r25, 0xFF	; 255
     cac:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
		
		if (sensors[3] >=Refrence_value)
     cb0:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <sensors+0x6>
     cb4:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <sensors+0x7>
     cb8:	80 39       	cpi	r24, 0x90	; 144
     cba:	91 40       	sbci	r25, 0x01	; 1
     cbc:	30 f0       	brcs	.+12     	; 0xcca <motorControl+0x220>
			set_motors(-50,-55);
     cbe:	69 ec       	ldi	r22, 0xC9	; 201
     cc0:	7f ef       	ldi	r23, 0xFF	; 255
     cc2:	8e ec       	ldi	r24, 0xCE	; 206
     cc4:	9f ef       	ldi	r25, 0xFF	; 255
     cc6:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
		if (sensors[1] >=Refrence_value)
     cca:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x2>
     cce:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x3>
     cd2:	80 39       	cpi	r24, 0x90	; 144
     cd4:	91 40       	sbci	r25, 0x01	; 1
     cd6:	70 f1       	brcs	.+92     	; 0xd34 <motorControl+0x28a>
			set_motors(-55,-50);
     cd8:	6e ec       	ldi	r22, 0xCE	; 206
     cda:	7f ef       	ldi	r23, 0xFF	; 255
     cdc:	89 ec       	ldi	r24, 0xC9	; 201
     cde:	9f ef       	ldi	r25, 0xFF	; 255
     ce0:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
     ce4:	27 c0       	rjmp	.+78     	; 0xd34 <motorControl+0x28a>
	}
	
	
	else if(x == 'T'){														// Turn around
     ce6:	c4 35       	cpi	r28, 0x54	; 84
     ce8:	a1 f4       	brne	.+40     	; 0xd12 <motorControl+0x268>
		set_motors(-turn_value,turn_value);
     cea:	6c e3       	ldi	r22, 0x3C	; 60
     cec:	70 e0       	ldi	r23, 0x00	; 0
     cee:	84 ec       	ldi	r24, 0xC4	; 196
     cf0:	9f ef       	ldi	r25, 0xFF	; 255
     cf2:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
		
		while (sensors[2] <=Refrence_value)
     cf6:	05 c0       	rjmp	.+10     	; 0xd02 <motorControl+0x258>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     cf8:	61 e0       	ldi	r22, 0x01	; 1
     cfa:	85 e1       	ldi	r24, 0x15	; 21
     cfc:	92 e0       	ldi	r25, 0x02	; 2
     cfe:	0e 94 de 15 	call	0x2bbc	; 0x2bbc <read_line_sensors_calibrated>
	
	
	else if(x == 'T'){														// Turn around
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] <=Refrence_value)
     d02:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     d06:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     d0a:	81 39       	cpi	r24, 0x91	; 145
     d0c:	91 40       	sbci	r25, 0x01	; 1
     d0e:	a0 f3       	brcs	.-24     	; 0xcf8 <motorControl+0x24e>
     d10:	11 c0       	rjmp	.+34     	; 0xd34 <motorControl+0x28a>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'P')														//Robot stops on a slow pace
     d12:	c0 35       	cpi	r28, 0x50	; 80
     d14:	79 f4       	brne	.+30     	; 0xd34 <motorControl+0x28a>
     d16:	0a c0       	rjmp	.+20     	; 0xd2c <motorControl+0x282>
		for( int i=50;i>=0;i-=3)
		{
			set_motors(i,i);
     d18:	be 01       	movw	r22, r28
     d1a:	ce 01       	movw	r24, r28
     d1c:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     d20:	84 e0       	ldi	r24, 0x04	; 4
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <delay_ms>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'P')														//Robot stops on a slow pace
		for( int i=50;i>=0;i-=3)
     d28:	23 97       	sbiw	r28, 0x03	; 3
     d2a:	02 c0       	rjmp	.+4      	; 0xd30 <motorControl+0x286>
     d2c:	c2 e3       	ldi	r28, 0x32	; 50
     d2e:	d0 e0       	ldi	r29, 0x00	; 0
     d30:	dd 23       	and	r29, r29
     d32:	94 f7       	brge	.-28     	; 0xd18 <motorControl+0x26e>
			set_motors(i,i);
			delay(4);
		}
		
		
}
     d34:	df 91       	pop	r29
     d36:	cf 91       	pop	r28
     d38:	1f 91       	pop	r17
     d3a:	0f 91       	pop	r16
     d3c:	ff 90       	pop	r15
     d3e:	ef 90       	pop	r14
     d40:	df 90       	pop	r13
     d42:	cf 90       	pop	r12
     d44:	bf 90       	pop	r11
     d46:	af 90       	pop	r10
     d48:	9f 90       	pop	r9
     d4a:	8f 90       	pop	r8
     d4c:	08 95       	ret

00000d4e <manualControl>:




void manualControl(){
     d4e:	cf 93       	push	r28
     d50:	df 93       	push	r29
int speed = 0;

	if(myComs->Direction[0] == 1){
     d52:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <myComs>
     d56:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <myComs+0x1>
     d5a:	85 a9       	ldd	r24, Z+53	; 0x35
     d5c:	81 30       	cpi	r24, 0x01	; 1
     d5e:	49 f4       	brne	.+18     	; 0xd72 <manualControl+0x24>
		set_motors(speed,speed);
     d60:	60 e0       	ldi	r22, 0x00	; 0
     d62:	70 e0       	ldi	r23, 0x00	; 0
     d64:	80 e0       	ldi	r24, 0x00	; 0
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
		speed++;
     d6c:	c1 e0       	ldi	r28, 0x01	; 1
     d6e:	d0 e0       	ldi	r29, 0x00	; 0
     d70:	02 c0       	rjmp	.+4      	; 0xd76 <manualControl+0x28>




void manualControl(){
int speed = 0;
     d72:	c0 e0       	ldi	r28, 0x00	; 0
     d74:	d0 e0       	ldi	r29, 0x00	; 0
	if(myComs->Direction[0] == 1){
		set_motors(speed,speed);
		speed++;
	}
	
	if(myComs->Direction[1] == 1){
     d76:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <myComs>
     d7a:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <myComs+0x1>
     d7e:	86 a9       	ldd	r24, Z+54	; 0x36
     d80:	81 30       	cpi	r24, 0x01	; 1
     d82:	41 f4       	brne	.+16     	; 0xd94 <manualControl+0x46>
		set_motors(-speed,-speed);
     d84:	88 27       	eor	r24, r24
     d86:	99 27       	eor	r25, r25
     d88:	8c 1b       	sub	r24, r28
     d8a:	9d 0b       	sbc	r25, r29
     d8c:	bc 01       	movw	r22, r24
     d8e:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
		speed--;
     d92:	21 97       	sbiw	r28, 0x01	; 1
	}
	
	if(myComs->Direction[2] == 1){
     d94:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <myComs>
     d98:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <myComs+0x1>
     d9c:	87 a9       	ldd	r24, Z+55	; 0x37
     d9e:	81 30       	cpi	r24, 0x01	; 1
     da0:	49 f4       	brne	.+18     	; 0xdb4 <manualControl+0x66>
		set_motors(speed/2,speed);
     da2:	ce 01       	movw	r24, r28
     da4:	dd 23       	and	r29, r29
     da6:	0c f4       	brge	.+2      	; 0xdaa <manualControl+0x5c>
     da8:	01 96       	adiw	r24, 0x01	; 1
     daa:	be 01       	movw	r22, r28
     dac:	95 95       	asr	r25
     dae:	87 95       	ror	r24
     db0:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
	}
	
	if(myComs->Direction[3] == 1){
     db4:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <myComs>
     db8:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <myComs+0x1>
     dbc:	80 ad       	ldd	r24, Z+56	; 0x38
     dbe:	81 30       	cpi	r24, 0x01	; 1
     dc0:	51 f4       	brne	.+20     	; 0xdd6 <manualControl+0x88>
		set_motors(speed,speed/2);
     dc2:	be 01       	movw	r22, r28
     dc4:	dd 23       	and	r29, r29
     dc6:	14 f4       	brge	.+4      	; 0xdcc <manualControl+0x7e>
     dc8:	6f 5f       	subi	r22, 0xFF	; 255
     dca:	7f 4f       	sbci	r23, 0xFF	; 255
     dcc:	75 95       	asr	r23
     dce:	67 95       	ror	r22
     dd0:	ce 01       	movw	r24, r28
     dd2:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
	}
}
     dd6:	df 91       	pop	r29
     dd8:	cf 91       	pop	r28
     dda:	08 95       	ret

00000ddc <Spin>:

void Spin(){
     ddc:	cf 93       	push	r28
     dde:	df 93       	push	r29
	
	for(int i = 0;i<=255;i++){
     de0:	c0 e0       	ldi	r28, 0x00	; 0
     de2:	d0 e0       	ldi	r29, 0x00	; 0
     de4:	0c c0       	rjmp	.+24     	; 0xdfe <Spin+0x22>
		set_motors(i,0-i);
     de6:	66 27       	eor	r22, r22
     de8:	77 27       	eor	r23, r23
     dea:	6c 1b       	sub	r22, r28
     dec:	7d 0b       	sbc	r23, r29
     dee:	ce 01       	movw	r24, r28
     df0:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>
     df4:	82 e0       	ldi	r24, 0x02	; 2
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <delay_ms>
	}
}

void Spin(){
	
	for(int i = 0;i<=255;i++){
     dfc:	21 96       	adiw	r28, 0x01	; 1
     dfe:	cf 3f       	cpi	r28, 0xFF	; 255
     e00:	d1 05       	cpc	r29, r1
     e02:	89 f3       	breq	.-30     	; 0xde6 <Spin+0xa>
     e04:	84 f3       	brlt	.-32     	; 0xde6 <Spin+0xa>
     e06:	c0 e0       	ldi	r28, 0x00	; 0
     e08:	d0 e0       	ldi	r29, 0x00	; 0
     e0a:	15 c0       	rjmp	.+42     	; 0xe36 <Spin+0x5a>
		set_motors(i,0-i);
		delay(2);
	}
	int count = 0;
	while(myComs->EmergencyStop == 2){
		count++;
     e0c:	21 96       	adiw	r28, 0x01	; 1
		if(count % 10000 == 0)
     e0e:	ce 01       	movw	r24, r28
     e10:	60 e1       	ldi	r22, 0x10	; 16
     e12:	77 e2       	ldi	r23, 0x27	; 39
     e14:	0e 94 4b 1b 	call	0x3696	; 0x3696 <__divmodhi4>
     e18:	89 2b       	or	r24, r25
     e1a:	69 f4       	brne	.+26     	; 0xe36 <Spin+0x5a>
		{
			clear();
     e1c:	0e 94 40 12 	call	0x2480	; 0x2480 <clear>
			myComs->Update(myComs);
     e20:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <myComs>
     e24:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <myComs+0x1>
     e28:	fc 01       	movw	r30, r24
     e2a:	ef 58       	subi	r30, 0x8F	; 143
     e2c:	ff 4f       	sbci	r31, 0xFF	; 255
     e2e:	01 90       	ld	r0, Z+
     e30:	f0 81       	ld	r31, Z
     e32:	e0 2d       	mov	r30, r0
     e34:	09 95       	icall
	for(int i = 0;i<=255;i++){
		set_motors(i,0-i);
		delay(2);
	}
	int count = 0;
	while(myComs->EmergencyStop == 2){
     e36:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <myComs>
     e3a:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <myComs+0x1>
     e3e:	e5 59       	subi	r30, 0x95	; 149
     e40:	ff 4f       	sbci	r31, 0xFF	; 255
     e42:	80 81       	ld	r24, Z
     e44:	82 30       	cpi	r24, 0x02	; 2
     e46:	11 f3       	breq	.-60     	; 0xe0c <Spin+0x30>
		


	}
	
	set_motors(0,0);
     e48:	60 e0       	ldi	r22, 0x00	; 0
     e4a:	70 e0       	ldi	r23, 0x00	; 0
     e4c:	80 e0       	ldi	r24, 0x00	; 0
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	0e 94 7d 13 	call	0x26fa	; 0x26fa <set_motors>

	
     e54:	df 91       	pop	r29
     e56:	cf 91       	pop	r28
     e58:	08 95       	ret

00000e5a <parcoursSearch>:
			}
			motorControl(richting);
		}
	}
	return 0;
}
     e5a:	0f 93       	push	r16
     e5c:	1f 93       	push	r17
     e5e:	cf 93       	push	r28
     e60:	df 93       	push	r29
     e62:	00 d0       	rcall	.+0      	; 0xe64 <parcoursSearch+0xa>
     e64:	cd b7       	in	r28, 0x3d	; 61
     e66:	de b7       	in	r29, 0x3e	; 62
     e68:	0e 94 65 04 	call	0x8ca	; 0x8ca <lineType>
     e6c:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <situatie>
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	89 30       	cpi	r24, 0x09	; 9
     e74:	91 05       	cpc	r25, r1
     e76:	08 f0       	brcs	.+2      	; 0xe7a <parcoursSearch+0x20>
     e78:	41 c0       	rjmp	.+130    	; 0xefc <parcoursSearch+0xa2>
     e7a:	fc 01       	movw	r30, r24
     e7c:	ec 5c       	subi	r30, 0xCC	; 204
     e7e:	ff 4f       	sbci	r31, 0xFF	; 255
     e80:	0c 94 a0 1b 	jmp	0x3740	; 0x3740 <__tablejump2__>
     e84:	83 e5       	ldi	r24, 0x53	; 83
     e86:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
     e8a:	38 c0       	rjmp	.+112    	; 0xefc <parcoursSearch+0xa2>
     e8c:	8c e4       	ldi	r24, 0x4C	; 76
     e8e:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
     e92:	8c e4       	ldi	r24, 0x4C	; 76
     e94:	89 83       	std	Y+1, r24	; 0x01
     e96:	41 e0       	ldi	r20, 0x01	; 1
     e98:	50 e0       	ldi	r21, 0x00	; 0
     e9a:	be 01       	movw	r22, r28
     e9c:	6f 5f       	subi	r22, 0xFF	; 255
     e9e:	7f 4f       	sbci	r23, 0xFF	; 255
     ea0:	84 e1       	ldi	r24, 0x14	; 20
     ea2:	91 e0       	ldi	r25, 0x01	; 1
     ea4:	0e 94 20 1d 	call	0x3a40	; 0x3a40 <strncat>
     ea8:	29 c0       	rjmp	.+82     	; 0xefc <parcoursSearch+0xa2>
     eaa:	82 e5       	ldi	r24, 0x52	; 82
     eac:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
     eb0:	82 e5       	ldi	r24, 0x52	; 82
     eb2:	89 83       	std	Y+1, r24	; 0x01
     eb4:	41 e0       	ldi	r20, 0x01	; 1
     eb6:	50 e0       	ldi	r21, 0x00	; 0
     eb8:	be 01       	movw	r22, r28
     eba:	6f 5f       	subi	r22, 0xFF	; 255
     ebc:	7f 4f       	sbci	r23, 0xFF	; 255
     ebe:	84 e1       	ldi	r24, 0x14	; 20
     ec0:	91 e0       	ldi	r25, 0x01	; 1
     ec2:	0e 94 20 1d 	call	0x3a40	; 0x3a40 <strncat>
     ec6:	1a c0       	rjmp	.+52     	; 0xefc <parcoursSearch+0xa2>
     ec8:	83 e5       	ldi	r24, 0x53	; 83
     eca:	89 83       	std	Y+1, r24	; 0x01
     ecc:	41 e0       	ldi	r20, 0x01	; 1
     ece:	50 e0       	ldi	r21, 0x00	; 0
     ed0:	be 01       	movw	r22, r28
     ed2:	6f 5f       	subi	r22, 0xFF	; 255
     ed4:	7f 4f       	sbci	r23, 0xFF	; 255
     ed6:	84 e1       	ldi	r24, 0x14	; 20
     ed8:	91 e0       	ldi	r25, 0x01	; 1
     eda:	0e 94 20 1d 	call	0x3a40	; 0x3a40 <strncat>
     ede:	0e c0       	rjmp	.+28     	; 0xefc <parcoursSearch+0xa2>
     ee0:	84 e5       	ldi	r24, 0x54	; 84
     ee2:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
     ee6:	84 e5       	ldi	r24, 0x54	; 84
     ee8:	89 83       	std	Y+1, r24	; 0x01
     eea:	41 e0       	ldi	r20, 0x01	; 1
     eec:	50 e0       	ldi	r21, 0x00	; 0
     eee:	be 01       	movw	r22, r28
     ef0:	6f 5f       	subi	r22, 0xFF	; 255
     ef2:	7f 4f       	sbci	r23, 0xFF	; 255
     ef4:	84 e1       	ldi	r24, 0x14	; 20
     ef6:	91 e0       	ldi	r25, 0x01	; 1
     ef8:	0e 94 20 1d 	call	0x3a40	; 0x3a40 <strncat>
     efc:	0e 94 40 12 	call	0x2480	; 0x2480 <clear>
     f00:	60 e0       	ldi	r22, 0x00	; 0
     f02:	80 e0       	ldi	r24, 0x00	; 0
     f04:	0e 94 c7 12 	call	0x258e	; 0x258e <lcd_goto_xy>
     f08:	00 e0       	ldi	r16, 0x00	; 0
     f0a:	10 e0       	ldi	r17, 0x00	; 0
     f0c:	08 c0       	rjmp	.+16     	; 0xf1e <parcoursSearch+0xc4>
     f0e:	f8 01       	movw	r30, r16
     f10:	ec 5e       	subi	r30, 0xEC	; 236
     f12:	fe 4f       	sbci	r31, 0xFE	; 254
     f14:	80 81       	ld	r24, Z
     f16:	0e 94 d0 11 	call	0x23a0	; 0x23a0 <print_character>
     f1a:	0f 5f       	subi	r16, 0xFF	; 255
     f1c:	1f 4f       	sbci	r17, 0xFF	; 255
     f1e:	e4 e1       	ldi	r30, 0x14	; 20
     f20:	f1 e0       	ldi	r31, 0x01	; 1
     f22:	01 90       	ld	r0, Z+
     f24:	00 20       	and	r0, r0
     f26:	e9 f7       	brne	.-6      	; 0xf22 <parcoursSearch+0xc8>
     f28:	31 97       	sbiw	r30, 0x01	; 1
     f2a:	e4 51       	subi	r30, 0x14	; 20
     f2c:	f1 40       	sbci	r31, 0x01	; 1
     f2e:	e0 17       	cp	r30, r16
     f30:	f1 07       	cpc	r31, r17
     f32:	68 f7       	brcc	.-38     	; 0xf0e <parcoursSearch+0xb4>
     f34:	df 01       	movw	r26, r30
     f36:	ae 5e       	subi	r26, 0xEE	; 238
     f38:	be 4f       	sbci	r27, 0xFE	; 254
     f3a:	8c 91       	ld	r24, X
     f3c:	84 35       	cpi	r24, 0x54	; 84
     f3e:	09 f0       	breq	.+2      	; 0xf42 <parcoursSearch+0xe8>
     f40:	93 cf       	rjmp	.-218    	; 0xe68 <parcoursSearch+0xe>
     f42:	df 01       	movw	r26, r30
     f44:	af 5e       	subi	r26, 0xEF	; 239
     f46:	be 4f       	sbci	r27, 0xFE	; 254
     f48:	8c 91       	ld	r24, X
     f4a:	ed 5e       	subi	r30, 0xED	; 237
     f4c:	fe 4f       	sbci	r31, 0xFE	; 254
     f4e:	90 81       	ld	r25, Z
     f50:	8c 34       	cpi	r24, 0x4C	; 76
     f52:	29 f4       	brne	.+10     	; 0xf5e <parcoursSearch+0x104>
     f54:	9c 34       	cpi	r25, 0x4C	; 76
     f56:	19 f4       	brne	.+6      	; 0xf5e <parcoursSearch+0x104>
     f58:	83 e5       	ldi	r24, 0x53	; 83
     f5a:	8a 83       	std	Y+2, r24	; 0x02
     f5c:	1b c0       	rjmp	.+54     	; 0xf94 <parcoursSearch+0x13a>
     f5e:	83 35       	cpi	r24, 0x53	; 83
     f60:	29 f4       	brne	.+10     	; 0xf6c <parcoursSearch+0x112>
     f62:	9c 34       	cpi	r25, 0x4C	; 76
     f64:	19 f4       	brne	.+6      	; 0xf6c <parcoursSearch+0x112>
     f66:	82 e5       	ldi	r24, 0x52	; 82
     f68:	8a 83       	std	Y+2, r24	; 0x02
     f6a:	14 c0       	rjmp	.+40     	; 0xf94 <parcoursSearch+0x13a>
     f6c:	82 35       	cpi	r24, 0x52	; 82
     f6e:	29 f4       	brne	.+10     	; 0xf7a <parcoursSearch+0x120>
     f70:	9c 34       	cpi	r25, 0x4C	; 76
     f72:	19 f4       	brne	.+6      	; 0xf7a <parcoursSearch+0x120>
     f74:	84 e5       	ldi	r24, 0x54	; 84
     f76:	8a 83       	std	Y+2, r24	; 0x02
     f78:	0d c0       	rjmp	.+26     	; 0xf94 <parcoursSearch+0x13a>
     f7a:	8c 34       	cpi	r24, 0x4C	; 76
     f7c:	29 f4       	brne	.+10     	; 0xf88 <parcoursSearch+0x12e>
     f7e:	92 35       	cpi	r25, 0x52	; 82
     f80:	19 f4       	brne	.+6      	; 0xf88 <parcoursSearch+0x12e>
     f82:	84 e5       	ldi	r24, 0x54	; 84
     f84:	8a 83       	std	Y+2, r24	; 0x02
     f86:	06 c0       	rjmp	.+12     	; 0xf94 <parcoursSearch+0x13a>
     f88:	8c 34       	cpi	r24, 0x4C	; 76
     f8a:	21 f4       	brne	.+8      	; 0xf94 <parcoursSearch+0x13a>
     f8c:	93 35       	cpi	r25, 0x53	; 83
     f8e:	11 f4       	brne	.+4      	; 0xf94 <parcoursSearch+0x13a>
     f90:	82 e5       	ldi	r24, 0x52	; 82
     f92:	8a 83       	std	Y+2, r24	; 0x02
     f94:	e4 e1       	ldi	r30, 0x14	; 20
     f96:	f1 e0       	ldi	r31, 0x01	; 1
     f98:	01 90       	ld	r0, Z+
     f9a:	00 20       	and	r0, r0
     f9c:	e9 f7       	brne	.-6      	; 0xf98 <parcoursSearch+0x13e>
     f9e:	34 97       	sbiw	r30, 0x04	; 4
     fa0:	10 82       	st	Z, r1
     fa2:	41 e0       	ldi	r20, 0x01	; 1
     fa4:	50 e0       	ldi	r21, 0x00	; 0
     fa6:	be 01       	movw	r22, r28
     fa8:	6e 5f       	subi	r22, 0xFE	; 254
     faa:	7f 4f       	sbci	r23, 0xFF	; 255
     fac:	84 e1       	ldi	r24, 0x14	; 20
     fae:	91 e0       	ldi	r25, 0x01	; 1
     fb0:	0e 94 20 1d 	call	0x3a40	; 0x3a40 <strncat>
     fb4:	59 cf       	rjmp	.-334    	; 0xe68 <parcoursSearch+0xe>
     fb6:	80 e5       	ldi	r24, 0x50	; 80
     fb8:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
     fbc:	80 e0       	ldi	r24, 0x00	; 0
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	0f 90       	pop	r0
     fc2:	0f 90       	pop	r0
     fc4:	df 91       	pop	r29
     fc6:	cf 91       	pop	r28
     fc8:	1f 91       	pop	r17
     fca:	0f 91       	pop	r16
     fcc:	08 95       	ret

00000fce <parcours>:

int parcours(char way, Communications *communications) 
{
     fce:	cf 93       	push	r28
     fd0:	df 93       	push	r29
     fd2:	00 d0       	rcall	.+0      	; 0xfd4 <parcours+0x6>
     fd4:	cd b7       	in	r28, 0x3d	; 61
     fd6:	de b7       	in	r29, 0x3e	; 62
     fd8:	7a 83       	std	Y+2, r23	; 0x02
     fda:	69 83       	std	Y+1, r22	; 0x01
	updateDisplay(0, batteryPercentage(), mazeSolver);
     fdc:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <batteryPercentage>
     fe0:	0e 94 0c 0c 	call	0x1818	; 0x1818 <__fixsfsi>
     fe4:	41 e0       	ldi	r20, 0x01	; 1
     fe6:	80 e0       	ldi	r24, 0x00	; 0
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	0e 94 0d 03 	call	0x61a	; 0x61a <updateDisplay>
	if (route[0] == '_'){
     fee:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <route>
     ff2:	8f 35       	cpi	r24, 0x5F	; 95
     ff4:	61 f4       	brne	.+24     	; 0x100e <parcours+0x40>
		memset(route,0,sizeof route);
     ff6:	84 e1       	ldi	r24, 0x14	; 20
     ff8:	e4 e1       	ldi	r30, 0x14	; 20
     ffa:	f1 e0       	ldi	r31, 0x01	; 1
     ffc:	df 01       	movw	r26, r30
     ffe:	1d 92       	st	X+, r1
    1000:	8a 95       	dec	r24
    1002:	e9 f7       	brne	.-6      	; 0xffe <parcours+0x30>
		parcoursSearch(&communications);
    1004:	ce 01       	movw	r24, r28
    1006:	01 96       	adiw	r24, 0x01	; 1
    1008:	0e 94 2d 07 	call	0xe5a	; 0xe5a <parcoursSearch>
    100c:	04 c0       	rjmp	.+8      	; 0x1016 <parcours+0x48>
	} 
	else 
	{
	//	parcoursRun(way, communications);
		parcoursSearch(&communications);
    100e:	ce 01       	movw	r24, r28
    1010:	01 96       	adiw	r24, 0x01	; 1
    1012:	0e 94 2d 07 	call	0xe5a	; 0xe5a <parcoursSearch>
	} 
	return 0;
    1016:	80 e0       	ldi	r24, 0x00	; 0
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	0f 90       	pop	r0
    101c:	0f 90       	pop	r0
    101e:	df 91       	pop	r29
    1020:	cf 91       	pop	r28
    1022:	08 95       	ret

00001024 <swap>:
#include <pololu/3pi.h>
#include <avr/pgmspace.h>


void swap(char *a, char *b) {
    int temp = *a;
    1024:	fc 01       	movw	r30, r24
    1026:	20 81       	ld	r18, Z
    *a = *b;
    1028:	fb 01       	movw	r30, r22
    102a:	30 81       	ld	r19, Z
    102c:	fc 01       	movw	r30, r24
    102e:	30 83       	st	Z, r19
    *b = temp;
    1030:	fb 01       	movw	r30, r22
    1032:	20 83       	st	Z, r18
    1034:	08 95       	ret

00001036 <bubbleSort>:
}

void bubbleSort(char arr[],char orderY[], int n) {
    1036:	8f 92       	push	r8
    1038:	9f 92       	push	r9
    103a:	af 92       	push	r10
    103c:	bf 92       	push	r11
    103e:	cf 92       	push	r12
    1040:	df 92       	push	r13
    1042:	ef 92       	push	r14
    1044:	ff 92       	push	r15
    1046:	0f 93       	push	r16
    1048:	1f 93       	push	r17
    104a:	cf 93       	push	r28
    104c:	df 93       	push	r29
    104e:	8c 01       	movw	r16, r24
    1050:	5b 01       	movw	r10, r22
    1052:	6a 01       	movw	r12, r20
    for (int i = 0; i < n - 1; i++) {
    1054:	e1 2c       	mov	r14, r1
    1056:	f1 2c       	mov	r15, r1
    1058:	28 c0       	rjmp	.+80     	; 0x10aa <bubbleSort+0x74>
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
    105a:	f8 01       	movw	r30, r16
    105c:	ec 0f       	add	r30, r28
    105e:	fd 1f       	adc	r31, r29
    1060:	90 81       	ld	r25, Z
    1062:	4e 01       	movw	r8, r28
    1064:	8f ef       	ldi	r24, 0xFF	; 255
    1066:	88 1a       	sub	r8, r24
    1068:	98 0a       	sbc	r9, r24
    106a:	d8 01       	movw	r26, r16
    106c:	a8 0d       	add	r26, r8
    106e:	b9 1d       	adc	r27, r9
    1070:	8c 91       	ld	r24, X
    1072:	89 17       	cp	r24, r25
    1074:	60 f4       	brcc	.+24     	; 0x108e <bubbleSort+0x58>
                swap(&arr[j], &arr[j + 1]);
    1076:	bd 01       	movw	r22, r26
    1078:	cf 01       	movw	r24, r30
    107a:	0e 94 12 08 	call	0x1024	; 0x1024 <swap>
                swap(&orderY[j], &orderY[j + 1]);
    107e:	b5 01       	movw	r22, r10
    1080:	68 0d       	add	r22, r8
    1082:	79 1d       	adc	r23, r9
    1084:	c5 01       	movw	r24, r10
    1086:	8c 0f       	add	r24, r28
    1088:	9d 1f       	adc	r25, r29
    108a:	0e 94 12 08 	call	0x1024	; 0x1024 <swap>
    *b = temp;
}

void bubbleSort(char arr[],char orderY[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
    108e:	21 96       	adiw	r28, 0x01	; 1
    1090:	02 c0       	rjmp	.+4      	; 0x1096 <bubbleSort+0x60>
    1092:	c0 e0       	ldi	r28, 0x00	; 0
    1094:	d0 e0       	ldi	r29, 0x00	; 0
    1096:	c6 01       	movw	r24, r12
    1098:	8e 19       	sub	r24, r14
    109a:	9f 09       	sbc	r25, r15
    109c:	01 97       	sbiw	r24, 0x01	; 1
    109e:	c8 17       	cp	r28, r24
    10a0:	d9 07       	cpc	r29, r25
    10a2:	dc f2       	brlt	.-74     	; 0x105a <bubbleSort+0x24>
    *a = *b;
    *b = temp;
}

void bubbleSort(char arr[],char orderY[], int n) {
    for (int i = 0; i < n - 1; i++) {
    10a4:	8f ef       	ldi	r24, 0xFF	; 255
    10a6:	e8 1a       	sub	r14, r24
    10a8:	f8 0a       	sbc	r15, r24
    10aa:	c6 01       	movw	r24, r12
    10ac:	01 97       	sbiw	r24, 0x01	; 1
    10ae:	e8 16       	cp	r14, r24
    10b0:	f9 06       	cpc	r15, r25
    10b2:	7c f3       	brlt	.-34     	; 0x1092 <bubbleSort+0x5c>
                swap(&orderY[j], &orderY[j + 1]);
				
            }
		}
    }
}
    10b4:	df 91       	pop	r29
    10b6:	cf 91       	pop	r28
    10b8:	1f 91       	pop	r17
    10ba:	0f 91       	pop	r16
    10bc:	ff 90       	pop	r15
    10be:	ef 90       	pop	r14
    10c0:	df 90       	pop	r13
    10c2:	cf 90       	pop	r12
    10c4:	bf 90       	pop	r11
    10c6:	af 90       	pop	r10
    10c8:	9f 90       	pop	r9
    10ca:	8f 90       	pop	r8
    10cc:	08 95       	ret

000010ce <drive>:



void drive(int junctions, piRobot *robot, Communications *myCom)
{
    10ce:	cf 92       	push	r12
    10d0:	df 92       	push	r13
    10d2:	ef 92       	push	r14
    10d4:	ff 92       	push	r15
    10d6:	0f 93       	push	r16
    10d8:	1f 93       	push	r17
    10da:	cf 93       	push	r28
    10dc:	df 93       	push	r29
    10de:	6c 01       	movw	r12, r24
    10e0:	7a 01       	movw	r14, r20
	Junctions situatie;
	
	motorControl('S');
    10e2:	83 e5       	ldi	r24, 0x53	; 83
    10e4:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
	int driving = 1;
	int count = 0;
    10e8:	00 e0       	ldi	r16, 0x00	; 0
    10ea:	10 e0       	ldi	r17, 0x00	; 0
void drive(int junctions, piRobot *robot, Communications *myCom)
{
	Junctions situatie;
	
	motorControl('S');
	int driving = 1;
    10ec:	c1 e0       	ldi	r28, 0x01	; 1
    10ee:	d0 e0       	ldi	r29, 0x00	; 0
	int count = 0;
	while(driving) {
    10f0:	22 c0       	rjmp	.+68     	; 0x1136 <drive+0x68>
		situatie = lineType();
    10f2:	0e 94 65 04 	call	0x8ca	; 0x8ca <lineType>
		//clear();
		switch (situatie) {
    10f6:	81 30       	cpi	r24, 0x01	; 1
    10f8:	49 f0       	breq	.+18     	; 0x110c <drive+0x3e>
    10fa:	20 f0       	brcs	.+8      	; 0x1104 <drive+0x36>
    10fc:	83 50       	subi	r24, 0x03	; 3
    10fe:	86 30       	cpi	r24, 0x06	; 6
    1100:	d0 f4       	brcc	.+52     	; 0x1136 <drive+0x68>
    1102:	04 c0       	rjmp	.+8      	; 0x110c <drive+0x3e>
			case Barcode: // end of parcour
			//motorControl('N');
			break;
			
			case Straight:
			motorControl('S');
    1104:	83 e5       	ldi	r24, 0x53	; 83
    1106:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
			break;
    110a:	15 c0       	rjmp	.+42     	; 0x1136 <drive+0x68>
			case Left_corner:
			case T_junction:
			case Straight_left_junction:
			case Right_corner:
			case Straight_right_junction:
				count++;
    110c:	0f 5f       	subi	r16, 0xFF	; 255
    110e:	1f 4f       	sbci	r17, 0xFF	; 255
					//case 'S':
					//robot->posY--;
					//myCom->locationy = robot->posY;
					//break;
				//}
				motorControl('S');
    1110:	83 e5       	ldi	r24, 0x53	; 83
    1112:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
				if(count == junctions)
    1116:	0c 15       	cp	r16, r12
    1118:	1d 05       	cpc	r17, r13
    111a:	29 f4       	brne	.+10     	; 0x1126 <drive+0x58>
				{
					motorControl('P');
    111c:	80 e5       	ldi	r24, 0x50	; 80
    111e:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
					driving = 0;
    1122:	c0 e0       	ldi	r28, 0x00	; 0
    1124:	d0 e0       	ldi	r29, 0x00	; 0
				}
				myCom->Update(myCom);
    1126:	f7 01       	movw	r30, r14
    1128:	ef 58       	subi	r30, 0x8F	; 143
    112a:	ff 4f       	sbci	r31, 0xFF	; 255
    112c:	01 90       	ld	r0, Z+
    112e:	f0 81       	ld	r31, Z
    1130:	e0 2d       	mov	r30, r0
    1132:	c7 01       	movw	r24, r14
    1134:	09 95       	icall
	Junctions situatie;
	
	motorControl('S');
	int driving = 1;
	int count = 0;
	while(driving) {
    1136:	20 97       	sbiw	r28, 0x00	; 0
    1138:	e1 f6       	brne	.-72     	; 0x10f2 <drive+0x24>
				}
				myCom->Update(myCom);
				break;	
		}
	}
}
    113a:	df 91       	pop	r29
    113c:	cf 91       	pop	r28
    113e:	1f 91       	pop	r17
    1140:	0f 91       	pop	r16
    1142:	ff 90       	pop	r15
    1144:	ef 90       	pop	r14
    1146:	df 90       	pop	r13
    1148:	cf 90       	pop	r12
    114a:	08 95       	ret

0000114c <waitForTurn>:

void waitForTurn()
{
    114c:	cf 93       	push	r28
	Junctions line;
	line = lineType();
    114e:	0e 94 65 04 	call	0x8ca	; 0x8ca <lineType>
    1152:	c8 2f       	mov	r28, r24
    1154:	8f e0       	ldi	r24, 0x0F	; 15
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <delay_ms>
    115c:	03 c0       	rjmp	.+6      	; 0x1164 <waitForTurn+0x18>
	delay(15);//Short delay so it won't accidentally think it found the line instantly
	while(line != Straight)
	{
		line  = lineType();
    115e:	0e 94 65 04 	call	0x8ca	; 0x8ca <lineType>
    1162:	c8 2f       	mov	r28, r24
void waitForTurn()
{
	Junctions line;
	line = lineType();
	delay(15);//Short delay so it won't accidentally think it found the line instantly
	while(line != Straight)
    1164:	c1 11       	cpse	r28, r1
    1166:	fb cf       	rjmp	.-10     	; 0x115e <waitForTurn+0x12>
	{
		line  = lineType();
	}
	motorControl('N');
    1168:	8e e4       	ldi	r24, 0x4E	; 78
    116a:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
}
    116e:	cf 91       	pop	r28
    1170:	08 95       	ret

00001172 <turnRobot>:

void turnRobot(char tdirection, piRobot *myRobot)
{
    1172:	ef 92       	push	r14
    1174:	ff 92       	push	r15
    1176:	0f 93       	push	r16
    1178:	1f 93       	push	r17
    117a:	cf 93       	push	r28
    117c:	c8 2f       	mov	r28, r24
    117e:	8b 01       	movw	r16, r22
    int changing = 1;
    1180:	ee 24       	eor	r14, r14
    1182:	e3 94       	inc	r14
    1184:	f1 2c       	mov	r15, r1

    while(changing==1)
    1186:	a6 c0       	rjmp	.+332    	; 0x12d4 <turnRobot+0x162>
    {
		
        switch(myRobot->direction)
    1188:	f8 01       	movw	r30, r16
    118a:	84 81       	ldd	r24, Z+4	; 0x04
    118c:	8e 34       	cpi	r24, 0x4E	; 78
    118e:	59 f0       	breq	.+22     	; 0x11a6 <turnRobot+0x34>
    1190:	18 f4       	brcc	.+6      	; 0x1198 <turnRobot+0x26>
    1192:	85 34       	cpi	r24, 0x45	; 69
    1194:	69 f1       	breq	.+90     	; 0x11f0 <turnRobot+0x7e>
    1196:	98 c0       	rjmp	.+304    	; 0x12c8 <turnRobot+0x156>
    1198:	83 35       	cpi	r24, 0x53	; 83
    119a:	09 f4       	brne	.+2      	; 0x119e <turnRobot+0x2c>
    119c:	4e c0       	rjmp	.+156    	; 0x123a <turnRobot+0xc8>
    119e:	87 35       	cpi	r24, 0x57	; 87
    11a0:	09 f4       	brne	.+2      	; 0x11a4 <turnRobot+0x32>
    11a2:	6f c0       	rjmp	.+222    	; 0x1282 <turnRobot+0x110>
    11a4:	91 c0       	rjmp	.+290    	; 0x12c8 <turnRobot+0x156>
        {
            case 'N':
                if(tdirection == 'E')
    11a6:	c5 34       	cpi	r28, 0x45	; 69
    11a8:	49 f4       	brne	.+18     	; 0x11bc <turnRobot+0x4a>
                {
                    motorControl('R');
    11aa:	82 e5       	ldi	r24, 0x52	; 82
    11ac:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
					waitForTurn();
    11b0:	0e 94 a6 08 	call	0x114c	; 0x114c <waitForTurn>
                    myRobot->direction = 'E';
    11b4:	85 e4       	ldi	r24, 0x45	; 69
    11b6:	f8 01       	movw	r30, r16
    11b8:	84 83       	std	Z+4, r24	; 0x04
    11ba:	86 c0       	rjmp	.+268    	; 0x12c8 <turnRobot+0x156>
                }
                else if(tdirection == 'W')
    11bc:	c7 35       	cpi	r28, 0x57	; 87
    11be:	49 f4       	brne	.+18     	; 0x11d2 <turnRobot+0x60>
                {
                    motorControl('L');
    11c0:	8c e4       	ldi	r24, 0x4C	; 76
    11c2:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
					waitForTurn();
    11c6:	0e 94 a6 08 	call	0x114c	; 0x114c <waitForTurn>
                    myRobot->direction = 'W';
    11ca:	87 e5       	ldi	r24, 0x57	; 87
    11cc:	f8 01       	movw	r30, r16
    11ce:	84 83       	std	Z+4, r24	; 0x04
    11d0:	7b c0       	rjmp	.+246    	; 0x12c8 <turnRobot+0x156>
                }
                else if(tdirection == 'S')
    11d2:	c3 35       	cpi	r28, 0x53	; 83
    11d4:	09 f0       	breq	.+2      	; 0x11d8 <turnRobot+0x66>
    11d6:	78 c0       	rjmp	.+240    	; 0x12c8 <turnRobot+0x156>
                {
                    motorControl('L');motorControl('L');
    11d8:	8c e4       	ldi	r24, 0x4C	; 76
    11da:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
    11de:	8c e4       	ldi	r24, 0x4C	; 76
    11e0:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
					waitForTurn();
    11e4:	0e 94 a6 08 	call	0x114c	; 0x114c <waitForTurn>
                    myRobot->direction = 'S';
    11e8:	83 e5       	ldi	r24, 0x53	; 83
    11ea:	f8 01       	movw	r30, r16
    11ec:	84 83       	std	Z+4, r24	; 0x04
    11ee:	6c c0       	rjmp	.+216    	; 0x12c8 <turnRobot+0x156>
                }
                break;
            case 'E':
                if(tdirection == 'S')
    11f0:	c3 35       	cpi	r28, 0x53	; 83
    11f2:	49 f4       	brne	.+18     	; 0x1206 <turnRobot+0x94>
                {
                    motorControl('R');
    11f4:	82 e5       	ldi	r24, 0x52	; 82
    11f6:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
					waitForTurn();
    11fa:	0e 94 a6 08 	call	0x114c	; 0x114c <waitForTurn>
                    myRobot->direction = 'S';
    11fe:	83 e5       	ldi	r24, 0x53	; 83
    1200:	f8 01       	movw	r30, r16
    1202:	84 83       	std	Z+4, r24	; 0x04
    1204:	61 c0       	rjmp	.+194    	; 0x12c8 <turnRobot+0x156>
                }
                else if(tdirection == 'W')
    1206:	c7 35       	cpi	r28, 0x57	; 87
    1208:	49 f4       	brne	.+18     	; 0x121c <turnRobot+0xaa>
                {
                    motorControl('L');
    120a:	8c e4       	ldi	r24, 0x4C	; 76
    120c:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
					waitForTurn();
    1210:	0e 94 a6 08 	call	0x114c	; 0x114c <waitForTurn>
                    myRobot->direction = 'W';
    1214:	87 e5       	ldi	r24, 0x57	; 87
    1216:	f8 01       	movw	r30, r16
    1218:	84 83       	std	Z+4, r24	; 0x04
    121a:	56 c0       	rjmp	.+172    	; 0x12c8 <turnRobot+0x156>
                }
                else if(tdirection == 'S')
    121c:	c3 35       	cpi	r28, 0x53	; 83
    121e:	09 f0       	breq	.+2      	; 0x1222 <turnRobot+0xb0>
    1220:	53 c0       	rjmp	.+166    	; 0x12c8 <turnRobot+0x156>
                {
                    motorControl('L');motorControl('L');
    1222:	8c e4       	ldi	r24, 0x4C	; 76
    1224:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
    1228:	8c e4       	ldi	r24, 0x4C	; 76
    122a:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
					waitForTurn();
    122e:	0e 94 a6 08 	call	0x114c	; 0x114c <waitForTurn>
                    myRobot->direction = 'S';
    1232:	83 e5       	ldi	r24, 0x53	; 83
    1234:	f8 01       	movw	r30, r16
    1236:	84 83       	std	Z+4, r24	; 0x04
    1238:	47 c0       	rjmp	.+142    	; 0x12c8 <turnRobot+0x156>
                }
                break;
            case 'S':
                if(tdirection == 'W')
    123a:	c7 35       	cpi	r28, 0x57	; 87
    123c:	49 f4       	brne	.+18     	; 0x1250 <turnRobot+0xde>
                {
                    motorControl('R');
    123e:	82 e5       	ldi	r24, 0x52	; 82
    1240:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
					waitForTurn();
    1244:	0e 94 a6 08 	call	0x114c	; 0x114c <waitForTurn>
                    myRobot->direction = 'W';
    1248:	87 e5       	ldi	r24, 0x57	; 87
    124a:	f8 01       	movw	r30, r16
    124c:	84 83       	std	Z+4, r24	; 0x04
    124e:	3c c0       	rjmp	.+120    	; 0x12c8 <turnRobot+0x156>
                }
                else if(tdirection == 'E')
    1250:	c5 34       	cpi	r28, 0x45	; 69
    1252:	49 f4       	brne	.+18     	; 0x1266 <turnRobot+0xf4>
                {
                    motorControl('L');
    1254:	8c e4       	ldi	r24, 0x4C	; 76
    1256:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
					waitForTurn();
    125a:	0e 94 a6 08 	call	0x114c	; 0x114c <waitForTurn>
                    myRobot->direction = 'E';
    125e:	85 e4       	ldi	r24, 0x45	; 69
    1260:	f8 01       	movw	r30, r16
    1262:	84 83       	std	Z+4, r24	; 0x04
    1264:	31 c0       	rjmp	.+98     	; 0x12c8 <turnRobot+0x156>
                }
                else if(tdirection == 'N')
    1266:	ce 34       	cpi	r28, 0x4E	; 78
    1268:	79 f5       	brne	.+94     	; 0x12c8 <turnRobot+0x156>
                {
                    motorControl('L');motorControl('L');
    126a:	8c e4       	ldi	r24, 0x4C	; 76
    126c:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
    1270:	8c e4       	ldi	r24, 0x4C	; 76
    1272:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
					waitForTurn();
    1276:	0e 94 a6 08 	call	0x114c	; 0x114c <waitForTurn>
                    myRobot->direction = 'N';
    127a:	8e e4       	ldi	r24, 0x4E	; 78
    127c:	f8 01       	movw	r30, r16
    127e:	84 83       	std	Z+4, r24	; 0x04
    1280:	23 c0       	rjmp	.+70     	; 0x12c8 <turnRobot+0x156>
                }
                break;
            case 'W':
                if(tdirection == 'N')
    1282:	ce 34       	cpi	r28, 0x4E	; 78
    1284:	49 f4       	brne	.+18     	; 0x1298 <turnRobot+0x126>
                {
					
                    motorControl('R');
    1286:	82 e5       	ldi	r24, 0x52	; 82
    1288:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
					waitForTurn();
    128c:	0e 94 a6 08 	call	0x114c	; 0x114c <waitForTurn>
                    myRobot->direction = 'N';
    1290:	8e e4       	ldi	r24, 0x4E	; 78
    1292:	f8 01       	movw	r30, r16
    1294:	84 83       	std	Z+4, r24	; 0x04
    1296:	18 c0       	rjmp	.+48     	; 0x12c8 <turnRobot+0x156>
                }
                else if(tdirection == 'S')
    1298:	c3 35       	cpi	r28, 0x53	; 83
    129a:	49 f4       	brne	.+18     	; 0x12ae <turnRobot+0x13c>
                {
	                motorControl('L');
    129c:	8c e4       	ldi	r24, 0x4C	; 76
    129e:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
	                waitForTurn();
    12a2:	0e 94 a6 08 	call	0x114c	; 0x114c <waitForTurn>
	                myRobot->direction = 'S';
    12a6:	83 e5       	ldi	r24, 0x53	; 83
    12a8:	f8 01       	movw	r30, r16
    12aa:	84 83       	std	Z+4, r24	; 0x04
    12ac:	0d c0       	rjmp	.+26     	; 0x12c8 <turnRobot+0x156>
                }
                else if(tdirection == 'E')
    12ae:	c5 34       	cpi	r28, 0x45	; 69
    12b0:	59 f4       	brne	.+22     	; 0x12c8 <turnRobot+0x156>
                {
                    motorControl('L');
    12b2:	8c e4       	ldi	r24, 0x4C	; 76
    12b4:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
					motorControl('L');
    12b8:	8c e4       	ldi	r24, 0x4C	; 76
    12ba:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
					waitForTurn();
    12be:	0e 94 a6 08 	call	0x114c	; 0x114c <waitForTurn>
                    myRobot->direction = 'E';
    12c2:	85 e4       	ldi	r24, 0x45	; 69
    12c4:	f8 01       	movw	r30, r16
    12c6:	84 83       	std	Z+4, r24	; 0x04
                }
                break;
		}
				if(myRobot->direction == tdirection)
    12c8:	f8 01       	movw	r30, r16
    12ca:	84 81       	ldd	r24, Z+4	; 0x04
    12cc:	c8 13       	cpse	r28, r24
    12ce:	02 c0       	rjmp	.+4      	; 0x12d4 <turnRobot+0x162>
				{
					changing = 0;
    12d0:	e1 2c       	mov	r14, r1
    12d2:	f1 2c       	mov	r15, r1

void turnRobot(char tdirection, piRobot *myRobot)
{
    int changing = 1;

    while(changing==1)
    12d4:	f1 e0       	ldi	r31, 0x01	; 1
    12d6:	ef 16       	cp	r14, r31
    12d8:	f1 04       	cpc	r15, r1
    12da:	09 f4       	brne	.+2      	; 0x12de <turnRobot+0x16c>
    12dc:	55 cf       	rjmp	.-342    	; 0x1188 <turnRobot+0x16>
				{
					changing = 0;
				}
		
    }
}
    12de:	cf 91       	pop	r28
    12e0:	1f 91       	pop	r17
    12e2:	0f 91       	pop	r16
    12e4:	ff 90       	pop	r15
    12e6:	ef 90       	pop	r14
    12e8:	08 95       	ret

000012ea <moveX>:


void moveX(int orderPos, piRobot *robot, Communications *myCom)
{
    12ea:	ef 92       	push	r14
    12ec:	ff 92       	push	r15
    12ee:	0f 93       	push	r16
    12f0:	1f 93       	push	r17
    12f2:	cf 93       	push	r28
    12f4:	df 93       	push	r29
	
    int junctions;
	
	
    if(robot->posX != orderPos)
    12f6:	fb 01       	movw	r30, r22
    12f8:	20 81       	ld	r18, Z
    12fa:	31 81       	ldd	r19, Z+1	; 0x01
    12fc:	28 17       	cp	r18, r24
    12fe:	39 07       	cpc	r19, r25
    1300:	d9 f0       	breq	.+54     	; 0x1338 <moveX+0x4e>
    1302:	7a 01       	movw	r14, r20
    1304:	eb 01       	movw	r28, r22
    1306:	8c 01       	movw	r16, r24
    {
		
        if(robot->posX < orderPos)
    1308:	28 17       	cp	r18, r24
    130a:	39 07       	cpc	r19, r25
    130c:	54 f4       	brge	.+20     	; 0x1322 <moveX+0x38>
        {
            turnRobot('W', robot);
    130e:	87 e5       	ldi	r24, 0x57	; 87
    1310:	0e 94 b9 08 	call	0x1172	; 0x1172 <turnRobot>
            junctions = orderPos-robot->posX;
    1314:	88 81       	ld	r24, Y
    1316:	99 81       	ldd	r25, Y+1	; 0x01
    1318:	98 01       	movw	r18, r16
    131a:	28 1b       	sub	r18, r24
    131c:	39 0b       	sbc	r19, r25
    131e:	c9 01       	movw	r24, r18
    1320:	07 c0       	rjmp	.+14     	; 0x1330 <moveX+0x46>
        }
        else{
            turnRobot('E', robot);
    1322:	85 e4       	ldi	r24, 0x45	; 69
    1324:	0e 94 b9 08 	call	0x1172	; 0x1172 <turnRobot>
            junctions = robot->posX - orderPos;
    1328:	88 81       	ld	r24, Y
    132a:	99 81       	ldd	r25, Y+1	; 0x01
    132c:	80 1b       	sub	r24, r16
    132e:	91 0b       	sbc	r25, r17
        }
		drive(junctions, robot, myCom);
    1330:	a7 01       	movw	r20, r14
    1332:	be 01       	movw	r22, r28
    1334:	0e 94 67 08 	call	0x10ce	; 0x10ce <drive>
        
		
        

    }
}
    1338:	df 91       	pop	r29
    133a:	cf 91       	pop	r28
    133c:	1f 91       	pop	r17
    133e:	0f 91       	pop	r16
    1340:	ff 90       	pop	r15
    1342:	ef 90       	pop	r14
    1344:	08 95       	ret

00001346 <moveY>:

void moveY(int orderPos, piRobot *robot, Communications *myCom)
{
    1346:	ef 92       	push	r14
    1348:	ff 92       	push	r15
    134a:	0f 93       	push	r16
    134c:	1f 93       	push	r17
    134e:	cf 93       	push	r28
    1350:	df 93       	push	r29

    int junctions;
    if(robot->posY != orderPos)
    1352:	fb 01       	movw	r30, r22
    1354:	22 81       	ldd	r18, Z+2	; 0x02
    1356:	33 81       	ldd	r19, Z+3	; 0x03
    1358:	28 17       	cp	r18, r24
    135a:	39 07       	cpc	r19, r25
    135c:	d9 f0       	breq	.+54     	; 0x1394 <moveY+0x4e>
    135e:	7a 01       	movw	r14, r20
    1360:	eb 01       	movw	r28, r22
    1362:	8c 01       	movw	r16, r24
    {
        if(robot->posY < orderPos)
    1364:	28 17       	cp	r18, r24
    1366:	39 07       	cpc	r19, r25
    1368:	54 f4       	brge	.+20     	; 0x137e <moveY+0x38>
        {
            turnRobot('N', robot);
    136a:	8e e4       	ldi	r24, 0x4E	; 78
    136c:	0e 94 b9 08 	call	0x1172	; 0x1172 <turnRobot>
            junctions = orderPos-robot->posY;
    1370:	8a 81       	ldd	r24, Y+2	; 0x02
    1372:	9b 81       	ldd	r25, Y+3	; 0x03
    1374:	98 01       	movw	r18, r16
    1376:	28 1b       	sub	r18, r24
    1378:	39 0b       	sbc	r19, r25
    137a:	c9 01       	movw	r24, r18
    137c:	07 c0       	rjmp	.+14     	; 0x138c <moveY+0x46>
        }
        else{
            turnRobot('S', robot);
    137e:	83 e5       	ldi	r24, 0x53	; 83
    1380:	0e 94 b9 08 	call	0x1172	; 0x1172 <turnRobot>
            junctions = robot->posY - orderPos;
    1384:	8a 81       	ldd	r24, Y+2	; 0x02
    1386:	9b 81       	ldd	r25, Y+3	; 0x03
    1388:	80 1b       	sub	r24, r16
    138a:	91 0b       	sbc	r25, r17
        }

            drive(junctions, robot, myCom);
    138c:	a7 01       	movw	r20, r14
    138e:	be 01       	movw	r22, r28
    1390:	0e 94 67 08 	call	0x10ce	; 0x10ce <drive>
        

    }
}
    1394:	df 91       	pop	r29
    1396:	cf 91       	pop	r28
    1398:	1f 91       	pop	r17
    139a:	0f 91       	pop	r16
    139c:	ff 90       	pop	r15
    139e:	ef 90       	pop	r14
    13a0:	08 95       	ret

000013a2 <warehouse>:


void warehouse(objective objective, Communications *myCom)
{
    13a2:	2f 92       	push	r2
    13a4:	3f 92       	push	r3
    13a6:	4f 92       	push	r4
    13a8:	5f 92       	push	r5
    13aa:	6f 92       	push	r6
    13ac:	7f 92       	push	r7
    13ae:	8f 92       	push	r8
    13b0:	9f 92       	push	r9
    13b2:	af 92       	push	r10
    13b4:	bf 92       	push	r11
    13b6:	cf 92       	push	r12
    13b8:	df 92       	push	r13
    13ba:	ef 92       	push	r14
    13bc:	ff 92       	push	r15
    13be:	0f 93       	push	r16
    13c0:	1f 93       	push	r17
    13c2:	cf 93       	push	r28
    13c4:	df 93       	push	r29
    13c6:	cd b7       	in	r28, 0x3d	; 61
    13c8:	de b7       	in	r29, 0x3e	; 62
    13ca:	e7 97       	sbiw	r28, 0x37	; 55
    13cc:	0f b6       	in	r0, 0x3f	; 63
    13ce:	f8 94       	cli
    13d0:	de bf       	out	0x3e, r29	; 62
    13d2:	0f be       	out	0x3f, r0	; 63
    13d4:	cd bf       	out	0x3d, r28	; 61
    13d6:	f8 2e       	mov	r15, r24
    13d8:	8b 01       	movw	r16, r22
 piRobot robot;
 robot.direction = 'W';
    13da:	87 e5       	ldi	r24, 0x57	; 87
    13dc:	8d 83       	std	Y+5, r24	; 0x05
 robot.posX = 0;
    13de:	1a 82       	std	Y+2, r1	; 0x02
    13e0:	19 82       	std	Y+1, r1	; 0x01
 robot.posY = 1;
    13e2:	81 e0       	ldi	r24, 0x01	; 1
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	9c 83       	std	Y+4, r25	; 0x04
    13e8:	8b 83       	std	Y+3, r24	; 0x03
 //char orderY[]={2,1,3,5,2};
 //int arraySize = 5;
  char orderX[25];
  char orderY[25];
 int arraySize = 0;
 for(int i = 0; i<25;i++)
    13ea:	80 e0       	ldi	r24, 0x00	; 0
    13ec:	90 e0       	ldi	r25, 0x00	; 0
 //char orderX[]={2,5,4,3,1};
 //char orderY[]={2,1,3,5,2};
 //int arraySize = 5;
  char orderX[25];
  char orderY[25];
 int arraySize = 0;
    13ee:	c1 2c       	mov	r12, r1
    13f0:	d1 2c       	mov	r13, r1
 for(int i = 0; i<25;i++)
    13f2:	0c c0       	rjmp	.+24     	; 0x140c <warehouse+0x6a>
 {
 	if(myCom->Orderarx[i] != 0)
    13f4:	f8 01       	movw	r30, r16
    13f6:	e8 0f       	add	r30, r24
    13f8:	f9 1f       	adc	r31, r25
    13fa:	ee 5a       	subi	r30, 0xAE	; 174
    13fc:	ff 4f       	sbci	r31, 0xFF	; 255
    13fe:	20 81       	ld	r18, Z
    1400:	22 23       	and	r18, r18
    1402:	19 f0       	breq	.+6      	; 0x140a <warehouse+0x68>
 	{
 		arraySize++;
    1404:	2f ef       	ldi	r18, 0xFF	; 255
    1406:	c2 1a       	sub	r12, r18
    1408:	d2 0a       	sbc	r13, r18
 //char orderY[]={2,1,3,5,2};
 //int arraySize = 5;
  char orderX[25];
  char orderY[25];
 int arraySize = 0;
 for(int i = 0; i<25;i++)
    140a:	01 96       	adiw	r24, 0x01	; 1
    140c:	89 31       	cpi	r24, 0x19	; 25
    140e:	91 05       	cpc	r25, r1
    1410:	8c f3       	brlt	.-30     	; 0x13f4 <warehouse+0x52>
    1412:	80 e0       	ldi	r24, 0x00	; 0
    1414:	90 e0       	ldi	r25, 0x00	; 0
    1416:	18 c0       	rjmp	.+48     	; 0x1448 <warehouse+0xa6>
 		arraySize++;
 	}
 }
 for(int i=0;i<arraySize;i++)//Getting order positions from the wixel
 {
 	orderX[i] = myCom->Orderarx[i];
    1418:	d8 01       	movw	r26, r16
    141a:	a8 0f       	add	r26, r24
    141c:	b9 1f       	adc	r27, r25
    141e:	fd 01       	movw	r30, r26
    1420:	ee 5a       	subi	r30, 0xAE	; 174
    1422:	ff 4f       	sbci	r31, 0xFF	; 255
    1424:	20 81       	ld	r18, Z
    1426:	e6 e0       	ldi	r30, 0x06	; 6
    1428:	f0 e0       	ldi	r31, 0x00	; 0
    142a:	ec 0f       	add	r30, r28
    142c:	fd 1f       	adc	r31, r29
    142e:	e8 0f       	add	r30, r24
    1430:	f9 1f       	adc	r31, r25
    1432:	20 83       	st	Z, r18
 	orderY[i] = myCom->Orderary[i];
    1434:	d9 96       	adiw	r26, 0x39	; 57
    1436:	2c 91       	ld	r18, X
    1438:	ef e1       	ldi	r30, 0x1F	; 31
    143a:	f0 e0       	ldi	r31, 0x00	; 0
    143c:	ec 0f       	add	r30, r28
    143e:	fd 1f       	adc	r31, r29
    1440:	e8 0f       	add	r30, r24
    1442:	f9 1f       	adc	r31, r25
    1444:	20 83       	st	Z, r18
 	if(myCom->Orderarx[i] != 0)
 	{
 		arraySize++;
 	}
 }
 for(int i=0;i<arraySize;i++)//Getting order positions from the wixel
    1446:	01 96       	adiw	r24, 0x01	; 1
    1448:	8c 15       	cp	r24, r12
    144a:	9d 05       	cpc	r25, r13
    144c:	2c f3       	brlt	.-54     	; 0x1418 <warehouse+0x76>
 {
 	orderX[i] = myCom->Orderarx[i];
 	orderY[i] = myCom->Orderary[i];
 }
clear();
    144e:	0e 94 40 12 	call	0x2480	; 0x2480 <clear>

    bubbleSort(orderX, orderY, arraySize);//Sorts the order positions so that the lowest X position comes first
    1452:	a6 01       	movw	r20, r12
    1454:	be 01       	movw	r22, r28
    1456:	61 5e       	subi	r22, 0xE1	; 225
    1458:	7f 4f       	sbci	r23, 0xFF	; 255
    145a:	ce 01       	movw	r24, r28
    145c:	06 96       	adiw	r24, 0x06	; 6
    145e:	0e 94 1b 08 	call	0x1036	; 0x1036 <bubbleSort>
	
	if(objective == orderPicking)//If statement for when the robot just needs to quickly pass the warehouse to get to the charging station
    1462:	ff 20       	and	r15, r15
    1464:	09 f4       	brne	.+2      	; 0x1468 <warehouse+0xc6>
    1466:	85 c0       	rjmp	.+266    	; 0x1572 <warehouse+0x1d0>
    1468:	9b c0       	rjmp	.+310    	; 0x15a0 <warehouse+0x1fe>
	{
		for(int locations = 0; locations<arraySize;locations++)
		{
			float completed = locations;
    146a:	b1 01       	movw	r22, r2
    146c:	03 2c       	mov	r0, r3
    146e:	00 0c       	add	r0, r0
    1470:	88 0b       	sbc	r24, r24
    1472:	99 0b       	sbc	r25, r25
    1474:	0e 94 44 0c 	call	0x1888	; 0x1888 <__floatsisf>
    1478:	2b 01       	movw	r4, r22
    147a:	3c 01       	movw	r6, r24
			float total = arraySize;
    147c:	b6 01       	movw	r22, r12
    147e:	0d 2c       	mov	r0, r13
    1480:	00 0c       	add	r0, r0
    1482:	88 0b       	sbc	r24, r24
    1484:	99 0b       	sbc	r25, r25
    1486:	0e 94 44 0c 	call	0x1888	; 0x1888 <__floatsisf>
    148a:	4b 01       	movw	r8, r22
    148c:	5c 01       	movw	r10, r24
			
			moveX(orderX[locations], &robot, myCom);
    148e:	0f 2e       	mov	r0, r31
    1490:	f6 e0       	ldi	r31, 0x06	; 6
    1492:	ef 2e       	mov	r14, r31
    1494:	f1 2c       	mov	r15, r1
    1496:	f0 2d       	mov	r31, r0
    1498:	ec 0e       	add	r14, r28
    149a:	fd 1e       	adc	r15, r29
    149c:	e2 0c       	add	r14, r2
    149e:	f3 1c       	adc	r15, r3
    14a0:	f7 01       	movw	r30, r14
    14a2:	80 81       	ld	r24, Z
    14a4:	a8 01       	movw	r20, r16
    14a6:	be 01       	movw	r22, r28
    14a8:	6f 5f       	subi	r22, 0xFF	; 255
    14aa:	7f 4f       	sbci	r23, 0xFF	; 255
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	0e 94 75 09 	call	0x12ea	; 0x12ea <moveX>
			robot.posX = orderX[locations];
    14b2:	f7 01       	movw	r30, r14
    14b4:	80 81       	ld	r24, Z
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	9a 83       	std	Y+2, r25	; 0x02
    14ba:	89 83       	std	Y+1, r24	; 0x01
			moveY(orderY[locations], &robot, myCom);
    14bc:	0f 2e       	mov	r0, r31
    14be:	ff e1       	ldi	r31, 0x1F	; 31
    14c0:	ef 2e       	mov	r14, r31
    14c2:	f1 2c       	mov	r15, r1
    14c4:	f0 2d       	mov	r31, r0
    14c6:	ec 0e       	add	r14, r28
    14c8:	fd 1e       	adc	r15, r29
    14ca:	e2 0c       	add	r14, r2
    14cc:	f3 1c       	adc	r15, r3
    14ce:	f7 01       	movw	r30, r14
    14d0:	80 81       	ld	r24, Z
    14d2:	a8 01       	movw	r20, r16
    14d4:	be 01       	movw	r22, r28
    14d6:	6f 5f       	subi	r22, 0xFF	; 255
    14d8:	7f 4f       	sbci	r23, 0xFF	; 255
    14da:	90 e0       	ldi	r25, 0x00	; 0
    14dc:	0e 94 a3 09 	call	0x1346	; 0x1346 <moveY>
			robot.posY = orderY[locations];
    14e0:	f7 01       	movw	r30, r14
    14e2:	80 81       	ld	r24, Z
    14e4:	90 e0       	ldi	r25, 0x00	; 0
    14e6:	9c 83       	std	Y+4, r25	; 0x04
    14e8:	8b 83       	std	Y+3, r24	; 0x03
    14ea:	88 ee       	ldi	r24, 0xE8	; 232
    14ec:	93 e0       	ldi	r25, 0x03	; 3
    14ee:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <delay_ms>
			delay(1000);//wait 1 second
			
			myCom->batterylvl = batteryPercentage();
    14f2:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <batteryPercentage>
    14f6:	78 01       	movw	r14, r16
    14f8:	fc e6       	ldi	r31, 0x6C	; 108
    14fa:	ef 0e       	add	r14, r31
    14fc:	f1 1c       	adc	r15, r1
    14fe:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
    1502:	f7 01       	movw	r30, r14
    1504:	60 83       	st	Z, r22
			myCom->magprocess = (((completed+1)/total)*100);
    1506:	20 e0       	ldi	r18, 0x00	; 0
    1508:	30 e0       	ldi	r19, 0x00	; 0
    150a:	40 e8       	ldi	r20, 0x80	; 128
    150c:	5f e3       	ldi	r21, 0x3F	; 63
    150e:	c3 01       	movw	r24, r6
    1510:	b2 01       	movw	r22, r4
    1512:	0e 94 2e 0b 	call	0x165c	; 0x165c <__addsf3>
    1516:	a5 01       	movw	r20, r10
    1518:	94 01       	movw	r18, r8
    151a:	0e 94 9a 0b 	call	0x1734	; 0x1734 <__divsf3>
    151e:	20 e0       	ldi	r18, 0x00	; 0
    1520:	30 e0       	ldi	r19, 0x00	; 0
    1522:	48 ec       	ldi	r20, 0xC8	; 200
    1524:	52 e4       	ldi	r21, 0x42	; 66
    1526:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <__mulsf3>
    152a:	4b 01       	movw	r8, r22
    152c:	5c 01       	movw	r10, r24
    152e:	78 01       	movw	r14, r16
    1530:	fd e6       	ldi	r31, 0x6D	; 109
    1532:	ef 0e       	add	r14, r31
    1534:	f1 1c       	adc	r15, r1
    1536:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
    153a:	f7 01       	movw	r30, r14
    153c:	60 83       	st	Z, r22
			myCom->Update(myCom);
    153e:	34 96       	adiw	r30, 0x04	; 4
    1540:	01 90       	ld	r0, Z+
    1542:	f0 81       	ld	r31, Z
    1544:	e0 2d       	mov	r30, r0
    1546:	c8 01       	movw	r24, r16
    1548:	09 95       	icall
			updateDisplay((((completed+1)/total)*100),batteryPercentage(),logicsBot);
    154a:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <batteryPercentage>
    154e:	0e 94 0c 0c 	call	0x1818	; 0x1818 <__fixsfsi>
    1552:	2b 01       	movw	r4, r22
    1554:	3c 01       	movw	r6, r24
    1556:	c5 01       	movw	r24, r10
    1558:	b4 01       	movw	r22, r8
    155a:	0e 94 0c 0c 	call	0x1818	; 0x1818 <__fixsfsi>
    155e:	dc 01       	movw	r26, r24
    1560:	cb 01       	movw	r24, r22
    1562:	42 e0       	ldi	r20, 0x02	; 2
    1564:	b2 01       	movw	r22, r4
    1566:	0e 94 0d 03 	call	0x61a	; 0x61a <updateDisplay>

    bubbleSort(orderX, orderY, arraySize);//Sorts the order positions so that the lowest X position comes first
	
	if(objective == orderPicking)//If statement for when the robot just needs to quickly pass the warehouse to get to the charging station
	{
		for(int locations = 0; locations<arraySize;locations++)
    156a:	ff ef       	ldi	r31, 0xFF	; 255
    156c:	2f 1a       	sub	r2, r31
    156e:	3f 0a       	sbc	r3, r31
    1570:	02 c0       	rjmp	.+4      	; 0x1576 <warehouse+0x1d4>
    1572:	21 2c       	mov	r2, r1
    1574:	31 2c       	mov	r3, r1
    1576:	2c 14       	cp	r2, r12
    1578:	3d 04       	cpc	r3, r13
    157a:	0c f4       	brge	.+2      	; 0x157e <warehouse+0x1dc>
    157c:	76 cf       	rjmp	.-276    	; 0x146a <warehouse+0xc8>
			myCom->batterylvl = batteryPercentage();
			myCom->magprocess = (((completed+1)/total)*100);
			myCom->Update(myCom);
			updateDisplay((((completed+1)/total)*100),batteryPercentage(),logicsBot);
		}
		moveY(1, &robot, myCom);
    157e:	a8 01       	movw	r20, r16
    1580:	be 01       	movw	r22, r28
    1582:	6f 5f       	subi	r22, 0xFF	; 255
    1584:	7f 4f       	sbci	r23, 0xFF	; 255
    1586:	81 e0       	ldi	r24, 0x01	; 1
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	0e 94 a3 09 	call	0x1346	; 0x1346 <moveY>
			moveX(1, &robot, myCom);
    158e:	a8 01       	movw	r20, r16
    1590:	be 01       	movw	r22, r28
    1592:	6f 5f       	subi	r22, 0xFF	; 255
    1594:	7f 4f       	sbci	r23, 0xFF	; 255
    1596:	81 e0       	ldi	r24, 0x01	; 1
    1598:	90 e0       	ldi	r25, 0x00	; 0
    159a:	0e 94 75 09 	call	0x12ea	; 0x12ea <moveX>
    159e:	44 c0       	rjmp	.+136    	; 0x1628 <warehouse+0x286>
			
	}
	else
	{
		static int charged = 0;
		if(charged == 0)
    15a0:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <charged.2339>
    15a4:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <charged.2339+0x1>
    15a8:	89 2b       	or	r24, r25
    15aa:	29 f5       	brne	.+74     	; 0x15f6 <warehouse+0x254>
		{
			drive(1, &robot, myCom);
    15ac:	a8 01       	movw	r20, r16
    15ae:	be 01       	movw	r22, r28
    15b0:	6f 5f       	subi	r22, 0xFF	; 255
    15b2:	7f 4f       	sbci	r23, 0xFF	; 255
    15b4:	81 e0       	ldi	r24, 0x01	; 1
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	0e 94 67 08 	call	0x10ce	; 0x10ce <drive>
			motorControl('R');
    15bc:	82 e5       	ldi	r24, 0x52	; 82
    15be:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
			drive(3, &robot, myCom);
    15c2:	a8 01       	movw	r20, r16
    15c4:	be 01       	movw	r22, r28
    15c6:	6f 5f       	subi	r22, 0xFF	; 255
    15c8:	7f 4f       	sbci	r23, 0xFF	; 255
    15ca:	83 e0       	ldi	r24, 0x03	; 3
    15cc:	90 e0       	ldi	r25, 0x00	; 0
    15ce:	0e 94 67 08 	call	0x10ce	; 0x10ce <drive>
			motorControl('R');
    15d2:	82 e5       	ldi	r24, 0x52	; 82
    15d4:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
			drive(1, &robot, myCom);
    15d8:	a8 01       	movw	r20, r16
    15da:	be 01       	movw	r22, r28
    15dc:	6f 5f       	subi	r22, 0xFF	; 255
    15de:	7f 4f       	sbci	r23, 0xFF	; 255
    15e0:	81 e0       	ldi	r24, 0x01	; 1
    15e2:	90 e0       	ldi	r25, 0x00	; 0
    15e4:	0e 94 67 08 	call	0x10ce	; 0x10ce <drive>
			charged = 1;
    15e8:	81 e0       	ldi	r24, 0x01	; 1
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <charged.2339+0x1>
    15f0:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <charged.2339>
    15f4:	19 c0       	rjmp	.+50     	; 0x1628 <warehouse+0x286>
		}
		else
		{
			motorControl('T');
    15f6:	84 e5       	ldi	r24, 0x54	; 84
    15f8:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
			drive(1, &robot, myCom);
    15fc:	a8 01       	movw	r20, r16
    15fe:	be 01       	movw	r22, r28
    1600:	6f 5f       	subi	r22, 0xFF	; 255
    1602:	7f 4f       	sbci	r23, 0xFF	; 255
    1604:	81 e0       	ldi	r24, 0x01	; 1
    1606:	90 e0       	ldi	r25, 0x00	; 0
    1608:	0e 94 67 08 	call	0x10ce	; 0x10ce <drive>
			motorControl('L');
    160c:	8c e4       	ldi	r24, 0x4C	; 76
    160e:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
			drive(3, &robot, myCom);
    1612:	a8 01       	movw	r20, r16
    1614:	be 01       	movw	r22, r28
    1616:	6f 5f       	subi	r22, 0xFF	; 255
    1618:	7f 4f       	sbci	r23, 0xFF	; 255
    161a:	83 e0       	ldi	r24, 0x03	; 3
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	0e 94 67 08 	call	0x10ce	; 0x10ce <drive>
			motorControl('L');
    1622:	8c e4       	ldi	r24, 0x4C	; 76
    1624:	0e 94 55 05 	call	0xaaa	; 0xaaa <motorControl>
			
		}
		
	}
}
    1628:	e7 96       	adiw	r28, 0x37	; 55
    162a:	0f b6       	in	r0, 0x3f	; 63
    162c:	f8 94       	cli
    162e:	de bf       	out	0x3e, r29	; 62
    1630:	0f be       	out	0x3f, r0	; 63
    1632:	cd bf       	out	0x3d, r28	; 61
    1634:	df 91       	pop	r29
    1636:	cf 91       	pop	r28
    1638:	1f 91       	pop	r17
    163a:	0f 91       	pop	r16
    163c:	ff 90       	pop	r15
    163e:	ef 90       	pop	r14
    1640:	df 90       	pop	r13
    1642:	cf 90       	pop	r12
    1644:	bf 90       	pop	r11
    1646:	af 90       	pop	r10
    1648:	9f 90       	pop	r9
    164a:	8f 90       	pop	r8
    164c:	7f 90       	pop	r7
    164e:	6f 90       	pop	r6
    1650:	5f 90       	pop	r5
    1652:	4f 90       	pop	r4
    1654:	3f 90       	pop	r3
    1656:	2f 90       	pop	r2
    1658:	08 95       	ret

0000165a <__subsf3>:
    165a:	50 58       	subi	r21, 0x80	; 128

0000165c <__addsf3>:
    165c:	bb 27       	eor	r27, r27
    165e:	aa 27       	eor	r26, r26
    1660:	0e 94 45 0b 	call	0x168a	; 0x168a <__addsf3x>
    1664:	0c 94 96 0c 	jmp	0x192c	; 0x192c <__fp_round>
    1668:	0e 94 88 0c 	call	0x1910	; 0x1910 <__fp_pscA>
    166c:	38 f0       	brcs	.+14     	; 0x167c <__addsf3+0x20>
    166e:	0e 94 8f 0c 	call	0x191e	; 0x191e <__fp_pscB>
    1672:	20 f0       	brcs	.+8      	; 0x167c <__addsf3+0x20>
    1674:	39 f4       	brne	.+14     	; 0x1684 <__addsf3+0x28>
    1676:	9f 3f       	cpi	r25, 0xFF	; 255
    1678:	19 f4       	brne	.+6      	; 0x1680 <__addsf3+0x24>
    167a:	26 f4       	brtc	.+8      	; 0x1684 <__addsf3+0x28>
    167c:	0c 94 85 0c 	jmp	0x190a	; 0x190a <__fp_nan>
    1680:	0e f4       	brtc	.+2      	; 0x1684 <__addsf3+0x28>
    1682:	e0 95       	com	r30
    1684:	e7 fb       	bst	r30, 7
    1686:	0c 94 7f 0c 	jmp	0x18fe	; 0x18fe <__fp_inf>

0000168a <__addsf3x>:
    168a:	e9 2f       	mov	r30, r25
    168c:	0e 94 a7 0c 	call	0x194e	; 0x194e <__fp_split3>
    1690:	58 f3       	brcs	.-42     	; 0x1668 <__addsf3+0xc>
    1692:	ba 17       	cp	r27, r26
    1694:	62 07       	cpc	r22, r18
    1696:	73 07       	cpc	r23, r19
    1698:	84 07       	cpc	r24, r20
    169a:	95 07       	cpc	r25, r21
    169c:	20 f0       	brcs	.+8      	; 0x16a6 <__addsf3x+0x1c>
    169e:	79 f4       	brne	.+30     	; 0x16be <__addsf3x+0x34>
    16a0:	a6 f5       	brtc	.+104    	; 0x170a <__addsf3x+0x80>
    16a2:	0c 94 c9 0c 	jmp	0x1992	; 0x1992 <__fp_zero>
    16a6:	0e f4       	brtc	.+2      	; 0x16aa <__addsf3x+0x20>
    16a8:	e0 95       	com	r30
    16aa:	0b 2e       	mov	r0, r27
    16ac:	ba 2f       	mov	r27, r26
    16ae:	a0 2d       	mov	r26, r0
    16b0:	0b 01       	movw	r0, r22
    16b2:	b9 01       	movw	r22, r18
    16b4:	90 01       	movw	r18, r0
    16b6:	0c 01       	movw	r0, r24
    16b8:	ca 01       	movw	r24, r20
    16ba:	a0 01       	movw	r20, r0
    16bc:	11 24       	eor	r1, r1
    16be:	ff 27       	eor	r31, r31
    16c0:	59 1b       	sub	r21, r25
    16c2:	99 f0       	breq	.+38     	; 0x16ea <__addsf3x+0x60>
    16c4:	59 3f       	cpi	r21, 0xF9	; 249
    16c6:	50 f4       	brcc	.+20     	; 0x16dc <__addsf3x+0x52>
    16c8:	50 3e       	cpi	r21, 0xE0	; 224
    16ca:	68 f1       	brcs	.+90     	; 0x1726 <__addsf3x+0x9c>
    16cc:	1a 16       	cp	r1, r26
    16ce:	f0 40       	sbci	r31, 0x00	; 0
    16d0:	a2 2f       	mov	r26, r18
    16d2:	23 2f       	mov	r18, r19
    16d4:	34 2f       	mov	r19, r20
    16d6:	44 27       	eor	r20, r20
    16d8:	58 5f       	subi	r21, 0xF8	; 248
    16da:	f3 cf       	rjmp	.-26     	; 0x16c2 <__addsf3x+0x38>
    16dc:	46 95       	lsr	r20
    16de:	37 95       	ror	r19
    16e0:	27 95       	ror	r18
    16e2:	a7 95       	ror	r26
    16e4:	f0 40       	sbci	r31, 0x00	; 0
    16e6:	53 95       	inc	r21
    16e8:	c9 f7       	brne	.-14     	; 0x16dc <__addsf3x+0x52>
    16ea:	7e f4       	brtc	.+30     	; 0x170a <__addsf3x+0x80>
    16ec:	1f 16       	cp	r1, r31
    16ee:	ba 0b       	sbc	r27, r26
    16f0:	62 0b       	sbc	r22, r18
    16f2:	73 0b       	sbc	r23, r19
    16f4:	84 0b       	sbc	r24, r20
    16f6:	ba f0       	brmi	.+46     	; 0x1726 <__addsf3x+0x9c>
    16f8:	91 50       	subi	r25, 0x01	; 1
    16fa:	a1 f0       	breq	.+40     	; 0x1724 <__addsf3x+0x9a>
    16fc:	ff 0f       	add	r31, r31
    16fe:	bb 1f       	adc	r27, r27
    1700:	66 1f       	adc	r22, r22
    1702:	77 1f       	adc	r23, r23
    1704:	88 1f       	adc	r24, r24
    1706:	c2 f7       	brpl	.-16     	; 0x16f8 <__addsf3x+0x6e>
    1708:	0e c0       	rjmp	.+28     	; 0x1726 <__addsf3x+0x9c>
    170a:	ba 0f       	add	r27, r26
    170c:	62 1f       	adc	r22, r18
    170e:	73 1f       	adc	r23, r19
    1710:	84 1f       	adc	r24, r20
    1712:	48 f4       	brcc	.+18     	; 0x1726 <__addsf3x+0x9c>
    1714:	87 95       	ror	r24
    1716:	77 95       	ror	r23
    1718:	67 95       	ror	r22
    171a:	b7 95       	ror	r27
    171c:	f7 95       	ror	r31
    171e:	9e 3f       	cpi	r25, 0xFE	; 254
    1720:	08 f0       	brcs	.+2      	; 0x1724 <__addsf3x+0x9a>
    1722:	b0 cf       	rjmp	.-160    	; 0x1684 <__addsf3+0x28>
    1724:	93 95       	inc	r25
    1726:	88 0f       	add	r24, r24
    1728:	08 f0       	brcs	.+2      	; 0x172c <__addsf3x+0xa2>
    172a:	99 27       	eor	r25, r25
    172c:	ee 0f       	add	r30, r30
    172e:	97 95       	ror	r25
    1730:	87 95       	ror	r24
    1732:	08 95       	ret

00001734 <__divsf3>:
    1734:	0e 94 ae 0b 	call	0x175c	; 0x175c <__divsf3x>
    1738:	0c 94 96 0c 	jmp	0x192c	; 0x192c <__fp_round>
    173c:	0e 94 8f 0c 	call	0x191e	; 0x191e <__fp_pscB>
    1740:	58 f0       	brcs	.+22     	; 0x1758 <__divsf3+0x24>
    1742:	0e 94 88 0c 	call	0x1910	; 0x1910 <__fp_pscA>
    1746:	40 f0       	brcs	.+16     	; 0x1758 <__divsf3+0x24>
    1748:	29 f4       	brne	.+10     	; 0x1754 <__divsf3+0x20>
    174a:	5f 3f       	cpi	r21, 0xFF	; 255
    174c:	29 f0       	breq	.+10     	; 0x1758 <__divsf3+0x24>
    174e:	0c 94 7f 0c 	jmp	0x18fe	; 0x18fe <__fp_inf>
    1752:	51 11       	cpse	r21, r1
    1754:	0c 94 ca 0c 	jmp	0x1994	; 0x1994 <__fp_szero>
    1758:	0c 94 85 0c 	jmp	0x190a	; 0x190a <__fp_nan>

0000175c <__divsf3x>:
    175c:	0e 94 a7 0c 	call	0x194e	; 0x194e <__fp_split3>
    1760:	68 f3       	brcs	.-38     	; 0x173c <__divsf3+0x8>

00001762 <__divsf3_pse>:
    1762:	99 23       	and	r25, r25
    1764:	b1 f3       	breq	.-20     	; 0x1752 <__divsf3+0x1e>
    1766:	55 23       	and	r21, r21
    1768:	91 f3       	breq	.-28     	; 0x174e <__divsf3+0x1a>
    176a:	95 1b       	sub	r25, r21
    176c:	55 0b       	sbc	r21, r21
    176e:	bb 27       	eor	r27, r27
    1770:	aa 27       	eor	r26, r26
    1772:	62 17       	cp	r22, r18
    1774:	73 07       	cpc	r23, r19
    1776:	84 07       	cpc	r24, r20
    1778:	38 f0       	brcs	.+14     	; 0x1788 <__divsf3_pse+0x26>
    177a:	9f 5f       	subi	r25, 0xFF	; 255
    177c:	5f 4f       	sbci	r21, 0xFF	; 255
    177e:	22 0f       	add	r18, r18
    1780:	33 1f       	adc	r19, r19
    1782:	44 1f       	adc	r20, r20
    1784:	aa 1f       	adc	r26, r26
    1786:	a9 f3       	breq	.-22     	; 0x1772 <__divsf3_pse+0x10>
    1788:	35 d0       	rcall	.+106    	; 0x17f4 <__divsf3_pse+0x92>
    178a:	0e 2e       	mov	r0, r30
    178c:	3a f0       	brmi	.+14     	; 0x179c <__divsf3_pse+0x3a>
    178e:	e0 e8       	ldi	r30, 0x80	; 128
    1790:	32 d0       	rcall	.+100    	; 0x17f6 <__divsf3_pse+0x94>
    1792:	91 50       	subi	r25, 0x01	; 1
    1794:	50 40       	sbci	r21, 0x00	; 0
    1796:	e6 95       	lsr	r30
    1798:	00 1c       	adc	r0, r0
    179a:	ca f7       	brpl	.-14     	; 0x178e <__divsf3_pse+0x2c>
    179c:	2b d0       	rcall	.+86     	; 0x17f4 <__divsf3_pse+0x92>
    179e:	fe 2f       	mov	r31, r30
    17a0:	29 d0       	rcall	.+82     	; 0x17f4 <__divsf3_pse+0x92>
    17a2:	66 0f       	add	r22, r22
    17a4:	77 1f       	adc	r23, r23
    17a6:	88 1f       	adc	r24, r24
    17a8:	bb 1f       	adc	r27, r27
    17aa:	26 17       	cp	r18, r22
    17ac:	37 07       	cpc	r19, r23
    17ae:	48 07       	cpc	r20, r24
    17b0:	ab 07       	cpc	r26, r27
    17b2:	b0 e8       	ldi	r27, 0x80	; 128
    17b4:	09 f0       	breq	.+2      	; 0x17b8 <__divsf3_pse+0x56>
    17b6:	bb 0b       	sbc	r27, r27
    17b8:	80 2d       	mov	r24, r0
    17ba:	bf 01       	movw	r22, r30
    17bc:	ff 27       	eor	r31, r31
    17be:	93 58       	subi	r25, 0x83	; 131
    17c0:	5f 4f       	sbci	r21, 0xFF	; 255
    17c2:	3a f0       	brmi	.+14     	; 0x17d2 <__divsf3_pse+0x70>
    17c4:	9e 3f       	cpi	r25, 0xFE	; 254
    17c6:	51 05       	cpc	r21, r1
    17c8:	78 f0       	brcs	.+30     	; 0x17e8 <__divsf3_pse+0x86>
    17ca:	0c 94 7f 0c 	jmp	0x18fe	; 0x18fe <__fp_inf>
    17ce:	0c 94 ca 0c 	jmp	0x1994	; 0x1994 <__fp_szero>
    17d2:	5f 3f       	cpi	r21, 0xFF	; 255
    17d4:	e4 f3       	brlt	.-8      	; 0x17ce <__divsf3_pse+0x6c>
    17d6:	98 3e       	cpi	r25, 0xE8	; 232
    17d8:	d4 f3       	brlt	.-12     	; 0x17ce <__divsf3_pse+0x6c>
    17da:	86 95       	lsr	r24
    17dc:	77 95       	ror	r23
    17de:	67 95       	ror	r22
    17e0:	b7 95       	ror	r27
    17e2:	f7 95       	ror	r31
    17e4:	9f 5f       	subi	r25, 0xFF	; 255
    17e6:	c9 f7       	brne	.-14     	; 0x17da <__divsf3_pse+0x78>
    17e8:	88 0f       	add	r24, r24
    17ea:	91 1d       	adc	r25, r1
    17ec:	96 95       	lsr	r25
    17ee:	87 95       	ror	r24
    17f0:	97 f9       	bld	r25, 7
    17f2:	08 95       	ret
    17f4:	e1 e0       	ldi	r30, 0x01	; 1
    17f6:	66 0f       	add	r22, r22
    17f8:	77 1f       	adc	r23, r23
    17fa:	88 1f       	adc	r24, r24
    17fc:	bb 1f       	adc	r27, r27
    17fe:	62 17       	cp	r22, r18
    1800:	73 07       	cpc	r23, r19
    1802:	84 07       	cpc	r24, r20
    1804:	ba 07       	cpc	r27, r26
    1806:	20 f0       	brcs	.+8      	; 0x1810 <__divsf3_pse+0xae>
    1808:	62 1b       	sub	r22, r18
    180a:	73 0b       	sbc	r23, r19
    180c:	84 0b       	sbc	r24, r20
    180e:	ba 0b       	sbc	r27, r26
    1810:	ee 1f       	adc	r30, r30
    1812:	88 f7       	brcc	.-30     	; 0x17f6 <__divsf3_pse+0x94>
    1814:	e0 95       	com	r30
    1816:	08 95       	ret

00001818 <__fixsfsi>:
    1818:	0e 94 13 0c 	call	0x1826	; 0x1826 <__fixunssfsi>
    181c:	68 94       	set
    181e:	b1 11       	cpse	r27, r1
    1820:	0c 94 ca 0c 	jmp	0x1994	; 0x1994 <__fp_szero>
    1824:	08 95       	ret

00001826 <__fixunssfsi>:
    1826:	0e 94 af 0c 	call	0x195e	; 0x195e <__fp_splitA>
    182a:	88 f0       	brcs	.+34     	; 0x184e <__fixunssfsi+0x28>
    182c:	9f 57       	subi	r25, 0x7F	; 127
    182e:	98 f0       	brcs	.+38     	; 0x1856 <__fixunssfsi+0x30>
    1830:	b9 2f       	mov	r27, r25
    1832:	99 27       	eor	r25, r25
    1834:	b7 51       	subi	r27, 0x17	; 23
    1836:	b0 f0       	brcs	.+44     	; 0x1864 <__fixunssfsi+0x3e>
    1838:	e1 f0       	breq	.+56     	; 0x1872 <__fixunssfsi+0x4c>
    183a:	66 0f       	add	r22, r22
    183c:	77 1f       	adc	r23, r23
    183e:	88 1f       	adc	r24, r24
    1840:	99 1f       	adc	r25, r25
    1842:	1a f0       	brmi	.+6      	; 0x184a <__fixunssfsi+0x24>
    1844:	ba 95       	dec	r27
    1846:	c9 f7       	brne	.-14     	; 0x183a <__fixunssfsi+0x14>
    1848:	14 c0       	rjmp	.+40     	; 0x1872 <__fixunssfsi+0x4c>
    184a:	b1 30       	cpi	r27, 0x01	; 1
    184c:	91 f0       	breq	.+36     	; 0x1872 <__fixunssfsi+0x4c>
    184e:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__fp_zero>
    1852:	b1 e0       	ldi	r27, 0x01	; 1
    1854:	08 95       	ret
    1856:	0c 94 c9 0c 	jmp	0x1992	; 0x1992 <__fp_zero>
    185a:	67 2f       	mov	r22, r23
    185c:	78 2f       	mov	r23, r24
    185e:	88 27       	eor	r24, r24
    1860:	b8 5f       	subi	r27, 0xF8	; 248
    1862:	39 f0       	breq	.+14     	; 0x1872 <__fixunssfsi+0x4c>
    1864:	b9 3f       	cpi	r27, 0xF9	; 249
    1866:	cc f3       	brlt	.-14     	; 0x185a <__fixunssfsi+0x34>
    1868:	86 95       	lsr	r24
    186a:	77 95       	ror	r23
    186c:	67 95       	ror	r22
    186e:	b3 95       	inc	r27
    1870:	d9 f7       	brne	.-10     	; 0x1868 <__fixunssfsi+0x42>
    1872:	3e f4       	brtc	.+14     	; 0x1882 <__fixunssfsi+0x5c>
    1874:	90 95       	com	r25
    1876:	80 95       	com	r24
    1878:	70 95       	com	r23
    187a:	61 95       	neg	r22
    187c:	7f 4f       	sbci	r23, 0xFF	; 255
    187e:	8f 4f       	sbci	r24, 0xFF	; 255
    1880:	9f 4f       	sbci	r25, 0xFF	; 255
    1882:	08 95       	ret

00001884 <__floatunsisf>:
    1884:	e8 94       	clt
    1886:	09 c0       	rjmp	.+18     	; 0x189a <__floatsisf+0x12>

00001888 <__floatsisf>:
    1888:	97 fb       	bst	r25, 7
    188a:	3e f4       	brtc	.+14     	; 0x189a <__floatsisf+0x12>
    188c:	90 95       	com	r25
    188e:	80 95       	com	r24
    1890:	70 95       	com	r23
    1892:	61 95       	neg	r22
    1894:	7f 4f       	sbci	r23, 0xFF	; 255
    1896:	8f 4f       	sbci	r24, 0xFF	; 255
    1898:	9f 4f       	sbci	r25, 0xFF	; 255
    189a:	99 23       	and	r25, r25
    189c:	a9 f0       	breq	.+42     	; 0x18c8 <__floatsisf+0x40>
    189e:	f9 2f       	mov	r31, r25
    18a0:	96 e9       	ldi	r25, 0x96	; 150
    18a2:	bb 27       	eor	r27, r27
    18a4:	93 95       	inc	r25
    18a6:	f6 95       	lsr	r31
    18a8:	87 95       	ror	r24
    18aa:	77 95       	ror	r23
    18ac:	67 95       	ror	r22
    18ae:	b7 95       	ror	r27
    18b0:	f1 11       	cpse	r31, r1
    18b2:	f8 cf       	rjmp	.-16     	; 0x18a4 <__floatsisf+0x1c>
    18b4:	fa f4       	brpl	.+62     	; 0x18f4 <__floatsisf+0x6c>
    18b6:	bb 0f       	add	r27, r27
    18b8:	11 f4       	brne	.+4      	; 0x18be <__floatsisf+0x36>
    18ba:	60 ff       	sbrs	r22, 0
    18bc:	1b c0       	rjmp	.+54     	; 0x18f4 <__floatsisf+0x6c>
    18be:	6f 5f       	subi	r22, 0xFF	; 255
    18c0:	7f 4f       	sbci	r23, 0xFF	; 255
    18c2:	8f 4f       	sbci	r24, 0xFF	; 255
    18c4:	9f 4f       	sbci	r25, 0xFF	; 255
    18c6:	16 c0       	rjmp	.+44     	; 0x18f4 <__floatsisf+0x6c>
    18c8:	88 23       	and	r24, r24
    18ca:	11 f0       	breq	.+4      	; 0x18d0 <__floatsisf+0x48>
    18cc:	96 e9       	ldi	r25, 0x96	; 150
    18ce:	11 c0       	rjmp	.+34     	; 0x18f2 <__floatsisf+0x6a>
    18d0:	77 23       	and	r23, r23
    18d2:	21 f0       	breq	.+8      	; 0x18dc <__floatsisf+0x54>
    18d4:	9e e8       	ldi	r25, 0x8E	; 142
    18d6:	87 2f       	mov	r24, r23
    18d8:	76 2f       	mov	r23, r22
    18da:	05 c0       	rjmp	.+10     	; 0x18e6 <__floatsisf+0x5e>
    18dc:	66 23       	and	r22, r22
    18de:	71 f0       	breq	.+28     	; 0x18fc <__floatsisf+0x74>
    18e0:	96 e8       	ldi	r25, 0x86	; 134
    18e2:	86 2f       	mov	r24, r22
    18e4:	70 e0       	ldi	r23, 0x00	; 0
    18e6:	60 e0       	ldi	r22, 0x00	; 0
    18e8:	2a f0       	brmi	.+10     	; 0x18f4 <__floatsisf+0x6c>
    18ea:	9a 95       	dec	r25
    18ec:	66 0f       	add	r22, r22
    18ee:	77 1f       	adc	r23, r23
    18f0:	88 1f       	adc	r24, r24
    18f2:	da f7       	brpl	.-10     	; 0x18ea <__floatsisf+0x62>
    18f4:	88 0f       	add	r24, r24
    18f6:	96 95       	lsr	r25
    18f8:	87 95       	ror	r24
    18fa:	97 f9       	bld	r25, 7
    18fc:	08 95       	ret

000018fe <__fp_inf>:
    18fe:	97 f9       	bld	r25, 7
    1900:	9f 67       	ori	r25, 0x7F	; 127
    1902:	80 e8       	ldi	r24, 0x80	; 128
    1904:	70 e0       	ldi	r23, 0x00	; 0
    1906:	60 e0       	ldi	r22, 0x00	; 0
    1908:	08 95       	ret

0000190a <__fp_nan>:
    190a:	9f ef       	ldi	r25, 0xFF	; 255
    190c:	80 ec       	ldi	r24, 0xC0	; 192
    190e:	08 95       	ret

00001910 <__fp_pscA>:
    1910:	00 24       	eor	r0, r0
    1912:	0a 94       	dec	r0
    1914:	16 16       	cp	r1, r22
    1916:	17 06       	cpc	r1, r23
    1918:	18 06       	cpc	r1, r24
    191a:	09 06       	cpc	r0, r25
    191c:	08 95       	ret

0000191e <__fp_pscB>:
    191e:	00 24       	eor	r0, r0
    1920:	0a 94       	dec	r0
    1922:	12 16       	cp	r1, r18
    1924:	13 06       	cpc	r1, r19
    1926:	14 06       	cpc	r1, r20
    1928:	05 06       	cpc	r0, r21
    192a:	08 95       	ret

0000192c <__fp_round>:
    192c:	09 2e       	mov	r0, r25
    192e:	03 94       	inc	r0
    1930:	00 0c       	add	r0, r0
    1932:	11 f4       	brne	.+4      	; 0x1938 <__fp_round+0xc>
    1934:	88 23       	and	r24, r24
    1936:	52 f0       	brmi	.+20     	; 0x194c <__fp_round+0x20>
    1938:	bb 0f       	add	r27, r27
    193a:	40 f4       	brcc	.+16     	; 0x194c <__fp_round+0x20>
    193c:	bf 2b       	or	r27, r31
    193e:	11 f4       	brne	.+4      	; 0x1944 <__fp_round+0x18>
    1940:	60 ff       	sbrs	r22, 0
    1942:	04 c0       	rjmp	.+8      	; 0x194c <__fp_round+0x20>
    1944:	6f 5f       	subi	r22, 0xFF	; 255
    1946:	7f 4f       	sbci	r23, 0xFF	; 255
    1948:	8f 4f       	sbci	r24, 0xFF	; 255
    194a:	9f 4f       	sbci	r25, 0xFF	; 255
    194c:	08 95       	ret

0000194e <__fp_split3>:
    194e:	57 fd       	sbrc	r21, 7
    1950:	90 58       	subi	r25, 0x80	; 128
    1952:	44 0f       	add	r20, r20
    1954:	55 1f       	adc	r21, r21
    1956:	59 f0       	breq	.+22     	; 0x196e <__fp_splitA+0x10>
    1958:	5f 3f       	cpi	r21, 0xFF	; 255
    195a:	71 f0       	breq	.+28     	; 0x1978 <__fp_splitA+0x1a>
    195c:	47 95       	ror	r20

0000195e <__fp_splitA>:
    195e:	88 0f       	add	r24, r24
    1960:	97 fb       	bst	r25, 7
    1962:	99 1f       	adc	r25, r25
    1964:	61 f0       	breq	.+24     	; 0x197e <__fp_splitA+0x20>
    1966:	9f 3f       	cpi	r25, 0xFF	; 255
    1968:	79 f0       	breq	.+30     	; 0x1988 <__fp_splitA+0x2a>
    196a:	87 95       	ror	r24
    196c:	08 95       	ret
    196e:	12 16       	cp	r1, r18
    1970:	13 06       	cpc	r1, r19
    1972:	14 06       	cpc	r1, r20
    1974:	55 1f       	adc	r21, r21
    1976:	f2 cf       	rjmp	.-28     	; 0x195c <__fp_split3+0xe>
    1978:	46 95       	lsr	r20
    197a:	f1 df       	rcall	.-30     	; 0x195e <__fp_splitA>
    197c:	08 c0       	rjmp	.+16     	; 0x198e <__fp_splitA+0x30>
    197e:	16 16       	cp	r1, r22
    1980:	17 06       	cpc	r1, r23
    1982:	18 06       	cpc	r1, r24
    1984:	99 1f       	adc	r25, r25
    1986:	f1 cf       	rjmp	.-30     	; 0x196a <__fp_splitA+0xc>
    1988:	86 95       	lsr	r24
    198a:	71 05       	cpc	r23, r1
    198c:	61 05       	cpc	r22, r1
    198e:	08 94       	sec
    1990:	08 95       	ret

00001992 <__fp_zero>:
    1992:	e8 94       	clt

00001994 <__fp_szero>:
    1994:	bb 27       	eor	r27, r27
    1996:	66 27       	eor	r22, r22
    1998:	77 27       	eor	r23, r23
    199a:	cb 01       	movw	r24, r22
    199c:	97 f9       	bld	r25, 7
    199e:	08 95       	ret

000019a0 <__mulsf3>:
    19a0:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <__mulsf3x>
    19a4:	0c 94 96 0c 	jmp	0x192c	; 0x192c <__fp_round>
    19a8:	0e 94 88 0c 	call	0x1910	; 0x1910 <__fp_pscA>
    19ac:	38 f0       	brcs	.+14     	; 0x19bc <__mulsf3+0x1c>
    19ae:	0e 94 8f 0c 	call	0x191e	; 0x191e <__fp_pscB>
    19b2:	20 f0       	brcs	.+8      	; 0x19bc <__mulsf3+0x1c>
    19b4:	95 23       	and	r25, r21
    19b6:	11 f0       	breq	.+4      	; 0x19bc <__mulsf3+0x1c>
    19b8:	0c 94 7f 0c 	jmp	0x18fe	; 0x18fe <__fp_inf>
    19bc:	0c 94 85 0c 	jmp	0x190a	; 0x190a <__fp_nan>
    19c0:	11 24       	eor	r1, r1
    19c2:	0c 94 ca 0c 	jmp	0x1994	; 0x1994 <__fp_szero>

000019c6 <__mulsf3x>:
    19c6:	0e 94 a7 0c 	call	0x194e	; 0x194e <__fp_split3>
    19ca:	70 f3       	brcs	.-36     	; 0x19a8 <__mulsf3+0x8>

000019cc <__mulsf3_pse>:
    19cc:	95 9f       	mul	r25, r21
    19ce:	c1 f3       	breq	.-16     	; 0x19c0 <__mulsf3+0x20>
    19d0:	95 0f       	add	r25, r21
    19d2:	50 e0       	ldi	r21, 0x00	; 0
    19d4:	55 1f       	adc	r21, r21
    19d6:	62 9f       	mul	r22, r18
    19d8:	f0 01       	movw	r30, r0
    19da:	72 9f       	mul	r23, r18
    19dc:	bb 27       	eor	r27, r27
    19de:	f0 0d       	add	r31, r0
    19e0:	b1 1d       	adc	r27, r1
    19e2:	63 9f       	mul	r22, r19
    19e4:	aa 27       	eor	r26, r26
    19e6:	f0 0d       	add	r31, r0
    19e8:	b1 1d       	adc	r27, r1
    19ea:	aa 1f       	adc	r26, r26
    19ec:	64 9f       	mul	r22, r20
    19ee:	66 27       	eor	r22, r22
    19f0:	b0 0d       	add	r27, r0
    19f2:	a1 1d       	adc	r26, r1
    19f4:	66 1f       	adc	r22, r22
    19f6:	82 9f       	mul	r24, r18
    19f8:	22 27       	eor	r18, r18
    19fa:	b0 0d       	add	r27, r0
    19fc:	a1 1d       	adc	r26, r1
    19fe:	62 1f       	adc	r22, r18
    1a00:	73 9f       	mul	r23, r19
    1a02:	b0 0d       	add	r27, r0
    1a04:	a1 1d       	adc	r26, r1
    1a06:	62 1f       	adc	r22, r18
    1a08:	83 9f       	mul	r24, r19
    1a0a:	a0 0d       	add	r26, r0
    1a0c:	61 1d       	adc	r22, r1
    1a0e:	22 1f       	adc	r18, r18
    1a10:	74 9f       	mul	r23, r20
    1a12:	33 27       	eor	r19, r19
    1a14:	a0 0d       	add	r26, r0
    1a16:	61 1d       	adc	r22, r1
    1a18:	23 1f       	adc	r18, r19
    1a1a:	84 9f       	mul	r24, r20
    1a1c:	60 0d       	add	r22, r0
    1a1e:	21 1d       	adc	r18, r1
    1a20:	82 2f       	mov	r24, r18
    1a22:	76 2f       	mov	r23, r22
    1a24:	6a 2f       	mov	r22, r26
    1a26:	11 24       	eor	r1, r1
    1a28:	9f 57       	subi	r25, 0x7F	; 127
    1a2a:	50 40       	sbci	r21, 0x00	; 0
    1a2c:	9a f0       	brmi	.+38     	; 0x1a54 <__mulsf3_pse+0x88>
    1a2e:	f1 f0       	breq	.+60     	; 0x1a6c <__mulsf3_pse+0xa0>
    1a30:	88 23       	and	r24, r24
    1a32:	4a f0       	brmi	.+18     	; 0x1a46 <__mulsf3_pse+0x7a>
    1a34:	ee 0f       	add	r30, r30
    1a36:	ff 1f       	adc	r31, r31
    1a38:	bb 1f       	adc	r27, r27
    1a3a:	66 1f       	adc	r22, r22
    1a3c:	77 1f       	adc	r23, r23
    1a3e:	88 1f       	adc	r24, r24
    1a40:	91 50       	subi	r25, 0x01	; 1
    1a42:	50 40       	sbci	r21, 0x00	; 0
    1a44:	a9 f7       	brne	.-22     	; 0x1a30 <__mulsf3_pse+0x64>
    1a46:	9e 3f       	cpi	r25, 0xFE	; 254
    1a48:	51 05       	cpc	r21, r1
    1a4a:	80 f0       	brcs	.+32     	; 0x1a6c <__mulsf3_pse+0xa0>
    1a4c:	0c 94 7f 0c 	jmp	0x18fe	; 0x18fe <__fp_inf>
    1a50:	0c 94 ca 0c 	jmp	0x1994	; 0x1994 <__fp_szero>
    1a54:	5f 3f       	cpi	r21, 0xFF	; 255
    1a56:	e4 f3       	brlt	.-8      	; 0x1a50 <__mulsf3_pse+0x84>
    1a58:	98 3e       	cpi	r25, 0xE8	; 232
    1a5a:	d4 f3       	brlt	.-12     	; 0x1a50 <__mulsf3_pse+0x84>
    1a5c:	86 95       	lsr	r24
    1a5e:	77 95       	ror	r23
    1a60:	67 95       	ror	r22
    1a62:	b7 95       	ror	r27
    1a64:	f7 95       	ror	r31
    1a66:	e7 95       	ror	r30
    1a68:	9f 5f       	subi	r25, 0xFF	; 255
    1a6a:	c1 f7       	brne	.-16     	; 0x1a5c <__mulsf3_pse+0x90>
    1a6c:	fe 2b       	or	r31, r30
    1a6e:	88 0f       	add	r24, r24
    1a70:	91 1d       	adc	r25, r1
    1a72:	96 95       	lsr	r25
    1a74:	87 95       	ror	r24
    1a76:	97 f9       	bld	r25, 7
    1a78:	08 95       	ret

00001a7a <_ZN15OrangutanAnalog7setModeEh.part.0>:
    1a7a:	ec e7       	ldi	r30, 0x7C	; 124
    1a7c:	f0 e0       	ldi	r31, 0x00	; 0
    1a7e:	80 81       	ld	r24, Z
    1a80:	8f 7d       	andi	r24, 0xDF	; 223
    1a82:	80 83       	st	Z, r24
    1a84:	08 95       	ret

00001a86 <_ZN15OrangutanAnalog7setModeEh>:
    1a86:	81 11       	cpse	r24, r1
    1a88:	03 c0       	rjmp	.+6      	; 0x1a90 <_ZN15OrangutanAnalog7setModeEh+0xa>
    1a8a:	0e 94 3d 0d 	call	0x1a7a	; 0x1a7a <_ZN15OrangutanAnalog7setModeEh.part.0>
    1a8e:	08 95       	ret
    1a90:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1a94:	80 62       	ori	r24, 0x20	; 32
    1a96:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1a9a:	08 95       	ret

00001a9c <_ZN15OrangutanAnalog7getModeEv>:
    1a9c:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1aa0:	85 fb       	bst	r24, 5
    1aa2:	88 27       	eor	r24, r24
    1aa4:	80 f9       	bld	r24, 0
    1aa6:	08 95       	ret

00001aa8 <_ZN15OrangutanAnalog16conversionResultEv>:
    1aa8:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <_ZN15OrangutanAnalog7getModeEv>
    1aac:	88 23       	and	r24, r24
    1aae:	21 f0       	breq	.+8      	; 0x1ab8 <_ZN15OrangutanAnalog16conversionResultEv+0x10>
    1ab0:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1ab4:	90 e0       	ldi	r25, 0x00	; 0
    1ab6:	08 95       	ret
    1ab8:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    1abc:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1ac0:	08 95       	ret

00001ac2 <_ZN15OrangutanAnalog15startConversionEhh>:
    1ac2:	80 32       	cpi	r24, 0x20	; 32
    1ac4:	a0 f4       	brcc	.+40     	; 0x1aee <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
    1ac6:	97 e8       	ldi	r25, 0x87	; 135
    1ac8:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1acc:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1ad0:	66 23       	and	r22, r22
    1ad2:	11 f0       	breq	.+4      	; 0x1ad8 <_ZN15OrangutanAnalog15startConversionEhh+0x16>
    1ad4:	90 6c       	ori	r25, 0xC0	; 192
    1ad6:	02 c0       	rjmp	.+4      	; 0x1adc <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
    1ad8:	9f 77       	andi	r25, 0x7F	; 127
    1ada:	90 64       	ori	r25, 0x40	; 64
    1adc:	90 7e       	andi	r25, 0xE0	; 224
    1ade:	98 2b       	or	r25, r24
    1ae0:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1ae4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1ae8:	80 64       	ori	r24, 0x40	; 64
    1aea:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1aee:	08 95       	ret

00001af0 <_ZN15OrangutanAnalog4readEh>:
    1af0:	60 e0       	ldi	r22, 0x00	; 0
    1af2:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <_ZN15OrangutanAnalog15startConversionEhh>
    1af6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1afa:	86 fd       	sbrc	r24, 6
    1afc:	fc cf       	rjmp	.-8      	; 0x1af6 <_ZN15OrangutanAnalog4readEh+0x6>
    1afe:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <_ZN15OrangutanAnalog16conversionResultEv>
    1b02:	08 95       	ret

00001b04 <analog_read>:
    1b04:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <_ZN15OrangutanAnalog4readEh>
    1b08:	08 95       	ret

00001b0a <_ZN15OrangutanAnalog11readAverageEhj>:
    1b0a:	a0 e0       	ldi	r26, 0x00	; 0
    1b0c:	b0 e0       	ldi	r27, 0x00	; 0
    1b0e:	eb e8       	ldi	r30, 0x8B	; 139
    1b10:	fd e0       	ldi	r31, 0x0D	; 13
    1b12:	0c 94 d2 1b 	jmp	0x37a4	; 0x37a4 <__prologue_saves__+0x14>
    1b16:	eb 01       	movw	r28, r22
    1b18:	60 e0       	ldi	r22, 0x00	; 0
    1b1a:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <_ZN15OrangutanAnalog15startConversionEhh>
    1b1e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1b22:	86 fd       	sbrc	r24, 6
    1b24:	fc cf       	rjmp	.-8      	; 0x1b1e <_ZN15OrangutanAnalog11readAverageEhj+0x14>
    1b26:	8e 01       	movw	r16, r28
    1b28:	c1 2c       	mov	r12, r1
    1b2a:	d1 2c       	mov	r13, r1
    1b2c:	76 01       	movw	r14, r12
    1b2e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1b32:	80 64       	ori	r24, 0x40	; 64
    1b34:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1b38:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1b3c:	86 fd       	sbrc	r24, 6
    1b3e:	fc cf       	rjmp	.-8      	; 0x1b38 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
    1b40:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <_ZN15OrangutanAnalog16conversionResultEv>
    1b44:	c8 0e       	add	r12, r24
    1b46:	d9 1e       	adc	r13, r25
    1b48:	e1 1c       	adc	r14, r1
    1b4a:	f1 1c       	adc	r15, r1
    1b4c:	01 50       	subi	r16, 0x01	; 1
    1b4e:	11 09       	sbc	r17, r1
    1b50:	01 15       	cp	r16, r1
    1b52:	11 05       	cpc	r17, r1
    1b54:	61 f7       	brne	.-40     	; 0x1b2e <_ZN15OrangutanAnalog11readAverageEhj+0x24>
    1b56:	ce 01       	movw	r24, r28
    1b58:	96 95       	lsr	r25
    1b5a:	87 95       	ror	r24
    1b5c:	c0 34       	cpi	r28, 0x40	; 64
    1b5e:	d1 05       	cpc	r29, r1
    1b60:	38 f4       	brcc	.+14     	; 0x1b70 <_ZN15OrangutanAnalog11readAverageEhj+0x66>
    1b62:	8c 0d       	add	r24, r12
    1b64:	9d 1d       	adc	r25, r13
    1b66:	be 01       	movw	r22, r28
    1b68:	0e 94 37 1b 	call	0x366e	; 0x366e <__udivmodhi4>
    1b6c:	cb 01       	movw	r24, r22
    1b6e:	0e c0       	rjmp	.+28     	; 0x1b8c <_ZN15OrangutanAnalog11readAverageEhj+0x82>
    1b70:	a7 01       	movw	r20, r14
    1b72:	96 01       	movw	r18, r12
    1b74:	28 0f       	add	r18, r24
    1b76:	39 1f       	adc	r19, r25
    1b78:	41 1d       	adc	r20, r1
    1b7a:	51 1d       	adc	r21, r1
    1b7c:	ca 01       	movw	r24, r20
    1b7e:	b9 01       	movw	r22, r18
    1b80:	9e 01       	movw	r18, r28
    1b82:	40 e0       	ldi	r20, 0x00	; 0
    1b84:	50 e0       	ldi	r21, 0x00	; 0
    1b86:	0e 94 5f 1b 	call	0x36be	; 0x36be <__udivmodsi4>
    1b8a:	c9 01       	movw	r24, r18
    1b8c:	cd b7       	in	r28, 0x3d	; 61
    1b8e:	de b7       	in	r29, 0x3e	; 62
    1b90:	e8 e0       	ldi	r30, 0x08	; 8
    1b92:	0c 94 ee 1b 	jmp	0x37dc	; 0x37dc <__epilogue_restores__+0x14>

00001b96 <_ZN15OrangutanAnalog12toMillivoltsEj>:
    1b96:	cf 92       	push	r12
    1b98:	df 92       	push	r13
    1b9a:	ef 92       	push	r14
    1b9c:	ff 92       	push	r15
    1b9e:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ba2:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ba6:	9c 01       	movw	r18, r24
    1ba8:	0e 94 a6 1b 	call	0x374c	; 0x374c <__umulhisi3>
    1bac:	6b 01       	movw	r12, r22
    1bae:	7c 01       	movw	r14, r24
    1bb0:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <_ZN15OrangutanAnalog7getModeEv>
    1bb4:	88 23       	and	r24, r24
    1bb6:	59 f0       	breq	.+22     	; 0x1bce <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
    1bb8:	c7 01       	movw	r24, r14
    1bba:	b6 01       	movw	r22, r12
    1bbc:	61 58       	subi	r22, 0x81	; 129
    1bbe:	7f 4f       	sbci	r23, 0xFF	; 255
    1bc0:	8f 4f       	sbci	r24, 0xFF	; 255
    1bc2:	9f 4f       	sbci	r25, 0xFF	; 255
    1bc4:	2f ef       	ldi	r18, 0xFF	; 255
    1bc6:	30 e0       	ldi	r19, 0x00	; 0
    1bc8:	40 e0       	ldi	r20, 0x00	; 0
    1bca:	50 e0       	ldi	r21, 0x00	; 0
    1bcc:	0a c0       	rjmp	.+20     	; 0x1be2 <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
    1bce:	c7 01       	movw	r24, r14
    1bd0:	b6 01       	movw	r22, r12
    1bd2:	61 50       	subi	r22, 0x01	; 1
    1bd4:	7e 4f       	sbci	r23, 0xFE	; 254
    1bd6:	8f 4f       	sbci	r24, 0xFF	; 255
    1bd8:	9f 4f       	sbci	r25, 0xFF	; 255
    1bda:	2f ef       	ldi	r18, 0xFF	; 255
    1bdc:	33 e0       	ldi	r19, 0x03	; 3
    1bde:	40 e0       	ldi	r20, 0x00	; 0
    1be0:	50 e0       	ldi	r21, 0x00	; 0
    1be2:	0e 94 5f 1b 	call	0x36be	; 0x36be <__udivmodsi4>
    1be6:	c9 01       	movw	r24, r18
    1be8:	ff 90       	pop	r15
    1bea:	ef 90       	pop	r14
    1bec:	df 90       	pop	r13
    1bee:	cf 90       	pop	r12
    1bf0:	08 95       	ret

00001bf2 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
    1bf2:	0e 94 85 0d 	call	0x1b0a	; 0x1b0a <_ZN15OrangutanAnalog11readAverageEhj>
    1bf6:	0e 94 cb 0d 	call	0x1b96	; 0x1b96 <_ZN15OrangutanAnalog12toMillivoltsEj>
    1bfa:	08 95       	ret

00001bfc <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
    1bfc:	1f 93       	push	r17
    1bfe:	cf 93       	push	r28
    1c00:	df 93       	push	r29
    1c02:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <_ZN15OrangutanAnalog7getModeEv>
    1c06:	18 2f       	mov	r17, r24
    1c08:	0e 94 3d 0d 	call	0x1a7a	; 0x1a7a <_ZN15OrangutanAnalog7setModeEh.part.0>
    1c0c:	6a e0       	ldi	r22, 0x0A	; 10
    1c0e:	70 e0       	ldi	r23, 0x00	; 0
    1c10:	86 e0       	ldi	r24, 0x06	; 6
    1c12:	0e 94 f9 0d 	call	0x1bf2	; 0x1bf2 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
    1c16:	ec 01       	movw	r28, r24
    1c18:	81 2f       	mov	r24, r17
    1c1a:	0e 94 43 0d 	call	0x1a86	; 0x1a86 <_ZN15OrangutanAnalog7setModeEh>
    1c1e:	ce 01       	movw	r24, r28
    1c20:	88 0f       	add	r24, r24
    1c22:	99 1f       	adc	r25, r25
    1c24:	8c 0f       	add	r24, r28
    1c26:	9d 1f       	adc	r25, r29
    1c28:	01 96       	adiw	r24, 0x01	; 1
    1c2a:	96 95       	lsr	r25
    1c2c:	87 95       	ror	r24
    1c2e:	df 91       	pop	r29
    1c30:	cf 91       	pop	r28
    1c32:	1f 91       	pop	r17
    1c34:	08 95       	ret

00001c36 <read_battery_millivolts_3pi>:
    1c36:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
    1c3a:	08 95       	ret

00001c3c <_ZL16currentCharacterv>:
    1c3c:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <_ZL17use_program_space>
    1c40:	e0 91 94 01 	lds	r30, 0x0194	; 0x800194 <__data_end>
    1c44:	f0 91 95 01 	lds	r31, 0x0195	; 0x800195 <__data_end+0x1>
    1c48:	99 23       	and	r25, r25
    1c4a:	11 f0       	breq	.+4      	; 0x1c50 <_ZL16currentCharacterv+0x14>
    1c4c:	84 91       	lpm	r24, Z
    1c4e:	01 c0       	rjmp	.+2      	; 0x1c52 <_ZL16currentCharacterv+0x16>
    1c50:	80 81       	ld	r24, Z
    1c52:	2f eb       	ldi	r18, 0xBF	; 191
    1c54:	28 0f       	add	r18, r24
    1c56:	2a 31       	cpi	r18, 0x1A	; 26
    1c58:	10 f4       	brcc	.+4      	; 0x1c5e <_ZL16currentCharacterv+0x22>
    1c5a:	80 5e       	subi	r24, 0xE0	; 224
    1c5c:	08 95       	ret
    1c5e:	80 32       	cpi	r24, 0x20	; 32
    1c60:	49 f4       	brne	.+18     	; 0x1c74 <_ZL16currentCharacterv+0x38>
    1c62:	9f 01       	movw	r18, r30
    1c64:	2f 5f       	subi	r18, 0xFF	; 255
    1c66:	3f 4f       	sbci	r19, 0xFF	; 255
    1c68:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    1c6c:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    1c70:	ef 2b       	or	r30, r31
    1c72:	31 f7       	brne	.-52     	; 0x1c40 <_ZL16currentCharacterv+0x4>
    1c74:	08 95       	ret

00001c76 <_ZL9getNumberv>:
    1c76:	1f 93       	push	r17
    1c78:	cf 93       	push	r28
    1c7a:	df 93       	push	r29
    1c7c:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <_ZL16currentCharacterv>
    1c80:	c0 e0       	ldi	r28, 0x00	; 0
    1c82:	d0 e0       	ldi	r29, 0x00	; 0
    1c84:	1a e0       	ldi	r17, 0x0A	; 10
    1c86:	90 ed       	ldi	r25, 0xD0	; 208
    1c88:	98 0f       	add	r25, r24
    1c8a:	9a 30       	cpi	r25, 0x0A	; 10
    1c8c:	b8 f4       	brcc	.+46     	; 0x1cbc <_ZL9getNumberv+0x46>
    1c8e:	9e 01       	movw	r18, r28
    1c90:	12 9f       	mul	r17, r18
    1c92:	e0 01       	movw	r28, r0
    1c94:	13 9f       	mul	r17, r19
    1c96:	d0 0d       	add	r29, r0
    1c98:	11 24       	eor	r1, r1
    1c9a:	c8 0f       	add	r28, r24
    1c9c:	d1 1d       	adc	r29, r1
    1c9e:	87 fd       	sbrc	r24, 7
    1ca0:	da 95       	dec	r29
    1ca2:	e0 97       	sbiw	r28, 0x30	; 48
    1ca4:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <__data_end>
    1ca8:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <__data_end+0x1>
    1cac:	01 96       	adiw	r24, 0x01	; 1
    1cae:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <__data_end+0x1>
    1cb2:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <__data_end>
    1cb6:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <_ZL16currentCharacterv>
    1cba:	e5 cf       	rjmp	.-54     	; 0x1c86 <_ZL9getNumberv+0x10>
    1cbc:	ce 01       	movw	r24, r28
    1cbe:	df 91       	pop	r29
    1cc0:	cf 91       	pop	r28
    1cc2:	1f 91       	pop	r17
    1cc4:	08 95       	ret

00001cc6 <_ZN15OrangutanBuzzer5init2Ev>:
    1cc6:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1cca:	83 e2       	ldi	r24, 0x23	; 35
    1ccc:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    1cd0:	81 e1       	ldi	r24, 0x11	; 17
    1cd2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1cd6:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7f8082>
    1cda:	80 e1       	ldi	r24, 0x10	; 16
    1cdc:	97 e2       	ldi	r25, 0x27	; 39
    1cde:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    1ce2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1ce6:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    1cea:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    1cee:	22 9a       	sbi	0x04, 2	; 4
    1cf0:	78 94       	sei
    1cf2:	08 95       	ret

00001cf4 <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
    1cf4:	8f 92       	push	r8
    1cf6:	9f 92       	push	r9
    1cf8:	af 92       	push	r10
    1cfa:	bf 92       	push	r11
    1cfc:	df 92       	push	r13
    1cfe:	ef 92       	push	r14
    1d00:	ff 92       	push	r15
    1d02:	0f 93       	push	r16
    1d04:	1f 93       	push	r17
    1d06:	cf 93       	push	r28
    1d08:	df 93       	push	r29
    1d0a:	5c 01       	movw	r10, r24
    1d0c:	8b 01       	movw	r16, r22
    1d0e:	d4 2e       	mov	r13, r20
    1d10:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <buzzerInitialized>
    1d14:	81 11       	cpse	r24, r1
    1d16:	05 c0       	rjmp	.+10     	; 0x1d22 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
    1d18:	81 e0       	ldi	r24, 0x01	; 1
    1d1a:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <buzzerInitialized>
    1d1e:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <_ZN15OrangutanBuzzer5init2Ev>
    1d22:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <buzzerFinished>
    1d26:	b7 fe       	sbrs	r11, 7
    1d28:	05 c0       	rjmp	.+10     	; 0x1d34 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
    1d2a:	e8 94       	clt
    1d2c:	b7 f8       	bld	r11, 7
    1d2e:	2a e0       	ldi	r18, 0x0A	; 10
    1d30:	f2 2e       	mov	r15, r18
    1d32:	02 c0       	rjmp	.+4      	; 0x1d38 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
    1d34:	ff 24       	eor	r15, r15
    1d36:	f3 94       	inc	r15
    1d38:	e0 90 81 00 	lds	r14, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1d3c:	2e 2d       	mov	r18, r14
    1d3e:	28 7f       	andi	r18, 0xF8	; 248
    1d40:	e2 2e       	mov	r14, r18
    1d42:	48 ec       	ldi	r20, 0xC8	; 200
    1d44:	f4 9e       	mul	r15, r20
    1d46:	c0 01       	movw	r24, r0
    1d48:	11 24       	eor	r1, r1
    1d4a:	8a 15       	cp	r24, r10
    1d4c:	9b 05       	cpc	r25, r11
    1d4e:	e0 f4       	brcc	.+56     	; 0x1d88 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
    1d50:	e5 01       	movw	r28, r10
    1d52:	51 e1       	ldi	r21, 0x11	; 17
    1d54:	a5 16       	cp	r10, r21
    1d56:	57 e2       	ldi	r21, 0x27	; 39
    1d58:	b5 06       	cpc	r11, r21
    1d5a:	10 f0       	brcs	.+4      	; 0x1d60 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
    1d5c:	c0 e1       	ldi	r28, 0x10	; 16
    1d5e:	d7 e2       	ldi	r29, 0x27	; 39
    1d60:	be 01       	movw	r22, r28
    1d62:	76 95       	lsr	r23
    1d64:	67 95       	ror	r22
    1d66:	80 e0       	ldi	r24, 0x00	; 0
    1d68:	90 e0       	ldi	r25, 0x00	; 0
    1d6a:	60 58       	subi	r22, 0x80	; 128
    1d6c:	79 46       	sbci	r23, 0x69	; 105
    1d6e:	87 46       	sbci	r24, 0x67	; 103
    1d70:	9f 4f       	sbci	r25, 0xFF	; 255
    1d72:	4e 01       	movw	r8, r28
    1d74:	a1 2c       	mov	r10, r1
    1d76:	b1 2c       	mov	r11, r1
    1d78:	a5 01       	movw	r20, r10
    1d7a:	94 01       	movw	r18, r8
    1d7c:	0e 94 5f 1b 	call	0x36be	; 0x36be <__udivmodsi4>
    1d80:	59 01       	movw	r10, r18
    1d82:	8e 2d       	mov	r24, r14
    1d84:	81 60       	ori	r24, 0x01	; 1
    1d86:	24 c0       	rjmp	.+72     	; 0x1dd0 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
    1d88:	c8 e2       	ldi	r28, 0x28	; 40
    1d8a:	fc 9e       	mul	r15, r28
    1d8c:	c0 2d       	mov	r28, r0
    1d8e:	11 24       	eor	r1, r1
    1d90:	d0 e0       	ldi	r29, 0x00	; 0
    1d92:	ca 15       	cp	r28, r10
    1d94:	db 05       	cpc	r29, r11
    1d96:	08 f4       	brcc	.+2      	; 0x1d9a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
    1d98:	e5 01       	movw	r28, r10
    1d9a:	be 01       	movw	r22, r28
    1d9c:	76 95       	lsr	r23
    1d9e:	67 95       	ror	r22
    1da0:	9e 01       	movw	r18, r28
    1da2:	40 e0       	ldi	r20, 0x00	; 0
    1da4:	50 e0       	ldi	r21, 0x00	; 0
    1da6:	8a e0       	ldi	r24, 0x0A	; 10
    1da8:	f8 12       	cpse	r15, r24
    1daa:	07 c0       	rjmp	.+14     	; 0x1dba <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
    1dac:	80 e0       	ldi	r24, 0x00	; 0
    1dae:	90 e0       	ldi	r25, 0x00	; 0
    1db0:	60 5e       	subi	r22, 0xE0	; 224
    1db2:	73 44       	sbci	r23, 0x43	; 67
    1db4:	81 44       	sbci	r24, 0x41	; 65
    1db6:	9f 4f       	sbci	r25, 0xFF	; 255
    1db8:	06 c0       	rjmp	.+12     	; 0x1dc6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
    1dba:	80 e0       	ldi	r24, 0x00	; 0
    1dbc:	90 e0       	ldi	r25, 0x00	; 0
    1dbe:	60 53       	subi	r22, 0x30	; 48
    1dc0:	7d 4e       	sbci	r23, 0xED	; 237
    1dc2:	8c 4e       	sbci	r24, 0xEC	; 236
    1dc4:	9f 4f       	sbci	r25, 0xFF	; 255
    1dc6:	0e 94 5f 1b 	call	0x36be	; 0x36be <__udivmodsi4>
    1dca:	59 01       	movw	r10, r18
    1dcc:	8e 2d       	mov	r24, r14
    1dce:	82 60       	ori	r24, 0x02	; 2
    1dd0:	88 2e       	mov	r8, r24
    1dd2:	2a e0       	ldi	r18, 0x0A	; 10
    1dd4:	f2 12       	cpse	r15, r18
    1dd6:	07 c0       	rjmp	.+14     	; 0x1de6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
    1dd8:	ce 01       	movw	r24, r28
    1dda:	05 96       	adiw	r24, 0x05	; 5
    1ddc:	6a e0       	ldi	r22, 0x0A	; 10
    1dde:	70 e0       	ldi	r23, 0x00	; 0
    1de0:	0e 94 37 1b 	call	0x366e	; 0x366e <__udivmodhi4>
    1de4:	eb 01       	movw	r28, r22
    1de6:	c8 3e       	cpi	r28, 0xE8	; 232
    1de8:	43 e0       	ldi	r20, 0x03	; 3
    1dea:	d4 07       	cpc	r29, r20
    1dec:	59 f0       	breq	.+22     	; 0x1e04 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
    1dee:	98 01       	movw	r18, r16
    1df0:	de 01       	movw	r26, r28
    1df2:	0e 94 a6 1b 	call	0x374c	; 0x374c <__umulhisi3>
    1df6:	28 ee       	ldi	r18, 0xE8	; 232
    1df8:	33 e0       	ldi	r19, 0x03	; 3
    1dfa:	40 e0       	ldi	r20, 0x00	; 0
    1dfc:	50 e0       	ldi	r21, 0x00	; 0
    1dfe:	0e 94 81 1b 	call	0x3702	; 0x3702 <__divmodsi4>
    1e02:	89 01       	movw	r16, r18
    1e04:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1e08:	80 92 81 00 	sts	0x0081, r8	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1e0c:	b0 92 89 00 	sts	0x0089, r11	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    1e10:	a0 92 88 00 	sts	0x0088, r10	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1e14:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1e18:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    1e1c:	4d 2d       	mov	r20, r13
    1e1e:	40 31       	cpi	r20, 0x10	; 16
    1e20:	08 f0       	brcs	.+2      	; 0x1e24 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
    1e22:	4f e0       	ldi	r20, 0x0F	; 15
    1e24:	80 e1       	ldi	r24, 0x10	; 16
    1e26:	90 e0       	ldi	r25, 0x00	; 0
    1e28:	84 1b       	sub	r24, r20
    1e2a:	91 09       	sbc	r25, r1
    1e2c:	a9 01       	movw	r20, r18
    1e2e:	02 c0       	rjmp	.+4      	; 0x1e34 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
    1e30:	56 95       	lsr	r21
    1e32:	47 95       	ror	r20
    1e34:	8a 95       	dec	r24
    1e36:	e2 f7       	brpl	.-8      	; 0x1e30 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
    1e38:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    1e3c:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    1e40:	10 93 9c 01 	sts	0x019C, r17	; 0x80019c <_ZL13buzzerTimeout+0x1>
    1e44:	00 93 9b 01 	sts	0x019B, r16	; 0x80019b <_ZL13buzzerTimeout>
    1e48:	86 b3       	in	r24, 0x16	; 22
    1e4a:	8f ef       	ldi	r24, 0xFF	; 255
    1e4c:	86 bb       	out	0x16, r24	; 22
    1e4e:	81 e0       	ldi	r24, 0x01	; 1
    1e50:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1e54:	df 91       	pop	r29
    1e56:	cf 91       	pop	r28
    1e58:	1f 91       	pop	r17
    1e5a:	0f 91       	pop	r16
    1e5c:	ff 90       	pop	r15
    1e5e:	ef 90       	pop	r14
    1e60:	df 90       	pop	r13
    1e62:	bf 90       	pop	r11
    1e64:	af 90       	pop	r10
    1e66:	9f 90       	pop	r9
    1e68:	8f 90       	pop	r8
    1e6a:	08 95       	ret

00001e6c <_ZN15OrangutanBuzzer8playNoteEhjh>:
    1e6c:	cf 93       	push	r28
    1e6e:	df 93       	push	r29
    1e70:	eb 01       	movw	r28, r22
    1e72:	8f 3f       	cpi	r24, 0xFF	; 255
    1e74:	11 f0       	breq	.+4      	; 0x1e7a <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
    1e76:	41 11       	cpse	r20, r1
    1e78:	05 c0       	rjmp	.+10     	; 0x1e84 <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
    1e7a:	40 e0       	ldi	r20, 0x00	; 0
    1e7c:	be 01       	movw	r22, r28
    1e7e:	88 ee       	ldi	r24, 0xE8	; 232
    1e80:	93 e0       	ldi	r25, 0x03	; 3
    1e82:	43 c0       	rjmp	.+134    	; 0x1f0a <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
    1e84:	81 31       	cpi	r24, 0x11	; 17
    1e86:	30 f0       	brcs	.+12     	; 0x1e94 <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
    1e88:	50 ef       	ldi	r21, 0xF0	; 240
    1e8a:	58 0f       	add	r21, r24
    1e8c:	50 36       	cpi	r21, 0x60	; 96
    1e8e:	18 f0       	brcs	.+6      	; 0x1e96 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    1e90:	5f e5       	ldi	r21, 0x5F	; 95
    1e92:	01 c0       	rjmp	.+2      	; 0x1e96 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    1e94:	50 e0       	ldi	r21, 0x00	; 0
    1e96:	85 2f       	mov	r24, r21
    1e98:	6c e0       	ldi	r22, 0x0C	; 12
    1e9a:	0e 94 2b 1b 	call	0x3656	; 0x3656 <__udivmodqi4>
    1e9e:	68 2f       	mov	r22, r24
    1ea0:	74 ef       	ldi	r23, 0xF4	; 244
    1ea2:	76 03       	mulsu	r23, r22
    1ea4:	90 01       	movw	r18, r0
    1ea6:	11 24       	eor	r1, r1
    1ea8:	25 0f       	add	r18, r21
    1eaa:	31 1d       	adc	r19, r1
    1eac:	2c 30       	cpi	r18, 0x0C	; 12
    1eae:	31 05       	cpc	r19, r1
    1eb0:	40 f4       	brcc	.+16     	; 0x1ec2 <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
    1eb2:	f9 01       	movw	r30, r18
    1eb4:	ee 0f       	add	r30, r30
    1eb6:	ff 1f       	adc	r31, r31
    1eb8:	e8 5c       	subi	r30, 0xC8	; 200
    1eba:	fe 4f       	sbci	r31, 0xFE	; 254
    1ebc:	20 81       	ld	r18, Z
    1ebe:	31 81       	ldd	r19, Z+1	; 0x01
    1ec0:	02 c0       	rjmp	.+4      	; 0x1ec6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
    1ec2:	20 e0       	ldi	r18, 0x00	; 0
    1ec4:	30 e0       	ldi	r19, 0x00	; 0
    1ec6:	87 30       	cpi	r24, 0x07	; 7
    1ec8:	81 f0       	breq	.+32     	; 0x1eea <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
    1eca:	08 2e       	mov	r0, r24
    1ecc:	02 c0       	rjmp	.+4      	; 0x1ed2 <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
    1ece:	22 0f       	add	r18, r18
    1ed0:	33 1f       	adc	r19, r19
    1ed2:	0a 94       	dec	r0
    1ed4:	e2 f7       	brpl	.-8      	; 0x1ece <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
    1ed6:	82 30       	cpi	r24, 0x02	; 2
    1ed8:	28 f0       	brcs	.+10     	; 0x1ee4 <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
    1eda:	c9 01       	movw	r24, r18
    1edc:	05 96       	adiw	r24, 0x05	; 5
    1ede:	6a e0       	ldi	r22, 0x0A	; 10
    1ee0:	70 e0       	ldi	r23, 0x00	; 0
    1ee2:	0c c0       	rjmp	.+24     	; 0x1efc <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
    1ee4:	c9 01       	movw	r24, r18
    1ee6:	90 58       	subi	r25, 0x80	; 128
    1ee8:	0c c0       	rjmp	.+24     	; 0x1f02 <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
    1eea:	c9 01       	movw	r24, r18
    1eec:	36 e0       	ldi	r19, 0x06	; 6
    1eee:	88 0f       	add	r24, r24
    1ef0:	99 1f       	adc	r25, r25
    1ef2:	3a 95       	dec	r19
    1ef4:	e1 f7       	brne	.-8      	; 0x1eee <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
    1ef6:	02 96       	adiw	r24, 0x02	; 2
    1ef8:	65 e0       	ldi	r22, 0x05	; 5
    1efa:	70 e0       	ldi	r23, 0x00	; 0
    1efc:	0e 94 37 1b 	call	0x366e	; 0x366e <__udivmodhi4>
    1f00:	cb 01       	movw	r24, r22
    1f02:	40 31       	cpi	r20, 0x10	; 16
    1f04:	08 f0       	brcs	.+2      	; 0x1f08 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
    1f06:	4f e0       	ldi	r20, 0x0F	; 15
    1f08:	be 01       	movw	r22, r28
    1f0a:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    1f0e:	df 91       	pop	r29
    1f10:	cf 91       	pop	r28
    1f12:	08 95       	ret

00001f14 <_ZL8nextNotev>:
    1f14:	a2 e0       	ldi	r26, 0x02	; 2
    1f16:	b0 e0       	ldi	r27, 0x00	; 0
    1f18:	e0 e9       	ldi	r30, 0x90	; 144
    1f1a:	ff e0       	ldi	r31, 0x0F	; 15
    1f1c:	0c 94 ca 1b 	jmp	0x3794	; 0x3794 <__prologue_saves__+0x4>
    1f20:	90 90 0a 01 	lds	r9, 0x010A	; 0x80010a <_ZL6octave>
    1f24:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <_ZL8staccato>
    1f28:	88 23       	and	r24, r24
    1f2a:	21 f0       	breq	.+8      	; 0x1f34 <_ZL8nextNotev+0x20>
    1f2c:	60 91 97 01 	lds	r22, 0x0197	; 0x800197 <_ZL22staccato_rest_duration>
    1f30:	61 11       	cpse	r22, r1
    1f32:	17 c0       	rjmp	.+46     	; 0x1f62 <_ZL8nextNotev+0x4e>
    1f34:	77 24       	eor	r7, r7
    1f36:	73 94       	inc	r7
    1f38:	b0 ec       	ldi	r27, 0xC0	; 192
    1f3a:	ab 2e       	mov	r10, r27
    1f3c:	bd e5       	ldi	r27, 0x5D	; 93
    1f3e:	bb 2e       	mov	r11, r27
    1f40:	1a e0       	ldi	r17, 0x0A	; 10
    1f42:	61 2e       	mov	r6, r17
    1f44:	04 e0       	ldi	r16, 0x04	; 4
    1f46:	80 2e       	mov	r8, r16
    1f48:	80 ed       	ldi	r24, 0xD0	; 208
    1f4a:	c8 2e       	mov	r12, r24
    1f4c:	87 e0       	ldi	r24, 0x07	; 7
    1f4e:	d8 2e       	mov	r13, r24
    1f50:	94 e0       	ldi	r25, 0x04	; 4
    1f52:	e9 2e       	mov	r14, r25
    1f54:	f1 2c       	mov	r15, r1
    1f56:	04 ef       	ldi	r16, 0xF4	; 244
    1f58:	11 e0       	ldi	r17, 0x01	; 1
    1f5a:	2f e0       	ldi	r18, 0x0F	; 15
    1f5c:	42 2e       	mov	r4, r18
    1f5e:	51 2c       	mov	r5, r1
    1f60:	15 c0       	rjmp	.+42     	; 0x1f8c <_ZL8nextNotev+0x78>
    1f62:	70 e0       	ldi	r23, 0x00	; 0
    1f64:	40 e0       	ldi	r20, 0x00	; 0
    1f66:	88 ee       	ldi	r24, 0xE8	; 232
    1f68:	93 e0       	ldi	r25, 0x03	; 3
    1f6a:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    1f6e:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_ZL22staccato_rest_duration>
    1f72:	17 c1       	rjmp	.+558    	; 0x21a2 <_ZL8nextNotev+0x28e>
    1f74:	86 36       	cpi	r24, 0x66	; 102
    1f76:	d4 f5       	brge	.+116    	; 0x1fec <_ZL8nextNotev+0xd8>
    1f78:	81 36       	cpi	r24, 0x61	; 97
    1f7a:	09 f4       	brne	.+2      	; 0x1f7e <_ZL8nextNotev+0x6a>
    1f7c:	a9 c0       	rjmp	.+338    	; 0x20d0 <_ZL8nextNotev+0x1bc>
    1f7e:	7c f5       	brge	.+94     	; 0x1fde <_ZL8nextNotev+0xca>
    1f80:	8c 33       	cpi	r24, 0x3C	; 60
    1f82:	09 f4       	brne	.+2      	; 0x1f86 <_ZL8nextNotev+0x72>
    1f84:	60 c0       	rjmp	.+192    	; 0x2046 <_ZL8nextNotev+0x132>
    1f86:	8e 33       	cpi	r24, 0x3E	; 62
    1f88:	81 f4       	brne	.+32     	; 0x1faa <_ZL8nextNotev+0x96>
    1f8a:	93 94       	inc	r9
    1f8c:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <_ZL16currentCharacterv>
    1f90:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    1f94:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    1f98:	2f 5f       	subi	r18, 0xFF	; 255
    1f9a:	3f 4f       	sbci	r19, 0xFF	; 255
    1f9c:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    1fa0:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    1fa4:	85 36       	cpi	r24, 0x65	; 101
    1fa6:	31 f7       	brne	.-52     	; 0x1f74 <_ZL8nextNotev+0x60>
    1fa8:	52 c0       	rjmp	.+164    	; 0x204e <_ZL8nextNotev+0x13a>
    1faa:	81 32       	cpi	r24, 0x21	; 33
    1fac:	09 f0       	breq	.+2      	; 0x1fb0 <_ZL8nextNotev+0x9c>
    1fae:	8b c0       	rjmp	.+278    	; 0x20c6 <_ZL8nextNotev+0x1b2>
    1fb0:	80 92 0a 01 	sts	0x010A, r8	; 0x80010a <_ZL6octave>
    1fb4:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <_ZL19whole_note_duration+0x1>
    1fb8:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <_ZL19whole_note_duration>
    1fbc:	f0 92 07 01 	sts	0x0107, r15	; 0x800107 <_ZL9note_type+0x1>
    1fc0:	e0 92 06 01 	sts	0x0106, r14	; 0x800106 <_ZL9note_type>
    1fc4:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <_ZL8duration+0x1>
    1fc8:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <_ZL8duration>
    1fcc:	50 92 03 01 	sts	0x0103, r5	; 0x800103 <_ZL6volume+0x1>
    1fd0:	40 92 02 01 	sts	0x0102, r4	; 0x800102 <_ZL6volume>
    1fd4:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <_ZL8staccato>
    1fd8:	a4 e0       	ldi	r26, 0x04	; 4
    1fda:	9a 2e       	mov	r9, r26
    1fdc:	d7 cf       	rjmp	.-82     	; 0x1f8c <_ZL8nextNotev+0x78>
    1fde:	83 36       	cpi	r24, 0x63	; 99
    1fe0:	a1 f1       	breq	.+104    	; 0x204a <_ZL8nextNotev+0x136>
    1fe2:	0c f4       	brge	.+2      	; 0x1fe6 <_ZL8nextNotev+0xd2>
    1fe4:	78 c0       	rjmp	.+240    	; 0x20d6 <_ZL8nextNotev+0x1c2>
    1fe6:	10 e0       	ldi	r17, 0x00	; 0
    1fe8:	82 e0       	ldi	r24, 0x02	; 2
    1fea:	77 c0       	rjmp	.+238    	; 0x20da <_ZL8nextNotev+0x1c6>
    1fec:	8d 36       	cpi	r24, 0x6D	; 109
    1fee:	c1 f1       	breq	.+112    	; 0x2060 <_ZL8nextNotev+0x14c>
    1ff0:	94 f4       	brge	.+36     	; 0x2016 <_ZL8nextNotev+0x102>
    1ff2:	87 36       	cpi	r24, 0x67	; 103
    1ff4:	91 f1       	breq	.+100    	; 0x205a <_ZL8nextNotev+0x146>
    1ff6:	74 f1       	brlt	.+92     	; 0x2054 <_ZL8nextNotev+0x140>
    1ff8:	8c 36       	cpi	r24, 0x6C	; 108
    1ffa:	09 f0       	breq	.+2      	; 0x1ffe <_ZL8nextNotev+0xea>
    1ffc:	64 c0       	rjmp	.+200    	; 0x20c6 <_ZL8nextNotev+0x1b2>
    1ffe:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <_ZL9getNumberv>
    2002:	bc 01       	movw	r22, r24
    2004:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_ZL9note_type+0x1>
    2008:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_ZL9note_type>
    200c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    2010:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    2014:	51 c0       	rjmp	.+162    	; 0x20b8 <_ZL8nextNotev+0x1a4>
    2016:	82 37       	cpi	r24, 0x72	; 114
    2018:	c9 f1       	breq	.+114    	; 0x208c <_ZL8nextNotev+0x178>
    201a:	4c f4       	brge	.+18     	; 0x202e <_ZL8nextNotev+0x11a>
    201c:	8f 36       	cpi	r24, 0x6F	; 111
    201e:	09 f0       	breq	.+2      	; 0x2022 <_ZL8nextNotev+0x10e>
    2020:	52 c0       	rjmp	.+164    	; 0x20c6 <_ZL8nextNotev+0x1b2>
    2022:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <_ZL9getNumberv>
    2026:	98 2e       	mov	r9, r24
    2028:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_ZL6octave>
    202c:	af cf       	rjmp	.-162    	; 0x1f8c <_ZL8nextNotev+0x78>
    202e:	84 37       	cpi	r24, 0x74	; 116
    2030:	81 f1       	breq	.+96     	; 0x2092 <_ZL8nextNotev+0x17e>
    2032:	86 37       	cpi	r24, 0x76	; 118
    2034:	09 f0       	breq	.+2      	; 0x2038 <_ZL8nextNotev+0x124>
    2036:	47 c0       	rjmp	.+142    	; 0x20c6 <_ZL8nextNotev+0x1b2>
    2038:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <_ZL9getNumberv>
    203c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_ZL6volume+0x1>
    2040:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_ZL6volume>
    2044:	a3 cf       	rjmp	.-186    	; 0x1f8c <_ZL8nextNotev+0x78>
    2046:	9a 94       	dec	r9
    2048:	a1 cf       	rjmp	.-190    	; 0x1f8c <_ZL8nextNotev+0x78>
    204a:	10 e0       	ldi	r17, 0x00	; 0
    204c:	20 c0       	rjmp	.+64     	; 0x208e <_ZL8nextNotev+0x17a>
    204e:	10 e0       	ldi	r17, 0x00	; 0
    2050:	84 e0       	ldi	r24, 0x04	; 4
    2052:	43 c0       	rjmp	.+134    	; 0x20da <_ZL8nextNotev+0x1c6>
    2054:	10 e0       	ldi	r17, 0x00	; 0
    2056:	85 e0       	ldi	r24, 0x05	; 5
    2058:	40 c0       	rjmp	.+128    	; 0x20da <_ZL8nextNotev+0x1c6>
    205a:	10 e0       	ldi	r17, 0x00	; 0
    205c:	87 e0       	ldi	r24, 0x07	; 7
    205e:	3d c0       	rjmp	.+122    	; 0x20da <_ZL8nextNotev+0x1c6>
    2060:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <_ZL16currentCharacterv>
    2064:	8c 36       	cpi	r24, 0x6C	; 108
    2066:	19 f4       	brne	.+6      	; 0x206e <_ZL8nextNotev+0x15a>
    2068:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <_ZL8staccato>
    206c:	04 c0       	rjmp	.+8      	; 0x2076 <_ZL8nextNotev+0x162>
    206e:	70 92 98 01 	sts	0x0198, r7	; 0x800198 <_ZL8staccato>
    2072:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_ZL22staccato_rest_duration>
    2076:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    207a:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    207e:	2f 5f       	subi	r18, 0xFF	; 255
    2080:	3f 4f       	sbci	r19, 0xFF	; 255
    2082:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    2086:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    208a:	80 cf       	rjmp	.-256    	; 0x1f8c <_ZL8nextNotev+0x78>
    208c:	11 e0       	ldi	r17, 0x01	; 1
    208e:	80 e0       	ldi	r24, 0x00	; 0
    2090:	24 c0       	rjmp	.+72     	; 0x20da <_ZL8nextNotev+0x1c6>
    2092:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <_ZL9getNumberv>
    2096:	bc 01       	movw	r22, r24
    2098:	c5 01       	movw	r24, r10
    209a:	0e 94 37 1b 	call	0x366e	; 0x366e <__udivmodhi4>
    209e:	66 9e       	mul	r6, r22
    20a0:	c0 01       	movw	r24, r0
    20a2:	67 9e       	mul	r6, r23
    20a4:	90 0d       	add	r25, r0
    20a6:	11 24       	eor	r1, r1
    20a8:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_ZL19whole_note_duration+0x1>
    20ac:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_ZL19whole_note_duration>
    20b0:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <_ZL9note_type>
    20b4:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <_ZL9note_type+0x1>
    20b8:	0e 94 37 1b 	call	0x366e	; 0x366e <__udivmodhi4>
    20bc:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_ZL8duration+0x1>
    20c0:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_ZL8duration>
    20c4:	63 cf       	rjmp	.-314    	; 0x1f8c <_ZL8nextNotev+0x78>
    20c6:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <__data_end+0x1>
    20ca:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <__data_end>
    20ce:	69 c0       	rjmp	.+210    	; 0x21a2 <_ZL8nextNotev+0x28e>
    20d0:	10 e0       	ldi	r17, 0x00	; 0
    20d2:	89 e0       	ldi	r24, 0x09	; 9
    20d4:	02 c0       	rjmp	.+4      	; 0x20da <_ZL8nextNotev+0x1c6>
    20d6:	10 e0       	ldi	r17, 0x00	; 0
    20d8:	8b e0       	ldi	r24, 0x0B	; 11
    20da:	08 2f       	mov	r16, r24
    20dc:	9c e0       	ldi	r25, 0x0C	; 12
    20de:	99 9e       	mul	r9, r25
    20e0:	00 0d       	add	r16, r0
    20e2:	11 24       	eor	r1, r1
    20e4:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <_ZL16currentCharacterv>
    20e8:	98 2f       	mov	r25, r24
    20ea:	97 7f       	andi	r25, 0xF7	; 247
    20ec:	93 32       	cpi	r25, 0x23	; 35
    20ee:	61 f4       	brne	.+24     	; 0x2108 <_ZL8nextNotev+0x1f4>
    20f0:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    20f4:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    20f8:	2f 5f       	subi	r18, 0xFF	; 255
    20fa:	3f 4f       	sbci	r19, 0xFF	; 255
    20fc:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    2100:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    2104:	0f 5f       	subi	r16, 0xFF	; 255
    2106:	ee cf       	rjmp	.-36     	; 0x20e4 <_ZL8nextNotev+0x1d0>
    2108:	8d 32       	cpi	r24, 0x2D	; 45
    210a:	71 f4       	brne	.+28     	; 0x2128 <_ZL8nextNotev+0x214>
    210c:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    2110:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    2114:	2f 5f       	subi	r18, 0xFF	; 255
    2116:	3f 4f       	sbci	r19, 0xFF	; 255
    2118:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    211c:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    2120:	01 50       	subi	r16, 0x01	; 1
    2122:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <_ZL16currentCharacterv>
    2126:	f0 cf       	rjmp	.-32     	; 0x2108 <_ZL8nextNotev+0x1f4>
    2128:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <_ZL8duration>
    212c:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <_ZL8duration+0x1>
    2130:	81 53       	subi	r24, 0x31	; 49
    2132:	88 30       	cpi	r24, 0x08	; 8
    2134:	50 f4       	brcc	.+20     	; 0x214a <_ZL8nextNotev+0x236>
    2136:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    213a:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    213e:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <_ZL9getNumberv>
    2142:	bc 01       	movw	r22, r24
    2144:	c7 01       	movw	r24, r14
    2146:	0e 94 37 1b 	call	0x366e	; 0x366e <__udivmodhi4>
    214a:	7b 01       	movw	r14, r22
    214c:	f6 94       	lsr	r15
    214e:	e7 94       	ror	r14
    2150:	69 83       	std	Y+1, r22	; 0x01
    2152:	7a 83       	std	Y+2, r23	; 0x02
    2154:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <_ZL16currentCharacterv>
    2158:	69 81       	ldd	r22, Y+1	; 0x01
    215a:	7a 81       	ldd	r23, Y+2	; 0x02
    215c:	8e 32       	cpi	r24, 0x2E	; 46
    215e:	69 f4       	brne	.+26     	; 0x217a <_ZL8nextNotev+0x266>
    2160:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    2164:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    2168:	2f 5f       	subi	r18, 0xFF	; 255
    216a:	3f 4f       	sbci	r19, 0xFF	; 255
    216c:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    2170:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    2174:	6e 0d       	add	r22, r14
    2176:	7f 1d       	adc	r23, r15
    2178:	e9 cf       	rjmp	.-46     	; 0x214c <_ZL8nextNotev+0x238>
    217a:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <_ZL8staccato>
    217e:	88 23       	and	r24, r24
    2180:	39 f0       	breq	.+14     	; 0x2190 <_ZL8nextNotev+0x27c>
    2182:	9b 01       	movw	r18, r22
    2184:	36 95       	lsr	r19
    2186:	27 95       	ror	r18
    2188:	20 93 97 01 	sts	0x0197, r18	; 0x800197 <_ZL22staccato_rest_duration>
    218c:	62 1b       	sub	r22, r18
    218e:	71 09       	sbc	r23, r1
    2190:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <_ZL6volume>
    2194:	11 23       	and	r17, r17
    2196:	11 f0       	breq	.+4      	; 0x219c <_ZL8nextNotev+0x288>
    2198:	8f ef       	ldi	r24, 0xFF	; 255
    219a:	01 c0       	rjmp	.+2      	; 0x219e <_ZL8nextNotev+0x28a>
    219c:	80 2f       	mov	r24, r16
    219e:	0e 94 36 0f 	call	0x1e6c	; 0x1e6c <_ZN15OrangutanBuzzer8playNoteEhjh>
    21a2:	22 96       	adiw	r28, 0x02	; 2
    21a4:	e0 e1       	ldi	r30, 0x10	; 16
    21a6:	0c 94 e6 1b 	jmp	0x37cc	; 0x37cc <__epilogue_restores__+0x4>

000021aa <__vector_13>:
    21aa:	1f 92       	push	r1
    21ac:	0f 92       	push	r0
    21ae:	0f b6       	in	r0, 0x3f	; 63
    21b0:	0f 92       	push	r0
    21b2:	11 24       	eor	r1, r1
    21b4:	2f 93       	push	r18
    21b6:	3f 93       	push	r19
    21b8:	4f 93       	push	r20
    21ba:	5f 93       	push	r21
    21bc:	6f 93       	push	r22
    21be:	7f 93       	push	r23
    21c0:	8f 93       	push	r24
    21c2:	9f 93       	push	r25
    21c4:	af 93       	push	r26
    21c6:	bf 93       	push	r27
    21c8:	ef 93       	push	r30
    21ca:	ff 93       	push	r31
    21cc:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <_ZL13buzzerTimeout>
    21d0:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <_ZL13buzzerTimeout+0x1>
    21d4:	9c 01       	movw	r18, r24
    21d6:	21 50       	subi	r18, 0x01	; 1
    21d8:	31 09       	sbc	r19, r1
    21da:	30 93 9c 01 	sts	0x019C, r19	; 0x80019c <_ZL13buzzerTimeout+0x1>
    21de:	20 93 9b 01 	sts	0x019B, r18	; 0x80019b <_ZL13buzzerTimeout>
    21e2:	89 2b       	or	r24, r25
    21e4:	11 f5       	brne	.+68     	; 0x222a <__vector_13+0x80>
    21e6:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    21ea:	78 94       	sei
    21ec:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    21f0:	88 7f       	andi	r24, 0xF8	; 248
    21f2:	81 60       	ori	r24, 0x01	; 1
    21f4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    21f8:	80 e1       	ldi	r24, 0x10	; 16
    21fa:	97 e2       	ldi	r25, 0x27	; 39
    21fc:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    2200:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    2204:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    2208:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    220c:	81 e0       	ldi	r24, 0x01	; 1
    220e:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <buzzerFinished>
    2212:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <__data_end>
    2216:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <__data_end+0x1>
    221a:	89 2b       	or	r24, r25
    221c:	31 f0       	breq	.+12     	; 0x222a <__vector_13+0x80>
    221e:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <_ZL17play_mode_setting>
    2222:	81 11       	cpse	r24, r1
    2224:	02 c0       	rjmp	.+4      	; 0x222a <__vector_13+0x80>
    2226:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <_ZL8nextNotev>
    222a:	ff 91       	pop	r31
    222c:	ef 91       	pop	r30
    222e:	bf 91       	pop	r27
    2230:	af 91       	pop	r26
    2232:	9f 91       	pop	r25
    2234:	8f 91       	pop	r24
    2236:	7f 91       	pop	r23
    2238:	6f 91       	pop	r22
    223a:	5f 91       	pop	r21
    223c:	4f 91       	pop	r20
    223e:	3f 91       	pop	r19
    2240:	2f 91       	pop	r18
    2242:	0f 90       	pop	r0
    2244:	0f be       	out	0x3f, r0	; 63
    2246:	0f 90       	pop	r0
    2248:	1f 90       	pop	r1
    224a:	18 95       	reti

0000224c <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    224c:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    2250:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <__data_end+0x1>
    2254:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <__data_end>
    2258:	81 e0       	ldi	r24, 0x01	; 1
    225a:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <_ZL17use_program_space>
    225e:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_ZL22staccato_rest_duration>
    2262:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <_ZL8nextNotev>
    2266:	08 95       	ret

00002268 <play_from_program_space>:
    2268:	0e 94 26 11 	call	0x224c	; 0x224c <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    226c:	08 95       	ret

0000226e <delay_us.constprop.0>:
    226e:	81 e0       	ldi	r24, 0x01	; 1
    2270:	90 e0       	ldi	r25, 0x00	; 0
    2272:	6f 93       	push	r22
    2274:	64 e0       	ldi	r22, 0x04	; 4
    2276:	6a 95       	dec	r22
    2278:	f1 f7       	brne	.-4      	; 0x2276 <delay_us.constprop.0+0x8>
    227a:	6f 91       	pop	r22
    227c:	01 97       	sbiw	r24, 0x01	; 1
    227e:	c9 f7       	brne	.-14     	; 0x2272 <delay_us.constprop.0+0x4>
    2280:	08 95       	ret

00002282 <_ZN12OrangutanLCD8busyWaitEv>:
    2282:	0f 93       	push	r16
    2284:	1f 93       	push	r17
    2286:	cf 93       	push	r28
    2288:	df 93       	push	r29
    228a:	1a b1       	in	r17, 0x0a	; 10
    228c:	57 98       	cbi	0x0a, 7	; 10
    228e:	5a 98       	cbi	0x0b, 2	; 11
    2290:	28 9a       	sbi	0x05, 0	; 5
    2292:	c0 e0       	ldi	r28, 0x00	; 0
    2294:	d0 e0       	ldi	r29, 0x00	; 0
    2296:	0e 94 37 11 	call	0x226e	; 0x226e <delay_us.constprop.0>
    229a:	5c 9a       	sbi	0x0b, 4	; 11
    229c:	0e 94 37 11 	call	0x226e	; 0x226e <delay_us.constprop.0>
    22a0:	09 b1       	in	r16, 0x09	; 9
    22a2:	5c 98       	cbi	0x0b, 4	; 11
    22a4:	0e 94 37 11 	call	0x226e	; 0x226e <delay_us.constprop.0>
    22a8:	5c 9a       	sbi	0x0b, 4	; 11
    22aa:	0e 94 37 11 	call	0x226e	; 0x226e <delay_us.constprop.0>
    22ae:	5c 98       	cbi	0x0b, 4	; 11
    22b0:	24 96       	adiw	r28, 0x04	; 4
    22b2:	07 ff       	sbrs	r16, 7
    22b4:	10 c0       	rjmp	.+32     	; 0x22d6 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    22b6:	ae 01       	movw	r20, r28
    22b8:	60 e0       	ldi	r22, 0x00	; 0
    22ba:	70 e0       	ldi	r23, 0x00	; 0
    22bc:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <lcdTimeout>
    22c0:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <lcdTimeout+0x1>
    22c4:	a0 91 9f 01 	lds	r26, 0x019F	; 0x80019f <lcdTimeout+0x2>
    22c8:	b0 91 a0 01 	lds	r27, 0x01A0	; 0x8001a0 <lcdTimeout+0x3>
    22cc:	48 17       	cp	r20, r24
    22ce:	59 07       	cpc	r21, r25
    22d0:	6a 07       	cpc	r22, r26
    22d2:	7b 07       	cpc	r23, r27
    22d4:	00 f3       	brcs	.-64     	; 0x2296 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    22d6:	1a b9       	out	0x0a, r17	; 10
    22d8:	df 91       	pop	r29
    22da:	cf 91       	pop	r28
    22dc:	1f 91       	pop	r17
    22de:	0f 91       	pop	r16
    22e0:	08 95       	ret

000022e2 <_ZN12OrangutanLCD8sendDataEh>:
    22e2:	95 b1       	in	r25, 0x05	; 5
    22e4:	28 2f       	mov	r18, r24
    22e6:	21 70       	andi	r18, 0x01	; 1
    22e8:	30 e0       	ldi	r19, 0x00	; 0
    22ea:	22 0f       	add	r18, r18
    22ec:	33 1f       	adc	r19, r19
    22ee:	48 2f       	mov	r20, r24
    22f0:	46 70       	andi	r20, 0x06	; 6
    22f2:	68 e0       	ldi	r22, 0x08	; 8
    22f4:	46 9f       	mul	r20, r22
    22f6:	a0 01       	movw	r20, r0
    22f8:	11 24       	eor	r1, r1
    22fa:	24 2b       	or	r18, r20
    22fc:	9d 7c       	andi	r25, 0xCD	; 205
    22fe:	29 2b       	or	r18, r25
    2300:	25 b9       	out	0x05, r18	; 5
    2302:	9b b1       	in	r25, 0x0b	; 11
    2304:	88 70       	andi	r24, 0x08	; 8
    2306:	82 95       	swap	r24
    2308:	80 7f       	andi	r24, 0xF0	; 240
    230a:	9f 77       	andi	r25, 0x7F	; 127
    230c:	89 2b       	or	r24, r25
    230e:	8b b9       	out	0x0b, r24	; 11
    2310:	5c 9a       	sbi	0x0b, 4	; 11
    2312:	0e 94 37 11 	call	0x226e	; 0x226e <delay_us.constprop.0>
    2316:	5c 98       	cbi	0x0b, 4	; 11
    2318:	0e 94 37 11 	call	0x226e	; 0x226e <delay_us.constprop.0>
    231c:	08 95       	ret

0000231e <_ZN12OrangutanLCD4sendEhhh>:
    231e:	a0 e0       	ldi	r26, 0x00	; 0
    2320:	b0 e0       	ldi	r27, 0x00	; 0
    2322:	e5 e9       	ldi	r30, 0x95	; 149
    2324:	f1 e1       	ldi	r31, 0x11	; 17
    2326:	0c 94 d3 1b 	jmp	0x37a6	; 0x37a6 <__prologue_saves__+0x16>
    232a:	c8 2f       	mov	r28, r24
    232c:	d6 2e       	mov	r13, r22
    232e:	e4 2e       	mov	r14, r20
    2330:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <_ZZN12OrangutanLCD4initEvE11initialized>
    2334:	81 11       	cpse	r24, r1
    2336:	05 c0       	rjmp	.+10     	; 0x2342 <_ZN12OrangutanLCD4sendEhhh+0x24>
    2338:	81 e0       	ldi	r24, 0x01	; 1
    233a:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <_ZZN12OrangutanLCD4initEvE11initialized>
    233e:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <_ZN12OrangutanLCD5init2Ev>
    2342:	0e 94 41 11 	call	0x2282	; 0x2282 <_ZN12OrangutanLCD8busyWaitEv>
    2346:	14 b1       	in	r17, 0x04	; 4
    2348:	d5 b1       	in	r29, 0x05	; 5
    234a:	fa b0       	in	r15, 0x0a	; 10
    234c:	0b b1       	in	r16, 0x0b	; 11
    234e:	28 98       	cbi	0x05, 0	; 5
    2350:	dd 20       	and	r13, r13
    2352:	11 f0       	breq	.+4      	; 0x2358 <_ZN12OrangutanLCD4sendEhhh+0x3a>
    2354:	5a 9a       	sbi	0x0b, 2	; 11
    2356:	01 c0       	rjmp	.+2      	; 0x235a <_ZN12OrangutanLCD4sendEhhh+0x3c>
    2358:	5a 98       	cbi	0x0b, 2	; 11
    235a:	94 b1       	in	r25, 0x04	; 4
    235c:	92 63       	ori	r25, 0x32	; 50
    235e:	94 b9       	out	0x04, r25	; 4
    2360:	57 9a       	sbi	0x0a, 7	; 10
    2362:	81 e0       	ldi	r24, 0x01	; 1
    2364:	e8 16       	cp	r14, r24
    2366:	29 f0       	breq	.+10     	; 0x2372 <_ZN12OrangutanLCD4sendEhhh+0x54>
    2368:	8c 2f       	mov	r24, r28
    236a:	82 95       	swap	r24
    236c:	8f 70       	andi	r24, 0x0F	; 15
    236e:	0e 94 71 11 	call	0x22e2	; 0x22e2 <_ZN12OrangutanLCD8sendDataEh>
    2372:	8c 2f       	mov	r24, r28
    2374:	8f 70       	andi	r24, 0x0F	; 15
    2376:	0e 94 71 11 	call	0x22e2	; 0x22e2 <_ZN12OrangutanLCD8sendDataEh>
    237a:	fa b8       	out	0x0a, r15	; 10
    237c:	0b b9       	out	0x0b, r16	; 11
    237e:	14 b9       	out	0x04, r17	; 4
    2380:	d5 b9       	out	0x05, r29	; 5
    2382:	cd b7       	in	r28, 0x3d	; 61
    2384:	de b7       	in	r29, 0x3e	; 62
    2386:	e7 e0       	ldi	r30, 0x07	; 7
    2388:	0c 94 ef 1b 	jmp	0x37de	; 0x37de <__epilogue_restores__+0x16>

0000238c <_ZN12OrangutanLCD8send_cmdEh>:
    238c:	42 e0       	ldi	r20, 0x02	; 2
    238e:	60 e0       	ldi	r22, 0x00	; 0
    2390:	0e 94 8f 11 	call	0x231e	; 0x231e <_ZN12OrangutanLCD4sendEhhh>
    2394:	08 95       	ret

00002396 <_ZN12OrangutanLCD9send_dataEh>:
    2396:	42 e0       	ldi	r20, 0x02	; 2
    2398:	61 e0       	ldi	r22, 0x01	; 1
    239a:	0e 94 8f 11 	call	0x231e	; 0x231e <_ZN12OrangutanLCD4sendEhhh>
    239e:	08 95       	ret

000023a0 <print_character>:
    23a0:	0e 94 cb 11 	call	0x2396	; 0x2396 <_ZN12OrangutanLCD9send_dataEh>
    23a4:	08 95       	ret

000023a6 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    23a6:	41 e0       	ldi	r20, 0x01	; 1
    23a8:	60 e0       	ldi	r22, 0x00	; 0
    23aa:	0e 94 8f 11 	call	0x231e	; 0x231e <_ZN12OrangutanLCD4sendEhhh>
    23ae:	08 95       	ret

000023b0 <_ZN12OrangutanLCD5init2Ev>:
    23b0:	80 e1       	ldi	r24, 0x10	; 16
    23b2:	97 e2       	ldi	r25, 0x27	; 39
    23b4:	a0 e0       	ldi	r26, 0x00	; 0
    23b6:	b0 e0       	ldi	r27, 0x00	; 0
    23b8:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <lcdTimeout>
    23bc:	90 93 9e 01 	sts	0x019E, r25	; 0x80019e <lcdTimeout+0x1>
    23c0:	a0 93 9f 01 	sts	0x019F, r26	; 0x80019f <lcdTimeout+0x2>
    23c4:	b0 93 a0 01 	sts	0x01A0, r27	; 0x8001a0 <lcdTimeout+0x3>
    23c8:	52 9a       	sbi	0x0a, 2	; 10
    23ca:	20 9a       	sbi	0x04, 0	; 4
    23cc:	54 9a       	sbi	0x0a, 4	; 10
    23ce:	8e e1       	ldi	r24, 0x1E	; 30
    23d0:	90 e0       	ldi	r25, 0x00	; 0
    23d2:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <delay_ms>
    23d6:	83 e0       	ldi	r24, 0x03	; 3
    23d8:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    23dc:	86 e0       	ldi	r24, 0x06	; 6
    23de:	90 e0       	ldi	r25, 0x00	; 0
    23e0:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <delay_ms>
    23e4:	83 e0       	ldi	r24, 0x03	; 3
    23e6:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    23ea:	82 e0       	ldi	r24, 0x02	; 2
    23ec:	90 e0       	ldi	r25, 0x00	; 0
    23ee:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <delay_ms>
    23f2:	83 e0       	ldi	r24, 0x03	; 3
    23f4:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    23f8:	82 e0       	ldi	r24, 0x02	; 2
    23fa:	90 e0       	ldi	r25, 0x00	; 0
    23fc:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <delay_ms>
    2400:	82 e0       	ldi	r24, 0x02	; 2
    2402:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    2406:	82 e0       	ldi	r24, 0x02	; 2
    2408:	90 e0       	ldi	r25, 0x00	; 0
    240a:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <delay_ms>
    240e:	88 e2       	ldi	r24, 0x28	; 40
    2410:	0e 94 c6 11 	call	0x238c	; 0x238c <_ZN12OrangutanLCD8send_cmdEh>
    2414:	88 e0       	ldi	r24, 0x08	; 8
    2416:	0e 94 c6 11 	call	0x238c	; 0x238c <_ZN12OrangutanLCD8send_cmdEh>
    241a:	81 e0       	ldi	r24, 0x01	; 1
    241c:	0e 94 c6 11 	call	0x238c	; 0x238c <_ZN12OrangutanLCD8send_cmdEh>
    2420:	86 e0       	ldi	r24, 0x06	; 6
    2422:	0e 94 c6 11 	call	0x238c	; 0x238c <_ZN12OrangutanLCD8send_cmdEh>
    2426:	8c e0       	ldi	r24, 0x0C	; 12
    2428:	0e 94 c6 11 	call	0x238c	; 0x238c <_ZN12OrangutanLCD8send_cmdEh>
    242c:	08 95       	ret

0000242e <_ZN12OrangutanLCD5clearEv>:
    242e:	81 e0       	ldi	r24, 0x01	; 1
    2430:	0e 94 c6 11 	call	0x238c	; 0x238c <_ZN12OrangutanLCD8send_cmdEh>
    2434:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <printf_chars>
    2438:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <printf_chars+0x1>
    243c:	89 2b       	or	r24, r25
    243e:	f9 f0       	breq	.+62     	; 0x247e <_ZN12OrangutanLCD5clearEv+0x50>
    2440:	60 e0       	ldi	r22, 0x00	; 0
    2442:	a0 e2       	ldi	r26, 0x20	; 32
    2444:	26 2f       	mov	r18, r22
    2446:	30 e0       	ldi	r19, 0x00	; 0
    2448:	70 91 0c 01 	lds	r23, 0x010C	; 0x80010c <numLCDCols>
    244c:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <numLCDRows>
    2450:	90 e0       	ldi	r25, 0x00	; 0
    2452:	01 97       	sbiw	r24, 0x01	; 1
    2454:	78 9f       	mul	r23, r24
    2456:	a0 01       	movw	r20, r0
    2458:	79 9f       	mul	r23, r25
    245a:	50 0d       	add	r21, r0
    245c:	11 24       	eor	r1, r1
    245e:	24 17       	cp	r18, r20
    2460:	35 07       	cpc	r19, r21
    2462:	4c f4       	brge	.+18     	; 0x2476 <_ZN12OrangutanLCD5clearEv+0x48>
    2464:	e0 91 a3 01 	lds	r30, 0x01A3	; 0x8001a3 <printf_chars>
    2468:	f0 91 a4 01 	lds	r31, 0x01A4	; 0x8001a4 <printf_chars+0x1>
    246c:	e2 0f       	add	r30, r18
    246e:	f3 1f       	adc	r31, r19
    2470:	a0 83       	st	Z, r26
    2472:	6f 5f       	subi	r22, 0xFF	; 255
    2474:	e7 cf       	rjmp	.-50     	; 0x2444 <_ZN12OrangutanLCD5clearEv+0x16>
    2476:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <col>
    247a:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <row>
    247e:	08 95       	ret

00002480 <clear>:
    2480:	0e 94 17 12 	call	0x242e	; 0x242e <_ZN12OrangutanLCD5clearEv>
    2484:	08 95       	ret

00002486 <_ZN12OrangutanLCD5printEPKc>:
    2486:	cf 93       	push	r28
    2488:	df 93       	push	r29
    248a:	ec 01       	movw	r28, r24
    248c:	89 91       	ld	r24, Y+
    248e:	88 23       	and	r24, r24
    2490:	19 f0       	breq	.+6      	; 0x2498 <_ZN12OrangutanLCD5printEPKc+0x12>
    2492:	0e 94 cb 11 	call	0x2396	; 0x2396 <_ZN12OrangutanLCD9send_dataEh>
    2496:	fa cf       	rjmp	.-12     	; 0x248c <_ZN12OrangutanLCD5printEPKc+0x6>
    2498:	df 91       	pop	r29
    249a:	cf 91       	pop	r28
    249c:	08 95       	ret

0000249e <print>:
    249e:	0e 94 43 12 	call	0x2486	; 0x2486 <_ZN12OrangutanLCD5printEPKc>
    24a2:	08 95       	ret

000024a4 <_ZN12OrangutanLCD5printEm>:
    24a4:	aa e0       	ldi	r26, 0x0A	; 10
    24a6:	b0 e0       	ldi	r27, 0x00	; 0
    24a8:	e8 e5       	ldi	r30, 0x58	; 88
    24aa:	f2 e1       	ldi	r31, 0x12	; 18
    24ac:	0c 94 d2 1b 	jmp	0x37a4	; 0x37a4 <__prologue_saves__+0x14>
    24b0:	1a e0       	ldi	r17, 0x0A	; 10
    24b2:	5a e0       	ldi	r21, 0x0A	; 10
    24b4:	c5 2e       	mov	r12, r21
    24b6:	d1 2c       	mov	r13, r1
    24b8:	e1 2c       	mov	r14, r1
    24ba:	f1 2c       	mov	r15, r1
    24bc:	06 2f       	mov	r16, r22
    24be:	a7 01       	movw	r20, r14
    24c0:	96 01       	movw	r18, r12
    24c2:	0e 94 5f 1b 	call	0x36be	; 0x36be <__udivmodsi4>
    24c6:	ca 01       	movw	r24, r20
    24c8:	b9 01       	movw	r22, r18
    24ca:	11 50       	subi	r17, 0x01	; 1
    24cc:	e1 e0       	ldi	r30, 0x01	; 1
    24ce:	f0 e0       	ldi	r31, 0x00	; 0
    24d0:	ec 0f       	add	r30, r28
    24d2:	fd 1f       	adc	r31, r29
    24d4:	e1 0f       	add	r30, r17
    24d6:	f1 1d       	adc	r31, r1
    24d8:	00 5d       	subi	r16, 0xD0	; 208
    24da:	2a e0       	ldi	r18, 0x0A	; 10
    24dc:	62 9f       	mul	r22, r18
    24de:	00 19       	sub	r16, r0
    24e0:	11 24       	eor	r1, r1
    24e2:	00 83       	st	Z, r16
    24e4:	61 15       	cp	r22, r1
    24e6:	71 05       	cpc	r23, r1
    24e8:	81 05       	cpc	r24, r1
    24ea:	91 05       	cpc	r25, r1
    24ec:	39 f7       	brne	.-50     	; 0x24bc <_ZN12OrangutanLCD5printEm+0x18>
    24ee:	1a 30       	cpi	r17, 0x0A	; 10
    24f0:	58 f4       	brcc	.+22     	; 0x2508 <_ZN12OrangutanLCD5printEm+0x64>
    24f2:	e1 e0       	ldi	r30, 0x01	; 1
    24f4:	f0 e0       	ldi	r31, 0x00	; 0
    24f6:	ec 0f       	add	r30, r28
    24f8:	fd 1f       	adc	r31, r29
    24fa:	e1 0f       	add	r30, r17
    24fc:	f1 1d       	adc	r31, r1
    24fe:	80 81       	ld	r24, Z
    2500:	0e 94 cb 11 	call	0x2396	; 0x2396 <_ZN12OrangutanLCD9send_dataEh>
    2504:	1f 5f       	subi	r17, 0xFF	; 255
    2506:	f3 cf       	rjmp	.-26     	; 0x24ee <_ZN12OrangutanLCD5printEm+0x4a>
    2508:	2a 96       	adiw	r28, 0x0a	; 10
    250a:	e8 e0       	ldi	r30, 0x08	; 8
    250c:	0c 94 ee 1b 	jmp	0x37dc	; 0x37dc <__epilogue_restores__+0x14>

00002510 <_ZN12OrangutanLCD5printEl>:
    2510:	cf 92       	push	r12
    2512:	df 92       	push	r13
    2514:	ef 92       	push	r14
    2516:	ff 92       	push	r15
    2518:	6b 01       	movw	r12, r22
    251a:	7c 01       	movw	r14, r24
    251c:	97 ff       	sbrs	r25, 7
    251e:	0b c0       	rjmp	.+22     	; 0x2536 <_ZN12OrangutanLCD5printEl+0x26>
    2520:	f0 94       	com	r15
    2522:	e0 94       	com	r14
    2524:	d0 94       	com	r13
    2526:	c0 94       	com	r12
    2528:	c1 1c       	adc	r12, r1
    252a:	d1 1c       	adc	r13, r1
    252c:	e1 1c       	adc	r14, r1
    252e:	f1 1c       	adc	r15, r1
    2530:	8d e2       	ldi	r24, 0x2D	; 45
    2532:	0e 94 cb 11 	call	0x2396	; 0x2396 <_ZN12OrangutanLCD9send_dataEh>
    2536:	c7 01       	movw	r24, r14
    2538:	b6 01       	movw	r22, r12
    253a:	0e 94 52 12 	call	0x24a4	; 0x24a4 <_ZN12OrangutanLCD5printEm>
    253e:	ff 90       	pop	r15
    2540:	ef 90       	pop	r14
    2542:	df 90       	pop	r13
    2544:	cf 90       	pop	r12
    2546:	08 95       	ret

00002548 <print_long>:
    2548:	0e 94 88 12 	call	0x2510	; 0x2510 <_ZN12OrangutanLCD5printEl>
    254c:	08 95       	ret

0000254e <_ZN12OrangutanLCD6gotoXYEhh>:
    254e:	a5 e0       	ldi	r26, 0x05	; 5
    2550:	b0 e0       	ldi	r27, 0x00	; 0
    2552:	ed ea       	ldi	r30, 0xAD	; 173
    2554:	f2 e1       	ldi	r31, 0x12	; 18
    2556:	0c 94 d7 1b 	jmp	0x37ae	; 0x37ae <__prologue_saves__+0x1e>
    255a:	18 2f       	mov	r17, r24
    255c:	80 e8       	ldi	r24, 0x80	; 128
    255e:	89 83       	std	Y+1, r24	; 0x01
    2560:	80 ec       	ldi	r24, 0xC0	; 192
    2562:	8a 83       	std	Y+2, r24	; 0x02
    2564:	84 e9       	ldi	r24, 0x94	; 148
    2566:	8b 83       	std	Y+3, r24	; 0x03
    2568:	84 ed       	ldi	r24, 0xD4	; 212
    256a:	8c 83       	std	Y+4, r24	; 0x04
    256c:	fe 01       	movw	r30, r28
    256e:	e6 0f       	add	r30, r22
    2570:	f1 1d       	adc	r31, r1
    2572:	81 81       	ldd	r24, Z+1	; 0x01
    2574:	81 0f       	add	r24, r17
    2576:	6d 83       	std	Y+5, r22	; 0x05
    2578:	0e 94 c6 11 	call	0x238c	; 0x238c <_ZN12OrangutanLCD8send_cmdEh>
    257c:	10 93 a1 01 	sts	0x01A1, r17	; 0x8001a1 <col>
    2580:	6d 81       	ldd	r22, Y+5	; 0x05
    2582:	60 93 a2 01 	sts	0x01A2, r22	; 0x8001a2 <row>
    2586:	25 96       	adiw	r28, 0x05	; 5
    2588:	e3 e0       	ldi	r30, 0x03	; 3
    258a:	0c 94 f3 1b 	jmp	0x37e6	; 0x37e6 <__epilogue_restores__+0x1e>

0000258e <lcd_goto_xy>:
    258e:	0e 94 a7 12 	call	0x254e	; 0x254e <_ZN12OrangutanLCD6gotoXYEhh>
    2592:	08 95       	ret

00002594 <_ZN16OrangutanDigital9setOutputEhh>:
    2594:	88 30       	cpi	r24, 0x08	; 8
    2596:	58 f4       	brcc	.+22     	; 0x25ae <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    2598:	91 e0       	ldi	r25, 0x01	; 1
    259a:	01 c0       	rjmp	.+2      	; 0x259e <_ZN16OrangutanDigital9setOutputEhh+0xa>
    259c:	99 0f       	add	r25, r25
    259e:	8a 95       	dec	r24
    25a0:	ea f7       	brpl	.-6      	; 0x259c <_ZN16OrangutanDigital9setOutputEhh+0x8>
    25a2:	89 2f       	mov	r24, r25
    25a4:	aa e2       	ldi	r26, 0x2A	; 42
    25a6:	b0 e0       	ldi	r27, 0x00	; 0
    25a8:	eb e2       	ldi	r30, 0x2B	; 43
    25aa:	f0 e0       	ldi	r31, 0x00	; 0
    25ac:	21 c0       	rjmp	.+66     	; 0x25f0 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    25ae:	8e 30       	cpi	r24, 0x0E	; 14
    25b0:	60 f4       	brcc	.+24     	; 0x25ca <_ZN16OrangutanDigital9setOutputEhh+0x36>
    25b2:	98 ef       	ldi	r25, 0xF8	; 248
    25b4:	98 0f       	add	r25, r24
    25b6:	81 e0       	ldi	r24, 0x01	; 1
    25b8:	01 c0       	rjmp	.+2      	; 0x25bc <_ZN16OrangutanDigital9setOutputEhh+0x28>
    25ba:	88 0f       	add	r24, r24
    25bc:	9a 95       	dec	r25
    25be:	ea f7       	brpl	.-6      	; 0x25ba <_ZN16OrangutanDigital9setOutputEhh+0x26>
    25c0:	a4 e2       	ldi	r26, 0x24	; 36
    25c2:	b0 e0       	ldi	r27, 0x00	; 0
    25c4:	e5 e2       	ldi	r30, 0x25	; 37
    25c6:	f0 e0       	ldi	r31, 0x00	; 0
    25c8:	13 c0       	rjmp	.+38     	; 0x25f0 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    25ca:	85 31       	cpi	r24, 0x15	; 21
    25cc:	60 f4       	brcc	.+24     	; 0x25e6 <_ZN16OrangutanDigital9setOutputEhh+0x52>
    25ce:	92 ef       	ldi	r25, 0xF2	; 242
    25d0:	98 0f       	add	r25, r24
    25d2:	81 e0       	ldi	r24, 0x01	; 1
    25d4:	01 c0       	rjmp	.+2      	; 0x25d8 <_ZN16OrangutanDigital9setOutputEhh+0x44>
    25d6:	88 0f       	add	r24, r24
    25d8:	9a 95       	dec	r25
    25da:	ea f7       	brpl	.-6      	; 0x25d6 <_ZN16OrangutanDigital9setOutputEhh+0x42>
    25dc:	a7 e2       	ldi	r26, 0x27	; 39
    25de:	b0 e0       	ldi	r27, 0x00	; 0
    25e0:	e8 e2       	ldi	r30, 0x28	; 40
    25e2:	f0 e0       	ldi	r31, 0x00	; 0
    25e4:	05 c0       	rjmp	.+10     	; 0x25f0 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    25e6:	80 e0       	ldi	r24, 0x00	; 0
    25e8:	a0 e0       	ldi	r26, 0x00	; 0
    25ea:	b0 e0       	ldi	r27, 0x00	; 0
    25ec:	e0 e0       	ldi	r30, 0x00	; 0
    25ee:	f0 e0       	ldi	r31, 0x00	; 0
    25f0:	6f 3f       	cpi	r22, 0xFF	; 255
    25f2:	19 f4       	brne	.+6      	; 0x25fa <_ZN16OrangutanDigital9setOutputEhh+0x66>
    25f4:	90 81       	ld	r25, Z
    25f6:	98 27       	eor	r25, r24
    25f8:	09 c0       	rjmp	.+18     	; 0x260c <_ZN16OrangutanDigital9setOutputEhh+0x78>
    25fa:	66 23       	and	r22, r22
    25fc:	19 f0       	breq	.+6      	; 0x2604 <_ZN16OrangutanDigital9setOutputEhh+0x70>
    25fe:	90 81       	ld	r25, Z
    2600:	98 2b       	or	r25, r24
    2602:	04 c0       	rjmp	.+8      	; 0x260c <_ZN16OrangutanDigital9setOutputEhh+0x78>
    2604:	20 81       	ld	r18, Z
    2606:	98 2f       	mov	r25, r24
    2608:	90 95       	com	r25
    260a:	92 23       	and	r25, r18
    260c:	90 83       	st	Z, r25
    260e:	9c 91       	ld	r25, X
    2610:	98 2b       	or	r25, r24
    2612:	9c 93       	st	X, r25
    2614:	08 95       	ret

00002616 <_ZN15OrangutanMotors5init2Ev>:
    2616:	83 ef       	ldi	r24, 0xF3	; 243
    2618:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    261c:	84 bd       	out	0x24, r24	; 36
    261e:	82 e0       	ldi	r24, 0x02	; 2
    2620:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    2624:	85 bd       	out	0x25, r24	; 37
    2626:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    262a:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    262e:	18 bc       	out	0x28, r1	; 40
    2630:	17 bc       	out	0x27, r1	; 39
    2632:	60 e0       	ldi	r22, 0x00	; 0
    2634:	86 e0       	ldi	r24, 0x06	; 6
    2636:	0e 94 ca 12 	call	0x2594	; 0x2594 <_ZN16OrangutanDigital9setOutputEhh>
    263a:	60 e0       	ldi	r22, 0x00	; 0
    263c:	85 e0       	ldi	r24, 0x05	; 5
    263e:	0e 94 ca 12 	call	0x2594	; 0x2594 <_ZN16OrangutanDigital9setOutputEhh>
    2642:	60 e0       	ldi	r22, 0x00	; 0
    2644:	8b e0       	ldi	r24, 0x0B	; 11
    2646:	0e 94 ca 12 	call	0x2594	; 0x2594 <_ZN16OrangutanDigital9setOutputEhh>
    264a:	60 e0       	ldi	r22, 0x00	; 0
    264c:	83 e0       	ldi	r24, 0x03	; 3
    264e:	0e 94 ca 12 	call	0x2594	; 0x2594 <_ZN16OrangutanDigital9setOutputEhh>
    2652:	08 95       	ret

00002654 <_ZN15OrangutanMotors4initEv>:
    2654:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <_ZZN15OrangutanMotors4initEvE11initialized>
    2658:	81 11       	cpse	r24, r1
    265a:	05 c0       	rjmp	.+10     	; 0x2666 <_ZN15OrangutanMotors4initEv+0x12>
    265c:	81 e0       	ldi	r24, 0x01	; 1
    265e:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <_ZZN15OrangutanMotors4initEvE11initialized>
    2662:	0e 94 0b 13 	call	0x2616	; 0x2616 <_ZN15OrangutanMotors5init2Ev>
    2666:	08 95       	ret

00002668 <_ZN15OrangutanMotors10setM1SpeedEi>:
    2668:	cf 93       	push	r28
    266a:	df 93       	push	r29
    266c:	ec 01       	movw	r28, r24
    266e:	0e 94 2a 13 	call	0x2654	; 0x2654 <_ZN15OrangutanMotors4initEv>
    2672:	d7 ff       	sbrs	r29, 7
    2674:	05 c0       	rjmp	.+10     	; 0x2680 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    2676:	d1 95       	neg	r29
    2678:	c1 95       	neg	r28
    267a:	d1 09       	sbc	r29, r1
    267c:	81 e0       	ldi	r24, 0x01	; 1
    267e:	01 c0       	rjmp	.+2      	; 0x2682 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    2680:	80 e0       	ldi	r24, 0x00	; 0
    2682:	cf 3f       	cpi	r28, 0xFF	; 255
    2684:	d1 05       	cpc	r29, r1
    2686:	19 f0       	breq	.+6      	; 0x268e <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    2688:	14 f0       	brlt	.+4      	; 0x268e <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    268a:	cf ef       	ldi	r28, 0xFF	; 255
    268c:	d0 e0       	ldi	r29, 0x00	; 0
    268e:	88 23       	and	r24, r24
    2690:	19 f0       	breq	.+6      	; 0x2698 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    2692:	18 bc       	out	0x28, r1	; 40
    2694:	c7 bd       	out	0x27, r28	; 39
    2696:	02 c0       	rjmp	.+4      	; 0x269c <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    2698:	c8 bd       	out	0x28, r28	; 40
    269a:	17 bc       	out	0x27, r1	; 39
    269c:	df 91       	pop	r29
    269e:	cf 91       	pop	r28
    26a0:	08 95       	ret

000026a2 <_ZN15OrangutanMotors10setM2SpeedEi>:
    26a2:	cf 93       	push	r28
    26a4:	df 93       	push	r29
    26a6:	ec 01       	movw	r28, r24
    26a8:	0e 94 2a 13 	call	0x2654	; 0x2654 <_ZN15OrangutanMotors4initEv>
    26ac:	d7 ff       	sbrs	r29, 7
    26ae:	05 c0       	rjmp	.+10     	; 0x26ba <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    26b0:	d1 95       	neg	r29
    26b2:	c1 95       	neg	r28
    26b4:	d1 09       	sbc	r29, r1
    26b6:	81 e0       	ldi	r24, 0x01	; 1
    26b8:	01 c0       	rjmp	.+2      	; 0x26bc <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    26ba:	80 e0       	ldi	r24, 0x00	; 0
    26bc:	cf 3f       	cpi	r28, 0xFF	; 255
    26be:	d1 05       	cpc	r29, r1
    26c0:	19 f0       	breq	.+6      	; 0x26c8 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    26c2:	14 f0       	brlt	.+4      	; 0x26c8 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    26c4:	cf ef       	ldi	r28, 0xFF	; 255
    26c6:	d0 e0       	ldi	r29, 0x00	; 0
    26c8:	88 23       	and	r24, r24
    26ca:	29 f0       	breq	.+10     	; 0x26d6 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    26cc:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    26d0:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    26d4:	04 c0       	rjmp	.+8      	; 0x26de <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    26d6:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    26da:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    26de:	df 91       	pop	r29
    26e0:	cf 91       	pop	r28
    26e2:	08 95       	ret

000026e4 <_ZN15OrangutanMotors9setSpeedsEii>:
    26e4:	cf 93       	push	r28
    26e6:	df 93       	push	r29
    26e8:	eb 01       	movw	r28, r22
    26ea:	0e 94 34 13 	call	0x2668	; 0x2668 <_ZN15OrangutanMotors10setM1SpeedEi>
    26ee:	ce 01       	movw	r24, r28
    26f0:	0e 94 51 13 	call	0x26a2	; 0x26a2 <_ZN15OrangutanMotors10setM2SpeedEi>
    26f4:	df 91       	pop	r29
    26f6:	cf 91       	pop	r28
    26f8:	08 95       	ret

000026fa <set_motors>:
    26fa:	0e 94 72 13 	call	0x26e4	; 0x26e4 <_ZN15OrangutanMotors9setSpeedsEii>
    26fe:	08 95       	ret

00002700 <_ZN20OrangutanPushbuttons5init2Ev>:
    2700:	84 b1       	in	r24, 0x04	; 4
    2702:	8d 7c       	andi	r24, 0xCD	; 205
    2704:	84 b9       	out	0x04, r24	; 4
    2706:	85 b1       	in	r24, 0x05	; 5
    2708:	82 63       	ori	r24, 0x32	; 50
    270a:	85 b9       	out	0x05, r24	; 5
    270c:	85 e0       	ldi	r24, 0x05	; 5
    270e:	90 e0       	ldi	r25, 0x00	; 0
    2710:	6f 93       	push	r22
    2712:	64 e0       	ldi	r22, 0x04	; 4
    2714:	6a 95       	dec	r22
    2716:	f1 f7       	brne	.-4      	; 0x2714 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    2718:	6f 91       	pop	r22
    271a:	01 97       	sbiw	r24, 0x01	; 1
    271c:	c9 f7       	brne	.-14     	; 0x2710 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    271e:	08 95       	ret

00002720 <_ZN20OrangutanPushbuttons4initEv>:
    2720:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    2724:	81 11       	cpse	r24, r1
    2726:	05 c0       	rjmp	.+10     	; 0x2732 <_ZN20OrangutanPushbuttons4initEv+0x12>
    2728:	81 e0       	ldi	r24, 0x01	; 1
    272a:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    272e:	0e 94 80 13 	call	0x2700	; 0x2700 <_ZN20OrangutanPushbuttons5init2Ev>
    2732:	08 95       	ret

00002734 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    2734:	cf 93       	push	r28
    2736:	c8 2f       	mov	r28, r24
    2738:	0e 94 90 13 	call	0x2720	; 0x2720 <_ZN20OrangutanPushbuttons4initEv>
    273c:	83 b1       	in	r24, 0x03	; 3
    273e:	8c 23       	and	r24, r28
    2740:	e9 f3       	breq	.-6      	; 0x273c <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    2742:	8a e0       	ldi	r24, 0x0A	; 10
    2744:	90 e0       	ldi	r25, 0x00	; 0
    2746:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <delay_ms>
    274a:	83 b1       	in	r24, 0x03	; 3
    274c:	8c 23       	and	r24, r28
    274e:	b1 f3       	breq	.-20     	; 0x273c <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    2750:	83 b1       	in	r24, 0x03	; 3
    2752:	8c 23       	and	r24, r28
    2754:	cf 91       	pop	r28
    2756:	08 95       	ret

00002758 <wait_for_button_release>:
    2758:	0e 94 9a 13 	call	0x2734	; 0x2734 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    275c:	08 95       	ret

0000275e <_ZN20OrangutanPushbuttons9isPressedEh>:
    275e:	a1 e0       	ldi	r26, 0x01	; 1
    2760:	b0 e0       	ldi	r27, 0x00	; 0
    2762:	e5 eb       	ldi	r30, 0xB5	; 181
    2764:	f3 e1       	ldi	r31, 0x13	; 19
    2766:	0c 94 d8 1b 	jmp	0x37b0	; 0x37b0 <__prologue_saves__+0x20>
    276a:	89 83       	std	Y+1, r24	; 0x01
    276c:	0e 94 90 13 	call	0x2720	; 0x2720 <_ZN20OrangutanPushbuttons4initEv>
    2770:	93 b1       	in	r25, 0x03	; 3
    2772:	90 95       	com	r25
    2774:	89 81       	ldd	r24, Y+1	; 0x01
    2776:	89 23       	and	r24, r25
    2778:	21 96       	adiw	r28, 0x01	; 1
    277a:	e2 e0       	ldi	r30, 0x02	; 2
    277c:	0c 94 f4 1b 	jmp	0x37e8	; 0x37e8 <__epilogue_restores__+0x20>

00002780 <button_is_pressed>:
    2780:	0e 94 af 13 	call	0x275e	; 0x275e <_ZN20OrangutanPushbuttons9isPressedEh>
    2784:	08 95       	ret

00002786 <serial_receive_buffer_full>:
    2786:	20 91 a7 01 	lds	r18, 0x01A7	; 0x8001a7 <_ZN15OrangutanSerial5portsE+0x2>
    278a:	81 e0       	ldi	r24, 0x01	; 1
    278c:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <_ZN15OrangutanSerial5portsE+0x4>
    2790:	29 13       	cpse	r18, r25
    2792:	80 e0       	ldi	r24, 0x00	; 0
    2794:	08 95       	ret

00002796 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
    2796:	28 2f       	mov	r18, r24
    2798:	30 e0       	ldi	r19, 0x00	; 0
    279a:	9a e0       	ldi	r25, 0x0A	; 10
    279c:	89 9f       	mul	r24, r25
    279e:	f0 01       	movw	r30, r0
    27a0:	11 24       	eor	r1, r1
    27a2:	eb 55       	subi	r30, 0x5B	; 91
    27a4:	fe 4f       	sbci	r31, 0xFE	; 254
    27a6:	80 85       	ldd	r24, Z+8	; 0x08
    27a8:	91 85       	ldd	r25, Z+9	; 0x09
    27aa:	00 97       	sbiw	r24, 0x00	; 0
    27ac:	21 f0       	breq	.+8      	; 0x27b6 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    27ae:	52 81       	ldd	r21, Z+2	; 0x02
    27b0:	44 81       	ldd	r20, Z+4	; 0x04
    27b2:	54 17       	cp	r21, r20
    27b4:	80 f0       	brcs	.+32     	; 0x27d6 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x40>
    27b6:	8a e0       	ldi	r24, 0x0A	; 10
    27b8:	82 9f       	mul	r24, r18
    27ba:	f0 01       	movw	r30, r0
    27bc:	83 9f       	mul	r24, r19
    27be:	f0 0d       	add	r31, r0
    27c0:	11 24       	eor	r1, r1
    27c2:	eb 55       	subi	r30, 0x5B	; 91
    27c4:	fe 4f       	sbci	r31, 0xFE	; 254
    27c6:	92 81       	ldd	r25, Z+2	; 0x02
    27c8:	84 81       	ldd	r24, Z+4	; 0x04
    27ca:	98 13       	cpse	r25, r24
    27cc:	0e c0       	rjmp	.+28     	; 0x27ea <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x54>
    27ce:	85 81       	ldd	r24, Z+5	; 0x05
    27d0:	81 11       	cpse	r24, r1
    27d2:	0a c0       	rjmp	.+20     	; 0x27e8 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
    27d4:	08 95       	ret
    27d6:	42 81       	ldd	r20, Z+2	; 0x02
    27d8:	dc 01       	movw	r26, r24
    27da:	a4 0f       	add	r26, r20
    27dc:	b1 1d       	adc	r27, r1
    27de:	6c 93       	st	X, r22
    27e0:	82 81       	ldd	r24, Z+2	; 0x02
    27e2:	8f 5f       	subi	r24, 0xFF	; 255
    27e4:	82 83       	std	Z+2, r24	; 0x02
    27e6:	e7 cf       	rjmp	.-50     	; 0x27b6 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    27e8:	12 82       	std	Z+2, r1	; 0x02
    27ea:	08 95       	ret

000027ec <_ZN15OrangutanSerial15serial_rx_checkEh>:
    27ec:	cf 93       	push	r28
    27ee:	df 93       	push	r29
    27f0:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    27f4:	9f 77       	andi	r25, 0x7F	; 127
    27f6:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    27fa:	c8 2f       	mov	r28, r24
    27fc:	d0 e0       	ldi	r29, 0x00	; 0
    27fe:	9a e0       	ldi	r25, 0x0A	; 10
    2800:	89 9f       	mul	r24, r25
    2802:	f0 01       	movw	r30, r0
    2804:	11 24       	eor	r1, r1
    2806:	eb 55       	subi	r30, 0x5B	; 91
    2808:	fe 4f       	sbci	r31, 0xFE	; 254
    280a:	20 85       	ldd	r18, Z+8	; 0x08
    280c:	31 85       	ldd	r19, Z+9	; 0x09
    280e:	23 2b       	or	r18, r19
    2810:	41 f0       	breq	.+16     	; 0x2822 <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2812:	22 81       	ldd	r18, Z+2	; 0x02
    2814:	94 81       	ldd	r25, Z+4	; 0x04
    2816:	29 17       	cp	r18, r25
    2818:	20 f4       	brcc	.+8      	; 0x2822 <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    281a:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    281e:	97 fd       	sbrc	r25, 7
    2820:	11 c0       	rjmp	.+34     	; 0x2844 <_ZN15OrangutanSerial15serial_rx_checkEh+0x58>
    2822:	8a e0       	ldi	r24, 0x0A	; 10
    2824:	8c 9f       	mul	r24, r28
    2826:	f0 01       	movw	r30, r0
    2828:	8d 9f       	mul	r24, r29
    282a:	f0 0d       	add	r31, r0
    282c:	11 24       	eor	r1, r1
    282e:	eb 55       	subi	r30, 0x5B	; 91
    2830:	fe 4f       	sbci	r31, 0xFE	; 254
    2832:	80 81       	ld	r24, Z
    2834:	81 11       	cpse	r24, r1
    2836:	0b c0       	rjmp	.+22     	; 0x284e <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    2838:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    283c:	80 68       	ori	r24, 0x80	; 128
    283e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2842:	05 c0       	rjmp	.+10     	; 0x284e <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    2844:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2848:	0e 94 cb 13 	call	0x2796	; 0x2796 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    284c:	ea cf       	rjmp	.-44     	; 0x2822 <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    284e:	df 91       	pop	r29
    2850:	cf 91       	pop	r28
    2852:	08 95       	ret

00002854 <_ZN15OrangutanSerial14receive_inlineEhPchh>:
    2854:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2858:	9f 77       	andi	r25, 0x7F	; 127
    285a:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    285e:	9a e0       	ldi	r25, 0x0A	; 10
    2860:	89 9f       	mul	r24, r25
    2862:	f0 01       	movw	r30, r0
    2864:	11 24       	eor	r1, r1
    2866:	eb 55       	subi	r30, 0x5B	; 91
    2868:	fe 4f       	sbci	r31, 0xFE	; 254
    286a:	71 87       	std	Z+9, r23	; 0x09
    286c:	60 87       	std	Z+8, r22	; 0x08
    286e:	12 82       	std	Z+2, r1	; 0x02
    2870:	44 83       	std	Z+4, r20	; 0x04
    2872:	25 83       	std	Z+5, r18	; 0x05
    2874:	80 81       	ld	r24, Z
    2876:	81 11       	cpse	r24, r1
    2878:	05 c0       	rjmp	.+10     	; 0x2884 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x30>
    287a:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    287e:	80 68       	ori	r24, 0x80	; 128
    2880:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2884:	08 95       	ret

00002886 <_ZN15OrangutanSerial7receiveEPch>:
    2886:	46 2f       	mov	r20, r22
    2888:	20 e0       	ldi	r18, 0x00	; 0
    288a:	bc 01       	movw	r22, r24
    288c:	80 e0       	ldi	r24, 0x00	; 0
    288e:	0e 94 2a 14 	call	0x2854	; 0x2854 <_ZN15OrangutanSerial14receive_inlineEhPchh>
    2892:	08 95       	ret

00002894 <serial_receive>:
    2894:	0e 94 43 14 	call	0x2886	; 0x2886 <_ZN15OrangutanSerial7receiveEPch>
    2898:	08 95       	ret

0000289a <__vector_18>:
    289a:	1f 92       	push	r1
    289c:	0f 92       	push	r0
    289e:	0f b6       	in	r0, 0x3f	; 63
    28a0:	0f 92       	push	r0
    28a2:	11 24       	eor	r1, r1
    28a4:	2f 93       	push	r18
    28a6:	3f 93       	push	r19
    28a8:	4f 93       	push	r20
    28aa:	5f 93       	push	r21
    28ac:	6f 93       	push	r22
    28ae:	7f 93       	push	r23
    28b0:	8f 93       	push	r24
    28b2:	9f 93       	push	r25
    28b4:	af 93       	push	r26
    28b6:	bf 93       	push	r27
    28b8:	ef 93       	push	r30
    28ba:	ff 93       	push	r31
    28bc:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    28c0:	80 e0       	ldi	r24, 0x00	; 0
    28c2:	0e 94 cb 13 	call	0x2796	; 0x2796 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    28c6:	ff 91       	pop	r31
    28c8:	ef 91       	pop	r30
    28ca:	bf 91       	pop	r27
    28cc:	af 91       	pop	r26
    28ce:	9f 91       	pop	r25
    28d0:	8f 91       	pop	r24
    28d2:	7f 91       	pop	r23
    28d4:	6f 91       	pop	r22
    28d6:	5f 91       	pop	r21
    28d8:	4f 91       	pop	r20
    28da:	3f 91       	pop	r19
    28dc:	2f 91       	pop	r18
    28de:	0f 90       	pop	r0
    28e0:	0f be       	out	0x3f, r0	; 63
    28e2:	0f 90       	pop	r0
    28e4:	1f 90       	pop	r1
    28e6:	18 95       	reti

000028e8 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    28e8:	9a e0       	ldi	r25, 0x0A	; 10
    28ea:	89 9f       	mul	r24, r25
    28ec:	f0 01       	movw	r30, r0
    28ee:	11 24       	eor	r1, r1
    28f0:	eb 55       	subi	r30, 0x5B	; 91
    28f2:	fe 4f       	sbci	r31, 0xFE	; 254
    28f4:	86 81       	ldd	r24, Z+6	; 0x06
    28f6:	97 81       	ldd	r25, Z+7	; 0x07
    28f8:	89 2b       	or	r24, r25
    28fa:	59 f0       	breq	.+22     	; 0x2912 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    28fc:	91 81       	ldd	r25, Z+1	; 0x01
    28fe:	83 81       	ldd	r24, Z+3	; 0x03
    2900:	98 17       	cp	r25, r24
    2902:	38 f4       	brcc	.+14     	; 0x2912 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2904:	80 81       	ld	r24, Z
    2906:	81 11       	cpse	r24, r1
    2908:	04 c0       	rjmp	.+8      	; 0x2912 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    290a:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    290e:	80 62       	ori	r24, 0x20	; 32
    2910:	03 c0       	rjmp	.+6      	; 0x2918 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x30>
    2912:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2916:	8f 7d       	andi	r24, 0xDF	; 223
    2918:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    291c:	08 95       	ret

0000291e <_ZN15OrangutanSerial15initUART_inlineEh>:
    291e:	9a e0       	ldi	r25, 0x0A	; 10
    2920:	89 9f       	mul	r24, r25
    2922:	f0 01       	movw	r30, r0
    2924:	11 24       	eor	r1, r1
    2926:	eb 55       	subi	r30, 0x5B	; 91
    2928:	fe 4f       	sbci	r31, 0xFE	; 254
    292a:	90 81       	ld	r25, Z
    292c:	91 11       	cpse	r25, r1
    292e:	02 c0       	rjmp	.+4      	; 0x2934 <_ZN15OrangutanSerial15initUART_inlineEh+0x16>
    2930:	98 e9       	ldi	r25, 0x98	; 152
    2932:	01 c0       	rjmp	.+2      	; 0x2936 <_ZN15OrangutanSerial15initUART_inlineEh+0x18>
    2934:	98 e1       	ldi	r25, 0x18	; 24
    2936:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    293a:	0e 94 74 14 	call	0x28e8	; 0x28e8 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    293e:	78 94       	sei
    2940:	08 95       	ret

00002942 <serial_set_baud_rate>:
    2942:	cf 92       	push	r12
    2944:	df 92       	push	r13
    2946:	ef 92       	push	r14
    2948:	ff 92       	push	r15
    294a:	6b 01       	movw	r12, r22
    294c:	7c 01       	movw	r14, r24
    294e:	80 e0       	ldi	r24, 0x00	; 0
    2950:	0e 94 8f 14 	call	0x291e	; 0x291e <_ZN15OrangutanSerial15initUART_inlineEh>
    2954:	a8 ef       	ldi	r26, 0xF8	; 248
    2956:	bf ef       	ldi	r27, 0xFF	; 255
    2958:	a7 01       	movw	r20, r14
    295a:	96 01       	movw	r18, r12
    295c:	0e 94 c3 1b 	call	0x3786	; 0x3786 <__mulohisi3>
    2960:	73 5d       	subi	r23, 0xD3	; 211
    2962:	8e 4c       	sbci	r24, 0xCE	; 206
    2964:	9e 4f       	sbci	r25, 0xFE	; 254
    2966:	e4 e0       	ldi	r30, 0x04	; 4
    2968:	22 0f       	add	r18, r18
    296a:	33 1f       	adc	r19, r19
    296c:	44 1f       	adc	r20, r20
    296e:	55 1f       	adc	r21, r21
    2970:	ea 95       	dec	r30
    2972:	d1 f7       	brne	.-12     	; 0x2968 <serial_set_baud_rate+0x26>
    2974:	0e 94 5f 1b 	call	0x36be	; 0x36be <__udivmodsi4>
    2978:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
    297c:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
    2980:	ff 90       	pop	r15
    2982:	ef 90       	pop	r14
    2984:	df 90       	pop	r13
    2986:	cf 90       	pop	r12
    2988:	08 95       	ret

0000298a <_ZN15OrangutanSerial4sendEPch>:
    298a:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <_ZN15OrangutanSerial5portsE+0x7>
    298e:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_ZN15OrangutanSerial5portsE+0x6>
    2992:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <_ZN15OrangutanSerial5portsE+0x1>
    2996:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <_ZN15OrangutanSerial5portsE+0x3>
    299a:	80 e0       	ldi	r24, 0x00	; 0
    299c:	0e 94 74 14 	call	0x28e8	; 0x28e8 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    29a0:	08 95       	ret

000029a2 <serial_send>:
    29a2:	0e 94 c5 14 	call	0x298a	; 0x298a <_ZN15OrangutanSerial4sendEPch>
    29a6:	08 95       	ret

000029a8 <_ZN15OrangutanSerial11uart_tx_isrEh>:
    29a8:	9a e0       	ldi	r25, 0x0A	; 10
    29aa:	89 9f       	mul	r24, r25
    29ac:	f0 01       	movw	r30, r0
    29ae:	11 24       	eor	r1, r1
    29b0:	eb 55       	subi	r30, 0x5B	; 91
    29b2:	fe 4f       	sbci	r31, 0xFE	; 254
    29b4:	26 81       	ldd	r18, Z+6	; 0x06
    29b6:	37 81       	ldd	r19, Z+7	; 0x07
    29b8:	21 15       	cp	r18, r1
    29ba:	31 05       	cpc	r19, r1
    29bc:	41 f0       	breq	.+16     	; 0x29ce <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    29be:	41 81       	ldd	r20, Z+1	; 0x01
    29c0:	93 81       	ldd	r25, Z+3	; 0x03
    29c2:	49 17       	cp	r20, r25
    29c4:	20 f4       	brcc	.+8      	; 0x29ce <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    29c6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    29ca:	95 fd       	sbrc	r25, 5
    29cc:	03 c0       	rjmp	.+6      	; 0x29d4 <_ZN15OrangutanSerial11uart_tx_isrEh+0x2c>
    29ce:	0e 94 74 14 	call	0x28e8	; 0x28e8 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    29d2:	08 95       	ret
    29d4:	91 81       	ldd	r25, Z+1	; 0x01
    29d6:	d9 01       	movw	r26, r18
    29d8:	a9 0f       	add	r26, r25
    29da:	b1 1d       	adc	r27, r1
    29dc:	9c 91       	ld	r25, X
    29de:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    29e2:	91 81       	ldd	r25, Z+1	; 0x01
    29e4:	9f 5f       	subi	r25, 0xFF	; 255
    29e6:	91 83       	std	Z+1, r25	; 0x01
    29e8:	f2 cf       	rjmp	.-28     	; 0x29ce <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>

000029ea <_ZN15OrangutanSerial5checkEv>:
    29ea:	e1 ec       	ldi	r30, 0xC1	; 193
    29ec:	f0 e0       	ldi	r31, 0x00	; 0
    29ee:	80 81       	ld	r24, Z
    29f0:	8f 7d       	andi	r24, 0xDF	; 223
    29f2:	80 83       	st	Z, r24
    29f4:	80 e0       	ldi	r24, 0x00	; 0
    29f6:	0e 94 d4 14 	call	0x29a8	; 0x29a8 <_ZN15OrangutanSerial11uart_tx_isrEh>
    29fa:	80 e0       	ldi	r24, 0x00	; 0
    29fc:	0e 94 f6 13 	call	0x27ec	; 0x27ec <_ZN15OrangutanSerial15serial_rx_checkEh>
    2a00:	08 95       	ret

00002a02 <_ZN15OrangutanSerial12sendBlockingEPch>:
    2a02:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <_ZN15OrangutanSerial5portsE+0x7>
    2a06:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_ZN15OrangutanSerial5portsE+0x6>
    2a0a:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <_ZN15OrangutanSerial5portsE+0x1>
    2a0e:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <_ZN15OrangutanSerial5portsE+0x3>
    2a12:	80 e0       	ldi	r24, 0x00	; 0
    2a14:	0e 94 74 14 	call	0x28e8	; 0x28e8 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2a18:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <_ZN15OrangutanSerial5portsE+0x1>
    2a1c:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <_ZN15OrangutanSerial5portsE+0x3>
    2a20:	98 17       	cp	r25, r24
    2a22:	19 f0       	breq	.+6      	; 0x2a2a <_ZN15OrangutanSerial12sendBlockingEPch+0x28>
    2a24:	0e 94 f5 14 	call	0x29ea	; 0x29ea <_ZN15OrangutanSerial5checkEv>
    2a28:	f7 cf       	rjmp	.-18     	; 0x2a18 <_ZN15OrangutanSerial12sendBlockingEPch+0x16>
    2a2a:	08 95       	ret

00002a2c <serial_send_blocking>:
    2a2c:	0e 94 01 15 	call	0x2a02	; 0x2a02 <_ZN15OrangutanSerial12sendBlockingEPch>
    2a30:	08 95       	ret

00002a32 <__vector_19>:
    2a32:	1f 92       	push	r1
    2a34:	0f 92       	push	r0
    2a36:	0f b6       	in	r0, 0x3f	; 63
    2a38:	0f 92       	push	r0
    2a3a:	11 24       	eor	r1, r1
    2a3c:	2f 93       	push	r18
    2a3e:	3f 93       	push	r19
    2a40:	4f 93       	push	r20
    2a42:	5f 93       	push	r21
    2a44:	6f 93       	push	r22
    2a46:	7f 93       	push	r23
    2a48:	8f 93       	push	r24
    2a4a:	9f 93       	push	r25
    2a4c:	af 93       	push	r26
    2a4e:	bf 93       	push	r27
    2a50:	ef 93       	push	r30
    2a52:	ff 93       	push	r31
    2a54:	80 e0       	ldi	r24, 0x00	; 0
    2a56:	0e 94 d4 14 	call	0x29a8	; 0x29a8 <_ZN15OrangutanSerial11uart_tx_isrEh>
    2a5a:	ff 91       	pop	r31
    2a5c:	ef 91       	pop	r30
    2a5e:	bf 91       	pop	r27
    2a60:	af 91       	pop	r26
    2a62:	9f 91       	pop	r25
    2a64:	8f 91       	pop	r24
    2a66:	7f 91       	pop	r23
    2a68:	6f 91       	pop	r22
    2a6a:	5f 91       	pop	r21
    2a6c:	4f 91       	pop	r20
    2a6e:	3f 91       	pop	r19
    2a70:	2f 91       	pop	r18
    2a72:	0f 90       	pop	r0
    2a74:	0f be       	out	0x3f, r0	; 63
    2a76:	0f 90       	pop	r0
    2a78:	1f 90       	pop	r1
    2a7a:	18 95       	reti

00002a7c <__vector_9>:
    2a7c:	2f 92       	push	r2
    2a7e:	8f 93       	push	r24
    2a80:	9f 93       	push	r25
    2a82:	2f b6       	in	r2, 0x3f	; 63
    2a84:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <tickCount+0x1>
    2a88:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <tickCount+0x2>
    2a8c:	01 96       	adiw	r24, 0x01	; 1
    2a8e:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <tickCount+0x1>
    2a92:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <tickCount+0x2>
    2a96:	90 e0       	ldi	r25, 0x00	; 0
    2a98:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <tickCount+0x3>
    2a9c:	89 1f       	adc	r24, r25
    2a9e:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <tickCount+0x3>
    2aa2:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <us_over_10+0x1>
    2aa6:	9c 5f       	subi	r25, 0xFC	; 252
    2aa8:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <us_over_10+0x1>
    2aac:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <us_over_10>
    2ab0:	80 51       	subi	r24, 0x10	; 16
    2ab2:	97 42       	sbci	r25, 0x27	; 39
    2ab4:	c0 f0       	brcs	.+48     	; 0x2ae6 <end>
    2ab6:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <us_over_10+0x1>
    2aba:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <us_over_10>
    2abe:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <msCounter>
    2ac2:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <msCounter+0x1>
    2ac6:	01 96       	adiw	r24, 0x01	; 1
    2ac8:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <msCounter>
    2acc:	90 93 b2 01 	sts	0x01B2, r25	; 0x8001b2 <msCounter+0x1>
    2ad0:	90 e0       	ldi	r25, 0x00	; 0
    2ad2:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <msCounter+0x2>
    2ad6:	89 1f       	adc	r24, r25
    2ad8:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <msCounter+0x2>
    2adc:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <msCounter+0x3>
    2ae0:	89 1f       	adc	r24, r25
    2ae2:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <msCounter+0x3>

00002ae6 <end>:
    2ae6:	2f be       	out	0x3f, r2	; 63
    2ae8:	9f 91       	pop	r25
    2aea:	8f 91       	pop	r24
    2aec:	2f 90       	pop	r2
    2aee:	18 95       	reti

00002af0 <_ZN13OrangutanTime17delayMillisecondsEj>:
    2af0:	28 ee       	ldi	r18, 0xE8	; 232
    2af2:	33 e0       	ldi	r19, 0x03	; 3
    2af4:	01 97       	sbiw	r24, 0x01	; 1
    2af6:	48 f0       	brcs	.+18     	; 0x2b0a <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    2af8:	f9 01       	movw	r30, r18
    2afa:	6f 93       	push	r22
    2afc:	64 e0       	ldi	r22, 0x04	; 4
    2afe:	6a 95       	dec	r22
    2b00:	f1 f7       	brne	.-4      	; 0x2afe <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    2b02:	6f 91       	pop	r22
    2b04:	31 97       	sbiw	r30, 0x01	; 1
    2b06:	c9 f7       	brne	.-14     	; 0x2afa <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    2b08:	f5 cf       	rjmp	.-22     	; 0x2af4 <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    2b0a:	08 95       	ret

00002b0c <delay_ms>:
    2b0c:	0e 94 78 15 	call	0x2af0	; 0x2af0 <_ZN13OrangutanTime17delayMillisecondsEj>
    2b10:	08 95       	ret

00002b12 <_ZN13OrangutanTime5init2Ev>:
    2b12:	e0 e7       	ldi	r30, 0x70	; 112
    2b14:	f0 e0       	ldi	r31, 0x00	; 0
    2b16:	80 81       	ld	r24, Z
    2b18:	8e 7f       	andi	r24, 0xFE	; 254
    2b1a:	80 83       	st	Z, r24
    2b1c:	a0 eb       	ldi	r26, 0xB0	; 176
    2b1e:	b0 e0       	ldi	r27, 0x00	; 0
    2b20:	8c 91       	ld	r24, X
    2b22:	83 60       	ori	r24, 0x03	; 3
    2b24:	8c 93       	st	X, r24
    2b26:	a1 eb       	ldi	r26, 0xB1	; 177
    2b28:	b0 e0       	ldi	r27, 0x00	; 0
    2b2a:	8c 91       	ld	r24, X
    2b2c:	80 7f       	andi	r24, 0xF0	; 240
    2b2e:	8c 93       	st	X, r24
    2b30:	8c 91       	ld	r24, X
    2b32:	82 60       	ori	r24, 0x02	; 2
    2b34:	8c 93       	st	X, r24
    2b36:	b8 9a       	sbi	0x17, 0	; 23
    2b38:	80 81       	ld	r24, Z
    2b3a:	81 60       	ori	r24, 0x01	; 1
    2b3c:	80 83       	st	Z, r24
    2b3e:	78 94       	sei
    2b40:	08 95       	ret

00002b42 <_ZN13OrangutanTime4initEv>:
    2b42:	80 91 0b 02 	lds	r24, 0x020B	; 0x80020b <_ZZN13OrangutanTime4initEvE11initialized>
    2b46:	81 11       	cpse	r24, r1
    2b48:	05 c0       	rjmp	.+10     	; 0x2b54 <_ZN13OrangutanTime4initEv+0x12>
    2b4a:	81 e0       	ldi	r24, 0x01	; 1
    2b4c:	80 93 0b 02 	sts	0x020B, r24	; 0x80020b <_ZZN13OrangutanTime4initEvE11initialized>
    2b50:	0e 94 89 15 	call	0x2b12	; 0x2b12 <_ZN13OrangutanTime5init2Ev>
    2b54:	08 95       	ret

00002b56 <_ZN13OrangutanTime2msEv>:
    2b56:	0e 94 a1 15 	call	0x2b42	; 0x2b42 <_ZN13OrangutanTime4initEv>
    2b5a:	e0 e7       	ldi	r30, 0x70	; 112
    2b5c:	f0 e0       	ldi	r31, 0x00	; 0
    2b5e:	80 81       	ld	r24, Z
    2b60:	8e 7f       	andi	r24, 0xFE	; 254
    2b62:	80 83       	st	Z, r24
    2b64:	60 91 b1 01 	lds	r22, 0x01B1	; 0x8001b1 <msCounter>
    2b68:	70 91 b2 01 	lds	r23, 0x01B2	; 0x8001b2 <msCounter+0x1>
    2b6c:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <msCounter+0x2>
    2b70:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <msCounter+0x3>
    2b74:	20 81       	ld	r18, Z
    2b76:	21 60       	ori	r18, 0x01	; 1
    2b78:	20 83       	st	Z, r18
    2b7a:	08 95       	ret

00002b7c <get_ms>:
    2b7c:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <_ZN13OrangutanTime2msEv>
    2b80:	08 95       	ret

00002b82 <_ZN13OrangutanTime5resetEv>:
    2b82:	0e 94 a1 15 	call	0x2b42	; 0x2b42 <_ZN13OrangutanTime4initEv>
    2b86:	e0 e7       	ldi	r30, 0x70	; 112
    2b88:	f0 e0       	ldi	r31, 0x00	; 0
    2b8a:	80 81       	ld	r24, Z
    2b8c:	8e 7f       	andi	r24, 0xFE	; 254
    2b8e:	80 83       	st	Z, r24
    2b90:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <msCounter>
    2b94:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <msCounter+0x1>
    2b98:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <msCounter+0x2>
    2b9c:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <msCounter+0x3>
    2ba0:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <us_over_10+0x1>
    2ba4:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <us_over_10>
    2ba8:	80 81       	ld	r24, Z
    2baa:	81 60       	ori	r24, 0x01	; 1
    2bac:	80 83       	st	Z, r24
    2bae:	08 95       	ret

00002bb0 <calibrate_line_sensors>:
    2bb0:	68 2f       	mov	r22, r24
    2bb2:	89 eb       	ldi	r24, 0xB9	; 185
    2bb4:	91 e0       	ldi	r25, 0x01	; 1
    2bb6:	0e 94 c7 19 	call	0x338e	; 0x338e <_ZN16PololuQTRSensors9calibrateEh>
    2bba:	08 95       	ret

00002bbc <read_line_sensors_calibrated>:
    2bbc:	46 2f       	mov	r20, r22
    2bbe:	bc 01       	movw	r22, r24
    2bc0:	89 eb       	ldi	r24, 0xB9	; 185
    2bc2:	91 e0       	ldi	r25, 0x01	; 1
    2bc4:	0e 94 eb 19 	call	0x33d6	; 0x33d6 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    2bc8:	08 95       	ret

00002bca <read_line>:
    2bca:	46 2f       	mov	r20, r22
    2bcc:	20 e0       	ldi	r18, 0x00	; 0
    2bce:	bc 01       	movw	r22, r24
    2bd0:	89 eb       	ldi	r24, 0xB9	; 185
    2bd2:	91 e0       	ldi	r25, 0x01	; 1
    2bd4:	0e 94 98 1a 	call	0x3530	; 0x3530 <_ZN16PololuQTRSensors8readLineEPjhh>
    2bd8:	08 95       	ret

00002bda <_ZN9Pololu3pi4initEjh>:
    2bda:	0f 93       	push	r16
    2bdc:	cf 93       	push	r28
    2bde:	df 93       	push	r29
    2be0:	00 d0       	rcall	.+0      	; 0x2be2 <_ZN9Pololu3pi4initEjh+0x8>
    2be2:	00 d0       	rcall	.+0      	; 0x2be4 <_ZN9Pololu3pi4initEjh+0xa>
    2be4:	1f 92       	push	r1
    2be6:	cd b7       	in	r28, 0x3d	; 61
    2be8:	de b7       	in	r29, 0x3e	; 62
    2bea:	9c 01       	movw	r18, r24
    2bec:	85 e0       	ldi	r24, 0x05	; 5
    2bee:	e0 e5       	ldi	r30, 0x50	; 80
    2bf0:	f1 e0       	ldi	r31, 0x01	; 1
    2bf2:	de 01       	movw	r26, r28
    2bf4:	11 96       	adiw	r26, 0x01	; 1
    2bf6:	01 90       	ld	r0, Z+
    2bf8:	0d 92       	st	X+, r0
    2bfa:	8a 95       	dec	r24
    2bfc:	e1 f7       	brne	.-8      	; 0x2bf6 <_ZN9Pololu3pi4initEjh+0x1c>
    2bfe:	66 23       	and	r22, r22
    2c00:	11 f0       	breq	.+4      	; 0x2c06 <_ZN9Pololu3pi4initEjh+0x2c>
    2c02:	0f ef       	ldi	r16, 0xFF	; 255
    2c04:	01 c0       	rjmp	.+2      	; 0x2c08 <_ZN9Pololu3pi4initEjh+0x2e>
    2c06:	03 e1       	ldi	r16, 0x13	; 19
    2c08:	45 e0       	ldi	r20, 0x05	; 5
    2c0a:	be 01       	movw	r22, r28
    2c0c:	6f 5f       	subi	r22, 0xFF	; 255
    2c0e:	7f 4f       	sbci	r23, 0xFF	; 255
    2c10:	89 eb       	ldi	r24, 0xB9	; 185
    2c12:	91 e0       	ldi	r25, 0x01	; 1
    2c14:	0e 94 bf 16 	call	0x2d7e	; 0x2d7e <_ZN18PololuQTRSensorsRC4initEPhhjh>
    2c18:	89 eb       	ldi	r24, 0xB9	; 185
    2c1a:	91 e0       	ldi	r25, 0x01	; 1
    2c1c:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <_ZN16PololuQTRSensors11emittersOffEv>
    2c20:	0e 94 c1 15 	call	0x2b82	; 0x2b82 <_ZN13OrangutanTime5resetEv>
    2c24:	0f 90       	pop	r0
    2c26:	0f 90       	pop	r0
    2c28:	0f 90       	pop	r0
    2c2a:	0f 90       	pop	r0
    2c2c:	0f 90       	pop	r0
    2c2e:	df 91       	pop	r29
    2c30:	cf 91       	pop	r28
    2c32:	0f 91       	pop	r16
    2c34:	08 95       	ret

00002c36 <pololu_3pi_init>:
    2c36:	60 e0       	ldi	r22, 0x00	; 0
    2c38:	0e 94 ed 15 	call	0x2bda	; 0x2bda <_ZN9Pololu3pi4initEjh>
    2c3c:	08 95       	ret

00002c3e <_GLOBAL__sub_D_pololu_3pi_init>:
    2c3e:	89 eb       	ldi	r24, 0xB9	; 185
    2c40:	91 e0       	ldi	r25, 0x01	; 1
    2c42:	0e 94 0d 1b 	call	0x361a	; 0x361a <_ZN16PololuQTRSensorsD1Ev>
    2c46:	08 95       	ret

00002c48 <delay_us>:
    2c48:	6f 93       	push	r22
    2c4a:	64 e0       	ldi	r22, 0x04	; 4
    2c4c:	6a 95       	dec	r22
    2c4e:	f1 f7       	brne	.-4      	; 0x2c4c <delay_us+0x4>
    2c50:	6f 91       	pop	r22
    2c52:	01 97       	sbiw	r24, 0x01	; 1
    2c54:	c9 f7       	brne	.-14     	; 0x2c48 <delay_us>
    2c56:	08 95       	ret

00002c58 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    2c58:	fc 01       	movw	r30, r24
    2c5a:	11 82       	std	Z+1, r1	; 0x01
    2c5c:	10 82       	st	Z, r1
    2c5e:	13 82       	std	Z+3, r1	; 0x03
    2c60:	12 82       	std	Z+2, r1	; 0x02
    2c62:	15 82       	std	Z+5, r1	; 0x05
    2c64:	14 82       	std	Z+4, r1	; 0x04
    2c66:	16 82       	std	Z+6, r1	; 0x06
    2c68:	68 30       	cpi	r22, 0x08	; 8
    2c6a:	68 f4       	brcc	.+26     	; 0x2c86 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    2c6c:	89 e2       	ldi	r24, 0x29	; 41
    2c6e:	90 e0       	ldi	r25, 0x00	; 0
    2c70:	91 83       	std	Z+1, r25	; 0x01
    2c72:	80 83       	st	Z, r24
    2c74:	8b e2       	ldi	r24, 0x2B	; 43
    2c76:	90 e0       	ldi	r25, 0x00	; 0
    2c78:	93 83       	std	Z+3, r25	; 0x03
    2c7a:	82 83       	std	Z+2, r24	; 0x02
    2c7c:	8a e2       	ldi	r24, 0x2A	; 42
    2c7e:	90 e0       	ldi	r25, 0x00	; 0
    2c80:	95 83       	std	Z+5, r25	; 0x05
    2c82:	84 83       	std	Z+4, r24	; 0x04
    2c84:	1f c0       	rjmp	.+62     	; 0x2cc4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2c86:	6e 30       	cpi	r22, 0x0E	; 14
    2c88:	70 f4       	brcc	.+28     	; 0x2ca6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    2c8a:	83 e2       	ldi	r24, 0x23	; 35
    2c8c:	90 e0       	ldi	r25, 0x00	; 0
    2c8e:	91 83       	std	Z+1, r25	; 0x01
    2c90:	80 83       	st	Z, r24
    2c92:	85 e2       	ldi	r24, 0x25	; 37
    2c94:	90 e0       	ldi	r25, 0x00	; 0
    2c96:	93 83       	std	Z+3, r25	; 0x03
    2c98:	82 83       	std	Z+2, r24	; 0x02
    2c9a:	84 e2       	ldi	r24, 0x24	; 36
    2c9c:	90 e0       	ldi	r25, 0x00	; 0
    2c9e:	95 83       	std	Z+5, r25	; 0x05
    2ca0:	84 83       	std	Z+4, r24	; 0x04
    2ca2:	68 50       	subi	r22, 0x08	; 8
    2ca4:	0f c0       	rjmp	.+30     	; 0x2cc4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2ca6:	65 31       	cpi	r22, 0x15	; 21
    2ca8:	98 f4       	brcc	.+38     	; 0x2cd0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    2caa:	86 e2       	ldi	r24, 0x26	; 38
    2cac:	90 e0       	ldi	r25, 0x00	; 0
    2cae:	91 83       	std	Z+1, r25	; 0x01
    2cb0:	80 83       	st	Z, r24
    2cb2:	88 e2       	ldi	r24, 0x28	; 40
    2cb4:	90 e0       	ldi	r25, 0x00	; 0
    2cb6:	93 83       	std	Z+3, r25	; 0x03
    2cb8:	82 83       	std	Z+2, r24	; 0x02
    2cba:	87 e2       	ldi	r24, 0x27	; 39
    2cbc:	90 e0       	ldi	r25, 0x00	; 0
    2cbe:	95 83       	std	Z+5, r25	; 0x05
    2cc0:	84 83       	std	Z+4, r24	; 0x04
    2cc2:	6e 50       	subi	r22, 0x0E	; 14
    2cc4:	81 e0       	ldi	r24, 0x01	; 1
    2cc6:	01 c0       	rjmp	.+2      	; 0x2cca <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    2cc8:	88 0f       	add	r24, r24
    2cca:	6a 95       	dec	r22
    2ccc:	ea f7       	brpl	.-6      	; 0x2cc8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    2cce:	86 83       	std	Z+6, r24	; 0x06
    2cd0:	08 95       	ret

00002cd2 <_ZN16PololuQTRSensors4initEhhh>:
    2cd2:	a7 e0       	ldi	r26, 0x07	; 7
    2cd4:	b0 e0       	ldi	r27, 0x00	; 0
    2cd6:	ef e6       	ldi	r30, 0x6F	; 111
    2cd8:	f6 e1       	ldi	r31, 0x16	; 22
    2cda:	0c 94 d6 1b 	jmp	0x37ac	; 0x37ac <__prologue_saves__+0x1c>
    2cde:	8c 01       	movw	r16, r24
    2ce0:	fc 01       	movw	r30, r24
    2ce2:	11 82       	std	Z+1, r1	; 0x01
    2ce4:	10 82       	st	Z, r1
    2ce6:	13 82       	std	Z+3, r1	; 0x03
    2ce8:	12 82       	std	Z+2, r1	; 0x02
    2cea:	15 82       	std	Z+5, r1	; 0x05
    2cec:	14 82       	std	Z+4, r1	; 0x04
    2cee:	17 82       	std	Z+7, r1	; 0x07
    2cf0:	16 82       	std	Z+6, r1	; 0x06
    2cf2:	61 31       	cpi	r22, 0x11	; 17
    2cf4:	18 f0       	brcs	.+6      	; 0x2cfc <_ZN16PololuQTRSensors4initEhhh+0x2a>
    2cf6:	80 e1       	ldi	r24, 0x10	; 16
    2cf8:	80 87       	std	Z+8, r24	; 0x08
    2cfa:	02 c0       	rjmp	.+4      	; 0x2d00 <_ZN16PololuQTRSensors4initEhhh+0x2e>
    2cfc:	fc 01       	movw	r30, r24
    2cfe:	60 87       	std	Z+8, r22	; 0x08
    2d00:	f8 01       	movw	r30, r16
    2d02:	20 8b       	std	Z+16, r18	; 0x10
    2d04:	64 2f       	mov	r22, r20
    2d06:	ce 01       	movw	r24, r28
    2d08:	01 96       	adiw	r24, 0x01	; 1
    2d0a:	0e 94 2c 16 	call	0x2c58	; 0x2c58 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    2d0e:	8f 81       	ldd	r24, Y+7	; 0x07
    2d10:	f8 01       	movw	r30, r16
    2d12:	81 87       	std	Z+9, r24	; 0x09
    2d14:	8b 81       	ldd	r24, Y+3	; 0x03
    2d16:	9c 81       	ldd	r25, Y+4	; 0x04
    2d18:	93 87       	std	Z+11, r25	; 0x0b
    2d1a:	82 87       	std	Z+10, r24	; 0x0a
    2d1c:	8d 81       	ldd	r24, Y+5	; 0x05
    2d1e:	9e 81       	ldd	r25, Y+6	; 0x06
    2d20:	95 87       	std	Z+13, r25	; 0x0d
    2d22:	84 87       	std	Z+12, r24	; 0x0c
    2d24:	27 96       	adiw	r28, 0x07	; 7
    2d26:	e4 e0       	ldi	r30, 0x04	; 4
    2d28:	0c 94 f2 1b 	jmp	0x37e4	; 0x37e4 <__epilogue_restores__+0x1c>

00002d2c <_ZN16PololuQTRSensors11emittersOffEv>:
    2d2c:	fc 01       	movw	r30, r24
    2d2e:	a4 85       	ldd	r26, Z+12	; 0x0c
    2d30:	b5 85       	ldd	r27, Z+13	; 0x0d
    2d32:	10 97       	sbiw	r26, 0x00	; 0
    2d34:	79 f0       	breq	.+30     	; 0x2d54 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    2d36:	8c 91       	ld	r24, X
    2d38:	91 85       	ldd	r25, Z+9	; 0x09
    2d3a:	89 2b       	or	r24, r25
    2d3c:	8c 93       	st	X, r24
    2d3e:	a2 85       	ldd	r26, Z+10	; 0x0a
    2d40:	b3 85       	ldd	r27, Z+11	; 0x0b
    2d42:	9c 91       	ld	r25, X
    2d44:	81 85       	ldd	r24, Z+9	; 0x09
    2d46:	80 95       	com	r24
    2d48:	89 23       	and	r24, r25
    2d4a:	8c 93       	st	X, r24
    2d4c:	88 ec       	ldi	r24, 0xC8	; 200
    2d4e:	90 e0       	ldi	r25, 0x00	; 0
    2d50:	0e 94 24 16 	call	0x2c48	; 0x2c48 <delay_us>
    2d54:	08 95       	ret

00002d56 <_ZN16PololuQTRSensors10emittersOnEv>:
    2d56:	fc 01       	movw	r30, r24
    2d58:	a4 85       	ldd	r26, Z+12	; 0x0c
    2d5a:	b5 85       	ldd	r27, Z+13	; 0x0d
    2d5c:	10 97       	sbiw	r26, 0x00	; 0
    2d5e:	71 f0       	breq	.+28     	; 0x2d7c <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    2d60:	8c 91       	ld	r24, X
    2d62:	91 85       	ldd	r25, Z+9	; 0x09
    2d64:	89 2b       	or	r24, r25
    2d66:	8c 93       	st	X, r24
    2d68:	a2 85       	ldd	r26, Z+10	; 0x0a
    2d6a:	b3 85       	ldd	r27, Z+11	; 0x0b
    2d6c:	8c 91       	ld	r24, X
    2d6e:	91 85       	ldd	r25, Z+9	; 0x09
    2d70:	89 2b       	or	r24, r25
    2d72:	8c 93       	st	X, r24
    2d74:	88 ec       	ldi	r24, 0xC8	; 200
    2d76:	90 e0       	ldi	r25, 0x00	; 0
    2d78:	0e 94 24 16 	call	0x2c48	; 0x2c48 <delay_us>
    2d7c:	08 95       	ret

00002d7e <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    2d7e:	a7 e0       	ldi	r26, 0x07	; 7
    2d80:	b0 e0       	ldi	r27, 0x00	; 0
    2d82:	e5 ec       	ldi	r30, 0xC5	; 197
    2d84:	f6 e1       	ldi	r31, 0x16	; 22
    2d86:	0c 94 cb 1b 	jmp	0x3796	; 0x3796 <__prologue_saves__+0x6>
    2d8a:	7c 01       	movw	r14, r24
    2d8c:	4b 01       	movw	r8, r22
    2d8e:	64 2f       	mov	r22, r20
    2d90:	39 01       	movw	r6, r18
    2d92:	40 2f       	mov	r20, r16
    2d94:	20 e0       	ldi	r18, 0x00	; 0
    2d96:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <_ZN16PololuQTRSensors4initEhhh>
    2d9a:	87 01       	movw	r16, r14
    2d9c:	0f 5b       	subi	r16, 0xBF	; 191
    2d9e:	1f 4f       	sbci	r17, 0xFF	; 255
    2da0:	f8 01       	movw	r30, r16
    2da2:	10 82       	st	Z, r1
    2da4:	67 01       	movw	r12, r14
    2da6:	f2 e4       	ldi	r31, 0x42	; 66
    2da8:	cf 0e       	add	r12, r31
    2daa:	d1 1c       	adc	r13, r1
    2dac:	f6 01       	movw	r30, r12
    2dae:	10 82       	st	Z, r1
    2db0:	57 01       	movw	r10, r14
    2db2:	f3 e4       	ldi	r31, 0x43	; 67
    2db4:	af 0e       	add	r10, r31
    2db6:	b1 1c       	adc	r11, r1
    2db8:	f5 01       	movw	r30, r10
    2dba:	10 82       	st	Z, r1
    2dbc:	f7 01       	movw	r30, r14
    2dbe:	77 86       	std	Z+15, r7	; 0x0f
    2dc0:	66 86       	std	Z+14, r6	; 0x0e
    2dc2:	51 2c       	mov	r5, r1
    2dc4:	f7 01       	movw	r30, r14
    2dc6:	80 85       	ldd	r24, Z+8	; 0x08
    2dc8:	58 16       	cp	r5, r24
    2dca:	50 f5       	brcc	.+84     	; 0x2e20 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    2dcc:	65 2c       	mov	r6, r5
    2dce:	71 2c       	mov	r7, r1
    2dd0:	f4 01       	movw	r30, r8
    2dd2:	e6 0d       	add	r30, r6
    2dd4:	f7 1d       	adc	r31, r7
    2dd6:	60 81       	ld	r22, Z
    2dd8:	ce 01       	movw	r24, r28
    2dda:	01 96       	adiw	r24, 0x01	; 1
    2ddc:	0e 94 2c 16 	call	0x2c58	; 0x2c58 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    2de0:	2f 81       	ldd	r18, Y+7	; 0x07
    2de2:	f7 01       	movw	r30, r14
    2de4:	e6 0d       	add	r30, r6
    2de6:	f7 1d       	adc	r31, r7
    2de8:	21 8b       	std	Z+17, r18	; 0x11
    2dea:	89 81       	ldd	r24, Y+1	; 0x01
    2dec:	9a 81       	ldd	r25, Y+2	; 0x02
    2dee:	f3 01       	movw	r30, r6
    2df0:	ee 0f       	add	r30, r30
    2df2:	ff 1f       	adc	r31, r31
    2df4:	ee 0d       	add	r30, r14
    2df6:	ff 1d       	adc	r31, r15
    2df8:	92 a3       	std	Z+34, r25	; 0x22
    2dfa:	81 a3       	std	Z+33, r24	; 0x21
    2dfc:	83 32       	cpi	r24, 0x23	; 35
    2dfe:	91 05       	cpc	r25, r1
    2e00:	11 f4       	brne	.+4      	; 0x2e06 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    2e02:	f8 01       	movw	r30, r16
    2e04:	08 c0       	rjmp	.+16     	; 0x2e16 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    2e06:	86 32       	cpi	r24, 0x26	; 38
    2e08:	91 05       	cpc	r25, r1
    2e0a:	11 f4       	brne	.+4      	; 0x2e10 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    2e0c:	f6 01       	movw	r30, r12
    2e0e:	03 c0       	rjmp	.+6      	; 0x2e16 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    2e10:	89 97       	sbiw	r24, 0x29	; 41
    2e12:	21 f4       	brne	.+8      	; 0x2e1c <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    2e14:	f5 01       	movw	r30, r10
    2e16:	80 81       	ld	r24, Z
    2e18:	82 2b       	or	r24, r18
    2e1a:	80 83       	st	Z, r24
    2e1c:	53 94       	inc	r5
    2e1e:	d2 cf       	rjmp	.-92     	; 0x2dc4 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    2e20:	27 96       	adiw	r28, 0x07	; 7
    2e22:	ef e0       	ldi	r30, 0x0F	; 15
    2e24:	0c 94 e7 1b 	jmp	0x37ce	; 0x37ce <__epilogue_restores__+0x6>

00002e28 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    2e28:	a0 e0       	ldi	r26, 0x00	; 0
    2e2a:	b0 e0       	ldi	r27, 0x00	; 0
    2e2c:	ea e1       	ldi	r30, 0x1A	; 26
    2e2e:	f7 e1       	ldi	r31, 0x17	; 23
    2e30:	0c 94 cd 1b 	jmp	0x379a	; 0x379a <__prologue_saves__+0xa>
    2e34:	ec 01       	movw	r28, r24
    2e36:	5b 01       	movw	r10, r22
    2e38:	6c 01       	movw	r12, r24
    2e3a:	81 e4       	ldi	r24, 0x41	; 65
    2e3c:	c8 0e       	add	r12, r24
    2e3e:	d1 1c       	adc	r13, r1
    2e40:	f6 01       	movw	r30, r12
    2e42:	80 80       	ld	r8, Z
    2e44:	7e 01       	movw	r14, r28
    2e46:	f2 e4       	ldi	r31, 0x42	; 66
    2e48:	ef 0e       	add	r14, r31
    2e4a:	f1 1c       	adc	r15, r1
    2e4c:	f7 01       	movw	r30, r14
    2e4e:	70 80       	ld	r7, Z
    2e50:	8e 01       	movw	r16, r28
    2e52:	0d 5b       	subi	r16, 0xBD	; 189
    2e54:	1f 4f       	sbci	r17, 0xFF	; 255
    2e56:	f8 01       	movw	r30, r16
    2e58:	90 80       	ld	r9, Z
    2e5a:	80 e0       	ldi	r24, 0x00	; 0
    2e5c:	98 85       	ldd	r25, Y+8	; 0x08
    2e5e:	89 17       	cp	r24, r25
    2e60:	48 f4       	brcc	.+18     	; 0x2e74 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    2e62:	f5 01       	movw	r30, r10
    2e64:	e8 0f       	add	r30, r24
    2e66:	f1 1d       	adc	r31, r1
    2e68:	e8 0f       	add	r30, r24
    2e6a:	f1 1d       	adc	r31, r1
    2e6c:	11 82       	std	Z+1, r1	; 0x01
    2e6e:	10 82       	st	Z, r1
    2e70:	8f 5f       	subi	r24, 0xFF	; 255
    2e72:	f4 cf       	rjmp	.-24     	; 0x2e5c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    2e74:	84 b1       	in	r24, 0x04	; 4
    2e76:	f6 01       	movw	r30, r12
    2e78:	90 81       	ld	r25, Z
    2e7a:	89 2b       	or	r24, r25
    2e7c:	84 b9       	out	0x04, r24	; 4
    2e7e:	87 b1       	in	r24, 0x07	; 7
    2e80:	f7 01       	movw	r30, r14
    2e82:	90 81       	ld	r25, Z
    2e84:	89 2b       	or	r24, r25
    2e86:	87 b9       	out	0x07, r24	; 7
    2e88:	8a b1       	in	r24, 0x0a	; 10
    2e8a:	f8 01       	movw	r30, r16
    2e8c:	90 81       	ld	r25, Z
    2e8e:	89 2b       	or	r24, r25
    2e90:	8a b9       	out	0x0a, r24	; 10
    2e92:	85 b1       	in	r24, 0x05	; 5
    2e94:	f6 01       	movw	r30, r12
    2e96:	90 81       	ld	r25, Z
    2e98:	89 2b       	or	r24, r25
    2e9a:	85 b9       	out	0x05, r24	; 5
    2e9c:	88 b1       	in	r24, 0x08	; 8
    2e9e:	f7 01       	movw	r30, r14
    2ea0:	90 81       	ld	r25, Z
    2ea2:	89 2b       	or	r24, r25
    2ea4:	88 b9       	out	0x08, r24	; 8
    2ea6:	8b b1       	in	r24, 0x0b	; 11
    2ea8:	f8 01       	movw	r30, r16
    2eaa:	90 81       	ld	r25, Z
    2eac:	89 2b       	or	r24, r25
    2eae:	8b b9       	out	0x0b, r24	; 11
    2eb0:	8a e0       	ldi	r24, 0x0A	; 10
    2eb2:	90 e0       	ldi	r25, 0x00	; 0
    2eb4:	0e 94 24 16 	call	0x2c48	; 0x2c48 <delay_us>
    2eb8:	94 b1       	in	r25, 0x04	; 4
    2eba:	f6 01       	movw	r30, r12
    2ebc:	80 81       	ld	r24, Z
    2ebe:	80 95       	com	r24
    2ec0:	89 23       	and	r24, r25
    2ec2:	84 b9       	out	0x04, r24	; 4
    2ec4:	97 b1       	in	r25, 0x07	; 7
    2ec6:	f7 01       	movw	r30, r14
    2ec8:	80 81       	ld	r24, Z
    2eca:	80 95       	com	r24
    2ecc:	89 23       	and	r24, r25
    2ece:	87 b9       	out	0x07, r24	; 7
    2ed0:	9a b1       	in	r25, 0x0a	; 10
    2ed2:	f8 01       	movw	r30, r16
    2ed4:	80 81       	ld	r24, Z
    2ed6:	80 95       	com	r24
    2ed8:	89 23       	and	r24, r25
    2eda:	8a b9       	out	0x0a, r24	; 10
    2edc:	95 b1       	in	r25, 0x05	; 5
    2ede:	f6 01       	movw	r30, r12
    2ee0:	80 81       	ld	r24, Z
    2ee2:	80 95       	com	r24
    2ee4:	89 23       	and	r24, r25
    2ee6:	85 b9       	out	0x05, r24	; 5
    2ee8:	98 b1       	in	r25, 0x08	; 8
    2eea:	f7 01       	movw	r30, r14
    2eec:	80 81       	ld	r24, Z
    2eee:	80 95       	com	r24
    2ef0:	89 23       	and	r24, r25
    2ef2:	88 b9       	out	0x08, r24	; 8
    2ef4:	9b b1       	in	r25, 0x0b	; 11
    2ef6:	f8 01       	movw	r30, r16
    2ef8:	80 81       	ld	r24, Z
    2efa:	80 95       	com	r24
    2efc:	89 23       	and	r24, r25
    2efe:	8b b9       	out	0x0b, r24	; 11
    2f00:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2f04:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    2f08:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2f0c:	83 60       	ori	r24, 0x03	; 3
    2f0e:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2f12:	82 e0       	ldi	r24, 0x02	; 2
    2f14:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    2f18:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2f1c:	80 e0       	ldi	r24, 0x00	; 0
    2f1e:	90 e0       	ldi	r25, 0x00	; 0
    2f20:	2e 85       	ldd	r18, Y+14	; 0x0e
    2f22:	3f 85       	ldd	r19, Y+15	; 0x0f
    2f24:	82 17       	cp	r24, r18
    2f26:	93 07       	cpc	r25, r19
    2f28:	20 f5       	brcc	.+72     	; 0x2f72 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    2f2a:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2f2e:	2c 2d       	mov	r18, r12
    2f30:	24 1b       	sub	r18, r20
    2f32:	82 0f       	add	r24, r18
    2f34:	91 1d       	adc	r25, r1
    2f36:	03 b1       	in	r16, 0x03	; 3
    2f38:	08 11       	cpse	r16, r8
    2f3a:	32 c0       	rjmp	.+100    	; 0x2fa0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    2f3c:	f6 b0       	in	r15, 0x06	; 6
    2f3e:	f7 10       	cpse	r15, r7
    2f40:	2f c0       	rjmp	.+94     	; 0x2fa0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    2f42:	29 b1       	in	r18, 0x09	; 9
    2f44:	29 11       	cpse	r18, r9
    2f46:	2c c0       	rjmp	.+88     	; 0x2fa0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    2f48:	10 c0       	rjmp	.+32     	; 0x2f6a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    2f4a:	21 2f       	mov	r18, r17
    2f4c:	30 e0       	ldi	r19, 0x00	; 0
    2f4e:	a9 01       	movw	r20, r18
    2f50:	44 0f       	add	r20, r20
    2f52:	55 1f       	adc	r21, r21
    2f54:	f5 01       	movw	r30, r10
    2f56:	e4 0f       	add	r30, r20
    2f58:	f5 1f       	adc	r31, r21
    2f5a:	60 81       	ld	r22, Z
    2f5c:	71 81       	ldd	r23, Z+1	; 0x01
    2f5e:	67 2b       	or	r22, r23
    2f60:	21 f1       	breq	.+72     	; 0x2faa <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    2f62:	1f 5f       	subi	r17, 0xFF	; 255
    2f64:	28 85       	ldd	r18, Y+8	; 0x08
    2f66:	12 17       	cp	r17, r18
    2f68:	80 f3       	brcs	.-32     	; 0x2f4a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    2f6a:	7f 2c       	mov	r7, r15
    2f6c:	80 2e       	mov	r8, r16
    2f6e:	4c 2d       	mov	r20, r12
    2f70:	d7 cf       	rjmp	.-82     	; 0x2f20 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    2f72:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2f76:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    2f7a:	20 e0       	ldi	r18, 0x00	; 0
    2f7c:	88 85       	ldd	r24, Y+8	; 0x08
    2f7e:	28 17       	cp	r18, r24
    2f80:	30 f5       	brcc	.+76     	; 0x2fce <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    2f82:	f5 01       	movw	r30, r10
    2f84:	e2 0f       	add	r30, r18
    2f86:	f1 1d       	adc	r31, r1
    2f88:	e2 0f       	add	r30, r18
    2f8a:	f1 1d       	adc	r31, r1
    2f8c:	80 81       	ld	r24, Z
    2f8e:	91 81       	ldd	r25, Z+1	; 0x01
    2f90:	89 2b       	or	r24, r25
    2f92:	21 f4       	brne	.+8      	; 0x2f9c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    2f94:	8e 85       	ldd	r24, Y+14	; 0x0e
    2f96:	9f 85       	ldd	r25, Y+15	; 0x0f
    2f98:	91 83       	std	Z+1, r25	; 0x01
    2f9a:	80 83       	st	Z, r24
    2f9c:	2f 5f       	subi	r18, 0xFF	; 255
    2f9e:	ee cf       	rjmp	.-36     	; 0x2f7c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    2fa0:	03 b1       	in	r16, 0x03	; 3
    2fa2:	f6 b0       	in	r15, 0x06	; 6
    2fa4:	99 b0       	in	r9, 0x09	; 9
    2fa6:	10 e0       	ldi	r17, 0x00	; 0
    2fa8:	dd cf       	rjmp	.-70     	; 0x2f64 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    2faa:	de 01       	movw	r26, r28
    2fac:	a4 0f       	add	r26, r20
    2fae:	b5 1f       	adc	r27, r21
    2fb0:	91 96       	adiw	r26, 0x21	; 33
    2fb2:	0d 90       	ld	r0, X+
    2fb4:	bc 91       	ld	r27, X
    2fb6:	a0 2d       	mov	r26, r0
    2fb8:	4c 91       	ld	r20, X
    2fba:	de 01       	movw	r26, r28
    2fbc:	a2 0f       	add	r26, r18
    2fbe:	b3 1f       	adc	r27, r19
    2fc0:	51 96       	adiw	r26, 0x11	; 17
    2fc2:	2c 91       	ld	r18, X
    2fc4:	42 23       	and	r20, r18
    2fc6:	69 f6       	brne	.-102    	; 0x2f62 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    2fc8:	91 83       	std	Z+1, r25	; 0x01
    2fca:	80 83       	st	Z, r24
    2fcc:	ca cf       	rjmp	.-108    	; 0x2f62 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    2fce:	cd b7       	in	r28, 0x3d	; 61
    2fd0:	de b7       	in	r29, 0x3e	; 62
    2fd2:	ed e0       	ldi	r30, 0x0D	; 13
    2fd4:	0c 94 e9 1b 	jmp	0x37d2	; 0x37d2 <__epilogue_restores__+0xa>

00002fd8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    2fd8:	ef 92       	push	r14
    2fda:	ff 92       	push	r15
    2fdc:	0f 93       	push	r16
    2fde:	1f 93       	push	r17
    2fe0:	cf 93       	push	r28
    2fe2:	df 93       	push	r29
    2fe4:	fc 01       	movw	r30, r24
    2fe6:	9b 01       	movw	r18, r22
    2fe8:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    2fec:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    2ff0:	47 b1       	in	r20, 0x07	; 7
    2ff2:	18 b1       	in	r17, 0x08	; 8
    2ff4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    2ff8:	86 fd       	sbrc	r24, 6
    2ffa:	fc cf       	rjmp	.-8      	; 0x2ff4 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    2ffc:	80 e0       	ldi	r24, 0x00	; 0
    2ffe:	90 85       	ldd	r25, Z+8	; 0x08
    3000:	89 17       	cp	r24, r25
    3002:	48 f4       	brcc	.+18     	; 0x3016 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    3004:	d9 01       	movw	r26, r18
    3006:	a8 0f       	add	r26, r24
    3008:	b1 1d       	adc	r27, r1
    300a:	a8 0f       	add	r26, r24
    300c:	b1 1d       	adc	r27, r1
    300e:	1d 92       	st	X+, r1
    3010:	1c 92       	st	X, r1
    3012:	8f 5f       	subi	r24, 0xFF	; 255
    3014:	f4 cf       	rjmp	.-24     	; 0x2ffe <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    3016:	97 b1       	in	r25, 0x07	; 7
    3018:	82 a1       	ldd	r24, Z+34	; 0x22
    301a:	80 95       	com	r24
    301c:	89 23       	and	r24, r25
    301e:	87 b9       	out	0x07, r24	; 7
    3020:	98 b1       	in	r25, 0x08	; 8
    3022:	82 a1       	ldd	r24, Z+34	; 0x22
    3024:	80 95       	com	r24
    3026:	89 23       	and	r24, r25
    3028:	88 b9       	out	0x08, r24	; 8
    302a:	87 e8       	ldi	r24, 0x87	; 135
    302c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3030:	e1 2c       	mov	r14, r1
    3032:	81 a1       	ldd	r24, Z+33	; 0x21
    3034:	e8 16       	cp	r14, r24
    3036:	10 f0       	brcs	.+4      	; 0x303c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    3038:	e1 2c       	mov	r14, r1
    303a:	29 c0       	rjmp	.+82     	; 0x308e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    303c:	50 e0       	ldi	r21, 0x00	; 0
    303e:	80 85       	ldd	r24, Z+8	; 0x08
    3040:	58 17       	cp	r21, r24
    3042:	18 f5       	brcc	.+70     	; 0x308a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    3044:	a5 2f       	mov	r26, r21
    3046:	b0 e0       	ldi	r27, 0x00	; 0
    3048:	ef 01       	movw	r28, r30
    304a:	ca 0f       	add	r28, r26
    304c:	db 1f       	adc	r29, r27
    304e:	89 89       	ldd	r24, Y+17	; 0x11
    3050:	80 64       	ori	r24, 0x40	; 64
    3052:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    3056:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    305a:	80 64       	ori	r24, 0x40	; 64
    305c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3060:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3064:	86 fd       	sbrc	r24, 6
    3066:	fc cf       	rjmp	.-8      	; 0x3060 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    3068:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    306c:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    3070:	aa 0f       	add	r26, r26
    3072:	bb 1f       	adc	r27, r27
    3074:	a2 0f       	add	r26, r18
    3076:	b3 1f       	adc	r27, r19
    3078:	8d 91       	ld	r24, X+
    307a:	9c 91       	ld	r25, X
    307c:	11 97       	sbiw	r26, 0x01	; 1
    307e:	86 0f       	add	r24, r22
    3080:	97 1f       	adc	r25, r23
    3082:	8d 93       	st	X+, r24
    3084:	9c 93       	st	X, r25
    3086:	5f 5f       	subi	r21, 0xFF	; 255
    3088:	da cf       	rjmp	.-76     	; 0x303e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    308a:	e3 94       	inc	r14
    308c:	d2 cf       	rjmp	.-92     	; 0x3032 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    308e:	80 85       	ldd	r24, Z+8	; 0x08
    3090:	e8 16       	cp	r14, r24
    3092:	a0 f4       	brcc	.+40     	; 0x30bc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    3094:	e9 01       	movw	r28, r18
    3096:	ce 0d       	add	r28, r14
    3098:	d1 1d       	adc	r29, r1
    309a:	ce 0d       	add	r28, r14
    309c:	d1 1d       	adc	r29, r1
    309e:	61 a1       	ldd	r22, Z+33	; 0x21
    30a0:	70 e0       	ldi	r23, 0x00	; 0
    30a2:	cb 01       	movw	r24, r22
    30a4:	95 95       	asr	r25
    30a6:	87 95       	ror	r24
    30a8:	a8 81       	ld	r26, Y
    30aa:	b9 81       	ldd	r27, Y+1	; 0x01
    30ac:	8a 0f       	add	r24, r26
    30ae:	9b 1f       	adc	r25, r27
    30b0:	0e 94 37 1b 	call	0x366e	; 0x366e <__udivmodhi4>
    30b4:	79 83       	std	Y+1, r23	; 0x01
    30b6:	68 83       	st	Y, r22
    30b8:	e3 94       	inc	r14
    30ba:	e9 cf       	rjmp	.-46     	; 0x308e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    30bc:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    30c0:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    30c4:	18 b9       	out	0x08, r17	; 8
    30c6:	47 b9       	out	0x07, r20	; 7
    30c8:	cd b7       	in	r28, 0x3d	; 61
    30ca:	de b7       	in	r29, 0x3e	; 62
    30cc:	e6 e0       	ldi	r30, 0x06	; 6
    30ce:	0c 94 f0 1b 	jmp	0x37e0	; 0x37e0 <__epilogue_restores__+0x18>

000030d2 <_ZN16PololuQTRSensors4readEPjh>:
    30d2:	a0 e2       	ldi	r26, 0x20	; 32
    30d4:	b0 e0       	ldi	r27, 0x00	; 0
    30d6:	ef e6       	ldi	r30, 0x6F	; 111
    30d8:	f8 e1       	ldi	r31, 0x18	; 24
    30da:	0c 94 d3 1b 	jmp	0x37a6	; 0x37a6 <__prologue_saves__+0x16>
    30de:	8c 01       	movw	r16, r24
    30e0:	7b 01       	movw	r14, r22
    30e2:	d4 2e       	mov	r13, r20
    30e4:	8f ef       	ldi	r24, 0xFF	; 255
    30e6:	84 0f       	add	r24, r20
    30e8:	82 30       	cpi	r24, 0x02	; 2
    30ea:	18 f4       	brcc	.+6      	; 0x30f2 <_ZN16PololuQTRSensors4readEPjh+0x20>
    30ec:	c8 01       	movw	r24, r16
    30ee:	0e 94 ab 16 	call	0x2d56	; 0x2d56 <_ZN16PololuQTRSensors10emittersOnEv>
    30f2:	d8 01       	movw	r26, r16
    30f4:	50 96       	adiw	r26, 0x10	; 16
    30f6:	8c 91       	ld	r24, X
    30f8:	b7 01       	movw	r22, r14
    30fa:	81 11       	cpse	r24, r1
    30fc:	10 c0       	rjmp	.+32     	; 0x311e <_ZN16PololuQTRSensors4readEPjh+0x4c>
    30fe:	c8 01       	movw	r24, r16
    3100:	0e 94 14 17 	call	0x2e28	; 0x2e28 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    3104:	c8 01       	movw	r24, r16
    3106:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <_ZN16PololuQTRSensors11emittersOffEv>
    310a:	b2 e0       	ldi	r27, 0x02	; 2
    310c:	db 12       	cpse	r13, r27
    310e:	3a c0       	rjmp	.+116    	; 0x3184 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    3110:	be 01       	movw	r22, r28
    3112:	6f 5f       	subi	r22, 0xFF	; 255
    3114:	7f 4f       	sbci	r23, 0xFF	; 255
    3116:	c8 01       	movw	r24, r16
    3118:	0e 94 14 17 	call	0x2e28	; 0x2e28 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    311c:	0f c0       	rjmp	.+30     	; 0x313c <_ZN16PololuQTRSensors4readEPjh+0x6a>
    311e:	c8 01       	movw	r24, r16
    3120:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    3124:	c8 01       	movw	r24, r16
    3126:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <_ZN16PololuQTRSensors11emittersOffEv>
    312a:	e2 e0       	ldi	r30, 0x02	; 2
    312c:	de 12       	cpse	r13, r30
    312e:	2a c0       	rjmp	.+84     	; 0x3184 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    3130:	be 01       	movw	r22, r28
    3132:	6f 5f       	subi	r22, 0xFF	; 255
    3134:	7f 4f       	sbci	r23, 0xFF	; 255
    3136:	c8 01       	movw	r24, r16
    3138:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    313c:	40 e0       	ldi	r20, 0x00	; 0
    313e:	f8 01       	movw	r30, r16
    3140:	80 85       	ldd	r24, Z+8	; 0x08
    3142:	48 17       	cp	r20, r24
    3144:	f8 f4       	brcc	.+62     	; 0x3184 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    3146:	84 2f       	mov	r24, r20
    3148:	90 e0       	ldi	r25, 0x00	; 0
    314a:	88 0f       	add	r24, r24
    314c:	99 1f       	adc	r25, r25
    314e:	f7 01       	movw	r30, r14
    3150:	e8 0f       	add	r30, r24
    3152:	f9 1f       	adc	r31, r25
    3154:	21 e0       	ldi	r18, 0x01	; 1
    3156:	30 e0       	ldi	r19, 0x00	; 0
    3158:	2c 0f       	add	r18, r28
    315a:	3d 1f       	adc	r19, r29
    315c:	82 0f       	add	r24, r18
    315e:	93 1f       	adc	r25, r19
    3160:	d8 01       	movw	r26, r16
    3162:	1e 96       	adiw	r26, 0x0e	; 14
    3164:	2d 91       	ld	r18, X+
    3166:	3c 91       	ld	r19, X
    3168:	1f 97       	sbiw	r26, 0x0f	; 15
    316a:	dc 01       	movw	r26, r24
    316c:	8d 91       	ld	r24, X+
    316e:	9c 91       	ld	r25, X
    3170:	28 1b       	sub	r18, r24
    3172:	39 0b       	sbc	r19, r25
    3174:	80 81       	ld	r24, Z
    3176:	91 81       	ldd	r25, Z+1	; 0x01
    3178:	82 0f       	add	r24, r18
    317a:	93 1f       	adc	r25, r19
    317c:	91 83       	std	Z+1, r25	; 0x01
    317e:	80 83       	st	Z, r24
    3180:	4f 5f       	subi	r20, 0xFF	; 255
    3182:	dd cf       	rjmp	.-70     	; 0x313e <_ZN16PololuQTRSensors4readEPjh+0x6c>
    3184:	a0 96       	adiw	r28, 0x20	; 32
    3186:	e7 e0       	ldi	r30, 0x07	; 7
    3188:	0c 94 ef 1b 	jmp	0x37de	; 0x37de <__epilogue_restores__+0x16>

0000318c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    318c:	2f 92       	push	r2
    318e:	3f 92       	push	r3
    3190:	5f 92       	push	r5
    3192:	6f 92       	push	r6
    3194:	7f 92       	push	r7
    3196:	8f 92       	push	r8
    3198:	9f 92       	push	r9
    319a:	af 92       	push	r10
    319c:	bf 92       	push	r11
    319e:	cf 92       	push	r12
    31a0:	df 92       	push	r13
    31a2:	ef 92       	push	r14
    31a4:	ff 92       	push	r15
    31a6:	0f 93       	push	r16
    31a8:	1f 93       	push	r17
    31aa:	cf 93       	push	r28
    31ac:	df 93       	push	r29
    31ae:	cd b7       	in	r28, 0x3d	; 61
    31b0:	de b7       	in	r29, 0x3e	; 62
    31b2:	c0 56       	subi	r28, 0x60	; 96
    31b4:	d1 09       	sbc	r29, r1
    31b6:	0f b6       	in	r0, 0x3f	; 63
    31b8:	f8 94       	cli
    31ba:	de bf       	out	0x3e, r29	; 62
    31bc:	0f be       	out	0x3f, r0	; 63
    31be:	cd bf       	out	0x3d, r28	; 61
    31c0:	8c 01       	movw	r16, r24
    31c2:	4b 01       	movw	r8, r22
    31c4:	5a 01       	movw	r10, r20
    31c6:	52 2e       	mov	r5, r18
    31c8:	da 01       	movw	r26, r20
    31ca:	8d 91       	ld	r24, X+
    31cc:	9c 91       	ld	r25, X
    31ce:	89 2b       	or	r24, r25
    31d0:	31 f0       	breq	.+12     	; 0x31de <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    31d2:	f4 01       	movw	r30, r8
    31d4:	80 81       	ld	r24, Z
    31d6:	91 81       	ldd	r25, Z+1	; 0x01
    31d8:	89 2b       	or	r24, r25
    31da:	f1 f4       	brne	.+60     	; 0x3218 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    31dc:	24 c0       	rjmp	.+72     	; 0x3226 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    31de:	d8 01       	movw	r26, r16
    31e0:	18 96       	adiw	r26, 0x08	; 8
    31e2:	8c 91       	ld	r24, X
    31e4:	90 e0       	ldi	r25, 0x00	; 0
    31e6:	88 0f       	add	r24, r24
    31e8:	99 1f       	adc	r25, r25
    31ea:	0e 94 ff 1b 	call	0x37fe	; 0x37fe <malloc>
    31ee:	f5 01       	movw	r30, r10
    31f0:	91 83       	std	Z+1, r25	; 0x01
    31f2:	80 83       	st	Z, r24
    31f4:	00 97       	sbiw	r24, 0x00	; 0
    31f6:	09 f4       	brne	.+2      	; 0x31fa <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    31f8:	b1 c0       	rjmp	.+354    	; 0x335c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    31fa:	fc 01       	movw	r30, r24
    31fc:	20 e0       	ldi	r18, 0x00	; 0
    31fe:	30 e0       	ldi	r19, 0x00	; 0
    3200:	d8 01       	movw	r26, r16
    3202:	18 96       	adiw	r26, 0x08	; 8
    3204:	8c 91       	ld	r24, X
    3206:	90 e0       	ldi	r25, 0x00	; 0
    3208:	28 17       	cp	r18, r24
    320a:	39 07       	cpc	r19, r25
    320c:	14 f7       	brge	.-60     	; 0x31d2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    320e:	11 92       	st	Z+, r1
    3210:	11 92       	st	Z+, r1
    3212:	2f 5f       	subi	r18, 0xFF	; 255
    3214:	3f 4f       	sbci	r19, 0xFF	; 255
    3216:	f4 cf       	rjmp	.-24     	; 0x3200 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    3218:	e1 2c       	mov	r14, r1
    321a:	f1 2c       	mov	r15, r1
    321c:	6e 01       	movw	r12, r28
    321e:	b1 e2       	ldi	r27, 0x21	; 33
    3220:	cb 0e       	add	r12, r27
    3222:	d1 1c       	adc	r13, r1
    3224:	21 c0       	rjmp	.+66     	; 0x3268 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    3226:	f8 01       	movw	r30, r16
    3228:	80 85       	ldd	r24, Z+8	; 0x08
    322a:	90 e0       	ldi	r25, 0x00	; 0
    322c:	88 0f       	add	r24, r24
    322e:	99 1f       	adc	r25, r25
    3230:	0e 94 ff 1b 	call	0x37fe	; 0x37fe <malloc>
    3234:	d4 01       	movw	r26, r8
    3236:	8d 93       	st	X+, r24
    3238:	9c 93       	st	X, r25
    323a:	00 97       	sbiw	r24, 0x00	; 0
    323c:	09 f4       	brne	.+2      	; 0x3240 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    323e:	8e c0       	rjmp	.+284    	; 0x335c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    3240:	fc 01       	movw	r30, r24
    3242:	20 e0       	ldi	r18, 0x00	; 0
    3244:	30 e0       	ldi	r19, 0x00	; 0
    3246:	d8 01       	movw	r26, r16
    3248:	18 96       	adiw	r26, 0x08	; 8
    324a:	8c 91       	ld	r24, X
    324c:	90 e0       	ldi	r25, 0x00	; 0
    324e:	28 17       	cp	r18, r24
    3250:	39 07       	cpc	r19, r25
    3252:	14 f7       	brge	.-60     	; 0x3218 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    3254:	d8 01       	movw	r26, r16
    3256:	1e 96       	adiw	r26, 0x0e	; 14
    3258:	8d 91       	ld	r24, X+
    325a:	9c 91       	ld	r25, X
    325c:	1f 97       	sbiw	r26, 0x0f	; 15
    325e:	81 93       	st	Z+, r24
    3260:	91 93       	st	Z+, r25
    3262:	2f 5f       	subi	r18, 0xFF	; 255
    3264:	3f 4f       	sbci	r19, 0xFF	; 255
    3266:	ef cf       	rjmp	.-34     	; 0x3246 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    3268:	45 2d       	mov	r20, r5
    326a:	be 01       	movw	r22, r28
    326c:	6f 5b       	subi	r22, 0xBF	; 191
    326e:	7f 4f       	sbci	r23, 0xFF	; 255
    3270:	c8 01       	movw	r24, r16
    3272:	0e 94 69 18 	call	0x30d2	; 0x30d2 <_ZN16PololuQTRSensors4readEPjh>
    3276:	f8 01       	movw	r30, r16
    3278:	60 84       	ldd	r6, Z+8	; 0x08
    327a:	71 2c       	mov	r7, r1
    327c:	fe 01       	movw	r30, r28
    327e:	ef 5b       	subi	r30, 0xBF	; 191
    3280:	ff 4f       	sbci	r31, 0xFF	; 255
    3282:	c6 01       	movw	r24, r12
    3284:	9e 01       	movw	r18, r28
    3286:	2f 5f       	subi	r18, 0xFF	; 255
    3288:	3f 4f       	sbci	r19, 0xFF	; 255
    328a:	19 01       	movw	r2, r18
    328c:	20 e0       	ldi	r18, 0x00	; 0
    328e:	30 e0       	ldi	r19, 0x00	; 0
    3290:	26 15       	cp	r18, r6
    3292:	37 05       	cpc	r19, r7
    3294:	4c f5       	brge	.+82     	; 0x32e8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    3296:	e1 14       	cp	r14, r1
    3298:	f1 04       	cpc	r15, r1
    329a:	89 f0       	breq	.+34     	; 0x32be <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    329c:	dc 01       	movw	r26, r24
    329e:	6d 91       	ld	r22, X+
    32a0:	7c 91       	ld	r23, X
    32a2:	40 81       	ld	r20, Z
    32a4:	51 81       	ldd	r21, Z+1	; 0x01
    32a6:	64 17       	cp	r22, r20
    32a8:	75 07       	cpc	r23, r21
    32aa:	48 f0       	brcs	.+18     	; 0x32be <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    32ac:	d1 01       	movw	r26, r2
    32ae:	6d 91       	ld	r22, X+
    32b0:	7c 91       	ld	r23, X
    32b2:	40 81       	ld	r20, Z
    32b4:	51 81       	ldd	r21, Z+1	; 0x01
    32b6:	46 17       	cp	r20, r22
    32b8:	57 07       	cpc	r21, r23
    32ba:	48 f0       	brcs	.+18     	; 0x32ce <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    32bc:	0d c0       	rjmp	.+26     	; 0x32d8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    32be:	40 81       	ld	r20, Z
    32c0:	51 81       	ldd	r21, Z+1	; 0x01
    32c2:	dc 01       	movw	r26, r24
    32c4:	4d 93       	st	X+, r20
    32c6:	5c 93       	st	X, r21
    32c8:	e1 14       	cp	r14, r1
    32ca:	f1 04       	cpc	r15, r1
    32cc:	79 f7       	brne	.-34     	; 0x32ac <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    32ce:	40 81       	ld	r20, Z
    32d0:	51 81       	ldd	r21, Z+1	; 0x01
    32d2:	d1 01       	movw	r26, r2
    32d4:	4d 93       	st	X+, r20
    32d6:	5c 93       	st	X, r21
    32d8:	2f 5f       	subi	r18, 0xFF	; 255
    32da:	3f 4f       	sbci	r19, 0xFF	; 255
    32dc:	b2 e0       	ldi	r27, 0x02	; 2
    32de:	2b 0e       	add	r2, r27
    32e0:	31 1c       	adc	r3, r1
    32e2:	32 96       	adiw	r30, 0x02	; 2
    32e4:	02 96       	adiw	r24, 0x02	; 2
    32e6:	d4 cf       	rjmp	.-88     	; 0x3290 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    32e8:	ef ef       	ldi	r30, 0xFF	; 255
    32ea:	ee 1a       	sub	r14, r30
    32ec:	fe 0a       	sbc	r15, r30
    32ee:	fa e0       	ldi	r31, 0x0A	; 10
    32f0:	ef 16       	cp	r14, r31
    32f2:	f1 04       	cpc	r15, r1
    32f4:	09 f0       	breq	.+2      	; 0x32f8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    32f6:	b8 cf       	rjmp	.-144    	; 0x3268 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    32f8:	9e 01       	movw	r18, r28
    32fa:	2f 5f       	subi	r18, 0xFF	; 255
    32fc:	3f 4f       	sbci	r19, 0xFF	; 255
    32fe:	79 01       	movw	r14, r18
    3300:	36 01       	movw	r6, r12
    3302:	80 e0       	ldi	r24, 0x00	; 0
    3304:	90 e0       	ldi	r25, 0x00	; 0
    3306:	f8 01       	movw	r30, r16
    3308:	20 85       	ldd	r18, Z+8	; 0x08
    330a:	30 e0       	ldi	r19, 0x00	; 0
    330c:	82 17       	cp	r24, r18
    330e:	93 07       	cpc	r25, r19
    3310:	2c f5       	brge	.+74     	; 0x335c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    3312:	d7 01       	movw	r26, r14
    3314:	2d 91       	ld	r18, X+
    3316:	3d 91       	ld	r19, X+
    3318:	7d 01       	movw	r14, r26
    331a:	b3 01       	movw	r22, r6
    331c:	6c 19       	sub	r22, r12
    331e:	7d 09       	sbc	r23, r13
    3320:	d5 01       	movw	r26, r10
    3322:	ed 91       	ld	r30, X+
    3324:	fc 91       	ld	r31, X
    3326:	e6 0f       	add	r30, r22
    3328:	f7 1f       	adc	r31, r23
    332a:	40 81       	ld	r20, Z
    332c:	51 81       	ldd	r21, Z+1	; 0x01
    332e:	42 17       	cp	r20, r18
    3330:	53 07       	cpc	r21, r19
    3332:	10 f4       	brcc	.+4      	; 0x3338 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    3334:	31 83       	std	Z+1, r19	; 0x01
    3336:	20 83       	st	Z, r18
    3338:	f3 01       	movw	r30, r6
    333a:	21 91       	ld	r18, Z+
    333c:	31 91       	ld	r19, Z+
    333e:	3f 01       	movw	r6, r30
    3340:	d4 01       	movw	r26, r8
    3342:	ed 91       	ld	r30, X+
    3344:	fc 91       	ld	r31, X
    3346:	e6 0f       	add	r30, r22
    3348:	f7 1f       	adc	r31, r23
    334a:	40 81       	ld	r20, Z
    334c:	51 81       	ldd	r21, Z+1	; 0x01
    334e:	24 17       	cp	r18, r20
    3350:	35 07       	cpc	r19, r21
    3352:	10 f4       	brcc	.+4      	; 0x3358 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    3354:	31 83       	std	Z+1, r19	; 0x01
    3356:	20 83       	st	Z, r18
    3358:	01 96       	adiw	r24, 0x01	; 1
    335a:	d5 cf       	rjmp	.-86     	; 0x3306 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    335c:	c0 5a       	subi	r28, 0xA0	; 160
    335e:	df 4f       	sbci	r29, 0xFF	; 255
    3360:	0f b6       	in	r0, 0x3f	; 63
    3362:	f8 94       	cli
    3364:	de bf       	out	0x3e, r29	; 62
    3366:	0f be       	out	0x3f, r0	; 63
    3368:	cd bf       	out	0x3d, r28	; 61
    336a:	df 91       	pop	r29
    336c:	cf 91       	pop	r28
    336e:	1f 91       	pop	r17
    3370:	0f 91       	pop	r16
    3372:	ff 90       	pop	r15
    3374:	ef 90       	pop	r14
    3376:	df 90       	pop	r13
    3378:	cf 90       	pop	r12
    337a:	bf 90       	pop	r11
    337c:	af 90       	pop	r10
    337e:	9f 90       	pop	r9
    3380:	8f 90       	pop	r8
    3382:	7f 90       	pop	r7
    3384:	6f 90       	pop	r6
    3386:	5f 90       	pop	r5
    3388:	3f 90       	pop	r3
    338a:	2f 90       	pop	r2
    338c:	08 95       	ret

0000338e <_ZN16PololuQTRSensors9calibrateEh>:
    338e:	1f 93       	push	r17
    3390:	cf 93       	push	r28
    3392:	df 93       	push	r29
    3394:	ec 01       	movw	r28, r24
    3396:	16 2f       	mov	r17, r22
    3398:	8f ef       	ldi	r24, 0xFF	; 255
    339a:	86 0f       	add	r24, r22
    339c:	82 30       	cpi	r24, 0x02	; 2
    339e:	18 f0       	brcs	.+6      	; 0x33a6 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    33a0:	66 23       	and	r22, r22
    33a2:	59 f0       	breq	.+22     	; 0x33ba <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    33a4:	14 c0       	rjmp	.+40     	; 0x33ce <_ZN16PololuQTRSensors9calibrateEh+0x40>
    33a6:	21 e0       	ldi	r18, 0x01	; 1
    33a8:	ae 01       	movw	r20, r28
    33aa:	4e 5f       	subi	r20, 0xFE	; 254
    33ac:	5f 4f       	sbci	r21, 0xFF	; 255
    33ae:	be 01       	movw	r22, r28
    33b0:	ce 01       	movw	r24, r28
    33b2:	0e 94 c6 18 	call	0x318c	; 0x318c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    33b6:	12 30       	cpi	r17, 0x02	; 2
    33b8:	51 f4       	brne	.+20     	; 0x33ce <_ZN16PololuQTRSensors9calibrateEh+0x40>
    33ba:	ae 01       	movw	r20, r28
    33bc:	4a 5f       	subi	r20, 0xFA	; 250
    33be:	5f 4f       	sbci	r21, 0xFF	; 255
    33c0:	be 01       	movw	r22, r28
    33c2:	6c 5f       	subi	r22, 0xFC	; 252
    33c4:	7f 4f       	sbci	r23, 0xFF	; 255
    33c6:	20 e0       	ldi	r18, 0x00	; 0
    33c8:	ce 01       	movw	r24, r28
    33ca:	0e 94 c6 18 	call	0x318c	; 0x318c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    33ce:	df 91       	pop	r29
    33d0:	cf 91       	pop	r28
    33d2:	1f 91       	pop	r17
    33d4:	08 95       	ret

000033d6 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    33d6:	a0 e0       	ldi	r26, 0x00	; 0
    33d8:	b0 e0       	ldi	r27, 0x00	; 0
    33da:	e1 ef       	ldi	r30, 0xF1	; 241
    33dc:	f9 e1       	ldi	r31, 0x19	; 25
    33de:	0c 94 d1 1b 	jmp	0x37a2	; 0x37a2 <__prologue_saves__+0x12>
    33e2:	ec 01       	movw	r28, r24
    33e4:	8b 01       	movw	r16, r22
    33e6:	b4 2e       	mov	r11, r20
    33e8:	84 2f       	mov	r24, r20
    33ea:	8d 7f       	andi	r24, 0xFD	; 253
    33ec:	51 f4       	brne	.+20     	; 0x3402 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    33ee:	8c 81       	ldd	r24, Y+4	; 0x04
    33f0:	9d 81       	ldd	r25, Y+5	; 0x05
    33f2:	89 2b       	or	r24, r25
    33f4:	09 f4       	brne	.+2      	; 0x33f8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    33f6:	97 c0       	rjmp	.+302    	; 0x3526 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    33f8:	8e 81       	ldd	r24, Y+6	; 0x06
    33fa:	9f 81       	ldd	r25, Y+7	; 0x07
    33fc:	89 2b       	or	r24, r25
    33fe:	09 f4       	brne	.+2      	; 0x3402 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    3400:	92 c0       	rjmp	.+292    	; 0x3526 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3402:	8f ef       	ldi	r24, 0xFF	; 255
    3404:	8b 0d       	add	r24, r11
    3406:	82 30       	cpi	r24, 0x02	; 2
    3408:	50 f4       	brcc	.+20     	; 0x341e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    340a:	88 81       	ld	r24, Y
    340c:	99 81       	ldd	r25, Y+1	; 0x01
    340e:	89 2b       	or	r24, r25
    3410:	09 f4       	brne	.+2      	; 0x3414 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    3412:	89 c0       	rjmp	.+274    	; 0x3526 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3414:	8a 81       	ldd	r24, Y+2	; 0x02
    3416:	9b 81       	ldd	r25, Y+3	; 0x03
    3418:	89 2b       	or	r24, r25
    341a:	09 f4       	brne	.+2      	; 0x341e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    341c:	84 c0       	rjmp	.+264    	; 0x3526 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    341e:	4b 2d       	mov	r20, r11
    3420:	b8 01       	movw	r22, r16
    3422:	ce 01       	movw	r24, r28
    3424:	0e 94 69 18 	call	0x30d2	; 0x30d2 <_ZN16PololuQTRSensors4readEPjh>
    3428:	78 01       	movw	r14, r16
    342a:	00 e0       	ldi	r16, 0x00	; 0
    342c:	10 e0       	ldi	r17, 0x00	; 0
    342e:	c1 2c       	mov	r12, r1
    3430:	d1 2c       	mov	r13, r1
    3432:	88 85       	ldd	r24, Y+8	; 0x08
    3434:	90 e0       	ldi	r25, 0x00	; 0
    3436:	c8 16       	cp	r12, r24
    3438:	d9 06       	cpc	r13, r25
    343a:	0c f0       	brlt	.+2      	; 0x343e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    343c:	74 c0       	rjmp	.+232    	; 0x3526 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    343e:	81 e0       	ldi	r24, 0x01	; 1
    3440:	b8 12       	cpse	r11, r24
    3442:	0a c0       	rjmp	.+20     	; 0x3458 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    3444:	ea 81       	ldd	r30, Y+2	; 0x02
    3446:	fb 81       	ldd	r31, Y+3	; 0x03
    3448:	e0 0f       	add	r30, r16
    344a:	f1 1f       	adc	r31, r17
    344c:	01 90       	ld	r0, Z+
    344e:	f0 81       	ld	r31, Z
    3450:	e0 2d       	mov	r30, r0
    3452:	a8 81       	ld	r26, Y
    3454:	b9 81       	ldd	r27, Y+1	; 0x01
    3456:	0d c0       	rjmp	.+26     	; 0x3472 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    3458:	8c 81       	ldd	r24, Y+4	; 0x04
    345a:	9d 81       	ldd	r25, Y+5	; 0x05
    345c:	2e 81       	ldd	r18, Y+6	; 0x06
    345e:	3f 81       	ldd	r19, Y+7	; 0x07
    3460:	b1 10       	cpse	r11, r1
    3462:	0c c0       	rjmp	.+24     	; 0x347c <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    3464:	f9 01       	movw	r30, r18
    3466:	e0 0f       	add	r30, r16
    3468:	f1 1f       	adc	r31, r17
    346a:	01 90       	ld	r0, Z+
    346c:	f0 81       	ld	r31, Z
    346e:	e0 2d       	mov	r30, r0
    3470:	dc 01       	movw	r26, r24
    3472:	a0 0f       	add	r26, r16
    3474:	b1 1f       	adc	r27, r17
    3476:	8d 91       	ld	r24, X+
    3478:	9c 91       	ld	r25, X
    347a:	28 c0       	rjmp	.+80     	; 0x34cc <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    347c:	fc 01       	movw	r30, r24
    347e:	e0 0f       	add	r30, r16
    3480:	f1 1f       	adc	r31, r17
    3482:	40 81       	ld	r20, Z
    3484:	51 81       	ldd	r21, Z+1	; 0x01
    3486:	e8 81       	ld	r30, Y
    3488:	f9 81       	ldd	r31, Y+1	; 0x01
    348a:	e0 0f       	add	r30, r16
    348c:	f1 1f       	adc	r31, r17
    348e:	80 81       	ld	r24, Z
    3490:	91 81       	ldd	r25, Z+1	; 0x01
    3492:	ee 85       	ldd	r30, Y+14	; 0x0e
    3494:	ff 85       	ldd	r31, Y+15	; 0x0f
    3496:	48 17       	cp	r20, r24
    3498:	59 07       	cpc	r21, r25
    349a:	10 f4       	brcc	.+4      	; 0x34a0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    349c:	cf 01       	movw	r24, r30
    349e:	04 c0       	rjmp	.+8      	; 0x34a8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    34a0:	8e 0f       	add	r24, r30
    34a2:	9f 1f       	adc	r25, r31
    34a4:	84 1b       	sub	r24, r20
    34a6:	95 0b       	sbc	r25, r21
    34a8:	d9 01       	movw	r26, r18
    34aa:	a0 0f       	add	r26, r16
    34ac:	b1 1f       	adc	r27, r17
    34ae:	2d 91       	ld	r18, X+
    34b0:	3c 91       	ld	r19, X
    34b2:	aa 81       	ldd	r26, Y+2	; 0x02
    34b4:	bb 81       	ldd	r27, Y+3	; 0x03
    34b6:	a0 0f       	add	r26, r16
    34b8:	b1 1f       	adc	r27, r17
    34ba:	4d 91       	ld	r20, X+
    34bc:	5c 91       	ld	r21, X
    34be:	24 17       	cp	r18, r20
    34c0:	35 07       	cpc	r19, r21
    34c2:	20 f0       	brcs	.+8      	; 0x34cc <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    34c4:	e4 0f       	add	r30, r20
    34c6:	f5 1f       	adc	r31, r21
    34c8:	e2 1b       	sub	r30, r18
    34ca:	f3 0b       	sbc	r31, r19
    34cc:	e8 1b       	sub	r30, r24
    34ce:	f9 0b       	sbc	r31, r25
    34d0:	a9 f0       	breq	.+42     	; 0x34fc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    34d2:	d7 01       	movw	r26, r14
    34d4:	2d 91       	ld	r18, X+
    34d6:	3c 91       	ld	r19, X
    34d8:	40 e0       	ldi	r20, 0x00	; 0
    34da:	50 e0       	ldi	r21, 0x00	; 0
    34dc:	28 1b       	sub	r18, r24
    34de:	39 0b       	sbc	r19, r25
    34e0:	41 09       	sbc	r20, r1
    34e2:	51 09       	sbc	r21, r1
    34e4:	a8 ee       	ldi	r26, 0xE8	; 232
    34e6:	b3 e0       	ldi	r27, 0x03	; 3
    34e8:	0e 94 b5 1b 	call	0x376a	; 0x376a <__muluhisi3>
    34ec:	9f 01       	movw	r18, r30
    34ee:	40 e0       	ldi	r20, 0x00	; 0
    34f0:	50 e0       	ldi	r21, 0x00	; 0
    34f2:	0e 94 81 1b 	call	0x3702	; 0x3702 <__divmodsi4>
    34f6:	37 fd       	sbrc	r19, 7
    34f8:	0a c0       	rjmp	.+20     	; 0x350e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    34fa:	02 c0       	rjmp	.+4      	; 0x3500 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    34fc:	20 e0       	ldi	r18, 0x00	; 0
    34fe:	30 e0       	ldi	r19, 0x00	; 0
    3500:	29 3e       	cpi	r18, 0xE9	; 233
    3502:	b3 e0       	ldi	r27, 0x03	; 3
    3504:	3b 07       	cpc	r19, r27
    3506:	2c f0       	brlt	.+10     	; 0x3512 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    3508:	28 ee       	ldi	r18, 0xE8	; 232
    350a:	33 e0       	ldi	r19, 0x03	; 3
    350c:	02 c0       	rjmp	.+4      	; 0x3512 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    350e:	20 e0       	ldi	r18, 0x00	; 0
    3510:	30 e0       	ldi	r19, 0x00	; 0
    3512:	f7 01       	movw	r30, r14
    3514:	21 93       	st	Z+, r18
    3516:	31 93       	st	Z+, r19
    3518:	7f 01       	movw	r14, r30
    351a:	ff ef       	ldi	r31, 0xFF	; 255
    351c:	cf 1a       	sub	r12, r31
    351e:	df 0a       	sbc	r13, r31
    3520:	0e 5f       	subi	r16, 0xFE	; 254
    3522:	1f 4f       	sbci	r17, 0xFF	; 255
    3524:	86 cf       	rjmp	.-244    	; 0x3432 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    3526:	cd b7       	in	r28, 0x3d	; 61
    3528:	de b7       	in	r29, 0x3e	; 62
    352a:	e9 e0       	ldi	r30, 0x09	; 9
    352c:	0c 94 ed 1b 	jmp	0x37da	; 0x37da <__epilogue_restores__+0x12>

00003530 <_ZN16PololuQTRSensors8readLineEPjhh>:
    3530:	a0 e0       	ldi	r26, 0x00	; 0
    3532:	b0 e0       	ldi	r27, 0x00	; 0
    3534:	ee e9       	ldi	r30, 0x9E	; 158
    3536:	fa e1       	ldi	r31, 0x1A	; 26
    3538:	0c 94 c8 1b 	jmp	0x3790	; 0x3790 <__prologue_saves__>
    353c:	ec 01       	movw	r28, r24
    353e:	8b 01       	movw	r16, r22
    3540:	82 2e       	mov	r8, r18
    3542:	0e 94 eb 19 	call	0x33d6	; 0x33d6 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    3546:	28 84       	ldd	r2, Y+8	; 0x08
    3548:	e8 01       	movw	r28, r16
    354a:	41 2c       	mov	r4, r1
    354c:	51 2c       	mov	r5, r1
    354e:	32 01       	movw	r6, r4
    3550:	00 e0       	ldi	r16, 0x00	; 0
    3552:	10 e0       	ldi	r17, 0x00	; 0
    3554:	c1 2c       	mov	r12, r1
    3556:	d1 2c       	mov	r13, r1
    3558:	76 01       	movw	r14, r12
    355a:	31 2c       	mov	r3, r1
    355c:	91 2c       	mov	r9, r1
    355e:	58 ee       	ldi	r21, 0xE8	; 232
    3560:	a5 2e       	mov	r10, r21
    3562:	53 e0       	ldi	r21, 0x03	; 3
    3564:	b5 2e       	mov	r11, r21
    3566:	92 14       	cp	r9, r2
    3568:	21 f1       	breq	.+72     	; 0x35b2 <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    356a:	e9 91       	ld	r30, Y+
    356c:	f9 91       	ld	r31, Y+
    356e:	88 20       	and	r8, r8
    3570:	21 f0       	breq	.+8      	; 0x357a <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    3572:	c5 01       	movw	r24, r10
    3574:	8e 1b       	sub	r24, r30
    3576:	9f 0b       	sbc	r25, r31
    3578:	fc 01       	movw	r30, r24
    357a:	e9 3c       	cpi	r30, 0xC9	; 201
    357c:	f1 05       	cpc	r31, r1
    357e:	24 f4       	brge	.+8      	; 0x3588 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    3580:	e3 33       	cpi	r30, 0x33	; 51
    3582:	f1 05       	cpc	r31, r1
    3584:	74 f0       	brlt	.+28     	; 0x35a2 <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    3586:	02 c0       	rjmp	.+4      	; 0x358c <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    3588:	33 24       	eor	r3, r3
    358a:	33 94       	inc	r3
    358c:	df 01       	movw	r26, r30
    358e:	a3 01       	movw	r20, r6
    3590:	92 01       	movw	r18, r4
    3592:	0e 94 c0 1b 	call	0x3780	; 0x3780 <__mulshisi3>
    3596:	c6 0e       	add	r12, r22
    3598:	d7 1e       	adc	r13, r23
    359a:	e8 1e       	adc	r14, r24
    359c:	f9 1e       	adc	r15, r25
    359e:	0e 0f       	add	r16, r30
    35a0:	1f 1f       	adc	r17, r31
    35a2:	93 94       	inc	r9
    35a4:	98 ee       	ldi	r25, 0xE8	; 232
    35a6:	49 0e       	add	r4, r25
    35a8:	93 e0       	ldi	r25, 0x03	; 3
    35aa:	59 1e       	adc	r5, r25
    35ac:	61 1c       	adc	r6, r1
    35ae:	71 1c       	adc	r7, r1
    35b0:	da cf       	rjmp	.-76     	; 0x3566 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    35b2:	31 10       	cpse	r3, r1
    35b4:	1e c0       	rjmp	.+60     	; 0x35f2 <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    35b6:	49 2d       	mov	r20, r9
    35b8:	50 e0       	ldi	r21, 0x00	; 0
    35ba:	41 50       	subi	r20, 0x01	; 1
    35bc:	51 09       	sbc	r21, r1
    35be:	24 ef       	ldi	r18, 0xF4	; 244
    35c0:	31 e0       	ldi	r19, 0x01	; 1
    35c2:	42 9f       	mul	r20, r18
    35c4:	c0 01       	movw	r24, r0
    35c6:	43 9f       	mul	r20, r19
    35c8:	90 0d       	add	r25, r0
    35ca:	52 9f       	mul	r21, r18
    35cc:	90 0d       	add	r25, r0
    35ce:	11 24       	eor	r1, r1
    35d0:	20 91 fd 01 	lds	r18, 0x01FD	; 0x8001fd <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    35d4:	30 91 fe 01 	lds	r19, 0x01FE	; 0x8001fe <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    35d8:	28 17       	cp	r18, r24
    35da:	39 07       	cpc	r19, r25
    35dc:	b4 f0       	brlt	.+44     	; 0x360a <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    35de:	88 ee       	ldi	r24, 0xE8	; 232
    35e0:	93 e0       	ldi	r25, 0x03	; 3
    35e2:	48 9f       	mul	r20, r24
    35e4:	90 01       	movw	r18, r0
    35e6:	49 9f       	mul	r20, r25
    35e8:	30 0d       	add	r19, r0
    35ea:	58 9f       	mul	r21, r24
    35ec:	30 0d       	add	r19, r0
    35ee:	11 24       	eor	r1, r1
    35f0:	0e c0       	rjmp	.+28     	; 0x360e <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    35f2:	98 01       	movw	r18, r16
    35f4:	40 e0       	ldi	r20, 0x00	; 0
    35f6:	50 e0       	ldi	r21, 0x00	; 0
    35f8:	c7 01       	movw	r24, r14
    35fa:	b6 01       	movw	r22, r12
    35fc:	0e 94 5f 1b 	call	0x36be	; 0x36be <__udivmodsi4>
    3600:	30 93 fe 01 	sts	0x01FE, r19	; 0x8001fe <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    3604:	20 93 fd 01 	sts	0x01FD, r18	; 0x8001fd <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    3608:	02 c0       	rjmp	.+4      	; 0x360e <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    360a:	20 e0       	ldi	r18, 0x00	; 0
    360c:	30 e0       	ldi	r19, 0x00	; 0
    360e:	c9 01       	movw	r24, r18
    3610:	cd b7       	in	r28, 0x3d	; 61
    3612:	de b7       	in	r29, 0x3e	; 62
    3614:	e2 e1       	ldi	r30, 0x12	; 18
    3616:	0c 94 e4 1b 	jmp	0x37c8	; 0x37c8 <__epilogue_restores__>

0000361a <_ZN16PololuQTRSensorsD1Ev>:
    361a:	cf 93       	push	r28
    361c:	df 93       	push	r29
    361e:	ec 01       	movw	r28, r24
    3620:	8a 81       	ldd	r24, Y+2	; 0x02
    3622:	9b 81       	ldd	r25, Y+3	; 0x03
    3624:	00 97       	sbiw	r24, 0x00	; 0
    3626:	11 f0       	breq	.+4      	; 0x362c <_ZN16PololuQTRSensorsD1Ev+0x12>
    3628:	0e 94 97 1c 	call	0x392e	; 0x392e <free>
    362c:	8e 81       	ldd	r24, Y+6	; 0x06
    362e:	9f 81       	ldd	r25, Y+7	; 0x07
    3630:	00 97       	sbiw	r24, 0x00	; 0
    3632:	11 f0       	breq	.+4      	; 0x3638 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    3634:	0e 94 97 1c 	call	0x392e	; 0x392e <free>
    3638:	88 81       	ld	r24, Y
    363a:	99 81       	ldd	r25, Y+1	; 0x01
    363c:	00 97       	sbiw	r24, 0x00	; 0
    363e:	11 f0       	breq	.+4      	; 0x3644 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    3640:	0e 94 97 1c 	call	0x392e	; 0x392e <free>
    3644:	8c 81       	ldd	r24, Y+4	; 0x04
    3646:	9d 81       	ldd	r25, Y+5	; 0x05
    3648:	00 97       	sbiw	r24, 0x00	; 0
    364a:	11 f0       	breq	.+4      	; 0x3650 <_ZN16PololuQTRSensorsD1Ev+0x36>
    364c:	0e 94 97 1c 	call	0x392e	; 0x392e <free>
    3650:	df 91       	pop	r29
    3652:	cf 91       	pop	r28
    3654:	08 95       	ret

00003656 <__udivmodqi4>:
    3656:	99 1b       	sub	r25, r25
    3658:	79 e0       	ldi	r23, 0x09	; 9
    365a:	04 c0       	rjmp	.+8      	; 0x3664 <__udivmodqi4_ep>

0000365c <__udivmodqi4_loop>:
    365c:	99 1f       	adc	r25, r25
    365e:	96 17       	cp	r25, r22
    3660:	08 f0       	brcs	.+2      	; 0x3664 <__udivmodqi4_ep>
    3662:	96 1b       	sub	r25, r22

00003664 <__udivmodqi4_ep>:
    3664:	88 1f       	adc	r24, r24
    3666:	7a 95       	dec	r23
    3668:	c9 f7       	brne	.-14     	; 0x365c <__udivmodqi4_loop>
    366a:	80 95       	com	r24
    366c:	08 95       	ret

0000366e <__udivmodhi4>:
    366e:	aa 1b       	sub	r26, r26
    3670:	bb 1b       	sub	r27, r27
    3672:	51 e1       	ldi	r21, 0x11	; 17
    3674:	07 c0       	rjmp	.+14     	; 0x3684 <__udivmodhi4_ep>

00003676 <__udivmodhi4_loop>:
    3676:	aa 1f       	adc	r26, r26
    3678:	bb 1f       	adc	r27, r27
    367a:	a6 17       	cp	r26, r22
    367c:	b7 07       	cpc	r27, r23
    367e:	10 f0       	brcs	.+4      	; 0x3684 <__udivmodhi4_ep>
    3680:	a6 1b       	sub	r26, r22
    3682:	b7 0b       	sbc	r27, r23

00003684 <__udivmodhi4_ep>:
    3684:	88 1f       	adc	r24, r24
    3686:	99 1f       	adc	r25, r25
    3688:	5a 95       	dec	r21
    368a:	a9 f7       	brne	.-22     	; 0x3676 <__udivmodhi4_loop>
    368c:	80 95       	com	r24
    368e:	90 95       	com	r25
    3690:	bc 01       	movw	r22, r24
    3692:	cd 01       	movw	r24, r26
    3694:	08 95       	ret

00003696 <__divmodhi4>:
    3696:	97 fb       	bst	r25, 7
    3698:	07 2e       	mov	r0, r23
    369a:	16 f4       	brtc	.+4      	; 0x36a0 <__divmodhi4+0xa>
    369c:	00 94       	com	r0
    369e:	07 d0       	rcall	.+14     	; 0x36ae <__divmodhi4_neg1>
    36a0:	77 fd       	sbrc	r23, 7
    36a2:	09 d0       	rcall	.+18     	; 0x36b6 <__divmodhi4_neg2>
    36a4:	0e 94 37 1b 	call	0x366e	; 0x366e <__udivmodhi4>
    36a8:	07 fc       	sbrc	r0, 7
    36aa:	05 d0       	rcall	.+10     	; 0x36b6 <__divmodhi4_neg2>
    36ac:	3e f4       	brtc	.+14     	; 0x36bc <__divmodhi4_exit>

000036ae <__divmodhi4_neg1>:
    36ae:	90 95       	com	r25
    36b0:	81 95       	neg	r24
    36b2:	9f 4f       	sbci	r25, 0xFF	; 255
    36b4:	08 95       	ret

000036b6 <__divmodhi4_neg2>:
    36b6:	70 95       	com	r23
    36b8:	61 95       	neg	r22
    36ba:	7f 4f       	sbci	r23, 0xFF	; 255

000036bc <__divmodhi4_exit>:
    36bc:	08 95       	ret

000036be <__udivmodsi4>:
    36be:	a1 e2       	ldi	r26, 0x21	; 33
    36c0:	1a 2e       	mov	r1, r26
    36c2:	aa 1b       	sub	r26, r26
    36c4:	bb 1b       	sub	r27, r27
    36c6:	fd 01       	movw	r30, r26
    36c8:	0d c0       	rjmp	.+26     	; 0x36e4 <__udivmodsi4_ep>

000036ca <__udivmodsi4_loop>:
    36ca:	aa 1f       	adc	r26, r26
    36cc:	bb 1f       	adc	r27, r27
    36ce:	ee 1f       	adc	r30, r30
    36d0:	ff 1f       	adc	r31, r31
    36d2:	a2 17       	cp	r26, r18
    36d4:	b3 07       	cpc	r27, r19
    36d6:	e4 07       	cpc	r30, r20
    36d8:	f5 07       	cpc	r31, r21
    36da:	20 f0       	brcs	.+8      	; 0x36e4 <__udivmodsi4_ep>
    36dc:	a2 1b       	sub	r26, r18
    36de:	b3 0b       	sbc	r27, r19
    36e0:	e4 0b       	sbc	r30, r20
    36e2:	f5 0b       	sbc	r31, r21

000036e4 <__udivmodsi4_ep>:
    36e4:	66 1f       	adc	r22, r22
    36e6:	77 1f       	adc	r23, r23
    36e8:	88 1f       	adc	r24, r24
    36ea:	99 1f       	adc	r25, r25
    36ec:	1a 94       	dec	r1
    36ee:	69 f7       	brne	.-38     	; 0x36ca <__udivmodsi4_loop>
    36f0:	60 95       	com	r22
    36f2:	70 95       	com	r23
    36f4:	80 95       	com	r24
    36f6:	90 95       	com	r25
    36f8:	9b 01       	movw	r18, r22
    36fa:	ac 01       	movw	r20, r24
    36fc:	bd 01       	movw	r22, r26
    36fe:	cf 01       	movw	r24, r30
    3700:	08 95       	ret

00003702 <__divmodsi4>:
    3702:	05 2e       	mov	r0, r21
    3704:	97 fb       	bst	r25, 7
    3706:	1e f4       	brtc	.+6      	; 0x370e <__divmodsi4+0xc>
    3708:	00 94       	com	r0
    370a:	0e 94 98 1b 	call	0x3730	; 0x3730 <__negsi2>
    370e:	57 fd       	sbrc	r21, 7
    3710:	07 d0       	rcall	.+14     	; 0x3720 <__divmodsi4_neg2>
    3712:	0e 94 5f 1b 	call	0x36be	; 0x36be <__udivmodsi4>
    3716:	07 fc       	sbrc	r0, 7
    3718:	03 d0       	rcall	.+6      	; 0x3720 <__divmodsi4_neg2>
    371a:	4e f4       	brtc	.+18     	; 0x372e <__divmodsi4_exit>
    371c:	0c 94 98 1b 	jmp	0x3730	; 0x3730 <__negsi2>

00003720 <__divmodsi4_neg2>:
    3720:	50 95       	com	r21
    3722:	40 95       	com	r20
    3724:	30 95       	com	r19
    3726:	21 95       	neg	r18
    3728:	3f 4f       	sbci	r19, 0xFF	; 255
    372a:	4f 4f       	sbci	r20, 0xFF	; 255
    372c:	5f 4f       	sbci	r21, 0xFF	; 255

0000372e <__divmodsi4_exit>:
    372e:	08 95       	ret

00003730 <__negsi2>:
    3730:	90 95       	com	r25
    3732:	80 95       	com	r24
    3734:	70 95       	com	r23
    3736:	61 95       	neg	r22
    3738:	7f 4f       	sbci	r23, 0xFF	; 255
    373a:	8f 4f       	sbci	r24, 0xFF	; 255
    373c:	9f 4f       	sbci	r25, 0xFF	; 255
    373e:	08 95       	ret

00003740 <__tablejump2__>:
    3740:	ee 0f       	add	r30, r30
    3742:	ff 1f       	adc	r31, r31
    3744:	05 90       	lpm	r0, Z+
    3746:	f4 91       	lpm	r31, Z
    3748:	e0 2d       	mov	r30, r0
    374a:	09 94       	ijmp

0000374c <__umulhisi3>:
    374c:	a2 9f       	mul	r26, r18
    374e:	b0 01       	movw	r22, r0
    3750:	b3 9f       	mul	r27, r19
    3752:	c0 01       	movw	r24, r0
    3754:	a3 9f       	mul	r26, r19
    3756:	70 0d       	add	r23, r0
    3758:	81 1d       	adc	r24, r1
    375a:	11 24       	eor	r1, r1
    375c:	91 1d       	adc	r25, r1
    375e:	b2 9f       	mul	r27, r18
    3760:	70 0d       	add	r23, r0
    3762:	81 1d       	adc	r24, r1
    3764:	11 24       	eor	r1, r1
    3766:	91 1d       	adc	r25, r1
    3768:	08 95       	ret

0000376a <__muluhisi3>:
    376a:	0e 94 a6 1b 	call	0x374c	; 0x374c <__umulhisi3>
    376e:	a5 9f       	mul	r26, r21
    3770:	90 0d       	add	r25, r0
    3772:	b4 9f       	mul	r27, r20
    3774:	90 0d       	add	r25, r0
    3776:	a4 9f       	mul	r26, r20
    3778:	80 0d       	add	r24, r0
    377a:	91 1d       	adc	r25, r1
    377c:	11 24       	eor	r1, r1
    377e:	08 95       	ret

00003780 <__mulshisi3>:
    3780:	b7 ff       	sbrs	r27, 7
    3782:	0c 94 b5 1b 	jmp	0x376a	; 0x376a <__muluhisi3>

00003786 <__mulohisi3>:
    3786:	0e 94 b5 1b 	call	0x376a	; 0x376a <__muluhisi3>
    378a:	82 1b       	sub	r24, r18
    378c:	93 0b       	sbc	r25, r19
    378e:	08 95       	ret

00003790 <__prologue_saves__>:
    3790:	2f 92       	push	r2
    3792:	3f 92       	push	r3
    3794:	4f 92       	push	r4
    3796:	5f 92       	push	r5
    3798:	6f 92       	push	r6
    379a:	7f 92       	push	r7
    379c:	8f 92       	push	r8
    379e:	9f 92       	push	r9
    37a0:	af 92       	push	r10
    37a2:	bf 92       	push	r11
    37a4:	cf 92       	push	r12
    37a6:	df 92       	push	r13
    37a8:	ef 92       	push	r14
    37aa:	ff 92       	push	r15
    37ac:	0f 93       	push	r16
    37ae:	1f 93       	push	r17
    37b0:	cf 93       	push	r28
    37b2:	df 93       	push	r29
    37b4:	cd b7       	in	r28, 0x3d	; 61
    37b6:	de b7       	in	r29, 0x3e	; 62
    37b8:	ca 1b       	sub	r28, r26
    37ba:	db 0b       	sbc	r29, r27
    37bc:	0f b6       	in	r0, 0x3f	; 63
    37be:	f8 94       	cli
    37c0:	de bf       	out	0x3e, r29	; 62
    37c2:	0f be       	out	0x3f, r0	; 63
    37c4:	cd bf       	out	0x3d, r28	; 61
    37c6:	09 94       	ijmp

000037c8 <__epilogue_restores__>:
    37c8:	2a 88       	ldd	r2, Y+18	; 0x12
    37ca:	39 88       	ldd	r3, Y+17	; 0x11
    37cc:	48 88       	ldd	r4, Y+16	; 0x10
    37ce:	5f 84       	ldd	r5, Y+15	; 0x0f
    37d0:	6e 84       	ldd	r6, Y+14	; 0x0e
    37d2:	7d 84       	ldd	r7, Y+13	; 0x0d
    37d4:	8c 84       	ldd	r8, Y+12	; 0x0c
    37d6:	9b 84       	ldd	r9, Y+11	; 0x0b
    37d8:	aa 84       	ldd	r10, Y+10	; 0x0a
    37da:	b9 84       	ldd	r11, Y+9	; 0x09
    37dc:	c8 84       	ldd	r12, Y+8	; 0x08
    37de:	df 80       	ldd	r13, Y+7	; 0x07
    37e0:	ee 80       	ldd	r14, Y+6	; 0x06
    37e2:	fd 80       	ldd	r15, Y+5	; 0x05
    37e4:	0c 81       	ldd	r16, Y+4	; 0x04
    37e6:	1b 81       	ldd	r17, Y+3	; 0x03
    37e8:	aa 81       	ldd	r26, Y+2	; 0x02
    37ea:	b9 81       	ldd	r27, Y+1	; 0x01
    37ec:	ce 0f       	add	r28, r30
    37ee:	d1 1d       	adc	r29, r1
    37f0:	0f b6       	in	r0, 0x3f	; 63
    37f2:	f8 94       	cli
    37f4:	de bf       	out	0x3e, r29	; 62
    37f6:	0f be       	out	0x3f, r0	; 63
    37f8:	cd bf       	out	0x3d, r28	; 61
    37fa:	ed 01       	movw	r28, r26
    37fc:	08 95       	ret

000037fe <malloc>:
    37fe:	0f 93       	push	r16
    3800:	1f 93       	push	r17
    3802:	cf 93       	push	r28
    3804:	df 93       	push	r29
    3806:	82 30       	cpi	r24, 0x02	; 2
    3808:	91 05       	cpc	r25, r1
    380a:	10 f4       	brcc	.+4      	; 0x3810 <malloc+0x12>
    380c:	82 e0       	ldi	r24, 0x02	; 2
    380e:	90 e0       	ldi	r25, 0x00	; 0
    3810:	e0 91 21 02 	lds	r30, 0x0221	; 0x800221 <__flp>
    3814:	f0 91 22 02 	lds	r31, 0x0222	; 0x800222 <__flp+0x1>
    3818:	20 e0       	ldi	r18, 0x00	; 0
    381a:	30 e0       	ldi	r19, 0x00	; 0
    381c:	a0 e0       	ldi	r26, 0x00	; 0
    381e:	b0 e0       	ldi	r27, 0x00	; 0
    3820:	30 97       	sbiw	r30, 0x00	; 0
    3822:	19 f1       	breq	.+70     	; 0x386a <malloc+0x6c>
    3824:	40 81       	ld	r20, Z
    3826:	51 81       	ldd	r21, Z+1	; 0x01
    3828:	02 81       	ldd	r16, Z+2	; 0x02
    382a:	13 81       	ldd	r17, Z+3	; 0x03
    382c:	48 17       	cp	r20, r24
    382e:	59 07       	cpc	r21, r25
    3830:	c8 f0       	brcs	.+50     	; 0x3864 <malloc+0x66>
    3832:	84 17       	cp	r24, r20
    3834:	95 07       	cpc	r25, r21
    3836:	69 f4       	brne	.+26     	; 0x3852 <malloc+0x54>
    3838:	10 97       	sbiw	r26, 0x00	; 0
    383a:	31 f0       	breq	.+12     	; 0x3848 <malloc+0x4a>
    383c:	12 96       	adiw	r26, 0x02	; 2
    383e:	0c 93       	st	X, r16
    3840:	12 97       	sbiw	r26, 0x02	; 2
    3842:	13 96       	adiw	r26, 0x03	; 3
    3844:	1c 93       	st	X, r17
    3846:	27 c0       	rjmp	.+78     	; 0x3896 <malloc+0x98>
    3848:	00 93 21 02 	sts	0x0221, r16	; 0x800221 <__flp>
    384c:	10 93 22 02 	sts	0x0222, r17	; 0x800222 <__flp+0x1>
    3850:	22 c0       	rjmp	.+68     	; 0x3896 <malloc+0x98>
    3852:	21 15       	cp	r18, r1
    3854:	31 05       	cpc	r19, r1
    3856:	19 f0       	breq	.+6      	; 0x385e <malloc+0x60>
    3858:	42 17       	cp	r20, r18
    385a:	53 07       	cpc	r21, r19
    385c:	18 f4       	brcc	.+6      	; 0x3864 <malloc+0x66>
    385e:	9a 01       	movw	r18, r20
    3860:	bd 01       	movw	r22, r26
    3862:	ef 01       	movw	r28, r30
    3864:	df 01       	movw	r26, r30
    3866:	f8 01       	movw	r30, r16
    3868:	db cf       	rjmp	.-74     	; 0x3820 <malloc+0x22>
    386a:	21 15       	cp	r18, r1
    386c:	31 05       	cpc	r19, r1
    386e:	f9 f0       	breq	.+62     	; 0x38ae <malloc+0xb0>
    3870:	28 1b       	sub	r18, r24
    3872:	39 0b       	sbc	r19, r25
    3874:	24 30       	cpi	r18, 0x04	; 4
    3876:	31 05       	cpc	r19, r1
    3878:	80 f4       	brcc	.+32     	; 0x389a <malloc+0x9c>
    387a:	8a 81       	ldd	r24, Y+2	; 0x02
    387c:	9b 81       	ldd	r25, Y+3	; 0x03
    387e:	61 15       	cp	r22, r1
    3880:	71 05       	cpc	r23, r1
    3882:	21 f0       	breq	.+8      	; 0x388c <malloc+0x8e>
    3884:	fb 01       	movw	r30, r22
    3886:	93 83       	std	Z+3, r25	; 0x03
    3888:	82 83       	std	Z+2, r24	; 0x02
    388a:	04 c0       	rjmp	.+8      	; 0x3894 <malloc+0x96>
    388c:	90 93 22 02 	sts	0x0222, r25	; 0x800222 <__flp+0x1>
    3890:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <__flp>
    3894:	fe 01       	movw	r30, r28
    3896:	32 96       	adiw	r30, 0x02	; 2
    3898:	44 c0       	rjmp	.+136    	; 0x3922 <malloc+0x124>
    389a:	fe 01       	movw	r30, r28
    389c:	e2 0f       	add	r30, r18
    389e:	f3 1f       	adc	r31, r19
    38a0:	81 93       	st	Z+, r24
    38a2:	91 93       	st	Z+, r25
    38a4:	22 50       	subi	r18, 0x02	; 2
    38a6:	31 09       	sbc	r19, r1
    38a8:	39 83       	std	Y+1, r19	; 0x01
    38aa:	28 83       	st	Y, r18
    38ac:	3a c0       	rjmp	.+116    	; 0x3922 <malloc+0x124>
    38ae:	20 91 1f 02 	lds	r18, 0x021F	; 0x80021f <__brkval>
    38b2:	30 91 20 02 	lds	r19, 0x0220	; 0x800220 <__brkval+0x1>
    38b6:	23 2b       	or	r18, r19
    38b8:	41 f4       	brne	.+16     	; 0x38ca <malloc+0xcc>
    38ba:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__malloc_heap_start>
    38be:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__malloc_heap_start+0x1>
    38c2:	30 93 20 02 	sts	0x0220, r19	; 0x800220 <__brkval+0x1>
    38c6:	20 93 1f 02 	sts	0x021F, r18	; 0x80021f <__brkval>
    38ca:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_end>
    38ce:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_end+0x1>
    38d2:	21 15       	cp	r18, r1
    38d4:	31 05       	cpc	r19, r1
    38d6:	41 f4       	brne	.+16     	; 0x38e8 <malloc+0xea>
    38d8:	2d b7       	in	r18, 0x3d	; 61
    38da:	3e b7       	in	r19, 0x3e	; 62
    38dc:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <__malloc_margin>
    38e0:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <__malloc_margin+0x1>
    38e4:	24 1b       	sub	r18, r20
    38e6:	35 0b       	sbc	r19, r21
    38e8:	e0 91 1f 02 	lds	r30, 0x021F	; 0x80021f <__brkval>
    38ec:	f0 91 20 02 	lds	r31, 0x0220	; 0x800220 <__brkval+0x1>
    38f0:	e2 17       	cp	r30, r18
    38f2:	f3 07       	cpc	r31, r19
    38f4:	a0 f4       	brcc	.+40     	; 0x391e <malloc+0x120>
    38f6:	2e 1b       	sub	r18, r30
    38f8:	3f 0b       	sbc	r19, r31
    38fa:	28 17       	cp	r18, r24
    38fc:	39 07       	cpc	r19, r25
    38fe:	78 f0       	brcs	.+30     	; 0x391e <malloc+0x120>
    3900:	ac 01       	movw	r20, r24
    3902:	4e 5f       	subi	r20, 0xFE	; 254
    3904:	5f 4f       	sbci	r21, 0xFF	; 255
    3906:	24 17       	cp	r18, r20
    3908:	35 07       	cpc	r19, r21
    390a:	48 f0       	brcs	.+18     	; 0x391e <malloc+0x120>
    390c:	4e 0f       	add	r20, r30
    390e:	5f 1f       	adc	r21, r31
    3910:	50 93 20 02 	sts	0x0220, r21	; 0x800220 <__brkval+0x1>
    3914:	40 93 1f 02 	sts	0x021F, r20	; 0x80021f <__brkval>
    3918:	81 93       	st	Z+, r24
    391a:	91 93       	st	Z+, r25
    391c:	02 c0       	rjmp	.+4      	; 0x3922 <malloc+0x124>
    391e:	e0 e0       	ldi	r30, 0x00	; 0
    3920:	f0 e0       	ldi	r31, 0x00	; 0
    3922:	cf 01       	movw	r24, r30
    3924:	df 91       	pop	r29
    3926:	cf 91       	pop	r28
    3928:	1f 91       	pop	r17
    392a:	0f 91       	pop	r16
    392c:	08 95       	ret

0000392e <free>:
    392e:	cf 93       	push	r28
    3930:	df 93       	push	r29
    3932:	00 97       	sbiw	r24, 0x00	; 0
    3934:	09 f4       	brne	.+2      	; 0x3938 <free+0xa>
    3936:	81 c0       	rjmp	.+258    	; 0x3a3a <free+0x10c>
    3938:	fc 01       	movw	r30, r24
    393a:	32 97       	sbiw	r30, 0x02	; 2
    393c:	13 82       	std	Z+3, r1	; 0x03
    393e:	12 82       	std	Z+2, r1	; 0x02
    3940:	a0 91 21 02 	lds	r26, 0x0221	; 0x800221 <__flp>
    3944:	b0 91 22 02 	lds	r27, 0x0222	; 0x800222 <__flp+0x1>
    3948:	10 97       	sbiw	r26, 0x00	; 0
    394a:	81 f4       	brne	.+32     	; 0x396c <free+0x3e>
    394c:	20 81       	ld	r18, Z
    394e:	31 81       	ldd	r19, Z+1	; 0x01
    3950:	82 0f       	add	r24, r18
    3952:	93 1f       	adc	r25, r19
    3954:	20 91 1f 02 	lds	r18, 0x021F	; 0x80021f <__brkval>
    3958:	30 91 20 02 	lds	r19, 0x0220	; 0x800220 <__brkval+0x1>
    395c:	28 17       	cp	r18, r24
    395e:	39 07       	cpc	r19, r25
    3960:	51 f5       	brne	.+84     	; 0x39b6 <free+0x88>
    3962:	f0 93 20 02 	sts	0x0220, r31	; 0x800220 <__brkval+0x1>
    3966:	e0 93 1f 02 	sts	0x021F, r30	; 0x80021f <__brkval>
    396a:	67 c0       	rjmp	.+206    	; 0x3a3a <free+0x10c>
    396c:	ed 01       	movw	r28, r26
    396e:	20 e0       	ldi	r18, 0x00	; 0
    3970:	30 e0       	ldi	r19, 0x00	; 0
    3972:	ce 17       	cp	r28, r30
    3974:	df 07       	cpc	r29, r31
    3976:	40 f4       	brcc	.+16     	; 0x3988 <free+0x5a>
    3978:	4a 81       	ldd	r20, Y+2	; 0x02
    397a:	5b 81       	ldd	r21, Y+3	; 0x03
    397c:	9e 01       	movw	r18, r28
    397e:	41 15       	cp	r20, r1
    3980:	51 05       	cpc	r21, r1
    3982:	f1 f0       	breq	.+60     	; 0x39c0 <free+0x92>
    3984:	ea 01       	movw	r28, r20
    3986:	f5 cf       	rjmp	.-22     	; 0x3972 <free+0x44>
    3988:	d3 83       	std	Z+3, r29	; 0x03
    398a:	c2 83       	std	Z+2, r28	; 0x02
    398c:	40 81       	ld	r20, Z
    398e:	51 81       	ldd	r21, Z+1	; 0x01
    3990:	84 0f       	add	r24, r20
    3992:	95 1f       	adc	r25, r21
    3994:	c8 17       	cp	r28, r24
    3996:	d9 07       	cpc	r29, r25
    3998:	59 f4       	brne	.+22     	; 0x39b0 <free+0x82>
    399a:	88 81       	ld	r24, Y
    399c:	99 81       	ldd	r25, Y+1	; 0x01
    399e:	84 0f       	add	r24, r20
    39a0:	95 1f       	adc	r25, r21
    39a2:	02 96       	adiw	r24, 0x02	; 2
    39a4:	91 83       	std	Z+1, r25	; 0x01
    39a6:	80 83       	st	Z, r24
    39a8:	8a 81       	ldd	r24, Y+2	; 0x02
    39aa:	9b 81       	ldd	r25, Y+3	; 0x03
    39ac:	93 83       	std	Z+3, r25	; 0x03
    39ae:	82 83       	std	Z+2, r24	; 0x02
    39b0:	21 15       	cp	r18, r1
    39b2:	31 05       	cpc	r19, r1
    39b4:	29 f4       	brne	.+10     	; 0x39c0 <free+0x92>
    39b6:	f0 93 22 02 	sts	0x0222, r31	; 0x800222 <__flp+0x1>
    39ba:	e0 93 21 02 	sts	0x0221, r30	; 0x800221 <__flp>
    39be:	3d c0       	rjmp	.+122    	; 0x3a3a <free+0x10c>
    39c0:	e9 01       	movw	r28, r18
    39c2:	fb 83       	std	Y+3, r31	; 0x03
    39c4:	ea 83       	std	Y+2, r30	; 0x02
    39c6:	49 91       	ld	r20, Y+
    39c8:	59 91       	ld	r21, Y+
    39ca:	c4 0f       	add	r28, r20
    39cc:	d5 1f       	adc	r29, r21
    39ce:	ec 17       	cp	r30, r28
    39d0:	fd 07       	cpc	r31, r29
    39d2:	61 f4       	brne	.+24     	; 0x39ec <free+0xbe>
    39d4:	80 81       	ld	r24, Z
    39d6:	91 81       	ldd	r25, Z+1	; 0x01
    39d8:	84 0f       	add	r24, r20
    39da:	95 1f       	adc	r25, r21
    39dc:	02 96       	adiw	r24, 0x02	; 2
    39de:	e9 01       	movw	r28, r18
    39e0:	99 83       	std	Y+1, r25	; 0x01
    39e2:	88 83       	st	Y, r24
    39e4:	82 81       	ldd	r24, Z+2	; 0x02
    39e6:	93 81       	ldd	r25, Z+3	; 0x03
    39e8:	9b 83       	std	Y+3, r25	; 0x03
    39ea:	8a 83       	std	Y+2, r24	; 0x02
    39ec:	e0 e0       	ldi	r30, 0x00	; 0
    39ee:	f0 e0       	ldi	r31, 0x00	; 0
    39f0:	12 96       	adiw	r26, 0x02	; 2
    39f2:	8d 91       	ld	r24, X+
    39f4:	9c 91       	ld	r25, X
    39f6:	13 97       	sbiw	r26, 0x03	; 3
    39f8:	00 97       	sbiw	r24, 0x00	; 0
    39fa:	19 f0       	breq	.+6      	; 0x3a02 <free+0xd4>
    39fc:	fd 01       	movw	r30, r26
    39fe:	dc 01       	movw	r26, r24
    3a00:	f7 cf       	rjmp	.-18     	; 0x39f0 <free+0xc2>
    3a02:	8d 91       	ld	r24, X+
    3a04:	9c 91       	ld	r25, X
    3a06:	11 97       	sbiw	r26, 0x01	; 1
    3a08:	9d 01       	movw	r18, r26
    3a0a:	2e 5f       	subi	r18, 0xFE	; 254
    3a0c:	3f 4f       	sbci	r19, 0xFF	; 255
    3a0e:	82 0f       	add	r24, r18
    3a10:	93 1f       	adc	r25, r19
    3a12:	20 91 1f 02 	lds	r18, 0x021F	; 0x80021f <__brkval>
    3a16:	30 91 20 02 	lds	r19, 0x0220	; 0x800220 <__brkval+0x1>
    3a1a:	28 17       	cp	r18, r24
    3a1c:	39 07       	cpc	r19, r25
    3a1e:	69 f4       	brne	.+26     	; 0x3a3a <free+0x10c>
    3a20:	30 97       	sbiw	r30, 0x00	; 0
    3a22:	29 f4       	brne	.+10     	; 0x3a2e <free+0x100>
    3a24:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <__flp+0x1>
    3a28:	10 92 21 02 	sts	0x0221, r1	; 0x800221 <__flp>
    3a2c:	02 c0       	rjmp	.+4      	; 0x3a32 <free+0x104>
    3a2e:	13 82       	std	Z+3, r1	; 0x03
    3a30:	12 82       	std	Z+2, r1	; 0x02
    3a32:	b0 93 20 02 	sts	0x0220, r27	; 0x800220 <__brkval+0x1>
    3a36:	a0 93 1f 02 	sts	0x021F, r26	; 0x80021f <__brkval>
    3a3a:	df 91       	pop	r29
    3a3c:	cf 91       	pop	r28
    3a3e:	08 95       	ret

00003a40 <strncat>:
    3a40:	fb 01       	movw	r30, r22
    3a42:	dc 01       	movw	r26, r24
    3a44:	0d 90       	ld	r0, X+
    3a46:	00 20       	and	r0, r0
    3a48:	e9 f7       	brne	.-6      	; 0x3a44 <strncat+0x4>
    3a4a:	11 97       	sbiw	r26, 0x01	; 1
    3a4c:	41 50       	subi	r20, 0x01	; 1
    3a4e:	50 40       	sbci	r21, 0x00	; 0
    3a50:	28 f0       	brcs	.+10     	; 0x3a5c <strncat+0x1c>
    3a52:	01 90       	ld	r0, Z+
    3a54:	00 20       	and	r0, r0
    3a56:	0d 92       	st	X+, r0
    3a58:	c9 f7       	brne	.-14     	; 0x3a4c <strncat+0xc>
    3a5a:	08 95       	ret
    3a5c:	1c 92       	st	X, r1
    3a5e:	08 95       	ret

00003a60 <__do_global_dtors>:
    3a60:	10 e0       	ldi	r17, 0x00	; 0
    3a62:	c2 e4       	ldi	r28, 0x42	; 66
    3a64:	d0 e0       	ldi	r29, 0x00	; 0
    3a66:	04 c0       	rjmp	.+8      	; 0x3a70 <__do_global_dtors+0x10>
    3a68:	fe 01       	movw	r30, r28
    3a6a:	0e 94 a0 1b 	call	0x3740	; 0x3740 <__tablejump2__>
    3a6e:	21 96       	adiw	r28, 0x01	; 1
    3a70:	c3 34       	cpi	r28, 0x43	; 67
    3a72:	d1 07       	cpc	r29, r17
    3a74:	c9 f7       	brne	.-14     	; 0x3a68 <__do_global_dtors+0x8>
    3a76:	f8 94       	cli

00003a78 <__stop_program>:
    3a78:	ff cf       	rjmp	.-2      	; 0x3a78 <__stop_program>
