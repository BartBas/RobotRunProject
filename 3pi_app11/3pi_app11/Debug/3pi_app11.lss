
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000094  00800100  000038b8  0000394c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000038b8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000008b  00800194  00800194  000039e0  2**0
                  ALLOC
  3 .stab         00007998  00000000  00000000  000039e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000a086  00000000  00000000  0000b378  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  000153fe  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00015440  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 000001c0  00000000  00000000  00015480  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   000033ae  00000000  00000000  00015640  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000011cf  00000000  00000000  000189ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00002005  00000000  00000000  00019bbd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000548  00000000  00000000  0001bbc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000a53  00000000  00000000  0001c10c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    000015bc  00000000  00000000  0001cb5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000001d8  00000000  00000000  0001e11b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 23 01 	jmp	0x246	; 0x246 <__dtors_end>
       4:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
       8:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
       c:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      10:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      14:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      18:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      1c:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      20:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      24:	0c 94 73 14 	jmp	0x28e6	; 0x28e6 <__vector_9>
      28:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      2c:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      30:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      34:	0c 94 0a 10 	jmp	0x2014	; 0x2014 <__vector_13>
      38:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      3c:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      40:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      44:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      48:	0c 94 82 13 	jmp	0x2704	; 0x2704 <__vector_18>
      4c:	0c 94 4e 14 	jmp	0x289c	; 0x289c <__vector_19>
      50:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      54:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      58:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      5c:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      60:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      64:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      68:	76 06       	cpc	r7, r22
      6a:	a4 06       	cpc	r10, r20
      6c:	0f 07       	cpc	r16, r31
      6e:	7a 06       	cpc	r7, r26
      70:	89 06       	cpc	r8, r25
      72:	98 06       	cpc	r9, r24
      74:	7a 06       	cpc	r7, r26
      76:	7a 06       	cpc	r7, r26
      78:	7a 06       	cpc	r7, r26

0000007a <__trampolines_end>:
      7a:	21 20       	and	r2, r1
      7c:	4f 35       	cpi	r20, 0x5F	; 95
      7e:	20 4c       	sbci	r18, 0xC0	; 192
      80:	31 36       	cpi	r19, 0x61	; 97
      82:	20 61       	ori	r18, 0x10	; 16
      84:	67 61       	ori	r22, 0x17	; 23
      86:	66 61       	ori	r22, 0x16	; 22
      88:	65 61       	ori	r22, 0x15	; 21
      8a:	20 64       	ori	r18, 0x40	; 64
      8c:	61 63       	ori	r22, 0x31	; 49
      8e:	2b 61       	ori	r18, 0x1B	; 27
      90:	64 61       	ori	r22, 0x14	; 20
      92:	65 61       	ori	r22, 0x15	; 21
      94:	20 66       	ori	r18, 0x60	; 96
      96:	61 3c       	cpi	r22, 0xC1	; 193
      98:	61 61       	ori	r22, 0x11	; 17
      9a:	3c 62       	ori	r19, 0x2C	; 44
      9c:	61 63       	ori	r22, 0x31	; 49
      9e:	23 61       	ori	r18, 0x13	; 19
      a0:	20 64       	ori	r18, 0x40	; 64
      a2:	61 63       	ori	r22, 0x31	; 49
      a4:	23 61       	ori	r18, 0x13	; 19
      a6:	64 61       	ori	r22, 0x14	; 20
      a8:	65 61       	ori	r22, 0x15	; 21
      aa:	20 66       	ori	r18, 0x60	; 96
      ac:	4f 36       	cpi	r20, 0x6F	; 111
      ae:	20 64       	ori	r18, 0x40	; 64
      b0:	63 64       	ori	r22, 0x43	; 67
      b2:	3c 62       	ori	r19, 0x2C	; 44
      b4:	2d 64       	ori	r18, 0x4D	; 77
      b6:	3c 61       	ori	r19, 0x1C	; 28
      b8:	64 3c       	cpi	r22, 0xC4	; 196
      ba:	67 20       	and	r6, r7
      bc:	64 3c       	cpi	r22, 0xC4	; 196
      be:	66 2b       	or	r22, r22
      c0:	64 3c       	cpi	r22, 0xC4	; 196
      c2:	67 64       	ori	r22, 0x47	; 71
      c4:	3c 61       	ori	r19, 0x1C	; 28
      c6:	64 3c       	cpi	r22, 0xC4	; 196
      c8:	62 2d       	mov	r22, r2
      ca:	20 64       	ori	r18, 0x40	; 64
      cc:	3c 64       	ori	r19, 0x4C	; 76
      ce:	64 3c       	cpi	r22, 0xC4	; 196
      d0:	65 64       	ori	r22, 0x45	; 69
      d2:	3c 66       	ori	r19, 0x6C	; 108
      d4:	2b 64       	ori	r18, 0x4B	; 75
      d6:	3c 67       	ori	r19, 0x7C	; 124
      d8:	20 64       	ori	r18, 0x40	; 64
      da:	3c 66       	ori	r19, 0x6C	; 108
      dc:	2b 64       	ori	r18, 0x4B	; 75
      de:	3c 67       	ori	r19, 0x7C	; 124
      e0:	64 3c       	cpi	r22, 0xC4	; 196
      e2:	61 64       	ori	r22, 0x41	; 65
      e4:	4c 38       	cpi	r20, 0x8C	; 140
      e6:	20 4d       	sbci	r18, 0xD0	; 208
      e8:	53 20       	and	r5, r3
      ea:	3c 62       	ori	r19, 0x2C	; 44
      ec:	2d 64       	ori	r18, 0x4D	; 77
      ee:	3c 62       	ori	r19, 0x2C	; 44
      f0:	2d 64       	ori	r18, 0x4D	; 77
      f2:	20 4d       	sbci	r18, 0xD0	; 208
      f4:	4c 65       	ori	r20, 0x5C	; 92
      f6:	2d 3c       	cpi	r18, 0xCD	; 205
      f8:	67 65       	ori	r22, 0x57	; 87
      fa:	2d 3c       	cpi	r18, 0xCD	; 205
      fc:	67 20       	and	r6, r7
      fe:	4d 53       	subi	r20, 0x3D	; 61
     100:	63 3c       	cpi	r22, 0xC3	; 195
     102:	61 63       	ori	r22, 0x31	; 49
     104:	3c 61       	ori	r19, 0x1C	; 28
     106:	20 4d       	sbci	r18, 0xD0	; 208
     108:	4c 20       	and	r4, r12
     10a:	64 3c       	cpi	r22, 0xC4	; 196
     10c:	66 64       	ori	r22, 0x46	; 70
     10e:	3c 66       	ori	r19, 0x6C	; 108
     110:	20 4f       	sbci	r18, 0xF0	; 240
     112:	35 20       	and	r3, r5
     114:	4d 53       	subi	r20, 0x3D	; 61
     116:	20 62       	ori	r18, 0x20	; 32
     118:	2d 67       	ori	r18, 0x7D	; 125
     11a:	62 2d       	mov	r22, r2
     11c:	67 4d       	sbci	r22, 0xD7	; 215
     11e:	4c 20       	and	r4, r12
     120:	3e 63       	ori	r19, 0x3E	; 62
     122:	23 65       	ori	r18, 0x53	; 83
     124:	3e 63       	ori	r19, 0x3E	; 62
     126:	23 65       	ori	r18, 0x53	; 83
     128:	20 4d       	sbci	r18, 0xD0	; 208
     12a:	53 20       	and	r5, r3
     12c:	61 66       	ori	r22, 0x61	; 97
     12e:	61 66       	ori	r22, 0x61	; 97
     130:	20 4d       	sbci	r18, 0xD0	; 208
     132:	4c 20       	and	r4, r12
     134:	67 63       	ori	r22, 0x37	; 55
     136:	23 67       	ori	r18, 0x73	; 115
     138:	63 23       	and	r22, r19
     13a:	20 4d       	sbci	r18, 0xD0	; 208
     13c:	53 20       	and	r5, r3
     13e:	66 64       	ori	r22, 0x46	; 70
     140:	66 64       	ori	r22, 0x46	; 70
     142:	20 4d       	sbci	r18, 0xD0	; 208
     144:	4c 20       	and	r4, r12
     146:	65 3c       	cpi	r22, 0xC5	; 197
     148:	62 2d       	mov	r22, r2
     14a:	65 3c       	cpi	r22, 0xC5	; 197
     14c:	62 2d       	mov	r22, r2
     14e:	4f 36       	cpi	r20, 0x6F	; 111
     150:	20 4c       	sbci	r18, 0xC0	; 192
     152:	31 36       	cpi	r19, 0x61	; 97
     154:	72 61       	ori	r23, 0x12	; 18
     156:	67 61       	ori	r22, 0x17	; 23
     158:	66 61       	ori	r22, 0x16	; 22
     15a:	65 61       	ori	r22, 0x15	; 21
     15c:	20 64       	ori	r18, 0x40	; 64
     15e:	61 63       	ori	r22, 0x31	; 49
     160:	23 61       	ori	r18, 0x13	; 19
     162:	64 61       	ori	r22, 0x14	; 20
     164:	65 61       	ori	r22, 0x15	; 21
     166:	20 66       	ori	r18, 0x60	; 96
     168:	61 3c       	cpi	r22, 0xC1	; 193
     16a:	61 61       	ori	r22, 0x11	; 17
     16c:	3c 62       	ori	r19, 0x2C	; 44
     16e:	61 63       	ori	r22, 0x31	; 49
     170:	23 61       	ori	r18, 0x13	; 19
     172:	20 64       	ori	r18, 0x40	; 64
     174:	61 63       	ori	r22, 0x31	; 49
     176:	23 61       	ori	r18, 0x13	; 19
     178:	64 61       	ori	r22, 0x14	; 20
     17a:	65 61       	ori	r22, 0x15	; 21
     17c:	20 66       	ori	r18, 0x60	; 96
     17e:	61 65       	ori	r22, 0x51	; 81
     180:	61 64       	ori	r22, 0x41	; 65
     182:	61 63       	ori	r22, 0x31	; 49
     184:	61 3c       	cpi	r22, 0xC1	; 193
     186:	62 2d       	mov	r22, r2
     188:	61 63       	ori	r22, 0x31	; 49
     18a:	61 64       	ori	r22, 0x41	; 65
     18c:	67 3c       	cpi	r22, 0xC7	; 199
     18e:	62 2d       	mov	r22, r2
     190:	67 20       	and	r6, r7
     192:	65 67       	ori	r22, 0x75	; 117
     194:	64 67       	ori	r22, 0x74	; 116
     196:	63 67       	ori	r22, 0x73	; 115
     198:	3c 62       	ori	r19, 0x2C	; 44
     19a:	2d 67       	ori	r18, 0x7D	; 125
     19c:	20 3c       	cpi	r18, 0xC0	; 192
     19e:	61 67       	ori	r22, 0x71	; 113
     1a0:	3c 62       	ori	r19, 0x2C	; 44
     1a2:	2d 67       	ori	r18, 0x7D	; 125
     1a4:	63 66       	ori	r22, 0x63	; 99
     1a6:	3c 61       	ori	r19, 0x1C	; 28
     1a8:	66 20       	and	r6, r6
     1aa:	64 66       	ori	r22, 0x64	; 100
     1ac:	63 66       	ori	r22, 0x63	; 99
     1ae:	3c 62       	ori	r19, 0x2C	; 44
     1b0:	2d 66       	ori	r18, 0x6D	; 109
     1b2:	3c 61       	ori	r19, 0x1C	; 28
     1b4:	66 3c       	cpi	r22, 0xC6	; 198
     1b6:	67 66       	ori	r22, 0x67	; 103
     1b8:	3c 61       	ori	r19, 0x1C	; 28
     1ba:	66 3c       	cpi	r22, 0xC6	; 198
     1bc:	62 2d       	mov	r22, r2
     1be:	65 3c       	cpi	r22, 0xC5	; 197
     1c0:	67 65       	ori	r22, 0x57	; 87
     1c2:	20 63       	ori	r18, 0x30	; 48
     1c4:	23 65       	ori	r18, 0x53	; 83
     1c6:	3c 62       	ori	r19, 0x2C	; 44
     1c8:	2d 65       	ori	r18, 0x5D	; 93
     1ca:	3c 61       	ori	r19, 0x1C	; 28
     1cc:	65 3c       	cpi	r22, 0xC5	; 197
     1ce:	67 65       	ori	r22, 0x57	; 87
     1d0:	20 3c       	cpi	r18, 0xC0	; 192
     1d2:	66 65       	ori	r22, 0x56	; 86
     1d4:	3c 67       	ori	r19, 0x7C	; 124
     1d6:	65 3c       	cpi	r22, 0xC5	; 197
     1d8:	61 64       	ori	r22, 0x41	; 65
     1da:	3c 66       	ori	r19, 0x6C	; 108
     1dc:	64 4f       	sbci	r22, 0xF4	; 244
     1de:	35 20       	and	r3, r5
     1e0:	65 3e       	cpi	r22, 0xE5	; 229
     1e2:	65 65       	ori	r22, 0x55	; 85
     1e4:	3e 65       	ori	r19, 0x5E	; 94
     1e6:	66 3e       	cpi	r22, 0xE6	; 230
     1e8:	64 66       	ori	r22, 0x64	; 100
     1ea:	3e 64       	ori	r19, 0x4E	; 78
     1ec:	20 62       	ori	r18, 0x20	; 32
     1ee:	2d 3e       	cpi	r18, 0xED	; 237
     1f0:	63 23       	and	r22, r19
     1f2:	62 2d       	mov	r22, r2
     1f4:	3e 63       	ori	r19, 0x3E	; 62
     1f6:	23 61       	ori	r18, 0x13	; 19
     1f8:	3e 64       	ori	r19, 0x4E	; 78
     1fa:	66 3e       	cpi	r22, 0xE6	; 230
     1fc:	64 20       	and	r6, r4
     1fe:	65 3e       	cpi	r22, 0xE5	; 229
     200:	65 65       	ori	r22, 0x55	; 85
     202:	3e 65       	ori	r19, 0x5E	; 94
     204:	66 3e       	cpi	r22, 0xE6	; 230
     206:	64 66       	ori	r22, 0x64	; 100
     208:	3e 64       	ori	r19, 0x4E	; 78
     20a:	65 3e       	cpi	r22, 0xE5	; 229
     20c:	64 3e       	cpi	r22, 0xE4	; 228
     20e:	63 23       	and	r22, r19
     210:	3e 64       	ori	r19, 0x4E	; 78
     212:	62 3e       	cpi	r22, 0xE2	; 226
     214:	64 3e       	cpi	r22, 0xE4	; 228
     216:	63 23       	and	r22, r19
     218:	62 20       	and	r6, r2
     21a:	3e 63       	ori	r19, 0x3E	; 62
     21c:	23 61       	ori	r18, 0x13	; 19
     21e:	67 61       	ori	r22, 0x17	; 23
     220:	65 67       	ori	r22, 0x75	; 117
     222:	66 65       	ori	r22, 0x56	; 86
     224:	20 66       	ori	r18, 0x60	; 96
     226:	20 4f       	sbci	r18, 0xF0	; 240
     228:	36 20       	and	r3, r6
     22a:	64 63       	ori	r22, 0x34	; 52
     22c:	23 64       	ori	r18, 0x43	; 67
     22e:	66 64       	ori	r22, 0x46	; 70
     230:	63 23       	and	r22, r19
     232:	3c 62       	ori	r19, 0x2C	; 44
     234:	20 63       	ori	r18, 0x30	; 48
     236:	23 34       	cpi	r18, 0x43	; 67
	...

00000239 <welcome>:
     239:	3e 67 33 32 3e 3e 63 33 32 00 00                    >g32>>c32..

00000244 <__ctors_end>:
     244:	3e 15       	cp	r19, r14

00000246 <__dtors_end>:
     246:	11 24       	eor	r1, r1
     248:	1f be       	out	0x3f, r1	; 63
     24a:	cf ef       	ldi	r28, 0xFF	; 255
     24c:	d8 e0       	ldi	r29, 0x08	; 8
     24e:	de bf       	out	0x3e, r29	; 62
     250:	cd bf       	out	0x3d, r28	; 61

00000252 <__do_copy_data>:
     252:	11 e0       	ldi	r17, 0x01	; 1
     254:	a0 e0       	ldi	r26, 0x00	; 0
     256:	b1 e0       	ldi	r27, 0x01	; 1
     258:	e8 eb       	ldi	r30, 0xB8	; 184
     25a:	f8 e3       	ldi	r31, 0x38	; 56
     25c:	02 c0       	rjmp	.+4      	; 0x262 <__do_copy_data+0x10>
     25e:	05 90       	lpm	r0, Z+
     260:	0d 92       	st	X+, r0
     262:	a4 39       	cpi	r26, 0x94	; 148
     264:	b1 07       	cpc	r27, r17
     266:	d9 f7       	brne	.-10     	; 0x25e <__do_copy_data+0xc>

00000268 <__do_clear_bss>:
     268:	22 e0       	ldi	r18, 0x02	; 2
     26a:	a4 e9       	ldi	r26, 0x94	; 148
     26c:	b1 e0       	ldi	r27, 0x01	; 1
     26e:	01 c0       	rjmp	.+2      	; 0x272 <.do_clear_bss_start>

00000270 <.do_clear_bss_loop>:
     270:	1d 92       	st	X+, r1

00000272 <.do_clear_bss_start>:
     272:	af 31       	cpi	r26, 0x1F	; 31
     274:	b2 07       	cpc	r27, r18
     276:	e1 f7       	brne	.-8      	; 0x270 <.do_clear_bss_loop>
     278:	0e 94 41 03 	call	0x682	; 0x682 <main>
     27c:	0c 94 4f 1c 	jmp	0x389e	; 0x389e <__do_global_dtors>

00000280 <__bad_interrupt>:
     280:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000284 <sendACK>:
	}
}
			


void sendACK(Communications *self ){
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	00 d0       	rcall	.+0      	; 0x28a <sendACK+0x6>
     28a:	1f 92       	push	r1
     28c:	cd b7       	in	r28, 0x3d	; 61
     28e:	de b7       	in	r29, 0x3e	; 62
						char tmp[3];
						tmp[0]=START;
     290:	28 e0       	ldi	r18, 0x08	; 8
     292:	29 83       	std	Y+1, r18	; 0x01
						tmp[1]=255;
     294:	2f ef       	ldi	r18, 0xFF	; 255
     296:	2a 83       	std	Y+2, r18	; 0x02
						tmp[2]=STOP;
     298:	25 e6       	ldi	r18, 0x65	; 101
     29a:	2b 83       	std	Y+3, r18	; 0x03
						serial_send_blocking(tmp,self->val);
     29c:	fc 01       	movw	r30, r24
     29e:	60 81       	ld	r22, Z
     2a0:	ce 01       	movw	r24, r28
     2a2:	01 96       	adiw	r24, 0x01	; 1
     2a4:	0e 94 4b 14 	call	0x2896	; 0x2896 <serial_send_blocking>
}
     2a8:	0f 90       	pop	r0
     2aa:	0f 90       	pop	r0
     2ac:	0f 90       	pop	r0
     2ae:	df 91       	pop	r29
     2b0:	cf 91       	pop	r28
     2b2:	08 95       	ret

000002b4 <Update>:

void Update(Communications *self){
     2b4:	1f 93       	push	r17
     2b6:	cf 93       	push	r28
     2b8:	df 93       	push	r29
     2ba:	ec 01       	movw	r28, r24
	char Flag =0;
			if (serial_receive_buffer_full()==1){
     2bc:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <serial_receive_buffer_full>
     2c0:	81 30       	cpi	r24, 0x01	; 1
     2c2:	09 f0       	breq	.+2      	; 0x2c6 <Update+0x12>
     2c4:	4c c0       	rjmp	.+152    	; 0x35e <Update+0xaa>
				if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
     2c6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2c8:	88 30       	cpi	r24, 0x08	; 8
     2ca:	09 f0       	breq	.+2      	; 0x2ce <Update+0x1a>
     2cc:	4a c0       	rjmp	.+148    	; 0x362 <Update+0xae>
     2ce:	e8 81       	ld	r30, Y
     2d0:	f0 e0       	ldi	r31, 0x00	; 0
     2d2:	31 97       	sbiw	r30, 0x01	; 1
     2d4:	ec 0f       	add	r30, r28
     2d6:	fd 1f       	adc	r31, r29
     2d8:	83 8d       	ldd	r24, Z+27	; 0x1b
     2da:	85 36       	cpi	r24, 0x65	; 101
     2dc:	09 f0       	breq	.+2      	; 0x2e0 <Update+0x2c>
     2de:	43 c0       	rjmp	.+134    	; 0x366 <Update+0xb2>
				Flag = 1;
				//play_from_program_space(fugue);
				
				sendACK(self); // stops here to send acknowledge
     2e0:	ce 01       	movw	r24, r28
     2e2:	0e 94 42 01 	call	0x284	; 0x284 <sendACK>
				if (self->Recieved[5]==254 || self->EmergencyStop==1){	//enter emergency stop
     2e6:	88 a1       	ldd	r24, Y+32	; 0x20
     2e8:	8e 3f       	cpi	r24, 0xFE	; 254
     2ea:	31 f0       	breq	.+12     	; 0x2f8 <Update+0x44>
     2ec:	fe 01       	movw	r30, r28
     2ee:	e5 59       	subi	r30, 0x95	; 149
     2f0:	ff 4f       	sbci	r31, 0xFF	; 255
     2f2:	80 81       	ld	r24, Z
     2f4:	81 30       	cpi	r24, 0x01	; 1
     2f6:	49 f4       	brne	.+18     	; 0x30a <Update+0x56>
									play_from_program_space(fugue);
     2f8:	8a e7       	ldi	r24, 0x7A	; 122
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	0e 94 69 10 	call	0x20d2	; 0x20d2 <play_from_program_space>
					self->EmergencyStop=1;
     300:	81 e0       	ldi	r24, 0x01	; 1
     302:	fe 01       	movw	r30, r28
     304:	e5 59       	subi	r30, 0x95	; 149
     306:	ff 4f       	sbci	r31, 0xFF	; 255
     308:	80 83       	st	Z, r24
				}
				
				if (self->Recieved[8]==250 && self->EmergencyStop==1){	// Leave emergency stop
     30a:	8b a1       	ldd	r24, Y+35	; 0x23
     30c:	8a 3f       	cpi	r24, 0xFA	; 250
     30e:	39 f4       	brne	.+14     	; 0x31e <Update+0x6a>
     310:	fe 01       	movw	r30, r28
     312:	e5 59       	subi	r30, 0x95	; 149
     314:	ff 4f       	sbci	r31, 0xFF	; 255
     316:	90 81       	ld	r25, Z
     318:	91 30       	cpi	r25, 0x01	; 1
     31a:	09 f4       	brne	.+2      	; 0x31e <Update+0x6a>
					self->EmergencyStop=0;
     31c:	10 82       	st	Z, r1
				}
				
				if (self->Recieved[8]==245){							// Enter Spin Mode
     31e:	85 3f       	cpi	r24, 0xF5	; 245
     320:	29 f4       	brne	.+10     	; 0x32c <Update+0x78>
					self->EmergencyStop=3;
     322:	93 e0       	ldi	r25, 0x03	; 3
     324:	fe 01       	movw	r30, r28
     326:	e5 59       	subi	r30, 0x95	; 149
     328:	ff 4f       	sbci	r31, 0xFF	; 255
     32a:	90 83       	st	Z, r25
				}
				if (self->Recieved[8]==240){							// Enter Manual Mode
     32c:	80 3f       	cpi	r24, 0xF0	; 240
     32e:	e9 f4       	brne	.+58     	; 0x36a <Update+0xb6>
					self->EmergencyStop=4;
     330:	84 e0       	ldi	r24, 0x04	; 4
     332:	fe 01       	movw	r30, r28
     334:	e5 59       	subi	r30, 0x95	; 149
     336:	ff 4f       	sbci	r31, 0xFF	; 255
     338:	80 83       	st	Z, r24
					for (int i = 0; i < 4; i++){
     33a:	80 e0       	ldi	r24, 0x00	; 0
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	0a c0       	rjmp	.+20     	; 0x354 <Update+0xa0>
						self->Direction[i]=self->Recieved[i+9];
     340:	fc 01       	movw	r30, r24
     342:	39 96       	adiw	r30, 0x09	; 9
     344:	ec 0f       	add	r30, r28
     346:	fd 1f       	adc	r31, r29
     348:	23 8d       	ldd	r18, Z+27	; 0x1b
     34a:	fe 01       	movw	r30, r28
     34c:	e8 0f       	add	r30, r24
     34e:	f9 1f       	adc	r31, r25
     350:	25 ab       	std	Z+53, r18	; 0x35
				if (self->Recieved[8]==245){							// Enter Spin Mode
					self->EmergencyStop=3;
				}
				if (self->Recieved[8]==240){							// Enter Manual Mode
					self->EmergencyStop=4;
					for (int i = 0; i < 4; i++){
     352:	01 96       	adiw	r24, 0x01	; 1
     354:	84 30       	cpi	r24, 0x04	; 4
     356:	91 05       	cpc	r25, r1
     358:	9c f3       	brlt	.-26     	; 0x340 <Update+0x8c>

void Update(Communications *self){
	char Flag =0;
			if (serial_receive_buffer_full()==1){
				if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
				Flag = 1;
     35a:	11 e0       	ldi	r17, 0x01	; 1
     35c:	07 c0       	rjmp	.+14     	; 0x36c <Update+0xb8>
						tmp[2]=STOP;
						serial_send_blocking(tmp,self->val);
}

void Update(Communications *self){
	char Flag =0;
     35e:	10 e0       	ldi	r17, 0x00	; 0
     360:	05 c0       	rjmp	.+10     	; 0x36c <Update+0xb8>
     362:	10 e0       	ldi	r17, 0x00	; 0
     364:	03 c0       	rjmp	.+6      	; 0x36c <Update+0xb8>
     366:	10 e0       	ldi	r17, 0x00	; 0
     368:	01 c0       	rjmp	.+2      	; 0x36c <Update+0xb8>
			if (serial_receive_buffer_full()==1){
				if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
				Flag = 1;
     36a:	11 e0       	ldi	r17, 0x01	; 1
					filllocationarrays(self);
				}
				}
			}
			
				for (char i=0;i<self->val;i++){
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	05 c0       	rjmp	.+10     	; 0x37a <Update+0xc6>
					self->msgBuffer[i]=i;
     370:	fe 01       	movw	r30, r28
     372:	e8 0f       	add	r30, r24
     374:	f1 1d       	adc	r31, r1
     376:	81 83       	std	Z+1, r24	; 0x01
					filllocationarrays(self);
				}
				}
			}
			
				for (char i=0;i<self->val;i++){
     378:	8f 5f       	subi	r24, 0xFF	; 255
     37a:	68 81       	ld	r22, Y
     37c:	86 17       	cp	r24, r22
     37e:	c0 f3       	brcs	.-16     	; 0x370 <Update+0xbc>
					self->msgBuffer[i]=i;
				}
				self->msgBuffer[0]=START;
     380:	88 e0       	ldi	r24, 0x08	; 8
     382:	89 83       	std	Y+1, r24	; 0x01
				self->msgBuffer[1]=self->batterylvl;
     384:	fe 01       	movw	r30, r28
     386:	e4 59       	subi	r30, 0x94	; 148
     388:	ff 4f       	sbci	r31, 0xFF	; 255
     38a:	80 81       	ld	r24, Z
     38c:	8a 83       	std	Y+2, r24	; 0x02
				self->msgBuffer[2]=self->magprocess;
     38e:	31 96       	adiw	r30, 0x01	; 1
     390:	80 81       	ld	r24, Z
     392:	8b 83       	std	Y+3, r24	; 0x03
				self->msgBuffer[3]=self->locationx;
     394:	31 96       	adiw	r30, 0x01	; 1
     396:	80 81       	ld	r24, Z
     398:	8c 83       	std	Y+4, r24	; 0x04
				self->msgBuffer[4]=self->locationy;
     39a:	31 96       	adiw	r30, 0x01	; 1
     39c:	80 81       	ld	r24, Z
     39e:	8d 83       	std	Y+5, r24	; 0x05
				self->msgBuffer[5]=self->EmergencyStop;
     3a0:	34 97       	sbiw	r30, 0x04	; 4
     3a2:	80 81       	ld	r24, Z
     3a4:	8e 83       	std	Y+6, r24	; 0x06
				self->msgBuffer[self->val-1]=STOP;
     3a6:	e6 2f       	mov	r30, r22
     3a8:	f0 e0       	ldi	r31, 0x00	; 0
     3aa:	31 97       	sbiw	r30, 0x01	; 1
     3ac:	ec 0f       	add	r30, r28
     3ae:	fd 1f       	adc	r31, r29
     3b0:	85 e6       	ldi	r24, 0x65	; 101
     3b2:	81 83       	std	Z+1, r24	; 0x01
				serial_send(self->msgBuffer, self->val);
     3b4:	ce 01       	movw	r24, r28
     3b6:	01 96       	adiw	r24, 0x01	; 1
     3b8:	0e 94 06 14 	call	0x280c	; 0x280c <serial_send>

				delay_ms(10000); // test
     3bc:	80 e1       	ldi	r24, 0x10	; 16
     3be:	97 e2       	ldi	r25, 0x27	; 39
     3c0:	0e 94 bb 14 	call	0x2976	; 0x2976 <delay_ms>
				if (Flag == 1){
     3c4:	11 30       	cpi	r17, 0x01	; 1
     3c6:	29 f4       	brne	.+10     	; 0x3d2 <Update+0x11e>
					serial_receive(self->Recieved,self->val);
     3c8:	68 81       	ld	r22, Y
     3ca:	ce 01       	movw	r24, r28
     3cc:	4b 96       	adiw	r24, 0x1b	; 27
     3ce:	0e 94 7f 13 	call	0x26fe	; 0x26fe <serial_receive>
				}		
}
     3d2:	df 91       	pop	r29
     3d4:	cf 91       	pop	r28
     3d6:	1f 91       	pop	r17
     3d8:	08 95       	ret

000003da <fillarrays>:

void fillarrays(Communications *self){
     3da:	cf 93       	push	r28
     3dc:	df 93       	push	r29
     3de:	cd b7       	in	r28, 0x3d	; 61
     3e0:	de b7       	in	r29, 0x3e	; 62
     3e2:	60 97       	sbiw	r28, 0x10	; 16
     3e4:	0f b6       	in	r0, 0x3f	; 63
     3e6:	f8 94       	cli
     3e8:	de bf       	out	0x3e, r29	; 62
     3ea:	0f be       	out	0x3f, r0	; 63
     3ec:	cd bf       	out	0x3d, r28	; 61
     3ee:	ac 01       	movw	r20, r24
	//temp
		char arrx[]={2,5,4,2,1,6,1,5};
     3f0:	88 e0       	ldi	r24, 0x08	; 8
     3f2:	e8 e2       	ldi	r30, 0x28	; 40
     3f4:	f1 e0       	ldi	r31, 0x01	; 1
     3f6:	de 01       	movw	r26, r28
     3f8:	11 96       	adiw	r26, 0x01	; 1
     3fa:	01 90       	ld	r0, Z+
     3fc:	0d 92       	st	X+, r0
     3fe:	8a 95       	dec	r24
     400:	e1 f7       	brne	.-8      	; 0x3fa <fillarrays+0x20>
		char arry[]={0,1,3,5,2,4,1,2};
     402:	88 e0       	ldi	r24, 0x08	; 8
     404:	e0 e3       	ldi	r30, 0x30	; 48
     406:	f1 e0       	ldi	r31, 0x01	; 1
     408:	de 01       	movw	r26, r28
     40a:	19 96       	adiw	r26, 0x09	; 9
     40c:	01 90       	ld	r0, Z+
     40e:	0d 92       	st	X+, r0
     410:	8a 95       	dec	r24
     412:	e1 f7       	brne	.-8      	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
		for (int i=0;i<8;i++){
     414:	20 e0       	ldi	r18, 0x00	; 0
     416:	30 e0       	ldi	r19, 0x00	; 0
     418:	19 c0       	rjmp	.+50     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
			self->Orderarx[i]=arrx[i];
     41a:	e1 e0       	ldi	r30, 0x01	; 1
     41c:	f0 e0       	ldi	r31, 0x00	; 0
     41e:	ec 0f       	add	r30, r28
     420:	fd 1f       	adc	r31, r29
     422:	e2 0f       	add	r30, r18
     424:	f3 1f       	adc	r31, r19
     426:	90 81       	ld	r25, Z
     428:	da 01       	movw	r26, r20
     42a:	a2 0f       	add	r26, r18
     42c:	b3 1f       	adc	r27, r19
     42e:	fd 01       	movw	r30, r26
     430:	ee 5a       	subi	r30, 0xAE	; 174
     432:	ff 4f       	sbci	r31, 0xFF	; 255
     434:	90 83       	st	Z, r25
			self->Orderary[i]=arry[i];
     436:	e9 e0       	ldi	r30, 0x09	; 9
     438:	f0 e0       	ldi	r31, 0x00	; 0
     43a:	ec 0f       	add	r30, r28
     43c:	fd 1f       	adc	r31, r29
     43e:	e2 0f       	add	r30, r18
     440:	f3 1f       	adc	r31, r19
     442:	90 81       	ld	r25, Z
     444:	d9 96       	adiw	r26, 0x39	; 57
     446:	9c 93       	st	X, r25

void fillarrays(Communications *self){
	//temp
		char arrx[]={2,5,4,2,1,6,1,5};
		char arry[]={0,1,3,5,2,4,1,2};
		for (int i=0;i<8;i++){
     448:	2f 5f       	subi	r18, 0xFF	; 255
     44a:	3f 4f       	sbci	r19, 0xFF	; 255
     44c:	28 30       	cpi	r18, 0x08	; 8
     44e:	31 05       	cpc	r19, r1
     450:	24 f3       	brlt	.-56     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
			self->Orderarx[i]=arrx[i];
			self->Orderary[i]=arry[i];
		}
}
     452:	60 96       	adiw	r28, 0x10	; 16
     454:	0f b6       	in	r0, 0x3f	; 63
     456:	f8 94       	cli
     458:	de bf       	out	0x3e, r29	; 62
     45a:	0f be       	out	0x3f, r0	; 63
     45c:	cd bf       	out	0x3d, r28	; 61
     45e:	df 91       	pop	r29
     460:	cf 91       	pop	r28
     462:	08 95       	ret

00000464 <Communications_INIT>:

void Communications_INIT(Communications * myCom){
     464:	cf 93       	push	r28
     466:	df 93       	push	r29
     468:	ec 01       	movw	r28, r24
	myCom->val = Max_Bytes;	
     46a:	8a e1       	ldi	r24, 0x1A	; 26
     46c:	88 83       	st	Y, r24


	//Setup Communications
	serial_set_baud_rate(9600);
     46e:	60 e8       	ldi	r22, 0x80	; 128
     470:	75 e2       	ldi	r23, 0x25	; 37
     472:	80 e0       	ldi	r24, 0x00	; 0
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	0e 94 d6 13 	call	0x27ac	; 0x27ac <serial_set_baud_rate>
	serial_receive(myCom->Recieved,myCom->val);
     47a:	68 81       	ld	r22, Y
     47c:	ce 01       	movw	r24, r28
     47e:	4b 96       	adiw	r24, 0x1b	; 27
     480:	0e 94 7f 13 	call	0x26fe	; 0x26fe <serial_receive>

	//filling in functions
	myCom->Update		 = Update;
     484:	fe 01       	movw	r30, r28
     486:	e0 59       	subi	r30, 0x90	; 144
     488:	ff 4f       	sbci	r31, 0xFF	; 255
     48a:	8a e5       	ldi	r24, 0x5A	; 90
     48c:	91 e0       	ldi	r25, 0x01	; 1
     48e:	91 83       	std	Z+1, r25	; 0x01
     490:	80 83       	st	Z, r24
		
	//filling in default values
	myCom->EmergencyStop = 0;
     492:	35 97       	sbiw	r30, 0x05	; 5
     494:	10 82       	st	Z, r1
	myCom->batterylvl	 = 55;
     496:	31 96       	adiw	r30, 0x01	; 1
     498:	87 e3       	ldi	r24, 0x37	; 55
     49a:	80 83       	st	Z, r24
	myCom->magprocess	 = 20;
     49c:	31 96       	adiw	r30, 0x01	; 1
     49e:	84 e1       	ldi	r24, 0x14	; 20
     4a0:	80 83       	st	Z, r24
	myCom->locationx	 = 4;
     4a2:	31 96       	adiw	r30, 0x01	; 1
     4a4:	84 e0       	ldi	r24, 0x04	; 4
     4a6:	80 83       	st	Z, r24
	myCom->locationy	 = 5;
     4a8:	31 96       	adiw	r30, 0x01	; 1
     4aa:	85 e0       	ldi	r24, 0x05	; 5
     4ac:	80 83       	st	Z, r24
	
	
	fillarrays(myCom);
     4ae:	ce 01       	movw	r24, r28
     4b0:	0e 94 ed 01 	call	0x3da	; 0x3da <fillarrays>
}
     4b4:	df 91       	pop	r29
     4b6:	cf 91       	pop	r28
     4b8:	08 95       	ret

000004ba <batteryPercentage>:
     4ba:	cf 92       	push	r12
     4bc:	df 92       	push	r13
     4be:	ef 92       	push	r14
     4c0:	ff 92       	push	r15
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     4c2:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <read_battery_millivolts_3pi>
     4c6:	bc 01       	movw	r22, r24
     4c8:	80 e0       	ldi	r24, 0x00	; 0
     4ca:	90 e0       	ldi	r25, 0x00	; 0
     4cc:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <__floatunsisf>
     4d0:	6b 01       	movw	r12, r22
     4d2:	7c 01       	movw	r14, r24
     4d4:	9b 01       	movw	r18, r22
     4d6:	ac 01       	movw	r20, r24
     4d8:	0e 94 12 0c 	call	0x1824	; 0x1824 <__mulsf3>
     4dc:	9b 01       	movw	r18, r22
     4de:	ac 01       	movw	r20, r24
     4e0:	c7 01       	movw	r24, r14
     4e2:	b6 01       	movw	r22, r12
     4e4:	0e 94 12 0c 	call	0x1824	; 0x1824 <__mulsf3>
     4e8:	2c e0       	ldi	r18, 0x0C	; 12
     4ea:	39 eb       	ldi	r19, 0xB9	; 185
     4ec:	4d e2       	ldi	r20, 0x2D	; 45
     4ee:	50 e3       	ldi	r21, 0x30	; 48
     4f0:	0e 94 12 0c 	call	0x1824	; 0x1824 <__mulsf3>
     4f4:	ff 90       	pop	r15
     4f6:	ef 90       	pop	r14
     4f8:	df 90       	pop	r13
     4fa:	cf 90       	pop	r12
     4fc:	08 95       	ret

000004fe <updateDisplay>:
     4fe:	ef 92       	push	r14
     500:	ff 92       	push	r15
     502:	0f 93       	push	r16
     504:	1f 93       	push	r17
     506:	cf 93       	push	r28
     508:	7c 01       	movw	r14, r24
     50a:	8b 01       	movw	r16, r22
     50c:	c4 2f       	mov	r28, r20
     50e:	0e 94 75 11 	call	0x22ea	; 0x22ea <clear>
     512:	60 e0       	ldi	r22, 0x00	; 0
     514:	80 e0       	ldi	r24, 0x00	; 0
     516:	0e 94 fc 11 	call	0x23f8	; 0x23f8 <lcd_goto_xy>
     51a:	85 e5       	ldi	r24, 0x55	; 85
     51c:	91 e0       	ldi	r25, 0x01	; 1
     51e:	0e 94 84 11 	call	0x2308	; 0x2308 <print>
     522:	b7 01       	movw	r22, r14
     524:	ff 0c       	add	r15, r15
     526:	88 0b       	sbc	r24, r24
     528:	99 0b       	sbc	r25, r25
     52a:	0e 94 d9 11 	call	0x23b2	; 0x23b2 <print_long>
     52e:	8a e5       	ldi	r24, 0x5A	; 90
     530:	91 e0       	ldi	r25, 0x01	; 1
     532:	0e 94 84 11 	call	0x2308	; 0x2308 <print>
     536:	61 e0       	ldi	r22, 0x01	; 1
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	0e 94 fc 11 	call	0x23f8	; 0x23f8 <lcd_goto_xy>
     53e:	8c e5       	ldi	r24, 0x5C	; 92
     540:	91 e0       	ldi	r25, 0x01	; 1
     542:	0e 94 84 11 	call	0x2308	; 0x2308 <print>
     546:	b8 01       	movw	r22, r16
     548:	11 0f       	add	r17, r17
     54a:	88 0b       	sbc	r24, r24
     54c:	99 0b       	sbc	r25, r25
     54e:	0e 94 d9 11 	call	0x23b2	; 0x23b2 <print_long>
     552:	8a e5       	ldi	r24, 0x5A	; 90
     554:	91 e0       	ldi	r25, 0x01	; 1
     556:	0e 94 84 11 	call	0x2308	; 0x2308 <print>
     55a:	c2 30       	cpi	r28, 0x02	; 2
     55c:	a9 f0       	breq	.+42     	; 0x588 <updateDisplay+0x8a>
     55e:	28 f4       	brcc	.+10     	; 0x56a <updateDisplay+0x6c>
     560:	cc 23       	and	r28, r28
     562:	41 f0       	breq	.+16     	; 0x574 <updateDisplay+0x76>
     564:	c1 30       	cpi	r28, 0x01	; 1
     566:	59 f0       	breq	.+22     	; 0x57e <updateDisplay+0x80>
     568:	1d c0       	rjmp	.+58     	; 0x5a4 <updateDisplay+0xa6>
     56a:	c3 30       	cpi	r28, 0x03	; 3
     56c:	91 f0       	breq	.+36     	; 0x592 <updateDisplay+0x94>
     56e:	c4 30       	cpi	r28, 0x04	; 4
     570:	a9 f0       	breq	.+42     	; 0x59c <updateDisplay+0x9e>
     572:	18 c0       	rjmp	.+48     	; 0x5a4 <updateDisplay+0xa6>
     574:	81 e6       	ldi	r24, 0x61	; 97
     576:	91 e0       	ldi	r25, 0x01	; 1
     578:	0e 94 84 11 	call	0x2308	; 0x2308 <print>
     57c:	13 c0       	rjmp	.+38     	; 0x5a4 <updateDisplay+0xa6>
     57e:	83 e6       	ldi	r24, 0x63	; 99
     580:	91 e0       	ldi	r25, 0x01	; 1
     582:	0e 94 84 11 	call	0x2308	; 0x2308 <print>
     586:	0e c0       	rjmp	.+28     	; 0x5a4 <updateDisplay+0xa6>
     588:	85 e6       	ldi	r24, 0x65	; 101
     58a:	91 e0       	ldi	r25, 0x01	; 1
     58c:	0e 94 84 11 	call	0x2308	; 0x2308 <print>
     590:	09 c0       	rjmp	.+18     	; 0x5a4 <updateDisplay+0xa6>
     592:	87 e6       	ldi	r24, 0x67	; 103
     594:	91 e0       	ldi	r25, 0x01	; 1
     596:	0e 94 84 11 	call	0x2308	; 0x2308 <print>
     59a:	04 c0       	rjmp	.+8      	; 0x5a4 <updateDisplay+0xa6>
     59c:	89 e6       	ldi	r24, 0x69	; 105
     59e:	91 e0       	ldi	r25, 0x01	; 1
     5a0:	0e 94 84 11 	call	0x2308	; 0x2308 <print>
     5a4:	cf 91       	pop	r28
     5a6:	1f 91       	pop	r17
     5a8:	0f 91       	pop	r16
     5aa:	ff 90       	pop	r15
     5ac:	ef 90       	pop	r14
     5ae:	08 95       	ret

000005b0 <whileBarcode>:

const char welcome[] PROGMEM = ">g32>>c32";

void whileBarcode()
{
	while (lineType() != Barcode)
     5b0:	03 c0       	rjmp	.+6      	; 0x5b8 <whileBarcode+0x8>
	{
		motorControl('S');
     5b2:	83 e5       	ldi	r24, 0x53	; 83
     5b4:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>

const char welcome[] PROGMEM = ">g32>>c32";

void whileBarcode()
{
	while (lineType() != Barcode)
     5b8:	0e 94 42 05 	call	0xa84	; 0xa84 <lineType>
     5bc:	82 30       	cpi	r24, 0x02	; 2
     5be:	c9 f7       	brne	.-14     	; 0x5b2 <whileBarcode+0x2>
	{
		motorControl('S');
	}
}
     5c0:	08 95       	ret

000005c2 <whileLineEnd>:

void whileLineEnd()
{
	while (lineType() != Line_end)
     5c2:	03 c0       	rjmp	.+6      	; 0x5ca <whileLineEnd+0x8>
	{
		motorControl('S');
     5c4:	83 e5       	ldi	r24, 0x53	; 83
     5c6:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
	}
}

void whileLineEnd()
{
	while (lineType() != Line_end)
     5ca:	0e 94 42 05 	call	0xa84	; 0xa84 <lineType>
     5ce:	81 30       	cpi	r24, 0x01	; 1
     5d0:	c9 f7       	brne	.-14     	; 0x5c4 <whileLineEnd+0x2>
	{
		motorControl('S');
	}
}
     5d2:	08 95       	ret

000005d4 <charge_3pi>:
void charge_3pi(Communications *communications)
{
     5d4:	cf 93       	push	r28
     5d6:	df 93       	push	r29
     5d8:	ec 01       	movw	r28, r24
	whileBarcode();
     5da:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <whileBarcode>
	updateDisplay(0, batteryPercentage(), mazeSolver);
     5de:	0e 94 5d 02 	call	0x4ba	; 0x4ba <batteryPercentage>
     5e2:	0e 94 2a 0b 	call	0x1654	; 0x1654 <__fixsfsi>
     5e6:	41 e0       	ldi	r20, 0x01	; 1
     5e8:	80 e0       	ldi	r24, 0x00	; 0
     5ea:	90 e0       	ldi	r25, 0x00	; 0
     5ec:	0e 94 7f 02 	call	0x4fe	; 0x4fe <updateDisplay>
	parcours('T', communications);
     5f0:	be 01       	movw	r22, r28
     5f2:	84 e5       	ldi	r24, 0x54	; 84
     5f4:	0e 94 62 07 	call	0xec4	; 0xec4 <parcours>
	updateDisplay(0, batteryPercentage(), chargeMode);
     5f8:	0e 94 5d 02 	call	0x4ba	; 0x4ba <batteryPercentage>
     5fc:	0e 94 2a 0b 	call	0x1654	; 0x1654 <__fixsfsi>
     600:	43 e0       	ldi	r20, 0x03	; 3
     602:	80 e0       	ldi	r24, 0x00	; 0
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	0e 94 7f 02 	call	0x4fe	; 0x4fe <updateDisplay>
	warehouse(charging, communications);
     60a:	be 01       	movw	r22, r28
     60c:	81 e0       	ldi	r24, 0x01	; 1
     60e:	0e 94 82 09 	call	0x1304	; 0x1304 <warehouse>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     612:	88 e8       	ldi	r24, 0x88	; 136
     614:	93 e1       	ldi	r25, 0x13	; 19
     616:	0e 94 bb 14 	call	0x2976	; 0x2976 <delay_ms>
	delay(5000);								// wacht totdat de robot vol is
	warehouse(charging, communications);
     61a:	be 01       	movw	r22, r28
     61c:	81 e0       	ldi	r24, 0x01	; 1
     61e:	0e 94 82 09 	call	0x1304	; 0x1304 <warehouse>
	whileBarcode();
     622:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <whileBarcode>
	updateDisplay(0, batteryPercentage(), mazeSolver);
     626:	0e 94 5d 02 	call	0x4ba	; 0x4ba <batteryPercentage>
     62a:	0e 94 2a 0b 	call	0x1654	; 0x1654 <__fixsfsi>
     62e:	41 e0       	ldi	r20, 0x01	; 1
     630:	80 e0       	ldi	r24, 0x00	; 0
     632:	90 e0       	ldi	r25, 0x00	; 0
     634:	0e 94 7f 02 	call	0x4fe	; 0x4fe <updateDisplay>
	parcours('B', communications);
     638:	be 01       	movw	r22, r28
     63a:	82 e4       	ldi	r24, 0x42	; 66
     63c:	0e 94 62 07 	call	0xec4	; 0xec4 <parcours>
	whileLineEnd();
     640:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <whileLineEnd>
	motorControl('L');
     644:	8c e4       	ldi	r24, 0x4C	; 76
     646:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
}
     64a:	df 91       	pop	r29
     64c:	cf 91       	pop	r28
     64e:	08 95       	ret

00000650 <pickOrder>:

void pickOrder(Communications *communications)
{
     650:	cf 93       	push	r28
     652:	df 93       	push	r29
     654:	ec 01       	movw	r28, r24
	whileBarcode();
     656:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <whileBarcode>
	parcours('T', communications);
     65a:	be 01       	movw	r22, r28
     65c:	84 e5       	ldi	r24, 0x54	; 84
     65e:	0e 94 62 07 	call	0xec4	; 0xec4 <parcours>
	warehouse(orderPicking, communications); 	
     662:	be 01       	movw	r22, r28
     664:	80 e0       	ldi	r24, 0x00	; 0
     666:	0e 94 82 09 	call	0x1304	; 0x1304 <warehouse>
	parcours('B', communications);
     66a:	be 01       	movw	r22, r28
     66c:	82 e4       	ldi	r24, 0x42	; 66
     66e:	0e 94 62 07 	call	0xec4	; 0xec4 <parcours>
	whileLineEnd();
     672:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <whileLineEnd>
	motorControl('L');
     676:	8c e4       	ldi	r24, 0x4C	; 76
     678:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
}
     67c:	df 91       	pop	r29
     67e:	cf 91       	pop	r28
     680:	08 95       	ret

00000682 <main>:

int main()
{
     682:	cf 93       	push	r28
     684:	df 93       	push	r29
     686:	cd b7       	in	r28, 0x3d	; 61
     688:	de b7       	in	r29, 0x3e	; 62
     68a:	c2 57       	subi	r28, 0x72	; 114
     68c:	d1 09       	sbc	r29, r1
     68e:	0f b6       	in	r0, 0x3f	; 63
     690:	f8 94       	cli
     692:	de bf       	out	0x3e, r29	; 62
     694:	0f be       	out	0x3f, r0	; 63
     696:	cd bf       	out	0x3d, r28	; 61
	play_from_program_space(welcome);
     698:	89 e3       	ldi	r24, 0x39	; 57
     69a:	92 e0       	ldi	r25, 0x02	; 2
     69c:	0e 94 69 10 	call	0x20d2	; 0x20d2 <play_from_program_space>
	
	Communications communications;
	Communications_INIT(&communications);
     6a0:	ce 01       	movw	r24, r28
     6a2:	01 96       	adiw	r24, 0x01	; 1
     6a4:	0e 94 32 02 	call	0x464	; 0x464 <Communications_INIT>
	
	initialize(&communications);
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	0e 94 a4 03 	call	0x748	; 0x748 <initialize>
	
	while(1) 
	{
		updateDisplay(0, batteryPercentage(), homingMode);
     6b0:	0e 94 5d 02 	call	0x4ba	; 0x4ba <batteryPercentage>
     6b4:	0e 94 2a 0b 	call	0x1654	; 0x1654 <__fixsfsi>
     6b8:	44 e0       	ldi	r20, 0x04	; 4
     6ba:	80 e0       	ldi	r24, 0x00	; 0
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	0e 94 7f 02 	call	0x4fe	; 0x4fe <updateDisplay>
		communications.Update(&communications);
     6c2:	e3 96       	adiw	r28, 0x33	; 51
     6c4:	ee ad       	ldd	r30, Y+62	; 0x3e
     6c6:	ff ad       	ldd	r31, Y+63	; 0x3f
     6c8:	e3 97       	sbiw	r28, 0x33	; 51
     6ca:	ce 01       	movw	r24, r28
     6cc:	01 96       	adiw	r24, 0x01	; 1
     6ce:	09 95       	icall
		
		communications.locationx = -1;
     6d0:	8f ef       	ldi	r24, 0xFF	; 255
     6d2:	e0 96       	adiw	r28, 0x30	; 48
     6d4:	8f af       	std	Y+63, r24	; 0x3f
     6d6:	e0 97       	sbiw	r28, 0x30	; 48
		communications.locationy = -1;
     6d8:	e1 96       	adiw	r28, 0x31	; 49
     6da:	8f af       	std	Y+63, r24	; 0x3f
     6dc:	e1 97       	sbiw	r28, 0x31	; 49
		
		switch (communications.EmergencyStop) {
     6de:	ad 96       	adiw	r28, 0x2d	; 45
     6e0:	8f ad       	ldd	r24, Y+63	; 0x3f
     6e2:	ad 97       	sbiw	r28, 0x2d	; 45
     6e4:	82 30       	cpi	r24, 0x02	; 2
     6e6:	51 f1       	breq	.+84     	; 0x73c <main+0xba>
     6e8:	83 30       	cpi	r24, 0x03	; 3
     6ea:	59 f1       	breq	.+86     	; 0x742 <main+0xc0>
     6ec:	81 11       	cpse	r24, r1
     6ee:	e0 cf       	rjmp	.-64     	; 0x6b0 <main+0x2e>
			case 0: //0 for clear; 1 for stop; 2 for spin; 3 for manual
				if (read_battery_millivolts_3pi() < 0.6 * 5200)
     6f0:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <read_battery_millivolts_3pi>
     6f4:	bc 01       	movw	r22, r24
     6f6:	80 e0       	ldi	r24, 0x00	; 0
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <__floatunsisf>
     6fe:	21 e0       	ldi	r18, 0x01	; 1
     700:	30 e0       	ldi	r19, 0x00	; 0
     702:	43 e4       	ldi	r20, 0x43	; 67
     704:	55 e4       	ldi	r21, 0x45	; 69
     706:	0e 94 25 0b 	call	0x164a	; 0x164a <__cmpsf2>
     70a:	88 23       	and	r24, r24
     70c:	2c f4       	brge	.+10     	; 0x718 <main+0x96>
				{
					charge_3pi(&communications);
     70e:	ce 01       	movw	r24, r28
     710:	01 96       	adiw	r24, 0x01	; 1
     712:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <charge_3pi>
     716:	cc cf       	rjmp	.-104    	; 0x6b0 <main+0x2e>
				}
				else if (communications.Orderarx > 0)
				{
					communications.locationx = 0;
     718:	e0 96       	adiw	r28, 0x30	; 48
     71a:	1f ae       	std	Y+63, r1	; 0x3f
     71c:	e0 97       	sbiw	r28, 0x30	; 48
					communications.locationy = 0;
     71e:	e1 96       	adiw	r28, 0x31	; 49
     720:	1f ae       	std	Y+63, r1	; 0x3f
     722:	e1 97       	sbiw	r28, 0x31	; 49
					pickOrder(&communications);
     724:	ce 01       	movw	r24, r28
     726:	01 96       	adiw	r24, 0x01	; 1
     728:	0e 94 28 03 	call	0x650	; 0x650 <pickOrder>
					communications.locationx = -1;
     72c:	8f ef       	ldi	r24, 0xFF	; 255
     72e:	e0 96       	adiw	r28, 0x30	; 48
     730:	8f af       	std	Y+63, r24	; 0x3f
     732:	e0 97       	sbiw	r28, 0x30	; 48
					communications.locationy = -1;
     734:	e1 96       	adiw	r28, 0x31	; 49
     736:	8f af       	std	Y+63, r24	; 0x3f
     738:	e1 97       	sbiw	r28, 0x31	; 49
     73a:	ba cf       	rjmp	.-140    	; 0x6b0 <main+0x2e>
				}
				break;
				delay(100);
			case 2:
				Spin();
     73c:	0e 94 57 06 	call	0xcae	; 0xcae <Spin>
				break;
     740:	b7 cf       	rjmp	.-146    	; 0x6b0 <main+0x2e>
			case 3:
				manualControl();
     742:	0e 94 10 06 	call	0xc20	; 0xc20 <manualControl>
				break;
     746:	b4 cf       	rjmp	.-152    	; 0x6b0 <main+0x2e>

00000748 <initialize>:
     748:	cf 93       	push	r28
     74a:	df 93       	push	r29
     74c:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <myComs+0x1>
     750:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <myComs>
     754:	80 ed       	ldi	r24, 0xD0	; 208
     756:	97 e0       	ldi	r25, 0x07	; 7
     758:	0e 94 3a 15 	call	0x2a74	; 0x2a74 <pololu_3pi_init>
     75c:	0d c0       	rjmp	.+26     	; 0x778 <initialize+0x30>
     75e:	0e 94 75 11 	call	0x22ea	; 0x22ea <clear>
     762:	60 e0       	ldi	r22, 0x00	; 0
     764:	80 e0       	ldi	r24, 0x00	; 0
     766:	0e 94 fc 11 	call	0x23f8	; 0x23f8 <lcd_goto_xy>
     76a:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <read_battery_millivolts_3pi>
     76e:	bc 01       	movw	r22, r24
     770:	80 e0       	ldi	r24, 0x00	; 0
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	0e 94 d9 11 	call	0x23b2	; 0x23b2 <print_long>
     778:	80 e1       	ldi	r24, 0x10	; 16
     77a:	0e 94 f5 12 	call	0x25ea	; 0x25ea <button_is_pressed>
     77e:	88 23       	and	r24, r24
     780:	71 f3       	breq	.-36     	; 0x75e <initialize+0x16>
     782:	80 e1       	ldi	r24, 0x10	; 16
     784:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <wait_for_button_release>
     788:	88 ee       	ldi	r24, 0xE8	; 232
     78a:	93 e0       	ldi	r25, 0x03	; 3
     78c:	0e 94 bb 14 	call	0x2976	; 0x2976 <delay_ms>
     790:	c0 e0       	ldi	r28, 0x00	; 0
     792:	d0 e0       	ldi	r29, 0x00	; 0
     794:	19 c0       	rjmp	.+50     	; 0x7c8 <initialize+0x80>
     796:	ce 01       	movw	r24, r28
     798:	44 97       	sbiw	r24, 0x14	; 20
     79a:	88 97       	sbiw	r24, 0x28	; 40
     79c:	38 f0       	brcs	.+14     	; 0x7ac <initialize+0x64>
     79e:	68 ed       	ldi	r22, 0xD8	; 216
     7a0:	7f ef       	ldi	r23, 0xFF	; 255
     7a2:	88 e2       	ldi	r24, 0x28	; 40
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     7aa:	06 c0       	rjmp	.+12     	; 0x7b8 <initialize+0x70>
     7ac:	68 e2       	ldi	r22, 0x28	; 40
     7ae:	70 e0       	ldi	r23, 0x00	; 0
     7b0:	88 ed       	ldi	r24, 0xD8	; 216
     7b2:	9f ef       	ldi	r25, 0xFF	; 255
     7b4:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     7b8:	81 e0       	ldi	r24, 0x01	; 1
     7ba:	0e 94 f7 14 	call	0x29ee	; 0x29ee <calibrate_line_sensors>
     7be:	84 e1       	ldi	r24, 0x14	; 20
     7c0:	90 e0       	ldi	r25, 0x00	; 0
     7c2:	0e 94 bb 14 	call	0x2976	; 0x2976 <delay_ms>
     7c6:	21 96       	adiw	r28, 0x01	; 1
     7c8:	c0 35       	cpi	r28, 0x50	; 80
     7ca:	d1 05       	cpc	r29, r1
     7cc:	20 f3       	brcs	.-56     	; 0x796 <initialize+0x4e>
     7ce:	60 e0       	ldi	r22, 0x00	; 0
     7d0:	70 e0       	ldi	r23, 0x00	; 0
     7d2:	80 e0       	ldi	r24, 0x00	; 0
     7d4:	90 e0       	ldi	r25, 0x00	; 0
     7d6:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     7da:	80 e1       	ldi	r24, 0x10	; 16
     7dc:	0e 94 f5 12 	call	0x25ea	; 0x25ea <button_is_pressed>
     7e0:	88 23       	and	r24, r24
     7e2:	d9 f3       	breq	.-10     	; 0x7da <initialize+0x92>
     7e4:	80 e1       	ldi	r24, 0x10	; 16
     7e6:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <wait_for_button_release>
     7ea:	0e 94 75 11 	call	0x22ea	; 0x22ea <clear>
     7ee:	df 91       	pop	r29
     7f0:	cf 91       	pop	r28
     7f2:	08 95       	ret

000007f4 <inch>:
     7f4:	62 e3       	ldi	r22, 0x32	; 50
     7f6:	70 e0       	ldi	r23, 0x00	; 0
     7f8:	82 e3       	ldi	r24, 0x32	; 50
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     800:	88 ec       	ldi	r24, 0xC8	; 200
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	0e 94 bb 14 	call	0x2976	; 0x2976 <delay_ms>
     808:	60 e0       	ldi	r22, 0x00	; 0
     80a:	70 e0       	ldi	r23, 0x00	; 0
     80c:	80 e0       	ldi	r24, 0x00	; 0
     80e:	90 e0       	ldi	r25, 0x00	; 0
     810:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     814:	08 95       	ret

00000816 <wait>:
     816:	60 e0       	ldi	r22, 0x00	; 0
     818:	70 e0       	ldi	r23, 0x00	; 0
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     822:	80 e1       	ldi	r24, 0x10	; 16
     824:	0e 94 f5 12 	call	0x25ea	; 0x25ea <button_is_pressed>
     828:	88 23       	and	r24, r24
     82a:	d9 f3       	breq	.-10     	; 0x822 <wait+0xc>
     82c:	80 e1       	ldi	r24, 0x10	; 16
     82e:	0e 94 e1 12 	call	0x25c2	; 0x25c2 <wait_for_button_release>
     832:	08 95       	ret

00000834 <motorControl>:
     834:	cf 92       	push	r12
     836:	df 92       	push	r13
     838:	ef 92       	push	r14
     83a:	ff 92       	push	r15
     83c:	0f 93       	push	r16
     83e:	1f 93       	push	r17
     840:	cf 93       	push	r28
     842:	df 93       	push	r29
     844:	c8 2f       	mov	r28, r24
     846:	61 e0       	ldi	r22, 0x01	; 1
     848:	81 e1       	ldi	r24, 0x11	; 17
     84a:	92 e0       	ldi	r25, 0x02	; 2
     84c:	0e 94 04 15 	call	0x2a08	; 0x2a08 <read_line>
     850:	8c 01       	movw	r16, r24
     852:	61 e0       	ldi	r22, 0x01	; 1
     854:	81 e1       	ldi	r24, 0x11	; 17
     856:	92 e0       	ldi	r25, 0x02	; 2
     858:	0e 94 fd 14 	call	0x29fa	; 0x29fa <read_line_sensors_calibrated>
     85c:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     860:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     864:	e5 59       	subi	r30, 0x95	; 149
     866:	ff 4f       	sbci	r31, 0xFF	; 255
     868:	80 81       	ld	r24, Z
     86a:	81 30       	cpi	r24, 0x01	; 1
     86c:	39 f4       	brne	.+14     	; 0x87c <motorControl+0x48>
     86e:	60 e0       	ldi	r22, 0x00	; 0
     870:	70 e0       	ldi	r23, 0x00	; 0
     872:	80 e0       	ldi	r24, 0x00	; 0
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     87a:	fb c0       	rjmp	.+502    	; 0xa72 <__stack+0x173>
     87c:	cc 34       	cpi	r28, 0x4C	; 76
     87e:	39 f5       	brne	.+78     	; 0x8ce <motorControl+0x9a>
     880:	6c e3       	ldi	r22, 0x3C	; 60
     882:	70 e0       	ldi	r23, 0x00	; 0
     884:	84 ec       	ldi	r24, 0xC4	; 196
     886:	9f ef       	ldi	r25, 0xFF	; 255
     888:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     88c:	05 c0       	rjmp	.+10     	; 0x898 <motorControl+0x64>
     88e:	61 e0       	ldi	r22, 0x01	; 1
     890:	81 e1       	ldi	r24, 0x11	; 17
     892:	92 e0       	ldi	r25, 0x02	; 2
     894:	0e 94 fd 14 	call	0x29fa	; 0x29fa <read_line_sensors_calibrated>
     898:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     89c:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     8a0:	80 39       	cpi	r24, 0x90	; 144
     8a2:	91 40       	sbci	r25, 0x01	; 1
     8a4:	a0 f7       	brcc	.-24     	; 0x88e <motorControl+0x5a>
     8a6:	05 c0       	rjmp	.+10     	; 0x8b2 <motorControl+0x7e>
     8a8:	61 e0       	ldi	r22, 0x01	; 1
     8aa:	81 e1       	ldi	r24, 0x11	; 17
     8ac:	92 e0       	ldi	r25, 0x02	; 2
     8ae:	0e 94 fd 14 	call	0x29fa	; 0x29fa <read_line_sensors_calibrated>
     8b2:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     8b6:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     8ba:	81 39       	cpi	r24, 0x91	; 145
     8bc:	91 40       	sbci	r25, 0x01	; 1
     8be:	a0 f3       	brcs	.-24     	; 0x8a8 <motorControl+0x74>
     8c0:	60 e0       	ldi	r22, 0x00	; 0
     8c2:	70 e0       	ldi	r23, 0x00	; 0
     8c4:	80 e0       	ldi	r24, 0x00	; 0
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     8cc:	d2 c0       	rjmp	.+420    	; 0xa72 <__stack+0x173>
     8ce:	c2 35       	cpi	r28, 0x52	; 82
     8d0:	39 f5       	brne	.+78     	; 0x920 <__stack+0x21>
     8d2:	64 ec       	ldi	r22, 0xC4	; 196
     8d4:	7f ef       	ldi	r23, 0xFF	; 255
     8d6:	8c e3       	ldi	r24, 0x3C	; 60
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     8de:	05 c0       	rjmp	.+10     	; 0x8ea <motorControl+0xb6>
     8e0:	61 e0       	ldi	r22, 0x01	; 1
     8e2:	81 e1       	ldi	r24, 0x11	; 17
     8e4:	92 e0       	ldi	r25, 0x02	; 2
     8e6:	0e 94 fd 14 	call	0x29fa	; 0x29fa <read_line_sensors_calibrated>
     8ea:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     8ee:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     8f2:	80 39       	cpi	r24, 0x90	; 144
     8f4:	91 40       	sbci	r25, 0x01	; 1
     8f6:	a0 f7       	brcc	.-24     	; 0x8e0 <motorControl+0xac>
     8f8:	05 c0       	rjmp	.+10     	; 0x904 <__stack+0x5>
     8fa:	61 e0       	ldi	r22, 0x01	; 1
     8fc:	81 e1       	ldi	r24, 0x11	; 17
     8fe:	92 e0       	ldi	r25, 0x02	; 2
     900:	0e 94 fd 14 	call	0x29fa	; 0x29fa <read_line_sensors_calibrated>
     904:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     908:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     90c:	81 39       	cpi	r24, 0x91	; 145
     90e:	91 40       	sbci	r25, 0x01	; 1
     910:	a0 f3       	brcs	.-24     	; 0x8fa <motorControl+0xc6>
     912:	60 e0       	ldi	r22, 0x00	; 0
     914:	70 e0       	ldi	r23, 0x00	; 0
     916:	80 e0       	ldi	r24, 0x00	; 0
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     91e:	a9 c0       	rjmp	.+338    	; 0xa72 <__stack+0x173>
     920:	c3 35       	cpi	r28, 0x53	; 83
     922:	09 f0       	breq	.+2      	; 0x926 <__stack+0x27>
     924:	5c c0       	rjmp	.+184    	; 0x9de <__stack+0xdf>
     926:	c8 01       	movw	r24, r16
     928:	80 5d       	subi	r24, 0xD0	; 208
     92a:	97 40       	sbci	r25, 0x07	; 7
     92c:	20 91 0d 02 	lds	r18, 0x020D	; 0x80020d <last_proportional>
     930:	30 91 0e 02 	lds	r19, 0x020E	; 0x80020e <last_proportional+0x1>
     934:	fc 01       	movw	r30, r24
     936:	e2 1b       	sub	r30, r18
     938:	f3 0b       	sbc	r31, r19
     93a:	20 91 0f 02 	lds	r18, 0x020F	; 0x80020f <integral>
     93e:	30 91 10 02 	lds	r19, 0x0210	; 0x800210 <integral+0x1>
     942:	28 0f       	add	r18, r24
     944:	39 1f       	adc	r19, r25
     946:	30 93 10 02 	sts	0x0210, r19	; 0x800210 <integral+0x1>
     94a:	20 93 0f 02 	sts	0x020F, r18	; 0x80020f <integral>
     94e:	90 93 0e 02 	sts	0x020E, r25	; 0x80020e <last_proportional+0x1>
     952:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <last_proportional>
     956:	64 e6       	ldi	r22, 0x64	; 100
     958:	70 e0       	ldi	r23, 0x00	; 0
     95a:	0e 94 6a 1a 	call	0x34d4	; 0x34d4 <__divmodhi4>
     95e:	eb 01       	movw	r28, r22
     960:	c9 01       	movw	r24, r18
     962:	6c e2       	ldi	r22, 0x2C	; 44
     964:	71 e0       	ldi	r23, 0x01	; 1
     966:	0e 94 6a 1a 	call	0x34d4	; 0x34d4 <__divmodhi4>
     96a:	c6 0f       	add	r28, r22
     96c:	d7 1f       	adc	r29, r23
     96e:	bf 01       	movw	r22, r30
     970:	ff 0f       	add	r31, r31
     972:	88 0b       	sbc	r24, r24
     974:	99 0b       	sbc	r25, r25
     976:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__floatsisf>
     97a:	2d ec       	ldi	r18, 0xCD	; 205
     97c:	3c ec       	ldi	r19, 0xCC	; 204
     97e:	4c ec       	ldi	r20, 0xCC	; 204
     980:	5d e3       	ldi	r21, 0x3D	; 61
     982:	0e 94 12 0c 	call	0x1824	; 0x1824 <__mulsf3>
     986:	6b 01       	movw	r12, r22
     988:	7c 01       	movw	r14, r24
     98a:	be 01       	movw	r22, r28
     98c:	dd 0f       	add	r29, r29
     98e:	88 0b       	sbc	r24, r24
     990:	99 0b       	sbc	r25, r25
     992:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__floatsisf>
     996:	a7 01       	movw	r20, r14
     998:	96 01       	movw	r18, r12
     99a:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__addsf3>
     99e:	0e 94 2a 0b 	call	0x1654	; 0x1654 <__fixsfsi>
     9a2:	cb 01       	movw	r24, r22
     9a4:	67 34       	cpi	r22, 0x47	; 71
     9a6:	71 05       	cpc	r23, r1
     9a8:	14 f0       	brlt	.+4      	; 0x9ae <__stack+0xaf>
     9aa:	86 e4       	ldi	r24, 0x46	; 70
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	8a 3b       	cpi	r24, 0xBA	; 186
     9b0:	2f ef       	ldi	r18, 0xFF	; 255
     9b2:	92 07       	cpc	r25, r18
     9b4:	14 f4       	brge	.+4      	; 0x9ba <__stack+0xbb>
     9b6:	8a eb       	ldi	r24, 0xBA	; 186
     9b8:	9f ef       	ldi	r25, 0xFF	; 255
     9ba:	99 23       	and	r25, r25
     9bc:	3c f4       	brge	.+14     	; 0x9cc <__stack+0xcd>
     9be:	66 e4       	ldi	r22, 0x46	; 70
     9c0:	70 e0       	ldi	r23, 0x00	; 0
     9c2:	8a 5b       	subi	r24, 0xBA	; 186
     9c4:	9f 4f       	sbci	r25, 0xFF	; 255
     9c6:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     9ca:	53 c0       	rjmp	.+166    	; 0xa72 <__stack+0x173>
     9cc:	66 e4       	ldi	r22, 0x46	; 70
     9ce:	70 e0       	ldi	r23, 0x00	; 0
     9d0:	68 1b       	sub	r22, r24
     9d2:	79 0b       	sbc	r23, r25
     9d4:	86 e4       	ldi	r24, 0x46	; 70
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     9dc:	4a c0       	rjmp	.+148    	; 0xa72 <__stack+0x173>
     9de:	c2 34       	cpi	r28, 0x42	; 66
     9e0:	09 f5       	brne	.+66     	; 0xa24 <__stack+0x125>
     9e2:	6e ec       	ldi	r22, 0xCE	; 206
     9e4:	7f ef       	ldi	r23, 0xFF	; 255
     9e6:	8e ec       	ldi	r24, 0xCE	; 206
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     9ee:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     9f2:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     9f6:	80 39       	cpi	r24, 0x90	; 144
     9f8:	91 40       	sbci	r25, 0x01	; 1
     9fa:	30 f0       	brcs	.+12     	; 0xa08 <__stack+0x109>
     9fc:	69 ec       	ldi	r22, 0xC9	; 201
     9fe:	7f ef       	ldi	r23, 0xFF	; 255
     a00:	8e ec       	ldi	r24, 0xCE	; 206
     a02:	9f ef       	ldi	r25, 0xFF	; 255
     a04:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     a08:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     a0c:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     a10:	80 39       	cpi	r24, 0x90	; 144
     a12:	91 40       	sbci	r25, 0x01	; 1
     a14:	70 f1       	brcs	.+92     	; 0xa72 <__stack+0x173>
     a16:	6e ec       	ldi	r22, 0xCE	; 206
     a18:	7f ef       	ldi	r23, 0xFF	; 255
     a1a:	89 ec       	ldi	r24, 0xC9	; 201
     a1c:	9f ef       	ldi	r25, 0xFF	; 255
     a1e:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     a22:	27 c0       	rjmp	.+78     	; 0xa72 <__stack+0x173>
     a24:	c4 35       	cpi	r28, 0x54	; 84
     a26:	a1 f4       	brne	.+40     	; 0xa50 <__stack+0x151>
     a28:	6c e3       	ldi	r22, 0x3C	; 60
     a2a:	70 e0       	ldi	r23, 0x00	; 0
     a2c:	84 ec       	ldi	r24, 0xC4	; 196
     a2e:	9f ef       	ldi	r25, 0xFF	; 255
     a30:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     a34:	05 c0       	rjmp	.+10     	; 0xa40 <__stack+0x141>
     a36:	61 e0       	ldi	r22, 0x01	; 1
     a38:	81 e1       	ldi	r24, 0x11	; 17
     a3a:	92 e0       	ldi	r25, 0x02	; 2
     a3c:	0e 94 fd 14 	call	0x29fa	; 0x29fa <read_line_sensors_calibrated>
     a40:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     a44:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     a48:	81 39       	cpi	r24, 0x91	; 145
     a4a:	91 40       	sbci	r25, 0x01	; 1
     a4c:	a0 f3       	brcs	.-24     	; 0xa36 <__stack+0x137>
     a4e:	11 c0       	rjmp	.+34     	; 0xa72 <__stack+0x173>
     a50:	c0 35       	cpi	r28, 0x50	; 80
     a52:	79 f4       	brne	.+30     	; 0xa72 <__stack+0x173>
     a54:	0a c0       	rjmp	.+20     	; 0xa6a <__stack+0x16b>
     a56:	be 01       	movw	r22, r28
     a58:	ce 01       	movw	r24, r28
     a5a:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     a5e:	85 e0       	ldi	r24, 0x05	; 5
     a60:	90 e0       	ldi	r25, 0x00	; 0
     a62:	0e 94 bb 14 	call	0x2976	; 0x2976 <delay_ms>
     a66:	22 97       	sbiw	r28, 0x02	; 2
     a68:	02 c0       	rjmp	.+4      	; 0xa6e <__stack+0x16f>
     a6a:	c2 e3       	ldi	r28, 0x32	; 50
     a6c:	d0 e0       	ldi	r29, 0x00	; 0
     a6e:	dd 23       	and	r29, r29
     a70:	94 f7       	brge	.-28     	; 0xa56 <__stack+0x157>
     a72:	df 91       	pop	r29
     a74:	cf 91       	pop	r28
     a76:	1f 91       	pop	r17
     a78:	0f 91       	pop	r16
     a7a:	ff 90       	pop	r15
     a7c:	ef 90       	pop	r14
     a7e:	df 90       	pop	r13
     a80:	cf 90       	pop	r12
     a82:	08 95       	ret

00000a84 <lineType>:
     a84:	61 e0       	ldi	r22, 0x01	; 1
     a86:	81 e1       	ldi	r24, 0x11	; 17
     a88:	92 e0       	ldi	r25, 0x02	; 2
     a8a:	0e 94 fd 14 	call	0x29fa	; 0x29fa <read_line_sensors_calibrated>
     a8e:	20 91 11 02 	lds	r18, 0x0211	; 0x800211 <sensors>
     a92:	30 91 12 02 	lds	r19, 0x0212	; 0x800212 <sensors+0x1>
     a96:	20 39       	cpi	r18, 0x90	; 144
     a98:	41 e0       	ldi	r20, 0x01	; 1
     a9a:	34 07       	cpc	r19, r20
     a9c:	38 f1       	brcs	.+78     	; 0xaec <lineType+0x68>
     a9e:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     aa2:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     aa6:	80 39       	cpi	r24, 0x90	; 144
     aa8:	91 40       	sbci	r25, 0x01	; 1
     aaa:	00 f1       	brcs	.+64     	; 0xaec <lineType+0x68>
     aac:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x8>
     ab0:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x9>
     ab4:	81 39       	cpi	r24, 0x91	; 145
     ab6:	91 40       	sbci	r25, 0x01	; 1
     ab8:	c8 f4       	brcc	.+50     	; 0xaec <lineType+0x68>
     aba:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <inch>
     abe:	61 e0       	ldi	r22, 0x01	; 1
     ac0:	81 e1       	ldi	r24, 0x11	; 17
     ac2:	92 e0       	ldi	r25, 0x02	; 2
     ac4:	0e 94 fd 14 	call	0x29fa	; 0x29fa <read_line_sensors_calibrated>
     ac8:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     acc:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     ad0:	80 39       	cpi	r24, 0x90	; 144
     ad2:	91 40       	sbci	r25, 0x01	; 1
     ad4:	08 f0       	brcs	.+2      	; 0xad8 <lineType+0x54>
     ad6:	94 c0       	rjmp	.+296    	; 0xc00 <lineType+0x17c>
     ad8:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     adc:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     ae0:	80 39       	cpi	r24, 0x90	; 144
     ae2:	91 40       	sbci	r25, 0x01	; 1
     ae4:	08 f4       	brcc	.+2      	; 0xae8 <lineType+0x64>
     ae6:	8e c0       	rjmp	.+284    	; 0xc04 <lineType+0x180>
     ae8:	86 e0       	ldi	r24, 0x06	; 6
     aea:	08 95       	ret
     aec:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     af0:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     af4:	80 39       	cpi	r24, 0x90	; 144
     af6:	61 e0       	ldi	r22, 0x01	; 1
     af8:	96 07       	cpc	r25, r22
     afa:	20 f1       	brcs	.+72     	; 0xb44 <lineType+0xc0>
     afc:	40 91 19 02 	lds	r20, 0x0219	; 0x800219 <sensors+0x8>
     b00:	50 91 1a 02 	lds	r21, 0x021A	; 0x80021a <sensors+0x9>
     b04:	40 39       	cpi	r20, 0x90	; 144
     b06:	51 40       	sbci	r21, 0x01	; 1
     b08:	e8 f0       	brcs	.+58     	; 0xb44 <lineType+0xc0>
     b0a:	21 39       	cpi	r18, 0x91	; 145
     b0c:	41 e0       	ldi	r20, 0x01	; 1
     b0e:	34 07       	cpc	r19, r20
     b10:	c8 f4       	brcc	.+50     	; 0xb44 <lineType+0xc0>
     b12:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <inch>
     b16:	61 e0       	ldi	r22, 0x01	; 1
     b18:	81 e1       	ldi	r24, 0x11	; 17
     b1a:	92 e0       	ldi	r25, 0x02	; 2
     b1c:	0e 94 fd 14 	call	0x29fa	; 0x29fa <read_line_sensors_calibrated>
     b20:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     b24:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     b28:	80 39       	cpi	r24, 0x90	; 144
     b2a:	91 40       	sbci	r25, 0x01	; 1
     b2c:	08 f0       	brcs	.+2      	; 0xb30 <lineType+0xac>
     b2e:	6c c0       	rjmp	.+216    	; 0xc08 <lineType+0x184>
     b30:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     b34:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     b38:	80 39       	cpi	r24, 0x90	; 144
     b3a:	91 40       	sbci	r25, 0x01	; 1
     b3c:	08 f4       	brcc	.+2      	; 0xb40 <lineType+0xbc>
     b3e:	66 c0       	rjmp	.+204    	; 0xc0c <lineType+0x188>
     b40:	85 e0       	ldi	r24, 0x05	; 5
     b42:	08 95       	ret
     b44:	40 91 13 02 	lds	r20, 0x0213	; 0x800213 <sensors+0x2>
     b48:	50 91 14 02 	lds	r21, 0x0214	; 0x800214 <sensors+0x3>
     b4c:	40 39       	cpi	r20, 0x90	; 144
     b4e:	61 e0       	ldi	r22, 0x01	; 1
     b50:	56 07       	cpc	r21, r22
     b52:	a8 f0       	brcs	.+42     	; 0xb7e <lineType+0xfa>
     b54:	80 39       	cpi	r24, 0x90	; 144
     b56:	e1 e0       	ldi	r30, 0x01	; 1
     b58:	9e 07       	cpc	r25, r30
     b5a:	88 f0       	brcs	.+34     	; 0xb7e <lineType+0xfa>
     b5c:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <inch>
     b60:	61 e0       	ldi	r22, 0x01	; 1
     b62:	81 e1       	ldi	r24, 0x11	; 17
     b64:	92 e0       	ldi	r25, 0x02	; 2
     b66:	0e 94 fd 14 	call	0x29fa	; 0x29fa <read_line_sensors_calibrated>
     b6a:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     b6e:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     b72:	80 39       	cpi	r24, 0x90	; 144
     b74:	91 40       	sbci	r25, 0x01	; 1
     b76:	08 f4       	brcc	.+2      	; 0xb7a <lineType+0xf6>
     b78:	4b c0       	rjmp	.+150    	; 0xc10 <lineType+0x18c>
     b7a:	88 e0       	ldi	r24, 0x08	; 8
     b7c:	08 95       	ret
     b7e:	60 91 15 02 	lds	r22, 0x0215	; 0x800215 <sensors+0x4>
     b82:	70 91 16 02 	lds	r23, 0x0216	; 0x800216 <sensors+0x5>
     b86:	69 3c       	cpi	r22, 0xC9	; 201
     b88:	71 05       	cpc	r23, r1
     b8a:	30 f4       	brcc	.+12     	; 0xb98 <lineType+0x114>
     b8c:	49 3c       	cpi	r20, 0xC9	; 201
     b8e:	51 05       	cpc	r21, r1
     b90:	18 f4       	brcc	.+6      	; 0xb98 <lineType+0x114>
     b92:	89 3c       	cpi	r24, 0xC9	; 201
     b94:	91 05       	cpc	r25, r1
     b96:	f0 f1       	brcs	.+124    	; 0xc14 <lineType+0x190>
     b98:	81 39       	cpi	r24, 0x91	; 145
     b9a:	61 e0       	ldi	r22, 0x01	; 1
     b9c:	96 07       	cpc	r25, r22
     b9e:	58 f4       	brcc	.+22     	; 0xbb6 <lineType+0x132>
     ba0:	60 91 19 02 	lds	r22, 0x0219	; 0x800219 <sensors+0x8>
     ba4:	70 91 1a 02 	lds	r23, 0x021A	; 0x80021a <sensors+0x9>
     ba8:	60 39       	cpi	r22, 0x90	; 144
     baa:	71 40       	sbci	r23, 0x01	; 1
     bac:	20 f0       	brcs	.+8      	; 0xbb6 <lineType+0x132>
     bae:	41 39       	cpi	r20, 0x91	; 145
     bb0:	61 e0       	ldi	r22, 0x01	; 1
     bb2:	56 07       	cpc	r21, r22
     bb4:	98 f0       	brcs	.+38     	; 0xbdc <lineType+0x158>
     bb6:	20 39       	cpi	r18, 0x90	; 144
     bb8:	31 40       	sbci	r19, 0x01	; 1
     bba:	70 f1       	brcs	.+92     	; 0xc18 <lineType+0x194>
     bbc:	41 39       	cpi	r20, 0x91	; 145
     bbe:	51 40       	sbci	r21, 0x01	; 1
     bc0:	68 f5       	brcc	.+90     	; 0xc1c <lineType+0x198>
     bc2:	81 39       	cpi	r24, 0x91	; 145
     bc4:	91 40       	sbci	r25, 0x01	; 1
     bc6:	50 f0       	brcs	.+20     	; 0xbdc <lineType+0x158>
     bc8:	80 e0       	ldi	r24, 0x00	; 0
     bca:	08 95       	ret
     bcc:	61 e0       	ldi	r22, 0x01	; 1
     bce:	81 e1       	ldi	r24, 0x11	; 17
     bd0:	92 e0       	ldi	r25, 0x02	; 2
     bd2:	0e 94 fd 14 	call	0x29fa	; 0x29fa <read_line_sensors_calibrated>
     bd6:	83 e5       	ldi	r24, 0x53	; 83
     bd8:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
     bdc:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x8>
     be0:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x9>
     be4:	80 39       	cpi	r24, 0x90	; 144
     be6:	91 40       	sbci	r25, 0x01	; 1
     be8:	88 f7       	brcc	.-30     	; 0xbcc <lineType+0x148>
     bea:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <sensors>
     bee:	90 91 12 02 	lds	r25, 0x0212	; 0x800212 <sensors+0x1>
     bf2:	80 39       	cpi	r24, 0x90	; 144
     bf4:	91 40       	sbci	r25, 0x01	; 1
     bf6:	50 f7       	brcc	.-44     	; 0xbcc <lineType+0x148>
     bf8:	0e 94 0b 04 	call	0x816	; 0x816 <wait>
     bfc:	82 e0       	ldi	r24, 0x02	; 2
     bfe:	08 95       	ret
     c00:	86 e0       	ldi	r24, 0x06	; 6
     c02:	08 95       	ret
     c04:	83 e0       	ldi	r24, 0x03	; 3
     c06:	08 95       	ret
     c08:	85 e0       	ldi	r24, 0x05	; 5
     c0a:	08 95       	ret
     c0c:	84 e0       	ldi	r24, 0x04	; 4
     c0e:	08 95       	ret
     c10:	87 e0       	ldi	r24, 0x07	; 7
     c12:	08 95       	ret
     c14:	81 e0       	ldi	r24, 0x01	; 1
     c16:	08 95       	ret
     c18:	80 e0       	ldi	r24, 0x00	; 0
     c1a:	08 95       	ret
     c1c:	80 e0       	ldi	r24, 0x00	; 0
     c1e:	08 95       	ret

00000c20 <manualControl>:
     c20:	cf 93       	push	r28
     c22:	df 93       	push	r29
     c24:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     c28:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     c2c:	85 a9       	ldd	r24, Z+53	; 0x35
     c2e:	81 30       	cpi	r24, 0x01	; 1
     c30:	49 f4       	brne	.+18     	; 0xc44 <manualControl+0x24>
     c32:	60 e0       	ldi	r22, 0x00	; 0
     c34:	70 e0       	ldi	r23, 0x00	; 0
     c36:	80 e0       	ldi	r24, 0x00	; 0
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     c3e:	c1 e0       	ldi	r28, 0x01	; 1
     c40:	d0 e0       	ldi	r29, 0x00	; 0
     c42:	02 c0       	rjmp	.+4      	; 0xc48 <manualControl+0x28>
     c44:	c0 e0       	ldi	r28, 0x00	; 0
     c46:	d0 e0       	ldi	r29, 0x00	; 0
     c48:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     c4c:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     c50:	86 a9       	ldd	r24, Z+54	; 0x36
     c52:	81 30       	cpi	r24, 0x01	; 1
     c54:	41 f4       	brne	.+16     	; 0xc66 <manualControl+0x46>
     c56:	88 27       	eor	r24, r24
     c58:	99 27       	eor	r25, r25
     c5a:	8c 1b       	sub	r24, r28
     c5c:	9d 0b       	sbc	r25, r29
     c5e:	bc 01       	movw	r22, r24
     c60:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     c64:	21 97       	sbiw	r28, 0x01	; 1
     c66:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     c6a:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     c6e:	87 a9       	ldd	r24, Z+55	; 0x37
     c70:	81 30       	cpi	r24, 0x01	; 1
     c72:	49 f4       	brne	.+18     	; 0xc86 <manualControl+0x66>
     c74:	ce 01       	movw	r24, r28
     c76:	dd 23       	and	r29, r29
     c78:	0c f4       	brge	.+2      	; 0xc7c <manualControl+0x5c>
     c7a:	01 96       	adiw	r24, 0x01	; 1
     c7c:	be 01       	movw	r22, r28
     c7e:	95 95       	asr	r25
     c80:	87 95       	ror	r24
     c82:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     c86:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     c8a:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     c8e:	80 ad       	ldd	r24, Z+56	; 0x38
     c90:	81 30       	cpi	r24, 0x01	; 1
     c92:	51 f4       	brne	.+20     	; 0xca8 <manualControl+0x88>
     c94:	be 01       	movw	r22, r28
     c96:	dd 23       	and	r29, r29
     c98:	14 f4       	brge	.+4      	; 0xc9e <manualControl+0x7e>
     c9a:	6f 5f       	subi	r22, 0xFF	; 255
     c9c:	7f 4f       	sbci	r23, 0xFF	; 255
     c9e:	75 95       	asr	r23
     ca0:	67 95       	ror	r22
     ca2:	ce 01       	movw	r24, r28
     ca4:	0e 94 b2 12 	call	0x2564	; 0x2564 <set_motors>
     ca8:	df 91       	pop	r29
     caa:	cf 91       	pop	r28
     cac:	08 95       	ret

00000cae <Spin>:
     cae:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     cb2:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     cb6:	e5 59       	subi	r30, 0x95	; 149
     cb8:	ff 4f       	sbci	r31, 0xFF	; 255
     cba:	80 81       	ld	r24, Z
     cbc:	81 30       	cpi	r24, 0x01	; 1
     cbe:	b9 f3       	breq	.-18     	; 0xcae <Spin>
     cc0:	08 95       	ret

00000cc2 <parcoursSearch>:
char route[20] = "_"; // hardcode SLR
char routeBack[20];
int routea = 1;

int parcoursSearch(Communications *communications) 
{
     cc2:	0f 93       	push	r16
     cc4:	1f 93       	push	r17
     cc6:	cf 93       	push	r28
     cc8:	df 93       	push	r29
     cca:	00 d0       	rcall	.+0      	; 0xccc <parcoursSearch+0xa>
     ccc:	cd b7       	in	r28, 0x3d	; 61
     cce:	de b7       	in	r29, 0x3e	; 62
	char richting;
	while(1) 
	{
		situatie = lineType();
     cd0:	0e 94 42 05 	call	0xa84	; 0xa84 <lineType>
     cd4:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <situatie>
		
		switch (situatie) 
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	89 30       	cpi	r24, 0x09	; 9
     cdc:	91 05       	cpc	r25, r1
     cde:	08 f0       	brcs	.+2      	; 0xce2 <parcoursSearch+0x20>
     ce0:	41 c0       	rjmp	.+130    	; 0xd64 <parcoursSearch+0xa2>
     ce2:	fc 01       	movw	r30, r24
     ce4:	ec 5c       	subi	r30, 0xCC	; 204
     ce6:	ff 4f       	sbci	r31, 0xFF	; 255
     ce8:	0c 94 bf 1a 	jmp	0x357e	; 0x357e <__tablejump2__>
		{
			case Straight:
				motorControl('S');
     cec:	83 e5       	ldi	r24, 0x53	; 83
     cee:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
				break;
     cf2:	38 c0       	rjmp	.+112    	; 0xd64 <parcoursSearch+0xa2>
			
			case X_junction:
			case Left_corner:
			case T_junction:
			case Straight_left_junction:
				motorControl('L');
     cf4:	8c e4       	ldi	r24, 0x4C	; 76
     cf6:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
				richting = 'L';
     cfa:	8c e4       	ldi	r24, 0x4C	; 76
     cfc:	89 83       	std	Y+1, r24	; 0x01
				////print_character('L');
				strncat(route, &richting, 1);
     cfe:	41 e0       	ldi	r20, 0x01	; 1
     d00:	50 e0       	ldi	r21, 0x00	; 0
     d02:	be 01       	movw	r22, r28
     d04:	6f 5f       	subi	r22, 0xFF	; 255
     d06:	7f 4f       	sbci	r23, 0xFF	; 255
     d08:	84 e1       	ldi	r24, 0x14	; 20
     d0a:	91 e0       	ldi	r25, 0x01	; 1
     d0c:	0e 94 3f 1c 	call	0x387e	; 0x387e <strncat>
				break;
     d10:	29 c0       	rjmp	.+82     	; 0xd64 <parcoursSearch+0xa2>
			
			case Right_corner:
				motorControl('R');
     d12:	82 e5       	ldi	r24, 0x52	; 82
     d14:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
				richting = 'R';
     d18:	82 e5       	ldi	r24, 0x52	; 82
     d1a:	89 83       	std	Y+1, r24	; 0x01
				//print_character('R');
				strncat(route, &richting, 1);
     d1c:	41 e0       	ldi	r20, 0x01	; 1
     d1e:	50 e0       	ldi	r21, 0x00	; 0
     d20:	be 01       	movw	r22, r28
     d22:	6f 5f       	subi	r22, 0xFF	; 255
     d24:	7f 4f       	sbci	r23, 0xFF	; 255
     d26:	84 e1       	ldi	r24, 0x14	; 20
     d28:	91 e0       	ldi	r25, 0x01	; 1
     d2a:	0e 94 3f 1c 	call	0x387e	; 0x387e <strncat>
				break;
     d2e:	1a c0       	rjmp	.+52     	; 0xd64 <parcoursSearch+0xa2>
			
			case Straight_right_junction:
				richting = 'S';
     d30:	83 e5       	ldi	r24, 0x53	; 83
     d32:	89 83       	std	Y+1, r24	; 0x01
				//print_character('S');
				strncat(route, &richting, 1);
     d34:	41 e0       	ldi	r20, 0x01	; 1
     d36:	50 e0       	ldi	r21, 0x00	; 0
     d38:	be 01       	movw	r22, r28
     d3a:	6f 5f       	subi	r22, 0xFF	; 255
     d3c:	7f 4f       	sbci	r23, 0xFF	; 255
     d3e:	84 e1       	ldi	r24, 0x14	; 20
     d40:	91 e0       	ldi	r25, 0x01	; 1
     d42:	0e 94 3f 1c 	call	0x387e	; 0x387e <strncat>
				break;
     d46:	0e c0       	rjmp	.+28     	; 0xd64 <parcoursSearch+0xa2>
				
			case Line_end:
				motorControl('T');
     d48:	84 e5       	ldi	r24, 0x54	; 84
     d4a:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
				richting = 'T';
     d4e:	84 e5       	ldi	r24, 0x54	; 84
     d50:	89 83       	std	Y+1, r24	; 0x01
				//print_character('T');
				strncat(route, &richting, 1);
     d52:	41 e0       	ldi	r20, 0x01	; 1
     d54:	50 e0       	ldi	r21, 0x00	; 0
     d56:	be 01       	movw	r22, r28
     d58:	6f 5f       	subi	r22, 0xFF	; 255
     d5a:	7f 4f       	sbci	r23, 0xFF	; 255
     d5c:	84 e1       	ldi	r24, 0x14	; 20
     d5e:	91 e0       	ldi	r25, 0x01	; 1
     d60:	0e 94 3f 1c 	call	0x387e	; 0x387e <strncat>
				motorControl('P');
				//print_character('B');
				return 0;
		}
		
		clear();
     d64:	0e 94 75 11 	call	0x22ea	; 0x22ea <clear>
		lcd_goto_xy(0,0);
     d68:	60 e0       	ldi	r22, 0x00	; 0
     d6a:	80 e0       	ldi	r24, 0x00	; 0
     d6c:	0e 94 fc 11 	call	0x23f8	; 0x23f8 <lcd_goto_xy>
		for (int i=0; i <= strlen(route);i++ ){
     d70:	00 e0       	ldi	r16, 0x00	; 0
     d72:	10 e0       	ldi	r17, 0x00	; 0
     d74:	08 c0       	rjmp	.+16     	; 0xd86 <parcoursSearch+0xc4>
		print_character(route[i]);
     d76:	f8 01       	movw	r30, r16
     d78:	ec 5e       	subi	r30, 0xEC	; 236
     d7a:	fe 4f       	sbci	r31, 0xFE	; 254
     d7c:	80 81       	ld	r24, Z
     d7e:	0e 94 05 11 	call	0x220a	; 0x220a <print_character>
				return 0;
		}
		
		clear();
		lcd_goto_xy(0,0);
		for (int i=0; i <= strlen(route);i++ ){
     d82:	0f 5f       	subi	r16, 0xFF	; 255
     d84:	1f 4f       	sbci	r17, 0xFF	; 255
     d86:	e4 e1       	ldi	r30, 0x14	; 20
     d88:	f1 e0       	ldi	r31, 0x01	; 1
     d8a:	01 90       	ld	r0, Z+
     d8c:	00 20       	and	r0, r0
     d8e:	e9 f7       	brne	.-6      	; 0xd8a <parcoursSearch+0xc8>
     d90:	31 97       	sbiw	r30, 0x01	; 1
     d92:	e4 51       	subi	r30, 0x14	; 20
     d94:	f1 40       	sbci	r31, 0x01	; 1
     d96:	e0 17       	cp	r30, r16
     d98:	f1 07       	cpc	r31, r17
     d9a:	68 f7       	brcc	.-38     	; 0xd76 <parcoursSearch+0xb4>
		print_character(route[i]);
		}
		
		char richting;	
		if (route[strlen(route)-2] == 'T') 
     d9c:	df 01       	movw	r26, r30
     d9e:	ae 5e       	subi	r26, 0xEE	; 238
     da0:	be 4f       	sbci	r27, 0xFE	; 254
     da2:	8c 91       	ld	r24, X
     da4:	84 35       	cpi	r24, 0x54	; 84
     da6:	09 f0       	breq	.+2      	; 0xdaa <parcoursSearch+0xe8>
     da8:	93 cf       	rjmp	.-218    	; 0xcd0 <parcoursSearch+0xe>
		{
			char char_1 = route[strlen(route)-3];
     daa:	df 01       	movw	r26, r30
     dac:	af 5e       	subi	r26, 0xEF	; 239
     dae:	be 4f       	sbci	r27, 0xFE	; 254
     db0:	8c 91       	ld	r24, X
			char char_2 = route[strlen(route)-1];
     db2:	ed 5e       	subi	r30, 0xED	; 237
     db4:	fe 4f       	sbci	r31, 0xFE	; 254
     db6:	90 81       	ld	r25, Z

			if (char_1 == 'L' && char_2 == 'L') 
     db8:	8c 34       	cpi	r24, 0x4C	; 76
     dba:	29 f4       	brne	.+10     	; 0xdc6 <parcoursSearch+0x104>
     dbc:	9c 34       	cpi	r25, 0x4C	; 76
     dbe:	19 f4       	brne	.+6      	; 0xdc6 <parcoursSearch+0x104>
			{
				richting = 'S';
     dc0:	83 e5       	ldi	r24, 0x53	; 83
     dc2:	8a 83       	std	Y+2, r24	; 0x02
     dc4:	1b c0       	rjmp	.+54     	; 0xdfc <parcoursSearch+0x13a>
			}
			else if (char_1 == 'S' && char_2 == 'L')
     dc6:	83 35       	cpi	r24, 0x53	; 83
     dc8:	29 f4       	brne	.+10     	; 0xdd4 <parcoursSearch+0x112>
     dca:	9c 34       	cpi	r25, 0x4C	; 76
     dcc:	19 f4       	brne	.+6      	; 0xdd4 <parcoursSearch+0x112>
			{
				richting = 'R';
     dce:	82 e5       	ldi	r24, 0x52	; 82
     dd0:	8a 83       	std	Y+2, r24	; 0x02
     dd2:	14 c0       	rjmp	.+40     	; 0xdfc <parcoursSearch+0x13a>
			}
			else if (char_1 == 'R' && char_2 == 'L')
     dd4:	82 35       	cpi	r24, 0x52	; 82
     dd6:	29 f4       	brne	.+10     	; 0xde2 <parcoursSearch+0x120>
     dd8:	9c 34       	cpi	r25, 0x4C	; 76
     dda:	19 f4       	brne	.+6      	; 0xde2 <parcoursSearch+0x120>
			{
				richting = 'T';
     ddc:	84 e5       	ldi	r24, 0x54	; 84
     dde:	8a 83       	std	Y+2, r24	; 0x02
     de0:	0d c0       	rjmp	.+26     	; 0xdfc <parcoursSearch+0x13a>
			}
			else if (char_1 == 'L' && char_2 == 'R')
     de2:	8c 34       	cpi	r24, 0x4C	; 76
     de4:	29 f4       	brne	.+10     	; 0xdf0 <parcoursSearch+0x12e>
     de6:	92 35       	cpi	r25, 0x52	; 82
     de8:	19 f4       	brne	.+6      	; 0xdf0 <parcoursSearch+0x12e>
			{
				richting = 'T';
     dea:	84 e5       	ldi	r24, 0x54	; 84
     dec:	8a 83       	std	Y+2, r24	; 0x02
     dee:	06 c0       	rjmp	.+12     	; 0xdfc <parcoursSearch+0x13a>
			}
			else if (char_1 == 'L' && char_2 == 'S')
     df0:	8c 34       	cpi	r24, 0x4C	; 76
     df2:	21 f4       	brne	.+8      	; 0xdfc <parcoursSearch+0x13a>
     df4:	93 35       	cpi	r25, 0x53	; 83
     df6:	11 f4       	brne	.+4      	; 0xdfc <parcoursSearch+0x13a>
			{
				richting = 'R';
     df8:	82 e5       	ldi	r24, 0x52	; 82
     dfa:	8a 83       	std	Y+2, r24	; 0x02
			}
			route[strlen(route)-3] = '\0';
     dfc:	e4 e1       	ldi	r30, 0x14	; 20
     dfe:	f1 e0       	ldi	r31, 0x01	; 1
     e00:	01 90       	ld	r0, Z+
     e02:	00 20       	and	r0, r0
     e04:	e9 f7       	brne	.-6      	; 0xe00 <parcoursSearch+0x13e>
     e06:	34 97       	sbiw	r30, 0x04	; 4
     e08:	10 82       	st	Z, r1
			strncat(route, &richting, 1);
     e0a:	41 e0       	ldi	r20, 0x01	; 1
     e0c:	50 e0       	ldi	r21, 0x00	; 0
     e0e:	be 01       	movw	r22, r28
     e10:	6e 5f       	subi	r22, 0xFE	; 254
     e12:	7f 4f       	sbci	r23, 0xFF	; 255
     e14:	84 e1       	ldi	r24, 0x14	; 20
     e16:	91 e0       	ldi	r25, 0x01	; 1
     e18:	0e 94 3f 1c 	call	0x387e	; 0x387e <strncat>
		}
	}
     e1c:	59 cf       	rjmp	.-334    	; 0xcd0 <parcoursSearch+0xe>
				//print_character('T');
				strncat(route, &richting, 1);
				break;
				
			case Barcode: // end of parcour
				motorControl('P');
     e1e:	80 e5       	ldi	r24, 0x50	; 80
     e20:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
			strncat(route, &richting, 1);
		}
	}
	routea = 0;	
	return 0;
}
     e24:	80 e0       	ldi	r24, 0x00	; 0
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	0f 90       	pop	r0
     e2a:	0f 90       	pop	r0
     e2c:	df 91       	pop	r29
     e2e:	cf 91       	pop	r28
     e30:	1f 91       	pop	r17
     e32:	0f 91       	pop	r16
     e34:	08 95       	ret

00000e36 <parcoursRun>:

int parcoursRun(char way, Communications *communications) 
{
     e36:	ef 92       	push	r14
     e38:	ff 92       	push	r15
     e3a:	1f 93       	push	r17
     e3c:	cf 93       	push	r28
     e3e:	df 93       	push	r29
     e40:	18 2f       	mov	r17, r24
	char richting;
	for (int i = 0; i < strlen(route); i++) 
     e42:	c0 e0       	ldi	r28, 0x00	; 0
     e44:	d0 e0       	ldi	r29, 0x00	; 0
     e46:	2a c0       	rjmp	.+84     	; 0xe9c <parcoursRun+0x66>
	{
		while (lineType() == Straight)
		{
			motorControl('S');
     e48:	83 e5       	ldi	r24, 0x53	; 83
     e4a:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
int parcoursRun(char way, Communications *communications) 
{
	char richting;
	for (int i = 0; i < strlen(route); i++) 
	{
		while (lineType() == Straight)
     e4e:	0e 94 42 05 	call	0xa84	; 0xa84 <lineType>
     e52:	88 23       	and	r24, r24
     e54:	c9 f3       	breq	.-14     	; 0xe48 <parcoursRun+0x12>
		{
			motorControl('S');
		}
		if (way == 'T') {
     e56:	14 35       	cpi	r17, 0x54	; 84
     e58:	39 f4       	brne	.+14     	; 0xe68 <parcoursRun+0x32>
			motorControl(route[i]);
     e5a:	fe 01       	movw	r30, r28
     e5c:	ec 5e       	subi	r30, 0xEC	; 236
     e5e:	fe 4f       	sbci	r31, 0xFE	; 254
     e60:	80 81       	ld	r24, Z
     e62:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
     e66:	19 c0       	rjmp	.+50     	; 0xe9a <parcoursRun+0x64>
		} 
		else if (way == 'B') 
     e68:	12 34       	cpi	r17, 0x42	; 66
     e6a:	b9 f4       	brne	.+46     	; 0xe9a <parcoursRun+0x64>
		{
			richting = route[strlen(route)-i-1];
     e6c:	e4 e1       	ldi	r30, 0x14	; 20
     e6e:	f1 e0       	ldi	r31, 0x01	; 1
     e70:	01 90       	ld	r0, Z+
     e72:	00 20       	and	r0, r0
     e74:	e9 f7       	brne	.-6      	; 0xe70 <parcoursRun+0x3a>
     e76:	31 97       	sbiw	r30, 0x01	; 1
     e78:	e4 51       	subi	r30, 0x14	; 20
     e7a:	f1 40       	sbci	r31, 0x01	; 1
     e7c:	ee 19       	sub	r30, r14
     e7e:	ff 09       	sbc	r31, r15
     e80:	ed 5e       	subi	r30, 0xED	; 237
     e82:	fe 4f       	sbci	r31, 0xFE	; 254
     e84:	80 81       	ld	r24, Z
			switch (richting)
     e86:	8c 34       	cpi	r24, 0x4C	; 76
     e88:	19 f0       	breq	.+6      	; 0xe90 <parcoursRun+0x5a>
     e8a:	82 35       	cpi	r24, 0x52	; 82
     e8c:	19 f0       	breq	.+6      	; 0xe94 <parcoursRun+0x5e>
     e8e:	03 c0       	rjmp	.+6      	; 0xe96 <parcoursRun+0x60>
			{
				case 'R':
					richting = 'L';
					break;
				case 'L':
					richting = 'R';
     e90:	82 e5       	ldi	r24, 0x52	; 82
					break;
     e92:	01 c0       	rjmp	.+2      	; 0xe96 <parcoursRun+0x60>
		{
			richting = route[strlen(route)-i-1];
			switch (richting)
			{
				case 'R':
					richting = 'L';
     e94:	8c e4       	ldi	r24, 0x4C	; 76
					break;
				case 'L':
					richting = 'R';
					break;
			}
			motorControl(richting);
     e96:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
}

int parcoursRun(char way, Communications *communications) 
{
	char richting;
	for (int i = 0; i < strlen(route); i++) 
     e9a:	21 96       	adiw	r28, 0x01	; 1
     e9c:	e4 e1       	ldi	r30, 0x14	; 20
     e9e:	f1 e0       	ldi	r31, 0x01	; 1
     ea0:	01 90       	ld	r0, Z+
     ea2:	00 20       	and	r0, r0
     ea4:	e9 f7       	brne	.-6      	; 0xea0 <parcoursRun+0x6a>
     ea6:	31 97       	sbiw	r30, 0x01	; 1
     ea8:	e4 51       	subi	r30, 0x14	; 20
     eaa:	f1 40       	sbci	r31, 0x01	; 1
     eac:	7e 01       	movw	r14, r28
     eae:	ce 17       	cp	r28, r30
     eb0:	df 07       	cpc	r29, r31
     eb2:	68 f2       	brcs	.-102    	; 0xe4e <parcoursRun+0x18>
			}
			motorControl(richting);
		}
	}
	return 0;
}
     eb4:	80 e0       	ldi	r24, 0x00	; 0
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	df 91       	pop	r29
     eba:	cf 91       	pop	r28
     ebc:	1f 91       	pop	r17
     ebe:	ff 90       	pop	r15
     ec0:	ef 90       	pop	r14
     ec2:	08 95       	ret

00000ec4 <parcours>:

int parcours(char way, Communications *communications) 
{
     ec4:	1f 93       	push	r17
     ec6:	cf 93       	push	r28
     ec8:	df 93       	push	r29
     eca:	00 d0       	rcall	.+0      	; 0xecc <parcours+0x8>
     ecc:	cd b7       	in	r28, 0x3d	; 61
     ece:	de b7       	in	r29, 0x3e	; 62
     ed0:	18 2f       	mov	r17, r24
     ed2:	7a 83       	std	Y+2, r23	; 0x02
     ed4:	69 83       	std	Y+1, r22	; 0x01
	updateDisplay(0, batteryPercentage(), mazeSolver);
     ed6:	0e 94 5d 02 	call	0x4ba	; 0x4ba <batteryPercentage>
     eda:	0e 94 2a 0b 	call	0x1654	; 0x1654 <__fixsfsi>
     ede:	41 e0       	ldi	r20, 0x01	; 1
     ee0:	80 e0       	ldi	r24, 0x00	; 0
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	0e 94 7f 02 	call	0x4fe	; 0x4fe <updateDisplay>
	if (route[0] == '_'){
     ee8:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <route>
     eec:	8f 35       	cpi	r24, 0x5F	; 95
     eee:	61 f4       	brne	.+24     	; 0xf08 <parcours+0x44>
		memset(route,0,sizeof route);
     ef0:	84 e1       	ldi	r24, 0x14	; 20
     ef2:	e4 e1       	ldi	r30, 0x14	; 20
     ef4:	f1 e0       	ldi	r31, 0x01	; 1
     ef6:	df 01       	movw	r26, r30
     ef8:	1d 92       	st	X+, r1
     efa:	8a 95       	dec	r24
     efc:	e9 f7       	brne	.-6      	; 0xef8 <parcours+0x34>
		parcoursSearch(&communications);
     efe:	ce 01       	movw	r24, r28
     f00:	01 96       	adiw	r24, 0x01	; 1
     f02:	0e 94 61 06 	call	0xcc2	; 0xcc2 <parcoursSearch>
     f06:	05 c0       	rjmp	.+10     	; 0xf12 <parcours+0x4e>
	} 
	else 
	{
		parcoursRun(way, communications);
     f08:	69 81       	ldd	r22, Y+1	; 0x01
     f0a:	7a 81       	ldd	r23, Y+2	; 0x02
     f0c:	81 2f       	mov	r24, r17
     f0e:	0e 94 1b 07 	call	0xe36	; 0xe36 <parcoursRun>
	} 
	return 0;
     f12:	80 e0       	ldi	r24, 0x00	; 0
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	0f 90       	pop	r0
     f18:	0f 90       	pop	r0
     f1a:	df 91       	pop	r29
     f1c:	cf 91       	pop	r28
     f1e:	1f 91       	pop	r17
     f20:	08 95       	ret

00000f22 <swap>:
#include <pololu/3pi.h>
#include <avr/pgmspace.h>


void swap(char *a, char *b) {
    int temp = *a;
     f22:	fc 01       	movw	r30, r24
     f24:	20 81       	ld	r18, Z
    *a = *b;
     f26:	fb 01       	movw	r30, r22
     f28:	30 81       	ld	r19, Z
     f2a:	fc 01       	movw	r30, r24
     f2c:	30 83       	st	Z, r19
    *b = temp;
     f2e:	fb 01       	movw	r30, r22
     f30:	20 83       	st	Z, r18
     f32:	08 95       	ret

00000f34 <bubbleSort>:
}

void bubbleSort(char arr[],char orderY[], int n) {
     f34:	8f 92       	push	r8
     f36:	9f 92       	push	r9
     f38:	af 92       	push	r10
     f3a:	bf 92       	push	r11
     f3c:	cf 92       	push	r12
     f3e:	df 92       	push	r13
     f40:	ef 92       	push	r14
     f42:	ff 92       	push	r15
     f44:	0f 93       	push	r16
     f46:	1f 93       	push	r17
     f48:	cf 93       	push	r28
     f4a:	df 93       	push	r29
     f4c:	8c 01       	movw	r16, r24
     f4e:	5b 01       	movw	r10, r22
     f50:	6a 01       	movw	r12, r20
    for (int i = 0; i < n - 1; i++) {
     f52:	e1 2c       	mov	r14, r1
     f54:	f1 2c       	mov	r15, r1
     f56:	28 c0       	rjmp	.+80     	; 0xfa8 <bubbleSort+0x74>
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
     f58:	f8 01       	movw	r30, r16
     f5a:	ec 0f       	add	r30, r28
     f5c:	fd 1f       	adc	r31, r29
     f5e:	90 81       	ld	r25, Z
     f60:	4e 01       	movw	r8, r28
     f62:	8f ef       	ldi	r24, 0xFF	; 255
     f64:	88 1a       	sub	r8, r24
     f66:	98 0a       	sbc	r9, r24
     f68:	d8 01       	movw	r26, r16
     f6a:	a8 0d       	add	r26, r8
     f6c:	b9 1d       	adc	r27, r9
     f6e:	8c 91       	ld	r24, X
     f70:	89 17       	cp	r24, r25
     f72:	60 f4       	brcc	.+24     	; 0xf8c <bubbleSort+0x58>
                swap(&arr[j], &arr[j + 1]);
     f74:	bd 01       	movw	r22, r26
     f76:	cf 01       	movw	r24, r30
     f78:	0e 94 91 07 	call	0xf22	; 0xf22 <swap>
                swap(&orderY[j], &orderY[j + 1]);
     f7c:	b5 01       	movw	r22, r10
     f7e:	68 0d       	add	r22, r8
     f80:	79 1d       	adc	r23, r9
     f82:	c5 01       	movw	r24, r10
     f84:	8c 0f       	add	r24, r28
     f86:	9d 1f       	adc	r25, r29
     f88:	0e 94 91 07 	call	0xf22	; 0xf22 <swap>
    *b = temp;
}

void bubbleSort(char arr[],char orderY[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
     f8c:	21 96       	adiw	r28, 0x01	; 1
     f8e:	02 c0       	rjmp	.+4      	; 0xf94 <bubbleSort+0x60>
     f90:	c0 e0       	ldi	r28, 0x00	; 0
     f92:	d0 e0       	ldi	r29, 0x00	; 0
     f94:	c6 01       	movw	r24, r12
     f96:	8e 19       	sub	r24, r14
     f98:	9f 09       	sbc	r25, r15
     f9a:	01 97       	sbiw	r24, 0x01	; 1
     f9c:	c8 17       	cp	r28, r24
     f9e:	d9 07       	cpc	r29, r25
     fa0:	dc f2       	brlt	.-74     	; 0xf58 <bubbleSort+0x24>
    *a = *b;
    *b = temp;
}

void bubbleSort(char arr[],char orderY[], int n) {
    for (int i = 0; i < n - 1; i++) {
     fa2:	8f ef       	ldi	r24, 0xFF	; 255
     fa4:	e8 1a       	sub	r14, r24
     fa6:	f8 0a       	sbc	r15, r24
     fa8:	c6 01       	movw	r24, r12
     faa:	01 97       	sbiw	r24, 0x01	; 1
     fac:	e8 16       	cp	r14, r24
     fae:	f9 06       	cpc	r15, r25
     fb0:	7c f3       	brlt	.-34     	; 0xf90 <bubbleSort+0x5c>
                swap(&orderY[j], &orderY[j + 1]);
				
            }
		}
    }
}
     fb2:	df 91       	pop	r29
     fb4:	cf 91       	pop	r28
     fb6:	1f 91       	pop	r17
     fb8:	0f 91       	pop	r16
     fba:	ff 90       	pop	r15
     fbc:	ef 90       	pop	r14
     fbe:	df 90       	pop	r13
     fc0:	cf 90       	pop	r12
     fc2:	bf 90       	pop	r11
     fc4:	af 90       	pop	r10
     fc6:	9f 90       	pop	r9
     fc8:	8f 90       	pop	r8
     fca:	08 95       	ret

00000fcc <drive>:



void drive(int junctions, piRobot *robot, Communications *myCom)
{
     fcc:	af 92       	push	r10
     fce:	bf 92       	push	r11
     fd0:	cf 92       	push	r12
     fd2:	df 92       	push	r13
     fd4:	ef 92       	push	r14
     fd6:	ff 92       	push	r15
     fd8:	0f 93       	push	r16
     fda:	1f 93       	push	r17
     fdc:	cf 93       	push	r28
     fde:	df 93       	push	r29
     fe0:	5c 01       	movw	r10, r24
     fe2:	6b 01       	movw	r12, r22
     fe4:	7a 01       	movw	r14, r20
	Junctions situatie;
	motorControl('S');
     fe6:	83 e5       	ldi	r24, 0x53	; 83
     fe8:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
	int driving = 1;
	int count = 0;
     fec:	00 e0       	ldi	r16, 0x00	; 0
     fee:	10 e0       	ldi	r17, 0x00	; 0

void drive(int junctions, piRobot *robot, Communications *myCom)
{
	Junctions situatie;
	motorControl('S');
	int driving = 1;
     ff0:	c1 e0       	ldi	r28, 0x01	; 1
     ff2:	d0 e0       	ldi	r29, 0x00	; 0
	int count = 0;
	while(driving) {
     ff4:	5a c0       	rjmp	.+180    	; 0x10aa <drive+0xde>
		situatie = lineType();
     ff6:	0e 94 42 05 	call	0xa84	; 0xa84 <lineType>
		//clear();
		switch (situatie) {
     ffa:	81 30       	cpi	r24, 0x01	; 1
     ffc:	51 f0       	breq	.+20     	; 0x1012 <drive+0x46>
     ffe:	28 f0       	brcs	.+10     	; 0x100a <drive+0x3e>
    1000:	83 50       	subi	r24, 0x03	; 3
    1002:	86 30       	cpi	r24, 0x06	; 6
    1004:	08 f0       	brcs	.+2      	; 0x1008 <drive+0x3c>
    1006:	51 c0       	rjmp	.+162    	; 0x10aa <drive+0xde>
    1008:	04 c0       	rjmp	.+8      	; 0x1012 <drive+0x46>
			case Barcode: // end of parcour
			//motorControl('N');
			break;
			
			case Straight:
			motorControl('S');
    100a:	83 e5       	ldi	r24, 0x53	; 83
    100c:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
			break;
    1010:	4c c0       	rjmp	.+152    	; 0x10aa <drive+0xde>
			case Left_corner:
			case T_junction:
			case Straight_left_junction:
			case Right_corner:
			case Straight_right_junction:
				count++;
    1012:	0f 5f       	subi	r16, 0xFF	; 255
    1014:	1f 4f       	sbci	r17, 0xFF	; 255
				switch(robot->direction)
    1016:	f6 01       	movw	r30, r12
    1018:	84 81       	ldd	r24, Z+4	; 0x04
    101a:	8e 34       	cpi	r24, 0x4E	; 78
    101c:	f1 f0       	breq	.+60     	; 0x105a <drive+0x8e>
    101e:	18 f4       	brcc	.+6      	; 0x1026 <drive+0x5a>
    1020:	85 34       	cpi	r24, 0x45	; 69
    1022:	81 f0       	breq	.+32     	; 0x1044 <drive+0x78>
    1024:	2f c0       	rjmp	.+94     	; 0x1084 <drive+0xb8>
    1026:	83 35       	cpi	r24, 0x53	; 83
    1028:	19 f1       	breq	.+70     	; 0x1070 <drive+0xa4>
    102a:	87 35       	cpi	r24, 0x57	; 87
    102c:	59 f5       	brne	.+86     	; 0x1084 <drive+0xb8>
				{
					case 'W':
					robot->posX++;
    102e:	f6 01       	movw	r30, r12
    1030:	80 81       	ld	r24, Z
    1032:	91 81       	ldd	r25, Z+1	; 0x01
    1034:	01 96       	adiw	r24, 0x01	; 1
    1036:	91 83       	std	Z+1, r25	; 0x01
    1038:	80 83       	st	Z, r24
					myCom->locationx = robot->posX;
    103a:	f7 01       	movw	r30, r14
    103c:	e2 59       	subi	r30, 0x92	; 146
    103e:	ff 4f       	sbci	r31, 0xFF	; 255
    1040:	80 83       	st	Z, r24
					break;
    1042:	20 c0       	rjmp	.+64     	; 0x1084 <drive+0xb8>
					case 'E':
					robot->posX--;
    1044:	f6 01       	movw	r30, r12
    1046:	80 81       	ld	r24, Z
    1048:	91 81       	ldd	r25, Z+1	; 0x01
    104a:	01 97       	sbiw	r24, 0x01	; 1
    104c:	91 83       	std	Z+1, r25	; 0x01
    104e:	80 83       	st	Z, r24
					myCom->locationx = robot->posX;
    1050:	f7 01       	movw	r30, r14
    1052:	e2 59       	subi	r30, 0x92	; 146
    1054:	ff 4f       	sbci	r31, 0xFF	; 255
    1056:	80 83       	st	Z, r24
					break;
    1058:	15 c0       	rjmp	.+42     	; 0x1084 <drive+0xb8>
					case 'N':
					robot->posY++;
    105a:	f6 01       	movw	r30, r12
    105c:	82 81       	ldd	r24, Z+2	; 0x02
    105e:	93 81       	ldd	r25, Z+3	; 0x03
    1060:	01 96       	adiw	r24, 0x01	; 1
    1062:	93 83       	std	Z+3, r25	; 0x03
    1064:	82 83       	std	Z+2, r24	; 0x02
					myCom->locationy = robot->posY;
    1066:	f7 01       	movw	r30, r14
    1068:	e1 59       	subi	r30, 0x91	; 145
    106a:	ff 4f       	sbci	r31, 0xFF	; 255
    106c:	80 83       	st	Z, r24
					break;
    106e:	0a c0       	rjmp	.+20     	; 0x1084 <drive+0xb8>
					case 'S':
					robot->posY--;
    1070:	f6 01       	movw	r30, r12
    1072:	82 81       	ldd	r24, Z+2	; 0x02
    1074:	93 81       	ldd	r25, Z+3	; 0x03
    1076:	01 97       	sbiw	r24, 0x01	; 1
    1078:	93 83       	std	Z+3, r25	; 0x03
    107a:	82 83       	std	Z+2, r24	; 0x02
					myCom->locationy = robot->posY;
    107c:	f7 01       	movw	r30, r14
    107e:	e1 59       	subi	r30, 0x91	; 145
    1080:	ff 4f       	sbci	r31, 0xFF	; 255
    1082:	80 83       	st	Z, r24
					break;
				}
				motorControl('S');
    1084:	83 e5       	ldi	r24, 0x53	; 83
    1086:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
				if(count == junctions)
    108a:	0a 15       	cp	r16, r10
    108c:	1b 05       	cpc	r17, r11
    108e:	29 f4       	brne	.+10     	; 0x109a <drive+0xce>
				{
					motorControl('P');
    1090:	80 e5       	ldi	r24, 0x50	; 80
    1092:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
					driving = 0;
    1096:	c0 e0       	ldi	r28, 0x00	; 0
    1098:	d0 e0       	ldi	r29, 0x00	; 0
				}
				myCom->Update(myCom);
    109a:	f7 01       	movw	r30, r14
    109c:	e0 59       	subi	r30, 0x90	; 144
    109e:	ff 4f       	sbci	r31, 0xFF	; 255
    10a0:	01 90       	ld	r0, Z+
    10a2:	f0 81       	ld	r31, Z
    10a4:	e0 2d       	mov	r30, r0
    10a6:	c7 01       	movw	r24, r14
    10a8:	09 95       	icall
{
	Junctions situatie;
	motorControl('S');
	int driving = 1;
	int count = 0;
	while(driving) {
    10aa:	20 97       	sbiw	r28, 0x00	; 0
    10ac:	09 f0       	breq	.+2      	; 0x10b0 <drive+0xe4>
    10ae:	a3 cf       	rjmp	.-186    	; 0xff6 <drive+0x2a>
			
			
		}
		
	}
}
    10b0:	df 91       	pop	r29
    10b2:	cf 91       	pop	r28
    10b4:	1f 91       	pop	r17
    10b6:	0f 91       	pop	r16
    10b8:	ff 90       	pop	r15
    10ba:	ef 90       	pop	r14
    10bc:	df 90       	pop	r13
    10be:	cf 90       	pop	r12
    10c0:	bf 90       	pop	r11
    10c2:	af 90       	pop	r10
    10c4:	08 95       	ret

000010c6 <waitForTurn>:

void waitForTurn()
{
    10c6:	cf 93       	push	r28
	Junctions line;
	line = lineType();
    10c8:	0e 94 42 05 	call	0xa84	; 0xa84 <lineType>
    10cc:	c8 2f       	mov	r28, r24
    10ce:	8f e0       	ldi	r24, 0x0F	; 15
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	0e 94 bb 14 	call	0x2976	; 0x2976 <delay_ms>
    10d6:	03 c0       	rjmp	.+6      	; 0x10de <waitForTurn+0x18>
	delay(15);//Short delay so it won't accidentally think it found the line instantly
	while(line != Straight)
	{
		line  = lineType();
    10d8:	0e 94 42 05 	call	0xa84	; 0xa84 <lineType>
    10dc:	c8 2f       	mov	r28, r24
void waitForTurn()
{
	Junctions line;
	line = lineType();
	delay(15);//Short delay so it won't accidentally think it found the line instantly
	while(line != Straight)
    10de:	c1 11       	cpse	r28, r1
    10e0:	fb cf       	rjmp	.-10     	; 0x10d8 <waitForTurn+0x12>
	{
		line  = lineType();
	}
	motorControl('N');
    10e2:	8e e4       	ldi	r24, 0x4E	; 78
    10e4:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
}
    10e8:	cf 91       	pop	r28
    10ea:	08 95       	ret

000010ec <turnRobot>:

void turnRobot(char direction, piRobot *myRobot)
{
    10ec:	ef 92       	push	r14
    10ee:	ff 92       	push	r15
    10f0:	0f 93       	push	r16
    10f2:	1f 93       	push	r17
    10f4:	cf 93       	push	r28
    10f6:	c8 2f       	mov	r28, r24
    10f8:	8b 01       	movw	r16, r22
    int changing = 1;
    10fa:	ee 24       	eor	r14, r14
    10fc:	e3 94       	inc	r14
    10fe:	f1 2c       	mov	r15, r1

    while(changing==1)
    1100:	9a c0       	rjmp	.+308    	; 0x1236 <turnRobot+0x14a>
    {
		
        switch(myRobot->direction)
    1102:	f8 01       	movw	r30, r16
    1104:	84 81       	ldd	r24, Z+4	; 0x04
    1106:	8e 34       	cpi	r24, 0x4E	; 78
    1108:	59 f0       	breq	.+22     	; 0x1120 <turnRobot+0x34>
    110a:	18 f4       	brcc	.+6      	; 0x1112 <turnRobot+0x26>
    110c:	85 34       	cpi	r24, 0x45	; 69
    110e:	51 f1       	breq	.+84     	; 0x1164 <turnRobot+0x78>
    1110:	8c c0       	rjmp	.+280    	; 0x122a <turnRobot+0x13e>
    1112:	83 35       	cpi	r24, 0x53	; 83
    1114:	09 f4       	brne	.+2      	; 0x1118 <turnRobot+0x2c>
    1116:	48 c0       	rjmp	.+144    	; 0x11a8 <turnRobot+0xbc>
    1118:	87 35       	cpi	r24, 0x57	; 87
    111a:	09 f4       	brne	.+2      	; 0x111e <turnRobot+0x32>
    111c:	66 c0       	rjmp	.+204    	; 0x11ea <turnRobot+0xfe>
    111e:	85 c0       	rjmp	.+266    	; 0x122a <turnRobot+0x13e>
        {
            case 'N':
                if(direction == 'E')
    1120:	c5 34       	cpi	r28, 0x45	; 69
    1122:	49 f4       	brne	.+18     	; 0x1136 <turnRobot+0x4a>
                {
                    motorControl('R');
    1124:	82 e5       	ldi	r24, 0x52	; 82
    1126:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
					waitForTurn();
    112a:	0e 94 63 08 	call	0x10c6	; 0x10c6 <waitForTurn>
                    myRobot->direction = 'E';
    112e:	85 e4       	ldi	r24, 0x45	; 69
    1130:	f8 01       	movw	r30, r16
    1132:	84 83       	std	Z+4, r24	; 0x04
    1134:	7a c0       	rjmp	.+244    	; 0x122a <turnRobot+0x13e>
                }
                else if(direction == 'W')
    1136:	c7 35       	cpi	r28, 0x57	; 87
    1138:	49 f4       	brne	.+18     	; 0x114c <turnRobot+0x60>
                {
                    motorControl('L');
    113a:	8c e4       	ldi	r24, 0x4C	; 76
    113c:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
					waitForTurn();
    1140:	0e 94 63 08 	call	0x10c6	; 0x10c6 <waitForTurn>
                    myRobot->direction = 'W';
    1144:	87 e5       	ldi	r24, 0x57	; 87
    1146:	f8 01       	movw	r30, r16
    1148:	84 83       	std	Z+4, r24	; 0x04
    114a:	6f c0       	rjmp	.+222    	; 0x122a <turnRobot+0x13e>
                }
                else if(direction == 'S')
    114c:	c3 35       	cpi	r28, 0x53	; 83
    114e:	09 f0       	breq	.+2      	; 0x1152 <turnRobot+0x66>
    1150:	6c c0       	rjmp	.+216    	; 0x122a <turnRobot+0x13e>
                {
                    motorControl('T');
    1152:	84 e5       	ldi	r24, 0x54	; 84
    1154:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
					waitForTurn();
    1158:	0e 94 63 08 	call	0x10c6	; 0x10c6 <waitForTurn>
                    myRobot->direction = 'S';
    115c:	83 e5       	ldi	r24, 0x53	; 83
    115e:	f8 01       	movw	r30, r16
    1160:	84 83       	std	Z+4, r24	; 0x04
    1162:	63 c0       	rjmp	.+198    	; 0x122a <turnRobot+0x13e>
                }
                break;
            case 'E':
                if(direction == 'S')
    1164:	c3 35       	cpi	r28, 0x53	; 83
    1166:	49 f4       	brne	.+18     	; 0x117a <turnRobot+0x8e>
                {
                    motorControl('R');
    1168:	82 e5       	ldi	r24, 0x52	; 82
    116a:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
					waitForTurn();
    116e:	0e 94 63 08 	call	0x10c6	; 0x10c6 <waitForTurn>
                    myRobot->direction = 'S';
    1172:	83 e5       	ldi	r24, 0x53	; 83
    1174:	f8 01       	movw	r30, r16
    1176:	84 83       	std	Z+4, r24	; 0x04
    1178:	58 c0       	rjmp	.+176    	; 0x122a <turnRobot+0x13e>
                }
                else if(direction == 'W')
    117a:	c7 35       	cpi	r28, 0x57	; 87
    117c:	49 f4       	brne	.+18     	; 0x1190 <turnRobot+0xa4>
                {
                    motorControl('L');
    117e:	8c e4       	ldi	r24, 0x4C	; 76
    1180:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
					waitForTurn();
    1184:	0e 94 63 08 	call	0x10c6	; 0x10c6 <waitForTurn>
                    myRobot->direction = 'W';
    1188:	87 e5       	ldi	r24, 0x57	; 87
    118a:	f8 01       	movw	r30, r16
    118c:	84 83       	std	Z+4, r24	; 0x04
    118e:	4d c0       	rjmp	.+154    	; 0x122a <turnRobot+0x13e>
                }
                else if(direction == 'S')
    1190:	c3 35       	cpi	r28, 0x53	; 83
    1192:	09 f0       	breq	.+2      	; 0x1196 <turnRobot+0xaa>
    1194:	4a c0       	rjmp	.+148    	; 0x122a <turnRobot+0x13e>
                {
                    motorControl('T');
    1196:	84 e5       	ldi	r24, 0x54	; 84
    1198:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
					waitForTurn();
    119c:	0e 94 63 08 	call	0x10c6	; 0x10c6 <waitForTurn>
                    myRobot->direction = 'S';
    11a0:	83 e5       	ldi	r24, 0x53	; 83
    11a2:	f8 01       	movw	r30, r16
    11a4:	84 83       	std	Z+4, r24	; 0x04
    11a6:	41 c0       	rjmp	.+130    	; 0x122a <turnRobot+0x13e>
                }
                break;
            case 'S':
                if(direction == 'W')
    11a8:	c7 35       	cpi	r28, 0x57	; 87
    11aa:	49 f4       	brne	.+18     	; 0x11be <turnRobot+0xd2>
                {
                    motorControl('R');
    11ac:	82 e5       	ldi	r24, 0x52	; 82
    11ae:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
					waitForTurn();
    11b2:	0e 94 63 08 	call	0x10c6	; 0x10c6 <waitForTurn>
                    myRobot->direction = 'W';
    11b6:	87 e5       	ldi	r24, 0x57	; 87
    11b8:	f8 01       	movw	r30, r16
    11ba:	84 83       	std	Z+4, r24	; 0x04
    11bc:	36 c0       	rjmp	.+108    	; 0x122a <turnRobot+0x13e>
                }
                else if(direction == 'E')
    11be:	c5 34       	cpi	r28, 0x45	; 69
    11c0:	49 f4       	brne	.+18     	; 0x11d4 <turnRobot+0xe8>
                {
                    motorControl('L');
    11c2:	8c e4       	ldi	r24, 0x4C	; 76
    11c4:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
					waitForTurn();
    11c8:	0e 94 63 08 	call	0x10c6	; 0x10c6 <waitForTurn>
                    myRobot->direction = 'E';
    11cc:	85 e4       	ldi	r24, 0x45	; 69
    11ce:	f8 01       	movw	r30, r16
    11d0:	84 83       	std	Z+4, r24	; 0x04
    11d2:	2b c0       	rjmp	.+86     	; 0x122a <turnRobot+0x13e>
                }
                else if(direction == 'N')
    11d4:	ce 34       	cpi	r28, 0x4E	; 78
    11d6:	49 f5       	brne	.+82     	; 0x122a <turnRobot+0x13e>
                {
                    motorControl('T');
    11d8:	84 e5       	ldi	r24, 0x54	; 84
    11da:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
					waitForTurn();
    11de:	0e 94 63 08 	call	0x10c6	; 0x10c6 <waitForTurn>
                    myRobot->direction = 'N';
    11e2:	8e e4       	ldi	r24, 0x4E	; 78
    11e4:	f8 01       	movw	r30, r16
    11e6:	84 83       	std	Z+4, r24	; 0x04
    11e8:	20 c0       	rjmp	.+64     	; 0x122a <turnRobot+0x13e>
                }
                break;
            case 'W':
                if(direction == 'N')
    11ea:	ce 34       	cpi	r28, 0x4E	; 78
    11ec:	49 f4       	brne	.+18     	; 0x1200 <turnRobot+0x114>
                {
					
                    motorControl('R');
    11ee:	82 e5       	ldi	r24, 0x52	; 82
    11f0:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
					waitForTurn();
    11f4:	0e 94 63 08 	call	0x10c6	; 0x10c6 <waitForTurn>
                    myRobot->direction = 'N';
    11f8:	8e e4       	ldi	r24, 0x4E	; 78
    11fa:	f8 01       	movw	r30, r16
    11fc:	84 83       	std	Z+4, r24	; 0x04
    11fe:	15 c0       	rjmp	.+42     	; 0x122a <turnRobot+0x13e>
                }
                else if(direction == 'S')
    1200:	c3 35       	cpi	r28, 0x53	; 83
    1202:	49 f4       	brne	.+18     	; 0x1216 <turnRobot+0x12a>
                {
                    motorControl('L');
    1204:	8c e4       	ldi	r24, 0x4C	; 76
    1206:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
					waitForTurn();
    120a:	0e 94 63 08 	call	0x10c6	; 0x10c6 <waitForTurn>
                    myRobot->direction = 'S';
    120e:	83 e5       	ldi	r24, 0x53	; 83
    1210:	f8 01       	movw	r30, r16
    1212:	84 83       	std	Z+4, r24	; 0x04
    1214:	0a c0       	rjmp	.+20     	; 0x122a <turnRobot+0x13e>
                }
                else if(direction == 'E')
    1216:	c5 34       	cpi	r28, 0x45	; 69
    1218:	41 f4       	brne	.+16     	; 0x122a <turnRobot+0x13e>
                {
                    motorControl('T');
    121a:	84 e5       	ldi	r24, 0x54	; 84
    121c:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
					waitForTurn();
    1220:	0e 94 63 08 	call	0x10c6	; 0x10c6 <waitForTurn>
                    myRobot->direction = 'E';
    1224:	85 e4       	ldi	r24, 0x45	; 69
    1226:	f8 01       	movw	r30, r16
    1228:	84 83       	std	Z+4, r24	; 0x04
                }
                break;
		}
		
				if(myRobot->direction == direction)
    122a:	f8 01       	movw	r30, r16
    122c:	84 81       	ldd	r24, Z+4	; 0x04
    122e:	c8 13       	cpse	r28, r24
    1230:	02 c0       	rjmp	.+4      	; 0x1236 <turnRobot+0x14a>
				{
					changing = 0;
    1232:	e1 2c       	mov	r14, r1
    1234:	f1 2c       	mov	r15, r1

void turnRobot(char direction, piRobot *myRobot)
{
    int changing = 1;

    while(changing==1)
    1236:	f1 e0       	ldi	r31, 0x01	; 1
    1238:	ef 16       	cp	r14, r31
    123a:	f1 04       	cpc	r15, r1
    123c:	09 f4       	brne	.+2      	; 0x1240 <turnRobot+0x154>
    123e:	61 cf       	rjmp	.-318    	; 0x1102 <turnRobot+0x16>
				{
					changing = 0;
				}
		
    }
}
    1240:	cf 91       	pop	r28
    1242:	1f 91       	pop	r17
    1244:	0f 91       	pop	r16
    1246:	ff 90       	pop	r15
    1248:	ef 90       	pop	r14
    124a:	08 95       	ret

0000124c <moveX>:


void moveX(int orderPos, piRobot *robot, Communications *myCom)
{
    124c:	ef 92       	push	r14
    124e:	ff 92       	push	r15
    1250:	0f 93       	push	r16
    1252:	1f 93       	push	r17
    1254:	cf 93       	push	r28
    1256:	df 93       	push	r29
	
    int junctions;
	
	
    if(robot->posX != orderPos)
    1258:	fb 01       	movw	r30, r22
    125a:	20 81       	ld	r18, Z
    125c:	31 81       	ldd	r19, Z+1	; 0x01
    125e:	28 17       	cp	r18, r24
    1260:	39 07       	cpc	r19, r25
    1262:	d9 f0       	breq	.+54     	; 0x129a <moveX+0x4e>
    1264:	7a 01       	movw	r14, r20
    1266:	eb 01       	movw	r28, r22
    1268:	8c 01       	movw	r16, r24
    {
		
        if(robot->posX < orderPos)
    126a:	28 17       	cp	r18, r24
    126c:	39 07       	cpc	r19, r25
    126e:	54 f4       	brge	.+20     	; 0x1284 <moveX+0x38>
        {
            turnRobot('W', robot);
    1270:	87 e5       	ldi	r24, 0x57	; 87
    1272:	0e 94 76 08 	call	0x10ec	; 0x10ec <turnRobot>
            junctions = orderPos-robot->posX;
    1276:	88 81       	ld	r24, Y
    1278:	99 81       	ldd	r25, Y+1	; 0x01
    127a:	98 01       	movw	r18, r16
    127c:	28 1b       	sub	r18, r24
    127e:	39 0b       	sbc	r19, r25
    1280:	c9 01       	movw	r24, r18
    1282:	07 c0       	rjmp	.+14     	; 0x1292 <moveX+0x46>
        }
        else{
            turnRobot('E', robot);
    1284:	85 e4       	ldi	r24, 0x45	; 69
    1286:	0e 94 76 08 	call	0x10ec	; 0x10ec <turnRobot>
            junctions = robot->posX - orderPos;
    128a:	88 81       	ld	r24, Y
    128c:	99 81       	ldd	r25, Y+1	; 0x01
    128e:	80 1b       	sub	r24, r16
    1290:	91 0b       	sbc	r25, r17
        }
		drive(junctions, robot, myCom);
    1292:	a7 01       	movw	r20, r14
    1294:	be 01       	movw	r22, r28
    1296:	0e 94 e6 07 	call	0xfcc	; 0xfcc <drive>
        
		
        

    }
}
    129a:	df 91       	pop	r29
    129c:	cf 91       	pop	r28
    129e:	1f 91       	pop	r17
    12a0:	0f 91       	pop	r16
    12a2:	ff 90       	pop	r15
    12a4:	ef 90       	pop	r14
    12a6:	08 95       	ret

000012a8 <moveY>:

void moveY(int orderPos, piRobot *robot, Communications *myCom)
{
    12a8:	ef 92       	push	r14
    12aa:	ff 92       	push	r15
    12ac:	0f 93       	push	r16
    12ae:	1f 93       	push	r17
    12b0:	cf 93       	push	r28
    12b2:	df 93       	push	r29

    int junctions;
    if(robot->posY != orderPos)
    12b4:	fb 01       	movw	r30, r22
    12b6:	22 81       	ldd	r18, Z+2	; 0x02
    12b8:	33 81       	ldd	r19, Z+3	; 0x03
    12ba:	28 17       	cp	r18, r24
    12bc:	39 07       	cpc	r19, r25
    12be:	d9 f0       	breq	.+54     	; 0x12f6 <moveY+0x4e>
    12c0:	7a 01       	movw	r14, r20
    12c2:	eb 01       	movw	r28, r22
    12c4:	8c 01       	movw	r16, r24
    {
        if(robot->posY < orderPos)
    12c6:	28 17       	cp	r18, r24
    12c8:	39 07       	cpc	r19, r25
    12ca:	54 f4       	brge	.+20     	; 0x12e0 <moveY+0x38>
        {
            turnRobot('N', robot);
    12cc:	8e e4       	ldi	r24, 0x4E	; 78
    12ce:	0e 94 76 08 	call	0x10ec	; 0x10ec <turnRobot>
            junctions = orderPos-robot->posY;
    12d2:	8a 81       	ldd	r24, Y+2	; 0x02
    12d4:	9b 81       	ldd	r25, Y+3	; 0x03
    12d6:	98 01       	movw	r18, r16
    12d8:	28 1b       	sub	r18, r24
    12da:	39 0b       	sbc	r19, r25
    12dc:	c9 01       	movw	r24, r18
    12de:	07 c0       	rjmp	.+14     	; 0x12ee <moveY+0x46>
        }
        else{
            turnRobot('S', robot);
    12e0:	83 e5       	ldi	r24, 0x53	; 83
    12e2:	0e 94 76 08 	call	0x10ec	; 0x10ec <turnRobot>
            junctions = robot->posY - orderPos;
    12e6:	8a 81       	ldd	r24, Y+2	; 0x02
    12e8:	9b 81       	ldd	r25, Y+3	; 0x03
    12ea:	80 1b       	sub	r24, r16
    12ec:	91 0b       	sbc	r25, r17
        }

            drive(junctions, robot, myCom);
    12ee:	a7 01       	movw	r20, r14
    12f0:	be 01       	movw	r22, r28
    12f2:	0e 94 e6 07 	call	0xfcc	; 0xfcc <drive>
        

    }
}
    12f6:	df 91       	pop	r29
    12f8:	cf 91       	pop	r28
    12fa:	1f 91       	pop	r17
    12fc:	0f 91       	pop	r16
    12fe:	ff 90       	pop	r15
    1300:	ef 90       	pop	r14
    1302:	08 95       	ret

00001304 <warehouse>:


void warehouse(objective objective, Communications *myCom)
{
    1304:	4f 92       	push	r4
    1306:	5f 92       	push	r5
    1308:	6f 92       	push	r6
    130a:	7f 92       	push	r7
    130c:	8f 92       	push	r8
    130e:	9f 92       	push	r9
    1310:	af 92       	push	r10
    1312:	bf 92       	push	r11
    1314:	cf 92       	push	r12
    1316:	df 92       	push	r13
    1318:	ef 92       	push	r14
    131a:	ff 92       	push	r15
    131c:	0f 93       	push	r16
    131e:	1f 93       	push	r17
    1320:	cf 93       	push	r28
    1322:	df 93       	push	r29
    1324:	cd b7       	in	r28, 0x3d	; 61
    1326:	de b7       	in	r29, 0x3e	; 62
    1328:	e7 97       	sbiw	r28, 0x37	; 55
    132a:	0f b6       	in	r0, 0x3f	; 63
    132c:	f8 94       	cli
    132e:	de bf       	out	0x3e, r29	; 62
    1330:	0f be       	out	0x3f, r0	; 63
    1332:	cd bf       	out	0x3d, r28	; 61
    1334:	f8 2e       	mov	r15, r24
    1336:	8b 01       	movw	r16, r22
 piRobot robot;
 robot.direction = 'W';
    1338:	87 e5       	ldi	r24, 0x57	; 87
    133a:	8d 83       	std	Y+5, r24	; 0x05
 robot.posX = -1;
    133c:	8f ef       	ldi	r24, 0xFF	; 255
    133e:	9f ef       	ldi	r25, 0xFF	; 255
    1340:	9a 83       	std	Y+2, r25	; 0x02
    1342:	89 83       	std	Y+1, r24	; 0x01
 robot.posY = 0;
    1344:	1c 82       	std	Y+4, r1	; 0x04
    1346:	1b 82       	std	Y+3, r1	; 0x03
 
 char orderX[25];
 char orderY[25];

int arraySize = sizeof(myCom->Orderarx) / sizeof(myCom->Orderary);
for(int i=0;i<arraySize;i++)//Getting order positions from the wixel
    1348:	80 e0       	ldi	r24, 0x00	; 0
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	18 c0       	rjmp	.+48     	; 0x137e <warehouse+0x7a>
{
	orderX[i] = myCom->Orderarx[i];
    134e:	d8 01       	movw	r26, r16
    1350:	a8 0f       	add	r26, r24
    1352:	b9 1f       	adc	r27, r25
    1354:	fd 01       	movw	r30, r26
    1356:	ee 5a       	subi	r30, 0xAE	; 174
    1358:	ff 4f       	sbci	r31, 0xFF	; 255
    135a:	20 81       	ld	r18, Z
    135c:	e6 e0       	ldi	r30, 0x06	; 6
    135e:	f0 e0       	ldi	r31, 0x00	; 0
    1360:	ec 0f       	add	r30, r28
    1362:	fd 1f       	adc	r31, r29
    1364:	e8 0f       	add	r30, r24
    1366:	f9 1f       	adc	r31, r25
    1368:	20 83       	st	Z, r18
	orderY[i] = myCom->Orderary[i];
    136a:	d9 96       	adiw	r26, 0x39	; 57
    136c:	2c 91       	ld	r18, X
    136e:	ef e1       	ldi	r30, 0x1F	; 31
    1370:	f0 e0       	ldi	r31, 0x00	; 0
    1372:	ec 0f       	add	r30, r28
    1374:	fd 1f       	adc	r31, r29
    1376:	e8 0f       	add	r30, r24
    1378:	f9 1f       	adc	r31, r25
    137a:	20 83       	st	Z, r18
 
 char orderX[25];
 char orderY[25];

int arraySize = sizeof(myCom->Orderarx) / sizeof(myCom->Orderary);
for(int i=0;i<arraySize;i++)//Getting order positions from the wixel
    137c:	01 96       	adiw	r24, 0x01	; 1
    137e:	18 16       	cp	r1, r24
    1380:	19 06       	cpc	r1, r25
    1382:	2c f7       	brge	.-54     	; 0x134e <warehouse+0x4a>
{
	orderX[i] = myCom->Orderarx[i];
	orderY[i] = myCom->Orderary[i];
}
    bubbleSort(orderX, orderY, arraySize);//Sorts the order positions so that the lowest X position comes first
    1384:	41 e0       	ldi	r20, 0x01	; 1
    1386:	50 e0       	ldi	r21, 0x00	; 0
    1388:	be 01       	movw	r22, r28
    138a:	61 5e       	subi	r22, 0xE1	; 225
    138c:	7f 4f       	sbci	r23, 0xFF	; 255
    138e:	ce 01       	movw	r24, r28
    1390:	06 96       	adiw	r24, 0x06	; 6
    1392:	0e 94 9a 07 	call	0xf34	; 0xf34 <bubbleSort>
	
	if(objective == orderPicking)//If statement for when the robot just needs to quickly pass the warehouse to get to the charging station
    1396:	ff 20       	and	r15, r15
    1398:	09 f4       	brne	.+2      	; 0x139c <warehouse+0x98>
    139a:	78 c0       	rjmp	.+240    	; 0x148c <warehouse+0x188>
    139c:	8e c0       	rjmp	.+284    	; 0x14ba <warehouse+0x1b6>
	{
		for(int locations = 0; locations<arraySize;locations++)
		{
			float completed = locations;
    139e:	b7 01       	movw	r22, r14
    13a0:	0f 2c       	mov	r0, r15
    13a2:	00 0c       	add	r0, r0
    13a4:	88 0b       	sbc	r24, r24
    13a6:	99 0b       	sbc	r25, r25
    13a8:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <__floatsisf>
    13ac:	4b 01       	movw	r8, r22
    13ae:	5c 01       	movw	r10, r24
			float total = arraySize;
		
		
			moveX(orderX[locations], &robot, myCom);
    13b0:	0f 2e       	mov	r0, r31
    13b2:	f6 e0       	ldi	r31, 0x06	; 6
    13b4:	cf 2e       	mov	r12, r31
    13b6:	d1 2c       	mov	r13, r1
    13b8:	f0 2d       	mov	r31, r0
    13ba:	cc 0e       	add	r12, r28
    13bc:	dd 1e       	adc	r13, r29
    13be:	ce 0c       	add	r12, r14
    13c0:	df 1c       	adc	r13, r15
    13c2:	f6 01       	movw	r30, r12
    13c4:	80 81       	ld	r24, Z
    13c6:	a8 01       	movw	r20, r16
    13c8:	be 01       	movw	r22, r28
    13ca:	6f 5f       	subi	r22, 0xFF	; 255
    13cc:	7f 4f       	sbci	r23, 0xFF	; 255
    13ce:	90 e0       	ldi	r25, 0x00	; 0
    13d0:	0e 94 26 09 	call	0x124c	; 0x124c <moveX>
			robot.posX = orderX[locations];
    13d4:	f6 01       	movw	r30, r12
    13d6:	80 81       	ld	r24, Z
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	9a 83       	std	Y+2, r25	; 0x02
    13dc:	89 83       	std	Y+1, r24	; 0x01
			moveY(orderY[locations], &robot, myCom);
    13de:	0f 2e       	mov	r0, r31
    13e0:	ff e1       	ldi	r31, 0x1F	; 31
    13e2:	cf 2e       	mov	r12, r31
    13e4:	d1 2c       	mov	r13, r1
    13e6:	f0 2d       	mov	r31, r0
    13e8:	cc 0e       	add	r12, r28
    13ea:	dd 1e       	adc	r13, r29
    13ec:	ce 0c       	add	r12, r14
    13ee:	df 1c       	adc	r13, r15
    13f0:	f6 01       	movw	r30, r12
    13f2:	80 81       	ld	r24, Z
    13f4:	a8 01       	movw	r20, r16
    13f6:	be 01       	movw	r22, r28
    13f8:	6f 5f       	subi	r22, 0xFF	; 255
    13fa:	7f 4f       	sbci	r23, 0xFF	; 255
    13fc:	90 e0       	ldi	r25, 0x00	; 0
    13fe:	0e 94 54 09 	call	0x12a8	; 0x12a8 <moveY>
			robot.posY = orderY[locations];
    1402:	f6 01       	movw	r30, r12
    1404:	80 81       	ld	r24, Z
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	9c 83       	std	Y+4, r25	; 0x04
    140a:	8b 83       	std	Y+3, r24	; 0x03
    140c:	88 ee       	ldi	r24, 0xE8	; 232
    140e:	93 e0       	ldi	r25, 0x03	; 3
    1410:	0e 94 bb 14 	call	0x2976	; 0x2976 <delay_ms>
			delay(1000);//wait 1 second
			
			myCom->batterylvl = batteryPercentage();
    1414:	0e 94 5d 02 	call	0x4ba	; 0x4ba <batteryPercentage>
    1418:	68 01       	movw	r12, r16
    141a:	fc e6       	ldi	r31, 0x6C	; 108
    141c:	cf 0e       	add	r12, r31
    141e:	d1 1c       	adc	r13, r1
    1420:	0e 94 31 0b 	call	0x1662	; 0x1662 <__fixunssfsi>
    1424:	f6 01       	movw	r30, r12
    1426:	60 83       	st	Z, r22
			myCom->magprocess = (((completed+1)/total)*100);
    1428:	20 e0       	ldi	r18, 0x00	; 0
    142a:	30 e0       	ldi	r19, 0x00	; 0
    142c:	40 e8       	ldi	r20, 0x80	; 128
    142e:	5f e3       	ldi	r21, 0x3F	; 63
    1430:	c5 01       	movw	r24, r10
    1432:	b4 01       	movw	r22, r8
    1434:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__addsf3>
    1438:	20 e0       	ldi	r18, 0x00	; 0
    143a:	30 e0       	ldi	r19, 0x00	; 0
    143c:	48 ec       	ldi	r20, 0xC8	; 200
    143e:	52 e4       	ldi	r21, 0x42	; 66
    1440:	0e 94 12 0c 	call	0x1824	; 0x1824 <__mulsf3>
    1444:	4b 01       	movw	r8, r22
    1446:	5c 01       	movw	r10, r24
    1448:	68 01       	movw	r12, r16
    144a:	fd e6       	ldi	r31, 0x6D	; 109
    144c:	cf 0e       	add	r12, r31
    144e:	d1 1c       	adc	r13, r1
    1450:	0e 94 31 0b 	call	0x1662	; 0x1662 <__fixunssfsi>
    1454:	f6 01       	movw	r30, r12
    1456:	60 83       	st	Z, r22
			myCom->Update(myCom);
    1458:	33 96       	adiw	r30, 0x03	; 3
    145a:	01 90       	ld	r0, Z+
    145c:	f0 81       	ld	r31, Z
    145e:	e0 2d       	mov	r30, r0
    1460:	c8 01       	movw	r24, r16
    1462:	09 95       	icall
			updateDisplay((((completed+1)/total)*100),batteryPercentage(),logicsBot);
    1464:	0e 94 5d 02 	call	0x4ba	; 0x4ba <batteryPercentage>
    1468:	0e 94 2a 0b 	call	0x1654	; 0x1654 <__fixsfsi>
    146c:	2b 01       	movw	r4, r22
    146e:	3c 01       	movw	r6, r24
    1470:	c5 01       	movw	r24, r10
    1472:	b4 01       	movw	r22, r8
    1474:	0e 94 2a 0b 	call	0x1654	; 0x1654 <__fixsfsi>
    1478:	dc 01       	movw	r26, r24
    147a:	cb 01       	movw	r24, r22
    147c:	42 e0       	ldi	r20, 0x02	; 2
    147e:	b2 01       	movw	r22, r4
    1480:	0e 94 7f 02 	call	0x4fe	; 0x4fe <updateDisplay>
}
    bubbleSort(orderX, orderY, arraySize);//Sorts the order positions so that the lowest X position comes first
	
	if(objective == orderPicking)//If statement for when the robot just needs to quickly pass the warehouse to get to the charging station
	{
		for(int locations = 0; locations<arraySize;locations++)
    1484:	ff ef       	ldi	r31, 0xFF	; 255
    1486:	ef 1a       	sub	r14, r31
    1488:	ff 0a       	sbc	r15, r31
    148a:	02 c0       	rjmp	.+4      	; 0x1490 <warehouse+0x18c>
    148c:	e1 2c       	mov	r14, r1
    148e:	f1 2c       	mov	r15, r1
    1490:	1e 14       	cp	r1, r14
    1492:	1f 04       	cpc	r1, r15
    1494:	0c f0       	brlt	.+2      	; 0x1498 <warehouse+0x194>
    1496:	83 cf       	rjmp	.-250    	; 0x139e <warehouse+0x9a>
			myCom->batterylvl = batteryPercentage();
			myCom->magprocess = (((completed+1)/total)*100);
			myCom->Update(myCom);
			updateDisplay((((completed+1)/total)*100),batteryPercentage(),logicsBot);
		}
			moveY(0, &robot, myCom);
    1498:	a8 01       	movw	r20, r16
    149a:	be 01       	movw	r22, r28
    149c:	6f 5f       	subi	r22, 0xFF	; 255
    149e:	7f 4f       	sbci	r23, 0xFF	; 255
    14a0:	80 e0       	ldi	r24, 0x00	; 0
    14a2:	90 e0       	ldi	r25, 0x00	; 0
    14a4:	0e 94 54 09 	call	0x12a8	; 0x12a8 <moveY>
			moveX(0, &robot, myCom);
    14a8:	a8 01       	movw	r20, r16
    14aa:	be 01       	movw	r22, r28
    14ac:	6f 5f       	subi	r22, 0xFF	; 255
    14ae:	7f 4f       	sbci	r23, 0xFF	; 255
    14b0:	80 e0       	ldi	r24, 0x00	; 0
    14b2:	90 e0       	ldi	r25, 0x00	; 0
    14b4:	0e 94 26 09 	call	0x124c	; 0x124c <moveX>
    14b8:	44 c0       	rjmp	.+136    	; 0x1542 <warehouse+0x23e>
	}
	else
	{
		static int charged = 0;
		if(charged == 0)
    14ba:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <charged.2339>
    14be:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <charged.2339+0x1>
    14c2:	89 2b       	or	r24, r25
    14c4:	29 f5       	brne	.+74     	; 0x1510 <warehouse+0x20c>
		{
			drive(1, &robot, myCom);
    14c6:	a8 01       	movw	r20, r16
    14c8:	be 01       	movw	r22, r28
    14ca:	6f 5f       	subi	r22, 0xFF	; 255
    14cc:	7f 4f       	sbci	r23, 0xFF	; 255
    14ce:	81 e0       	ldi	r24, 0x01	; 1
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	0e 94 e6 07 	call	0xfcc	; 0xfcc <drive>
			motorControl('R');
    14d6:	82 e5       	ldi	r24, 0x52	; 82
    14d8:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
			drive(3, &robot, myCom);
    14dc:	a8 01       	movw	r20, r16
    14de:	be 01       	movw	r22, r28
    14e0:	6f 5f       	subi	r22, 0xFF	; 255
    14e2:	7f 4f       	sbci	r23, 0xFF	; 255
    14e4:	83 e0       	ldi	r24, 0x03	; 3
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	0e 94 e6 07 	call	0xfcc	; 0xfcc <drive>
			motorControl('R');
    14ec:	82 e5       	ldi	r24, 0x52	; 82
    14ee:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
			drive(1, &robot, myCom);
    14f2:	a8 01       	movw	r20, r16
    14f4:	be 01       	movw	r22, r28
    14f6:	6f 5f       	subi	r22, 0xFF	; 255
    14f8:	7f 4f       	sbci	r23, 0xFF	; 255
    14fa:	81 e0       	ldi	r24, 0x01	; 1
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	0e 94 e6 07 	call	0xfcc	; 0xfcc <drive>
			charged = 1;
    1502:	81 e0       	ldi	r24, 0x01	; 1
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <charged.2339+0x1>
    150a:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <charged.2339>
    150e:	19 c0       	rjmp	.+50     	; 0x1542 <warehouse+0x23e>
		}
		else
		{
			motorControl('T');
    1510:	84 e5       	ldi	r24, 0x54	; 84
    1512:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
			drive(1, &robot, myCom);
    1516:	a8 01       	movw	r20, r16
    1518:	be 01       	movw	r22, r28
    151a:	6f 5f       	subi	r22, 0xFF	; 255
    151c:	7f 4f       	sbci	r23, 0xFF	; 255
    151e:	81 e0       	ldi	r24, 0x01	; 1
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	0e 94 e6 07 	call	0xfcc	; 0xfcc <drive>
			motorControl('L');
    1526:	8c e4       	ldi	r24, 0x4C	; 76
    1528:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
			drive(3, &robot, myCom);
    152c:	a8 01       	movw	r20, r16
    152e:	be 01       	movw	r22, r28
    1530:	6f 5f       	subi	r22, 0xFF	; 255
    1532:	7f 4f       	sbci	r23, 0xFF	; 255
    1534:	83 e0       	ldi	r24, 0x03	; 3
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	0e 94 e6 07 	call	0xfcc	; 0xfcc <drive>
			motorControl('L');
    153c:	8c e4       	ldi	r24, 0x4C	; 76
    153e:	0e 94 1a 04 	call	0x834	; 0x834 <motorControl>
			
		}
		
	}
}
    1542:	e7 96       	adiw	r28, 0x37	; 55
    1544:	0f b6       	in	r0, 0x3f	; 63
    1546:	f8 94       	cli
    1548:	de bf       	out	0x3e, r29	; 62
    154a:	0f be       	out	0x3f, r0	; 63
    154c:	cd bf       	out	0x3d, r28	; 61
    154e:	df 91       	pop	r29
    1550:	cf 91       	pop	r28
    1552:	1f 91       	pop	r17
    1554:	0f 91       	pop	r16
    1556:	ff 90       	pop	r15
    1558:	ef 90       	pop	r14
    155a:	df 90       	pop	r13
    155c:	cf 90       	pop	r12
    155e:	bf 90       	pop	r11
    1560:	af 90       	pop	r10
    1562:	9f 90       	pop	r9
    1564:	8f 90       	pop	r8
    1566:	7f 90       	pop	r7
    1568:	6f 90       	pop	r6
    156a:	5f 90       	pop	r5
    156c:	4f 90       	pop	r4
    156e:	08 95       	ret

00001570 <__subsf3>:
    1570:	50 58       	subi	r21, 0x80	; 128

00001572 <__addsf3>:
    1572:	bb 27       	eor	r27, r27
    1574:	aa 27       	eor	r26, r26
    1576:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <__addsf3x>
    157a:	0c 94 d8 0b 	jmp	0x17b0	; 0x17b0 <__fp_round>
    157e:	0e 94 ca 0b 	call	0x1794	; 0x1794 <__fp_pscA>
    1582:	38 f0       	brcs	.+14     	; 0x1592 <__addsf3+0x20>
    1584:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__fp_pscB>
    1588:	20 f0       	brcs	.+8      	; 0x1592 <__addsf3+0x20>
    158a:	39 f4       	brne	.+14     	; 0x159a <__addsf3+0x28>
    158c:	9f 3f       	cpi	r25, 0xFF	; 255
    158e:	19 f4       	brne	.+6      	; 0x1596 <__addsf3+0x24>
    1590:	26 f4       	brtc	.+8      	; 0x159a <__addsf3+0x28>
    1592:	0c 94 c7 0b 	jmp	0x178e	; 0x178e <__fp_nan>
    1596:	0e f4       	brtc	.+2      	; 0x159a <__addsf3+0x28>
    1598:	e0 95       	com	r30
    159a:	e7 fb       	bst	r30, 7
    159c:	0c 94 c1 0b 	jmp	0x1782	; 0x1782 <__fp_inf>

000015a0 <__addsf3x>:
    15a0:	e9 2f       	mov	r30, r25
    15a2:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <__fp_split3>
    15a6:	58 f3       	brcs	.-42     	; 0x157e <__addsf3+0xc>
    15a8:	ba 17       	cp	r27, r26
    15aa:	62 07       	cpc	r22, r18
    15ac:	73 07       	cpc	r23, r19
    15ae:	84 07       	cpc	r24, r20
    15b0:	95 07       	cpc	r25, r21
    15b2:	20 f0       	brcs	.+8      	; 0x15bc <__addsf3x+0x1c>
    15b4:	79 f4       	brne	.+30     	; 0x15d4 <__addsf3x+0x34>
    15b6:	a6 f5       	brtc	.+104    	; 0x1620 <__addsf3x+0x80>
    15b8:	0c 94 0b 0c 	jmp	0x1816	; 0x1816 <__fp_zero>
    15bc:	0e f4       	brtc	.+2      	; 0x15c0 <__addsf3x+0x20>
    15be:	e0 95       	com	r30
    15c0:	0b 2e       	mov	r0, r27
    15c2:	ba 2f       	mov	r27, r26
    15c4:	a0 2d       	mov	r26, r0
    15c6:	0b 01       	movw	r0, r22
    15c8:	b9 01       	movw	r22, r18
    15ca:	90 01       	movw	r18, r0
    15cc:	0c 01       	movw	r0, r24
    15ce:	ca 01       	movw	r24, r20
    15d0:	a0 01       	movw	r20, r0
    15d2:	11 24       	eor	r1, r1
    15d4:	ff 27       	eor	r31, r31
    15d6:	59 1b       	sub	r21, r25
    15d8:	99 f0       	breq	.+38     	; 0x1600 <__addsf3x+0x60>
    15da:	59 3f       	cpi	r21, 0xF9	; 249
    15dc:	50 f4       	brcc	.+20     	; 0x15f2 <__addsf3x+0x52>
    15de:	50 3e       	cpi	r21, 0xE0	; 224
    15e0:	68 f1       	brcs	.+90     	; 0x163c <__addsf3x+0x9c>
    15e2:	1a 16       	cp	r1, r26
    15e4:	f0 40       	sbci	r31, 0x00	; 0
    15e6:	a2 2f       	mov	r26, r18
    15e8:	23 2f       	mov	r18, r19
    15ea:	34 2f       	mov	r19, r20
    15ec:	44 27       	eor	r20, r20
    15ee:	58 5f       	subi	r21, 0xF8	; 248
    15f0:	f3 cf       	rjmp	.-26     	; 0x15d8 <__addsf3x+0x38>
    15f2:	46 95       	lsr	r20
    15f4:	37 95       	ror	r19
    15f6:	27 95       	ror	r18
    15f8:	a7 95       	ror	r26
    15fa:	f0 40       	sbci	r31, 0x00	; 0
    15fc:	53 95       	inc	r21
    15fe:	c9 f7       	brne	.-14     	; 0x15f2 <__addsf3x+0x52>
    1600:	7e f4       	brtc	.+30     	; 0x1620 <__addsf3x+0x80>
    1602:	1f 16       	cp	r1, r31
    1604:	ba 0b       	sbc	r27, r26
    1606:	62 0b       	sbc	r22, r18
    1608:	73 0b       	sbc	r23, r19
    160a:	84 0b       	sbc	r24, r20
    160c:	ba f0       	brmi	.+46     	; 0x163c <__addsf3x+0x9c>
    160e:	91 50       	subi	r25, 0x01	; 1
    1610:	a1 f0       	breq	.+40     	; 0x163a <__addsf3x+0x9a>
    1612:	ff 0f       	add	r31, r31
    1614:	bb 1f       	adc	r27, r27
    1616:	66 1f       	adc	r22, r22
    1618:	77 1f       	adc	r23, r23
    161a:	88 1f       	adc	r24, r24
    161c:	c2 f7       	brpl	.-16     	; 0x160e <__addsf3x+0x6e>
    161e:	0e c0       	rjmp	.+28     	; 0x163c <__addsf3x+0x9c>
    1620:	ba 0f       	add	r27, r26
    1622:	62 1f       	adc	r22, r18
    1624:	73 1f       	adc	r23, r19
    1626:	84 1f       	adc	r24, r20
    1628:	48 f4       	brcc	.+18     	; 0x163c <__addsf3x+0x9c>
    162a:	87 95       	ror	r24
    162c:	77 95       	ror	r23
    162e:	67 95       	ror	r22
    1630:	b7 95       	ror	r27
    1632:	f7 95       	ror	r31
    1634:	9e 3f       	cpi	r25, 0xFE	; 254
    1636:	08 f0       	brcs	.+2      	; 0x163a <__addsf3x+0x9a>
    1638:	b0 cf       	rjmp	.-160    	; 0x159a <__addsf3+0x28>
    163a:	93 95       	inc	r25
    163c:	88 0f       	add	r24, r24
    163e:	08 f0       	brcs	.+2      	; 0x1642 <__addsf3x+0xa2>
    1640:	99 27       	eor	r25, r25
    1642:	ee 0f       	add	r30, r30
    1644:	97 95       	ror	r25
    1646:	87 95       	ror	r24
    1648:	08 95       	ret

0000164a <__cmpsf2>:
    164a:	0e 94 9d 0b 	call	0x173a	; 0x173a <__fp_cmp>
    164e:	08 f4       	brcc	.+2      	; 0x1652 <__cmpsf2+0x8>
    1650:	81 e0       	ldi	r24, 0x01	; 1
    1652:	08 95       	ret

00001654 <__fixsfsi>:
    1654:	0e 94 31 0b 	call	0x1662	; 0x1662 <__fixunssfsi>
    1658:	68 94       	set
    165a:	b1 11       	cpse	r27, r1
    165c:	0c 94 0c 0c 	jmp	0x1818	; 0x1818 <__fp_szero>
    1660:	08 95       	ret

00001662 <__fixunssfsi>:
    1662:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__fp_splitA>
    1666:	88 f0       	brcs	.+34     	; 0x168a <__fixunssfsi+0x28>
    1668:	9f 57       	subi	r25, 0x7F	; 127
    166a:	98 f0       	brcs	.+38     	; 0x1692 <__fixunssfsi+0x30>
    166c:	b9 2f       	mov	r27, r25
    166e:	99 27       	eor	r25, r25
    1670:	b7 51       	subi	r27, 0x17	; 23
    1672:	b0 f0       	brcs	.+44     	; 0x16a0 <__fixunssfsi+0x3e>
    1674:	e1 f0       	breq	.+56     	; 0x16ae <__fixunssfsi+0x4c>
    1676:	66 0f       	add	r22, r22
    1678:	77 1f       	adc	r23, r23
    167a:	88 1f       	adc	r24, r24
    167c:	99 1f       	adc	r25, r25
    167e:	1a f0       	brmi	.+6      	; 0x1686 <__fixunssfsi+0x24>
    1680:	ba 95       	dec	r27
    1682:	c9 f7       	brne	.-14     	; 0x1676 <__fixunssfsi+0x14>
    1684:	14 c0       	rjmp	.+40     	; 0x16ae <__fixunssfsi+0x4c>
    1686:	b1 30       	cpi	r27, 0x01	; 1
    1688:	91 f0       	breq	.+36     	; 0x16ae <__fixunssfsi+0x4c>
    168a:	0e 94 0b 0c 	call	0x1816	; 0x1816 <__fp_zero>
    168e:	b1 e0       	ldi	r27, 0x01	; 1
    1690:	08 95       	ret
    1692:	0c 94 0b 0c 	jmp	0x1816	; 0x1816 <__fp_zero>
    1696:	67 2f       	mov	r22, r23
    1698:	78 2f       	mov	r23, r24
    169a:	88 27       	eor	r24, r24
    169c:	b8 5f       	subi	r27, 0xF8	; 248
    169e:	39 f0       	breq	.+14     	; 0x16ae <__fixunssfsi+0x4c>
    16a0:	b9 3f       	cpi	r27, 0xF9	; 249
    16a2:	cc f3       	brlt	.-14     	; 0x1696 <__fixunssfsi+0x34>
    16a4:	86 95       	lsr	r24
    16a6:	77 95       	ror	r23
    16a8:	67 95       	ror	r22
    16aa:	b3 95       	inc	r27
    16ac:	d9 f7       	brne	.-10     	; 0x16a4 <__fixunssfsi+0x42>
    16ae:	3e f4       	brtc	.+14     	; 0x16be <__fixunssfsi+0x5c>
    16b0:	90 95       	com	r25
    16b2:	80 95       	com	r24
    16b4:	70 95       	com	r23
    16b6:	61 95       	neg	r22
    16b8:	7f 4f       	sbci	r23, 0xFF	; 255
    16ba:	8f 4f       	sbci	r24, 0xFF	; 255
    16bc:	9f 4f       	sbci	r25, 0xFF	; 255
    16be:	08 95       	ret

000016c0 <__floatunsisf>:
    16c0:	e8 94       	clt
    16c2:	09 c0       	rjmp	.+18     	; 0x16d6 <__floatsisf+0x12>

000016c4 <__floatsisf>:
    16c4:	97 fb       	bst	r25, 7
    16c6:	3e f4       	brtc	.+14     	; 0x16d6 <__floatsisf+0x12>
    16c8:	90 95       	com	r25
    16ca:	80 95       	com	r24
    16cc:	70 95       	com	r23
    16ce:	61 95       	neg	r22
    16d0:	7f 4f       	sbci	r23, 0xFF	; 255
    16d2:	8f 4f       	sbci	r24, 0xFF	; 255
    16d4:	9f 4f       	sbci	r25, 0xFF	; 255
    16d6:	99 23       	and	r25, r25
    16d8:	a9 f0       	breq	.+42     	; 0x1704 <__floatsisf+0x40>
    16da:	f9 2f       	mov	r31, r25
    16dc:	96 e9       	ldi	r25, 0x96	; 150
    16de:	bb 27       	eor	r27, r27
    16e0:	93 95       	inc	r25
    16e2:	f6 95       	lsr	r31
    16e4:	87 95       	ror	r24
    16e6:	77 95       	ror	r23
    16e8:	67 95       	ror	r22
    16ea:	b7 95       	ror	r27
    16ec:	f1 11       	cpse	r31, r1
    16ee:	f8 cf       	rjmp	.-16     	; 0x16e0 <__floatsisf+0x1c>
    16f0:	fa f4       	brpl	.+62     	; 0x1730 <__floatsisf+0x6c>
    16f2:	bb 0f       	add	r27, r27
    16f4:	11 f4       	brne	.+4      	; 0x16fa <__floatsisf+0x36>
    16f6:	60 ff       	sbrs	r22, 0
    16f8:	1b c0       	rjmp	.+54     	; 0x1730 <__floatsisf+0x6c>
    16fa:	6f 5f       	subi	r22, 0xFF	; 255
    16fc:	7f 4f       	sbci	r23, 0xFF	; 255
    16fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1700:	9f 4f       	sbci	r25, 0xFF	; 255
    1702:	16 c0       	rjmp	.+44     	; 0x1730 <__floatsisf+0x6c>
    1704:	88 23       	and	r24, r24
    1706:	11 f0       	breq	.+4      	; 0x170c <__floatsisf+0x48>
    1708:	96 e9       	ldi	r25, 0x96	; 150
    170a:	11 c0       	rjmp	.+34     	; 0x172e <__floatsisf+0x6a>
    170c:	77 23       	and	r23, r23
    170e:	21 f0       	breq	.+8      	; 0x1718 <__floatsisf+0x54>
    1710:	9e e8       	ldi	r25, 0x8E	; 142
    1712:	87 2f       	mov	r24, r23
    1714:	76 2f       	mov	r23, r22
    1716:	05 c0       	rjmp	.+10     	; 0x1722 <__floatsisf+0x5e>
    1718:	66 23       	and	r22, r22
    171a:	71 f0       	breq	.+28     	; 0x1738 <__floatsisf+0x74>
    171c:	96 e8       	ldi	r25, 0x86	; 134
    171e:	86 2f       	mov	r24, r22
    1720:	70 e0       	ldi	r23, 0x00	; 0
    1722:	60 e0       	ldi	r22, 0x00	; 0
    1724:	2a f0       	brmi	.+10     	; 0x1730 <__floatsisf+0x6c>
    1726:	9a 95       	dec	r25
    1728:	66 0f       	add	r22, r22
    172a:	77 1f       	adc	r23, r23
    172c:	88 1f       	adc	r24, r24
    172e:	da f7       	brpl	.-10     	; 0x1726 <__floatsisf+0x62>
    1730:	88 0f       	add	r24, r24
    1732:	96 95       	lsr	r25
    1734:	87 95       	ror	r24
    1736:	97 f9       	bld	r25, 7
    1738:	08 95       	ret

0000173a <__fp_cmp>:
    173a:	99 0f       	add	r25, r25
    173c:	00 08       	sbc	r0, r0
    173e:	55 0f       	add	r21, r21
    1740:	aa 0b       	sbc	r26, r26
    1742:	e0 e8       	ldi	r30, 0x80	; 128
    1744:	fe ef       	ldi	r31, 0xFE	; 254
    1746:	16 16       	cp	r1, r22
    1748:	17 06       	cpc	r1, r23
    174a:	e8 07       	cpc	r30, r24
    174c:	f9 07       	cpc	r31, r25
    174e:	c0 f0       	brcs	.+48     	; 0x1780 <__fp_cmp+0x46>
    1750:	12 16       	cp	r1, r18
    1752:	13 06       	cpc	r1, r19
    1754:	e4 07       	cpc	r30, r20
    1756:	f5 07       	cpc	r31, r21
    1758:	98 f0       	brcs	.+38     	; 0x1780 <__fp_cmp+0x46>
    175a:	62 1b       	sub	r22, r18
    175c:	73 0b       	sbc	r23, r19
    175e:	84 0b       	sbc	r24, r20
    1760:	95 0b       	sbc	r25, r21
    1762:	39 f4       	brne	.+14     	; 0x1772 <__fp_cmp+0x38>
    1764:	0a 26       	eor	r0, r26
    1766:	61 f0       	breq	.+24     	; 0x1780 <__fp_cmp+0x46>
    1768:	23 2b       	or	r18, r19
    176a:	24 2b       	or	r18, r20
    176c:	25 2b       	or	r18, r21
    176e:	21 f4       	brne	.+8      	; 0x1778 <__fp_cmp+0x3e>
    1770:	08 95       	ret
    1772:	0a 26       	eor	r0, r26
    1774:	09 f4       	brne	.+2      	; 0x1778 <__fp_cmp+0x3e>
    1776:	a1 40       	sbci	r26, 0x01	; 1
    1778:	a6 95       	lsr	r26
    177a:	8f ef       	ldi	r24, 0xFF	; 255
    177c:	81 1d       	adc	r24, r1
    177e:	81 1d       	adc	r24, r1
    1780:	08 95       	ret

00001782 <__fp_inf>:
    1782:	97 f9       	bld	r25, 7
    1784:	9f 67       	ori	r25, 0x7F	; 127
    1786:	80 e8       	ldi	r24, 0x80	; 128
    1788:	70 e0       	ldi	r23, 0x00	; 0
    178a:	60 e0       	ldi	r22, 0x00	; 0
    178c:	08 95       	ret

0000178e <__fp_nan>:
    178e:	9f ef       	ldi	r25, 0xFF	; 255
    1790:	80 ec       	ldi	r24, 0xC0	; 192
    1792:	08 95       	ret

00001794 <__fp_pscA>:
    1794:	00 24       	eor	r0, r0
    1796:	0a 94       	dec	r0
    1798:	16 16       	cp	r1, r22
    179a:	17 06       	cpc	r1, r23
    179c:	18 06       	cpc	r1, r24
    179e:	09 06       	cpc	r0, r25
    17a0:	08 95       	ret

000017a2 <__fp_pscB>:
    17a2:	00 24       	eor	r0, r0
    17a4:	0a 94       	dec	r0
    17a6:	12 16       	cp	r1, r18
    17a8:	13 06       	cpc	r1, r19
    17aa:	14 06       	cpc	r1, r20
    17ac:	05 06       	cpc	r0, r21
    17ae:	08 95       	ret

000017b0 <__fp_round>:
    17b0:	09 2e       	mov	r0, r25
    17b2:	03 94       	inc	r0
    17b4:	00 0c       	add	r0, r0
    17b6:	11 f4       	brne	.+4      	; 0x17bc <__fp_round+0xc>
    17b8:	88 23       	and	r24, r24
    17ba:	52 f0       	brmi	.+20     	; 0x17d0 <__fp_round+0x20>
    17bc:	bb 0f       	add	r27, r27
    17be:	40 f4       	brcc	.+16     	; 0x17d0 <__fp_round+0x20>
    17c0:	bf 2b       	or	r27, r31
    17c2:	11 f4       	brne	.+4      	; 0x17c8 <__fp_round+0x18>
    17c4:	60 ff       	sbrs	r22, 0
    17c6:	04 c0       	rjmp	.+8      	; 0x17d0 <__fp_round+0x20>
    17c8:	6f 5f       	subi	r22, 0xFF	; 255
    17ca:	7f 4f       	sbci	r23, 0xFF	; 255
    17cc:	8f 4f       	sbci	r24, 0xFF	; 255
    17ce:	9f 4f       	sbci	r25, 0xFF	; 255
    17d0:	08 95       	ret

000017d2 <__fp_split3>:
    17d2:	57 fd       	sbrc	r21, 7
    17d4:	90 58       	subi	r25, 0x80	; 128
    17d6:	44 0f       	add	r20, r20
    17d8:	55 1f       	adc	r21, r21
    17da:	59 f0       	breq	.+22     	; 0x17f2 <__fp_splitA+0x10>
    17dc:	5f 3f       	cpi	r21, 0xFF	; 255
    17de:	71 f0       	breq	.+28     	; 0x17fc <__fp_splitA+0x1a>
    17e0:	47 95       	ror	r20

000017e2 <__fp_splitA>:
    17e2:	88 0f       	add	r24, r24
    17e4:	97 fb       	bst	r25, 7
    17e6:	99 1f       	adc	r25, r25
    17e8:	61 f0       	breq	.+24     	; 0x1802 <__fp_splitA+0x20>
    17ea:	9f 3f       	cpi	r25, 0xFF	; 255
    17ec:	79 f0       	breq	.+30     	; 0x180c <__fp_splitA+0x2a>
    17ee:	87 95       	ror	r24
    17f0:	08 95       	ret
    17f2:	12 16       	cp	r1, r18
    17f4:	13 06       	cpc	r1, r19
    17f6:	14 06       	cpc	r1, r20
    17f8:	55 1f       	adc	r21, r21
    17fa:	f2 cf       	rjmp	.-28     	; 0x17e0 <__fp_split3+0xe>
    17fc:	46 95       	lsr	r20
    17fe:	f1 df       	rcall	.-30     	; 0x17e2 <__fp_splitA>
    1800:	08 c0       	rjmp	.+16     	; 0x1812 <__fp_splitA+0x30>
    1802:	16 16       	cp	r1, r22
    1804:	17 06       	cpc	r1, r23
    1806:	18 06       	cpc	r1, r24
    1808:	99 1f       	adc	r25, r25
    180a:	f1 cf       	rjmp	.-30     	; 0x17ee <__fp_splitA+0xc>
    180c:	86 95       	lsr	r24
    180e:	71 05       	cpc	r23, r1
    1810:	61 05       	cpc	r22, r1
    1812:	08 94       	sec
    1814:	08 95       	ret

00001816 <__fp_zero>:
    1816:	e8 94       	clt

00001818 <__fp_szero>:
    1818:	bb 27       	eor	r27, r27
    181a:	66 27       	eor	r22, r22
    181c:	77 27       	eor	r23, r23
    181e:	cb 01       	movw	r24, r22
    1820:	97 f9       	bld	r25, 7
    1822:	08 95       	ret

00001824 <__mulsf3>:
    1824:	0e 94 25 0c 	call	0x184a	; 0x184a <__mulsf3x>
    1828:	0c 94 d8 0b 	jmp	0x17b0	; 0x17b0 <__fp_round>
    182c:	0e 94 ca 0b 	call	0x1794	; 0x1794 <__fp_pscA>
    1830:	38 f0       	brcs	.+14     	; 0x1840 <__mulsf3+0x1c>
    1832:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__fp_pscB>
    1836:	20 f0       	brcs	.+8      	; 0x1840 <__mulsf3+0x1c>
    1838:	95 23       	and	r25, r21
    183a:	11 f0       	breq	.+4      	; 0x1840 <__mulsf3+0x1c>
    183c:	0c 94 c1 0b 	jmp	0x1782	; 0x1782 <__fp_inf>
    1840:	0c 94 c7 0b 	jmp	0x178e	; 0x178e <__fp_nan>
    1844:	11 24       	eor	r1, r1
    1846:	0c 94 0c 0c 	jmp	0x1818	; 0x1818 <__fp_szero>

0000184a <__mulsf3x>:
    184a:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <__fp_split3>
    184e:	70 f3       	brcs	.-36     	; 0x182c <__mulsf3+0x8>

00001850 <__mulsf3_pse>:
    1850:	95 9f       	mul	r25, r21
    1852:	c1 f3       	breq	.-16     	; 0x1844 <__mulsf3+0x20>
    1854:	95 0f       	add	r25, r21
    1856:	50 e0       	ldi	r21, 0x00	; 0
    1858:	55 1f       	adc	r21, r21
    185a:	62 9f       	mul	r22, r18
    185c:	f0 01       	movw	r30, r0
    185e:	72 9f       	mul	r23, r18
    1860:	bb 27       	eor	r27, r27
    1862:	f0 0d       	add	r31, r0
    1864:	b1 1d       	adc	r27, r1
    1866:	63 9f       	mul	r22, r19
    1868:	aa 27       	eor	r26, r26
    186a:	f0 0d       	add	r31, r0
    186c:	b1 1d       	adc	r27, r1
    186e:	aa 1f       	adc	r26, r26
    1870:	64 9f       	mul	r22, r20
    1872:	66 27       	eor	r22, r22
    1874:	b0 0d       	add	r27, r0
    1876:	a1 1d       	adc	r26, r1
    1878:	66 1f       	adc	r22, r22
    187a:	82 9f       	mul	r24, r18
    187c:	22 27       	eor	r18, r18
    187e:	b0 0d       	add	r27, r0
    1880:	a1 1d       	adc	r26, r1
    1882:	62 1f       	adc	r22, r18
    1884:	73 9f       	mul	r23, r19
    1886:	b0 0d       	add	r27, r0
    1888:	a1 1d       	adc	r26, r1
    188a:	62 1f       	adc	r22, r18
    188c:	83 9f       	mul	r24, r19
    188e:	a0 0d       	add	r26, r0
    1890:	61 1d       	adc	r22, r1
    1892:	22 1f       	adc	r18, r18
    1894:	74 9f       	mul	r23, r20
    1896:	33 27       	eor	r19, r19
    1898:	a0 0d       	add	r26, r0
    189a:	61 1d       	adc	r22, r1
    189c:	23 1f       	adc	r18, r19
    189e:	84 9f       	mul	r24, r20
    18a0:	60 0d       	add	r22, r0
    18a2:	21 1d       	adc	r18, r1
    18a4:	82 2f       	mov	r24, r18
    18a6:	76 2f       	mov	r23, r22
    18a8:	6a 2f       	mov	r22, r26
    18aa:	11 24       	eor	r1, r1
    18ac:	9f 57       	subi	r25, 0x7F	; 127
    18ae:	50 40       	sbci	r21, 0x00	; 0
    18b0:	9a f0       	brmi	.+38     	; 0x18d8 <__mulsf3_pse+0x88>
    18b2:	f1 f0       	breq	.+60     	; 0x18f0 <__mulsf3_pse+0xa0>
    18b4:	88 23       	and	r24, r24
    18b6:	4a f0       	brmi	.+18     	; 0x18ca <__mulsf3_pse+0x7a>
    18b8:	ee 0f       	add	r30, r30
    18ba:	ff 1f       	adc	r31, r31
    18bc:	bb 1f       	adc	r27, r27
    18be:	66 1f       	adc	r22, r22
    18c0:	77 1f       	adc	r23, r23
    18c2:	88 1f       	adc	r24, r24
    18c4:	91 50       	subi	r25, 0x01	; 1
    18c6:	50 40       	sbci	r21, 0x00	; 0
    18c8:	a9 f7       	brne	.-22     	; 0x18b4 <__mulsf3_pse+0x64>
    18ca:	9e 3f       	cpi	r25, 0xFE	; 254
    18cc:	51 05       	cpc	r21, r1
    18ce:	80 f0       	brcs	.+32     	; 0x18f0 <__mulsf3_pse+0xa0>
    18d0:	0c 94 c1 0b 	jmp	0x1782	; 0x1782 <__fp_inf>
    18d4:	0c 94 0c 0c 	jmp	0x1818	; 0x1818 <__fp_szero>
    18d8:	5f 3f       	cpi	r21, 0xFF	; 255
    18da:	e4 f3       	brlt	.-8      	; 0x18d4 <__mulsf3_pse+0x84>
    18dc:	98 3e       	cpi	r25, 0xE8	; 232
    18de:	d4 f3       	brlt	.-12     	; 0x18d4 <__mulsf3_pse+0x84>
    18e0:	86 95       	lsr	r24
    18e2:	77 95       	ror	r23
    18e4:	67 95       	ror	r22
    18e6:	b7 95       	ror	r27
    18e8:	f7 95       	ror	r31
    18ea:	e7 95       	ror	r30
    18ec:	9f 5f       	subi	r25, 0xFF	; 255
    18ee:	c1 f7       	brne	.-16     	; 0x18e0 <__mulsf3_pse+0x90>
    18f0:	fe 2b       	or	r31, r30
    18f2:	88 0f       	add	r24, r24
    18f4:	91 1d       	adc	r25, r1
    18f6:	96 95       	lsr	r25
    18f8:	87 95       	ror	r24
    18fa:	97 f9       	bld	r25, 7
    18fc:	08 95       	ret

000018fe <_ZN15OrangutanAnalog7setModeEh.part.0>:
    18fe:	ec e7       	ldi	r30, 0x7C	; 124
    1900:	f0 e0       	ldi	r31, 0x00	; 0
    1902:	80 81       	ld	r24, Z
    1904:	8f 7d       	andi	r24, 0xDF	; 223
    1906:	80 83       	st	Z, r24
    1908:	08 95       	ret

0000190a <_ZN15OrangutanAnalog7setModeEh>:
    190a:	81 11       	cpse	r24, r1
    190c:	03 c0       	rjmp	.+6      	; 0x1914 <_ZN15OrangutanAnalog7setModeEh+0xa>
    190e:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <_ZN15OrangutanAnalog7setModeEh.part.0>
    1912:	08 95       	ret
    1914:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1918:	80 62       	ori	r24, 0x20	; 32
    191a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    191e:	08 95       	ret

00001920 <_ZN15OrangutanAnalog7getModeEv>:
    1920:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1924:	85 fb       	bst	r24, 5
    1926:	88 27       	eor	r24, r24
    1928:	80 f9       	bld	r24, 0
    192a:	08 95       	ret

0000192c <_ZN15OrangutanAnalog16conversionResultEv>:
    192c:	0e 94 90 0c 	call	0x1920	; 0x1920 <_ZN15OrangutanAnalog7getModeEv>
    1930:	88 23       	and	r24, r24
    1932:	21 f0       	breq	.+8      	; 0x193c <_ZN15OrangutanAnalog16conversionResultEv+0x10>
    1934:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1938:	90 e0       	ldi	r25, 0x00	; 0
    193a:	08 95       	ret
    193c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    1940:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1944:	08 95       	ret

00001946 <_ZN15OrangutanAnalog15startConversionEhh>:
    1946:	80 32       	cpi	r24, 0x20	; 32
    1948:	a0 f4       	brcc	.+40     	; 0x1972 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
    194a:	97 e8       	ldi	r25, 0x87	; 135
    194c:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1950:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1954:	66 23       	and	r22, r22
    1956:	11 f0       	breq	.+4      	; 0x195c <_ZN15OrangutanAnalog15startConversionEhh+0x16>
    1958:	90 6c       	ori	r25, 0xC0	; 192
    195a:	02 c0       	rjmp	.+4      	; 0x1960 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
    195c:	9f 77       	andi	r25, 0x7F	; 127
    195e:	90 64       	ori	r25, 0x40	; 64
    1960:	90 7e       	andi	r25, 0xE0	; 224
    1962:	98 2b       	or	r25, r24
    1964:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1968:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    196c:	80 64       	ori	r24, 0x40	; 64
    196e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1972:	08 95       	ret

00001974 <_ZN15OrangutanAnalog11readAverageEhj>:
    1974:	a0 e0       	ldi	r26, 0x00	; 0
    1976:	b0 e0       	ldi	r27, 0x00	; 0
    1978:	e0 ec       	ldi	r30, 0xC0	; 192
    197a:	fc e0       	ldi	r31, 0x0C	; 12
    197c:	0c 94 f1 1a 	jmp	0x35e2	; 0x35e2 <__prologue_saves__+0x14>
    1980:	eb 01       	movw	r28, r22
    1982:	60 e0       	ldi	r22, 0x00	; 0
    1984:	0e 94 a3 0c 	call	0x1946	; 0x1946 <_ZN15OrangutanAnalog15startConversionEhh>
    1988:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    198c:	86 fd       	sbrc	r24, 6
    198e:	fc cf       	rjmp	.-8      	; 0x1988 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
    1990:	8e 01       	movw	r16, r28
    1992:	c1 2c       	mov	r12, r1
    1994:	d1 2c       	mov	r13, r1
    1996:	76 01       	movw	r14, r12
    1998:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    199c:	80 64       	ori	r24, 0x40	; 64
    199e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    19a2:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    19a6:	86 fd       	sbrc	r24, 6
    19a8:	fc cf       	rjmp	.-8      	; 0x19a2 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
    19aa:	0e 94 96 0c 	call	0x192c	; 0x192c <_ZN15OrangutanAnalog16conversionResultEv>
    19ae:	c8 0e       	add	r12, r24
    19b0:	d9 1e       	adc	r13, r25
    19b2:	e1 1c       	adc	r14, r1
    19b4:	f1 1c       	adc	r15, r1
    19b6:	01 50       	subi	r16, 0x01	; 1
    19b8:	11 09       	sbc	r17, r1
    19ba:	01 15       	cp	r16, r1
    19bc:	11 05       	cpc	r17, r1
    19be:	61 f7       	brne	.-40     	; 0x1998 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
    19c0:	ce 01       	movw	r24, r28
    19c2:	96 95       	lsr	r25
    19c4:	87 95       	ror	r24
    19c6:	c0 34       	cpi	r28, 0x40	; 64
    19c8:	d1 05       	cpc	r29, r1
    19ca:	38 f4       	brcc	.+14     	; 0x19da <_ZN15OrangutanAnalog11readAverageEhj+0x66>
    19cc:	8c 0d       	add	r24, r12
    19ce:	9d 1d       	adc	r25, r13
    19d0:	be 01       	movw	r22, r28
    19d2:	0e 94 56 1a 	call	0x34ac	; 0x34ac <__udivmodhi4>
    19d6:	cb 01       	movw	r24, r22
    19d8:	0e c0       	rjmp	.+28     	; 0x19f6 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
    19da:	a7 01       	movw	r20, r14
    19dc:	96 01       	movw	r18, r12
    19de:	28 0f       	add	r18, r24
    19e0:	39 1f       	adc	r19, r25
    19e2:	41 1d       	adc	r20, r1
    19e4:	51 1d       	adc	r21, r1
    19e6:	ca 01       	movw	r24, r20
    19e8:	b9 01       	movw	r22, r18
    19ea:	9e 01       	movw	r18, r28
    19ec:	40 e0       	ldi	r20, 0x00	; 0
    19ee:	50 e0       	ldi	r21, 0x00	; 0
    19f0:	0e 94 7e 1a 	call	0x34fc	; 0x34fc <__udivmodsi4>
    19f4:	c9 01       	movw	r24, r18
    19f6:	cd b7       	in	r28, 0x3d	; 61
    19f8:	de b7       	in	r29, 0x3e	; 62
    19fa:	e8 e0       	ldi	r30, 0x08	; 8
    19fc:	0c 94 0d 1b 	jmp	0x361a	; 0x361a <__epilogue_restores__+0x14>

00001a00 <_ZN15OrangutanAnalog12toMillivoltsEj>:
    1a00:	cf 92       	push	r12
    1a02:	df 92       	push	r13
    1a04:	ef 92       	push	r14
    1a06:	ff 92       	push	r15
    1a08:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a0c:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a10:	9c 01       	movw	r18, r24
    1a12:	0e 94 c5 1a 	call	0x358a	; 0x358a <__umulhisi3>
    1a16:	6b 01       	movw	r12, r22
    1a18:	7c 01       	movw	r14, r24
    1a1a:	0e 94 90 0c 	call	0x1920	; 0x1920 <_ZN15OrangutanAnalog7getModeEv>
    1a1e:	88 23       	and	r24, r24
    1a20:	59 f0       	breq	.+22     	; 0x1a38 <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
    1a22:	c7 01       	movw	r24, r14
    1a24:	b6 01       	movw	r22, r12
    1a26:	61 58       	subi	r22, 0x81	; 129
    1a28:	7f 4f       	sbci	r23, 0xFF	; 255
    1a2a:	8f 4f       	sbci	r24, 0xFF	; 255
    1a2c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a2e:	2f ef       	ldi	r18, 0xFF	; 255
    1a30:	30 e0       	ldi	r19, 0x00	; 0
    1a32:	40 e0       	ldi	r20, 0x00	; 0
    1a34:	50 e0       	ldi	r21, 0x00	; 0
    1a36:	0a c0       	rjmp	.+20     	; 0x1a4c <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
    1a38:	c7 01       	movw	r24, r14
    1a3a:	b6 01       	movw	r22, r12
    1a3c:	61 50       	subi	r22, 0x01	; 1
    1a3e:	7e 4f       	sbci	r23, 0xFE	; 254
    1a40:	8f 4f       	sbci	r24, 0xFF	; 255
    1a42:	9f 4f       	sbci	r25, 0xFF	; 255
    1a44:	2f ef       	ldi	r18, 0xFF	; 255
    1a46:	33 e0       	ldi	r19, 0x03	; 3
    1a48:	40 e0       	ldi	r20, 0x00	; 0
    1a4a:	50 e0       	ldi	r21, 0x00	; 0
    1a4c:	0e 94 7e 1a 	call	0x34fc	; 0x34fc <__udivmodsi4>
    1a50:	c9 01       	movw	r24, r18
    1a52:	ff 90       	pop	r15
    1a54:	ef 90       	pop	r14
    1a56:	df 90       	pop	r13
    1a58:	cf 90       	pop	r12
    1a5a:	08 95       	ret

00001a5c <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
    1a5c:	0e 94 ba 0c 	call	0x1974	; 0x1974 <_ZN15OrangutanAnalog11readAverageEhj>
    1a60:	0e 94 00 0d 	call	0x1a00	; 0x1a00 <_ZN15OrangutanAnalog12toMillivoltsEj>
    1a64:	08 95       	ret

00001a66 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
    1a66:	1f 93       	push	r17
    1a68:	cf 93       	push	r28
    1a6a:	df 93       	push	r29
    1a6c:	0e 94 90 0c 	call	0x1920	; 0x1920 <_ZN15OrangutanAnalog7getModeEv>
    1a70:	18 2f       	mov	r17, r24
    1a72:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <_ZN15OrangutanAnalog7setModeEh.part.0>
    1a76:	6a e0       	ldi	r22, 0x0A	; 10
    1a78:	70 e0       	ldi	r23, 0x00	; 0
    1a7a:	86 e0       	ldi	r24, 0x06	; 6
    1a7c:	0e 94 2e 0d 	call	0x1a5c	; 0x1a5c <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
    1a80:	ec 01       	movw	r28, r24
    1a82:	81 2f       	mov	r24, r17
    1a84:	0e 94 85 0c 	call	0x190a	; 0x190a <_ZN15OrangutanAnalog7setModeEh>
    1a88:	ce 01       	movw	r24, r28
    1a8a:	88 0f       	add	r24, r24
    1a8c:	99 1f       	adc	r25, r25
    1a8e:	8c 0f       	add	r24, r28
    1a90:	9d 1f       	adc	r25, r29
    1a92:	01 96       	adiw	r24, 0x01	; 1
    1a94:	96 95       	lsr	r25
    1a96:	87 95       	ror	r24
    1a98:	df 91       	pop	r29
    1a9a:	cf 91       	pop	r28
    1a9c:	1f 91       	pop	r17
    1a9e:	08 95       	ret

00001aa0 <read_battery_millivolts_3pi>:
    1aa0:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
    1aa4:	08 95       	ret

00001aa6 <_ZL16currentCharacterv>:
    1aa6:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <_ZL17use_program_space>
    1aaa:	e0 91 94 01 	lds	r30, 0x0194	; 0x800194 <__data_end>
    1aae:	f0 91 95 01 	lds	r31, 0x0195	; 0x800195 <__data_end+0x1>
    1ab2:	99 23       	and	r25, r25
    1ab4:	11 f0       	breq	.+4      	; 0x1aba <_ZL16currentCharacterv+0x14>
    1ab6:	84 91       	lpm	r24, Z
    1ab8:	01 c0       	rjmp	.+2      	; 0x1abc <_ZL16currentCharacterv+0x16>
    1aba:	80 81       	ld	r24, Z
    1abc:	2f eb       	ldi	r18, 0xBF	; 191
    1abe:	28 0f       	add	r18, r24
    1ac0:	2a 31       	cpi	r18, 0x1A	; 26
    1ac2:	10 f4       	brcc	.+4      	; 0x1ac8 <_ZL16currentCharacterv+0x22>
    1ac4:	80 5e       	subi	r24, 0xE0	; 224
    1ac6:	08 95       	ret
    1ac8:	80 32       	cpi	r24, 0x20	; 32
    1aca:	49 f4       	brne	.+18     	; 0x1ade <_ZL16currentCharacterv+0x38>
    1acc:	9f 01       	movw	r18, r30
    1ace:	2f 5f       	subi	r18, 0xFF	; 255
    1ad0:	3f 4f       	sbci	r19, 0xFF	; 255
    1ad2:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    1ad6:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    1ada:	ef 2b       	or	r30, r31
    1adc:	31 f7       	brne	.-52     	; 0x1aaa <_ZL16currentCharacterv+0x4>
    1ade:	08 95       	ret

00001ae0 <_ZL9getNumberv>:
    1ae0:	1f 93       	push	r17
    1ae2:	cf 93       	push	r28
    1ae4:	df 93       	push	r29
    1ae6:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <_ZL16currentCharacterv>
    1aea:	c0 e0       	ldi	r28, 0x00	; 0
    1aec:	d0 e0       	ldi	r29, 0x00	; 0
    1aee:	1a e0       	ldi	r17, 0x0A	; 10
    1af0:	90 ed       	ldi	r25, 0xD0	; 208
    1af2:	98 0f       	add	r25, r24
    1af4:	9a 30       	cpi	r25, 0x0A	; 10
    1af6:	b8 f4       	brcc	.+46     	; 0x1b26 <_ZL9getNumberv+0x46>
    1af8:	9e 01       	movw	r18, r28
    1afa:	12 9f       	mul	r17, r18
    1afc:	e0 01       	movw	r28, r0
    1afe:	13 9f       	mul	r17, r19
    1b00:	d0 0d       	add	r29, r0
    1b02:	11 24       	eor	r1, r1
    1b04:	c8 0f       	add	r28, r24
    1b06:	d1 1d       	adc	r29, r1
    1b08:	87 fd       	sbrc	r24, 7
    1b0a:	da 95       	dec	r29
    1b0c:	e0 97       	sbiw	r28, 0x30	; 48
    1b0e:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <__data_end>
    1b12:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <__data_end+0x1>
    1b16:	01 96       	adiw	r24, 0x01	; 1
    1b18:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <__data_end+0x1>
    1b1c:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <__data_end>
    1b20:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <_ZL16currentCharacterv>
    1b24:	e5 cf       	rjmp	.-54     	; 0x1af0 <_ZL9getNumberv+0x10>
    1b26:	ce 01       	movw	r24, r28
    1b28:	df 91       	pop	r29
    1b2a:	cf 91       	pop	r28
    1b2c:	1f 91       	pop	r17
    1b2e:	08 95       	ret

00001b30 <_ZN15OrangutanBuzzer5init2Ev>:
    1b30:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1b34:	83 e2       	ldi	r24, 0x23	; 35
    1b36:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    1b3a:	81 e1       	ldi	r24, 0x11	; 17
    1b3c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1b40:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7f8082>
    1b44:	80 e1       	ldi	r24, 0x10	; 16
    1b46:	97 e2       	ldi	r25, 0x27	; 39
    1b48:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    1b4c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1b50:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    1b54:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    1b58:	22 9a       	sbi	0x04, 2	; 4
    1b5a:	78 94       	sei
    1b5c:	08 95       	ret

00001b5e <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
    1b5e:	8f 92       	push	r8
    1b60:	9f 92       	push	r9
    1b62:	af 92       	push	r10
    1b64:	bf 92       	push	r11
    1b66:	df 92       	push	r13
    1b68:	ef 92       	push	r14
    1b6a:	ff 92       	push	r15
    1b6c:	0f 93       	push	r16
    1b6e:	1f 93       	push	r17
    1b70:	cf 93       	push	r28
    1b72:	df 93       	push	r29
    1b74:	5c 01       	movw	r10, r24
    1b76:	8b 01       	movw	r16, r22
    1b78:	d4 2e       	mov	r13, r20
    1b7a:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <buzzerInitialized>
    1b7e:	81 11       	cpse	r24, r1
    1b80:	05 c0       	rjmp	.+10     	; 0x1b8c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
    1b82:	81 e0       	ldi	r24, 0x01	; 1
    1b84:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <buzzerInitialized>
    1b88:	0e 94 98 0d 	call	0x1b30	; 0x1b30 <_ZN15OrangutanBuzzer5init2Ev>
    1b8c:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <buzzerFinished>
    1b90:	b7 fe       	sbrs	r11, 7
    1b92:	05 c0       	rjmp	.+10     	; 0x1b9e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
    1b94:	e8 94       	clt
    1b96:	b7 f8       	bld	r11, 7
    1b98:	2a e0       	ldi	r18, 0x0A	; 10
    1b9a:	f2 2e       	mov	r15, r18
    1b9c:	02 c0       	rjmp	.+4      	; 0x1ba2 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
    1b9e:	ff 24       	eor	r15, r15
    1ba0:	f3 94       	inc	r15
    1ba2:	e0 90 81 00 	lds	r14, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1ba6:	2e 2d       	mov	r18, r14
    1ba8:	28 7f       	andi	r18, 0xF8	; 248
    1baa:	e2 2e       	mov	r14, r18
    1bac:	48 ec       	ldi	r20, 0xC8	; 200
    1bae:	f4 9e       	mul	r15, r20
    1bb0:	c0 01       	movw	r24, r0
    1bb2:	11 24       	eor	r1, r1
    1bb4:	8a 15       	cp	r24, r10
    1bb6:	9b 05       	cpc	r25, r11
    1bb8:	e0 f4       	brcc	.+56     	; 0x1bf2 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
    1bba:	e5 01       	movw	r28, r10
    1bbc:	51 e1       	ldi	r21, 0x11	; 17
    1bbe:	a5 16       	cp	r10, r21
    1bc0:	57 e2       	ldi	r21, 0x27	; 39
    1bc2:	b5 06       	cpc	r11, r21
    1bc4:	10 f0       	brcs	.+4      	; 0x1bca <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
    1bc6:	c0 e1       	ldi	r28, 0x10	; 16
    1bc8:	d7 e2       	ldi	r29, 0x27	; 39
    1bca:	be 01       	movw	r22, r28
    1bcc:	76 95       	lsr	r23
    1bce:	67 95       	ror	r22
    1bd0:	80 e0       	ldi	r24, 0x00	; 0
    1bd2:	90 e0       	ldi	r25, 0x00	; 0
    1bd4:	60 58       	subi	r22, 0x80	; 128
    1bd6:	79 46       	sbci	r23, 0x69	; 105
    1bd8:	87 46       	sbci	r24, 0x67	; 103
    1bda:	9f 4f       	sbci	r25, 0xFF	; 255
    1bdc:	4e 01       	movw	r8, r28
    1bde:	a1 2c       	mov	r10, r1
    1be0:	b1 2c       	mov	r11, r1
    1be2:	a5 01       	movw	r20, r10
    1be4:	94 01       	movw	r18, r8
    1be6:	0e 94 7e 1a 	call	0x34fc	; 0x34fc <__udivmodsi4>
    1bea:	59 01       	movw	r10, r18
    1bec:	8e 2d       	mov	r24, r14
    1bee:	81 60       	ori	r24, 0x01	; 1
    1bf0:	24 c0       	rjmp	.+72     	; 0x1c3a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
    1bf2:	c8 e2       	ldi	r28, 0x28	; 40
    1bf4:	fc 9e       	mul	r15, r28
    1bf6:	c0 2d       	mov	r28, r0
    1bf8:	11 24       	eor	r1, r1
    1bfa:	d0 e0       	ldi	r29, 0x00	; 0
    1bfc:	ca 15       	cp	r28, r10
    1bfe:	db 05       	cpc	r29, r11
    1c00:	08 f4       	brcc	.+2      	; 0x1c04 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
    1c02:	e5 01       	movw	r28, r10
    1c04:	be 01       	movw	r22, r28
    1c06:	76 95       	lsr	r23
    1c08:	67 95       	ror	r22
    1c0a:	9e 01       	movw	r18, r28
    1c0c:	40 e0       	ldi	r20, 0x00	; 0
    1c0e:	50 e0       	ldi	r21, 0x00	; 0
    1c10:	8a e0       	ldi	r24, 0x0A	; 10
    1c12:	f8 12       	cpse	r15, r24
    1c14:	07 c0       	rjmp	.+14     	; 0x1c24 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
    1c16:	80 e0       	ldi	r24, 0x00	; 0
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	60 5e       	subi	r22, 0xE0	; 224
    1c1c:	73 44       	sbci	r23, 0x43	; 67
    1c1e:	81 44       	sbci	r24, 0x41	; 65
    1c20:	9f 4f       	sbci	r25, 0xFF	; 255
    1c22:	06 c0       	rjmp	.+12     	; 0x1c30 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
    1c24:	80 e0       	ldi	r24, 0x00	; 0
    1c26:	90 e0       	ldi	r25, 0x00	; 0
    1c28:	60 53       	subi	r22, 0x30	; 48
    1c2a:	7d 4e       	sbci	r23, 0xED	; 237
    1c2c:	8c 4e       	sbci	r24, 0xEC	; 236
    1c2e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c30:	0e 94 7e 1a 	call	0x34fc	; 0x34fc <__udivmodsi4>
    1c34:	59 01       	movw	r10, r18
    1c36:	8e 2d       	mov	r24, r14
    1c38:	82 60       	ori	r24, 0x02	; 2
    1c3a:	88 2e       	mov	r8, r24
    1c3c:	2a e0       	ldi	r18, 0x0A	; 10
    1c3e:	f2 12       	cpse	r15, r18
    1c40:	07 c0       	rjmp	.+14     	; 0x1c50 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
    1c42:	ce 01       	movw	r24, r28
    1c44:	05 96       	adiw	r24, 0x05	; 5
    1c46:	6a e0       	ldi	r22, 0x0A	; 10
    1c48:	70 e0       	ldi	r23, 0x00	; 0
    1c4a:	0e 94 56 1a 	call	0x34ac	; 0x34ac <__udivmodhi4>
    1c4e:	eb 01       	movw	r28, r22
    1c50:	c8 3e       	cpi	r28, 0xE8	; 232
    1c52:	43 e0       	ldi	r20, 0x03	; 3
    1c54:	d4 07       	cpc	r29, r20
    1c56:	59 f0       	breq	.+22     	; 0x1c6e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
    1c58:	98 01       	movw	r18, r16
    1c5a:	de 01       	movw	r26, r28
    1c5c:	0e 94 c5 1a 	call	0x358a	; 0x358a <__umulhisi3>
    1c60:	28 ee       	ldi	r18, 0xE8	; 232
    1c62:	33 e0       	ldi	r19, 0x03	; 3
    1c64:	40 e0       	ldi	r20, 0x00	; 0
    1c66:	50 e0       	ldi	r21, 0x00	; 0
    1c68:	0e 94 a0 1a 	call	0x3540	; 0x3540 <__divmodsi4>
    1c6c:	89 01       	movw	r16, r18
    1c6e:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1c72:	80 92 81 00 	sts	0x0081, r8	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1c76:	b0 92 89 00 	sts	0x0089, r11	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    1c7a:	a0 92 88 00 	sts	0x0088, r10	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1c7e:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1c82:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    1c86:	4d 2d       	mov	r20, r13
    1c88:	40 31       	cpi	r20, 0x10	; 16
    1c8a:	08 f0       	brcs	.+2      	; 0x1c8e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
    1c8c:	4f e0       	ldi	r20, 0x0F	; 15
    1c8e:	80 e1       	ldi	r24, 0x10	; 16
    1c90:	90 e0       	ldi	r25, 0x00	; 0
    1c92:	84 1b       	sub	r24, r20
    1c94:	91 09       	sbc	r25, r1
    1c96:	a9 01       	movw	r20, r18
    1c98:	02 c0       	rjmp	.+4      	; 0x1c9e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
    1c9a:	56 95       	lsr	r21
    1c9c:	47 95       	ror	r20
    1c9e:	8a 95       	dec	r24
    1ca0:	e2 f7       	brpl	.-8      	; 0x1c9a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
    1ca2:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    1ca6:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    1caa:	10 93 9c 01 	sts	0x019C, r17	; 0x80019c <_ZL13buzzerTimeout+0x1>
    1cae:	00 93 9b 01 	sts	0x019B, r16	; 0x80019b <_ZL13buzzerTimeout>
    1cb2:	86 b3       	in	r24, 0x16	; 22
    1cb4:	8f ef       	ldi	r24, 0xFF	; 255
    1cb6:	86 bb       	out	0x16, r24	; 22
    1cb8:	81 e0       	ldi	r24, 0x01	; 1
    1cba:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1cbe:	df 91       	pop	r29
    1cc0:	cf 91       	pop	r28
    1cc2:	1f 91       	pop	r17
    1cc4:	0f 91       	pop	r16
    1cc6:	ff 90       	pop	r15
    1cc8:	ef 90       	pop	r14
    1cca:	df 90       	pop	r13
    1ccc:	bf 90       	pop	r11
    1cce:	af 90       	pop	r10
    1cd0:	9f 90       	pop	r9
    1cd2:	8f 90       	pop	r8
    1cd4:	08 95       	ret

00001cd6 <_ZN15OrangutanBuzzer8playNoteEhjh>:
    1cd6:	cf 93       	push	r28
    1cd8:	df 93       	push	r29
    1cda:	eb 01       	movw	r28, r22
    1cdc:	8f 3f       	cpi	r24, 0xFF	; 255
    1cde:	11 f0       	breq	.+4      	; 0x1ce4 <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
    1ce0:	41 11       	cpse	r20, r1
    1ce2:	05 c0       	rjmp	.+10     	; 0x1cee <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
    1ce4:	40 e0       	ldi	r20, 0x00	; 0
    1ce6:	be 01       	movw	r22, r28
    1ce8:	88 ee       	ldi	r24, 0xE8	; 232
    1cea:	93 e0       	ldi	r25, 0x03	; 3
    1cec:	43 c0       	rjmp	.+134    	; 0x1d74 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
    1cee:	81 31       	cpi	r24, 0x11	; 17
    1cf0:	30 f0       	brcs	.+12     	; 0x1cfe <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
    1cf2:	50 ef       	ldi	r21, 0xF0	; 240
    1cf4:	58 0f       	add	r21, r24
    1cf6:	50 36       	cpi	r21, 0x60	; 96
    1cf8:	18 f0       	brcs	.+6      	; 0x1d00 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    1cfa:	5f e5       	ldi	r21, 0x5F	; 95
    1cfc:	01 c0       	rjmp	.+2      	; 0x1d00 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    1cfe:	50 e0       	ldi	r21, 0x00	; 0
    1d00:	85 2f       	mov	r24, r21
    1d02:	6c e0       	ldi	r22, 0x0C	; 12
    1d04:	0e 94 4a 1a 	call	0x3494	; 0x3494 <__udivmodqi4>
    1d08:	68 2f       	mov	r22, r24
    1d0a:	74 ef       	ldi	r23, 0xF4	; 244
    1d0c:	76 03       	mulsu	r23, r22
    1d0e:	90 01       	movw	r18, r0
    1d10:	11 24       	eor	r1, r1
    1d12:	25 0f       	add	r18, r21
    1d14:	31 1d       	adc	r19, r1
    1d16:	2c 30       	cpi	r18, 0x0C	; 12
    1d18:	31 05       	cpc	r19, r1
    1d1a:	40 f4       	brcc	.+16     	; 0x1d2c <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
    1d1c:	f9 01       	movw	r30, r18
    1d1e:	ee 0f       	add	r30, r30
    1d20:	ff 1f       	adc	r31, r31
    1d22:	e8 5c       	subi	r30, 0xC8	; 200
    1d24:	fe 4f       	sbci	r31, 0xFE	; 254
    1d26:	20 81       	ld	r18, Z
    1d28:	31 81       	ldd	r19, Z+1	; 0x01
    1d2a:	02 c0       	rjmp	.+4      	; 0x1d30 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
    1d2c:	20 e0       	ldi	r18, 0x00	; 0
    1d2e:	30 e0       	ldi	r19, 0x00	; 0
    1d30:	87 30       	cpi	r24, 0x07	; 7
    1d32:	81 f0       	breq	.+32     	; 0x1d54 <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
    1d34:	08 2e       	mov	r0, r24
    1d36:	02 c0       	rjmp	.+4      	; 0x1d3c <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
    1d38:	22 0f       	add	r18, r18
    1d3a:	33 1f       	adc	r19, r19
    1d3c:	0a 94       	dec	r0
    1d3e:	e2 f7       	brpl	.-8      	; 0x1d38 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
    1d40:	82 30       	cpi	r24, 0x02	; 2
    1d42:	28 f0       	brcs	.+10     	; 0x1d4e <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
    1d44:	c9 01       	movw	r24, r18
    1d46:	05 96       	adiw	r24, 0x05	; 5
    1d48:	6a e0       	ldi	r22, 0x0A	; 10
    1d4a:	70 e0       	ldi	r23, 0x00	; 0
    1d4c:	0c c0       	rjmp	.+24     	; 0x1d66 <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
    1d4e:	c9 01       	movw	r24, r18
    1d50:	90 58       	subi	r25, 0x80	; 128
    1d52:	0c c0       	rjmp	.+24     	; 0x1d6c <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
    1d54:	c9 01       	movw	r24, r18
    1d56:	36 e0       	ldi	r19, 0x06	; 6
    1d58:	88 0f       	add	r24, r24
    1d5a:	99 1f       	adc	r25, r25
    1d5c:	3a 95       	dec	r19
    1d5e:	e1 f7       	brne	.-8      	; 0x1d58 <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
    1d60:	02 96       	adiw	r24, 0x02	; 2
    1d62:	65 e0       	ldi	r22, 0x05	; 5
    1d64:	70 e0       	ldi	r23, 0x00	; 0
    1d66:	0e 94 56 1a 	call	0x34ac	; 0x34ac <__udivmodhi4>
    1d6a:	cb 01       	movw	r24, r22
    1d6c:	40 31       	cpi	r20, 0x10	; 16
    1d6e:	08 f0       	brcs	.+2      	; 0x1d72 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
    1d70:	4f e0       	ldi	r20, 0x0F	; 15
    1d72:	be 01       	movw	r22, r28
    1d74:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    1d78:	df 91       	pop	r29
    1d7a:	cf 91       	pop	r28
    1d7c:	08 95       	ret

00001d7e <_ZL8nextNotev>:
    1d7e:	a2 e0       	ldi	r26, 0x02	; 2
    1d80:	b0 e0       	ldi	r27, 0x00	; 0
    1d82:	e5 ec       	ldi	r30, 0xC5	; 197
    1d84:	fe e0       	ldi	r31, 0x0E	; 14
    1d86:	0c 94 e9 1a 	jmp	0x35d2	; 0x35d2 <__prologue_saves__+0x4>
    1d8a:	90 90 0a 01 	lds	r9, 0x010A	; 0x80010a <_ZL6octave>
    1d8e:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <_ZL8staccato>
    1d92:	88 23       	and	r24, r24
    1d94:	21 f0       	breq	.+8      	; 0x1d9e <_ZL8nextNotev+0x20>
    1d96:	60 91 97 01 	lds	r22, 0x0197	; 0x800197 <_ZL22staccato_rest_duration>
    1d9a:	61 11       	cpse	r22, r1
    1d9c:	17 c0       	rjmp	.+46     	; 0x1dcc <_ZL8nextNotev+0x4e>
    1d9e:	77 24       	eor	r7, r7
    1da0:	73 94       	inc	r7
    1da2:	b0 ec       	ldi	r27, 0xC0	; 192
    1da4:	ab 2e       	mov	r10, r27
    1da6:	bd e5       	ldi	r27, 0x5D	; 93
    1da8:	bb 2e       	mov	r11, r27
    1daa:	1a e0       	ldi	r17, 0x0A	; 10
    1dac:	61 2e       	mov	r6, r17
    1dae:	04 e0       	ldi	r16, 0x04	; 4
    1db0:	80 2e       	mov	r8, r16
    1db2:	80 ed       	ldi	r24, 0xD0	; 208
    1db4:	c8 2e       	mov	r12, r24
    1db6:	87 e0       	ldi	r24, 0x07	; 7
    1db8:	d8 2e       	mov	r13, r24
    1dba:	94 e0       	ldi	r25, 0x04	; 4
    1dbc:	e9 2e       	mov	r14, r25
    1dbe:	f1 2c       	mov	r15, r1
    1dc0:	04 ef       	ldi	r16, 0xF4	; 244
    1dc2:	11 e0       	ldi	r17, 0x01	; 1
    1dc4:	2f e0       	ldi	r18, 0x0F	; 15
    1dc6:	42 2e       	mov	r4, r18
    1dc8:	51 2c       	mov	r5, r1
    1dca:	15 c0       	rjmp	.+42     	; 0x1df6 <_ZL8nextNotev+0x78>
    1dcc:	70 e0       	ldi	r23, 0x00	; 0
    1dce:	40 e0       	ldi	r20, 0x00	; 0
    1dd0:	88 ee       	ldi	r24, 0xE8	; 232
    1dd2:	93 e0       	ldi	r25, 0x03	; 3
    1dd4:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    1dd8:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_ZL22staccato_rest_duration>
    1ddc:	17 c1       	rjmp	.+558    	; 0x200c <_ZL8nextNotev+0x28e>
    1dde:	86 36       	cpi	r24, 0x66	; 102
    1de0:	d4 f5       	brge	.+116    	; 0x1e56 <_ZL8nextNotev+0xd8>
    1de2:	81 36       	cpi	r24, 0x61	; 97
    1de4:	09 f4       	brne	.+2      	; 0x1de8 <_ZL8nextNotev+0x6a>
    1de6:	a9 c0       	rjmp	.+338    	; 0x1f3a <_ZL8nextNotev+0x1bc>
    1de8:	7c f5       	brge	.+94     	; 0x1e48 <_ZL8nextNotev+0xca>
    1dea:	8c 33       	cpi	r24, 0x3C	; 60
    1dec:	09 f4       	brne	.+2      	; 0x1df0 <_ZL8nextNotev+0x72>
    1dee:	60 c0       	rjmp	.+192    	; 0x1eb0 <_ZL8nextNotev+0x132>
    1df0:	8e 33       	cpi	r24, 0x3E	; 62
    1df2:	81 f4       	brne	.+32     	; 0x1e14 <_ZL8nextNotev+0x96>
    1df4:	93 94       	inc	r9
    1df6:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <_ZL16currentCharacterv>
    1dfa:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    1dfe:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    1e02:	2f 5f       	subi	r18, 0xFF	; 255
    1e04:	3f 4f       	sbci	r19, 0xFF	; 255
    1e06:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    1e0a:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    1e0e:	85 36       	cpi	r24, 0x65	; 101
    1e10:	31 f7       	brne	.-52     	; 0x1dde <_ZL8nextNotev+0x60>
    1e12:	52 c0       	rjmp	.+164    	; 0x1eb8 <_ZL8nextNotev+0x13a>
    1e14:	81 32       	cpi	r24, 0x21	; 33
    1e16:	09 f0       	breq	.+2      	; 0x1e1a <_ZL8nextNotev+0x9c>
    1e18:	8b c0       	rjmp	.+278    	; 0x1f30 <_ZL8nextNotev+0x1b2>
    1e1a:	80 92 0a 01 	sts	0x010A, r8	; 0x80010a <_ZL6octave>
    1e1e:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <_ZL19whole_note_duration+0x1>
    1e22:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <_ZL19whole_note_duration>
    1e26:	f0 92 07 01 	sts	0x0107, r15	; 0x800107 <_ZL9note_type+0x1>
    1e2a:	e0 92 06 01 	sts	0x0106, r14	; 0x800106 <_ZL9note_type>
    1e2e:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <_ZL8duration+0x1>
    1e32:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <_ZL8duration>
    1e36:	50 92 03 01 	sts	0x0103, r5	; 0x800103 <_ZL6volume+0x1>
    1e3a:	40 92 02 01 	sts	0x0102, r4	; 0x800102 <_ZL6volume>
    1e3e:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <_ZL8staccato>
    1e42:	a4 e0       	ldi	r26, 0x04	; 4
    1e44:	9a 2e       	mov	r9, r26
    1e46:	d7 cf       	rjmp	.-82     	; 0x1df6 <_ZL8nextNotev+0x78>
    1e48:	83 36       	cpi	r24, 0x63	; 99
    1e4a:	a1 f1       	breq	.+104    	; 0x1eb4 <_ZL8nextNotev+0x136>
    1e4c:	0c f4       	brge	.+2      	; 0x1e50 <_ZL8nextNotev+0xd2>
    1e4e:	78 c0       	rjmp	.+240    	; 0x1f40 <_ZL8nextNotev+0x1c2>
    1e50:	10 e0       	ldi	r17, 0x00	; 0
    1e52:	82 e0       	ldi	r24, 0x02	; 2
    1e54:	77 c0       	rjmp	.+238    	; 0x1f44 <_ZL8nextNotev+0x1c6>
    1e56:	8d 36       	cpi	r24, 0x6D	; 109
    1e58:	c1 f1       	breq	.+112    	; 0x1eca <_ZL8nextNotev+0x14c>
    1e5a:	94 f4       	brge	.+36     	; 0x1e80 <_ZL8nextNotev+0x102>
    1e5c:	87 36       	cpi	r24, 0x67	; 103
    1e5e:	91 f1       	breq	.+100    	; 0x1ec4 <_ZL8nextNotev+0x146>
    1e60:	74 f1       	brlt	.+92     	; 0x1ebe <_ZL8nextNotev+0x140>
    1e62:	8c 36       	cpi	r24, 0x6C	; 108
    1e64:	09 f0       	breq	.+2      	; 0x1e68 <_ZL8nextNotev+0xea>
    1e66:	64 c0       	rjmp	.+200    	; 0x1f30 <_ZL8nextNotev+0x1b2>
    1e68:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <_ZL9getNumberv>
    1e6c:	bc 01       	movw	r22, r24
    1e6e:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_ZL9note_type+0x1>
    1e72:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_ZL9note_type>
    1e76:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    1e7a:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    1e7e:	51 c0       	rjmp	.+162    	; 0x1f22 <_ZL8nextNotev+0x1a4>
    1e80:	82 37       	cpi	r24, 0x72	; 114
    1e82:	c9 f1       	breq	.+114    	; 0x1ef6 <_ZL8nextNotev+0x178>
    1e84:	4c f4       	brge	.+18     	; 0x1e98 <_ZL8nextNotev+0x11a>
    1e86:	8f 36       	cpi	r24, 0x6F	; 111
    1e88:	09 f0       	breq	.+2      	; 0x1e8c <_ZL8nextNotev+0x10e>
    1e8a:	52 c0       	rjmp	.+164    	; 0x1f30 <_ZL8nextNotev+0x1b2>
    1e8c:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <_ZL9getNumberv>
    1e90:	98 2e       	mov	r9, r24
    1e92:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_ZL6octave>
    1e96:	af cf       	rjmp	.-162    	; 0x1df6 <_ZL8nextNotev+0x78>
    1e98:	84 37       	cpi	r24, 0x74	; 116
    1e9a:	81 f1       	breq	.+96     	; 0x1efc <_ZL8nextNotev+0x17e>
    1e9c:	86 37       	cpi	r24, 0x76	; 118
    1e9e:	09 f0       	breq	.+2      	; 0x1ea2 <_ZL8nextNotev+0x124>
    1ea0:	47 c0       	rjmp	.+142    	; 0x1f30 <_ZL8nextNotev+0x1b2>
    1ea2:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <_ZL9getNumberv>
    1ea6:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_ZL6volume+0x1>
    1eaa:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_ZL6volume>
    1eae:	a3 cf       	rjmp	.-186    	; 0x1df6 <_ZL8nextNotev+0x78>
    1eb0:	9a 94       	dec	r9
    1eb2:	a1 cf       	rjmp	.-190    	; 0x1df6 <_ZL8nextNotev+0x78>
    1eb4:	10 e0       	ldi	r17, 0x00	; 0
    1eb6:	20 c0       	rjmp	.+64     	; 0x1ef8 <_ZL8nextNotev+0x17a>
    1eb8:	10 e0       	ldi	r17, 0x00	; 0
    1eba:	84 e0       	ldi	r24, 0x04	; 4
    1ebc:	43 c0       	rjmp	.+134    	; 0x1f44 <_ZL8nextNotev+0x1c6>
    1ebe:	10 e0       	ldi	r17, 0x00	; 0
    1ec0:	85 e0       	ldi	r24, 0x05	; 5
    1ec2:	40 c0       	rjmp	.+128    	; 0x1f44 <_ZL8nextNotev+0x1c6>
    1ec4:	10 e0       	ldi	r17, 0x00	; 0
    1ec6:	87 e0       	ldi	r24, 0x07	; 7
    1ec8:	3d c0       	rjmp	.+122    	; 0x1f44 <_ZL8nextNotev+0x1c6>
    1eca:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <_ZL16currentCharacterv>
    1ece:	8c 36       	cpi	r24, 0x6C	; 108
    1ed0:	19 f4       	brne	.+6      	; 0x1ed8 <_ZL8nextNotev+0x15a>
    1ed2:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <_ZL8staccato>
    1ed6:	04 c0       	rjmp	.+8      	; 0x1ee0 <_ZL8nextNotev+0x162>
    1ed8:	70 92 98 01 	sts	0x0198, r7	; 0x800198 <_ZL8staccato>
    1edc:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_ZL22staccato_rest_duration>
    1ee0:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    1ee4:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    1ee8:	2f 5f       	subi	r18, 0xFF	; 255
    1eea:	3f 4f       	sbci	r19, 0xFF	; 255
    1eec:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    1ef0:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    1ef4:	80 cf       	rjmp	.-256    	; 0x1df6 <_ZL8nextNotev+0x78>
    1ef6:	11 e0       	ldi	r17, 0x01	; 1
    1ef8:	80 e0       	ldi	r24, 0x00	; 0
    1efa:	24 c0       	rjmp	.+72     	; 0x1f44 <_ZL8nextNotev+0x1c6>
    1efc:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <_ZL9getNumberv>
    1f00:	bc 01       	movw	r22, r24
    1f02:	c5 01       	movw	r24, r10
    1f04:	0e 94 56 1a 	call	0x34ac	; 0x34ac <__udivmodhi4>
    1f08:	66 9e       	mul	r6, r22
    1f0a:	c0 01       	movw	r24, r0
    1f0c:	67 9e       	mul	r6, r23
    1f0e:	90 0d       	add	r25, r0
    1f10:	11 24       	eor	r1, r1
    1f12:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_ZL19whole_note_duration+0x1>
    1f16:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_ZL19whole_note_duration>
    1f1a:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <_ZL9note_type>
    1f1e:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <_ZL9note_type+0x1>
    1f22:	0e 94 56 1a 	call	0x34ac	; 0x34ac <__udivmodhi4>
    1f26:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_ZL8duration+0x1>
    1f2a:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_ZL8duration>
    1f2e:	63 cf       	rjmp	.-314    	; 0x1df6 <_ZL8nextNotev+0x78>
    1f30:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <__data_end+0x1>
    1f34:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <__data_end>
    1f38:	69 c0       	rjmp	.+210    	; 0x200c <_ZL8nextNotev+0x28e>
    1f3a:	10 e0       	ldi	r17, 0x00	; 0
    1f3c:	89 e0       	ldi	r24, 0x09	; 9
    1f3e:	02 c0       	rjmp	.+4      	; 0x1f44 <_ZL8nextNotev+0x1c6>
    1f40:	10 e0       	ldi	r17, 0x00	; 0
    1f42:	8b e0       	ldi	r24, 0x0B	; 11
    1f44:	08 2f       	mov	r16, r24
    1f46:	9c e0       	ldi	r25, 0x0C	; 12
    1f48:	99 9e       	mul	r9, r25
    1f4a:	00 0d       	add	r16, r0
    1f4c:	11 24       	eor	r1, r1
    1f4e:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <_ZL16currentCharacterv>
    1f52:	98 2f       	mov	r25, r24
    1f54:	97 7f       	andi	r25, 0xF7	; 247
    1f56:	93 32       	cpi	r25, 0x23	; 35
    1f58:	61 f4       	brne	.+24     	; 0x1f72 <_ZL8nextNotev+0x1f4>
    1f5a:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    1f5e:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    1f62:	2f 5f       	subi	r18, 0xFF	; 255
    1f64:	3f 4f       	sbci	r19, 0xFF	; 255
    1f66:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    1f6a:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    1f6e:	0f 5f       	subi	r16, 0xFF	; 255
    1f70:	ee cf       	rjmp	.-36     	; 0x1f4e <_ZL8nextNotev+0x1d0>
    1f72:	8d 32       	cpi	r24, 0x2D	; 45
    1f74:	71 f4       	brne	.+28     	; 0x1f92 <_ZL8nextNotev+0x214>
    1f76:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    1f7a:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    1f7e:	2f 5f       	subi	r18, 0xFF	; 255
    1f80:	3f 4f       	sbci	r19, 0xFF	; 255
    1f82:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    1f86:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    1f8a:	01 50       	subi	r16, 0x01	; 1
    1f8c:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <_ZL16currentCharacterv>
    1f90:	f0 cf       	rjmp	.-32     	; 0x1f72 <_ZL8nextNotev+0x1f4>
    1f92:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <_ZL8duration>
    1f96:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <_ZL8duration+0x1>
    1f9a:	81 53       	subi	r24, 0x31	; 49
    1f9c:	88 30       	cpi	r24, 0x08	; 8
    1f9e:	50 f4       	brcc	.+20     	; 0x1fb4 <_ZL8nextNotev+0x236>
    1fa0:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    1fa4:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    1fa8:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <_ZL9getNumberv>
    1fac:	bc 01       	movw	r22, r24
    1fae:	c7 01       	movw	r24, r14
    1fb0:	0e 94 56 1a 	call	0x34ac	; 0x34ac <__udivmodhi4>
    1fb4:	7b 01       	movw	r14, r22
    1fb6:	f6 94       	lsr	r15
    1fb8:	e7 94       	ror	r14
    1fba:	69 83       	std	Y+1, r22	; 0x01
    1fbc:	7a 83       	std	Y+2, r23	; 0x02
    1fbe:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <_ZL16currentCharacterv>
    1fc2:	69 81       	ldd	r22, Y+1	; 0x01
    1fc4:	7a 81       	ldd	r23, Y+2	; 0x02
    1fc6:	8e 32       	cpi	r24, 0x2E	; 46
    1fc8:	69 f4       	brne	.+26     	; 0x1fe4 <_ZL8nextNotev+0x266>
    1fca:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    1fce:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    1fd2:	2f 5f       	subi	r18, 0xFF	; 255
    1fd4:	3f 4f       	sbci	r19, 0xFF	; 255
    1fd6:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    1fda:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    1fde:	6e 0d       	add	r22, r14
    1fe0:	7f 1d       	adc	r23, r15
    1fe2:	e9 cf       	rjmp	.-46     	; 0x1fb6 <_ZL8nextNotev+0x238>
    1fe4:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <_ZL8staccato>
    1fe8:	88 23       	and	r24, r24
    1fea:	39 f0       	breq	.+14     	; 0x1ffa <_ZL8nextNotev+0x27c>
    1fec:	9b 01       	movw	r18, r22
    1fee:	36 95       	lsr	r19
    1ff0:	27 95       	ror	r18
    1ff2:	20 93 97 01 	sts	0x0197, r18	; 0x800197 <_ZL22staccato_rest_duration>
    1ff6:	62 1b       	sub	r22, r18
    1ff8:	71 09       	sbc	r23, r1
    1ffa:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <_ZL6volume>
    1ffe:	11 23       	and	r17, r17
    2000:	11 f0       	breq	.+4      	; 0x2006 <_ZL8nextNotev+0x288>
    2002:	8f ef       	ldi	r24, 0xFF	; 255
    2004:	01 c0       	rjmp	.+2      	; 0x2008 <_ZL8nextNotev+0x28a>
    2006:	80 2f       	mov	r24, r16
    2008:	0e 94 6b 0e 	call	0x1cd6	; 0x1cd6 <_ZN15OrangutanBuzzer8playNoteEhjh>
    200c:	22 96       	adiw	r28, 0x02	; 2
    200e:	e0 e1       	ldi	r30, 0x10	; 16
    2010:	0c 94 05 1b 	jmp	0x360a	; 0x360a <__epilogue_restores__+0x4>

00002014 <__vector_13>:
    2014:	1f 92       	push	r1
    2016:	0f 92       	push	r0
    2018:	0f b6       	in	r0, 0x3f	; 63
    201a:	0f 92       	push	r0
    201c:	11 24       	eor	r1, r1
    201e:	2f 93       	push	r18
    2020:	3f 93       	push	r19
    2022:	4f 93       	push	r20
    2024:	5f 93       	push	r21
    2026:	6f 93       	push	r22
    2028:	7f 93       	push	r23
    202a:	8f 93       	push	r24
    202c:	9f 93       	push	r25
    202e:	af 93       	push	r26
    2030:	bf 93       	push	r27
    2032:	ef 93       	push	r30
    2034:	ff 93       	push	r31
    2036:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <_ZL13buzzerTimeout>
    203a:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <_ZL13buzzerTimeout+0x1>
    203e:	9c 01       	movw	r18, r24
    2040:	21 50       	subi	r18, 0x01	; 1
    2042:	31 09       	sbc	r19, r1
    2044:	30 93 9c 01 	sts	0x019C, r19	; 0x80019c <_ZL13buzzerTimeout+0x1>
    2048:	20 93 9b 01 	sts	0x019B, r18	; 0x80019b <_ZL13buzzerTimeout>
    204c:	89 2b       	or	r24, r25
    204e:	11 f5       	brne	.+68     	; 0x2094 <__vector_13+0x80>
    2050:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    2054:	78 94       	sei
    2056:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    205a:	88 7f       	andi	r24, 0xF8	; 248
    205c:	81 60       	ori	r24, 0x01	; 1
    205e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    2062:	80 e1       	ldi	r24, 0x10	; 16
    2064:	97 e2       	ldi	r25, 0x27	; 39
    2066:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    206a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    206e:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    2072:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    2076:	81 e0       	ldi	r24, 0x01	; 1
    2078:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <buzzerFinished>
    207c:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <__data_end>
    2080:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <__data_end+0x1>
    2084:	89 2b       	or	r24, r25
    2086:	31 f0       	breq	.+12     	; 0x2094 <__vector_13+0x80>
    2088:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <_ZL17play_mode_setting>
    208c:	81 11       	cpse	r24, r1
    208e:	02 c0       	rjmp	.+4      	; 0x2094 <__vector_13+0x80>
    2090:	0e 94 bf 0e 	call	0x1d7e	; 0x1d7e <_ZL8nextNotev>
    2094:	ff 91       	pop	r31
    2096:	ef 91       	pop	r30
    2098:	bf 91       	pop	r27
    209a:	af 91       	pop	r26
    209c:	9f 91       	pop	r25
    209e:	8f 91       	pop	r24
    20a0:	7f 91       	pop	r23
    20a2:	6f 91       	pop	r22
    20a4:	5f 91       	pop	r21
    20a6:	4f 91       	pop	r20
    20a8:	3f 91       	pop	r19
    20aa:	2f 91       	pop	r18
    20ac:	0f 90       	pop	r0
    20ae:	0f be       	out	0x3f, r0	; 63
    20b0:	0f 90       	pop	r0
    20b2:	1f 90       	pop	r1
    20b4:	18 95       	reti

000020b6 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    20b6:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    20ba:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <__data_end+0x1>
    20be:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <__data_end>
    20c2:	81 e0       	ldi	r24, 0x01	; 1
    20c4:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <_ZL17use_program_space>
    20c8:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_ZL22staccato_rest_duration>
    20cc:	0e 94 bf 0e 	call	0x1d7e	; 0x1d7e <_ZL8nextNotev>
    20d0:	08 95       	ret

000020d2 <play_from_program_space>:
    20d2:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    20d6:	08 95       	ret

000020d8 <delay_us.constprop.0>:
    20d8:	81 e0       	ldi	r24, 0x01	; 1
    20da:	90 e0       	ldi	r25, 0x00	; 0
    20dc:	6f 93       	push	r22
    20de:	64 e0       	ldi	r22, 0x04	; 4
    20e0:	6a 95       	dec	r22
    20e2:	f1 f7       	brne	.-4      	; 0x20e0 <delay_us.constprop.0+0x8>
    20e4:	6f 91       	pop	r22
    20e6:	01 97       	sbiw	r24, 0x01	; 1
    20e8:	c9 f7       	brne	.-14     	; 0x20dc <delay_us.constprop.0+0x4>
    20ea:	08 95       	ret

000020ec <_ZN12OrangutanLCD8busyWaitEv>:
    20ec:	0f 93       	push	r16
    20ee:	1f 93       	push	r17
    20f0:	cf 93       	push	r28
    20f2:	df 93       	push	r29
    20f4:	1a b1       	in	r17, 0x0a	; 10
    20f6:	57 98       	cbi	0x0a, 7	; 10
    20f8:	5a 98       	cbi	0x0b, 2	; 11
    20fa:	28 9a       	sbi	0x05, 0	; 5
    20fc:	c0 e0       	ldi	r28, 0x00	; 0
    20fe:	d0 e0       	ldi	r29, 0x00	; 0
    2100:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <delay_us.constprop.0>
    2104:	5c 9a       	sbi	0x0b, 4	; 11
    2106:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <delay_us.constprop.0>
    210a:	09 b1       	in	r16, 0x09	; 9
    210c:	5c 98       	cbi	0x0b, 4	; 11
    210e:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <delay_us.constprop.0>
    2112:	5c 9a       	sbi	0x0b, 4	; 11
    2114:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <delay_us.constprop.0>
    2118:	5c 98       	cbi	0x0b, 4	; 11
    211a:	24 96       	adiw	r28, 0x04	; 4
    211c:	07 ff       	sbrs	r16, 7
    211e:	10 c0       	rjmp	.+32     	; 0x2140 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    2120:	ae 01       	movw	r20, r28
    2122:	60 e0       	ldi	r22, 0x00	; 0
    2124:	70 e0       	ldi	r23, 0x00	; 0
    2126:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <lcdTimeout>
    212a:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <lcdTimeout+0x1>
    212e:	a0 91 9f 01 	lds	r26, 0x019F	; 0x80019f <lcdTimeout+0x2>
    2132:	b0 91 a0 01 	lds	r27, 0x01A0	; 0x8001a0 <lcdTimeout+0x3>
    2136:	48 17       	cp	r20, r24
    2138:	59 07       	cpc	r21, r25
    213a:	6a 07       	cpc	r22, r26
    213c:	7b 07       	cpc	r23, r27
    213e:	00 f3       	brcs	.-64     	; 0x2100 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    2140:	1a b9       	out	0x0a, r17	; 10
    2142:	df 91       	pop	r29
    2144:	cf 91       	pop	r28
    2146:	1f 91       	pop	r17
    2148:	0f 91       	pop	r16
    214a:	08 95       	ret

0000214c <_ZN12OrangutanLCD8sendDataEh>:
    214c:	95 b1       	in	r25, 0x05	; 5
    214e:	28 2f       	mov	r18, r24
    2150:	21 70       	andi	r18, 0x01	; 1
    2152:	30 e0       	ldi	r19, 0x00	; 0
    2154:	22 0f       	add	r18, r18
    2156:	33 1f       	adc	r19, r19
    2158:	48 2f       	mov	r20, r24
    215a:	46 70       	andi	r20, 0x06	; 6
    215c:	68 e0       	ldi	r22, 0x08	; 8
    215e:	46 9f       	mul	r20, r22
    2160:	a0 01       	movw	r20, r0
    2162:	11 24       	eor	r1, r1
    2164:	24 2b       	or	r18, r20
    2166:	9d 7c       	andi	r25, 0xCD	; 205
    2168:	29 2b       	or	r18, r25
    216a:	25 b9       	out	0x05, r18	; 5
    216c:	9b b1       	in	r25, 0x0b	; 11
    216e:	88 70       	andi	r24, 0x08	; 8
    2170:	82 95       	swap	r24
    2172:	80 7f       	andi	r24, 0xF0	; 240
    2174:	9f 77       	andi	r25, 0x7F	; 127
    2176:	89 2b       	or	r24, r25
    2178:	8b b9       	out	0x0b, r24	; 11
    217a:	5c 9a       	sbi	0x0b, 4	; 11
    217c:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <delay_us.constprop.0>
    2180:	5c 98       	cbi	0x0b, 4	; 11
    2182:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <delay_us.constprop.0>
    2186:	08 95       	ret

00002188 <_ZN12OrangutanLCD4sendEhhh>:
    2188:	a0 e0       	ldi	r26, 0x00	; 0
    218a:	b0 e0       	ldi	r27, 0x00	; 0
    218c:	ea ec       	ldi	r30, 0xCA	; 202
    218e:	f0 e1       	ldi	r31, 0x10	; 16
    2190:	0c 94 f2 1a 	jmp	0x35e4	; 0x35e4 <__prologue_saves__+0x16>
    2194:	c8 2f       	mov	r28, r24
    2196:	d6 2e       	mov	r13, r22
    2198:	e4 2e       	mov	r14, r20
    219a:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <_ZZN12OrangutanLCD4initEvE11initialized>
    219e:	81 11       	cpse	r24, r1
    21a0:	05 c0       	rjmp	.+10     	; 0x21ac <_ZN12OrangutanLCD4sendEhhh+0x24>
    21a2:	81 e0       	ldi	r24, 0x01	; 1
    21a4:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <_ZZN12OrangutanLCD4initEvE11initialized>
    21a8:	0e 94 0d 11 	call	0x221a	; 0x221a <_ZN12OrangutanLCD5init2Ev>
    21ac:	0e 94 76 10 	call	0x20ec	; 0x20ec <_ZN12OrangutanLCD8busyWaitEv>
    21b0:	14 b1       	in	r17, 0x04	; 4
    21b2:	d5 b1       	in	r29, 0x05	; 5
    21b4:	fa b0       	in	r15, 0x0a	; 10
    21b6:	0b b1       	in	r16, 0x0b	; 11
    21b8:	28 98       	cbi	0x05, 0	; 5
    21ba:	dd 20       	and	r13, r13
    21bc:	11 f0       	breq	.+4      	; 0x21c2 <_ZN12OrangutanLCD4sendEhhh+0x3a>
    21be:	5a 9a       	sbi	0x0b, 2	; 11
    21c0:	01 c0       	rjmp	.+2      	; 0x21c4 <_ZN12OrangutanLCD4sendEhhh+0x3c>
    21c2:	5a 98       	cbi	0x0b, 2	; 11
    21c4:	94 b1       	in	r25, 0x04	; 4
    21c6:	92 63       	ori	r25, 0x32	; 50
    21c8:	94 b9       	out	0x04, r25	; 4
    21ca:	57 9a       	sbi	0x0a, 7	; 10
    21cc:	81 e0       	ldi	r24, 0x01	; 1
    21ce:	e8 16       	cp	r14, r24
    21d0:	29 f0       	breq	.+10     	; 0x21dc <_ZN12OrangutanLCD4sendEhhh+0x54>
    21d2:	8c 2f       	mov	r24, r28
    21d4:	82 95       	swap	r24
    21d6:	8f 70       	andi	r24, 0x0F	; 15
    21d8:	0e 94 a6 10 	call	0x214c	; 0x214c <_ZN12OrangutanLCD8sendDataEh>
    21dc:	8c 2f       	mov	r24, r28
    21de:	8f 70       	andi	r24, 0x0F	; 15
    21e0:	0e 94 a6 10 	call	0x214c	; 0x214c <_ZN12OrangutanLCD8sendDataEh>
    21e4:	fa b8       	out	0x0a, r15	; 10
    21e6:	0b b9       	out	0x0b, r16	; 11
    21e8:	14 b9       	out	0x04, r17	; 4
    21ea:	d5 b9       	out	0x05, r29	; 5
    21ec:	cd b7       	in	r28, 0x3d	; 61
    21ee:	de b7       	in	r29, 0x3e	; 62
    21f0:	e7 e0       	ldi	r30, 0x07	; 7
    21f2:	0c 94 0e 1b 	jmp	0x361c	; 0x361c <__epilogue_restores__+0x16>

000021f6 <_ZN12OrangutanLCD8send_cmdEh>:
    21f6:	42 e0       	ldi	r20, 0x02	; 2
    21f8:	60 e0       	ldi	r22, 0x00	; 0
    21fa:	0e 94 c4 10 	call	0x2188	; 0x2188 <_ZN12OrangutanLCD4sendEhhh>
    21fe:	08 95       	ret

00002200 <_ZN12OrangutanLCD9send_dataEh>:
    2200:	42 e0       	ldi	r20, 0x02	; 2
    2202:	61 e0       	ldi	r22, 0x01	; 1
    2204:	0e 94 c4 10 	call	0x2188	; 0x2188 <_ZN12OrangutanLCD4sendEhhh>
    2208:	08 95       	ret

0000220a <print_character>:
    220a:	0e 94 00 11 	call	0x2200	; 0x2200 <_ZN12OrangutanLCD9send_dataEh>
    220e:	08 95       	ret

00002210 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    2210:	41 e0       	ldi	r20, 0x01	; 1
    2212:	60 e0       	ldi	r22, 0x00	; 0
    2214:	0e 94 c4 10 	call	0x2188	; 0x2188 <_ZN12OrangutanLCD4sendEhhh>
    2218:	08 95       	ret

0000221a <_ZN12OrangutanLCD5init2Ev>:
    221a:	80 e1       	ldi	r24, 0x10	; 16
    221c:	97 e2       	ldi	r25, 0x27	; 39
    221e:	a0 e0       	ldi	r26, 0x00	; 0
    2220:	b0 e0       	ldi	r27, 0x00	; 0
    2222:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <lcdTimeout>
    2226:	90 93 9e 01 	sts	0x019E, r25	; 0x80019e <lcdTimeout+0x1>
    222a:	a0 93 9f 01 	sts	0x019F, r26	; 0x80019f <lcdTimeout+0x2>
    222e:	b0 93 a0 01 	sts	0x01A0, r27	; 0x8001a0 <lcdTimeout+0x3>
    2232:	52 9a       	sbi	0x0a, 2	; 10
    2234:	20 9a       	sbi	0x04, 0	; 4
    2236:	54 9a       	sbi	0x0a, 4	; 10
    2238:	8e e1       	ldi	r24, 0x1E	; 30
    223a:	90 e0       	ldi	r25, 0x00	; 0
    223c:	0e 94 bb 14 	call	0x2976	; 0x2976 <delay_ms>
    2240:	83 e0       	ldi	r24, 0x03	; 3
    2242:	0e 94 08 11 	call	0x2210	; 0x2210 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    2246:	86 e0       	ldi	r24, 0x06	; 6
    2248:	90 e0       	ldi	r25, 0x00	; 0
    224a:	0e 94 bb 14 	call	0x2976	; 0x2976 <delay_ms>
    224e:	83 e0       	ldi	r24, 0x03	; 3
    2250:	0e 94 08 11 	call	0x2210	; 0x2210 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    2254:	82 e0       	ldi	r24, 0x02	; 2
    2256:	90 e0       	ldi	r25, 0x00	; 0
    2258:	0e 94 bb 14 	call	0x2976	; 0x2976 <delay_ms>
    225c:	83 e0       	ldi	r24, 0x03	; 3
    225e:	0e 94 08 11 	call	0x2210	; 0x2210 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    2262:	82 e0       	ldi	r24, 0x02	; 2
    2264:	90 e0       	ldi	r25, 0x00	; 0
    2266:	0e 94 bb 14 	call	0x2976	; 0x2976 <delay_ms>
    226a:	82 e0       	ldi	r24, 0x02	; 2
    226c:	0e 94 08 11 	call	0x2210	; 0x2210 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    2270:	82 e0       	ldi	r24, 0x02	; 2
    2272:	90 e0       	ldi	r25, 0x00	; 0
    2274:	0e 94 bb 14 	call	0x2976	; 0x2976 <delay_ms>
    2278:	88 e2       	ldi	r24, 0x28	; 40
    227a:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <_ZN12OrangutanLCD8send_cmdEh>
    227e:	88 e0       	ldi	r24, 0x08	; 8
    2280:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <_ZN12OrangutanLCD8send_cmdEh>
    2284:	81 e0       	ldi	r24, 0x01	; 1
    2286:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <_ZN12OrangutanLCD8send_cmdEh>
    228a:	86 e0       	ldi	r24, 0x06	; 6
    228c:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <_ZN12OrangutanLCD8send_cmdEh>
    2290:	8c e0       	ldi	r24, 0x0C	; 12
    2292:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <_ZN12OrangutanLCD8send_cmdEh>
    2296:	08 95       	ret

00002298 <_ZN12OrangutanLCD5clearEv>:
    2298:	81 e0       	ldi	r24, 0x01	; 1
    229a:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <_ZN12OrangutanLCD8send_cmdEh>
    229e:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <printf_chars>
    22a2:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <printf_chars+0x1>
    22a6:	89 2b       	or	r24, r25
    22a8:	f9 f0       	breq	.+62     	; 0x22e8 <_ZN12OrangutanLCD5clearEv+0x50>
    22aa:	60 e0       	ldi	r22, 0x00	; 0
    22ac:	a0 e2       	ldi	r26, 0x20	; 32
    22ae:	26 2f       	mov	r18, r22
    22b0:	30 e0       	ldi	r19, 0x00	; 0
    22b2:	70 91 0c 01 	lds	r23, 0x010C	; 0x80010c <numLCDCols>
    22b6:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <numLCDRows>
    22ba:	90 e0       	ldi	r25, 0x00	; 0
    22bc:	01 97       	sbiw	r24, 0x01	; 1
    22be:	78 9f       	mul	r23, r24
    22c0:	a0 01       	movw	r20, r0
    22c2:	79 9f       	mul	r23, r25
    22c4:	50 0d       	add	r21, r0
    22c6:	11 24       	eor	r1, r1
    22c8:	24 17       	cp	r18, r20
    22ca:	35 07       	cpc	r19, r21
    22cc:	4c f4       	brge	.+18     	; 0x22e0 <_ZN12OrangutanLCD5clearEv+0x48>
    22ce:	e0 91 a3 01 	lds	r30, 0x01A3	; 0x8001a3 <printf_chars>
    22d2:	f0 91 a4 01 	lds	r31, 0x01A4	; 0x8001a4 <printf_chars+0x1>
    22d6:	e2 0f       	add	r30, r18
    22d8:	f3 1f       	adc	r31, r19
    22da:	a0 83       	st	Z, r26
    22dc:	6f 5f       	subi	r22, 0xFF	; 255
    22de:	e7 cf       	rjmp	.-50     	; 0x22ae <_ZN12OrangutanLCD5clearEv+0x16>
    22e0:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <col>
    22e4:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <row>
    22e8:	08 95       	ret

000022ea <clear>:
    22ea:	0e 94 4c 11 	call	0x2298	; 0x2298 <_ZN12OrangutanLCD5clearEv>
    22ee:	08 95       	ret

000022f0 <_ZN12OrangutanLCD5printEPKc>:
    22f0:	cf 93       	push	r28
    22f2:	df 93       	push	r29
    22f4:	ec 01       	movw	r28, r24
    22f6:	89 91       	ld	r24, Y+
    22f8:	88 23       	and	r24, r24
    22fa:	19 f0       	breq	.+6      	; 0x2302 <_ZN12OrangutanLCD5printEPKc+0x12>
    22fc:	0e 94 00 11 	call	0x2200	; 0x2200 <_ZN12OrangutanLCD9send_dataEh>
    2300:	fa cf       	rjmp	.-12     	; 0x22f6 <_ZN12OrangutanLCD5printEPKc+0x6>
    2302:	df 91       	pop	r29
    2304:	cf 91       	pop	r28
    2306:	08 95       	ret

00002308 <print>:
    2308:	0e 94 78 11 	call	0x22f0	; 0x22f0 <_ZN12OrangutanLCD5printEPKc>
    230c:	08 95       	ret

0000230e <_ZN12OrangutanLCD5printEm>:
    230e:	aa e0       	ldi	r26, 0x0A	; 10
    2310:	b0 e0       	ldi	r27, 0x00	; 0
    2312:	ed e8       	ldi	r30, 0x8D	; 141
    2314:	f1 e1       	ldi	r31, 0x11	; 17
    2316:	0c 94 f1 1a 	jmp	0x35e2	; 0x35e2 <__prologue_saves__+0x14>
    231a:	1a e0       	ldi	r17, 0x0A	; 10
    231c:	5a e0       	ldi	r21, 0x0A	; 10
    231e:	c5 2e       	mov	r12, r21
    2320:	d1 2c       	mov	r13, r1
    2322:	e1 2c       	mov	r14, r1
    2324:	f1 2c       	mov	r15, r1
    2326:	06 2f       	mov	r16, r22
    2328:	a7 01       	movw	r20, r14
    232a:	96 01       	movw	r18, r12
    232c:	0e 94 7e 1a 	call	0x34fc	; 0x34fc <__udivmodsi4>
    2330:	ca 01       	movw	r24, r20
    2332:	b9 01       	movw	r22, r18
    2334:	11 50       	subi	r17, 0x01	; 1
    2336:	e1 e0       	ldi	r30, 0x01	; 1
    2338:	f0 e0       	ldi	r31, 0x00	; 0
    233a:	ec 0f       	add	r30, r28
    233c:	fd 1f       	adc	r31, r29
    233e:	e1 0f       	add	r30, r17
    2340:	f1 1d       	adc	r31, r1
    2342:	00 5d       	subi	r16, 0xD0	; 208
    2344:	2a e0       	ldi	r18, 0x0A	; 10
    2346:	62 9f       	mul	r22, r18
    2348:	00 19       	sub	r16, r0
    234a:	11 24       	eor	r1, r1
    234c:	00 83       	st	Z, r16
    234e:	61 15       	cp	r22, r1
    2350:	71 05       	cpc	r23, r1
    2352:	81 05       	cpc	r24, r1
    2354:	91 05       	cpc	r25, r1
    2356:	39 f7       	brne	.-50     	; 0x2326 <_ZN12OrangutanLCD5printEm+0x18>
    2358:	1a 30       	cpi	r17, 0x0A	; 10
    235a:	58 f4       	brcc	.+22     	; 0x2372 <_ZN12OrangutanLCD5printEm+0x64>
    235c:	e1 e0       	ldi	r30, 0x01	; 1
    235e:	f0 e0       	ldi	r31, 0x00	; 0
    2360:	ec 0f       	add	r30, r28
    2362:	fd 1f       	adc	r31, r29
    2364:	e1 0f       	add	r30, r17
    2366:	f1 1d       	adc	r31, r1
    2368:	80 81       	ld	r24, Z
    236a:	0e 94 00 11 	call	0x2200	; 0x2200 <_ZN12OrangutanLCD9send_dataEh>
    236e:	1f 5f       	subi	r17, 0xFF	; 255
    2370:	f3 cf       	rjmp	.-26     	; 0x2358 <_ZN12OrangutanLCD5printEm+0x4a>
    2372:	2a 96       	adiw	r28, 0x0a	; 10
    2374:	e8 e0       	ldi	r30, 0x08	; 8
    2376:	0c 94 0d 1b 	jmp	0x361a	; 0x361a <__epilogue_restores__+0x14>

0000237a <_ZN12OrangutanLCD5printEl>:
    237a:	cf 92       	push	r12
    237c:	df 92       	push	r13
    237e:	ef 92       	push	r14
    2380:	ff 92       	push	r15
    2382:	6b 01       	movw	r12, r22
    2384:	7c 01       	movw	r14, r24
    2386:	97 ff       	sbrs	r25, 7
    2388:	0b c0       	rjmp	.+22     	; 0x23a0 <_ZN12OrangutanLCD5printEl+0x26>
    238a:	f0 94       	com	r15
    238c:	e0 94       	com	r14
    238e:	d0 94       	com	r13
    2390:	c0 94       	com	r12
    2392:	c1 1c       	adc	r12, r1
    2394:	d1 1c       	adc	r13, r1
    2396:	e1 1c       	adc	r14, r1
    2398:	f1 1c       	adc	r15, r1
    239a:	8d e2       	ldi	r24, 0x2D	; 45
    239c:	0e 94 00 11 	call	0x2200	; 0x2200 <_ZN12OrangutanLCD9send_dataEh>
    23a0:	c7 01       	movw	r24, r14
    23a2:	b6 01       	movw	r22, r12
    23a4:	0e 94 87 11 	call	0x230e	; 0x230e <_ZN12OrangutanLCD5printEm>
    23a8:	ff 90       	pop	r15
    23aa:	ef 90       	pop	r14
    23ac:	df 90       	pop	r13
    23ae:	cf 90       	pop	r12
    23b0:	08 95       	ret

000023b2 <print_long>:
    23b2:	0e 94 bd 11 	call	0x237a	; 0x237a <_ZN12OrangutanLCD5printEl>
    23b6:	08 95       	ret

000023b8 <_ZN12OrangutanLCD6gotoXYEhh>:
    23b8:	a5 e0       	ldi	r26, 0x05	; 5
    23ba:	b0 e0       	ldi	r27, 0x00	; 0
    23bc:	e2 ee       	ldi	r30, 0xE2	; 226
    23be:	f1 e1       	ldi	r31, 0x11	; 17
    23c0:	0c 94 f6 1a 	jmp	0x35ec	; 0x35ec <__prologue_saves__+0x1e>
    23c4:	18 2f       	mov	r17, r24
    23c6:	80 e8       	ldi	r24, 0x80	; 128
    23c8:	89 83       	std	Y+1, r24	; 0x01
    23ca:	80 ec       	ldi	r24, 0xC0	; 192
    23cc:	8a 83       	std	Y+2, r24	; 0x02
    23ce:	84 e9       	ldi	r24, 0x94	; 148
    23d0:	8b 83       	std	Y+3, r24	; 0x03
    23d2:	84 ed       	ldi	r24, 0xD4	; 212
    23d4:	8c 83       	std	Y+4, r24	; 0x04
    23d6:	fe 01       	movw	r30, r28
    23d8:	e6 0f       	add	r30, r22
    23da:	f1 1d       	adc	r31, r1
    23dc:	81 81       	ldd	r24, Z+1	; 0x01
    23de:	81 0f       	add	r24, r17
    23e0:	6d 83       	std	Y+5, r22	; 0x05
    23e2:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <_ZN12OrangutanLCD8send_cmdEh>
    23e6:	10 93 a1 01 	sts	0x01A1, r17	; 0x8001a1 <col>
    23ea:	6d 81       	ldd	r22, Y+5	; 0x05
    23ec:	60 93 a2 01 	sts	0x01A2, r22	; 0x8001a2 <row>
    23f0:	25 96       	adiw	r28, 0x05	; 5
    23f2:	e3 e0       	ldi	r30, 0x03	; 3
    23f4:	0c 94 12 1b 	jmp	0x3624	; 0x3624 <__epilogue_restores__+0x1e>

000023f8 <lcd_goto_xy>:
    23f8:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <_ZN12OrangutanLCD6gotoXYEhh>
    23fc:	08 95       	ret

000023fe <_ZN16OrangutanDigital9setOutputEhh>:
    23fe:	88 30       	cpi	r24, 0x08	; 8
    2400:	58 f4       	brcc	.+22     	; 0x2418 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    2402:	91 e0       	ldi	r25, 0x01	; 1
    2404:	01 c0       	rjmp	.+2      	; 0x2408 <_ZN16OrangutanDigital9setOutputEhh+0xa>
    2406:	99 0f       	add	r25, r25
    2408:	8a 95       	dec	r24
    240a:	ea f7       	brpl	.-6      	; 0x2406 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    240c:	89 2f       	mov	r24, r25
    240e:	aa e2       	ldi	r26, 0x2A	; 42
    2410:	b0 e0       	ldi	r27, 0x00	; 0
    2412:	eb e2       	ldi	r30, 0x2B	; 43
    2414:	f0 e0       	ldi	r31, 0x00	; 0
    2416:	21 c0       	rjmp	.+66     	; 0x245a <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    2418:	8e 30       	cpi	r24, 0x0E	; 14
    241a:	60 f4       	brcc	.+24     	; 0x2434 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    241c:	98 ef       	ldi	r25, 0xF8	; 248
    241e:	98 0f       	add	r25, r24
    2420:	81 e0       	ldi	r24, 0x01	; 1
    2422:	01 c0       	rjmp	.+2      	; 0x2426 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    2424:	88 0f       	add	r24, r24
    2426:	9a 95       	dec	r25
    2428:	ea f7       	brpl	.-6      	; 0x2424 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    242a:	a4 e2       	ldi	r26, 0x24	; 36
    242c:	b0 e0       	ldi	r27, 0x00	; 0
    242e:	e5 e2       	ldi	r30, 0x25	; 37
    2430:	f0 e0       	ldi	r31, 0x00	; 0
    2432:	13 c0       	rjmp	.+38     	; 0x245a <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    2434:	85 31       	cpi	r24, 0x15	; 21
    2436:	60 f4       	brcc	.+24     	; 0x2450 <_ZN16OrangutanDigital9setOutputEhh+0x52>
    2438:	92 ef       	ldi	r25, 0xF2	; 242
    243a:	98 0f       	add	r25, r24
    243c:	81 e0       	ldi	r24, 0x01	; 1
    243e:	01 c0       	rjmp	.+2      	; 0x2442 <_ZN16OrangutanDigital9setOutputEhh+0x44>
    2440:	88 0f       	add	r24, r24
    2442:	9a 95       	dec	r25
    2444:	ea f7       	brpl	.-6      	; 0x2440 <_ZN16OrangutanDigital9setOutputEhh+0x42>
    2446:	a7 e2       	ldi	r26, 0x27	; 39
    2448:	b0 e0       	ldi	r27, 0x00	; 0
    244a:	e8 e2       	ldi	r30, 0x28	; 40
    244c:	f0 e0       	ldi	r31, 0x00	; 0
    244e:	05 c0       	rjmp	.+10     	; 0x245a <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    2450:	80 e0       	ldi	r24, 0x00	; 0
    2452:	a0 e0       	ldi	r26, 0x00	; 0
    2454:	b0 e0       	ldi	r27, 0x00	; 0
    2456:	e0 e0       	ldi	r30, 0x00	; 0
    2458:	f0 e0       	ldi	r31, 0x00	; 0
    245a:	6f 3f       	cpi	r22, 0xFF	; 255
    245c:	19 f4       	brne	.+6      	; 0x2464 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    245e:	90 81       	ld	r25, Z
    2460:	98 27       	eor	r25, r24
    2462:	09 c0       	rjmp	.+18     	; 0x2476 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    2464:	66 23       	and	r22, r22
    2466:	19 f0       	breq	.+6      	; 0x246e <_ZN16OrangutanDigital9setOutputEhh+0x70>
    2468:	90 81       	ld	r25, Z
    246a:	98 2b       	or	r25, r24
    246c:	04 c0       	rjmp	.+8      	; 0x2476 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    246e:	20 81       	ld	r18, Z
    2470:	98 2f       	mov	r25, r24
    2472:	90 95       	com	r25
    2474:	92 23       	and	r25, r18
    2476:	90 83       	st	Z, r25
    2478:	9c 91       	ld	r25, X
    247a:	98 2b       	or	r25, r24
    247c:	9c 93       	st	X, r25
    247e:	08 95       	ret

00002480 <_ZN15OrangutanMotors5init2Ev>:
    2480:	83 ef       	ldi	r24, 0xF3	; 243
    2482:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2486:	84 bd       	out	0x24, r24	; 36
    2488:	82 e0       	ldi	r24, 0x02	; 2
    248a:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    248e:	85 bd       	out	0x25, r24	; 37
    2490:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    2494:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    2498:	18 bc       	out	0x28, r1	; 40
    249a:	17 bc       	out	0x27, r1	; 39
    249c:	60 e0       	ldi	r22, 0x00	; 0
    249e:	86 e0       	ldi	r24, 0x06	; 6
    24a0:	0e 94 ff 11 	call	0x23fe	; 0x23fe <_ZN16OrangutanDigital9setOutputEhh>
    24a4:	60 e0       	ldi	r22, 0x00	; 0
    24a6:	85 e0       	ldi	r24, 0x05	; 5
    24a8:	0e 94 ff 11 	call	0x23fe	; 0x23fe <_ZN16OrangutanDigital9setOutputEhh>
    24ac:	60 e0       	ldi	r22, 0x00	; 0
    24ae:	8b e0       	ldi	r24, 0x0B	; 11
    24b0:	0e 94 ff 11 	call	0x23fe	; 0x23fe <_ZN16OrangutanDigital9setOutputEhh>
    24b4:	60 e0       	ldi	r22, 0x00	; 0
    24b6:	83 e0       	ldi	r24, 0x03	; 3
    24b8:	0e 94 ff 11 	call	0x23fe	; 0x23fe <_ZN16OrangutanDigital9setOutputEhh>
    24bc:	08 95       	ret

000024be <_ZN15OrangutanMotors4initEv>:
    24be:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <_ZZN15OrangutanMotors4initEvE11initialized>
    24c2:	81 11       	cpse	r24, r1
    24c4:	05 c0       	rjmp	.+10     	; 0x24d0 <_ZN15OrangutanMotors4initEv+0x12>
    24c6:	81 e0       	ldi	r24, 0x01	; 1
    24c8:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <_ZZN15OrangutanMotors4initEvE11initialized>
    24cc:	0e 94 40 12 	call	0x2480	; 0x2480 <_ZN15OrangutanMotors5init2Ev>
    24d0:	08 95       	ret

000024d2 <_ZN15OrangutanMotors10setM1SpeedEi>:
    24d2:	cf 93       	push	r28
    24d4:	df 93       	push	r29
    24d6:	ec 01       	movw	r28, r24
    24d8:	0e 94 5f 12 	call	0x24be	; 0x24be <_ZN15OrangutanMotors4initEv>
    24dc:	d7 ff       	sbrs	r29, 7
    24de:	05 c0       	rjmp	.+10     	; 0x24ea <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    24e0:	d1 95       	neg	r29
    24e2:	c1 95       	neg	r28
    24e4:	d1 09       	sbc	r29, r1
    24e6:	81 e0       	ldi	r24, 0x01	; 1
    24e8:	01 c0       	rjmp	.+2      	; 0x24ec <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    24ea:	80 e0       	ldi	r24, 0x00	; 0
    24ec:	cf 3f       	cpi	r28, 0xFF	; 255
    24ee:	d1 05       	cpc	r29, r1
    24f0:	19 f0       	breq	.+6      	; 0x24f8 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    24f2:	14 f0       	brlt	.+4      	; 0x24f8 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    24f4:	cf ef       	ldi	r28, 0xFF	; 255
    24f6:	d0 e0       	ldi	r29, 0x00	; 0
    24f8:	88 23       	and	r24, r24
    24fa:	19 f0       	breq	.+6      	; 0x2502 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    24fc:	18 bc       	out	0x28, r1	; 40
    24fe:	c7 bd       	out	0x27, r28	; 39
    2500:	02 c0       	rjmp	.+4      	; 0x2506 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    2502:	c8 bd       	out	0x28, r28	; 40
    2504:	17 bc       	out	0x27, r1	; 39
    2506:	df 91       	pop	r29
    2508:	cf 91       	pop	r28
    250a:	08 95       	ret

0000250c <_ZN15OrangutanMotors10setM2SpeedEi>:
    250c:	cf 93       	push	r28
    250e:	df 93       	push	r29
    2510:	ec 01       	movw	r28, r24
    2512:	0e 94 5f 12 	call	0x24be	; 0x24be <_ZN15OrangutanMotors4initEv>
    2516:	d7 ff       	sbrs	r29, 7
    2518:	05 c0       	rjmp	.+10     	; 0x2524 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    251a:	d1 95       	neg	r29
    251c:	c1 95       	neg	r28
    251e:	d1 09       	sbc	r29, r1
    2520:	81 e0       	ldi	r24, 0x01	; 1
    2522:	01 c0       	rjmp	.+2      	; 0x2526 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    2524:	80 e0       	ldi	r24, 0x00	; 0
    2526:	cf 3f       	cpi	r28, 0xFF	; 255
    2528:	d1 05       	cpc	r29, r1
    252a:	19 f0       	breq	.+6      	; 0x2532 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    252c:	14 f0       	brlt	.+4      	; 0x2532 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    252e:	cf ef       	ldi	r28, 0xFF	; 255
    2530:	d0 e0       	ldi	r29, 0x00	; 0
    2532:	88 23       	and	r24, r24
    2534:	29 f0       	breq	.+10     	; 0x2540 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    2536:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    253a:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    253e:	04 c0       	rjmp	.+8      	; 0x2548 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    2540:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    2544:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    2548:	df 91       	pop	r29
    254a:	cf 91       	pop	r28
    254c:	08 95       	ret

0000254e <_ZN15OrangutanMotors9setSpeedsEii>:
    254e:	cf 93       	push	r28
    2550:	df 93       	push	r29
    2552:	eb 01       	movw	r28, r22
    2554:	0e 94 69 12 	call	0x24d2	; 0x24d2 <_ZN15OrangutanMotors10setM1SpeedEi>
    2558:	ce 01       	movw	r24, r28
    255a:	0e 94 86 12 	call	0x250c	; 0x250c <_ZN15OrangutanMotors10setM2SpeedEi>
    255e:	df 91       	pop	r29
    2560:	cf 91       	pop	r28
    2562:	08 95       	ret

00002564 <set_motors>:
    2564:	0e 94 a7 12 	call	0x254e	; 0x254e <_ZN15OrangutanMotors9setSpeedsEii>
    2568:	08 95       	ret

0000256a <_ZN20OrangutanPushbuttons5init2Ev>:
    256a:	84 b1       	in	r24, 0x04	; 4
    256c:	8d 7c       	andi	r24, 0xCD	; 205
    256e:	84 b9       	out	0x04, r24	; 4
    2570:	85 b1       	in	r24, 0x05	; 5
    2572:	82 63       	ori	r24, 0x32	; 50
    2574:	85 b9       	out	0x05, r24	; 5
    2576:	85 e0       	ldi	r24, 0x05	; 5
    2578:	90 e0       	ldi	r25, 0x00	; 0
    257a:	6f 93       	push	r22
    257c:	64 e0       	ldi	r22, 0x04	; 4
    257e:	6a 95       	dec	r22
    2580:	f1 f7       	brne	.-4      	; 0x257e <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    2582:	6f 91       	pop	r22
    2584:	01 97       	sbiw	r24, 0x01	; 1
    2586:	c9 f7       	brne	.-14     	; 0x257a <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    2588:	08 95       	ret

0000258a <_ZN20OrangutanPushbuttons4initEv>:
    258a:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    258e:	81 11       	cpse	r24, r1
    2590:	05 c0       	rjmp	.+10     	; 0x259c <_ZN20OrangutanPushbuttons4initEv+0x12>
    2592:	81 e0       	ldi	r24, 0x01	; 1
    2594:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    2598:	0e 94 b5 12 	call	0x256a	; 0x256a <_ZN20OrangutanPushbuttons5init2Ev>
    259c:	08 95       	ret

0000259e <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    259e:	cf 93       	push	r28
    25a0:	c8 2f       	mov	r28, r24
    25a2:	0e 94 c5 12 	call	0x258a	; 0x258a <_ZN20OrangutanPushbuttons4initEv>
    25a6:	83 b1       	in	r24, 0x03	; 3
    25a8:	8c 23       	and	r24, r28
    25aa:	e9 f3       	breq	.-6      	; 0x25a6 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    25ac:	8a e0       	ldi	r24, 0x0A	; 10
    25ae:	90 e0       	ldi	r25, 0x00	; 0
    25b0:	0e 94 bb 14 	call	0x2976	; 0x2976 <delay_ms>
    25b4:	83 b1       	in	r24, 0x03	; 3
    25b6:	8c 23       	and	r24, r28
    25b8:	b1 f3       	breq	.-20     	; 0x25a6 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    25ba:	83 b1       	in	r24, 0x03	; 3
    25bc:	8c 23       	and	r24, r28
    25be:	cf 91       	pop	r28
    25c0:	08 95       	ret

000025c2 <wait_for_button_release>:
    25c2:	0e 94 cf 12 	call	0x259e	; 0x259e <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    25c6:	08 95       	ret

000025c8 <_ZN20OrangutanPushbuttons9isPressedEh>:
    25c8:	a1 e0       	ldi	r26, 0x01	; 1
    25ca:	b0 e0       	ldi	r27, 0x00	; 0
    25cc:	ea ee       	ldi	r30, 0xEA	; 234
    25ce:	f2 e1       	ldi	r31, 0x12	; 18
    25d0:	0c 94 f7 1a 	jmp	0x35ee	; 0x35ee <__prologue_saves__+0x20>
    25d4:	89 83       	std	Y+1, r24	; 0x01
    25d6:	0e 94 c5 12 	call	0x258a	; 0x258a <_ZN20OrangutanPushbuttons4initEv>
    25da:	93 b1       	in	r25, 0x03	; 3
    25dc:	90 95       	com	r25
    25de:	89 81       	ldd	r24, Y+1	; 0x01
    25e0:	89 23       	and	r24, r25
    25e2:	21 96       	adiw	r28, 0x01	; 1
    25e4:	e2 e0       	ldi	r30, 0x02	; 2
    25e6:	0c 94 13 1b 	jmp	0x3626	; 0x3626 <__epilogue_restores__+0x20>

000025ea <button_is_pressed>:
    25ea:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <_ZN20OrangutanPushbuttons9isPressedEh>
    25ee:	08 95       	ret

000025f0 <serial_receive_buffer_full>:
    25f0:	20 91 a7 01 	lds	r18, 0x01A7	; 0x8001a7 <_ZN15OrangutanSerial5portsE+0x2>
    25f4:	81 e0       	ldi	r24, 0x01	; 1
    25f6:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <_ZN15OrangutanSerial5portsE+0x4>
    25fa:	29 13       	cpse	r18, r25
    25fc:	80 e0       	ldi	r24, 0x00	; 0
    25fe:	08 95       	ret

00002600 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
    2600:	28 2f       	mov	r18, r24
    2602:	30 e0       	ldi	r19, 0x00	; 0
    2604:	9a e0       	ldi	r25, 0x0A	; 10
    2606:	89 9f       	mul	r24, r25
    2608:	f0 01       	movw	r30, r0
    260a:	11 24       	eor	r1, r1
    260c:	eb 55       	subi	r30, 0x5B	; 91
    260e:	fe 4f       	sbci	r31, 0xFE	; 254
    2610:	80 85       	ldd	r24, Z+8	; 0x08
    2612:	91 85       	ldd	r25, Z+9	; 0x09
    2614:	00 97       	sbiw	r24, 0x00	; 0
    2616:	21 f0       	breq	.+8      	; 0x2620 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    2618:	52 81       	ldd	r21, Z+2	; 0x02
    261a:	44 81       	ldd	r20, Z+4	; 0x04
    261c:	54 17       	cp	r21, r20
    261e:	80 f0       	brcs	.+32     	; 0x2640 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x40>
    2620:	8a e0       	ldi	r24, 0x0A	; 10
    2622:	82 9f       	mul	r24, r18
    2624:	f0 01       	movw	r30, r0
    2626:	83 9f       	mul	r24, r19
    2628:	f0 0d       	add	r31, r0
    262a:	11 24       	eor	r1, r1
    262c:	eb 55       	subi	r30, 0x5B	; 91
    262e:	fe 4f       	sbci	r31, 0xFE	; 254
    2630:	92 81       	ldd	r25, Z+2	; 0x02
    2632:	84 81       	ldd	r24, Z+4	; 0x04
    2634:	98 13       	cpse	r25, r24
    2636:	0e c0       	rjmp	.+28     	; 0x2654 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x54>
    2638:	85 81       	ldd	r24, Z+5	; 0x05
    263a:	81 11       	cpse	r24, r1
    263c:	0a c0       	rjmp	.+20     	; 0x2652 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
    263e:	08 95       	ret
    2640:	42 81       	ldd	r20, Z+2	; 0x02
    2642:	dc 01       	movw	r26, r24
    2644:	a4 0f       	add	r26, r20
    2646:	b1 1d       	adc	r27, r1
    2648:	6c 93       	st	X, r22
    264a:	82 81       	ldd	r24, Z+2	; 0x02
    264c:	8f 5f       	subi	r24, 0xFF	; 255
    264e:	82 83       	std	Z+2, r24	; 0x02
    2650:	e7 cf       	rjmp	.-50     	; 0x2620 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    2652:	12 82       	std	Z+2, r1	; 0x02
    2654:	08 95       	ret

00002656 <_ZN15OrangutanSerial15serial_rx_checkEh>:
    2656:	cf 93       	push	r28
    2658:	df 93       	push	r29
    265a:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    265e:	9f 77       	andi	r25, 0x7F	; 127
    2660:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2664:	c8 2f       	mov	r28, r24
    2666:	d0 e0       	ldi	r29, 0x00	; 0
    2668:	9a e0       	ldi	r25, 0x0A	; 10
    266a:	89 9f       	mul	r24, r25
    266c:	f0 01       	movw	r30, r0
    266e:	11 24       	eor	r1, r1
    2670:	eb 55       	subi	r30, 0x5B	; 91
    2672:	fe 4f       	sbci	r31, 0xFE	; 254
    2674:	20 85       	ldd	r18, Z+8	; 0x08
    2676:	31 85       	ldd	r19, Z+9	; 0x09
    2678:	23 2b       	or	r18, r19
    267a:	41 f0       	breq	.+16     	; 0x268c <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    267c:	22 81       	ldd	r18, Z+2	; 0x02
    267e:	94 81       	ldd	r25, Z+4	; 0x04
    2680:	29 17       	cp	r18, r25
    2682:	20 f4       	brcc	.+8      	; 0x268c <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2684:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2688:	97 fd       	sbrc	r25, 7
    268a:	11 c0       	rjmp	.+34     	; 0x26ae <_ZN15OrangutanSerial15serial_rx_checkEh+0x58>
    268c:	8a e0       	ldi	r24, 0x0A	; 10
    268e:	8c 9f       	mul	r24, r28
    2690:	f0 01       	movw	r30, r0
    2692:	8d 9f       	mul	r24, r29
    2694:	f0 0d       	add	r31, r0
    2696:	11 24       	eor	r1, r1
    2698:	eb 55       	subi	r30, 0x5B	; 91
    269a:	fe 4f       	sbci	r31, 0xFE	; 254
    269c:	80 81       	ld	r24, Z
    269e:	81 11       	cpse	r24, r1
    26a0:	0b c0       	rjmp	.+22     	; 0x26b8 <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    26a2:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    26a6:	80 68       	ori	r24, 0x80	; 128
    26a8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    26ac:	05 c0       	rjmp	.+10     	; 0x26b8 <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    26ae:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    26b2:	0e 94 00 13 	call	0x2600	; 0x2600 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    26b6:	ea cf       	rjmp	.-44     	; 0x268c <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    26b8:	df 91       	pop	r29
    26ba:	cf 91       	pop	r28
    26bc:	08 95       	ret

000026be <_ZN15OrangutanSerial14receive_inlineEhPchh>:
    26be:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    26c2:	9f 77       	andi	r25, 0x7F	; 127
    26c4:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    26c8:	9a e0       	ldi	r25, 0x0A	; 10
    26ca:	89 9f       	mul	r24, r25
    26cc:	f0 01       	movw	r30, r0
    26ce:	11 24       	eor	r1, r1
    26d0:	eb 55       	subi	r30, 0x5B	; 91
    26d2:	fe 4f       	sbci	r31, 0xFE	; 254
    26d4:	71 87       	std	Z+9, r23	; 0x09
    26d6:	60 87       	std	Z+8, r22	; 0x08
    26d8:	12 82       	std	Z+2, r1	; 0x02
    26da:	44 83       	std	Z+4, r20	; 0x04
    26dc:	25 83       	std	Z+5, r18	; 0x05
    26de:	80 81       	ld	r24, Z
    26e0:	81 11       	cpse	r24, r1
    26e2:	05 c0       	rjmp	.+10     	; 0x26ee <_ZN15OrangutanSerial14receive_inlineEhPchh+0x30>
    26e4:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    26e8:	80 68       	ori	r24, 0x80	; 128
    26ea:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    26ee:	08 95       	ret

000026f0 <_ZN15OrangutanSerial7receiveEPch>:
    26f0:	46 2f       	mov	r20, r22
    26f2:	20 e0       	ldi	r18, 0x00	; 0
    26f4:	bc 01       	movw	r22, r24
    26f6:	80 e0       	ldi	r24, 0x00	; 0
    26f8:	0e 94 5f 13 	call	0x26be	; 0x26be <_ZN15OrangutanSerial14receive_inlineEhPchh>
    26fc:	08 95       	ret

000026fe <serial_receive>:
    26fe:	0e 94 78 13 	call	0x26f0	; 0x26f0 <_ZN15OrangutanSerial7receiveEPch>
    2702:	08 95       	ret

00002704 <__vector_18>:
    2704:	1f 92       	push	r1
    2706:	0f 92       	push	r0
    2708:	0f b6       	in	r0, 0x3f	; 63
    270a:	0f 92       	push	r0
    270c:	11 24       	eor	r1, r1
    270e:	2f 93       	push	r18
    2710:	3f 93       	push	r19
    2712:	4f 93       	push	r20
    2714:	5f 93       	push	r21
    2716:	6f 93       	push	r22
    2718:	7f 93       	push	r23
    271a:	8f 93       	push	r24
    271c:	9f 93       	push	r25
    271e:	af 93       	push	r26
    2720:	bf 93       	push	r27
    2722:	ef 93       	push	r30
    2724:	ff 93       	push	r31
    2726:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    272a:	80 e0       	ldi	r24, 0x00	; 0
    272c:	0e 94 00 13 	call	0x2600	; 0x2600 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    2730:	ff 91       	pop	r31
    2732:	ef 91       	pop	r30
    2734:	bf 91       	pop	r27
    2736:	af 91       	pop	r26
    2738:	9f 91       	pop	r25
    273a:	8f 91       	pop	r24
    273c:	7f 91       	pop	r23
    273e:	6f 91       	pop	r22
    2740:	5f 91       	pop	r21
    2742:	4f 91       	pop	r20
    2744:	3f 91       	pop	r19
    2746:	2f 91       	pop	r18
    2748:	0f 90       	pop	r0
    274a:	0f be       	out	0x3f, r0	; 63
    274c:	0f 90       	pop	r0
    274e:	1f 90       	pop	r1
    2750:	18 95       	reti

00002752 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    2752:	9a e0       	ldi	r25, 0x0A	; 10
    2754:	89 9f       	mul	r24, r25
    2756:	f0 01       	movw	r30, r0
    2758:	11 24       	eor	r1, r1
    275a:	eb 55       	subi	r30, 0x5B	; 91
    275c:	fe 4f       	sbci	r31, 0xFE	; 254
    275e:	86 81       	ldd	r24, Z+6	; 0x06
    2760:	97 81       	ldd	r25, Z+7	; 0x07
    2762:	89 2b       	or	r24, r25
    2764:	59 f0       	breq	.+22     	; 0x277c <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2766:	91 81       	ldd	r25, Z+1	; 0x01
    2768:	83 81       	ldd	r24, Z+3	; 0x03
    276a:	98 17       	cp	r25, r24
    276c:	38 f4       	brcc	.+14     	; 0x277c <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    276e:	80 81       	ld	r24, Z
    2770:	81 11       	cpse	r24, r1
    2772:	04 c0       	rjmp	.+8      	; 0x277c <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2774:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2778:	80 62       	ori	r24, 0x20	; 32
    277a:	03 c0       	rjmp	.+6      	; 0x2782 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x30>
    277c:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2780:	8f 7d       	andi	r24, 0xDF	; 223
    2782:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2786:	08 95       	ret

00002788 <_ZN15OrangutanSerial15initUART_inlineEh>:
    2788:	9a e0       	ldi	r25, 0x0A	; 10
    278a:	89 9f       	mul	r24, r25
    278c:	f0 01       	movw	r30, r0
    278e:	11 24       	eor	r1, r1
    2790:	eb 55       	subi	r30, 0x5B	; 91
    2792:	fe 4f       	sbci	r31, 0xFE	; 254
    2794:	90 81       	ld	r25, Z
    2796:	91 11       	cpse	r25, r1
    2798:	02 c0       	rjmp	.+4      	; 0x279e <_ZN15OrangutanSerial15initUART_inlineEh+0x16>
    279a:	98 e9       	ldi	r25, 0x98	; 152
    279c:	01 c0       	rjmp	.+2      	; 0x27a0 <_ZN15OrangutanSerial15initUART_inlineEh+0x18>
    279e:	98 e1       	ldi	r25, 0x18	; 24
    27a0:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    27a4:	0e 94 a9 13 	call	0x2752	; 0x2752 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    27a8:	78 94       	sei
    27aa:	08 95       	ret

000027ac <serial_set_baud_rate>:
    27ac:	cf 92       	push	r12
    27ae:	df 92       	push	r13
    27b0:	ef 92       	push	r14
    27b2:	ff 92       	push	r15
    27b4:	6b 01       	movw	r12, r22
    27b6:	7c 01       	movw	r14, r24
    27b8:	80 e0       	ldi	r24, 0x00	; 0
    27ba:	0e 94 c4 13 	call	0x2788	; 0x2788 <_ZN15OrangutanSerial15initUART_inlineEh>
    27be:	a8 ef       	ldi	r26, 0xF8	; 248
    27c0:	bf ef       	ldi	r27, 0xFF	; 255
    27c2:	a7 01       	movw	r20, r14
    27c4:	96 01       	movw	r18, r12
    27c6:	0e 94 e2 1a 	call	0x35c4	; 0x35c4 <__mulohisi3>
    27ca:	73 5d       	subi	r23, 0xD3	; 211
    27cc:	8e 4c       	sbci	r24, 0xCE	; 206
    27ce:	9e 4f       	sbci	r25, 0xFE	; 254
    27d0:	e4 e0       	ldi	r30, 0x04	; 4
    27d2:	22 0f       	add	r18, r18
    27d4:	33 1f       	adc	r19, r19
    27d6:	44 1f       	adc	r20, r20
    27d8:	55 1f       	adc	r21, r21
    27da:	ea 95       	dec	r30
    27dc:	d1 f7       	brne	.-12     	; 0x27d2 <serial_set_baud_rate+0x26>
    27de:	0e 94 7e 1a 	call	0x34fc	; 0x34fc <__udivmodsi4>
    27e2:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
    27e6:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
    27ea:	ff 90       	pop	r15
    27ec:	ef 90       	pop	r14
    27ee:	df 90       	pop	r13
    27f0:	cf 90       	pop	r12
    27f2:	08 95       	ret

000027f4 <_ZN15OrangutanSerial4sendEPch>:
    27f4:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <_ZN15OrangutanSerial5portsE+0x7>
    27f8:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_ZN15OrangutanSerial5portsE+0x6>
    27fc:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <_ZN15OrangutanSerial5portsE+0x1>
    2800:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <_ZN15OrangutanSerial5portsE+0x3>
    2804:	80 e0       	ldi	r24, 0x00	; 0
    2806:	0e 94 a9 13 	call	0x2752	; 0x2752 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    280a:	08 95       	ret

0000280c <serial_send>:
    280c:	0e 94 fa 13 	call	0x27f4	; 0x27f4 <_ZN15OrangutanSerial4sendEPch>
    2810:	08 95       	ret

00002812 <_ZN15OrangutanSerial11uart_tx_isrEh>:
    2812:	9a e0       	ldi	r25, 0x0A	; 10
    2814:	89 9f       	mul	r24, r25
    2816:	f0 01       	movw	r30, r0
    2818:	11 24       	eor	r1, r1
    281a:	eb 55       	subi	r30, 0x5B	; 91
    281c:	fe 4f       	sbci	r31, 0xFE	; 254
    281e:	26 81       	ldd	r18, Z+6	; 0x06
    2820:	37 81       	ldd	r19, Z+7	; 0x07
    2822:	21 15       	cp	r18, r1
    2824:	31 05       	cpc	r19, r1
    2826:	41 f0       	breq	.+16     	; 0x2838 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2828:	41 81       	ldd	r20, Z+1	; 0x01
    282a:	93 81       	ldd	r25, Z+3	; 0x03
    282c:	49 17       	cp	r20, r25
    282e:	20 f4       	brcc	.+8      	; 0x2838 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2830:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2834:	95 fd       	sbrc	r25, 5
    2836:	03 c0       	rjmp	.+6      	; 0x283e <_ZN15OrangutanSerial11uart_tx_isrEh+0x2c>
    2838:	0e 94 a9 13 	call	0x2752	; 0x2752 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    283c:	08 95       	ret
    283e:	91 81       	ldd	r25, Z+1	; 0x01
    2840:	d9 01       	movw	r26, r18
    2842:	a9 0f       	add	r26, r25
    2844:	b1 1d       	adc	r27, r1
    2846:	9c 91       	ld	r25, X
    2848:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    284c:	91 81       	ldd	r25, Z+1	; 0x01
    284e:	9f 5f       	subi	r25, 0xFF	; 255
    2850:	91 83       	std	Z+1, r25	; 0x01
    2852:	f2 cf       	rjmp	.-28     	; 0x2838 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>

00002854 <_ZN15OrangutanSerial5checkEv>:
    2854:	e1 ec       	ldi	r30, 0xC1	; 193
    2856:	f0 e0       	ldi	r31, 0x00	; 0
    2858:	80 81       	ld	r24, Z
    285a:	8f 7d       	andi	r24, 0xDF	; 223
    285c:	80 83       	st	Z, r24
    285e:	80 e0       	ldi	r24, 0x00	; 0
    2860:	0e 94 09 14 	call	0x2812	; 0x2812 <_ZN15OrangutanSerial11uart_tx_isrEh>
    2864:	80 e0       	ldi	r24, 0x00	; 0
    2866:	0e 94 2b 13 	call	0x2656	; 0x2656 <_ZN15OrangutanSerial15serial_rx_checkEh>
    286a:	08 95       	ret

0000286c <_ZN15OrangutanSerial12sendBlockingEPch>:
    286c:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <_ZN15OrangutanSerial5portsE+0x7>
    2870:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_ZN15OrangutanSerial5portsE+0x6>
    2874:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <_ZN15OrangutanSerial5portsE+0x1>
    2878:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <_ZN15OrangutanSerial5portsE+0x3>
    287c:	80 e0       	ldi	r24, 0x00	; 0
    287e:	0e 94 a9 13 	call	0x2752	; 0x2752 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2882:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <_ZN15OrangutanSerial5portsE+0x1>
    2886:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <_ZN15OrangutanSerial5portsE+0x3>
    288a:	98 17       	cp	r25, r24
    288c:	19 f0       	breq	.+6      	; 0x2894 <_ZN15OrangutanSerial12sendBlockingEPch+0x28>
    288e:	0e 94 2a 14 	call	0x2854	; 0x2854 <_ZN15OrangutanSerial5checkEv>
    2892:	f7 cf       	rjmp	.-18     	; 0x2882 <_ZN15OrangutanSerial12sendBlockingEPch+0x16>
    2894:	08 95       	ret

00002896 <serial_send_blocking>:
    2896:	0e 94 36 14 	call	0x286c	; 0x286c <_ZN15OrangutanSerial12sendBlockingEPch>
    289a:	08 95       	ret

0000289c <__vector_19>:
    289c:	1f 92       	push	r1
    289e:	0f 92       	push	r0
    28a0:	0f b6       	in	r0, 0x3f	; 63
    28a2:	0f 92       	push	r0
    28a4:	11 24       	eor	r1, r1
    28a6:	2f 93       	push	r18
    28a8:	3f 93       	push	r19
    28aa:	4f 93       	push	r20
    28ac:	5f 93       	push	r21
    28ae:	6f 93       	push	r22
    28b0:	7f 93       	push	r23
    28b2:	8f 93       	push	r24
    28b4:	9f 93       	push	r25
    28b6:	af 93       	push	r26
    28b8:	bf 93       	push	r27
    28ba:	ef 93       	push	r30
    28bc:	ff 93       	push	r31
    28be:	80 e0       	ldi	r24, 0x00	; 0
    28c0:	0e 94 09 14 	call	0x2812	; 0x2812 <_ZN15OrangutanSerial11uart_tx_isrEh>
    28c4:	ff 91       	pop	r31
    28c6:	ef 91       	pop	r30
    28c8:	bf 91       	pop	r27
    28ca:	af 91       	pop	r26
    28cc:	9f 91       	pop	r25
    28ce:	8f 91       	pop	r24
    28d0:	7f 91       	pop	r23
    28d2:	6f 91       	pop	r22
    28d4:	5f 91       	pop	r21
    28d6:	4f 91       	pop	r20
    28d8:	3f 91       	pop	r19
    28da:	2f 91       	pop	r18
    28dc:	0f 90       	pop	r0
    28de:	0f be       	out	0x3f, r0	; 63
    28e0:	0f 90       	pop	r0
    28e2:	1f 90       	pop	r1
    28e4:	18 95       	reti

000028e6 <__vector_9>:
    28e6:	2f 92       	push	r2
    28e8:	8f 93       	push	r24
    28ea:	9f 93       	push	r25
    28ec:	2f b6       	in	r2, 0x3f	; 63
    28ee:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <tickCount+0x1>
    28f2:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <tickCount+0x2>
    28f6:	01 96       	adiw	r24, 0x01	; 1
    28f8:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <tickCount+0x1>
    28fc:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <tickCount+0x2>
    2900:	90 e0       	ldi	r25, 0x00	; 0
    2902:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <tickCount+0x3>
    2906:	89 1f       	adc	r24, r25
    2908:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <tickCount+0x3>
    290c:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <us_over_10+0x1>
    2910:	9c 5f       	subi	r25, 0xFC	; 252
    2912:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <us_over_10+0x1>
    2916:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <us_over_10>
    291a:	80 51       	subi	r24, 0x10	; 16
    291c:	97 42       	sbci	r25, 0x27	; 39
    291e:	c0 f0       	brcs	.+48     	; 0x2950 <end>
    2920:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <us_over_10+0x1>
    2924:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <us_over_10>
    2928:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <msCounter>
    292c:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <msCounter+0x1>
    2930:	01 96       	adiw	r24, 0x01	; 1
    2932:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <msCounter>
    2936:	90 93 b2 01 	sts	0x01B2, r25	; 0x8001b2 <msCounter+0x1>
    293a:	90 e0       	ldi	r25, 0x00	; 0
    293c:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <msCounter+0x2>
    2940:	89 1f       	adc	r24, r25
    2942:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <msCounter+0x2>
    2946:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <msCounter+0x3>
    294a:	89 1f       	adc	r24, r25
    294c:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <msCounter+0x3>

00002950 <end>:
    2950:	2f be       	out	0x3f, r2	; 63
    2952:	9f 91       	pop	r25
    2954:	8f 91       	pop	r24
    2956:	2f 90       	pop	r2
    2958:	18 95       	reti

0000295a <_ZN13OrangutanTime17delayMillisecondsEj>:
    295a:	28 ee       	ldi	r18, 0xE8	; 232
    295c:	33 e0       	ldi	r19, 0x03	; 3
    295e:	01 97       	sbiw	r24, 0x01	; 1
    2960:	48 f0       	brcs	.+18     	; 0x2974 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    2962:	f9 01       	movw	r30, r18
    2964:	6f 93       	push	r22
    2966:	64 e0       	ldi	r22, 0x04	; 4
    2968:	6a 95       	dec	r22
    296a:	f1 f7       	brne	.-4      	; 0x2968 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    296c:	6f 91       	pop	r22
    296e:	31 97       	sbiw	r30, 0x01	; 1
    2970:	c9 f7       	brne	.-14     	; 0x2964 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    2972:	f5 cf       	rjmp	.-22     	; 0x295e <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    2974:	08 95       	ret

00002976 <delay_ms>:
    2976:	0e 94 ad 14 	call	0x295a	; 0x295a <_ZN13OrangutanTime17delayMillisecondsEj>
    297a:	08 95       	ret

0000297c <_ZN13OrangutanTime5init2Ev>:
    297c:	e0 e7       	ldi	r30, 0x70	; 112
    297e:	f0 e0       	ldi	r31, 0x00	; 0
    2980:	80 81       	ld	r24, Z
    2982:	8e 7f       	andi	r24, 0xFE	; 254
    2984:	80 83       	st	Z, r24
    2986:	a0 eb       	ldi	r26, 0xB0	; 176
    2988:	b0 e0       	ldi	r27, 0x00	; 0
    298a:	8c 91       	ld	r24, X
    298c:	83 60       	ori	r24, 0x03	; 3
    298e:	8c 93       	st	X, r24
    2990:	a1 eb       	ldi	r26, 0xB1	; 177
    2992:	b0 e0       	ldi	r27, 0x00	; 0
    2994:	8c 91       	ld	r24, X
    2996:	80 7f       	andi	r24, 0xF0	; 240
    2998:	8c 93       	st	X, r24
    299a:	8c 91       	ld	r24, X
    299c:	82 60       	ori	r24, 0x02	; 2
    299e:	8c 93       	st	X, r24
    29a0:	b8 9a       	sbi	0x17, 0	; 23
    29a2:	80 81       	ld	r24, Z
    29a4:	81 60       	ori	r24, 0x01	; 1
    29a6:	80 83       	st	Z, r24
    29a8:	78 94       	sei
    29aa:	08 95       	ret

000029ac <_ZN13OrangutanTime4initEv>:
    29ac:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <_ZZN13OrangutanTime4initEvE11initialized>
    29b0:	81 11       	cpse	r24, r1
    29b2:	05 c0       	rjmp	.+10     	; 0x29be <_ZN13OrangutanTime4initEv+0x12>
    29b4:	81 e0       	ldi	r24, 0x01	; 1
    29b6:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <_ZZN13OrangutanTime4initEvE11initialized>
    29ba:	0e 94 be 14 	call	0x297c	; 0x297c <_ZN13OrangutanTime5init2Ev>
    29be:	08 95       	ret

000029c0 <_ZN13OrangutanTime5resetEv>:
    29c0:	0e 94 d6 14 	call	0x29ac	; 0x29ac <_ZN13OrangutanTime4initEv>
    29c4:	e0 e7       	ldi	r30, 0x70	; 112
    29c6:	f0 e0       	ldi	r31, 0x00	; 0
    29c8:	80 81       	ld	r24, Z
    29ca:	8e 7f       	andi	r24, 0xFE	; 254
    29cc:	80 83       	st	Z, r24
    29ce:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <msCounter>
    29d2:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <msCounter+0x1>
    29d6:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <msCounter+0x2>
    29da:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <msCounter+0x3>
    29de:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <us_over_10+0x1>
    29e2:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <us_over_10>
    29e6:	80 81       	ld	r24, Z
    29e8:	81 60       	ori	r24, 0x01	; 1
    29ea:	80 83       	st	Z, r24
    29ec:	08 95       	ret

000029ee <calibrate_line_sensors>:
    29ee:	68 2f       	mov	r22, r24
    29f0:	89 eb       	ldi	r24, 0xB9	; 185
    29f2:	91 e0       	ldi	r25, 0x01	; 1
    29f4:	0e 94 e6 18 	call	0x31cc	; 0x31cc <_ZN16PololuQTRSensors9calibrateEh>
    29f8:	08 95       	ret

000029fa <read_line_sensors_calibrated>:
    29fa:	46 2f       	mov	r20, r22
    29fc:	bc 01       	movw	r22, r24
    29fe:	89 eb       	ldi	r24, 0xB9	; 185
    2a00:	91 e0       	ldi	r25, 0x01	; 1
    2a02:	0e 94 0a 19 	call	0x3214	; 0x3214 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    2a06:	08 95       	ret

00002a08 <read_line>:
    2a08:	46 2f       	mov	r20, r22
    2a0a:	20 e0       	ldi	r18, 0x00	; 0
    2a0c:	bc 01       	movw	r22, r24
    2a0e:	89 eb       	ldi	r24, 0xB9	; 185
    2a10:	91 e0       	ldi	r25, 0x01	; 1
    2a12:	0e 94 b7 19 	call	0x336e	; 0x336e <_ZN16PololuQTRSensors8readLineEPjhh>
    2a16:	08 95       	ret

00002a18 <_ZN9Pololu3pi4initEjh>:
    2a18:	0f 93       	push	r16
    2a1a:	cf 93       	push	r28
    2a1c:	df 93       	push	r29
    2a1e:	00 d0       	rcall	.+0      	; 0x2a20 <_ZN9Pololu3pi4initEjh+0x8>
    2a20:	00 d0       	rcall	.+0      	; 0x2a22 <_ZN9Pololu3pi4initEjh+0xa>
    2a22:	1f 92       	push	r1
    2a24:	cd b7       	in	r28, 0x3d	; 61
    2a26:	de b7       	in	r29, 0x3e	; 62
    2a28:	9c 01       	movw	r18, r24
    2a2a:	85 e0       	ldi	r24, 0x05	; 5
    2a2c:	e0 e5       	ldi	r30, 0x50	; 80
    2a2e:	f1 e0       	ldi	r31, 0x01	; 1
    2a30:	de 01       	movw	r26, r28
    2a32:	11 96       	adiw	r26, 0x01	; 1
    2a34:	01 90       	ld	r0, Z+
    2a36:	0d 92       	st	X+, r0
    2a38:	8a 95       	dec	r24
    2a3a:	e1 f7       	brne	.-8      	; 0x2a34 <_ZN9Pololu3pi4initEjh+0x1c>
    2a3c:	66 23       	and	r22, r22
    2a3e:	11 f0       	breq	.+4      	; 0x2a44 <_ZN9Pololu3pi4initEjh+0x2c>
    2a40:	0f ef       	ldi	r16, 0xFF	; 255
    2a42:	01 c0       	rjmp	.+2      	; 0x2a46 <_ZN9Pololu3pi4initEjh+0x2e>
    2a44:	03 e1       	ldi	r16, 0x13	; 19
    2a46:	45 e0       	ldi	r20, 0x05	; 5
    2a48:	be 01       	movw	r22, r28
    2a4a:	6f 5f       	subi	r22, 0xFF	; 255
    2a4c:	7f 4f       	sbci	r23, 0xFF	; 255
    2a4e:	89 eb       	ldi	r24, 0xB9	; 185
    2a50:	91 e0       	ldi	r25, 0x01	; 1
    2a52:	0e 94 de 15 	call	0x2bbc	; 0x2bbc <_ZN18PololuQTRSensorsRC4initEPhhjh>
    2a56:	89 eb       	ldi	r24, 0xB9	; 185
    2a58:	91 e0       	ldi	r25, 0x01	; 1
    2a5a:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <_ZN16PololuQTRSensors11emittersOffEv>
    2a5e:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <_ZN13OrangutanTime5resetEv>
    2a62:	0f 90       	pop	r0
    2a64:	0f 90       	pop	r0
    2a66:	0f 90       	pop	r0
    2a68:	0f 90       	pop	r0
    2a6a:	0f 90       	pop	r0
    2a6c:	df 91       	pop	r29
    2a6e:	cf 91       	pop	r28
    2a70:	0f 91       	pop	r16
    2a72:	08 95       	ret

00002a74 <pololu_3pi_init>:
    2a74:	60 e0       	ldi	r22, 0x00	; 0
    2a76:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <_ZN9Pololu3pi4initEjh>
    2a7a:	08 95       	ret

00002a7c <_GLOBAL__sub_D_pololu_3pi_init>:
    2a7c:	89 eb       	ldi	r24, 0xB9	; 185
    2a7e:	91 e0       	ldi	r25, 0x01	; 1
    2a80:	0e 94 2c 1a 	call	0x3458	; 0x3458 <_ZN16PololuQTRSensorsD1Ev>
    2a84:	08 95       	ret

00002a86 <delay_us>:
    2a86:	6f 93       	push	r22
    2a88:	64 e0       	ldi	r22, 0x04	; 4
    2a8a:	6a 95       	dec	r22
    2a8c:	f1 f7       	brne	.-4      	; 0x2a8a <delay_us+0x4>
    2a8e:	6f 91       	pop	r22
    2a90:	01 97       	sbiw	r24, 0x01	; 1
    2a92:	c9 f7       	brne	.-14     	; 0x2a86 <delay_us>
    2a94:	08 95       	ret

00002a96 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    2a96:	fc 01       	movw	r30, r24
    2a98:	11 82       	std	Z+1, r1	; 0x01
    2a9a:	10 82       	st	Z, r1
    2a9c:	13 82       	std	Z+3, r1	; 0x03
    2a9e:	12 82       	std	Z+2, r1	; 0x02
    2aa0:	15 82       	std	Z+5, r1	; 0x05
    2aa2:	14 82       	std	Z+4, r1	; 0x04
    2aa4:	16 82       	std	Z+6, r1	; 0x06
    2aa6:	68 30       	cpi	r22, 0x08	; 8
    2aa8:	68 f4       	brcc	.+26     	; 0x2ac4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    2aaa:	89 e2       	ldi	r24, 0x29	; 41
    2aac:	90 e0       	ldi	r25, 0x00	; 0
    2aae:	91 83       	std	Z+1, r25	; 0x01
    2ab0:	80 83       	st	Z, r24
    2ab2:	8b e2       	ldi	r24, 0x2B	; 43
    2ab4:	90 e0       	ldi	r25, 0x00	; 0
    2ab6:	93 83       	std	Z+3, r25	; 0x03
    2ab8:	82 83       	std	Z+2, r24	; 0x02
    2aba:	8a e2       	ldi	r24, 0x2A	; 42
    2abc:	90 e0       	ldi	r25, 0x00	; 0
    2abe:	95 83       	std	Z+5, r25	; 0x05
    2ac0:	84 83       	std	Z+4, r24	; 0x04
    2ac2:	1f c0       	rjmp	.+62     	; 0x2b02 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2ac4:	6e 30       	cpi	r22, 0x0E	; 14
    2ac6:	70 f4       	brcc	.+28     	; 0x2ae4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    2ac8:	83 e2       	ldi	r24, 0x23	; 35
    2aca:	90 e0       	ldi	r25, 0x00	; 0
    2acc:	91 83       	std	Z+1, r25	; 0x01
    2ace:	80 83       	st	Z, r24
    2ad0:	85 e2       	ldi	r24, 0x25	; 37
    2ad2:	90 e0       	ldi	r25, 0x00	; 0
    2ad4:	93 83       	std	Z+3, r25	; 0x03
    2ad6:	82 83       	std	Z+2, r24	; 0x02
    2ad8:	84 e2       	ldi	r24, 0x24	; 36
    2ada:	90 e0       	ldi	r25, 0x00	; 0
    2adc:	95 83       	std	Z+5, r25	; 0x05
    2ade:	84 83       	std	Z+4, r24	; 0x04
    2ae0:	68 50       	subi	r22, 0x08	; 8
    2ae2:	0f c0       	rjmp	.+30     	; 0x2b02 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2ae4:	65 31       	cpi	r22, 0x15	; 21
    2ae6:	98 f4       	brcc	.+38     	; 0x2b0e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    2ae8:	86 e2       	ldi	r24, 0x26	; 38
    2aea:	90 e0       	ldi	r25, 0x00	; 0
    2aec:	91 83       	std	Z+1, r25	; 0x01
    2aee:	80 83       	st	Z, r24
    2af0:	88 e2       	ldi	r24, 0x28	; 40
    2af2:	90 e0       	ldi	r25, 0x00	; 0
    2af4:	93 83       	std	Z+3, r25	; 0x03
    2af6:	82 83       	std	Z+2, r24	; 0x02
    2af8:	87 e2       	ldi	r24, 0x27	; 39
    2afa:	90 e0       	ldi	r25, 0x00	; 0
    2afc:	95 83       	std	Z+5, r25	; 0x05
    2afe:	84 83       	std	Z+4, r24	; 0x04
    2b00:	6e 50       	subi	r22, 0x0E	; 14
    2b02:	81 e0       	ldi	r24, 0x01	; 1
    2b04:	01 c0       	rjmp	.+2      	; 0x2b08 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    2b06:	88 0f       	add	r24, r24
    2b08:	6a 95       	dec	r22
    2b0a:	ea f7       	brpl	.-6      	; 0x2b06 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    2b0c:	86 83       	std	Z+6, r24	; 0x06
    2b0e:	08 95       	ret

00002b10 <_ZN16PololuQTRSensors4initEhhh>:
    2b10:	a7 e0       	ldi	r26, 0x07	; 7
    2b12:	b0 e0       	ldi	r27, 0x00	; 0
    2b14:	ee e8       	ldi	r30, 0x8E	; 142
    2b16:	f5 e1       	ldi	r31, 0x15	; 21
    2b18:	0c 94 f5 1a 	jmp	0x35ea	; 0x35ea <__prologue_saves__+0x1c>
    2b1c:	8c 01       	movw	r16, r24
    2b1e:	fc 01       	movw	r30, r24
    2b20:	11 82       	std	Z+1, r1	; 0x01
    2b22:	10 82       	st	Z, r1
    2b24:	13 82       	std	Z+3, r1	; 0x03
    2b26:	12 82       	std	Z+2, r1	; 0x02
    2b28:	15 82       	std	Z+5, r1	; 0x05
    2b2a:	14 82       	std	Z+4, r1	; 0x04
    2b2c:	17 82       	std	Z+7, r1	; 0x07
    2b2e:	16 82       	std	Z+6, r1	; 0x06
    2b30:	61 31       	cpi	r22, 0x11	; 17
    2b32:	18 f0       	brcs	.+6      	; 0x2b3a <_ZN16PololuQTRSensors4initEhhh+0x2a>
    2b34:	80 e1       	ldi	r24, 0x10	; 16
    2b36:	80 87       	std	Z+8, r24	; 0x08
    2b38:	02 c0       	rjmp	.+4      	; 0x2b3e <_ZN16PololuQTRSensors4initEhhh+0x2e>
    2b3a:	fc 01       	movw	r30, r24
    2b3c:	60 87       	std	Z+8, r22	; 0x08
    2b3e:	f8 01       	movw	r30, r16
    2b40:	20 8b       	std	Z+16, r18	; 0x10
    2b42:	64 2f       	mov	r22, r20
    2b44:	ce 01       	movw	r24, r28
    2b46:	01 96       	adiw	r24, 0x01	; 1
    2b48:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    2b4c:	8f 81       	ldd	r24, Y+7	; 0x07
    2b4e:	f8 01       	movw	r30, r16
    2b50:	81 87       	std	Z+9, r24	; 0x09
    2b52:	8b 81       	ldd	r24, Y+3	; 0x03
    2b54:	9c 81       	ldd	r25, Y+4	; 0x04
    2b56:	93 87       	std	Z+11, r25	; 0x0b
    2b58:	82 87       	std	Z+10, r24	; 0x0a
    2b5a:	8d 81       	ldd	r24, Y+5	; 0x05
    2b5c:	9e 81       	ldd	r25, Y+6	; 0x06
    2b5e:	95 87       	std	Z+13, r25	; 0x0d
    2b60:	84 87       	std	Z+12, r24	; 0x0c
    2b62:	27 96       	adiw	r28, 0x07	; 7
    2b64:	e4 e0       	ldi	r30, 0x04	; 4
    2b66:	0c 94 11 1b 	jmp	0x3622	; 0x3622 <__epilogue_restores__+0x1c>

00002b6a <_ZN16PololuQTRSensors11emittersOffEv>:
    2b6a:	fc 01       	movw	r30, r24
    2b6c:	a4 85       	ldd	r26, Z+12	; 0x0c
    2b6e:	b5 85       	ldd	r27, Z+13	; 0x0d
    2b70:	10 97       	sbiw	r26, 0x00	; 0
    2b72:	79 f0       	breq	.+30     	; 0x2b92 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    2b74:	8c 91       	ld	r24, X
    2b76:	91 85       	ldd	r25, Z+9	; 0x09
    2b78:	89 2b       	or	r24, r25
    2b7a:	8c 93       	st	X, r24
    2b7c:	a2 85       	ldd	r26, Z+10	; 0x0a
    2b7e:	b3 85       	ldd	r27, Z+11	; 0x0b
    2b80:	9c 91       	ld	r25, X
    2b82:	81 85       	ldd	r24, Z+9	; 0x09
    2b84:	80 95       	com	r24
    2b86:	89 23       	and	r24, r25
    2b88:	8c 93       	st	X, r24
    2b8a:	88 ec       	ldi	r24, 0xC8	; 200
    2b8c:	90 e0       	ldi	r25, 0x00	; 0
    2b8e:	0e 94 43 15 	call	0x2a86	; 0x2a86 <delay_us>
    2b92:	08 95       	ret

00002b94 <_ZN16PololuQTRSensors10emittersOnEv>:
    2b94:	fc 01       	movw	r30, r24
    2b96:	a4 85       	ldd	r26, Z+12	; 0x0c
    2b98:	b5 85       	ldd	r27, Z+13	; 0x0d
    2b9a:	10 97       	sbiw	r26, 0x00	; 0
    2b9c:	71 f0       	breq	.+28     	; 0x2bba <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    2b9e:	8c 91       	ld	r24, X
    2ba0:	91 85       	ldd	r25, Z+9	; 0x09
    2ba2:	89 2b       	or	r24, r25
    2ba4:	8c 93       	st	X, r24
    2ba6:	a2 85       	ldd	r26, Z+10	; 0x0a
    2ba8:	b3 85       	ldd	r27, Z+11	; 0x0b
    2baa:	8c 91       	ld	r24, X
    2bac:	91 85       	ldd	r25, Z+9	; 0x09
    2bae:	89 2b       	or	r24, r25
    2bb0:	8c 93       	st	X, r24
    2bb2:	88 ec       	ldi	r24, 0xC8	; 200
    2bb4:	90 e0       	ldi	r25, 0x00	; 0
    2bb6:	0e 94 43 15 	call	0x2a86	; 0x2a86 <delay_us>
    2bba:	08 95       	ret

00002bbc <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    2bbc:	a7 e0       	ldi	r26, 0x07	; 7
    2bbe:	b0 e0       	ldi	r27, 0x00	; 0
    2bc0:	e4 ee       	ldi	r30, 0xE4	; 228
    2bc2:	f5 e1       	ldi	r31, 0x15	; 21
    2bc4:	0c 94 ea 1a 	jmp	0x35d4	; 0x35d4 <__prologue_saves__+0x6>
    2bc8:	7c 01       	movw	r14, r24
    2bca:	4b 01       	movw	r8, r22
    2bcc:	64 2f       	mov	r22, r20
    2bce:	39 01       	movw	r6, r18
    2bd0:	40 2f       	mov	r20, r16
    2bd2:	20 e0       	ldi	r18, 0x00	; 0
    2bd4:	0e 94 88 15 	call	0x2b10	; 0x2b10 <_ZN16PololuQTRSensors4initEhhh>
    2bd8:	87 01       	movw	r16, r14
    2bda:	0f 5b       	subi	r16, 0xBF	; 191
    2bdc:	1f 4f       	sbci	r17, 0xFF	; 255
    2bde:	f8 01       	movw	r30, r16
    2be0:	10 82       	st	Z, r1
    2be2:	67 01       	movw	r12, r14
    2be4:	f2 e4       	ldi	r31, 0x42	; 66
    2be6:	cf 0e       	add	r12, r31
    2be8:	d1 1c       	adc	r13, r1
    2bea:	f6 01       	movw	r30, r12
    2bec:	10 82       	st	Z, r1
    2bee:	57 01       	movw	r10, r14
    2bf0:	f3 e4       	ldi	r31, 0x43	; 67
    2bf2:	af 0e       	add	r10, r31
    2bf4:	b1 1c       	adc	r11, r1
    2bf6:	f5 01       	movw	r30, r10
    2bf8:	10 82       	st	Z, r1
    2bfa:	f7 01       	movw	r30, r14
    2bfc:	77 86       	std	Z+15, r7	; 0x0f
    2bfe:	66 86       	std	Z+14, r6	; 0x0e
    2c00:	51 2c       	mov	r5, r1
    2c02:	f7 01       	movw	r30, r14
    2c04:	80 85       	ldd	r24, Z+8	; 0x08
    2c06:	58 16       	cp	r5, r24
    2c08:	50 f5       	brcc	.+84     	; 0x2c5e <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    2c0a:	65 2c       	mov	r6, r5
    2c0c:	71 2c       	mov	r7, r1
    2c0e:	f4 01       	movw	r30, r8
    2c10:	e6 0d       	add	r30, r6
    2c12:	f7 1d       	adc	r31, r7
    2c14:	60 81       	ld	r22, Z
    2c16:	ce 01       	movw	r24, r28
    2c18:	01 96       	adiw	r24, 0x01	; 1
    2c1a:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    2c1e:	2f 81       	ldd	r18, Y+7	; 0x07
    2c20:	f7 01       	movw	r30, r14
    2c22:	e6 0d       	add	r30, r6
    2c24:	f7 1d       	adc	r31, r7
    2c26:	21 8b       	std	Z+17, r18	; 0x11
    2c28:	89 81       	ldd	r24, Y+1	; 0x01
    2c2a:	9a 81       	ldd	r25, Y+2	; 0x02
    2c2c:	f3 01       	movw	r30, r6
    2c2e:	ee 0f       	add	r30, r30
    2c30:	ff 1f       	adc	r31, r31
    2c32:	ee 0d       	add	r30, r14
    2c34:	ff 1d       	adc	r31, r15
    2c36:	92 a3       	std	Z+34, r25	; 0x22
    2c38:	81 a3       	std	Z+33, r24	; 0x21
    2c3a:	83 32       	cpi	r24, 0x23	; 35
    2c3c:	91 05       	cpc	r25, r1
    2c3e:	11 f4       	brne	.+4      	; 0x2c44 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    2c40:	f8 01       	movw	r30, r16
    2c42:	08 c0       	rjmp	.+16     	; 0x2c54 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    2c44:	86 32       	cpi	r24, 0x26	; 38
    2c46:	91 05       	cpc	r25, r1
    2c48:	11 f4       	brne	.+4      	; 0x2c4e <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    2c4a:	f6 01       	movw	r30, r12
    2c4c:	03 c0       	rjmp	.+6      	; 0x2c54 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    2c4e:	89 97       	sbiw	r24, 0x29	; 41
    2c50:	21 f4       	brne	.+8      	; 0x2c5a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    2c52:	f5 01       	movw	r30, r10
    2c54:	80 81       	ld	r24, Z
    2c56:	82 2b       	or	r24, r18
    2c58:	80 83       	st	Z, r24
    2c5a:	53 94       	inc	r5
    2c5c:	d2 cf       	rjmp	.-92     	; 0x2c02 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    2c5e:	27 96       	adiw	r28, 0x07	; 7
    2c60:	ef e0       	ldi	r30, 0x0F	; 15
    2c62:	0c 94 06 1b 	jmp	0x360c	; 0x360c <__epilogue_restores__+0x6>

00002c66 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    2c66:	a0 e0       	ldi	r26, 0x00	; 0
    2c68:	b0 e0       	ldi	r27, 0x00	; 0
    2c6a:	e9 e3       	ldi	r30, 0x39	; 57
    2c6c:	f6 e1       	ldi	r31, 0x16	; 22
    2c6e:	0c 94 ec 1a 	jmp	0x35d8	; 0x35d8 <__prologue_saves__+0xa>
    2c72:	ec 01       	movw	r28, r24
    2c74:	5b 01       	movw	r10, r22
    2c76:	6c 01       	movw	r12, r24
    2c78:	81 e4       	ldi	r24, 0x41	; 65
    2c7a:	c8 0e       	add	r12, r24
    2c7c:	d1 1c       	adc	r13, r1
    2c7e:	f6 01       	movw	r30, r12
    2c80:	80 80       	ld	r8, Z
    2c82:	7e 01       	movw	r14, r28
    2c84:	f2 e4       	ldi	r31, 0x42	; 66
    2c86:	ef 0e       	add	r14, r31
    2c88:	f1 1c       	adc	r15, r1
    2c8a:	f7 01       	movw	r30, r14
    2c8c:	70 80       	ld	r7, Z
    2c8e:	8e 01       	movw	r16, r28
    2c90:	0d 5b       	subi	r16, 0xBD	; 189
    2c92:	1f 4f       	sbci	r17, 0xFF	; 255
    2c94:	f8 01       	movw	r30, r16
    2c96:	90 80       	ld	r9, Z
    2c98:	80 e0       	ldi	r24, 0x00	; 0
    2c9a:	98 85       	ldd	r25, Y+8	; 0x08
    2c9c:	89 17       	cp	r24, r25
    2c9e:	48 f4       	brcc	.+18     	; 0x2cb2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    2ca0:	f5 01       	movw	r30, r10
    2ca2:	e8 0f       	add	r30, r24
    2ca4:	f1 1d       	adc	r31, r1
    2ca6:	e8 0f       	add	r30, r24
    2ca8:	f1 1d       	adc	r31, r1
    2caa:	11 82       	std	Z+1, r1	; 0x01
    2cac:	10 82       	st	Z, r1
    2cae:	8f 5f       	subi	r24, 0xFF	; 255
    2cb0:	f4 cf       	rjmp	.-24     	; 0x2c9a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    2cb2:	84 b1       	in	r24, 0x04	; 4
    2cb4:	f6 01       	movw	r30, r12
    2cb6:	90 81       	ld	r25, Z
    2cb8:	89 2b       	or	r24, r25
    2cba:	84 b9       	out	0x04, r24	; 4
    2cbc:	87 b1       	in	r24, 0x07	; 7
    2cbe:	f7 01       	movw	r30, r14
    2cc0:	90 81       	ld	r25, Z
    2cc2:	89 2b       	or	r24, r25
    2cc4:	87 b9       	out	0x07, r24	; 7
    2cc6:	8a b1       	in	r24, 0x0a	; 10
    2cc8:	f8 01       	movw	r30, r16
    2cca:	90 81       	ld	r25, Z
    2ccc:	89 2b       	or	r24, r25
    2cce:	8a b9       	out	0x0a, r24	; 10
    2cd0:	85 b1       	in	r24, 0x05	; 5
    2cd2:	f6 01       	movw	r30, r12
    2cd4:	90 81       	ld	r25, Z
    2cd6:	89 2b       	or	r24, r25
    2cd8:	85 b9       	out	0x05, r24	; 5
    2cda:	88 b1       	in	r24, 0x08	; 8
    2cdc:	f7 01       	movw	r30, r14
    2cde:	90 81       	ld	r25, Z
    2ce0:	89 2b       	or	r24, r25
    2ce2:	88 b9       	out	0x08, r24	; 8
    2ce4:	8b b1       	in	r24, 0x0b	; 11
    2ce6:	f8 01       	movw	r30, r16
    2ce8:	90 81       	ld	r25, Z
    2cea:	89 2b       	or	r24, r25
    2cec:	8b b9       	out	0x0b, r24	; 11
    2cee:	8a e0       	ldi	r24, 0x0A	; 10
    2cf0:	90 e0       	ldi	r25, 0x00	; 0
    2cf2:	0e 94 43 15 	call	0x2a86	; 0x2a86 <delay_us>
    2cf6:	94 b1       	in	r25, 0x04	; 4
    2cf8:	f6 01       	movw	r30, r12
    2cfa:	80 81       	ld	r24, Z
    2cfc:	80 95       	com	r24
    2cfe:	89 23       	and	r24, r25
    2d00:	84 b9       	out	0x04, r24	; 4
    2d02:	97 b1       	in	r25, 0x07	; 7
    2d04:	f7 01       	movw	r30, r14
    2d06:	80 81       	ld	r24, Z
    2d08:	80 95       	com	r24
    2d0a:	89 23       	and	r24, r25
    2d0c:	87 b9       	out	0x07, r24	; 7
    2d0e:	9a b1       	in	r25, 0x0a	; 10
    2d10:	f8 01       	movw	r30, r16
    2d12:	80 81       	ld	r24, Z
    2d14:	80 95       	com	r24
    2d16:	89 23       	and	r24, r25
    2d18:	8a b9       	out	0x0a, r24	; 10
    2d1a:	95 b1       	in	r25, 0x05	; 5
    2d1c:	f6 01       	movw	r30, r12
    2d1e:	80 81       	ld	r24, Z
    2d20:	80 95       	com	r24
    2d22:	89 23       	and	r24, r25
    2d24:	85 b9       	out	0x05, r24	; 5
    2d26:	98 b1       	in	r25, 0x08	; 8
    2d28:	f7 01       	movw	r30, r14
    2d2a:	80 81       	ld	r24, Z
    2d2c:	80 95       	com	r24
    2d2e:	89 23       	and	r24, r25
    2d30:	88 b9       	out	0x08, r24	; 8
    2d32:	9b b1       	in	r25, 0x0b	; 11
    2d34:	f8 01       	movw	r30, r16
    2d36:	80 81       	ld	r24, Z
    2d38:	80 95       	com	r24
    2d3a:	89 23       	and	r24, r25
    2d3c:	8b b9       	out	0x0b, r24	; 11
    2d3e:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2d42:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    2d46:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2d4a:	83 60       	ori	r24, 0x03	; 3
    2d4c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2d50:	82 e0       	ldi	r24, 0x02	; 2
    2d52:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    2d56:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2d5a:	80 e0       	ldi	r24, 0x00	; 0
    2d5c:	90 e0       	ldi	r25, 0x00	; 0
    2d5e:	2e 85       	ldd	r18, Y+14	; 0x0e
    2d60:	3f 85       	ldd	r19, Y+15	; 0x0f
    2d62:	82 17       	cp	r24, r18
    2d64:	93 07       	cpc	r25, r19
    2d66:	20 f5       	brcc	.+72     	; 0x2db0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    2d68:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2d6c:	2c 2d       	mov	r18, r12
    2d6e:	24 1b       	sub	r18, r20
    2d70:	82 0f       	add	r24, r18
    2d72:	91 1d       	adc	r25, r1
    2d74:	03 b1       	in	r16, 0x03	; 3
    2d76:	08 11       	cpse	r16, r8
    2d78:	32 c0       	rjmp	.+100    	; 0x2dde <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    2d7a:	f6 b0       	in	r15, 0x06	; 6
    2d7c:	f7 10       	cpse	r15, r7
    2d7e:	2f c0       	rjmp	.+94     	; 0x2dde <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    2d80:	29 b1       	in	r18, 0x09	; 9
    2d82:	29 11       	cpse	r18, r9
    2d84:	2c c0       	rjmp	.+88     	; 0x2dde <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    2d86:	10 c0       	rjmp	.+32     	; 0x2da8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    2d88:	21 2f       	mov	r18, r17
    2d8a:	30 e0       	ldi	r19, 0x00	; 0
    2d8c:	a9 01       	movw	r20, r18
    2d8e:	44 0f       	add	r20, r20
    2d90:	55 1f       	adc	r21, r21
    2d92:	f5 01       	movw	r30, r10
    2d94:	e4 0f       	add	r30, r20
    2d96:	f5 1f       	adc	r31, r21
    2d98:	60 81       	ld	r22, Z
    2d9a:	71 81       	ldd	r23, Z+1	; 0x01
    2d9c:	67 2b       	or	r22, r23
    2d9e:	21 f1       	breq	.+72     	; 0x2de8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    2da0:	1f 5f       	subi	r17, 0xFF	; 255
    2da2:	28 85       	ldd	r18, Y+8	; 0x08
    2da4:	12 17       	cp	r17, r18
    2da6:	80 f3       	brcs	.-32     	; 0x2d88 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    2da8:	7f 2c       	mov	r7, r15
    2daa:	80 2e       	mov	r8, r16
    2dac:	4c 2d       	mov	r20, r12
    2dae:	d7 cf       	rjmp	.-82     	; 0x2d5e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    2db0:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2db4:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    2db8:	20 e0       	ldi	r18, 0x00	; 0
    2dba:	88 85       	ldd	r24, Y+8	; 0x08
    2dbc:	28 17       	cp	r18, r24
    2dbe:	30 f5       	brcc	.+76     	; 0x2e0c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    2dc0:	f5 01       	movw	r30, r10
    2dc2:	e2 0f       	add	r30, r18
    2dc4:	f1 1d       	adc	r31, r1
    2dc6:	e2 0f       	add	r30, r18
    2dc8:	f1 1d       	adc	r31, r1
    2dca:	80 81       	ld	r24, Z
    2dcc:	91 81       	ldd	r25, Z+1	; 0x01
    2dce:	89 2b       	or	r24, r25
    2dd0:	21 f4       	brne	.+8      	; 0x2dda <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    2dd2:	8e 85       	ldd	r24, Y+14	; 0x0e
    2dd4:	9f 85       	ldd	r25, Y+15	; 0x0f
    2dd6:	91 83       	std	Z+1, r25	; 0x01
    2dd8:	80 83       	st	Z, r24
    2dda:	2f 5f       	subi	r18, 0xFF	; 255
    2ddc:	ee cf       	rjmp	.-36     	; 0x2dba <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    2dde:	03 b1       	in	r16, 0x03	; 3
    2de0:	f6 b0       	in	r15, 0x06	; 6
    2de2:	99 b0       	in	r9, 0x09	; 9
    2de4:	10 e0       	ldi	r17, 0x00	; 0
    2de6:	dd cf       	rjmp	.-70     	; 0x2da2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    2de8:	de 01       	movw	r26, r28
    2dea:	a4 0f       	add	r26, r20
    2dec:	b5 1f       	adc	r27, r21
    2dee:	91 96       	adiw	r26, 0x21	; 33
    2df0:	0d 90       	ld	r0, X+
    2df2:	bc 91       	ld	r27, X
    2df4:	a0 2d       	mov	r26, r0
    2df6:	4c 91       	ld	r20, X
    2df8:	de 01       	movw	r26, r28
    2dfa:	a2 0f       	add	r26, r18
    2dfc:	b3 1f       	adc	r27, r19
    2dfe:	51 96       	adiw	r26, 0x11	; 17
    2e00:	2c 91       	ld	r18, X
    2e02:	42 23       	and	r20, r18
    2e04:	69 f6       	brne	.-102    	; 0x2da0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    2e06:	91 83       	std	Z+1, r25	; 0x01
    2e08:	80 83       	st	Z, r24
    2e0a:	ca cf       	rjmp	.-108    	; 0x2da0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    2e0c:	cd b7       	in	r28, 0x3d	; 61
    2e0e:	de b7       	in	r29, 0x3e	; 62
    2e10:	ed e0       	ldi	r30, 0x0D	; 13
    2e12:	0c 94 08 1b 	jmp	0x3610	; 0x3610 <__epilogue_restores__+0xa>

00002e16 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    2e16:	ef 92       	push	r14
    2e18:	ff 92       	push	r15
    2e1a:	0f 93       	push	r16
    2e1c:	1f 93       	push	r17
    2e1e:	cf 93       	push	r28
    2e20:	df 93       	push	r29
    2e22:	fc 01       	movw	r30, r24
    2e24:	9b 01       	movw	r18, r22
    2e26:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    2e2a:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    2e2e:	47 b1       	in	r20, 0x07	; 7
    2e30:	18 b1       	in	r17, 0x08	; 8
    2e32:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    2e36:	86 fd       	sbrc	r24, 6
    2e38:	fc cf       	rjmp	.-8      	; 0x2e32 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    2e3a:	80 e0       	ldi	r24, 0x00	; 0
    2e3c:	90 85       	ldd	r25, Z+8	; 0x08
    2e3e:	89 17       	cp	r24, r25
    2e40:	48 f4       	brcc	.+18     	; 0x2e54 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    2e42:	d9 01       	movw	r26, r18
    2e44:	a8 0f       	add	r26, r24
    2e46:	b1 1d       	adc	r27, r1
    2e48:	a8 0f       	add	r26, r24
    2e4a:	b1 1d       	adc	r27, r1
    2e4c:	1d 92       	st	X+, r1
    2e4e:	1c 92       	st	X, r1
    2e50:	8f 5f       	subi	r24, 0xFF	; 255
    2e52:	f4 cf       	rjmp	.-24     	; 0x2e3c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    2e54:	97 b1       	in	r25, 0x07	; 7
    2e56:	82 a1       	ldd	r24, Z+34	; 0x22
    2e58:	80 95       	com	r24
    2e5a:	89 23       	and	r24, r25
    2e5c:	87 b9       	out	0x07, r24	; 7
    2e5e:	98 b1       	in	r25, 0x08	; 8
    2e60:	82 a1       	ldd	r24, Z+34	; 0x22
    2e62:	80 95       	com	r24
    2e64:	89 23       	and	r24, r25
    2e66:	88 b9       	out	0x08, r24	; 8
    2e68:	87 e8       	ldi	r24, 0x87	; 135
    2e6a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    2e6e:	e1 2c       	mov	r14, r1
    2e70:	81 a1       	ldd	r24, Z+33	; 0x21
    2e72:	e8 16       	cp	r14, r24
    2e74:	10 f0       	brcs	.+4      	; 0x2e7a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    2e76:	e1 2c       	mov	r14, r1
    2e78:	29 c0       	rjmp	.+82     	; 0x2ecc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    2e7a:	50 e0       	ldi	r21, 0x00	; 0
    2e7c:	80 85       	ldd	r24, Z+8	; 0x08
    2e7e:	58 17       	cp	r21, r24
    2e80:	18 f5       	brcc	.+70     	; 0x2ec8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    2e82:	a5 2f       	mov	r26, r21
    2e84:	b0 e0       	ldi	r27, 0x00	; 0
    2e86:	ef 01       	movw	r28, r30
    2e88:	ca 0f       	add	r28, r26
    2e8a:	db 1f       	adc	r29, r27
    2e8c:	89 89       	ldd	r24, Y+17	; 0x11
    2e8e:	80 64       	ori	r24, 0x40	; 64
    2e90:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    2e94:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    2e98:	80 64       	ori	r24, 0x40	; 64
    2e9a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    2e9e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    2ea2:	86 fd       	sbrc	r24, 6
    2ea4:	fc cf       	rjmp	.-8      	; 0x2e9e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    2ea6:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    2eaa:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    2eae:	aa 0f       	add	r26, r26
    2eb0:	bb 1f       	adc	r27, r27
    2eb2:	a2 0f       	add	r26, r18
    2eb4:	b3 1f       	adc	r27, r19
    2eb6:	8d 91       	ld	r24, X+
    2eb8:	9c 91       	ld	r25, X
    2eba:	11 97       	sbiw	r26, 0x01	; 1
    2ebc:	86 0f       	add	r24, r22
    2ebe:	97 1f       	adc	r25, r23
    2ec0:	8d 93       	st	X+, r24
    2ec2:	9c 93       	st	X, r25
    2ec4:	5f 5f       	subi	r21, 0xFF	; 255
    2ec6:	da cf       	rjmp	.-76     	; 0x2e7c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    2ec8:	e3 94       	inc	r14
    2eca:	d2 cf       	rjmp	.-92     	; 0x2e70 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    2ecc:	80 85       	ldd	r24, Z+8	; 0x08
    2ece:	e8 16       	cp	r14, r24
    2ed0:	a0 f4       	brcc	.+40     	; 0x2efa <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    2ed2:	e9 01       	movw	r28, r18
    2ed4:	ce 0d       	add	r28, r14
    2ed6:	d1 1d       	adc	r29, r1
    2ed8:	ce 0d       	add	r28, r14
    2eda:	d1 1d       	adc	r29, r1
    2edc:	61 a1       	ldd	r22, Z+33	; 0x21
    2ede:	70 e0       	ldi	r23, 0x00	; 0
    2ee0:	cb 01       	movw	r24, r22
    2ee2:	95 95       	asr	r25
    2ee4:	87 95       	ror	r24
    2ee6:	a8 81       	ld	r26, Y
    2ee8:	b9 81       	ldd	r27, Y+1	; 0x01
    2eea:	8a 0f       	add	r24, r26
    2eec:	9b 1f       	adc	r25, r27
    2eee:	0e 94 56 1a 	call	0x34ac	; 0x34ac <__udivmodhi4>
    2ef2:	79 83       	std	Y+1, r23	; 0x01
    2ef4:	68 83       	st	Y, r22
    2ef6:	e3 94       	inc	r14
    2ef8:	e9 cf       	rjmp	.-46     	; 0x2ecc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    2efa:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    2efe:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    2f02:	18 b9       	out	0x08, r17	; 8
    2f04:	47 b9       	out	0x07, r20	; 7
    2f06:	cd b7       	in	r28, 0x3d	; 61
    2f08:	de b7       	in	r29, 0x3e	; 62
    2f0a:	e6 e0       	ldi	r30, 0x06	; 6
    2f0c:	0c 94 0f 1b 	jmp	0x361e	; 0x361e <__epilogue_restores__+0x18>

00002f10 <_ZN16PololuQTRSensors4readEPjh>:
    2f10:	a0 e2       	ldi	r26, 0x20	; 32
    2f12:	b0 e0       	ldi	r27, 0x00	; 0
    2f14:	ee e8       	ldi	r30, 0x8E	; 142
    2f16:	f7 e1       	ldi	r31, 0x17	; 23
    2f18:	0c 94 f2 1a 	jmp	0x35e4	; 0x35e4 <__prologue_saves__+0x16>
    2f1c:	8c 01       	movw	r16, r24
    2f1e:	7b 01       	movw	r14, r22
    2f20:	d4 2e       	mov	r13, r20
    2f22:	8f ef       	ldi	r24, 0xFF	; 255
    2f24:	84 0f       	add	r24, r20
    2f26:	82 30       	cpi	r24, 0x02	; 2
    2f28:	18 f4       	brcc	.+6      	; 0x2f30 <_ZN16PololuQTRSensors4readEPjh+0x20>
    2f2a:	c8 01       	movw	r24, r16
    2f2c:	0e 94 ca 15 	call	0x2b94	; 0x2b94 <_ZN16PololuQTRSensors10emittersOnEv>
    2f30:	d8 01       	movw	r26, r16
    2f32:	50 96       	adiw	r26, 0x10	; 16
    2f34:	8c 91       	ld	r24, X
    2f36:	b7 01       	movw	r22, r14
    2f38:	81 11       	cpse	r24, r1
    2f3a:	10 c0       	rjmp	.+32     	; 0x2f5c <_ZN16PololuQTRSensors4readEPjh+0x4c>
    2f3c:	c8 01       	movw	r24, r16
    2f3e:	0e 94 33 16 	call	0x2c66	; 0x2c66 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    2f42:	c8 01       	movw	r24, r16
    2f44:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <_ZN16PololuQTRSensors11emittersOffEv>
    2f48:	b2 e0       	ldi	r27, 0x02	; 2
    2f4a:	db 12       	cpse	r13, r27
    2f4c:	3a c0       	rjmp	.+116    	; 0x2fc2 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    2f4e:	be 01       	movw	r22, r28
    2f50:	6f 5f       	subi	r22, 0xFF	; 255
    2f52:	7f 4f       	sbci	r23, 0xFF	; 255
    2f54:	c8 01       	movw	r24, r16
    2f56:	0e 94 33 16 	call	0x2c66	; 0x2c66 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    2f5a:	0f c0       	rjmp	.+30     	; 0x2f7a <_ZN16PololuQTRSensors4readEPjh+0x6a>
    2f5c:	c8 01       	movw	r24, r16
    2f5e:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    2f62:	c8 01       	movw	r24, r16
    2f64:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <_ZN16PololuQTRSensors11emittersOffEv>
    2f68:	e2 e0       	ldi	r30, 0x02	; 2
    2f6a:	de 12       	cpse	r13, r30
    2f6c:	2a c0       	rjmp	.+84     	; 0x2fc2 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    2f6e:	be 01       	movw	r22, r28
    2f70:	6f 5f       	subi	r22, 0xFF	; 255
    2f72:	7f 4f       	sbci	r23, 0xFF	; 255
    2f74:	c8 01       	movw	r24, r16
    2f76:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    2f7a:	40 e0       	ldi	r20, 0x00	; 0
    2f7c:	f8 01       	movw	r30, r16
    2f7e:	80 85       	ldd	r24, Z+8	; 0x08
    2f80:	48 17       	cp	r20, r24
    2f82:	f8 f4       	brcc	.+62     	; 0x2fc2 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    2f84:	84 2f       	mov	r24, r20
    2f86:	90 e0       	ldi	r25, 0x00	; 0
    2f88:	88 0f       	add	r24, r24
    2f8a:	99 1f       	adc	r25, r25
    2f8c:	f7 01       	movw	r30, r14
    2f8e:	e8 0f       	add	r30, r24
    2f90:	f9 1f       	adc	r31, r25
    2f92:	21 e0       	ldi	r18, 0x01	; 1
    2f94:	30 e0       	ldi	r19, 0x00	; 0
    2f96:	2c 0f       	add	r18, r28
    2f98:	3d 1f       	adc	r19, r29
    2f9a:	82 0f       	add	r24, r18
    2f9c:	93 1f       	adc	r25, r19
    2f9e:	d8 01       	movw	r26, r16
    2fa0:	1e 96       	adiw	r26, 0x0e	; 14
    2fa2:	2d 91       	ld	r18, X+
    2fa4:	3c 91       	ld	r19, X
    2fa6:	1f 97       	sbiw	r26, 0x0f	; 15
    2fa8:	dc 01       	movw	r26, r24
    2faa:	8d 91       	ld	r24, X+
    2fac:	9c 91       	ld	r25, X
    2fae:	28 1b       	sub	r18, r24
    2fb0:	39 0b       	sbc	r19, r25
    2fb2:	80 81       	ld	r24, Z
    2fb4:	91 81       	ldd	r25, Z+1	; 0x01
    2fb6:	82 0f       	add	r24, r18
    2fb8:	93 1f       	adc	r25, r19
    2fba:	91 83       	std	Z+1, r25	; 0x01
    2fbc:	80 83       	st	Z, r24
    2fbe:	4f 5f       	subi	r20, 0xFF	; 255
    2fc0:	dd cf       	rjmp	.-70     	; 0x2f7c <_ZN16PololuQTRSensors4readEPjh+0x6c>
    2fc2:	a0 96       	adiw	r28, 0x20	; 32
    2fc4:	e7 e0       	ldi	r30, 0x07	; 7
    2fc6:	0c 94 0e 1b 	jmp	0x361c	; 0x361c <__epilogue_restores__+0x16>

00002fca <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    2fca:	2f 92       	push	r2
    2fcc:	3f 92       	push	r3
    2fce:	5f 92       	push	r5
    2fd0:	6f 92       	push	r6
    2fd2:	7f 92       	push	r7
    2fd4:	8f 92       	push	r8
    2fd6:	9f 92       	push	r9
    2fd8:	af 92       	push	r10
    2fda:	bf 92       	push	r11
    2fdc:	cf 92       	push	r12
    2fde:	df 92       	push	r13
    2fe0:	ef 92       	push	r14
    2fe2:	ff 92       	push	r15
    2fe4:	0f 93       	push	r16
    2fe6:	1f 93       	push	r17
    2fe8:	cf 93       	push	r28
    2fea:	df 93       	push	r29
    2fec:	cd b7       	in	r28, 0x3d	; 61
    2fee:	de b7       	in	r29, 0x3e	; 62
    2ff0:	c0 56       	subi	r28, 0x60	; 96
    2ff2:	d1 09       	sbc	r29, r1
    2ff4:	0f b6       	in	r0, 0x3f	; 63
    2ff6:	f8 94       	cli
    2ff8:	de bf       	out	0x3e, r29	; 62
    2ffa:	0f be       	out	0x3f, r0	; 63
    2ffc:	cd bf       	out	0x3d, r28	; 61
    2ffe:	8c 01       	movw	r16, r24
    3000:	4b 01       	movw	r8, r22
    3002:	5a 01       	movw	r10, r20
    3004:	52 2e       	mov	r5, r18
    3006:	da 01       	movw	r26, r20
    3008:	8d 91       	ld	r24, X+
    300a:	9c 91       	ld	r25, X
    300c:	89 2b       	or	r24, r25
    300e:	31 f0       	breq	.+12     	; 0x301c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    3010:	f4 01       	movw	r30, r8
    3012:	80 81       	ld	r24, Z
    3014:	91 81       	ldd	r25, Z+1	; 0x01
    3016:	89 2b       	or	r24, r25
    3018:	f1 f4       	brne	.+60     	; 0x3056 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    301a:	24 c0       	rjmp	.+72     	; 0x3064 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    301c:	d8 01       	movw	r26, r16
    301e:	18 96       	adiw	r26, 0x08	; 8
    3020:	8c 91       	ld	r24, X
    3022:	90 e0       	ldi	r25, 0x00	; 0
    3024:	88 0f       	add	r24, r24
    3026:	99 1f       	adc	r25, r25
    3028:	0e 94 1e 1b 	call	0x363c	; 0x363c <malloc>
    302c:	f5 01       	movw	r30, r10
    302e:	91 83       	std	Z+1, r25	; 0x01
    3030:	80 83       	st	Z, r24
    3032:	00 97       	sbiw	r24, 0x00	; 0
    3034:	09 f4       	brne	.+2      	; 0x3038 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    3036:	b1 c0       	rjmp	.+354    	; 0x319a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    3038:	fc 01       	movw	r30, r24
    303a:	20 e0       	ldi	r18, 0x00	; 0
    303c:	30 e0       	ldi	r19, 0x00	; 0
    303e:	d8 01       	movw	r26, r16
    3040:	18 96       	adiw	r26, 0x08	; 8
    3042:	8c 91       	ld	r24, X
    3044:	90 e0       	ldi	r25, 0x00	; 0
    3046:	28 17       	cp	r18, r24
    3048:	39 07       	cpc	r19, r25
    304a:	14 f7       	brge	.-60     	; 0x3010 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    304c:	11 92       	st	Z+, r1
    304e:	11 92       	st	Z+, r1
    3050:	2f 5f       	subi	r18, 0xFF	; 255
    3052:	3f 4f       	sbci	r19, 0xFF	; 255
    3054:	f4 cf       	rjmp	.-24     	; 0x303e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    3056:	e1 2c       	mov	r14, r1
    3058:	f1 2c       	mov	r15, r1
    305a:	6e 01       	movw	r12, r28
    305c:	b1 e2       	ldi	r27, 0x21	; 33
    305e:	cb 0e       	add	r12, r27
    3060:	d1 1c       	adc	r13, r1
    3062:	21 c0       	rjmp	.+66     	; 0x30a6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    3064:	f8 01       	movw	r30, r16
    3066:	80 85       	ldd	r24, Z+8	; 0x08
    3068:	90 e0       	ldi	r25, 0x00	; 0
    306a:	88 0f       	add	r24, r24
    306c:	99 1f       	adc	r25, r25
    306e:	0e 94 1e 1b 	call	0x363c	; 0x363c <malloc>
    3072:	d4 01       	movw	r26, r8
    3074:	8d 93       	st	X+, r24
    3076:	9c 93       	st	X, r25
    3078:	00 97       	sbiw	r24, 0x00	; 0
    307a:	09 f4       	brne	.+2      	; 0x307e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    307c:	8e c0       	rjmp	.+284    	; 0x319a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    307e:	fc 01       	movw	r30, r24
    3080:	20 e0       	ldi	r18, 0x00	; 0
    3082:	30 e0       	ldi	r19, 0x00	; 0
    3084:	d8 01       	movw	r26, r16
    3086:	18 96       	adiw	r26, 0x08	; 8
    3088:	8c 91       	ld	r24, X
    308a:	90 e0       	ldi	r25, 0x00	; 0
    308c:	28 17       	cp	r18, r24
    308e:	39 07       	cpc	r19, r25
    3090:	14 f7       	brge	.-60     	; 0x3056 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    3092:	d8 01       	movw	r26, r16
    3094:	1e 96       	adiw	r26, 0x0e	; 14
    3096:	8d 91       	ld	r24, X+
    3098:	9c 91       	ld	r25, X
    309a:	1f 97       	sbiw	r26, 0x0f	; 15
    309c:	81 93       	st	Z+, r24
    309e:	91 93       	st	Z+, r25
    30a0:	2f 5f       	subi	r18, 0xFF	; 255
    30a2:	3f 4f       	sbci	r19, 0xFF	; 255
    30a4:	ef cf       	rjmp	.-34     	; 0x3084 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    30a6:	45 2d       	mov	r20, r5
    30a8:	be 01       	movw	r22, r28
    30aa:	6f 5b       	subi	r22, 0xBF	; 191
    30ac:	7f 4f       	sbci	r23, 0xFF	; 255
    30ae:	c8 01       	movw	r24, r16
    30b0:	0e 94 88 17 	call	0x2f10	; 0x2f10 <_ZN16PololuQTRSensors4readEPjh>
    30b4:	f8 01       	movw	r30, r16
    30b6:	60 84       	ldd	r6, Z+8	; 0x08
    30b8:	71 2c       	mov	r7, r1
    30ba:	fe 01       	movw	r30, r28
    30bc:	ef 5b       	subi	r30, 0xBF	; 191
    30be:	ff 4f       	sbci	r31, 0xFF	; 255
    30c0:	c6 01       	movw	r24, r12
    30c2:	9e 01       	movw	r18, r28
    30c4:	2f 5f       	subi	r18, 0xFF	; 255
    30c6:	3f 4f       	sbci	r19, 0xFF	; 255
    30c8:	19 01       	movw	r2, r18
    30ca:	20 e0       	ldi	r18, 0x00	; 0
    30cc:	30 e0       	ldi	r19, 0x00	; 0
    30ce:	26 15       	cp	r18, r6
    30d0:	37 05       	cpc	r19, r7
    30d2:	4c f5       	brge	.+82     	; 0x3126 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    30d4:	e1 14       	cp	r14, r1
    30d6:	f1 04       	cpc	r15, r1
    30d8:	89 f0       	breq	.+34     	; 0x30fc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    30da:	dc 01       	movw	r26, r24
    30dc:	6d 91       	ld	r22, X+
    30de:	7c 91       	ld	r23, X
    30e0:	40 81       	ld	r20, Z
    30e2:	51 81       	ldd	r21, Z+1	; 0x01
    30e4:	64 17       	cp	r22, r20
    30e6:	75 07       	cpc	r23, r21
    30e8:	48 f0       	brcs	.+18     	; 0x30fc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    30ea:	d1 01       	movw	r26, r2
    30ec:	6d 91       	ld	r22, X+
    30ee:	7c 91       	ld	r23, X
    30f0:	40 81       	ld	r20, Z
    30f2:	51 81       	ldd	r21, Z+1	; 0x01
    30f4:	46 17       	cp	r20, r22
    30f6:	57 07       	cpc	r21, r23
    30f8:	48 f0       	brcs	.+18     	; 0x310c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    30fa:	0d c0       	rjmp	.+26     	; 0x3116 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    30fc:	40 81       	ld	r20, Z
    30fe:	51 81       	ldd	r21, Z+1	; 0x01
    3100:	dc 01       	movw	r26, r24
    3102:	4d 93       	st	X+, r20
    3104:	5c 93       	st	X, r21
    3106:	e1 14       	cp	r14, r1
    3108:	f1 04       	cpc	r15, r1
    310a:	79 f7       	brne	.-34     	; 0x30ea <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    310c:	40 81       	ld	r20, Z
    310e:	51 81       	ldd	r21, Z+1	; 0x01
    3110:	d1 01       	movw	r26, r2
    3112:	4d 93       	st	X+, r20
    3114:	5c 93       	st	X, r21
    3116:	2f 5f       	subi	r18, 0xFF	; 255
    3118:	3f 4f       	sbci	r19, 0xFF	; 255
    311a:	b2 e0       	ldi	r27, 0x02	; 2
    311c:	2b 0e       	add	r2, r27
    311e:	31 1c       	adc	r3, r1
    3120:	32 96       	adiw	r30, 0x02	; 2
    3122:	02 96       	adiw	r24, 0x02	; 2
    3124:	d4 cf       	rjmp	.-88     	; 0x30ce <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    3126:	ef ef       	ldi	r30, 0xFF	; 255
    3128:	ee 1a       	sub	r14, r30
    312a:	fe 0a       	sbc	r15, r30
    312c:	fa e0       	ldi	r31, 0x0A	; 10
    312e:	ef 16       	cp	r14, r31
    3130:	f1 04       	cpc	r15, r1
    3132:	09 f0       	breq	.+2      	; 0x3136 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    3134:	b8 cf       	rjmp	.-144    	; 0x30a6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    3136:	9e 01       	movw	r18, r28
    3138:	2f 5f       	subi	r18, 0xFF	; 255
    313a:	3f 4f       	sbci	r19, 0xFF	; 255
    313c:	79 01       	movw	r14, r18
    313e:	36 01       	movw	r6, r12
    3140:	80 e0       	ldi	r24, 0x00	; 0
    3142:	90 e0       	ldi	r25, 0x00	; 0
    3144:	f8 01       	movw	r30, r16
    3146:	20 85       	ldd	r18, Z+8	; 0x08
    3148:	30 e0       	ldi	r19, 0x00	; 0
    314a:	82 17       	cp	r24, r18
    314c:	93 07       	cpc	r25, r19
    314e:	2c f5       	brge	.+74     	; 0x319a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    3150:	d7 01       	movw	r26, r14
    3152:	2d 91       	ld	r18, X+
    3154:	3d 91       	ld	r19, X+
    3156:	7d 01       	movw	r14, r26
    3158:	b3 01       	movw	r22, r6
    315a:	6c 19       	sub	r22, r12
    315c:	7d 09       	sbc	r23, r13
    315e:	d5 01       	movw	r26, r10
    3160:	ed 91       	ld	r30, X+
    3162:	fc 91       	ld	r31, X
    3164:	e6 0f       	add	r30, r22
    3166:	f7 1f       	adc	r31, r23
    3168:	40 81       	ld	r20, Z
    316a:	51 81       	ldd	r21, Z+1	; 0x01
    316c:	42 17       	cp	r20, r18
    316e:	53 07       	cpc	r21, r19
    3170:	10 f4       	brcc	.+4      	; 0x3176 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    3172:	31 83       	std	Z+1, r19	; 0x01
    3174:	20 83       	st	Z, r18
    3176:	f3 01       	movw	r30, r6
    3178:	21 91       	ld	r18, Z+
    317a:	31 91       	ld	r19, Z+
    317c:	3f 01       	movw	r6, r30
    317e:	d4 01       	movw	r26, r8
    3180:	ed 91       	ld	r30, X+
    3182:	fc 91       	ld	r31, X
    3184:	e6 0f       	add	r30, r22
    3186:	f7 1f       	adc	r31, r23
    3188:	40 81       	ld	r20, Z
    318a:	51 81       	ldd	r21, Z+1	; 0x01
    318c:	24 17       	cp	r18, r20
    318e:	35 07       	cpc	r19, r21
    3190:	10 f4       	brcc	.+4      	; 0x3196 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    3192:	31 83       	std	Z+1, r19	; 0x01
    3194:	20 83       	st	Z, r18
    3196:	01 96       	adiw	r24, 0x01	; 1
    3198:	d5 cf       	rjmp	.-86     	; 0x3144 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    319a:	c0 5a       	subi	r28, 0xA0	; 160
    319c:	df 4f       	sbci	r29, 0xFF	; 255
    319e:	0f b6       	in	r0, 0x3f	; 63
    31a0:	f8 94       	cli
    31a2:	de bf       	out	0x3e, r29	; 62
    31a4:	0f be       	out	0x3f, r0	; 63
    31a6:	cd bf       	out	0x3d, r28	; 61
    31a8:	df 91       	pop	r29
    31aa:	cf 91       	pop	r28
    31ac:	1f 91       	pop	r17
    31ae:	0f 91       	pop	r16
    31b0:	ff 90       	pop	r15
    31b2:	ef 90       	pop	r14
    31b4:	df 90       	pop	r13
    31b6:	cf 90       	pop	r12
    31b8:	bf 90       	pop	r11
    31ba:	af 90       	pop	r10
    31bc:	9f 90       	pop	r9
    31be:	8f 90       	pop	r8
    31c0:	7f 90       	pop	r7
    31c2:	6f 90       	pop	r6
    31c4:	5f 90       	pop	r5
    31c6:	3f 90       	pop	r3
    31c8:	2f 90       	pop	r2
    31ca:	08 95       	ret

000031cc <_ZN16PololuQTRSensors9calibrateEh>:
    31cc:	1f 93       	push	r17
    31ce:	cf 93       	push	r28
    31d0:	df 93       	push	r29
    31d2:	ec 01       	movw	r28, r24
    31d4:	16 2f       	mov	r17, r22
    31d6:	8f ef       	ldi	r24, 0xFF	; 255
    31d8:	86 0f       	add	r24, r22
    31da:	82 30       	cpi	r24, 0x02	; 2
    31dc:	18 f0       	brcs	.+6      	; 0x31e4 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    31de:	66 23       	and	r22, r22
    31e0:	59 f0       	breq	.+22     	; 0x31f8 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    31e2:	14 c0       	rjmp	.+40     	; 0x320c <_ZN16PololuQTRSensors9calibrateEh+0x40>
    31e4:	21 e0       	ldi	r18, 0x01	; 1
    31e6:	ae 01       	movw	r20, r28
    31e8:	4e 5f       	subi	r20, 0xFE	; 254
    31ea:	5f 4f       	sbci	r21, 0xFF	; 255
    31ec:	be 01       	movw	r22, r28
    31ee:	ce 01       	movw	r24, r28
    31f0:	0e 94 e5 17 	call	0x2fca	; 0x2fca <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    31f4:	12 30       	cpi	r17, 0x02	; 2
    31f6:	51 f4       	brne	.+20     	; 0x320c <_ZN16PololuQTRSensors9calibrateEh+0x40>
    31f8:	ae 01       	movw	r20, r28
    31fa:	4a 5f       	subi	r20, 0xFA	; 250
    31fc:	5f 4f       	sbci	r21, 0xFF	; 255
    31fe:	be 01       	movw	r22, r28
    3200:	6c 5f       	subi	r22, 0xFC	; 252
    3202:	7f 4f       	sbci	r23, 0xFF	; 255
    3204:	20 e0       	ldi	r18, 0x00	; 0
    3206:	ce 01       	movw	r24, r28
    3208:	0e 94 e5 17 	call	0x2fca	; 0x2fca <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    320c:	df 91       	pop	r29
    320e:	cf 91       	pop	r28
    3210:	1f 91       	pop	r17
    3212:	08 95       	ret

00003214 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    3214:	a0 e0       	ldi	r26, 0x00	; 0
    3216:	b0 e0       	ldi	r27, 0x00	; 0
    3218:	e0 e1       	ldi	r30, 0x10	; 16
    321a:	f9 e1       	ldi	r31, 0x19	; 25
    321c:	0c 94 f0 1a 	jmp	0x35e0	; 0x35e0 <__prologue_saves__+0x12>
    3220:	ec 01       	movw	r28, r24
    3222:	8b 01       	movw	r16, r22
    3224:	b4 2e       	mov	r11, r20
    3226:	84 2f       	mov	r24, r20
    3228:	8d 7f       	andi	r24, 0xFD	; 253
    322a:	51 f4       	brne	.+20     	; 0x3240 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    322c:	8c 81       	ldd	r24, Y+4	; 0x04
    322e:	9d 81       	ldd	r25, Y+5	; 0x05
    3230:	89 2b       	or	r24, r25
    3232:	09 f4       	brne	.+2      	; 0x3236 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    3234:	97 c0       	rjmp	.+302    	; 0x3364 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3236:	8e 81       	ldd	r24, Y+6	; 0x06
    3238:	9f 81       	ldd	r25, Y+7	; 0x07
    323a:	89 2b       	or	r24, r25
    323c:	09 f4       	brne	.+2      	; 0x3240 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    323e:	92 c0       	rjmp	.+292    	; 0x3364 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3240:	8f ef       	ldi	r24, 0xFF	; 255
    3242:	8b 0d       	add	r24, r11
    3244:	82 30       	cpi	r24, 0x02	; 2
    3246:	50 f4       	brcc	.+20     	; 0x325c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    3248:	88 81       	ld	r24, Y
    324a:	99 81       	ldd	r25, Y+1	; 0x01
    324c:	89 2b       	or	r24, r25
    324e:	09 f4       	brne	.+2      	; 0x3252 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    3250:	89 c0       	rjmp	.+274    	; 0x3364 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3252:	8a 81       	ldd	r24, Y+2	; 0x02
    3254:	9b 81       	ldd	r25, Y+3	; 0x03
    3256:	89 2b       	or	r24, r25
    3258:	09 f4       	brne	.+2      	; 0x325c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    325a:	84 c0       	rjmp	.+264    	; 0x3364 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    325c:	4b 2d       	mov	r20, r11
    325e:	b8 01       	movw	r22, r16
    3260:	ce 01       	movw	r24, r28
    3262:	0e 94 88 17 	call	0x2f10	; 0x2f10 <_ZN16PololuQTRSensors4readEPjh>
    3266:	78 01       	movw	r14, r16
    3268:	00 e0       	ldi	r16, 0x00	; 0
    326a:	10 e0       	ldi	r17, 0x00	; 0
    326c:	c1 2c       	mov	r12, r1
    326e:	d1 2c       	mov	r13, r1
    3270:	88 85       	ldd	r24, Y+8	; 0x08
    3272:	90 e0       	ldi	r25, 0x00	; 0
    3274:	c8 16       	cp	r12, r24
    3276:	d9 06       	cpc	r13, r25
    3278:	0c f0       	brlt	.+2      	; 0x327c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    327a:	74 c0       	rjmp	.+232    	; 0x3364 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    327c:	81 e0       	ldi	r24, 0x01	; 1
    327e:	b8 12       	cpse	r11, r24
    3280:	0a c0       	rjmp	.+20     	; 0x3296 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    3282:	ea 81       	ldd	r30, Y+2	; 0x02
    3284:	fb 81       	ldd	r31, Y+3	; 0x03
    3286:	e0 0f       	add	r30, r16
    3288:	f1 1f       	adc	r31, r17
    328a:	01 90       	ld	r0, Z+
    328c:	f0 81       	ld	r31, Z
    328e:	e0 2d       	mov	r30, r0
    3290:	a8 81       	ld	r26, Y
    3292:	b9 81       	ldd	r27, Y+1	; 0x01
    3294:	0d c0       	rjmp	.+26     	; 0x32b0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    3296:	8c 81       	ldd	r24, Y+4	; 0x04
    3298:	9d 81       	ldd	r25, Y+5	; 0x05
    329a:	2e 81       	ldd	r18, Y+6	; 0x06
    329c:	3f 81       	ldd	r19, Y+7	; 0x07
    329e:	b1 10       	cpse	r11, r1
    32a0:	0c c0       	rjmp	.+24     	; 0x32ba <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    32a2:	f9 01       	movw	r30, r18
    32a4:	e0 0f       	add	r30, r16
    32a6:	f1 1f       	adc	r31, r17
    32a8:	01 90       	ld	r0, Z+
    32aa:	f0 81       	ld	r31, Z
    32ac:	e0 2d       	mov	r30, r0
    32ae:	dc 01       	movw	r26, r24
    32b0:	a0 0f       	add	r26, r16
    32b2:	b1 1f       	adc	r27, r17
    32b4:	8d 91       	ld	r24, X+
    32b6:	9c 91       	ld	r25, X
    32b8:	28 c0       	rjmp	.+80     	; 0x330a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    32ba:	fc 01       	movw	r30, r24
    32bc:	e0 0f       	add	r30, r16
    32be:	f1 1f       	adc	r31, r17
    32c0:	40 81       	ld	r20, Z
    32c2:	51 81       	ldd	r21, Z+1	; 0x01
    32c4:	e8 81       	ld	r30, Y
    32c6:	f9 81       	ldd	r31, Y+1	; 0x01
    32c8:	e0 0f       	add	r30, r16
    32ca:	f1 1f       	adc	r31, r17
    32cc:	80 81       	ld	r24, Z
    32ce:	91 81       	ldd	r25, Z+1	; 0x01
    32d0:	ee 85       	ldd	r30, Y+14	; 0x0e
    32d2:	ff 85       	ldd	r31, Y+15	; 0x0f
    32d4:	48 17       	cp	r20, r24
    32d6:	59 07       	cpc	r21, r25
    32d8:	10 f4       	brcc	.+4      	; 0x32de <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    32da:	cf 01       	movw	r24, r30
    32dc:	04 c0       	rjmp	.+8      	; 0x32e6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    32de:	8e 0f       	add	r24, r30
    32e0:	9f 1f       	adc	r25, r31
    32e2:	84 1b       	sub	r24, r20
    32e4:	95 0b       	sbc	r25, r21
    32e6:	d9 01       	movw	r26, r18
    32e8:	a0 0f       	add	r26, r16
    32ea:	b1 1f       	adc	r27, r17
    32ec:	2d 91       	ld	r18, X+
    32ee:	3c 91       	ld	r19, X
    32f0:	aa 81       	ldd	r26, Y+2	; 0x02
    32f2:	bb 81       	ldd	r27, Y+3	; 0x03
    32f4:	a0 0f       	add	r26, r16
    32f6:	b1 1f       	adc	r27, r17
    32f8:	4d 91       	ld	r20, X+
    32fa:	5c 91       	ld	r21, X
    32fc:	24 17       	cp	r18, r20
    32fe:	35 07       	cpc	r19, r21
    3300:	20 f0       	brcs	.+8      	; 0x330a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    3302:	e4 0f       	add	r30, r20
    3304:	f5 1f       	adc	r31, r21
    3306:	e2 1b       	sub	r30, r18
    3308:	f3 0b       	sbc	r31, r19
    330a:	e8 1b       	sub	r30, r24
    330c:	f9 0b       	sbc	r31, r25
    330e:	a9 f0       	breq	.+42     	; 0x333a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    3310:	d7 01       	movw	r26, r14
    3312:	2d 91       	ld	r18, X+
    3314:	3c 91       	ld	r19, X
    3316:	40 e0       	ldi	r20, 0x00	; 0
    3318:	50 e0       	ldi	r21, 0x00	; 0
    331a:	28 1b       	sub	r18, r24
    331c:	39 0b       	sbc	r19, r25
    331e:	41 09       	sbc	r20, r1
    3320:	51 09       	sbc	r21, r1
    3322:	a8 ee       	ldi	r26, 0xE8	; 232
    3324:	b3 e0       	ldi	r27, 0x03	; 3
    3326:	0e 94 d4 1a 	call	0x35a8	; 0x35a8 <__muluhisi3>
    332a:	9f 01       	movw	r18, r30
    332c:	40 e0       	ldi	r20, 0x00	; 0
    332e:	50 e0       	ldi	r21, 0x00	; 0
    3330:	0e 94 a0 1a 	call	0x3540	; 0x3540 <__divmodsi4>
    3334:	37 fd       	sbrc	r19, 7
    3336:	0a c0       	rjmp	.+20     	; 0x334c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    3338:	02 c0       	rjmp	.+4      	; 0x333e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    333a:	20 e0       	ldi	r18, 0x00	; 0
    333c:	30 e0       	ldi	r19, 0x00	; 0
    333e:	29 3e       	cpi	r18, 0xE9	; 233
    3340:	b3 e0       	ldi	r27, 0x03	; 3
    3342:	3b 07       	cpc	r19, r27
    3344:	2c f0       	brlt	.+10     	; 0x3350 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    3346:	28 ee       	ldi	r18, 0xE8	; 232
    3348:	33 e0       	ldi	r19, 0x03	; 3
    334a:	02 c0       	rjmp	.+4      	; 0x3350 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    334c:	20 e0       	ldi	r18, 0x00	; 0
    334e:	30 e0       	ldi	r19, 0x00	; 0
    3350:	f7 01       	movw	r30, r14
    3352:	21 93       	st	Z+, r18
    3354:	31 93       	st	Z+, r19
    3356:	7f 01       	movw	r14, r30
    3358:	ff ef       	ldi	r31, 0xFF	; 255
    335a:	cf 1a       	sub	r12, r31
    335c:	df 0a       	sbc	r13, r31
    335e:	0e 5f       	subi	r16, 0xFE	; 254
    3360:	1f 4f       	sbci	r17, 0xFF	; 255
    3362:	86 cf       	rjmp	.-244    	; 0x3270 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    3364:	cd b7       	in	r28, 0x3d	; 61
    3366:	de b7       	in	r29, 0x3e	; 62
    3368:	e9 e0       	ldi	r30, 0x09	; 9
    336a:	0c 94 0c 1b 	jmp	0x3618	; 0x3618 <__epilogue_restores__+0x12>

0000336e <_ZN16PololuQTRSensors8readLineEPjhh>:
    336e:	a0 e0       	ldi	r26, 0x00	; 0
    3370:	b0 e0       	ldi	r27, 0x00	; 0
    3372:	ed eb       	ldi	r30, 0xBD	; 189
    3374:	f9 e1       	ldi	r31, 0x19	; 25
    3376:	0c 94 e7 1a 	jmp	0x35ce	; 0x35ce <__prologue_saves__>
    337a:	ec 01       	movw	r28, r24
    337c:	8b 01       	movw	r16, r22
    337e:	82 2e       	mov	r8, r18
    3380:	0e 94 0a 19 	call	0x3214	; 0x3214 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    3384:	28 84       	ldd	r2, Y+8	; 0x08
    3386:	e8 01       	movw	r28, r16
    3388:	41 2c       	mov	r4, r1
    338a:	51 2c       	mov	r5, r1
    338c:	32 01       	movw	r6, r4
    338e:	00 e0       	ldi	r16, 0x00	; 0
    3390:	10 e0       	ldi	r17, 0x00	; 0
    3392:	c1 2c       	mov	r12, r1
    3394:	d1 2c       	mov	r13, r1
    3396:	76 01       	movw	r14, r12
    3398:	31 2c       	mov	r3, r1
    339a:	91 2c       	mov	r9, r1
    339c:	58 ee       	ldi	r21, 0xE8	; 232
    339e:	a5 2e       	mov	r10, r21
    33a0:	53 e0       	ldi	r21, 0x03	; 3
    33a2:	b5 2e       	mov	r11, r21
    33a4:	92 14       	cp	r9, r2
    33a6:	21 f1       	breq	.+72     	; 0x33f0 <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    33a8:	e9 91       	ld	r30, Y+
    33aa:	f9 91       	ld	r31, Y+
    33ac:	88 20       	and	r8, r8
    33ae:	21 f0       	breq	.+8      	; 0x33b8 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    33b0:	c5 01       	movw	r24, r10
    33b2:	8e 1b       	sub	r24, r30
    33b4:	9f 0b       	sbc	r25, r31
    33b6:	fc 01       	movw	r30, r24
    33b8:	e9 3c       	cpi	r30, 0xC9	; 201
    33ba:	f1 05       	cpc	r31, r1
    33bc:	24 f4       	brge	.+8      	; 0x33c6 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    33be:	e3 33       	cpi	r30, 0x33	; 51
    33c0:	f1 05       	cpc	r31, r1
    33c2:	74 f0       	brlt	.+28     	; 0x33e0 <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    33c4:	02 c0       	rjmp	.+4      	; 0x33ca <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    33c6:	33 24       	eor	r3, r3
    33c8:	33 94       	inc	r3
    33ca:	df 01       	movw	r26, r30
    33cc:	a3 01       	movw	r20, r6
    33ce:	92 01       	movw	r18, r4
    33d0:	0e 94 df 1a 	call	0x35be	; 0x35be <__mulshisi3>
    33d4:	c6 0e       	add	r12, r22
    33d6:	d7 1e       	adc	r13, r23
    33d8:	e8 1e       	adc	r14, r24
    33da:	f9 1e       	adc	r15, r25
    33dc:	0e 0f       	add	r16, r30
    33de:	1f 1f       	adc	r17, r31
    33e0:	93 94       	inc	r9
    33e2:	98 ee       	ldi	r25, 0xE8	; 232
    33e4:	49 0e       	add	r4, r25
    33e6:	93 e0       	ldi	r25, 0x03	; 3
    33e8:	59 1e       	adc	r5, r25
    33ea:	61 1c       	adc	r6, r1
    33ec:	71 1c       	adc	r7, r1
    33ee:	da cf       	rjmp	.-76     	; 0x33a4 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    33f0:	31 10       	cpse	r3, r1
    33f2:	1e c0       	rjmp	.+60     	; 0x3430 <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    33f4:	49 2d       	mov	r20, r9
    33f6:	50 e0       	ldi	r21, 0x00	; 0
    33f8:	41 50       	subi	r20, 0x01	; 1
    33fa:	51 09       	sbc	r21, r1
    33fc:	24 ef       	ldi	r18, 0xF4	; 244
    33fe:	31 e0       	ldi	r19, 0x01	; 1
    3400:	42 9f       	mul	r20, r18
    3402:	c0 01       	movw	r24, r0
    3404:	43 9f       	mul	r20, r19
    3406:	90 0d       	add	r25, r0
    3408:	52 9f       	mul	r21, r18
    340a:	90 0d       	add	r25, r0
    340c:	11 24       	eor	r1, r1
    340e:	20 91 fd 01 	lds	r18, 0x01FD	; 0x8001fd <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    3412:	30 91 fe 01 	lds	r19, 0x01FE	; 0x8001fe <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    3416:	28 17       	cp	r18, r24
    3418:	39 07       	cpc	r19, r25
    341a:	b4 f0       	brlt	.+44     	; 0x3448 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    341c:	88 ee       	ldi	r24, 0xE8	; 232
    341e:	93 e0       	ldi	r25, 0x03	; 3
    3420:	48 9f       	mul	r20, r24
    3422:	90 01       	movw	r18, r0
    3424:	49 9f       	mul	r20, r25
    3426:	30 0d       	add	r19, r0
    3428:	58 9f       	mul	r21, r24
    342a:	30 0d       	add	r19, r0
    342c:	11 24       	eor	r1, r1
    342e:	0e c0       	rjmp	.+28     	; 0x344c <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    3430:	98 01       	movw	r18, r16
    3432:	40 e0       	ldi	r20, 0x00	; 0
    3434:	50 e0       	ldi	r21, 0x00	; 0
    3436:	c7 01       	movw	r24, r14
    3438:	b6 01       	movw	r22, r12
    343a:	0e 94 7e 1a 	call	0x34fc	; 0x34fc <__udivmodsi4>
    343e:	30 93 fe 01 	sts	0x01FE, r19	; 0x8001fe <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    3442:	20 93 fd 01 	sts	0x01FD, r18	; 0x8001fd <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    3446:	02 c0       	rjmp	.+4      	; 0x344c <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    3448:	20 e0       	ldi	r18, 0x00	; 0
    344a:	30 e0       	ldi	r19, 0x00	; 0
    344c:	c9 01       	movw	r24, r18
    344e:	cd b7       	in	r28, 0x3d	; 61
    3450:	de b7       	in	r29, 0x3e	; 62
    3452:	e2 e1       	ldi	r30, 0x12	; 18
    3454:	0c 94 03 1b 	jmp	0x3606	; 0x3606 <__epilogue_restores__>

00003458 <_ZN16PololuQTRSensorsD1Ev>:
    3458:	cf 93       	push	r28
    345a:	df 93       	push	r29
    345c:	ec 01       	movw	r28, r24
    345e:	8a 81       	ldd	r24, Y+2	; 0x02
    3460:	9b 81       	ldd	r25, Y+3	; 0x03
    3462:	00 97       	sbiw	r24, 0x00	; 0
    3464:	11 f0       	breq	.+4      	; 0x346a <_ZN16PololuQTRSensorsD1Ev+0x12>
    3466:	0e 94 b6 1b 	call	0x376c	; 0x376c <free>
    346a:	8e 81       	ldd	r24, Y+6	; 0x06
    346c:	9f 81       	ldd	r25, Y+7	; 0x07
    346e:	00 97       	sbiw	r24, 0x00	; 0
    3470:	11 f0       	breq	.+4      	; 0x3476 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    3472:	0e 94 b6 1b 	call	0x376c	; 0x376c <free>
    3476:	88 81       	ld	r24, Y
    3478:	99 81       	ldd	r25, Y+1	; 0x01
    347a:	00 97       	sbiw	r24, 0x00	; 0
    347c:	11 f0       	breq	.+4      	; 0x3482 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    347e:	0e 94 b6 1b 	call	0x376c	; 0x376c <free>
    3482:	8c 81       	ldd	r24, Y+4	; 0x04
    3484:	9d 81       	ldd	r25, Y+5	; 0x05
    3486:	00 97       	sbiw	r24, 0x00	; 0
    3488:	11 f0       	breq	.+4      	; 0x348e <_ZN16PololuQTRSensorsD1Ev+0x36>
    348a:	0e 94 b6 1b 	call	0x376c	; 0x376c <free>
    348e:	df 91       	pop	r29
    3490:	cf 91       	pop	r28
    3492:	08 95       	ret

00003494 <__udivmodqi4>:
    3494:	99 1b       	sub	r25, r25
    3496:	79 e0       	ldi	r23, 0x09	; 9
    3498:	04 c0       	rjmp	.+8      	; 0x34a2 <__udivmodqi4_ep>

0000349a <__udivmodqi4_loop>:
    349a:	99 1f       	adc	r25, r25
    349c:	96 17       	cp	r25, r22
    349e:	08 f0       	brcs	.+2      	; 0x34a2 <__udivmodqi4_ep>
    34a0:	96 1b       	sub	r25, r22

000034a2 <__udivmodqi4_ep>:
    34a2:	88 1f       	adc	r24, r24
    34a4:	7a 95       	dec	r23
    34a6:	c9 f7       	brne	.-14     	; 0x349a <__udivmodqi4_loop>
    34a8:	80 95       	com	r24
    34aa:	08 95       	ret

000034ac <__udivmodhi4>:
    34ac:	aa 1b       	sub	r26, r26
    34ae:	bb 1b       	sub	r27, r27
    34b0:	51 e1       	ldi	r21, 0x11	; 17
    34b2:	07 c0       	rjmp	.+14     	; 0x34c2 <__udivmodhi4_ep>

000034b4 <__udivmodhi4_loop>:
    34b4:	aa 1f       	adc	r26, r26
    34b6:	bb 1f       	adc	r27, r27
    34b8:	a6 17       	cp	r26, r22
    34ba:	b7 07       	cpc	r27, r23
    34bc:	10 f0       	brcs	.+4      	; 0x34c2 <__udivmodhi4_ep>
    34be:	a6 1b       	sub	r26, r22
    34c0:	b7 0b       	sbc	r27, r23

000034c2 <__udivmodhi4_ep>:
    34c2:	88 1f       	adc	r24, r24
    34c4:	99 1f       	adc	r25, r25
    34c6:	5a 95       	dec	r21
    34c8:	a9 f7       	brne	.-22     	; 0x34b4 <__udivmodhi4_loop>
    34ca:	80 95       	com	r24
    34cc:	90 95       	com	r25
    34ce:	bc 01       	movw	r22, r24
    34d0:	cd 01       	movw	r24, r26
    34d2:	08 95       	ret

000034d4 <__divmodhi4>:
    34d4:	97 fb       	bst	r25, 7
    34d6:	07 2e       	mov	r0, r23
    34d8:	16 f4       	brtc	.+4      	; 0x34de <__divmodhi4+0xa>
    34da:	00 94       	com	r0
    34dc:	07 d0       	rcall	.+14     	; 0x34ec <__divmodhi4_neg1>
    34de:	77 fd       	sbrc	r23, 7
    34e0:	09 d0       	rcall	.+18     	; 0x34f4 <__divmodhi4_neg2>
    34e2:	0e 94 56 1a 	call	0x34ac	; 0x34ac <__udivmodhi4>
    34e6:	07 fc       	sbrc	r0, 7
    34e8:	05 d0       	rcall	.+10     	; 0x34f4 <__divmodhi4_neg2>
    34ea:	3e f4       	brtc	.+14     	; 0x34fa <__divmodhi4_exit>

000034ec <__divmodhi4_neg1>:
    34ec:	90 95       	com	r25
    34ee:	81 95       	neg	r24
    34f0:	9f 4f       	sbci	r25, 0xFF	; 255
    34f2:	08 95       	ret

000034f4 <__divmodhi4_neg2>:
    34f4:	70 95       	com	r23
    34f6:	61 95       	neg	r22
    34f8:	7f 4f       	sbci	r23, 0xFF	; 255

000034fa <__divmodhi4_exit>:
    34fa:	08 95       	ret

000034fc <__udivmodsi4>:
    34fc:	a1 e2       	ldi	r26, 0x21	; 33
    34fe:	1a 2e       	mov	r1, r26
    3500:	aa 1b       	sub	r26, r26
    3502:	bb 1b       	sub	r27, r27
    3504:	fd 01       	movw	r30, r26
    3506:	0d c0       	rjmp	.+26     	; 0x3522 <__udivmodsi4_ep>

00003508 <__udivmodsi4_loop>:
    3508:	aa 1f       	adc	r26, r26
    350a:	bb 1f       	adc	r27, r27
    350c:	ee 1f       	adc	r30, r30
    350e:	ff 1f       	adc	r31, r31
    3510:	a2 17       	cp	r26, r18
    3512:	b3 07       	cpc	r27, r19
    3514:	e4 07       	cpc	r30, r20
    3516:	f5 07       	cpc	r31, r21
    3518:	20 f0       	brcs	.+8      	; 0x3522 <__udivmodsi4_ep>
    351a:	a2 1b       	sub	r26, r18
    351c:	b3 0b       	sbc	r27, r19
    351e:	e4 0b       	sbc	r30, r20
    3520:	f5 0b       	sbc	r31, r21

00003522 <__udivmodsi4_ep>:
    3522:	66 1f       	adc	r22, r22
    3524:	77 1f       	adc	r23, r23
    3526:	88 1f       	adc	r24, r24
    3528:	99 1f       	adc	r25, r25
    352a:	1a 94       	dec	r1
    352c:	69 f7       	brne	.-38     	; 0x3508 <__udivmodsi4_loop>
    352e:	60 95       	com	r22
    3530:	70 95       	com	r23
    3532:	80 95       	com	r24
    3534:	90 95       	com	r25
    3536:	9b 01       	movw	r18, r22
    3538:	ac 01       	movw	r20, r24
    353a:	bd 01       	movw	r22, r26
    353c:	cf 01       	movw	r24, r30
    353e:	08 95       	ret

00003540 <__divmodsi4>:
    3540:	05 2e       	mov	r0, r21
    3542:	97 fb       	bst	r25, 7
    3544:	1e f4       	brtc	.+6      	; 0x354c <__divmodsi4+0xc>
    3546:	00 94       	com	r0
    3548:	0e 94 b7 1a 	call	0x356e	; 0x356e <__negsi2>
    354c:	57 fd       	sbrc	r21, 7
    354e:	07 d0       	rcall	.+14     	; 0x355e <__divmodsi4_neg2>
    3550:	0e 94 7e 1a 	call	0x34fc	; 0x34fc <__udivmodsi4>
    3554:	07 fc       	sbrc	r0, 7
    3556:	03 d0       	rcall	.+6      	; 0x355e <__divmodsi4_neg2>
    3558:	4e f4       	brtc	.+18     	; 0x356c <__divmodsi4_exit>
    355a:	0c 94 b7 1a 	jmp	0x356e	; 0x356e <__negsi2>

0000355e <__divmodsi4_neg2>:
    355e:	50 95       	com	r21
    3560:	40 95       	com	r20
    3562:	30 95       	com	r19
    3564:	21 95       	neg	r18
    3566:	3f 4f       	sbci	r19, 0xFF	; 255
    3568:	4f 4f       	sbci	r20, 0xFF	; 255
    356a:	5f 4f       	sbci	r21, 0xFF	; 255

0000356c <__divmodsi4_exit>:
    356c:	08 95       	ret

0000356e <__negsi2>:
    356e:	90 95       	com	r25
    3570:	80 95       	com	r24
    3572:	70 95       	com	r23
    3574:	61 95       	neg	r22
    3576:	7f 4f       	sbci	r23, 0xFF	; 255
    3578:	8f 4f       	sbci	r24, 0xFF	; 255
    357a:	9f 4f       	sbci	r25, 0xFF	; 255
    357c:	08 95       	ret

0000357e <__tablejump2__>:
    357e:	ee 0f       	add	r30, r30
    3580:	ff 1f       	adc	r31, r31
    3582:	05 90       	lpm	r0, Z+
    3584:	f4 91       	lpm	r31, Z
    3586:	e0 2d       	mov	r30, r0
    3588:	09 94       	ijmp

0000358a <__umulhisi3>:
    358a:	a2 9f       	mul	r26, r18
    358c:	b0 01       	movw	r22, r0
    358e:	b3 9f       	mul	r27, r19
    3590:	c0 01       	movw	r24, r0
    3592:	a3 9f       	mul	r26, r19
    3594:	70 0d       	add	r23, r0
    3596:	81 1d       	adc	r24, r1
    3598:	11 24       	eor	r1, r1
    359a:	91 1d       	adc	r25, r1
    359c:	b2 9f       	mul	r27, r18
    359e:	70 0d       	add	r23, r0
    35a0:	81 1d       	adc	r24, r1
    35a2:	11 24       	eor	r1, r1
    35a4:	91 1d       	adc	r25, r1
    35a6:	08 95       	ret

000035a8 <__muluhisi3>:
    35a8:	0e 94 c5 1a 	call	0x358a	; 0x358a <__umulhisi3>
    35ac:	a5 9f       	mul	r26, r21
    35ae:	90 0d       	add	r25, r0
    35b0:	b4 9f       	mul	r27, r20
    35b2:	90 0d       	add	r25, r0
    35b4:	a4 9f       	mul	r26, r20
    35b6:	80 0d       	add	r24, r0
    35b8:	91 1d       	adc	r25, r1
    35ba:	11 24       	eor	r1, r1
    35bc:	08 95       	ret

000035be <__mulshisi3>:
    35be:	b7 ff       	sbrs	r27, 7
    35c0:	0c 94 d4 1a 	jmp	0x35a8	; 0x35a8 <__muluhisi3>

000035c4 <__mulohisi3>:
    35c4:	0e 94 d4 1a 	call	0x35a8	; 0x35a8 <__muluhisi3>
    35c8:	82 1b       	sub	r24, r18
    35ca:	93 0b       	sbc	r25, r19
    35cc:	08 95       	ret

000035ce <__prologue_saves__>:
    35ce:	2f 92       	push	r2
    35d0:	3f 92       	push	r3
    35d2:	4f 92       	push	r4
    35d4:	5f 92       	push	r5
    35d6:	6f 92       	push	r6
    35d8:	7f 92       	push	r7
    35da:	8f 92       	push	r8
    35dc:	9f 92       	push	r9
    35de:	af 92       	push	r10
    35e0:	bf 92       	push	r11
    35e2:	cf 92       	push	r12
    35e4:	df 92       	push	r13
    35e6:	ef 92       	push	r14
    35e8:	ff 92       	push	r15
    35ea:	0f 93       	push	r16
    35ec:	1f 93       	push	r17
    35ee:	cf 93       	push	r28
    35f0:	df 93       	push	r29
    35f2:	cd b7       	in	r28, 0x3d	; 61
    35f4:	de b7       	in	r29, 0x3e	; 62
    35f6:	ca 1b       	sub	r28, r26
    35f8:	db 0b       	sbc	r29, r27
    35fa:	0f b6       	in	r0, 0x3f	; 63
    35fc:	f8 94       	cli
    35fe:	de bf       	out	0x3e, r29	; 62
    3600:	0f be       	out	0x3f, r0	; 63
    3602:	cd bf       	out	0x3d, r28	; 61
    3604:	09 94       	ijmp

00003606 <__epilogue_restores__>:
    3606:	2a 88       	ldd	r2, Y+18	; 0x12
    3608:	39 88       	ldd	r3, Y+17	; 0x11
    360a:	48 88       	ldd	r4, Y+16	; 0x10
    360c:	5f 84       	ldd	r5, Y+15	; 0x0f
    360e:	6e 84       	ldd	r6, Y+14	; 0x0e
    3610:	7d 84       	ldd	r7, Y+13	; 0x0d
    3612:	8c 84       	ldd	r8, Y+12	; 0x0c
    3614:	9b 84       	ldd	r9, Y+11	; 0x0b
    3616:	aa 84       	ldd	r10, Y+10	; 0x0a
    3618:	b9 84       	ldd	r11, Y+9	; 0x09
    361a:	c8 84       	ldd	r12, Y+8	; 0x08
    361c:	df 80       	ldd	r13, Y+7	; 0x07
    361e:	ee 80       	ldd	r14, Y+6	; 0x06
    3620:	fd 80       	ldd	r15, Y+5	; 0x05
    3622:	0c 81       	ldd	r16, Y+4	; 0x04
    3624:	1b 81       	ldd	r17, Y+3	; 0x03
    3626:	aa 81       	ldd	r26, Y+2	; 0x02
    3628:	b9 81       	ldd	r27, Y+1	; 0x01
    362a:	ce 0f       	add	r28, r30
    362c:	d1 1d       	adc	r29, r1
    362e:	0f b6       	in	r0, 0x3f	; 63
    3630:	f8 94       	cli
    3632:	de bf       	out	0x3e, r29	; 62
    3634:	0f be       	out	0x3f, r0	; 63
    3636:	cd bf       	out	0x3d, r28	; 61
    3638:	ed 01       	movw	r28, r26
    363a:	08 95       	ret

0000363c <malloc>:
    363c:	0f 93       	push	r16
    363e:	1f 93       	push	r17
    3640:	cf 93       	push	r28
    3642:	df 93       	push	r29
    3644:	82 30       	cpi	r24, 0x02	; 2
    3646:	91 05       	cpc	r25, r1
    3648:	10 f4       	brcc	.+4      	; 0x364e <malloc+0x12>
    364a:	82 e0       	ldi	r24, 0x02	; 2
    364c:	90 e0       	ldi	r25, 0x00	; 0
    364e:	e0 91 1d 02 	lds	r30, 0x021D	; 0x80021d <__flp>
    3652:	f0 91 1e 02 	lds	r31, 0x021E	; 0x80021e <__flp+0x1>
    3656:	20 e0       	ldi	r18, 0x00	; 0
    3658:	30 e0       	ldi	r19, 0x00	; 0
    365a:	a0 e0       	ldi	r26, 0x00	; 0
    365c:	b0 e0       	ldi	r27, 0x00	; 0
    365e:	30 97       	sbiw	r30, 0x00	; 0
    3660:	19 f1       	breq	.+70     	; 0x36a8 <malloc+0x6c>
    3662:	40 81       	ld	r20, Z
    3664:	51 81       	ldd	r21, Z+1	; 0x01
    3666:	02 81       	ldd	r16, Z+2	; 0x02
    3668:	13 81       	ldd	r17, Z+3	; 0x03
    366a:	48 17       	cp	r20, r24
    366c:	59 07       	cpc	r21, r25
    366e:	c8 f0       	brcs	.+50     	; 0x36a2 <malloc+0x66>
    3670:	84 17       	cp	r24, r20
    3672:	95 07       	cpc	r25, r21
    3674:	69 f4       	brne	.+26     	; 0x3690 <malloc+0x54>
    3676:	10 97       	sbiw	r26, 0x00	; 0
    3678:	31 f0       	breq	.+12     	; 0x3686 <malloc+0x4a>
    367a:	12 96       	adiw	r26, 0x02	; 2
    367c:	0c 93       	st	X, r16
    367e:	12 97       	sbiw	r26, 0x02	; 2
    3680:	13 96       	adiw	r26, 0x03	; 3
    3682:	1c 93       	st	X, r17
    3684:	27 c0       	rjmp	.+78     	; 0x36d4 <malloc+0x98>
    3686:	00 93 1d 02 	sts	0x021D, r16	; 0x80021d <__flp>
    368a:	10 93 1e 02 	sts	0x021E, r17	; 0x80021e <__flp+0x1>
    368e:	22 c0       	rjmp	.+68     	; 0x36d4 <malloc+0x98>
    3690:	21 15       	cp	r18, r1
    3692:	31 05       	cpc	r19, r1
    3694:	19 f0       	breq	.+6      	; 0x369c <malloc+0x60>
    3696:	42 17       	cp	r20, r18
    3698:	53 07       	cpc	r21, r19
    369a:	18 f4       	brcc	.+6      	; 0x36a2 <malloc+0x66>
    369c:	9a 01       	movw	r18, r20
    369e:	bd 01       	movw	r22, r26
    36a0:	ef 01       	movw	r28, r30
    36a2:	df 01       	movw	r26, r30
    36a4:	f8 01       	movw	r30, r16
    36a6:	db cf       	rjmp	.-74     	; 0x365e <malloc+0x22>
    36a8:	21 15       	cp	r18, r1
    36aa:	31 05       	cpc	r19, r1
    36ac:	f9 f0       	breq	.+62     	; 0x36ec <malloc+0xb0>
    36ae:	28 1b       	sub	r18, r24
    36b0:	39 0b       	sbc	r19, r25
    36b2:	24 30       	cpi	r18, 0x04	; 4
    36b4:	31 05       	cpc	r19, r1
    36b6:	80 f4       	brcc	.+32     	; 0x36d8 <malloc+0x9c>
    36b8:	8a 81       	ldd	r24, Y+2	; 0x02
    36ba:	9b 81       	ldd	r25, Y+3	; 0x03
    36bc:	61 15       	cp	r22, r1
    36be:	71 05       	cpc	r23, r1
    36c0:	21 f0       	breq	.+8      	; 0x36ca <malloc+0x8e>
    36c2:	fb 01       	movw	r30, r22
    36c4:	93 83       	std	Z+3, r25	; 0x03
    36c6:	82 83       	std	Z+2, r24	; 0x02
    36c8:	04 c0       	rjmp	.+8      	; 0x36d2 <malloc+0x96>
    36ca:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <__flp+0x1>
    36ce:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <__flp>
    36d2:	fe 01       	movw	r30, r28
    36d4:	32 96       	adiw	r30, 0x02	; 2
    36d6:	44 c0       	rjmp	.+136    	; 0x3760 <malloc+0x124>
    36d8:	fe 01       	movw	r30, r28
    36da:	e2 0f       	add	r30, r18
    36dc:	f3 1f       	adc	r31, r19
    36de:	81 93       	st	Z+, r24
    36e0:	91 93       	st	Z+, r25
    36e2:	22 50       	subi	r18, 0x02	; 2
    36e4:	31 09       	sbc	r19, r1
    36e6:	39 83       	std	Y+1, r19	; 0x01
    36e8:	28 83       	st	Y, r18
    36ea:	3a c0       	rjmp	.+116    	; 0x3760 <malloc+0x124>
    36ec:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <__brkval>
    36f0:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <__brkval+0x1>
    36f4:	23 2b       	or	r18, r19
    36f6:	41 f4       	brne	.+16     	; 0x3708 <malloc+0xcc>
    36f8:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__malloc_heap_start>
    36fc:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__malloc_heap_start+0x1>
    3700:	30 93 1c 02 	sts	0x021C, r19	; 0x80021c <__brkval+0x1>
    3704:	20 93 1b 02 	sts	0x021B, r18	; 0x80021b <__brkval>
    3708:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_end>
    370c:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_end+0x1>
    3710:	21 15       	cp	r18, r1
    3712:	31 05       	cpc	r19, r1
    3714:	41 f4       	brne	.+16     	; 0x3726 <malloc+0xea>
    3716:	2d b7       	in	r18, 0x3d	; 61
    3718:	3e b7       	in	r19, 0x3e	; 62
    371a:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <__malloc_margin>
    371e:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <__malloc_margin+0x1>
    3722:	24 1b       	sub	r18, r20
    3724:	35 0b       	sbc	r19, r21
    3726:	e0 91 1b 02 	lds	r30, 0x021B	; 0x80021b <__brkval>
    372a:	f0 91 1c 02 	lds	r31, 0x021C	; 0x80021c <__brkval+0x1>
    372e:	e2 17       	cp	r30, r18
    3730:	f3 07       	cpc	r31, r19
    3732:	a0 f4       	brcc	.+40     	; 0x375c <malloc+0x120>
    3734:	2e 1b       	sub	r18, r30
    3736:	3f 0b       	sbc	r19, r31
    3738:	28 17       	cp	r18, r24
    373a:	39 07       	cpc	r19, r25
    373c:	78 f0       	brcs	.+30     	; 0x375c <malloc+0x120>
    373e:	ac 01       	movw	r20, r24
    3740:	4e 5f       	subi	r20, 0xFE	; 254
    3742:	5f 4f       	sbci	r21, 0xFF	; 255
    3744:	24 17       	cp	r18, r20
    3746:	35 07       	cpc	r19, r21
    3748:	48 f0       	brcs	.+18     	; 0x375c <malloc+0x120>
    374a:	4e 0f       	add	r20, r30
    374c:	5f 1f       	adc	r21, r31
    374e:	50 93 1c 02 	sts	0x021C, r21	; 0x80021c <__brkval+0x1>
    3752:	40 93 1b 02 	sts	0x021B, r20	; 0x80021b <__brkval>
    3756:	81 93       	st	Z+, r24
    3758:	91 93       	st	Z+, r25
    375a:	02 c0       	rjmp	.+4      	; 0x3760 <malloc+0x124>
    375c:	e0 e0       	ldi	r30, 0x00	; 0
    375e:	f0 e0       	ldi	r31, 0x00	; 0
    3760:	cf 01       	movw	r24, r30
    3762:	df 91       	pop	r29
    3764:	cf 91       	pop	r28
    3766:	1f 91       	pop	r17
    3768:	0f 91       	pop	r16
    376a:	08 95       	ret

0000376c <free>:
    376c:	cf 93       	push	r28
    376e:	df 93       	push	r29
    3770:	00 97       	sbiw	r24, 0x00	; 0
    3772:	09 f4       	brne	.+2      	; 0x3776 <free+0xa>
    3774:	81 c0       	rjmp	.+258    	; 0x3878 <free+0x10c>
    3776:	fc 01       	movw	r30, r24
    3778:	32 97       	sbiw	r30, 0x02	; 2
    377a:	13 82       	std	Z+3, r1	; 0x03
    377c:	12 82       	std	Z+2, r1	; 0x02
    377e:	a0 91 1d 02 	lds	r26, 0x021D	; 0x80021d <__flp>
    3782:	b0 91 1e 02 	lds	r27, 0x021E	; 0x80021e <__flp+0x1>
    3786:	10 97       	sbiw	r26, 0x00	; 0
    3788:	81 f4       	brne	.+32     	; 0x37aa <free+0x3e>
    378a:	20 81       	ld	r18, Z
    378c:	31 81       	ldd	r19, Z+1	; 0x01
    378e:	82 0f       	add	r24, r18
    3790:	93 1f       	adc	r25, r19
    3792:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <__brkval>
    3796:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <__brkval+0x1>
    379a:	28 17       	cp	r18, r24
    379c:	39 07       	cpc	r19, r25
    379e:	51 f5       	brne	.+84     	; 0x37f4 <free+0x88>
    37a0:	f0 93 1c 02 	sts	0x021C, r31	; 0x80021c <__brkval+0x1>
    37a4:	e0 93 1b 02 	sts	0x021B, r30	; 0x80021b <__brkval>
    37a8:	67 c0       	rjmp	.+206    	; 0x3878 <free+0x10c>
    37aa:	ed 01       	movw	r28, r26
    37ac:	20 e0       	ldi	r18, 0x00	; 0
    37ae:	30 e0       	ldi	r19, 0x00	; 0
    37b0:	ce 17       	cp	r28, r30
    37b2:	df 07       	cpc	r29, r31
    37b4:	40 f4       	brcc	.+16     	; 0x37c6 <free+0x5a>
    37b6:	4a 81       	ldd	r20, Y+2	; 0x02
    37b8:	5b 81       	ldd	r21, Y+3	; 0x03
    37ba:	9e 01       	movw	r18, r28
    37bc:	41 15       	cp	r20, r1
    37be:	51 05       	cpc	r21, r1
    37c0:	f1 f0       	breq	.+60     	; 0x37fe <free+0x92>
    37c2:	ea 01       	movw	r28, r20
    37c4:	f5 cf       	rjmp	.-22     	; 0x37b0 <free+0x44>
    37c6:	d3 83       	std	Z+3, r29	; 0x03
    37c8:	c2 83       	std	Z+2, r28	; 0x02
    37ca:	40 81       	ld	r20, Z
    37cc:	51 81       	ldd	r21, Z+1	; 0x01
    37ce:	84 0f       	add	r24, r20
    37d0:	95 1f       	adc	r25, r21
    37d2:	c8 17       	cp	r28, r24
    37d4:	d9 07       	cpc	r29, r25
    37d6:	59 f4       	brne	.+22     	; 0x37ee <free+0x82>
    37d8:	88 81       	ld	r24, Y
    37da:	99 81       	ldd	r25, Y+1	; 0x01
    37dc:	84 0f       	add	r24, r20
    37de:	95 1f       	adc	r25, r21
    37e0:	02 96       	adiw	r24, 0x02	; 2
    37e2:	91 83       	std	Z+1, r25	; 0x01
    37e4:	80 83       	st	Z, r24
    37e6:	8a 81       	ldd	r24, Y+2	; 0x02
    37e8:	9b 81       	ldd	r25, Y+3	; 0x03
    37ea:	93 83       	std	Z+3, r25	; 0x03
    37ec:	82 83       	std	Z+2, r24	; 0x02
    37ee:	21 15       	cp	r18, r1
    37f0:	31 05       	cpc	r19, r1
    37f2:	29 f4       	brne	.+10     	; 0x37fe <free+0x92>
    37f4:	f0 93 1e 02 	sts	0x021E, r31	; 0x80021e <__flp+0x1>
    37f8:	e0 93 1d 02 	sts	0x021D, r30	; 0x80021d <__flp>
    37fc:	3d c0       	rjmp	.+122    	; 0x3878 <free+0x10c>
    37fe:	e9 01       	movw	r28, r18
    3800:	fb 83       	std	Y+3, r31	; 0x03
    3802:	ea 83       	std	Y+2, r30	; 0x02
    3804:	49 91       	ld	r20, Y+
    3806:	59 91       	ld	r21, Y+
    3808:	c4 0f       	add	r28, r20
    380a:	d5 1f       	adc	r29, r21
    380c:	ec 17       	cp	r30, r28
    380e:	fd 07       	cpc	r31, r29
    3810:	61 f4       	brne	.+24     	; 0x382a <free+0xbe>
    3812:	80 81       	ld	r24, Z
    3814:	91 81       	ldd	r25, Z+1	; 0x01
    3816:	84 0f       	add	r24, r20
    3818:	95 1f       	adc	r25, r21
    381a:	02 96       	adiw	r24, 0x02	; 2
    381c:	e9 01       	movw	r28, r18
    381e:	99 83       	std	Y+1, r25	; 0x01
    3820:	88 83       	st	Y, r24
    3822:	82 81       	ldd	r24, Z+2	; 0x02
    3824:	93 81       	ldd	r25, Z+3	; 0x03
    3826:	9b 83       	std	Y+3, r25	; 0x03
    3828:	8a 83       	std	Y+2, r24	; 0x02
    382a:	e0 e0       	ldi	r30, 0x00	; 0
    382c:	f0 e0       	ldi	r31, 0x00	; 0
    382e:	12 96       	adiw	r26, 0x02	; 2
    3830:	8d 91       	ld	r24, X+
    3832:	9c 91       	ld	r25, X
    3834:	13 97       	sbiw	r26, 0x03	; 3
    3836:	00 97       	sbiw	r24, 0x00	; 0
    3838:	19 f0       	breq	.+6      	; 0x3840 <free+0xd4>
    383a:	fd 01       	movw	r30, r26
    383c:	dc 01       	movw	r26, r24
    383e:	f7 cf       	rjmp	.-18     	; 0x382e <free+0xc2>
    3840:	8d 91       	ld	r24, X+
    3842:	9c 91       	ld	r25, X
    3844:	11 97       	sbiw	r26, 0x01	; 1
    3846:	9d 01       	movw	r18, r26
    3848:	2e 5f       	subi	r18, 0xFE	; 254
    384a:	3f 4f       	sbci	r19, 0xFF	; 255
    384c:	82 0f       	add	r24, r18
    384e:	93 1f       	adc	r25, r19
    3850:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <__brkval>
    3854:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <__brkval+0x1>
    3858:	28 17       	cp	r18, r24
    385a:	39 07       	cpc	r19, r25
    385c:	69 f4       	brne	.+26     	; 0x3878 <free+0x10c>
    385e:	30 97       	sbiw	r30, 0x00	; 0
    3860:	29 f4       	brne	.+10     	; 0x386c <free+0x100>
    3862:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <__flp+0x1>
    3866:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <__flp>
    386a:	02 c0       	rjmp	.+4      	; 0x3870 <free+0x104>
    386c:	13 82       	std	Z+3, r1	; 0x03
    386e:	12 82       	std	Z+2, r1	; 0x02
    3870:	b0 93 1c 02 	sts	0x021C, r27	; 0x80021c <__brkval+0x1>
    3874:	a0 93 1b 02 	sts	0x021B, r26	; 0x80021b <__brkval>
    3878:	df 91       	pop	r29
    387a:	cf 91       	pop	r28
    387c:	08 95       	ret

0000387e <strncat>:
    387e:	fb 01       	movw	r30, r22
    3880:	dc 01       	movw	r26, r24
    3882:	0d 90       	ld	r0, X+
    3884:	00 20       	and	r0, r0
    3886:	e9 f7       	brne	.-6      	; 0x3882 <strncat+0x4>
    3888:	11 97       	sbiw	r26, 0x01	; 1
    388a:	41 50       	subi	r20, 0x01	; 1
    388c:	50 40       	sbci	r21, 0x00	; 0
    388e:	28 f0       	brcs	.+10     	; 0x389a <strncat+0x1c>
    3890:	01 90       	ld	r0, Z+
    3892:	00 20       	and	r0, r0
    3894:	0d 92       	st	X+, r0
    3896:	c9 f7       	brne	.-14     	; 0x388a <strncat+0xc>
    3898:	08 95       	ret
    389a:	1c 92       	st	X, r1
    389c:	08 95       	ret

0000389e <__do_global_dtors>:
    389e:	11 e0       	ldi	r17, 0x01	; 1
    38a0:	c2 e2       	ldi	r28, 0x22	; 34
    38a2:	d1 e0       	ldi	r29, 0x01	; 1
    38a4:	04 c0       	rjmp	.+8      	; 0x38ae <__do_global_dtors+0x10>
    38a6:	fe 01       	movw	r30, r28
    38a8:	0e 94 bf 1a 	call	0x357e	; 0x357e <__tablejump2__>
    38ac:	21 96       	adiw	r28, 0x01	; 1
    38ae:	c3 32       	cpi	r28, 0x23	; 35
    38b0:	d1 07       	cpc	r29, r17
    38b2:	c9 f7       	brne	.-14     	; 0x38a6 <__do_global_dtors+0x8>
    38b4:	f8 94       	cli

000038b6 <__stop_program>:
    38b6:	ff cf       	rjmp	.-2      	; 0x38b6 <__stop_program>
