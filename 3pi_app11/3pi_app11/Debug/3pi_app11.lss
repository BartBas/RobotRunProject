
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008c  00800100  00003e36  00003eca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003e36  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000093  0080018c  0080018c  00003f56  2**0
                  ALLOC
  3 .stab         00007b00  00000000  00000000  00003f58  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000a086  00000000  00000000  0000ba58  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  00015ade  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00015b20  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 000001b8  00000000  00000000  00015b60  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   000036c9  00000000  00000000  00015d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 0000121f  00000000  00000000  000193e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00002158  00000000  00000000  0001a600  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000544  00000000  00000000  0001c758  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000a91  00000000  00000000  0001cc9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    000016ae  00000000  00000000  0001d72d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000001d0  00000000  00000000  0001eddb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4b 00 	jmp	0x96	; 0x96 <__dtors_end>
       4:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
       8:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
       c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      10:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      14:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      18:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      1c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      20:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      24:	0c 94 1c 17 	jmp	0x2e38	; 0x2e38 <__vector_9>
      28:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      2c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      30:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      34:	0c 94 b6 12 	jmp	0x256c	; 0x256c <__vector_13>
      38:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      3c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      40:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      44:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      48:	0c 94 2b 16 	jmp	0x2c56	; 0x2c56 <__vector_18>
      4c:	0c 94 f7 16 	jmp	0x2dee	; 0x2dee <__vector_19>
      50:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      54:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      58:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      5c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      60:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      64:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      68:	e8 08       	sbc	r14, r8
      6a:	ec 08       	sbc	r14, r12
      6c:	6d 09       	sbc	r22, r13
      6e:	07 09       	sbc	r16, r7
      70:	16 09       	sbc	r17, r6
      72:	fb 08       	sbc	r15, r11
      74:	07 09       	sbc	r16, r7
      76:	07 09       	sbc	r16, r7
      78:	07 09       	sbc	r16, r7

0000007a <__trampolines_end>:
      7a:	3e 67       	ori	r19, 0x7E	; 126
      7c:	33 32       	cpi	r19, 0x23	; 35
      7e:	3e 3e       	cpi	r19, 0xEE	; 238
      80:	63 33       	cpi	r22, 0x33	; 51
      82:	32 00       	.word	0x0032	; ????

00000084 <Beep>:
      84:	3e 67 33 32 00                                      >g32.

00000089 <sound>:
      89:	3e 67 33 32 3e 3e 63 33 32 00 00                    >g32>>c32..

00000094 <__ctors_end>:
      94:	fd 17       	cp	r31, r29

00000096 <__dtors_end>:
      96:	11 24       	eor	r1, r1
      98:	1f be       	out	0x3f, r1	; 63
      9a:	cf ef       	ldi	r28, 0xFF	; 255
      9c:	d8 e0       	ldi	r29, 0x08	; 8
      9e:	de bf       	out	0x3e, r29	; 62
      a0:	cd bf       	out	0x3d, r28	; 61

000000a2 <__do_copy_data>:
      a2:	11 e0       	ldi	r17, 0x01	; 1
      a4:	a0 e0       	ldi	r26, 0x00	; 0
      a6:	b1 e0       	ldi	r27, 0x01	; 1
      a8:	e6 e3       	ldi	r30, 0x36	; 54
      aa:	fe e3       	ldi	r31, 0x3E	; 62
      ac:	02 c0       	rjmp	.+4      	; 0xb2 <__do_copy_data+0x10>
      ae:	05 90       	lpm	r0, Z+
      b0:	0d 92       	st	X+, r0
      b2:	ac 38       	cpi	r26, 0x8C	; 140
      b4:	b1 07       	cpc	r27, r17
      b6:	d9 f7       	brne	.-10     	; 0xae <__do_copy_data+0xc>

000000b8 <__do_clear_bss>:
      b8:	22 e0       	ldi	r18, 0x02	; 2
      ba:	ac e8       	ldi	r26, 0x8C	; 140
      bc:	b1 e0       	ldi	r27, 0x01	; 1
      be:	01 c0       	rjmp	.+2      	; 0xc2 <.do_clear_bss_start>

000000c0 <.do_clear_bss_loop>:
      c0:	1d 92       	st	X+, r1

000000c2 <.do_clear_bss_start>:
      c2:	af 31       	cpi	r26, 0x1F	; 31
      c4:	b2 07       	cpc	r27, r18
      c6:	e1 f7       	brne	.-8      	; 0xc0 <.do_clear_bss_loop>
      c8:	0e 94 1e 04 	call	0x83c	; 0x83c <main>
      cc:	0c 94 0e 1f 	jmp	0x3e1c	; 0x3e1c <__do_global_dtors>

000000d0 <__bad_interrupt>:
      d0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d4 <filllocationarrays>:
      d4:	cf 93       	push	r28
      d6:	df 93       	push	r29
      d8:	cd b7       	in	r28, 0x3d	; 61
      da:	de b7       	in	r29, 0x3e	; 62
      dc:	e2 97       	sbiw	r28, 0x32	; 50
      de:	0f b6       	in	r0, 0x3f	; 63
      e0:	f8 94       	cli
      e2:	de bf       	out	0x3e, r29	; 62
      e4:	0f be       	out	0x3f, r0	; 63
      e6:	cd bf       	out	0x3d, r28	; 61
      e8:	dc 01       	movw	r26, r24
      ea:	20 e0       	ldi	r18, 0x00	; 0
      ec:	30 e0       	ldi	r19, 0x00	; 0
      ee:	1a c0       	rjmp	.+52     	; 0x124 <filllocationarrays+0x50>
      f0:	ad 01       	movw	r20, r26
      f2:	42 0f       	add	r20, r18
      f4:	53 1f       	adc	r21, r19
      f6:	ca 01       	movw	r24, r20
      f8:	8e 5a       	subi	r24, 0xAE	; 174
      fa:	9f 4f       	sbci	r25, 0xFF	; 255
      fc:	fc 01       	movw	r30, r24
      fe:	10 82       	st	Z, r1
     100:	fa 01       	movw	r30, r20
     102:	11 ae       	std	Z+57, r1	; 0x39
     104:	ea e1       	ldi	r30, 0x1A	; 26
     106:	f0 e0       	ldi	r31, 0x00	; 0
     108:	ec 0f       	add	r30, r28
     10a:	fd 1f       	adc	r31, r29
     10c:	e2 0f       	add	r30, r18
     10e:	f3 1f       	adc	r31, r19
     110:	10 82       	st	Z, r1
     112:	e1 e0       	ldi	r30, 0x01	; 1
     114:	f0 e0       	ldi	r31, 0x00	; 0
     116:	ec 0f       	add	r30, r28
     118:	fd 1f       	adc	r31, r29
     11a:	e2 0f       	add	r30, r18
     11c:	f3 1f       	adc	r31, r19
     11e:	10 82       	st	Z, r1
     120:	2f 5f       	subi	r18, 0xFF	; 255
     122:	3f 4f       	sbci	r19, 0xFF	; 255
     124:	29 31       	cpi	r18, 0x19	; 25
     126:	31 05       	cpc	r19, r1
     128:	1c f3       	brlt	.-58     	; 0xf0 <filllocationarrays+0x1c>
     12a:	5c 96       	adiw	r26, 0x1c	; 28
     12c:	8c 91       	ld	r24, X
     12e:	5c 97       	sbiw	r26, 0x1c	; 28
     130:	81 30       	cpi	r24, 0x01	; 1
     132:	29 f4       	brne	.+10     	; 0x13e <filllocationarrays+0x6a>
     134:	89 83       	std	Y+1, r24	; 0x01
     136:	8a 8f       	std	Y+26, r24	; 0x1a
     138:	21 e0       	ldi	r18, 0x01	; 1
     13a:	30 e0       	ldi	r19, 0x00	; 0
     13c:	02 c0       	rjmp	.+4      	; 0x142 <filllocationarrays+0x6e>
     13e:	20 e0       	ldi	r18, 0x00	; 0
     140:	30 e0       	ldi	r19, 0x00	; 0
     142:	40 e0       	ldi	r20, 0x00	; 0
     144:	50 e0       	ldi	r21, 0x00	; 0
     146:	3b c0       	rjmp	.+118    	; 0x1be <filllocationarrays+0xea>
     148:	5d 96       	adiw	r26, 0x1d	; 29
     14a:	8c 91       	ld	r24, X
     14c:	5d 97       	sbiw	r26, 0x1d	; 29
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	04 2e       	mov	r0, r20
     152:	02 c0       	rjmp	.+4      	; 0x158 <filllocationarrays+0x84>
     154:	95 95       	asr	r25
     156:	87 95       	ror	r24
     158:	0a 94       	dec	r0
     15a:	e2 f7       	brpl	.-8      	; 0x154 <filllocationarrays+0x80>
     15c:	81 70       	andi	r24, 0x01	; 1
     15e:	44 30       	cpi	r20, 0x04	; 4
     160:	51 05       	cpc	r21, r1
     162:	b4 f4       	brge	.+44     	; 0x190 <filllocationarrays+0xbc>
     164:	81 30       	cpi	r24, 0x01	; 1
     166:	49 f5       	brne	.+82     	; 0x1ba <filllocationarrays+0xe6>
     168:	e1 e0       	ldi	r30, 0x01	; 1
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	ec 0f       	add	r30, r28
     16e:	fd 1f       	adc	r31, r29
     170:	e2 0f       	add	r30, r18
     172:	f3 1f       	adc	r31, r19
     174:	82 e0       	ldi	r24, 0x02	; 2
     176:	84 0f       	add	r24, r20
     178:	80 83       	st	Z, r24
     17a:	ea e1       	ldi	r30, 0x1A	; 26
     17c:	f0 e0       	ldi	r31, 0x00	; 0
     17e:	ec 0f       	add	r30, r28
     180:	fd 1f       	adc	r31, r29
     182:	e2 0f       	add	r30, r18
     184:	f3 1f       	adc	r31, r19
     186:	81 e0       	ldi	r24, 0x01	; 1
     188:	80 83       	st	Z, r24
     18a:	2f 5f       	subi	r18, 0xFF	; 255
     18c:	3f 4f       	sbci	r19, 0xFF	; 255
     18e:	15 c0       	rjmp	.+42     	; 0x1ba <filllocationarrays+0xe6>
     190:	81 30       	cpi	r24, 0x01	; 1
     192:	99 f4       	brne	.+38     	; 0x1ba <filllocationarrays+0xe6>
     194:	e1 e0       	ldi	r30, 0x01	; 1
     196:	f0 e0       	ldi	r31, 0x00	; 0
     198:	ec 0f       	add	r30, r28
     19a:	fd 1f       	adc	r31, r29
     19c:	e2 0f       	add	r30, r18
     19e:	f3 1f       	adc	r31, r19
     1a0:	8d ef       	ldi	r24, 0xFD	; 253
     1a2:	84 0f       	add	r24, r20
     1a4:	80 83       	st	Z, r24
     1a6:	ea e1       	ldi	r30, 0x1A	; 26
     1a8:	f0 e0       	ldi	r31, 0x00	; 0
     1aa:	ec 0f       	add	r30, r28
     1ac:	fd 1f       	adc	r31, r29
     1ae:	e2 0f       	add	r30, r18
     1b0:	f3 1f       	adc	r31, r19
     1b2:	82 e0       	ldi	r24, 0x02	; 2
     1b4:	80 83       	st	Z, r24
     1b6:	2f 5f       	subi	r18, 0xFF	; 255
     1b8:	3f 4f       	sbci	r19, 0xFF	; 255
     1ba:	4f 5f       	subi	r20, 0xFF	; 255
     1bc:	5f 4f       	sbci	r21, 0xFF	; 255
     1be:	48 30       	cpi	r20, 0x08	; 8
     1c0:	51 05       	cpc	r21, r1
     1c2:	14 f2       	brlt	.-124    	; 0x148 <filllocationarrays+0x74>
     1c4:	40 e0       	ldi	r20, 0x00	; 0
     1c6:	50 e0       	ldi	r21, 0x00	; 0
     1c8:	53 c0       	rjmp	.+166    	; 0x270 <filllocationarrays+0x19c>
     1ca:	5e 96       	adiw	r26, 0x1e	; 30
     1cc:	8c 91       	ld	r24, X
     1ce:	5e 97       	sbiw	r26, 0x1e	; 30
     1d0:	90 e0       	ldi	r25, 0x00	; 0
     1d2:	04 2e       	mov	r0, r20
     1d4:	02 c0       	rjmp	.+4      	; 0x1da <filllocationarrays+0x106>
     1d6:	95 95       	asr	r25
     1d8:	87 95       	ror	r24
     1da:	0a 94       	dec	r0
     1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <filllocationarrays+0x102>
     1de:	81 70       	andi	r24, 0x01	; 1
     1e0:	41 15       	cp	r20, r1
     1e2:	51 05       	cpc	r21, r1
     1e4:	b9 f4       	brne	.+46     	; 0x214 <filllocationarrays+0x140>
     1e6:	81 30       	cpi	r24, 0x01	; 1
     1e8:	09 f0       	breq	.+2      	; 0x1ec <filllocationarrays+0x118>
     1ea:	40 c0       	rjmp	.+128    	; 0x26c <filllocationarrays+0x198>
     1ec:	e1 e0       	ldi	r30, 0x01	; 1
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	ec 0f       	add	r30, r28
     1f2:	fd 1f       	adc	r31, r29
     1f4:	e2 0f       	add	r30, r18
     1f6:	f3 1f       	adc	r31, r19
     1f8:	85 e0       	ldi	r24, 0x05	; 5
     1fa:	84 0f       	add	r24, r20
     1fc:	80 83       	st	Z, r24
     1fe:	ea e1       	ldi	r30, 0x1A	; 26
     200:	f0 e0       	ldi	r31, 0x00	; 0
     202:	ec 0f       	add	r30, r28
     204:	fd 1f       	adc	r31, r29
     206:	e2 0f       	add	r30, r18
     208:	f3 1f       	adc	r31, r19
     20a:	82 e0       	ldi	r24, 0x02	; 2
     20c:	80 83       	st	Z, r24
     20e:	2f 5f       	subi	r18, 0xFF	; 255
     210:	3f 4f       	sbci	r19, 0xFF	; 255
     212:	2c c0       	rjmp	.+88     	; 0x26c <filllocationarrays+0x198>
     214:	46 30       	cpi	r20, 0x06	; 6
     216:	51 05       	cpc	r21, r1
     218:	a4 f4       	brge	.+40     	; 0x242 <filllocationarrays+0x16e>
     21a:	81 30       	cpi	r24, 0x01	; 1
     21c:	39 f5       	brne	.+78     	; 0x26c <filllocationarrays+0x198>
     21e:	e1 e0       	ldi	r30, 0x01	; 1
     220:	f0 e0       	ldi	r31, 0x00	; 0
     222:	ec 0f       	add	r30, r28
     224:	fd 1f       	adc	r31, r29
     226:	e2 0f       	add	r30, r18
     228:	f3 1f       	adc	r31, r19
     22a:	40 83       	st	Z, r20
     22c:	ea e1       	ldi	r30, 0x1A	; 26
     22e:	f0 e0       	ldi	r31, 0x00	; 0
     230:	ec 0f       	add	r30, r28
     232:	fd 1f       	adc	r31, r29
     234:	e2 0f       	add	r30, r18
     236:	f3 1f       	adc	r31, r19
     238:	83 e0       	ldi	r24, 0x03	; 3
     23a:	80 83       	st	Z, r24
     23c:	2f 5f       	subi	r18, 0xFF	; 255
     23e:	3f 4f       	sbci	r19, 0xFF	; 255
     240:	15 c0       	rjmp	.+42     	; 0x26c <filllocationarrays+0x198>
     242:	81 30       	cpi	r24, 0x01	; 1
     244:	99 f4       	brne	.+38     	; 0x26c <filllocationarrays+0x198>
     246:	e1 e0       	ldi	r30, 0x01	; 1
     248:	f0 e0       	ldi	r31, 0x00	; 0
     24a:	ec 0f       	add	r30, r28
     24c:	fd 1f       	adc	r31, r29
     24e:	e2 0f       	add	r30, r18
     250:	f3 1f       	adc	r31, r19
     252:	8b ef       	ldi	r24, 0xFB	; 251
     254:	84 0f       	add	r24, r20
     256:	80 83       	st	Z, r24
     258:	ea e1       	ldi	r30, 0x1A	; 26
     25a:	f0 e0       	ldi	r31, 0x00	; 0
     25c:	ec 0f       	add	r30, r28
     25e:	fd 1f       	adc	r31, r29
     260:	e2 0f       	add	r30, r18
     262:	f3 1f       	adc	r31, r19
     264:	84 e0       	ldi	r24, 0x04	; 4
     266:	80 83       	st	Z, r24
     268:	2f 5f       	subi	r18, 0xFF	; 255
     26a:	3f 4f       	sbci	r19, 0xFF	; 255
     26c:	4f 5f       	subi	r20, 0xFF	; 255
     26e:	5f 4f       	sbci	r21, 0xFF	; 255
     270:	48 30       	cpi	r20, 0x08	; 8
     272:	51 05       	cpc	r21, r1
     274:	0c f4       	brge	.+2      	; 0x278 <filllocationarrays+0x1a4>
     276:	a9 cf       	rjmp	.-174    	; 0x1ca <filllocationarrays+0xf6>
     278:	40 e0       	ldi	r20, 0x00	; 0
     27a:	50 e0       	ldi	r21, 0x00	; 0
     27c:	3b c0       	rjmp	.+118    	; 0x2f4 <filllocationarrays+0x220>
     27e:	5f 96       	adiw	r26, 0x1f	; 31
     280:	8c 91       	ld	r24, X
     282:	5f 97       	sbiw	r26, 0x1f	; 31
     284:	90 e0       	ldi	r25, 0x00	; 0
     286:	04 2e       	mov	r0, r20
     288:	02 c0       	rjmp	.+4      	; 0x28e <filllocationarrays+0x1ba>
     28a:	95 95       	asr	r25
     28c:	87 95       	ror	r24
     28e:	0a 94       	dec	r0
     290:	e2 f7       	brpl	.-8      	; 0x28a <filllocationarrays+0x1b6>
     292:	81 70       	andi	r24, 0x01	; 1
     294:	43 30       	cpi	r20, 0x03	; 3
     296:	51 05       	cpc	r21, r1
     298:	b4 f4       	brge	.+44     	; 0x2c6 <filllocationarrays+0x1f2>
     29a:	81 30       	cpi	r24, 0x01	; 1
     29c:	49 f5       	brne	.+82     	; 0x2f0 <filllocationarrays+0x21c>
     29e:	e1 e0       	ldi	r30, 0x01	; 1
     2a0:	f0 e0       	ldi	r31, 0x00	; 0
     2a2:	ec 0f       	add	r30, r28
     2a4:	fd 1f       	adc	r31, r29
     2a6:	e2 0f       	add	r30, r18
     2a8:	f3 1f       	adc	r31, r19
     2aa:	83 e0       	ldi	r24, 0x03	; 3
     2ac:	84 0f       	add	r24, r20
     2ae:	80 83       	st	Z, r24
     2b0:	ea e1       	ldi	r30, 0x1A	; 26
     2b2:	f0 e0       	ldi	r31, 0x00	; 0
     2b4:	ec 0f       	add	r30, r28
     2b6:	fd 1f       	adc	r31, r29
     2b8:	e2 0f       	add	r30, r18
     2ba:	f3 1f       	adc	r31, r19
     2bc:	84 e0       	ldi	r24, 0x04	; 4
     2be:	80 83       	st	Z, r24
     2c0:	2f 5f       	subi	r18, 0xFF	; 255
     2c2:	3f 4f       	sbci	r19, 0xFF	; 255
     2c4:	15 c0       	rjmp	.+42     	; 0x2f0 <filllocationarrays+0x21c>
     2c6:	81 30       	cpi	r24, 0x01	; 1
     2c8:	99 f4       	brne	.+38     	; 0x2f0 <filllocationarrays+0x21c>
     2ca:	e1 e0       	ldi	r30, 0x01	; 1
     2cc:	f0 e0       	ldi	r31, 0x00	; 0
     2ce:	ec 0f       	add	r30, r28
     2d0:	fd 1f       	adc	r31, r29
     2d2:	e2 0f       	add	r30, r18
     2d4:	f3 1f       	adc	r31, r19
     2d6:	8e ef       	ldi	r24, 0xFE	; 254
     2d8:	84 0f       	add	r24, r20
     2da:	80 83       	st	Z, r24
     2dc:	ea e1       	ldi	r30, 0x1A	; 26
     2de:	f0 e0       	ldi	r31, 0x00	; 0
     2e0:	ec 0f       	add	r30, r28
     2e2:	fd 1f       	adc	r31, r29
     2e4:	e2 0f       	add	r30, r18
     2e6:	f3 1f       	adc	r31, r19
     2e8:	85 e0       	ldi	r24, 0x05	; 5
     2ea:	80 83       	st	Z, r24
     2ec:	2f 5f       	subi	r18, 0xFF	; 255
     2ee:	3f 4f       	sbci	r19, 0xFF	; 255
     2f0:	4f 5f       	subi	r20, 0xFF	; 255
     2f2:	5f 4f       	sbci	r21, 0xFF	; 255
     2f4:	48 30       	cpi	r20, 0x08	; 8
     2f6:	51 05       	cpc	r21, r1
     2f8:	14 f2       	brlt	.-124    	; 0x27e <filllocationarrays+0x1aa>
     2fa:	20 e0       	ldi	r18, 0x00	; 0
     2fc:	30 e0       	ldi	r19, 0x00	; 0
     2fe:	19 c0       	rjmp	.+50     	; 0x332 <filllocationarrays+0x25e>
     300:	e1 e0       	ldi	r30, 0x01	; 1
     302:	f0 e0       	ldi	r31, 0x00	; 0
     304:	ec 0f       	add	r30, r28
     306:	fd 1f       	adc	r31, r29
     308:	e2 0f       	add	r30, r18
     30a:	f3 1f       	adc	r31, r19
     30c:	40 81       	ld	r20, Z
     30e:	cd 01       	movw	r24, r26
     310:	82 0f       	add	r24, r18
     312:	93 1f       	adc	r25, r19
     314:	fc 01       	movw	r30, r24
     316:	ee 5a       	subi	r30, 0xAE	; 174
     318:	ff 4f       	sbci	r31, 0xFF	; 255
     31a:	40 83       	st	Z, r20
     31c:	ea e1       	ldi	r30, 0x1A	; 26
     31e:	f0 e0       	ldi	r31, 0x00	; 0
     320:	ec 0f       	add	r30, r28
     322:	fd 1f       	adc	r31, r29
     324:	e2 0f       	add	r30, r18
     326:	f3 1f       	adc	r31, r19
     328:	40 81       	ld	r20, Z
     32a:	fc 01       	movw	r30, r24
     32c:	41 af       	std	Z+57, r20	; 0x39
     32e:	2f 5f       	subi	r18, 0xFF	; 255
     330:	3f 4f       	sbci	r19, 0xFF	; 255
     332:	29 31       	cpi	r18, 0x19	; 25
     334:	31 05       	cpc	r19, r1
     336:	24 f3       	brlt	.-56     	; 0x300 <filllocationarrays+0x22c>
     338:	e2 96       	adiw	r28, 0x32	; 50
     33a:	0f b6       	in	r0, 0x3f	; 63
     33c:	f8 94       	cli
     33e:	de bf       	out	0x3e, r29	; 62
     340:	0f be       	out	0x3f, r0	; 63
     342:	cd bf       	out	0x3d, r28	; 61
     344:	df 91       	pop	r29
     346:	cf 91       	pop	r28
     348:	08 95       	ret

0000034a <sendACK>:
     34a:	cf 93       	push	r28
     34c:	df 93       	push	r29
     34e:	00 d0       	rcall	.+0      	; 0x350 <sendACK+0x6>
     350:	1f 92       	push	r1
     352:	cd b7       	in	r28, 0x3d	; 61
     354:	de b7       	in	r29, 0x3e	; 62
     356:	88 e0       	ldi	r24, 0x08	; 8
     358:	89 83       	std	Y+1, r24	; 0x01
     35a:	8f ef       	ldi	r24, 0xFF	; 255
     35c:	8a 83       	std	Y+2, r24	; 0x02
     35e:	85 e6       	ldi	r24, 0x65	; 101
     360:	8b 83       	std	Y+3, r24	; 0x03
     362:	64 e0       	ldi	r22, 0x04	; 4
     364:	ce 01       	movw	r24, r28
     366:	01 96       	adiw	r24, 0x01	; 1
     368:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <serial_send_blocking>
     36c:	0f 90       	pop	r0
     36e:	0f 90       	pop	r0
     370:	0f 90       	pop	r0
     372:	df 91       	pop	r29
     374:	cf 91       	pop	r28
     376:	08 95       	ret

00000378 <Update>:
     378:	cf 92       	push	r12
     37a:	df 92       	push	r13
     37c:	ef 92       	push	r14
     37e:	ff 92       	push	r15
     380:	1f 93       	push	r17
     382:	cf 93       	push	r28
     384:	df 93       	push	r29
     386:	ec 01       	movw	r28, r24
     388:	0e 94 a1 15 	call	0x2b42	; 0x2b42 <serial_receive_buffer_full>
     38c:	81 30       	cpi	r24, 0x01	; 1
     38e:	09 f0       	breq	.+2      	; 0x392 <Update+0x1a>
     390:	5e c0       	rjmp	.+188    	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
     392:	8b 8d       	ldd	r24, Y+27	; 0x1b
     394:	88 30       	cpi	r24, 0x08	; 8
     396:	09 f0       	breq	.+2      	; 0x39a <Update+0x22>
     398:	5c c0       	rjmp	.+184    	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
     39a:	e8 81       	ld	r30, Y
     39c:	f0 e0       	ldi	r31, 0x00	; 0
     39e:	31 97       	sbiw	r30, 0x01	; 1
     3a0:	ec 0f       	add	r30, r28
     3a2:	fd 1f       	adc	r31, r29
     3a4:	83 8d       	ldd	r24, Z+27	; 0x1b
     3a6:	85 36       	cpi	r24, 0x65	; 101
     3a8:	09 f0       	breq	.+2      	; 0x3ac <Update+0x34>
     3aa:	55 c0       	rjmp	.+170    	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
     3ac:	ce 01       	movw	r24, r28
     3ae:	0e 94 a5 01 	call	0x34a	; 0x34a <sendACK>
     3b2:	88 a1       	ldd	r24, Y+32	; 0x20
     3b4:	8e 3f       	cpi	r24, 0xFE	; 254
     3b6:	19 f0       	breq	.+6      	; 0x3be <Update+0x46>
     3b8:	8b a1       	ldd	r24, Y+35	; 0x23
     3ba:	8e 3f       	cpi	r24, 0xFE	; 254
     3bc:	29 f4       	brne	.+10     	; 0x3c8 <Update+0x50>
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	fe 01       	movw	r30, r28
     3c2:	e5 59       	subi	r30, 0x95	; 149
     3c4:	ff 4f       	sbci	r31, 0xFF	; 255
     3c6:	80 83       	st	Z, r24
     3c8:	8b a1       	ldd	r24, Y+35	; 0x23
     3ca:	8a 3f       	cpi	r24, 0xFA	; 250
     3cc:	29 f4       	brne	.+10     	; 0x3d8 <Update+0x60>
     3ce:	94 e0       	ldi	r25, 0x04	; 4
     3d0:	fe 01       	movw	r30, r28
     3d2:	e5 59       	subi	r30, 0x95	; 149
     3d4:	ff 4f       	sbci	r31, 0xFF	; 255
     3d6:	90 83       	st	Z, r25
     3d8:	85 3f       	cpi	r24, 0xF5	; 245
     3da:	29 f4       	brne	.+10     	; 0x3e6 <Update+0x6e>
     3dc:	92 e0       	ldi	r25, 0x02	; 2
     3de:	fe 01       	movw	r30, r28
     3e0:	e5 59       	subi	r30, 0x95	; 149
     3e2:	ff 4f       	sbci	r31, 0xFF	; 255
     3e4:	90 83       	st	Z, r25
     3e6:	86 3e       	cpi	r24, 0xE6	; 230
     3e8:	39 f4       	brne	.+14     	; 0x3f8 <Update+0x80>
     3ea:	9f ef       	ldi	r25, 0xFF	; 255
     3ec:	fe 01       	movw	r30, r28
     3ee:	e2 59       	subi	r30, 0x92	; 146
     3f0:	ff 4f       	sbci	r31, 0xFF	; 255
     3f2:	90 83       	st	Z, r25
     3f4:	31 96       	adiw	r30, 0x01	; 1
     3f6:	90 83       	st	Z, r25
     3f8:	80 3f       	cpi	r24, 0xF0	; 240
     3fa:	a9 f4       	brne	.+42     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
     3fc:	83 e0       	ldi	r24, 0x03	; 3
     3fe:	fe 01       	movw	r30, r28
     400:	e5 59       	subi	r30, 0x95	; 149
     402:	ff 4f       	sbci	r31, 0xFF	; 255
     404:	80 83       	st	Z, r24
     406:	80 e0       	ldi	r24, 0x00	; 0
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	0a c0       	rjmp	.+20     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     40c:	fc 01       	movw	r30, r24
     40e:	39 96       	adiw	r30, 0x09	; 9
     410:	ec 0f       	add	r30, r28
     412:	fd 1f       	adc	r31, r29
     414:	23 8d       	ldd	r18, Z+27	; 0x1b
     416:	fe 01       	movw	r30, r28
     418:	e8 0f       	add	r30, r24
     41a:	f9 1f       	adc	r31, r25
     41c:	25 ab       	std	Z+53, r18	; 0x35
     41e:	01 96       	adiw	r24, 0x01	; 1
     420:	84 30       	cpi	r24, 0x04	; 4
     422:	91 05       	cpc	r25, r1
     424:	9c f3       	brlt	.-26     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
     426:	fe 01       	movw	r30, r28
     428:	e2 59       	subi	r30, 0x92	; 146
     42a:	ff 4f       	sbci	r31, 0xFF	; 255
     42c:	80 81       	ld	r24, Z
     42e:	8f 3f       	cpi	r24, 0xFF	; 255
     430:	a1 f4       	brne	.+40     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
     432:	31 96       	adiw	r30, 0x01	; 1
     434:	80 81       	ld	r24, Z
     436:	8f 3f       	cpi	r24, 0xFF	; 255
     438:	91 f4       	brne	.+36     	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
     43a:	ce 01       	movw	r24, r28
     43c:	0e 94 6a 00 	call	0xd4	; 0xd4 <filllocationarrays>
     440:	81 e0       	ldi	r24, 0x01	; 1
     442:	fe 01       	movw	r30, r28
     444:	e0 59       	subi	r30, 0x90	; 144
     446:	ff 4f       	sbci	r31, 0xFF	; 255
     448:	80 83       	st	Z, r24
     44a:	11 e0       	ldi	r17, 0x01	; 1
     44c:	09 c0       	rjmp	.+18     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
     44e:	10 e0       	ldi	r17, 0x00	; 0
     450:	07 c0       	rjmp	.+14     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
     452:	10 e0       	ldi	r17, 0x00	; 0
     454:	05 c0       	rjmp	.+10     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
     456:	10 e0       	ldi	r17, 0x00	; 0
     458:	03 c0       	rjmp	.+6      	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
     45a:	11 e0       	ldi	r17, 0x01	; 1
     45c:	01 c0       	rjmp	.+2      	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
     45e:	11 e0       	ldi	r17, 0x01	; 1
     460:	c0 90 f9 01 	lds	r12, 0x01F9	; 0x8001f9 <timesincelastsend.2232>
     464:	d0 90 fa 01 	lds	r13, 0x01FA	; 0x8001fa <timesincelastsend.2232+0x1>
     468:	e0 90 fb 01 	lds	r14, 0x01FB	; 0x8001fb <timesincelastsend.2232+0x2>
     46c:	f0 90 fc 01 	lds	r15, 0x01FC	; 0x8001fc <timesincelastsend.2232+0x3>
     470:	8e ee       	ldi	r24, 0xEE	; 238
     472:	c8 0e       	add	r12, r24
     474:	82 e0       	ldi	r24, 0x02	; 2
     476:	d8 1e       	adc	r13, r24
     478:	e1 1c       	adc	r14, r1
     47a:	f1 1c       	adc	r15, r1
     47c:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <get_ms>
     480:	6c 15       	cp	r22, r12
     482:	7d 05       	cpc	r23, r13
     484:	8e 05       	cpc	r24, r14
     486:	9f 05       	cpc	r25, r15
     488:	c8 f1       	brcs	.+114    	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
     48a:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <get_ms>
     48e:	60 93 f9 01 	sts	0x01F9, r22	; 0x8001f9 <timesincelastsend.2232>
     492:	70 93 fa 01 	sts	0x01FA, r23	; 0x8001fa <timesincelastsend.2232+0x1>
     496:	80 93 fb 01 	sts	0x01FB, r24	; 0x8001fb <timesincelastsend.2232+0x2>
     49a:	90 93 fc 01 	sts	0x01FC, r25	; 0x8001fc <timesincelastsend.2232+0x3>
     49e:	80 e0       	ldi	r24, 0x00	; 0
     4a0:	05 c0       	rjmp	.+10     	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
     4a2:	fe 01       	movw	r30, r28
     4a4:	e8 0f       	add	r30, r24
     4a6:	f1 1d       	adc	r31, r1
     4a8:	81 83       	std	Z+1, r24	; 0x01
     4aa:	8f 5f       	subi	r24, 0xFF	; 255
     4ac:	68 81       	ld	r22, Y
     4ae:	86 17       	cp	r24, r22
     4b0:	c0 f3       	brcs	.-16     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
     4b2:	88 e0       	ldi	r24, 0x08	; 8
     4b4:	89 83       	std	Y+1, r24	; 0x01
     4b6:	fe 01       	movw	r30, r28
     4b8:	e4 59       	subi	r30, 0x94	; 148
     4ba:	ff 4f       	sbci	r31, 0xFF	; 255
     4bc:	80 81       	ld	r24, Z
     4be:	8a 83       	std	Y+2, r24	; 0x02
     4c0:	31 96       	adiw	r30, 0x01	; 1
     4c2:	80 81       	ld	r24, Z
     4c4:	8b 83       	std	Y+3, r24	; 0x03
     4c6:	31 96       	adiw	r30, 0x01	; 1
     4c8:	80 81       	ld	r24, Z
     4ca:	8c 83       	std	Y+4, r24	; 0x04
     4cc:	31 96       	adiw	r30, 0x01	; 1
     4ce:	80 81       	ld	r24, Z
     4d0:	8d 83       	std	Y+5, r24	; 0x05
     4d2:	34 97       	sbiw	r30, 0x04	; 4
     4d4:	80 81       	ld	r24, Z
     4d6:	8e 83       	std	Y+6, r24	; 0x06
     4d8:	e6 2f       	mov	r30, r22
     4da:	f0 e0       	ldi	r31, 0x00	; 0
     4dc:	31 97       	sbiw	r30, 0x01	; 1
     4de:	ec 0f       	add	r30, r28
     4e0:	fd 1f       	adc	r31, r29
     4e2:	85 e6       	ldi	r24, 0x65	; 101
     4e4:	81 83       	std	Z+1, r24	; 0x01
     4e6:	ce 01       	movw	r24, r28
     4e8:	01 96       	adiw	r24, 0x01	; 1
     4ea:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <serial_send>
     4ee:	11 30       	cpi	r17, 0x01	; 1
     4f0:	29 f4       	brne	.+10     	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
     4f2:	68 81       	ld	r22, Y
     4f4:	ce 01       	movw	r24, r28
     4f6:	4b 96       	adiw	r24, 0x1b	; 27
     4f8:	0e 94 28 16 	call	0x2c50	; 0x2c50 <serial_receive>
     4fc:	df 91       	pop	r29
     4fe:	cf 91       	pop	r28
     500:	1f 91       	pop	r17
     502:	ff 90       	pop	r15
     504:	ef 90       	pop	r14
     506:	df 90       	pop	r13
     508:	cf 90       	pop	r12
     50a:	08 95       	ret

0000050c <fillarrays>:
     50c:	cf 93       	push	r28
     50e:	df 93       	push	r29
     510:	cd b7       	in	r28, 0x3d	; 61
     512:	de b7       	in	r29, 0x3e	; 62
     514:	60 97       	sbiw	r28, 0x10	; 16
     516:	0f b6       	in	r0, 0x3f	; 63
     518:	f8 94       	cli
     51a:	de bf       	out	0x3e, r29	; 62
     51c:	0f be       	out	0x3f, r0	; 63
     51e:	cd bf       	out	0x3d, r28	; 61
     520:	ac 01       	movw	r20, r24
     522:	88 e0       	ldi	r24, 0x08	; 8
     524:	e8 e2       	ldi	r30, 0x28	; 40
     526:	f1 e0       	ldi	r31, 0x01	; 1
     528:	de 01       	movw	r26, r28
     52a:	11 96       	adiw	r26, 0x01	; 1
     52c:	01 90       	ld	r0, Z+
     52e:	0d 92       	st	X+, r0
     530:	8a 95       	dec	r24
     532:	e1 f7       	brne	.-8      	; 0x52c <fillarrays+0x20>
     534:	88 e0       	ldi	r24, 0x08	; 8
     536:	e0 e3       	ldi	r30, 0x30	; 48
     538:	f1 e0       	ldi	r31, 0x01	; 1
     53a:	de 01       	movw	r26, r28
     53c:	19 96       	adiw	r26, 0x09	; 9
     53e:	01 90       	ld	r0, Z+
     540:	0d 92       	st	X+, r0
     542:	8a 95       	dec	r24
     544:	e1 f7       	brne	.-8      	; 0x53e <fillarrays+0x32>
     546:	20 e0       	ldi	r18, 0x00	; 0
     548:	30 e0       	ldi	r19, 0x00	; 0
     54a:	19 c0       	rjmp	.+50     	; 0x57e <fillarrays+0x72>
     54c:	e1 e0       	ldi	r30, 0x01	; 1
     54e:	f0 e0       	ldi	r31, 0x00	; 0
     550:	ec 0f       	add	r30, r28
     552:	fd 1f       	adc	r31, r29
     554:	e2 0f       	add	r30, r18
     556:	f3 1f       	adc	r31, r19
     558:	90 81       	ld	r25, Z
     55a:	da 01       	movw	r26, r20
     55c:	a2 0f       	add	r26, r18
     55e:	b3 1f       	adc	r27, r19
     560:	fd 01       	movw	r30, r26
     562:	ee 5a       	subi	r30, 0xAE	; 174
     564:	ff 4f       	sbci	r31, 0xFF	; 255
     566:	90 83       	st	Z, r25
     568:	e9 e0       	ldi	r30, 0x09	; 9
     56a:	f0 e0       	ldi	r31, 0x00	; 0
     56c:	ec 0f       	add	r30, r28
     56e:	fd 1f       	adc	r31, r29
     570:	e2 0f       	add	r30, r18
     572:	f3 1f       	adc	r31, r19
     574:	90 81       	ld	r25, Z
     576:	d9 96       	adiw	r26, 0x39	; 57
     578:	9c 93       	st	X, r25
     57a:	2f 5f       	subi	r18, 0xFF	; 255
     57c:	3f 4f       	sbci	r19, 0xFF	; 255
     57e:	28 30       	cpi	r18, 0x08	; 8
     580:	31 05       	cpc	r19, r1
     582:	24 f3       	brlt	.-56     	; 0x54c <fillarrays+0x40>
     584:	60 96       	adiw	r28, 0x10	; 16
     586:	0f b6       	in	r0, 0x3f	; 63
     588:	f8 94       	cli
     58a:	de bf       	out	0x3e, r29	; 62
     58c:	0f be       	out	0x3f, r0	; 63
     58e:	cd bf       	out	0x3d, r28	; 61
     590:	df 91       	pop	r29
     592:	cf 91       	pop	r28
     594:	08 95       	ret

00000596 <Communications_INIT>:
     596:	0f 93       	push	r16
     598:	1f 93       	push	r17
     59a:	cf 93       	push	r28
     59c:	df 93       	push	r29
     59e:	ec 01       	movw	r28, r24
     5a0:	8a e1       	ldi	r24, 0x1A	; 26
     5a2:	88 83       	st	Y, r24
     5a4:	60 e8       	ldi	r22, 0x80	; 128
     5a6:	75 e2       	ldi	r23, 0x25	; 37
     5a8:	80 e0       	ldi	r24, 0x00	; 0
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	0e 94 7f 16 	call	0x2cfe	; 0x2cfe <serial_set_baud_rate>
     5b0:	68 81       	ld	r22, Y
     5b2:	ce 01       	movw	r24, r28
     5b4:	4b 96       	adiw	r24, 0x1b	; 27
     5b6:	0e 94 28 16 	call	0x2c50	; 0x2c50 <serial_receive>
     5ba:	fe 01       	movw	r30, r28
     5bc:	ef 58       	subi	r30, 0x8F	; 143
     5be:	ff 4f       	sbci	r31, 0xFF	; 255
     5c0:	8c eb       	ldi	r24, 0xBC	; 188
     5c2:	91 e0       	ldi	r25, 0x01	; 1
     5c4:	91 83       	std	Z+1, r25	; 0x01
     5c6:	80 83       	st	Z, r24
     5c8:	36 97       	sbiw	r30, 0x06	; 6
     5ca:	10 82       	st	Z, r1
     5cc:	0e 94 ff 02 	call	0x5fe	; 0x5fe <batteryPercentage>
     5d0:	8e 01       	movw	r16, r28
     5d2:	04 59       	subi	r16, 0x94	; 148
     5d4:	1f 4f       	sbci	r17, 0xFF	; 255
     5d6:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__fixunssfsi>
     5da:	f8 01       	movw	r30, r16
     5dc:	60 83       	st	Z, r22
     5de:	31 96       	adiw	r30, 0x01	; 1
     5e0:	10 82       	st	Z, r1
     5e2:	31 96       	adiw	r30, 0x01	; 1
     5e4:	84 e0       	ldi	r24, 0x04	; 4
     5e6:	80 83       	st	Z, r24
     5e8:	31 96       	adiw	r30, 0x01	; 1
     5ea:	85 e0       	ldi	r24, 0x05	; 5
     5ec:	80 83       	st	Z, r24
     5ee:	ce 01       	movw	r24, r28
     5f0:	0e 94 86 02 	call	0x50c	; 0x50c <fillarrays>
     5f4:	df 91       	pop	r29
     5f6:	cf 91       	pop	r28
     5f8:	1f 91       	pop	r17
     5fa:	0f 91       	pop	r16
     5fc:	08 95       	ret

000005fe <batteryPercentage>:

#include "display.h"
#include <pololu/3pi.h>

float batteryPercentage()//Should this function be in main or in display.c or something else?
{
     5fe:	cf 92       	push	r12
     600:	df 92       	push	r13
     602:	ef 92       	push	r14
     604:	ff 92       	push	r15
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     606:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <read_battery_millivolts_3pi>
	
	float milliVolts = read_battery_millivolts();
     60a:	bc 01       	movw	r22, r24
     60c:	80 e0       	ldi	r24, 0x00	; 0
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <__floatunsisf>
     614:	6b 01       	movw	r12, r22
     616:	7c 01       	movw	r14, r24
	float batteryPercent = 0.000000000632*((milliVolts)*(milliVolts)*(milliVolts));
     618:	9b 01       	movw	r18, r22
     61a:	ac 01       	movw	r20, r24
     61c:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <__mulsf3>
     620:	9b 01       	movw	r18, r22
     622:	ac 01       	movw	r20, r24
     624:	c7 01       	movw	r24, r14
     626:	b6 01       	movw	r22, r12
     628:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <__mulsf3>
     62c:	2c e0       	ldi	r18, 0x0C	; 12
     62e:	39 eb       	ldi	r19, 0xB9	; 185
     630:	4d e2       	ldi	r20, 0x2D	; 45
     632:	50 e3       	ldi	r21, 0x30	; 48
     634:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <__mulsf3>
	return batteryPercent;
}
     638:	ff 90       	pop	r15
     63a:	ef 90       	pop	r14
     63c:	df 90       	pop	r13
     63e:	cf 90       	pop	r12
     640:	08 95       	ret

00000642 <updateDisplay>:

void updateDisplay(int orderPercent, int batteryPercent, robotStates currentState)
{
     642:	ef 92       	push	r14
     644:	ff 92       	push	r15
     646:	0f 93       	push	r16
     648:	1f 93       	push	r17
     64a:	cf 93       	push	r28
     64c:	7c 01       	movw	r14, r24
     64e:	8b 01       	movw	r16, r22
     650:	c4 2f       	mov	r28, r20
	clear();
     652:	0e 94 1e 14 	call	0x283c	; 0x283c <clear>
	lcd_goto_xy(0,0);
     656:	60 e0       	ldi	r22, 0x00	; 0
     658:	80 e0       	ldi	r24, 0x00	; 0
     65a:	0e 94 a5 14 	call	0x294a	; 0x294a <lcd_goto_xy>
	print("Job:");
     65e:	85 e5       	ldi	r24, 0x55	; 85
     660:	91 e0       	ldi	r25, 0x01	; 1
     662:	0e 94 2d 14 	call	0x285a	; 0x285a <print>
	print_long(orderPercent);
     666:	b7 01       	movw	r22, r14
     668:	ff 0c       	add	r15, r15
     66a:	88 0b       	sbc	r24, r24
     66c:	99 0b       	sbc	r25, r25
     66e:	0e 94 82 14 	call	0x2904	; 0x2904 <print_long>
	print("%");
     672:	8a e5       	ldi	r24, 0x5A	; 90
     674:	91 e0       	ldi	r25, 0x01	; 1
     676:	0e 94 2d 14 	call	0x285a	; 0x285a <print>
	
	lcd_goto_xy(0,1);
     67a:	61 e0       	ldi	r22, 0x01	; 1
     67c:	80 e0       	ldi	r24, 0x00	; 0
     67e:	0e 94 a5 14 	call	0x294a	; 0x294a <lcd_goto_xy>
	print("Bat:");
     682:	8c e5       	ldi	r24, 0x5C	; 92
     684:	91 e0       	ldi	r25, 0x01	; 1
     686:	0e 94 2d 14 	call	0x285a	; 0x285a <print>
	print_long(batteryPercent);
     68a:	b8 01       	movw	r22, r16
     68c:	11 0f       	add	r17, r17
     68e:	88 0b       	sbc	r24, r24
     690:	99 0b       	sbc	r25, r25
     692:	0e 94 82 14 	call	0x2904	; 0x2904 <print_long>
	print("%");
     696:	8a e5       	ldi	r24, 0x5A	; 90
     698:	91 e0       	ldi	r25, 0x01	; 1
     69a:	0e 94 2d 14 	call	0x285a	; 0x285a <print>
	switch(currentState)
     69e:	c2 30       	cpi	r28, 0x02	; 2
     6a0:	a9 f0       	breq	.+42     	; 0x6cc <updateDisplay+0x8a>
     6a2:	28 f4       	brcc	.+10     	; 0x6ae <updateDisplay+0x6c>
     6a4:	cc 23       	and	r28, r28
     6a6:	41 f0       	breq	.+16     	; 0x6b8 <updateDisplay+0x76>
     6a8:	c1 30       	cpi	r28, 0x01	; 1
     6aa:	59 f0       	breq	.+22     	; 0x6c2 <updateDisplay+0x80>
     6ac:	1d c0       	rjmp	.+58     	; 0x6e8 <updateDisplay+0xa6>
     6ae:	c3 30       	cpi	r28, 0x03	; 3
     6b0:	91 f0       	breq	.+36     	; 0x6d6 <updateDisplay+0x94>
     6b2:	c4 30       	cpi	r28, 0x04	; 4
     6b4:	a9 f0       	breq	.+42     	; 0x6e0 <updateDisplay+0x9e>
     6b6:	18 c0       	rjmp	.+48     	; 0x6e8 <updateDisplay+0xa6>
	{
		case manual:
		print("M");//M for Manual
     6b8:	81 e6       	ldi	r24, 0x61	; 97
     6ba:	91 e0       	ldi	r25, 0x01	; 1
     6bc:	0e 94 2d 14 	call	0x285a	; 0x285a <print>
		break;
     6c0:	13 c0       	rjmp	.+38     	; 0x6e8 <updateDisplay+0xa6>
		case mazeSolver:
		print("P");//P for Parcour
     6c2:	83 e6       	ldi	r24, 0x63	; 99
     6c4:	91 e0       	ldi	r25, 0x01	; 1
     6c6:	0e 94 2d 14 	call	0x285a	; 0x285a <print>
		break;
     6ca:	0e c0       	rjmp	.+28     	; 0x6e8 <updateDisplay+0xa6>
		case logicsBot:
		print("O");//O for Order
     6cc:	85 e6       	ldi	r24, 0x65	; 101
     6ce:	91 e0       	ldi	r25, 0x01	; 1
     6d0:	0e 94 2d 14 	call	0x285a	; 0x285a <print>
		break;
     6d4:	09 c0       	rjmp	.+18     	; 0x6e8 <updateDisplay+0xa6>
		case chargeMode:
		print("C");//C for Charge
     6d6:	87 e6       	ldi	r24, 0x67	; 103
     6d8:	91 e0       	ldi	r25, 0x01	; 1
     6da:	0e 94 2d 14 	call	0x285a	; 0x285a <print>
		break;
     6de:	04 c0       	rjmp	.+8      	; 0x6e8 <updateDisplay+0xa6>
		case homingMode:
		print("H");//H for Homing
     6e0:	89 e6       	ldi	r24, 0x69	; 105
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	0e 94 2d 14 	call	0x285a	; 0x285a <print>
		break;
	}
}
     6e8:	cf 91       	pop	r28
     6ea:	1f 91       	pop	r17
     6ec:	0f 91       	pop	r16
     6ee:	ff 90       	pop	r15
     6f0:	ef 90       	pop	r14
     6f2:	08 95       	ret

000006f4 <errorDisplay>:

void errorDisplay(errorStates error, int batteryPercent)
{
     6f4:	1f 93       	push	r17
     6f6:	cf 93       	push	r28
     6f8:	df 93       	push	r29
     6fa:	18 2f       	mov	r17, r24
     6fc:	eb 01       	movw	r28, r22
	clear();
     6fe:	0e 94 1e 14 	call	0x283c	; 0x283c <clear>
	lcd_goto_xy(0,0);
     702:	60 e0       	ldi	r22, 0x00	; 0
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	0e 94 a5 14 	call	0x294a	; 0x294a <lcd_goto_xy>
	print("Bat:");
     70a:	8c e5       	ldi	r24, 0x5C	; 92
     70c:	91 e0       	ldi	r25, 0x01	; 1
     70e:	0e 94 2d 14 	call	0x285a	; 0x285a <print>
	print_long(batteryPercent);
     712:	be 01       	movw	r22, r28
     714:	dd 0f       	add	r29, r29
     716:	88 0b       	sbc	r24, r24
     718:	99 0b       	sbc	r25, r25
     71a:	0e 94 82 14 	call	0x2904	; 0x2904 <print_long>
	print("%");
     71e:	8a e5       	ldi	r24, 0x5A	; 90
     720:	91 e0       	ldi	r25, 0x01	; 1
     722:	0e 94 2d 14 	call	0x285a	; 0x285a <print>
	
	lcd_goto_xy(0,1);
     726:	61 e0       	ldi	r22, 0x01	; 1
     728:	80 e0       	ldi	r24, 0x00	; 0
     72a:	0e 94 a5 14 	call	0x294a	; 0x294a <lcd_goto_xy>
	
	switch(error)
     72e:	11 30       	cpi	r17, 0x01	; 1
     730:	59 f0       	breq	.+22     	; 0x748 <errorDisplay+0x54>
     732:	28 f0       	brcs	.+10     	; 0x73e <errorDisplay+0x4a>
     734:	12 30       	cpi	r17, 0x02	; 2
     736:	69 f0       	breq	.+26     	; 0x752 <errorDisplay+0x5e>
     738:	13 30       	cpi	r17, 0x03	; 3
     73a:	81 f0       	breq	.+32     	; 0x75c <errorDisplay+0x68>
     73c:	13 c0       	rjmp	.+38     	; 0x764 <errorDisplay+0x70>
	{
		case slipped:
		print("Slipped!");
     73e:	8b e6       	ldi	r24, 0x6B	; 107
     740:	91 e0       	ldi	r25, 0x01	; 1
     742:	0e 94 2d 14 	call	0x285a	; 0x285a <print>
		break;
     746:	0e c0       	rjmp	.+28     	; 0x764 <errorDisplay+0x70>
		case emergency:
		print("STOPPED");
     748:	84 e7       	ldi	r24, 0x74	; 116
     74a:	91 e0       	ldi	r25, 0x01	; 1
     74c:	0e 94 2d 14 	call	0x285a	; 0x285a <print>
		break;
     750:	09 c0       	rjmp	.+18     	; 0x764 <errorDisplay+0x70>
		case object:
		print("OBJECT");
     752:	8c e7       	ldi	r24, 0x7C	; 124
     754:	91 e0       	ldi	r25, 0x01	; 1
     756:	0e 94 2d 14 	call	0x285a	; 0x285a <print>
		break;
     75a:	04 c0       	rjmp	.+8      	; 0x764 <errorDisplay+0x70>
		case batLow:
		print("LOW-BAT");
     75c:	83 e8       	ldi	r24, 0x83	; 131
     75e:	91 e0       	ldi	r25, 0x01	; 1
     760:	0e 94 2d 14 	call	0x285a	; 0x285a <print>
		break;
	}
     764:	df 91       	pop	r29
     766:	cf 91       	pop	r28
     768:	1f 91       	pop	r17
     76a:	08 95       	ret

0000076c <whileBarcode>:
     76c:	03 c0       	rjmp	.+6      	; 0x774 <whileBarcode+0x8>
     76e:	83 e5       	ldi	r24, 0x53	; 83
     770:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
     774:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <lineType>
     778:	82 30       	cpi	r24, 0x02	; 2
     77a:	c9 f7       	brne	.-14     	; 0x76e <whileBarcode+0x2>
     77c:	08 95       	ret

0000077e <whileLineEnd>:
     77e:	03 c0       	rjmp	.+6      	; 0x786 <whileLineEnd+0x8>
     780:	83 e5       	ldi	r24, 0x53	; 83
     782:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
     786:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <lineType>
     78a:	81 30       	cpi	r24, 0x01	; 1
     78c:	c9 f7       	brne	.-14     	; 0x780 <whileLineEnd+0x2>
     78e:	08 95       	ret

00000790 <charge_3pi>:
     790:	0f 93       	push	r16
     792:	1f 93       	push	r17
     794:	cf 93       	push	r28
     796:	df 93       	push	r29
     798:	8c 01       	movw	r16, r24
     79a:	0e 94 b6 03 	call	0x76c	; 0x76c <whileBarcode>
     79e:	b8 01       	movw	r22, r16
     7a0:	84 e5       	ldi	r24, 0x54	; 84
     7a2:	0e 94 cd 09 	call	0x139a	; 0x139a <parcours>
     7a6:	0e 94 ff 02 	call	0x5fe	; 0x5fe <batteryPercentage>
     7aa:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <__fixsfsi>
     7ae:	43 e0       	ldi	r20, 0x03	; 3
     7b0:	80 e0       	ldi	r24, 0x00	; 0
     7b2:	90 e0       	ldi	r25, 0x00	; 0
     7b4:	0e 94 21 03 	call	0x642	; 0x642 <updateDisplay>
     7b8:	b8 01       	movw	r22, r16
     7ba:	81 e0       	ldi	r24, 0x01	; 1
     7bc:	0e 94 a0 0b 	call	0x1740	; 0x1740 <warehouse>
     7c0:	c0 e0       	ldi	r28, 0x00	; 0
     7c2:	d0 e0       	ldi	r29, 0x00	; 0
     7c4:	09 c0       	rjmp	.+18     	; 0x7d8 <charge_3pi+0x48>
     7c6:	8a e7       	ldi	r24, 0x7A	; 122
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	0e 94 15 13 	call	0x262a	; 0x262a <play_from_program_space>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     7ce:	84 ef       	ldi	r24, 0xF4	; 244
     7d0:	91 e0       	ldi	r25, 0x01	; 1
     7d2:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
     7d6:	21 96       	adiw	r28, 0x01	; 1
     7d8:	ca 30       	cpi	r28, 0x0A	; 10
     7da:	d1 05       	cpc	r29, r1
     7dc:	a4 f3       	brlt	.-24     	; 0x7c6 <charge_3pi+0x36>
     7de:	b8 01       	movw	r22, r16
     7e0:	81 e0       	ldi	r24, 0x01	; 1
     7e2:	0e 94 a0 0b 	call	0x1740	; 0x1740 <warehouse>
     7e6:	0e 94 b6 03 	call	0x76c	; 0x76c <whileBarcode>
     7ea:	b8 01       	movw	r22, r16
     7ec:	82 e4       	ldi	r24, 0x42	; 66
     7ee:	0e 94 cd 09 	call	0x139a	; 0x139a <parcours>
     7f2:	0e 94 bf 03 	call	0x77e	; 0x77e <whileLineEnd>
     7f6:	8c e4       	ldi	r24, 0x4C	; 76
     7f8:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
     7fc:	df 91       	pop	r29
     7fe:	cf 91       	pop	r28
     800:	1f 91       	pop	r17
     802:	0f 91       	pop	r16
     804:	08 95       	ret

00000806 <pickOrder>:
     806:	cf 93       	push	r28
     808:	df 93       	push	r29
     80a:	ec 01       	movw	r28, r24
     80c:	0e 94 b6 03 	call	0x76c	; 0x76c <whileBarcode>
     810:	be 01       	movw	r22, r28
     812:	84 e5       	ldi	r24, 0x54	; 84
     814:	0e 94 cd 09 	call	0x139a	; 0x139a <parcours>
     818:	be 01       	movw	r22, r28
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	0e 94 a0 0b 	call	0x1740	; 0x1740 <warehouse>
     820:	0e 94 b6 03 	call	0x76c	; 0x76c <whileBarcode>
     824:	be 01       	movw	r22, r28
     826:	82 e4       	ldi	r24, 0x42	; 66
     828:	0e 94 cd 09 	call	0x139a	; 0x139a <parcours>
     82c:	0e 94 bf 03 	call	0x77e	; 0x77e <whileLineEnd>
     830:	8c e4       	ldi	r24, 0x4C	; 76
     832:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
     836:	df 91       	pop	r29
     838:	cf 91       	pop	r28
     83a:	08 95       	ret

0000083c <main>:
     83c:	cf 93       	push	r28
     83e:	df 93       	push	r29
     840:	cd b7       	in	r28, 0x3d	; 61
     842:	de b7       	in	r29, 0x3e	; 62
     844:	c3 57       	subi	r28, 0x73	; 115
     846:	d1 09       	sbc	r29, r1
     848:	0f b6       	in	r0, 0x3f	; 63
     84a:	f8 94       	cli
     84c:	de bf       	out	0x3e, r29	; 62
     84e:	0f be       	out	0x3f, r0	; 63
     850:	cd bf       	out	0x3d, r28	; 61
     852:	8a e7       	ldi	r24, 0x7A	; 122
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	0e 94 15 13 	call	0x262a	; 0x262a <play_from_program_space>
     85a:	ce 01       	movw	r24, r28
     85c:	01 96       	adiw	r24, 0x01	; 1
     85e:	0e 94 cb 02 	call	0x596	; 0x596 <Communications_INIT>
     862:	ce 01       	movw	r24, r28
     864:	01 96       	adiw	r24, 0x01	; 1
     866:	0e 94 8a 04 	call	0x914	; 0x914 <initialize>
     86a:	0e 94 ff 02 	call	0x5fe	; 0x5fe <batteryPercentage>
     86e:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <__fixsfsi>
     872:	44 e0       	ldi	r20, 0x04	; 4
     874:	80 e0       	ldi	r24, 0x00	; 0
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	0e 94 21 03 	call	0x642	; 0x642 <updateDisplay>
     87c:	e4 96       	adiw	r28, 0x34	; 52
     87e:	ee ad       	ldd	r30, Y+62	; 0x3e
     880:	ff ad       	ldd	r31, Y+63	; 0x3f
     882:	e4 97       	sbiw	r28, 0x34	; 52
     884:	ce 01       	movw	r24, r28
     886:	01 96       	adiw	r24, 0x01	; 1
     888:	09 95       	icall
     88a:	8f ef       	ldi	r24, 0xFF	; 255
     88c:	e0 96       	adiw	r28, 0x30	; 48
     88e:	8f af       	std	Y+63, r24	; 0x3f
     890:	e0 97       	sbiw	r28, 0x30	; 48
     892:	e1 96       	adiw	r28, 0x31	; 49
     894:	8f af       	std	Y+63, r24	; 0x3f
     896:	e1 97       	sbiw	r28, 0x31	; 49
     898:	ad 96       	adiw	r28, 0x2d	; 45
     89a:	8f ad       	ldd	r24, Y+63	; 0x3f
     89c:	ad 97       	sbiw	r28, 0x2d	; 45
     89e:	82 30       	cpi	r24, 0x02	; 2
     8a0:	41 f1       	breq	.+80     	; 0x8f2 <main+0xb6>
     8a2:	28 f0       	brcs	.+10     	; 0x8ae <main+0x72>
     8a4:	83 30       	cpi	r24, 0x03	; 3
     8a6:	41 f1       	breq	.+80     	; 0x8f8 <main+0xbc>
     8a8:	84 30       	cpi	r24, 0x04	; 4
     8aa:	49 f1       	breq	.+82     	; 0x8fe <main+0xc2>
     8ac:	de cf       	rjmp	.-68     	; 0x86a <main+0x2e>
     8ae:	e2 96       	adiw	r28, 0x32	; 50
     8b0:	8f ad       	ldd	r24, Y+63	; 0x3f
     8b2:	e2 97       	sbiw	r28, 0x32	; 50
     8b4:	81 30       	cpi	r24, 0x01	; 1
     8b6:	c1 f4       	brne	.+48     	; 0x8e8 <main+0xac>
     8b8:	e2 96       	adiw	r28, 0x32	; 50
     8ba:	1f ae       	std	Y+63, r1	; 0x3f
     8bc:	e2 97       	sbiw	r28, 0x32	; 50
     8be:	8a e7       	ldi	r24, 0x7A	; 122
     8c0:	90 e0       	ldi	r25, 0x00	; 0
     8c2:	0e 94 15 13 	call	0x262a	; 0x262a <play_from_program_space>
     8c6:	e0 96       	adiw	r28, 0x30	; 48
     8c8:	1f ae       	std	Y+63, r1	; 0x3f
     8ca:	e0 97       	sbiw	r28, 0x30	; 48
     8cc:	e1 96       	adiw	r28, 0x31	; 49
     8ce:	1f ae       	std	Y+63, r1	; 0x3f
     8d0:	e1 97       	sbiw	r28, 0x31	; 49
     8d2:	ce 01       	movw	r24, r28
     8d4:	01 96       	adiw	r24, 0x01	; 1
     8d6:	0e 94 03 04 	call	0x806	; 0x806 <pickOrder>
     8da:	8f ef       	ldi	r24, 0xFF	; 255
     8dc:	e0 96       	adiw	r28, 0x30	; 48
     8de:	8f af       	std	Y+63, r24	; 0x3f
     8e0:	e0 97       	sbiw	r28, 0x30	; 48
     8e2:	e1 96       	adiw	r28, 0x31	; 49
     8e4:	8f af       	std	Y+63, r24	; 0x3f
     8e6:	e1 97       	sbiw	r28, 0x31	; 49
     8e8:	84 e6       	ldi	r24, 0x64	; 100
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
     8f0:	bc cf       	rjmp	.-136    	; 0x86a <main+0x2e>
     8f2:	0e 94 8a 08 	call	0x1114	; 0x1114 <Spin>
     8f6:	b9 cf       	rjmp	.-142    	; 0x86a <main+0x2e>
     8f8:	0e 94 51 07 	call	0xea2	; 0xea2 <manualControl>
     8fc:	b6 cf       	rjmp	.-148    	; 0x86a <main+0x2e>
     8fe:	ce 01       	movw	r24, r28
     900:	01 96       	adiw	r24, 0x01	; 1
     902:	0e 94 c8 03 	call	0x790	; 0x790 <charge_3pi>
     906:	ad 96       	adiw	r28, 0x2d	; 45
     908:	1f ae       	std	Y+63, r1	; 0x3f
     90a:	ad 97       	sbiw	r28, 0x2d	; 45
     90c:	e2 96       	adiw	r28, 0x32	; 50
     90e:	1f ae       	std	Y+63, r1	; 0x3f
     910:	e2 97       	sbiw	r28, 0x32	; 50
     912:	ab cf       	rjmp	.-170    	; 0x86a <main+0x2e>

00000914 <initialize>:

void wait(){							// wait function for the robot so it will wait for a button press B
	set_motors(0,0);
						
	while(!button_is_pressed(BUTTON_B)){}
		wait_for_button_release(BUTTON_B);
     914:	cf 93       	push	r28
     916:	df 93       	push	r29
     918:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <myComs+0x1>
     91c:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <myComs>
     920:	80 ed       	ldi	r24, 0xD0	; 208
     922:	97 e0       	ldi	r25, 0x07	; 7
     924:	0e 94 f9 17 	call	0x2ff2	; 0x2ff2 <pololu_3pi_init>
     928:	0d c0       	rjmp	.+26     	; 0x944 <initialize+0x30>
     92a:	0e 94 1e 14 	call	0x283c	; 0x283c <clear>
     92e:	60 e0       	ldi	r22, 0x00	; 0
     930:	80 e0       	ldi	r24, 0x00	; 0
     932:	0e 94 a5 14 	call	0x294a	; 0x294a <lcd_goto_xy>
     936:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <read_battery_millivolts_3pi>
     93a:	bc 01       	movw	r22, r24
     93c:	80 e0       	ldi	r24, 0x00	; 0
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	0e 94 82 14 	call	0x2904	; 0x2904 <print_long>
     944:	80 e1       	ldi	r24, 0x10	; 16
     946:	0e 94 9e 15 	call	0x2b3c	; 0x2b3c <button_is_pressed>
     94a:	88 23       	and	r24, r24
     94c:	71 f3       	breq	.-36     	; 0x92a <initialize+0x16>
     94e:	80 e1       	ldi	r24, 0x10	; 16
     950:	0e 94 8a 15 	call	0x2b14	; 0x2b14 <wait_for_button_release>
     954:	88 ee       	ldi	r24, 0xE8	; 232
     956:	93 e0       	ldi	r25, 0x03	; 3
     958:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
     95c:	c0 e0       	ldi	r28, 0x00	; 0
     95e:	d0 e0       	ldi	r29, 0x00	; 0
     960:	19 c0       	rjmp	.+50     	; 0x994 <initialize+0x80>
     962:	ce 01       	movw	r24, r28
     964:	44 97       	sbiw	r24, 0x14	; 20
     966:	88 97       	sbiw	r24, 0x28	; 40
     968:	38 f0       	brcs	.+14     	; 0x978 <initialize+0x64>
     96a:	68 ed       	ldi	r22, 0xD8	; 216
     96c:	7f ef       	ldi	r23, 0xFF	; 255
     96e:	88 e2       	ldi	r24, 0x28	; 40
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
     976:	06 c0       	rjmp	.+12     	; 0x984 <initialize+0x70>
     978:	68 e2       	ldi	r22, 0x28	; 40
     97a:	70 e0       	ldi	r23, 0x00	; 0
     97c:	88 ed       	ldi	r24, 0xD8	; 216
     97e:	9f ef       	ldi	r25, 0xFF	; 255
     980:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
     984:	81 e0       	ldi	r24, 0x01	; 1
     986:	0e 94 b6 17 	call	0x2f6c	; 0x2f6c <calibrate_line_sensors>
     98a:	84 e1       	ldi	r24, 0x14	; 20
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
     992:	21 96       	adiw	r28, 0x01	; 1
     994:	c0 35       	cpi	r28, 0x50	; 80
     996:	d1 05       	cpc	r29, r1
     998:	20 f3       	brcs	.-56     	; 0x962 <initialize+0x4e>
     99a:	60 e0       	ldi	r22, 0x00	; 0
     99c:	70 e0       	ldi	r23, 0x00	; 0
     99e:	80 e0       	ldi	r24, 0x00	; 0
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
     9a6:	80 e1       	ldi	r24, 0x10	; 16
     9a8:	0e 94 9e 15 	call	0x2b3c	; 0x2b3c <button_is_pressed>
     9ac:	88 23       	and	r24, r24
     9ae:	d9 f3       	breq	.-10     	; 0x9a6 <initialize+0x92>
     9b0:	80 e1       	ldi	r24, 0x10	; 16
     9b2:	0e 94 8a 15 	call	0x2b14	; 0x2b14 <wait_for_button_release>
     9b6:	0e 94 1e 14 	call	0x283c	; 0x283c <clear>
     9ba:	df 91       	pop	r29
     9bc:	cf 91       	pop	r28
     9be:	08 95       	ret

000009c0 <inch>:
     9c0:	62 e3       	ldi	r22, 0x32	; 50
     9c2:	70 e0       	ldi	r23, 0x00	; 0
     9c4:	82 e3       	ldi	r24, 0x32	; 50
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
     9cc:	88 ec       	ldi	r24, 0xC8	; 200
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
     9d4:	60 e0       	ldi	r22, 0x00	; 0
     9d6:	70 e0       	ldi	r23, 0x00	; 0
     9d8:	80 e0       	ldi	r24, 0x00	; 0
     9da:	90 e0       	ldi	r25, 0x00	; 0
     9dc:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
     9e0:	08 95       	ret

000009e2 <lineType>:
}

char lineType(){																																								// function that returns the type of junction it detects																																								// >= black line		<=white
	read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     9e2:	61 e0       	ldi	r22, 0x01	; 1
     9e4:	81 e1       	ldi	r24, 0x11	; 17
     9e6:	92 e0       	ldi	r25, 0x02	; 2
     9e8:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <read_line_sensors_calibrated>
	
	if (sensors[1] >= Reference_Upper_Value && sensors[3] >= Reference_Upper_Value){																									//Checks if its A "Barcode", a X junction or a T junction and returns the junction
     9ec:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     9f0:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     9f4:	80 39       	cpi	r24, 0x90	; 144
     9f6:	21 e0       	ldi	r18, 0x01	; 1
     9f8:	92 07       	cpc	r25, r18
     9fa:	08 f4       	brcc	.+2      	; 0x9fe <lineType+0x1c>
     9fc:	6c c0       	rjmp	.+216    	; 0xad6 <lineType+0xf4>
     9fe:	20 91 17 02 	lds	r18, 0x0217	; 0x800217 <sensors+0x6>
     a02:	30 91 18 02 	lds	r19, 0x0218	; 0x800218 <sensors+0x7>
     a06:	20 39       	cpi	r18, 0x90	; 144
     a08:	31 40       	sbci	r19, 0x01	; 1
     a0a:	08 f4       	brcc	.+2      	; 0xa0e <lineType+0x2c>
     a0c:	64 c0       	rjmp	.+200    	; 0xad6 <lineType+0xf4>
		inch();
     a0e:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <inch>
		read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     a12:	61 e0       	ldi	r22, 0x01	; 1
     a14:	81 e1       	ldi	r24, 0x11	; 17
     a16:	92 e0       	ldi	r25, 0x02	; 2
     a18:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <read_line_sensors_calibrated>
		
		if (sensors[0] > Reference_Upper_Value && sensors[1] > Reference_Upper_Value && sensors[3] > Reference_Upper_Value && sensors[4] > Reference_Upper_Value){
     a1c:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <sensors>
     a20:	90 91 12 02 	lds	r25, 0x0212	; 0x800212 <sensors+0x1>
     a24:	81 39       	cpi	r24, 0x91	; 145
     a26:	91 40       	sbci	r25, 0x01	; 1
     a28:	b8 f1       	brcs	.+110    	; 0xa98 <lineType+0xb6>
     a2a:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     a2e:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     a32:	81 39       	cpi	r24, 0x91	; 145
     a34:	91 40       	sbci	r25, 0x01	; 1
     a36:	80 f1       	brcs	.+96     	; 0xa98 <lineType+0xb6>
     a38:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     a3c:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     a40:	81 39       	cpi	r24, 0x91	; 145
     a42:	91 40       	sbci	r25, 0x01	; 1
     a44:	48 f1       	brcs	.+82     	; 0xa98 <lineType+0xb6>
     a46:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x8>
     a4a:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x9>
     a4e:	81 39       	cpi	r24, 0x91	; 145
     a50:	91 40       	sbci	r25, 0x01	; 1
     a52:	10 f1       	brcs	.+68     	; 0xa98 <lineType+0xb6>
			set_motors(75,75);
     a54:	6b e4       	ldi	r22, 0x4B	; 75
     a56:	70 e0       	ldi	r23, 0x00	; 0
     a58:	8b e4       	ldi	r24, 0x4B	; 75
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
			while(sensors[0] > Reference_Upper_Value || sensors[4]  > Reference_Upper_Value)
     a60:	05 c0       	rjmp	.+10     	; 0xa6c <lineType+0x8a>
			{
				read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     a62:	61 e0       	ldi	r22, 0x01	; 1
     a64:	81 e1       	ldi	r24, 0x11	; 17
     a66:	92 e0       	ldi	r25, 0x02	; 2
     a68:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <read_line_sensors_calibrated>
		inch();
		read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		
		if (sensors[0] > Reference_Upper_Value && sensors[1] > Reference_Upper_Value && sensors[3] > Reference_Upper_Value && sensors[4] > Reference_Upper_Value){
			set_motors(75,75);
			while(sensors[0] > Reference_Upper_Value || sensors[4]  > Reference_Upper_Value)
     a6c:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <sensors>
     a70:	90 91 12 02 	lds	r25, 0x0212	; 0x800212 <sensors+0x1>
     a74:	81 39       	cpi	r24, 0x91	; 145
     a76:	91 40       	sbci	r25, 0x01	; 1
     a78:	a0 f7       	brcc	.-24     	; 0xa62 <lineType+0x80>
     a7a:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x8>
     a7e:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x9>
     a82:	81 39       	cpi	r24, 0x91	; 145
     a84:	91 40       	sbci	r25, 0x01	; 1
     a86:	68 f7       	brcc	.-38     	; 0xa62 <lineType+0x80>
			{
				read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			}
			inch();
     a88:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <inch>
     a8c:	88 ee       	ldi	r24, 0xE8	; 232
     a8e:	93 e0       	ldi	r25, 0x03	; 3
     a90:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
			delay(1000);
			return Barcode;
     a94:	82 e0       	ldi	r24, 0x02	; 2
     a96:	08 95       	ret
		}
		
		else if (sensors[2] > Reference_Upper_Value || (sensors[1] > Reference_Upper_Value || sensors[3]  > Reference_Upper_Value)){
     a98:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     a9c:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     aa0:	81 39       	cpi	r24, 0x91	; 145
     aa2:	21 e0       	ldi	r18, 0x01	; 1
     aa4:	92 07       	cpc	r25, r18
     aa6:	08 f0       	brcs	.+2      	; 0xaaa <lineType+0xc8>
     aa8:	84 c0       	rjmp	.+264    	; 0xbb2 <lineType+0x1d0>
     aaa:	20 91 13 02 	lds	r18, 0x0213	; 0x800213 <sensors+0x2>
     aae:	30 91 14 02 	lds	r19, 0x0214	; 0x800214 <sensors+0x3>
     ab2:	21 39       	cpi	r18, 0x91	; 145
     ab4:	31 40       	sbci	r19, 0x01	; 1
     ab6:	08 f0       	brcs	.+2      	; 0xaba <lineType+0xd8>
     ab8:	7e c0       	rjmp	.+252    	; 0xbb6 <lineType+0x1d4>
     aba:	20 91 17 02 	lds	r18, 0x0217	; 0x800217 <sensors+0x6>
     abe:	30 91 18 02 	lds	r19, 0x0218	; 0x800218 <sensors+0x7>
     ac2:	21 39       	cpi	r18, 0x91	; 145
     ac4:	31 40       	sbci	r19, 0x01	; 1
     ac6:	08 f0       	brcs	.+2      	; 0xaca <lineType+0xe8>
     ac8:	78 c0       	rjmp	.+240    	; 0xbba <lineType+0x1d8>
			return X_junction;
		}
		else if(sensors[2] < Reference_Lower_Value){
     aca:	88 3c       	cpi	r24, 0xC8	; 200
     acc:	91 05       	cpc	r25, r1
     ace:	08 f0       	brcs	.+2      	; 0xad2 <lineType+0xf0>
     ad0:	76 c0       	rjmp	.+236    	; 0xbbe <lineType+0x1dc>
			return T_junction;
     ad2:	87 e0       	ldi	r24, 0x07	; 7
     ad4:	08 95       	ret
		}
		
	}
	
							
	else if (sensors[0] > 300 && sensors[1] > 300 && sensors[4] < Reference_Lower_Value ){																	//Checks if its a left corner or a straight with left corner and returns the junction
     ad6:	20 91 11 02 	lds	r18, 0x0211	; 0x800211 <sensors>
     ada:	30 91 12 02 	lds	r19, 0x0212	; 0x800212 <sensors+0x1>
     ade:	2d 32       	cpi	r18, 0x2D	; 45
     ae0:	e1 e0       	ldi	r30, 0x01	; 1
     ae2:	3e 07       	cpc	r19, r30
     ae4:	20 f1       	brcs	.+72     	; 0xb2e <lineType+0x14c>
     ae6:	8d 32       	cpi	r24, 0x2D	; 45
     ae8:	41 e0       	ldi	r20, 0x01	; 1
     aea:	94 07       	cpc	r25, r20
     aec:	00 f1       	brcs	.+64     	; 0xb2e <lineType+0x14c>
     aee:	40 91 19 02 	lds	r20, 0x0219	; 0x800219 <sensors+0x8>
     af2:	50 91 1a 02 	lds	r21, 0x021A	; 0x80021a <sensors+0x9>
     af6:	48 3c       	cpi	r20, 0xC8	; 200
     af8:	51 05       	cpc	r21, r1
     afa:	c8 f4       	brcc	.+50     	; 0xb2e <lineType+0x14c>
		inch();
     afc:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <inch>
		read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     b00:	61 e0       	ldi	r22, 0x01	; 1
     b02:	81 e1       	ldi	r24, 0x11	; 17
     b04:	92 e0       	ldi	r25, 0x02	; 2
     b06:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <read_line_sensors_calibrated>
			
		if (sensors[2] > Reference_Upper_Value || sensors[3]  > Reference_Upper_Value){
     b0a:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     b0e:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     b12:	81 39       	cpi	r24, 0x91	; 145
     b14:	91 40       	sbci	r25, 0x01	; 1
     b16:	08 f0       	brcs	.+2      	; 0xb1a <lineType+0x138>
     b18:	54 c0       	rjmp	.+168    	; 0xbc2 <lineType+0x1e0>
     b1a:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     b1e:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     b22:	81 39       	cpi	r24, 0x91	; 145
     b24:	91 40       	sbci	r25, 0x01	; 1
     b26:	08 f4       	brcc	.+2      	; 0xb2a <lineType+0x148>
     b28:	4e c0       	rjmp	.+156    	; 0xbc6 <lineType+0x1e4>
			return Straight_left_junction;
     b2a:	86 e0       	ldi	r24, 0x06	; 6
     b2c:	08 95       	ret
			return Left_corner;
		}
	}
		
		
	else if (sensors[3] > 300 && sensors[4] > 300 && sensors[0] < Reference_Lower_Value){																	//Checks if its a right corner or a straight with right corner and returns the junction
     b2e:	40 91 17 02 	lds	r20, 0x0217	; 0x800217 <sensors+0x6>
     b32:	50 91 18 02 	lds	r21, 0x0218	; 0x800218 <sensors+0x7>
     b36:	4d 32       	cpi	r20, 0x2D	; 45
     b38:	61 e0       	ldi	r22, 0x01	; 1
     b3a:	56 07       	cpc	r21, r22
     b3c:	08 f1       	brcs	.+66     	; 0xb80 <lineType+0x19e>
     b3e:	60 91 19 02 	lds	r22, 0x0219	; 0x800219 <sensors+0x8>
     b42:	70 91 1a 02 	lds	r23, 0x021A	; 0x80021a <sensors+0x9>
     b46:	6d 32       	cpi	r22, 0x2D	; 45
     b48:	71 40       	sbci	r23, 0x01	; 1
     b4a:	d0 f0       	brcs	.+52     	; 0xb80 <lineType+0x19e>
     b4c:	28 3c       	cpi	r18, 0xC8	; 200
     b4e:	31 05       	cpc	r19, r1
     b50:	b8 f4       	brcc	.+46     	; 0xb80 <lineType+0x19e>
		inch();
     b52:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <inch>
		read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     b56:	61 e0       	ldi	r22, 0x01	; 1
     b58:	81 e1       	ldi	r24, 0x11	; 17
     b5a:	92 e0       	ldi	r25, 0x02	; 2
     b5c:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <read_line_sensors_calibrated>
			
		if (sensors[2] > Reference_Upper_Value || sensors[1]  > Reference_Upper_Value){
     b60:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     b64:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     b68:	81 39       	cpi	r24, 0x91	; 145
     b6a:	91 40       	sbci	r25, 0x01	; 1
     b6c:	70 f5       	brcc	.+92     	; 0xbca <lineType+0x1e8>
     b6e:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     b72:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     b76:	81 39       	cpi	r24, 0x91	; 145
     b78:	91 40       	sbci	r25, 0x01	; 1
     b7a:	48 f1       	brcs	.+82     	; 0xbce <lineType+0x1ec>
			return Straight_right_junction;
     b7c:	85 e0       	ldi	r24, 0x05	; 5
     b7e:	08 95       	ret
		else {
			return Right_corner;
		}
	}
	
	else if(sensors[0] < End_Line_Value && sensors[1] < End_Line_Value && sensors[2] < End_Line_Value &&sensors[3] < End_Line_Value &&sensors[4] < End_Line_Value){															// check if the line ends and returns the junction																												
     b80:	2c 32       	cpi	r18, 0x2C	; 44
     b82:	31 40       	sbci	r19, 0x01	; 1
     b84:	30 f5       	brcc	.+76     	; 0xbd2 <lineType+0x1f0>
     b86:	8c 32       	cpi	r24, 0x2C	; 44
     b88:	91 40       	sbci	r25, 0x01	; 1
     b8a:	28 f5       	brcc	.+74     	; 0xbd6 <lineType+0x1f4>
     b8c:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     b90:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     b94:	8c 32       	cpi	r24, 0x2C	; 44
     b96:	91 40       	sbci	r25, 0x01	; 1
     b98:	00 f5       	brcc	.+64     	; 0xbda <lineType+0x1f8>
     b9a:	4c 32       	cpi	r20, 0x2C	; 44
     b9c:	51 40       	sbci	r21, 0x01	; 1
     b9e:	f8 f4       	brcc	.+62     	; 0xbde <lineType+0x1fc>
     ba0:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x8>
     ba4:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x9>
     ba8:	8c 32       	cpi	r24, 0x2C	; 44
     baa:	91 40       	sbci	r25, 0x01	; 1
     bac:	d0 f4       	brcc	.+52     	; 0xbe2 <lineType+0x200>
		return Line_end;
     bae:	81 e0       	ldi	r24, 0x01	; 1
     bb0:	08 95       	ret
			delay(1000);
			return Barcode;
		}
		
		else if (sensors[2] > Reference_Upper_Value || (sensors[1] > Reference_Upper_Value || sensors[3]  > Reference_Upper_Value)){
			return X_junction;
     bb2:	88 e0       	ldi	r24, 0x08	; 8
     bb4:	08 95       	ret
     bb6:	88 e0       	ldi	r24, 0x08	; 8
     bb8:	08 95       	ret
     bba:	88 e0       	ldi	r24, 0x08	; 8
     bbc:	08 95       	ret
	else if(sensors[0] < End_Line_Value && sensors[1] < End_Line_Value && sensors[2] < End_Line_Value &&sensors[3] < End_Line_Value &&sensors[4] < End_Line_Value){															// check if the line ends and returns the junction																												
		return Line_end;
	}
	
																																									// else its a straight
	return Straight;
     bbe:	80 e0       	ldi	r24, 0x00	; 0
     bc0:	08 95       	ret
	else if (sensors[0] > 300 && sensors[1] > 300 && sensors[4] < Reference_Lower_Value ){																	//Checks if its a left corner or a straight with left corner and returns the junction
		inch();
		read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
		if (sensors[2] > Reference_Upper_Value || sensors[3]  > Reference_Upper_Value){
			return Straight_left_junction;
     bc2:	86 e0       	ldi	r24, 0x06	; 6
     bc4:	08 95       	ret
		}
		else {
			return Left_corner;
     bc6:	83 e0       	ldi	r24, 0x03	; 3
     bc8:	08 95       	ret
	else if (sensors[3] > 300 && sensors[4] > 300 && sensors[0] < Reference_Lower_Value){																	//Checks if its a right corner or a straight with right corner and returns the junction
		inch();
		read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
		if (sensors[2] > Reference_Upper_Value || sensors[1]  > Reference_Upper_Value){
			return Straight_right_junction;
     bca:	85 e0       	ldi	r24, 0x05	; 5
     bcc:	08 95       	ret
		}
		else {
			return Right_corner;
     bce:	84 e0       	ldi	r24, 0x04	; 4
     bd0:	08 95       	ret
	else if(sensors[0] < End_Line_Value && sensors[1] < End_Line_Value && sensors[2] < End_Line_Value &&sensors[3] < End_Line_Value &&sensors[4] < End_Line_Value){															// check if the line ends and returns the junction																												
		return Line_end;
	}
	
																																									// else its a straight
	return Straight;
     bd2:	80 e0       	ldi	r24, 0x00	; 0
     bd4:	08 95       	ret
     bd6:	80 e0       	ldi	r24, 0x00	; 0
     bd8:	08 95       	ret
     bda:	80 e0       	ldi	r24, 0x00	; 0
     bdc:	08 95       	ret
     bde:	80 e0       	ldi	r24, 0x00	; 0
     be0:	08 95       	ret
     be2:	80 e0       	ldi	r24, 0x00	; 0
	
}
     be4:	08 95       	ret

00000be6 <motorControl>:

void motorControl(char x){																																					// function that controls the motor movement and the turns
     be6:	8f 92       	push	r8
     be8:	9f 92       	push	r9
     bea:	af 92       	push	r10
     bec:	bf 92       	push	r11
     bee:	cf 92       	push	r12
     bf0:	df 92       	push	r13
     bf2:	ef 92       	push	r14
     bf4:	ff 92       	push	r15
     bf6:	1f 93       	push	r17
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
     bfc:	18 2f       	mov	r17, r24
	myComs->Update(myComs);
     bfe:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <myComs>
     c02:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <myComs+0x1>
     c06:	fc 01       	movw	r30, r24
     c08:	ef 58       	subi	r30, 0x8F	; 143
     c0a:	ff 4f       	sbci	r31, 0xFF	; 255
     c0c:	01 90       	ld	r0, Z+
     c0e:	f0 81       	ld	r31, Z
     c10:	e0 2d       	mov	r30, r0
     c12:	09 95       	icall
	unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     c14:	61 e0       	ldi	r22, 0x01	; 1
     c16:	81 e1       	ldi	r24, 0x11	; 17
     c18:	92 e0       	ldi	r25, 0x02	; 2
     c1a:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <read_line>
     c1e:	ec 01       	movw	r28, r24
	read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     c20:	61 e0       	ldi	r22, 0x01	; 1
     c22:	81 e1       	ldi	r24, 0x11	; 17
     c24:	92 e0       	ldi	r25, 0x02	; 2
     c26:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <read_line_sensors_calibrated>
	
	while (analog_read(7) >= 200) {																																			// Checks if there is an object infront of it, if there is it stops the motor and gives feedback to the display
     c2a:	0d c0       	rjmp	.+26     	; 0xc46 <motorControl+0x60>
		set_motors(0, 0);
     c2c:	60 e0       	ldi	r22, 0x00	; 0
     c2e:	70 e0       	ldi	r23, 0x00	; 0
     c30:	80 e0       	ldi	r24, 0x00	; 0
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
		errorDisplay(object, batteryPercentage());
     c38:	0e 94 ff 02 	call	0x5fe	; 0x5fe <batteryPercentage>
     c3c:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <__fixsfsi>
     c40:	82 e0       	ldi	r24, 0x02	; 2
     c42:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <errorDisplay>
void motorControl(char x){																																					// function that controls the motor movement and the turns
	myComs->Update(myComs);
	unsigned int position = read_line(sensors,IR_EMITTERS_ON);
	read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	
	while (analog_read(7) >= 200) {																																			// Checks if there is an object infront of it, if there is it stops the motor and gives feedback to the display
     c46:	87 e0       	ldi	r24, 0x07	; 7
     c48:	0e 94 63 0f 	call	0x1ec6	; 0x1ec6 <analog_read>
     c4c:	88 3c       	cpi	r24, 0xC8	; 200
     c4e:	91 05       	cpc	r25, r1
     c50:	68 f7       	brcc	.-38     	; 0xc2c <motorControl+0x46>
		set_motors(0, 0);
		errorDisplay(object, batteryPercentage());
	}

		
	if(myComs->EmergencyStop == 1){																																	//Emergency Brake
     c52:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     c56:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     c5a:	e5 59       	subi	r30, 0x95	; 149
     c5c:	ff 4f       	sbci	r31, 0xFF	; 255
     c5e:	80 81       	ld	r24, Z
     c60:	81 30       	cpi	r24, 0x01	; 1
     c62:	71 f4       	brne	.+28     	; 0xc80 <motorControl+0x9a>
		set_motors(0,0);
     c64:	60 e0       	ldi	r22, 0x00	; 0
     c66:	70 e0       	ldi	r23, 0x00	; 0
     c68:	80 e0       	ldi	r24, 0x00	; 0
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
		errorDisplay(emergency,batteryPercentage());	
     c70:	0e 94 ff 02 	call	0x5fe	; 0x5fe <batteryPercentage>
     c74:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <__fixsfsi>
     c78:	81 e0       	ldi	r24, 0x01	; 1
     c7a:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <errorDisplay>
     c7e:	05 c1       	rjmp	.+522    	; 0xe8a <motorControl+0x2a4>
	}
	
	
	else if(x == 'L'){																																						//Turn Left
     c80:	1c 34       	cpi	r17, 0x4C	; 76
     c82:	39 f5       	brne	.+78     	; 0xcd2 <motorControl+0xec>
		set_motors(-turn_value,turn_value);
     c84:	6c e3       	ldi	r22, 0x3C	; 60
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	84 ec       	ldi	r24, 0xC4	; 196
     c8a:	9f ef       	ldi	r25, 0xFF	; 255
     c8c:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
		
		while (sensors[2] > Reference_Lower_Value)
     c90:	05 c0       	rjmp	.+10     	; 0xc9c <motorControl+0xb6>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     c92:	61 e0       	ldi	r22, 0x01	; 1
     c94:	81 e1       	ldi	r24, 0x11	; 17
     c96:	92 e0       	ldi	r25, 0x02	; 2
     c98:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <read_line_sensors_calibrated>
	
	
	else if(x == 'L'){																																						//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] > Reference_Lower_Value)
     c9c:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     ca0:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     ca4:	89 3c       	cpi	r24, 0xC9	; 201
     ca6:	91 05       	cpc	r25, r1
     ca8:	a0 f7       	brcc	.-24     	; 0xc92 <motorControl+0xac>
     caa:	05 c0       	rjmp	.+10     	; 0xcb6 <motorControl+0xd0>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] < Reference_Upper_Value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     cac:	61 e0       	ldi	r22, 0x01	; 1
     cae:	81 e1       	ldi	r24, 0x11	; 17
     cb0:	92 e0       	ldi	r25, 0x02	; 2
     cb2:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <read_line_sensors_calibrated>
	else if(x == 'L'){																																						//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] > Reference_Lower_Value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] < Reference_Upper_Value)
     cb6:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     cba:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     cbe:	80 39       	cpi	r24, 0x90	; 144
     cc0:	91 40       	sbci	r25, 0x01	; 1
     cc2:	a0 f3       	brcs	.-24     	; 0xcac <motorControl+0xc6>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		set_motors(0,0);
     cc4:	60 e0       	ldi	r22, 0x00	; 0
     cc6:	70 e0       	ldi	r23, 0x00	; 0
     cc8:	80 e0       	ldi	r24, 0x00	; 0
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
     cd0:	dc c0       	rjmp	.+440    	; 0xe8a <motorControl+0x2a4>
	}
	
	
	else if(x == 'R'){																																						//Turn Right
     cd2:	12 35       	cpi	r17, 0x52	; 82
     cd4:	39 f5       	brne	.+78     	; 0xd24 <motorControl+0x13e>
		set_motors(turn_value,-turn_value);
     cd6:	64 ec       	ldi	r22, 0xC4	; 196
     cd8:	7f ef       	ldi	r23, 0xFF	; 255
     cda:	8c e3       	ldi	r24, 0x3C	; 60
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
		
		while (sensors[2] > Reference_Lower_Value)
     ce2:	05 c0       	rjmp	.+10     	; 0xcee <motorControl+0x108>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     ce4:	61 e0       	ldi	r22, 0x01	; 1
     ce6:	81 e1       	ldi	r24, 0x11	; 17
     ce8:	92 e0       	ldi	r25, 0x02	; 2
     cea:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <read_line_sensors_calibrated>
	
	
	else if(x == 'R'){																																						//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] > Reference_Lower_Value)
     cee:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     cf2:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     cf6:	89 3c       	cpi	r24, 0xC9	; 201
     cf8:	91 05       	cpc	r25, r1
     cfa:	a0 f7       	brcc	.-24     	; 0xce4 <motorControl+0xfe>
     cfc:	05 c0       	rjmp	.+10     	; 0xd08 <motorControl+0x122>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] < Reference_Upper_Value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     cfe:	61 e0       	ldi	r22, 0x01	; 1
     d00:	81 e1       	ldi	r24, 0x11	; 17
     d02:	92 e0       	ldi	r25, 0x02	; 2
     d04:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <read_line_sensors_calibrated>
	else if(x == 'R'){																																						//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] > Reference_Lower_Value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] < Reference_Upper_Value)
     d08:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     d0c:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     d10:	80 39       	cpi	r24, 0x90	; 144
     d12:	91 40       	sbci	r25, 0x01	; 1
     d14:	a0 f3       	brcs	.-24     	; 0xcfe <motorControl+0x118>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		set_motors(0,0);
     d16:	60 e0       	ldi	r22, 0x00	; 0
     d18:	70 e0       	ldi	r23, 0x00	; 0
     d1a:	80 e0       	ldi	r24, 0x00	; 0
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
     d22:	b3 c0       	rjmp	.+358    	; 0xe8a <motorControl+0x2a4>
	}
		
			
	else if(x == 'S'){																																						//drive straight and adjusts the robot so it follows the line
     d24:	13 35       	cpi	r17, 0x53	; 83
     d26:	09 f0       	breq	.+2      	; 0xd2a <motorControl+0x144>
     d28:	66 c0       	rjmp	.+204    	; 0xdf6 <motorControl+0x210>
		
		// The "proportional" term should be 0 when we are on the line.
		int proportional = ((int)position) - 2000;
     d2a:	ce 01       	movw	r24, r28
     d2c:	80 5d       	subi	r24, 0xD0	; 208
     d2e:	97 40       	sbci	r25, 0x07	; 7

		// Compute the derivative (change) and integral (sum) of the
		// position.
		int derivative = proportional - last_proportional;
     d30:	20 91 0d 02 	lds	r18, 0x020D	; 0x80020d <last_proportional>
     d34:	30 91 0e 02 	lds	r19, 0x020E	; 0x80020e <last_proportional+0x1>
     d38:	ec 01       	movw	r28, r24
     d3a:	c2 1b       	sub	r28, r18
     d3c:	d3 0b       	sbc	r29, r19
		integral = integral + proportional;
     d3e:	60 91 0f 02 	lds	r22, 0x020F	; 0x80020f <integral>
     d42:	70 91 10 02 	lds	r23, 0x0210	; 0x800210 <integral+0x1>
     d46:	fc 01       	movw	r30, r24
     d48:	e6 0f       	add	r30, r22
     d4a:	f7 1f       	adc	r31, r23
     d4c:	f0 93 10 02 	sts	0x0210, r31	; 0x800210 <integral+0x1>
     d50:	e0 93 0f 02 	sts	0x020F, r30	; 0x80020f <integral>

		// Remember the last position.
		 last_proportional = proportional;
     d54:	90 93 0e 02 	sts	0x020E, r25	; 0x80020e <last_proportional+0x1>
     d58:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <last_proportional>
 
 		int power_difference = proportional/10 + integral/40000 + derivative*0.50;						
     d5c:	6a e0       	ldi	r22, 0x0A	; 10
     d5e:	70 e0       	ldi	r23, 0x00	; 0
     d60:	0e 94 29 1d 	call	0x3a52	; 0x3a52 <__divmodhi4>
     d64:	6b 01       	movw	r12, r22
     d66:	bf 01       	movw	r22, r30
     d68:	ff 0f       	add	r31, r31
     d6a:	88 0b       	sbc	r24, r24
     d6c:	99 0b       	sbc	r25, r25
     d6e:	20 e4       	ldi	r18, 0x40	; 64
     d70:	3c e9       	ldi	r19, 0x9C	; 156
     d72:	40 e0       	ldi	r20, 0x00	; 0
     d74:	50 e0       	ldi	r21, 0x00	; 0
     d76:	0e 94 5f 1d 	call	0x3abe	; 0x3abe <__divmodsi4>
     d7a:	0d 2c       	mov	r0, r13
     d7c:	00 0c       	add	r0, r0
     d7e:	ee 08       	sbc	r14, r14
     d80:	ff 08       	sbc	r15, r15
     d82:	c2 0e       	add	r12, r18
     d84:	d3 1e       	adc	r13, r19
     d86:	e4 1e       	adc	r14, r20
     d88:	f5 1e       	adc	r15, r21
     d8a:	be 01       	movw	r22, r28
     d8c:	dd 0f       	add	r29, r29
     d8e:	88 0b       	sbc	r24, r24
     d90:	99 0b       	sbc	r25, r25
     d92:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <__floatsisf>
     d96:	20 e0       	ldi	r18, 0x00	; 0
     d98:	30 e0       	ldi	r19, 0x00	; 0
     d9a:	40 e0       	ldi	r20, 0x00	; 0
     d9c:	5f e3       	ldi	r21, 0x3F	; 63
     d9e:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <__mulsf3>
     da2:	4b 01       	movw	r8, r22
     da4:	5c 01       	movw	r10, r24
     da6:	c7 01       	movw	r24, r14
     da8:	b6 01       	movw	r22, r12
     daa:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <__floatsisf>
     dae:	a5 01       	movw	r20, r10
     db0:	94 01       	movw	r18, r8
     db2:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__addsf3>
     db6:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <__fixsfsi>
     dba:	cb 01       	movw	r24, r22

		// Compute the actual motor settings.  We never set either motor
		// to a negative value.
		const int max = 70;
		if(power_difference > max)
     dbc:	67 34       	cpi	r22, 0x47	; 71
     dbe:	71 05       	cpc	r23, r1
     dc0:	14 f0       	brlt	.+4      	; 0xdc6 <motorControl+0x1e0>
			power_difference = max;
     dc2:	86 e4       	ldi	r24, 0x46	; 70
     dc4:	90 e0       	ldi	r25, 0x00	; 0
		if(power_difference < -max)
     dc6:	8a 3b       	cpi	r24, 0xBA	; 186
     dc8:	2f ef       	ldi	r18, 0xFF	; 255
     dca:	92 07       	cpc	r25, r18
     dcc:	14 f4       	brge	.+4      	; 0xdd2 <motorControl+0x1ec>
			power_difference = -max;
     dce:	8a eb       	ldi	r24, 0xBA	; 186
     dd0:	9f ef       	ldi	r25, 0xFF	; 255

		if(power_difference < 0)
     dd2:	99 23       	and	r25, r25
     dd4:	3c f4       	brge	.+14     	; 0xde4 <motorControl+0x1fe>
			set_motors(max+power_difference, max);
     dd6:	66 e4       	ldi	r22, 0x46	; 70
     dd8:	70 e0       	ldi	r23, 0x00	; 0
     dda:	8a 5b       	subi	r24, 0xBA	; 186
     ddc:	9f 4f       	sbci	r25, 0xFF	; 255
     dde:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
     de2:	53 c0       	rjmp	.+166    	; 0xe8a <motorControl+0x2a4>
		else
			set_motors(max, max-power_difference);
     de4:	66 e4       	ldi	r22, 0x46	; 70
     de6:	70 e0       	ldi	r23, 0x00	; 0
     de8:	68 1b       	sub	r22, r24
     dea:	79 0b       	sbc	r23, r25
     dec:	86 e4       	ldi	r24, 0x46	; 70
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
     df4:	4a c0       	rjmp	.+148    	; 0xe8a <motorControl+0x2a4>
		
	}
	
	
	else if(x == 'B'){																																							//Reverse while following the line
     df6:	12 34       	cpi	r17, 0x42	; 66
     df8:	09 f5       	brne	.+66     	; 0xe3c <motorControl+0x256>
		set_motors(-50,-50);
     dfa:	6e ec       	ldi	r22, 0xCE	; 206
     dfc:	7f ef       	ldi	r23, 0xFF	; 255
     dfe:	8e ec       	ldi	r24, 0xCE	; 206
     e00:	9f ef       	ldi	r25, 0xFF	; 255
     e02:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
		
		if (sensors[3] >=Reference_Upper_Value)
     e06:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     e0a:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     e0e:	80 39       	cpi	r24, 0x90	; 144
     e10:	91 40       	sbci	r25, 0x01	; 1
     e12:	30 f0       	brcs	.+12     	; 0xe20 <motorControl+0x23a>
			set_motors(-50,-55);
     e14:	69 ec       	ldi	r22, 0xC9	; 201
     e16:	7f ef       	ldi	r23, 0xFF	; 255
     e18:	8e ec       	ldi	r24, 0xCE	; 206
     e1a:	9f ef       	ldi	r25, 0xFF	; 255
     e1c:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
		if (sensors[1] >=Reference_Upper_Value)
     e20:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     e24:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     e28:	80 39       	cpi	r24, 0x90	; 144
     e2a:	91 40       	sbci	r25, 0x01	; 1
     e2c:	70 f1       	brcs	.+92     	; 0xe8a <motorControl+0x2a4>
			set_motors(-55,-50);
     e2e:	6e ec       	ldi	r22, 0xCE	; 206
     e30:	7f ef       	ldi	r23, 0xFF	; 255
     e32:	89 ec       	ldi	r24, 0xC9	; 201
     e34:	9f ef       	ldi	r25, 0xFF	; 255
     e36:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
     e3a:	27 c0       	rjmp	.+78     	; 0xe8a <motorControl+0x2a4>
	}
	
	
	else if(x == 'T'){																																							// Turn around
     e3c:	14 35       	cpi	r17, 0x54	; 84
     e3e:	a1 f4       	brne	.+40     	; 0xe68 <motorControl+0x282>
		set_motors(-turn_value,turn_value);
     e40:	6c e3       	ldi	r22, 0x3C	; 60
     e42:	70 e0       	ldi	r23, 0x00	; 0
     e44:	84 ec       	ldi	r24, 0xC4	; 196
     e46:	9f ef       	ldi	r25, 0xFF	; 255
     e48:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
		
		while (sensors[2] <=Reference_Lower_Value)
     e4c:	05 c0       	rjmp	.+10     	; 0xe58 <motorControl+0x272>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     e4e:	61 e0       	ldi	r22, 0x01	; 1
     e50:	81 e1       	ldi	r24, 0x11	; 17
     e52:	92 e0       	ldi	r25, 0x02	; 2
     e54:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <read_line_sensors_calibrated>
	
	
	else if(x == 'T'){																																							// Turn around
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] <=Reference_Lower_Value)
     e58:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     e5c:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     e60:	89 3c       	cpi	r24, 0xC9	; 201
     e62:	91 05       	cpc	r25, r1
     e64:	a0 f3       	brcs	.-24     	; 0xe4e <motorControl+0x268>
     e66:	11 c0       	rjmp	.+34     	; 0xe8a <motorControl+0x2a4>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
		
	else if(x == 'P')																																							//Robot stops slowly
     e68:	10 35       	cpi	r17, 0x50	; 80
     e6a:	79 f4       	brne	.+30     	; 0xe8a <motorControl+0x2a4>
     e6c:	0a c0       	rjmp	.+20     	; 0xe82 <motorControl+0x29c>
		for( int i=50;i>=0;i-=3)
		{
			set_motors(i,i);
     e6e:	be 01       	movw	r22, r28
     e70:	ce 01       	movw	r24, r28
     e72:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
     e76:	84 e0       	ldi	r24, 0x04	; 4
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
		
	else if(x == 'P')																																							//Robot stops slowly
		for( int i=50;i>=0;i-=3)
     e7e:	23 97       	sbiw	r28, 0x03	; 3
     e80:	02 c0       	rjmp	.+4      	; 0xe86 <motorControl+0x2a0>
     e82:	c2 e3       	ldi	r28, 0x32	; 50
     e84:	d0 e0       	ldi	r29, 0x00	; 0
     e86:	dd 23       	and	r29, r29
     e88:	94 f7       	brge	.-28     	; 0xe6e <motorControl+0x288>
			set_motors(i,i);
			delay(4);
		}
		
		
}
     e8a:	df 91       	pop	r29
     e8c:	cf 91       	pop	r28
     e8e:	1f 91       	pop	r17
     e90:	ff 90       	pop	r15
     e92:	ef 90       	pop	r14
     e94:	df 90       	pop	r13
     e96:	cf 90       	pop	r12
     e98:	bf 90       	pop	r11
     e9a:	af 90       	pop	r10
     e9c:	9f 90       	pop	r9
     e9e:	8f 90       	pop	r8
     ea0:	08 95       	ret

00000ea2 <manualControl>:

void manualControl(){																																							// function for manual control of the robot
static int speed = 0;
static unsigned int counter = 0;

updateDisplay(0,batteryPercentage(),manual);
     ea2:	0e 94 ff 02 	call	0x5fe	; 0x5fe <batteryPercentage>
     ea6:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <__fixsfsi>
     eaa:	40 e0       	ldi	r20, 0x00	; 0
     eac:	80 e0       	ldi	r24, 0x00	; 0
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	0e 94 21 03 	call	0x642	; 0x642 <updateDisplay>
	myComs->Update(myComs);
     eb4:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <myComs>
     eb8:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <myComs+0x1>
     ebc:	fc 01       	movw	r30, r24
     ebe:	ef 58       	subi	r30, 0x8F	; 143
     ec0:	ff 4f       	sbci	r31, 0xFF	; 255
     ec2:	01 90       	ld	r0, Z+
     ec4:	f0 81       	ld	r31, Z
     ec6:	e0 2d       	mov	r30, r0
     ec8:	09 95       	icall
	if(myComs->Direction[0] == 1){											// increase speed
     eca:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     ece:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     ed2:	85 a9       	ldd	r24, Z+53	; 0x35
     ed4:	81 30       	cpi	r24, 0x01	; 1
     ed6:	e1 f5       	brne	.+120    	; 0xf50 <manualControl+0xae>
		set_motors(speed,speed);
     ed8:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2279>
     edc:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2279+0x1>
     ee0:	bc 01       	movw	r22, r24
     ee2:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
		if(counter % 20 == 0)
     ee6:	40 91 fd 01 	lds	r20, 0x01FD	; 0x8001fd <counter.2280>
     eea:	50 91 fe 01 	lds	r21, 0x01FE	; 0x8001fe <counter.2280+0x1>
     eee:	9a 01       	movw	r18, r20
     ef0:	ad ec       	ldi	r26, 0xCD	; 205
     ef2:	bc ec       	ldi	r27, 0xCC	; 204
     ef4:	0e 94 84 1d 	call	0x3b08	; 0x3b08 <__umulhisi3>
     ef8:	92 95       	swap	r25
     efa:	82 95       	swap	r24
     efc:	8f 70       	andi	r24, 0x0F	; 15
     efe:	89 27       	eor	r24, r25
     f00:	9f 70       	andi	r25, 0x0F	; 15
     f02:	89 27       	eor	r24, r25
     f04:	64 e1       	ldi	r22, 0x14	; 20
     f06:	68 9f       	mul	r22, r24
     f08:	90 01       	movw	r18, r0
     f0a:	69 9f       	mul	r22, r25
     f0c:	30 0d       	add	r19, r0
     f0e:	11 24       	eor	r1, r1
     f10:	42 17       	cp	r20, r18
     f12:	53 07       	cpc	r21, r19
     f14:	49 f4       	brne	.+18     	; 0xf28 <manualControl+0x86>
		{
			speed +=10;
     f16:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2279>
     f1a:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2279+0x1>
     f1e:	0a 96       	adiw	r24, 0x0a	; 10
     f20:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2279+0x1>
     f24:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2279>
		}
		if(speed > 100)
     f28:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2279>
     f2c:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2279+0x1>
     f30:	85 36       	cpi	r24, 0x65	; 101
     f32:	91 05       	cpc	r25, r1
     f34:	34 f0       	brlt	.+12     	; 0xf42 <manualControl+0xa0>
		{
			speed = 100;
     f36:	84 e6       	ldi	r24, 0x64	; 100
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2279+0x1>
     f3e:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2279>
		}
		counter++;
     f42:	4f 5f       	subi	r20, 0xFF	; 255
     f44:	5f 4f       	sbci	r21, 0xFF	; 255
     f46:	50 93 fe 01 	sts	0x01FE, r21	; 0x8001fe <counter.2280+0x1>
     f4a:	40 93 fd 01 	sts	0x01FD, r20	; 0x8001fd <counter.2280>
     f4e:	ba c0       	rjmp	.+372    	; 0x10c4 <manualControl+0x222>
	}
	else if(myComs->Direction[0] == 0 && myComs->Direction[2] == 0)			// decrease speed without button press
     f50:	81 11       	cpse	r24, r1
     f52:	3d c0       	rjmp	.+122    	; 0xfce <manualControl+0x12c>
     f54:	97 a9       	ldd	r25, Z+55	; 0x37
     f56:	91 11       	cpse	r25, r1
     f58:	3a c0       	rjmp	.+116    	; 0xfce <manualControl+0x12c>
	{
		set_motors(speed,speed);
     f5a:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2279>
     f5e:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2279+0x1>
     f62:	bc 01       	movw	r22, r24
     f64:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
		if(counter % 20 == 0)
     f68:	40 91 fd 01 	lds	r20, 0x01FD	; 0x8001fd <counter.2280>
     f6c:	50 91 fe 01 	lds	r21, 0x01FE	; 0x8001fe <counter.2280+0x1>
     f70:	9a 01       	movw	r18, r20
     f72:	ad ec       	ldi	r26, 0xCD	; 205
     f74:	bc ec       	ldi	r27, 0xCC	; 204
     f76:	0e 94 84 1d 	call	0x3b08	; 0x3b08 <__umulhisi3>
     f7a:	92 95       	swap	r25
     f7c:	82 95       	swap	r24
     f7e:	8f 70       	andi	r24, 0x0F	; 15
     f80:	89 27       	eor	r24, r25
     f82:	9f 70       	andi	r25, 0x0F	; 15
     f84:	89 27       	eor	r24, r25
     f86:	64 e1       	ldi	r22, 0x14	; 20
     f88:	68 9f       	mul	r22, r24
     f8a:	90 01       	movw	r18, r0
     f8c:	69 9f       	mul	r22, r25
     f8e:	30 0d       	add	r19, r0
     f90:	11 24       	eor	r1, r1
     f92:	42 17       	cp	r20, r18
     f94:	53 07       	cpc	r21, r19
     f96:	49 f4       	brne	.+18     	; 0xfaa <manualControl+0x108>
		{
			speed-=10;
     f98:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2279>
     f9c:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2279+0x1>
     fa0:	0a 97       	sbiw	r24, 0x0a	; 10
     fa2:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2279+0x1>
     fa6:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2279>
		}
		if(speed < 1)
     faa:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2279>
     fae:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2279+0x1>
     fb2:	18 16       	cp	r1, r24
     fb4:	19 06       	cpc	r1, r25
     fb6:	24 f0       	brlt	.+8      	; 0xfc0 <manualControl+0x11e>
		{
			speed = 0;
     fb8:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <speed.2279+0x1>
     fbc:	10 92 ff 01 	sts	0x01FF, r1	; 0x8001ff <speed.2279>
		}
		counter++;
     fc0:	4f 5f       	subi	r20, 0xFF	; 255
     fc2:	5f 4f       	sbci	r21, 0xFF	; 255
     fc4:	50 93 fe 01 	sts	0x01FE, r21	; 0x8001fe <counter.2280+0x1>
     fc8:	40 93 fd 01 	sts	0x01FD, r20	; 0x8001fd <counter.2280>
     fcc:	7b c0       	rjmp	.+246    	; 0x10c4 <manualControl+0x222>
	}
	
	else if(myComs->Direction[2] == 1){										// Backwards(decrease speed)				
     fce:	97 a9       	ldd	r25, Z+55	; 0x37
     fd0:	91 30       	cpi	r25, 0x01	; 1
     fd2:	e1 f5       	brne	.+120    	; 0x104c <manualControl+0x1aa>
		set_motors(speed,speed);
     fd4:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2279>
     fd8:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2279+0x1>
     fdc:	bc 01       	movw	r22, r24
     fde:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
		if(counter % 20 == 0)
     fe2:	40 91 fd 01 	lds	r20, 0x01FD	; 0x8001fd <counter.2280>
     fe6:	50 91 fe 01 	lds	r21, 0x01FE	; 0x8001fe <counter.2280+0x1>
     fea:	9a 01       	movw	r18, r20
     fec:	ad ec       	ldi	r26, 0xCD	; 205
     fee:	bc ec       	ldi	r27, 0xCC	; 204
     ff0:	0e 94 84 1d 	call	0x3b08	; 0x3b08 <__umulhisi3>
     ff4:	92 95       	swap	r25
     ff6:	82 95       	swap	r24
     ff8:	8f 70       	andi	r24, 0x0F	; 15
     ffa:	89 27       	eor	r24, r25
     ffc:	9f 70       	andi	r25, 0x0F	; 15
     ffe:	89 27       	eor	r24, r25
    1000:	64 e1       	ldi	r22, 0x14	; 20
    1002:	68 9f       	mul	r22, r24
    1004:	90 01       	movw	r18, r0
    1006:	69 9f       	mul	r22, r25
    1008:	30 0d       	add	r19, r0
    100a:	11 24       	eor	r1, r1
    100c:	42 17       	cp	r20, r18
    100e:	53 07       	cpc	r21, r19
    1010:	49 f4       	brne	.+18     	; 0x1024 <manualControl+0x182>
		{
			speed-=10;
    1012:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2279>
    1016:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2279+0x1>
    101a:	0a 97       	sbiw	r24, 0x0a	; 10
    101c:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2279+0x1>
    1020:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2279>
		}
		if(speed < -100)
    1024:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2279>
    1028:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2279+0x1>
    102c:	8c 39       	cpi	r24, 0x9C	; 156
    102e:	9f 4f       	sbci	r25, 0xFF	; 255
    1030:	34 f4       	brge	.+12     	; 0x103e <manualControl+0x19c>
		{
			speed = -100;
    1032:	8c e9       	ldi	r24, 0x9C	; 156
    1034:	9f ef       	ldi	r25, 0xFF	; 255
    1036:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2279+0x1>
    103a:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2279>
		}
		counter++;
    103e:	4f 5f       	subi	r20, 0xFF	; 255
    1040:	5f 4f       	sbci	r21, 0xFF	; 255
    1042:	50 93 fe 01 	sts	0x01FE, r21	; 0x8001fe <counter.2280+0x1>
    1046:	40 93 fd 01 	sts	0x01FD, r20	; 0x8001fd <counter.2280>
    104a:	3c c0       	rjmp	.+120    	; 0x10c4 <manualControl+0x222>
	}
	else if(myComs->Direction[0] == 1 && myComs->Direction[2] == 0)			// Increases button speed when below 0
    104c:	81 30       	cpi	r24, 0x01	; 1
    104e:	d1 f5       	brne	.+116    	; 0x10c4 <manualControl+0x222>
    1050:	91 11       	cpse	r25, r1
    1052:	38 c0       	rjmp	.+112    	; 0x10c4 <manualControl+0x222>
	{
		set_motors(speed,speed);
    1054:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2279>
    1058:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2279+0x1>
    105c:	bc 01       	movw	r22, r24
    105e:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
		if(counter % 20 == 0)
    1062:	40 91 fd 01 	lds	r20, 0x01FD	; 0x8001fd <counter.2280>
    1066:	50 91 fe 01 	lds	r21, 0x01FE	; 0x8001fe <counter.2280+0x1>
    106a:	9a 01       	movw	r18, r20
    106c:	ad ec       	ldi	r26, 0xCD	; 205
    106e:	bc ec       	ldi	r27, 0xCC	; 204
    1070:	0e 94 84 1d 	call	0x3b08	; 0x3b08 <__umulhisi3>
    1074:	92 95       	swap	r25
    1076:	82 95       	swap	r24
    1078:	8f 70       	andi	r24, 0x0F	; 15
    107a:	89 27       	eor	r24, r25
    107c:	9f 70       	andi	r25, 0x0F	; 15
    107e:	89 27       	eor	r24, r25
    1080:	64 e1       	ldi	r22, 0x14	; 20
    1082:	68 9f       	mul	r22, r24
    1084:	90 01       	movw	r18, r0
    1086:	69 9f       	mul	r22, r25
    1088:	30 0d       	add	r19, r0
    108a:	11 24       	eor	r1, r1
    108c:	42 17       	cp	r20, r18
    108e:	53 07       	cpc	r21, r19
    1090:	49 f4       	brne	.+18     	; 0x10a4 <manualControl+0x202>
		{
			speed += 10;
    1092:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2279>
    1096:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2279+0x1>
    109a:	0a 96       	adiw	r24, 0x0a	; 10
    109c:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2279+0x1>
    10a0:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2279>
		}
		if(speed > -1)
    10a4:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2279>
    10a8:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2279+0x1>
    10ac:	99 23       	and	r25, r25
    10ae:	24 f0       	brlt	.+8      	; 0x10b8 <manualControl+0x216>
		{
			speed = 0;
    10b0:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <speed.2279+0x1>
    10b4:	10 92 ff 01 	sts	0x01FF, r1	; 0x8001ff <speed.2279>
		}
		counter++;
    10b8:	4f 5f       	subi	r20, 0xFF	; 255
    10ba:	5f 4f       	sbci	r21, 0xFF	; 255
    10bc:	50 93 fe 01 	sts	0x01FE, r21	; 0x8001fe <counter.2280+0x1>
    10c0:	40 93 fd 01 	sts	0x01FD, r20	; 0x8001fd <counter.2280>
	}
	
	if(myComs->Direction[1] == 1){											// turn left
    10c4:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
    10c8:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
    10cc:	86 a9       	ldd	r24, Z+54	; 0x36
    10ce:	81 30       	cpi	r24, 0x01	; 1
    10d0:	61 f4       	brne	.+24     	; 0x10ea <manualControl+0x248>
		set_motors(speed/2,speed);
    10d2:	60 91 ff 01 	lds	r22, 0x01FF	; 0x8001ff <speed.2279>
    10d6:	70 91 00 02 	lds	r23, 0x0200	; 0x800200 <speed.2279+0x1>
    10da:	cb 01       	movw	r24, r22
    10dc:	77 23       	and	r23, r23
    10de:	0c f4       	brge	.+2      	; 0x10e2 <manualControl+0x240>
    10e0:	01 96       	adiw	r24, 0x01	; 1
    10e2:	95 95       	asr	r25
    10e4:	87 95       	ror	r24
    10e6:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
	}
	
	if(myComs->Direction[3] == 1){											// turn Right
    10ea:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
    10ee:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
    10f2:	80 ad       	ldd	r24, Z+56	; 0x38
    10f4:	81 30       	cpi	r24, 0x01	; 1
    10f6:	69 f4       	brne	.+26     	; 0x1112 <manualControl+0x270>
		set_motors(speed,speed/2);
    10f8:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2279>
    10fc:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2279+0x1>
    1100:	bc 01       	movw	r22, r24
    1102:	99 23       	and	r25, r25
    1104:	14 f4       	brge	.+4      	; 0x110a <manualControl+0x268>
    1106:	6f 5f       	subi	r22, 0xFF	; 255
    1108:	7f 4f       	sbci	r23, 0xFF	; 255
    110a:	75 95       	asr	r23
    110c:	67 95       	ror	r22
    110e:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
    1112:	08 95       	ret

00001114 <Spin>:
	}
}

void Spin(){																// spin fuction 
    1114:	cf 93       	push	r28
    1116:	df 93       	push	r29
	errorDisplay(slipped,batteryPercentage());
    1118:	0e 94 ff 02 	call	0x5fe	; 0x5fe <batteryPercentage>
    111c:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <__fixsfsi>
    1120:	80 e0       	ldi	r24, 0x00	; 0
    1122:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <errorDisplay>
	for(int i = 0;i<=255;i++){
    1126:	c0 e0       	ldi	r28, 0x00	; 0
    1128:	d0 e0       	ldi	r29, 0x00	; 0
    112a:	0c c0       	rjmp	.+24     	; 0x1144 <Spin+0x30>
		set_motors(i,0-i);
    112c:	66 27       	eor	r22, r22
    112e:	77 27       	eor	r23, r23
    1130:	6c 1b       	sub	r22, r28
    1132:	7d 0b       	sbc	r23, r29
    1134:	ce 01       	movw	r24, r28
    1136:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
    113a:	82 e0       	ldi	r24, 0x02	; 2
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
	}
}

void Spin(){																// spin fuction 
	errorDisplay(slipped,batteryPercentage());
	for(int i = 0;i<=255;i++){
    1142:	21 96       	adiw	r28, 0x01	; 1
    1144:	cf 3f       	cpi	r28, 0xFF	; 255
    1146:	d1 05       	cpc	r29, r1
    1148:	89 f3       	breq	.-30     	; 0x112c <Spin+0x18>
    114a:	84 f3       	brlt	.-32     	; 0x112c <Spin+0x18>
    114c:	c0 e0       	ldi	r28, 0x00	; 0
    114e:	d0 e0       	ldi	r29, 0x00	; 0
    1150:	10 c0       	rjmp	.+32     	; 0x1172 <Spin+0x5e>
		set_motors(i,0-i);
		delay(2);
	}
	int count = 0;
	while(myComs->EmergencyStop == 2){
		count++;
    1152:	21 96       	adiw	r28, 0x01	; 1
		if(count % 10000 == 0)
    1154:	ce 01       	movw	r24, r28
    1156:	60 e1       	ldi	r22, 0x10	; 16
    1158:	77 e2       	ldi	r23, 0x27	; 39
    115a:	0e 94 29 1d 	call	0x3a52	; 0x3a52 <__divmodhi4>
    115e:	89 2b       	or	r24, r25
    1160:	41 f4       	brne	.+16     	; 0x1172 <Spin+0x5e>
		{
			myComs->Update(myComs);
    1162:	f9 01       	movw	r30, r18
    1164:	ef 58       	subi	r30, 0x8F	; 143
    1166:	ff 4f       	sbci	r31, 0xFF	; 255
    1168:	01 90       	ld	r0, Z+
    116a:	f0 81       	ld	r31, Z
    116c:	e0 2d       	mov	r30, r0
    116e:	c9 01       	movw	r24, r18
    1170:	09 95       	icall
	for(int i = 0;i<=255;i++){
		set_motors(i,0-i);
		delay(2);
	}
	int count = 0;
	while(myComs->EmergencyStop == 2){
    1172:	20 91 08 02 	lds	r18, 0x0208	; 0x800208 <myComs>
    1176:	30 91 09 02 	lds	r19, 0x0209	; 0x800209 <myComs+0x1>
    117a:	f9 01       	movw	r30, r18
    117c:	e5 59       	subi	r30, 0x95	; 149
    117e:	ff 4f       	sbci	r31, 0xFF	; 255
    1180:	80 81       	ld	r24, Z
    1182:	82 30       	cpi	r24, 0x02	; 2
    1184:	31 f3       	breq	.-52     	; 0x1152 <Spin+0x3e>
		if(count % 10000 == 0)
		{
			myComs->Update(myComs);
		}
	}
	set_motors(0,0);
    1186:	60 e0       	ldi	r22, 0x00	; 0
    1188:	70 e0       	ldi	r23, 0x00	; 0
    118a:	80 e0       	ldi	r24, 0x00	; 0
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <set_motors>
    1192:	df 91       	pop	r29
    1194:	cf 91       	pop	r28
    1196:	08 95       	ret

00001198 <parcoursSearch>:
char route[20] = "_"; 
char routeBack[20];
int routea = 1;

int parcoursSearch(Communications *communications) // go to parcour with left hand rule
{
    1198:	cf 93       	push	r28
    119a:	df 93       	push	r29
    119c:	00 d0       	rcall	.+0      	; 0x119e <parcoursSearch+0x6>
    119e:	cd b7       	in	r28, 0x3d	; 61
    11a0:	de b7       	in	r29, 0x3e	; 62
	char richting;
	while(1) 
	{
		
		updateDisplay(0, batteryPercentage(), mazeSolver);
    11a2:	0e 94 ff 02 	call	0x5fe	; 0x5fe <batteryPercentage>
    11a6:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <__fixsfsi>
    11aa:	41 e0       	ldi	r20, 0x01	; 1
    11ac:	80 e0       	ldi	r24, 0x00	; 0
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	0e 94 21 03 	call	0x642	; 0x642 <updateDisplay>
		situatie = lineType();		
    11b4:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <lineType>
    11b8:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <situatie>
		switch (situatie) 
    11bc:	90 e0       	ldi	r25, 0x00	; 0
    11be:	89 30       	cpi	r24, 0x09	; 9
    11c0:	91 05       	cpc	r25, r1
    11c2:	08 f0       	brcs	.+2      	; 0x11c6 <parcoursSearch+0x2e>
    11c4:	41 c0       	rjmp	.+130    	; 0x1248 <parcoursSearch+0xb0>
    11c6:	fc 01       	movw	r30, r24
    11c8:	ec 5c       	subi	r30, 0xCC	; 204
    11ca:	ff 4f       	sbci	r31, 0xFF	; 255
    11cc:	0c 94 7e 1d 	jmp	0x3afc	; 0x3afc <__tablejump2__>
		{
			case Straight:
				motorControl('S');
    11d0:	83 e5       	ldi	r24, 0x53	; 83
    11d2:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
				break;
    11d6:	38 c0       	rjmp	.+112    	; 0x1248 <parcoursSearch+0xb0>
					
			case Line_end:
				motorControl('T');
    11d8:	84 e5       	ldi	r24, 0x54	; 84
    11da:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
				richting = 'T';
    11de:	84 e5       	ldi	r24, 0x54	; 84
    11e0:	89 83       	std	Y+1, r24	; 0x01
				strncat(route, &richting, 1);
    11e2:	41 e0       	ldi	r20, 0x01	; 1
    11e4:	50 e0       	ldi	r21, 0x00	; 0
    11e6:	be 01       	movw	r22, r28
    11e8:	6f 5f       	subi	r22, 0xFF	; 255
    11ea:	7f 4f       	sbci	r23, 0xFF	; 255
    11ec:	84 e1       	ldi	r24, 0x14	; 20
    11ee:	91 e0       	ldi	r25, 0x01	; 1
    11f0:	0e 94 fe 1e 	call	0x3dfc	; 0x3dfc <strncat>
				break;
    11f4:	29 c0       	rjmp	.+82     	; 0x1248 <parcoursSearch+0xb0>
			case Barcode: // end of parcour
				motorControl('P');
				return 0;
			
			case Straight_right_junction:
				richting = 'S';
    11f6:	83 e5       	ldi	r24, 0x53	; 83
    11f8:	89 83       	std	Y+1, r24	; 0x01
				strncat(route, &richting, 1);
    11fa:	41 e0       	ldi	r20, 0x01	; 1
    11fc:	50 e0       	ldi	r21, 0x00	; 0
    11fe:	be 01       	movw	r22, r28
    1200:	6f 5f       	subi	r22, 0xFF	; 255
    1202:	7f 4f       	sbci	r23, 0xFF	; 255
    1204:	84 e1       	ldi	r24, 0x14	; 20
    1206:	91 e0       	ldi	r25, 0x01	; 1
    1208:	0e 94 fe 1e 	call	0x3dfc	; 0x3dfc <strncat>
				break;
    120c:	1d c0       	rjmp	.+58     	; 0x1248 <parcoursSearch+0xb0>
			
			case X_junction:
			case Left_corner:
			case T_junction:
			case Straight_left_junction:
				motorControl('L');
    120e:	8c e4       	ldi	r24, 0x4C	; 76
    1210:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
				richting = 'L';
    1214:	8c e4       	ldi	r24, 0x4C	; 76
    1216:	89 83       	std	Y+1, r24	; 0x01
				strncat(route, &richting, 1);
    1218:	41 e0       	ldi	r20, 0x01	; 1
    121a:	50 e0       	ldi	r21, 0x00	; 0
    121c:	be 01       	movw	r22, r28
    121e:	6f 5f       	subi	r22, 0xFF	; 255
    1220:	7f 4f       	sbci	r23, 0xFF	; 255
    1222:	84 e1       	ldi	r24, 0x14	; 20
    1224:	91 e0       	ldi	r25, 0x01	; 1
    1226:	0e 94 fe 1e 	call	0x3dfc	; 0x3dfc <strncat>
				break;
    122a:	0e c0       	rjmp	.+28     	; 0x1248 <parcoursSearch+0xb0>
			
			case Right_corner:
				motorControl('R');
    122c:	82 e5       	ldi	r24, 0x52	; 82
    122e:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
				richting = 'R';
    1232:	82 e5       	ldi	r24, 0x52	; 82
    1234:	89 83       	std	Y+1, r24	; 0x01
				strncat(route, &richting, 1);
    1236:	41 e0       	ldi	r20, 0x01	; 1
    1238:	50 e0       	ldi	r21, 0x00	; 0
    123a:	be 01       	movw	r22, r28
    123c:	6f 5f       	subi	r22, 0xFF	; 255
    123e:	7f 4f       	sbci	r23, 0xFF	; 255
    1240:	84 e1       	ldi	r24, 0x14	; 20
    1242:	91 e0       	ldi	r25, 0x01	; 1
    1244:	0e 94 fe 1e 	call	0x3dfc	; 0x3dfc <strncat>
		print_character(route[i]);
		}*/
		
		////// find shortest route
		char richting;	
		if (route[strlen(route)-2] == 'T') 
    1248:	e4 e1       	ldi	r30, 0x14	; 20
    124a:	f1 e0       	ldi	r31, 0x01	; 1
    124c:	01 90       	ld	r0, Z+
    124e:	00 20       	and	r0, r0
    1250:	e9 f7       	brne	.-6      	; 0x124c <parcoursSearch+0xb4>
    1252:	31 97       	sbiw	r30, 0x01	; 1
    1254:	e4 51       	subi	r30, 0x14	; 20
    1256:	f1 40       	sbci	r31, 0x01	; 1
    1258:	df 01       	movw	r26, r30
    125a:	ae 5e       	subi	r26, 0xEE	; 238
    125c:	be 4f       	sbci	r27, 0xFE	; 254
    125e:	8c 91       	ld	r24, X
    1260:	84 35       	cpi	r24, 0x54	; 84
    1262:	09 f0       	breq	.+2      	; 0x1266 <parcoursSearch+0xce>
    1264:	9e cf       	rjmp	.-196    	; 0x11a2 <parcoursSearch+0xa>
		{
			char char_1 = route[strlen(route)-3];
    1266:	df 01       	movw	r26, r30
    1268:	af 5e       	subi	r26, 0xEF	; 239
    126a:	be 4f       	sbci	r27, 0xFE	; 254
    126c:	8c 91       	ld	r24, X
			char char_2 = route[strlen(route)-1];
    126e:	ed 5e       	subi	r30, 0xED	; 237
    1270:	fe 4f       	sbci	r31, 0xFE	; 254
    1272:	90 81       	ld	r25, Z

			if (char_1 == 'L' && char_2 == 'L') 
    1274:	8c 34       	cpi	r24, 0x4C	; 76
    1276:	29 f4       	brne	.+10     	; 0x1282 <parcoursSearch+0xea>
    1278:	9c 34       	cpi	r25, 0x4C	; 76
    127a:	19 f4       	brne	.+6      	; 0x1282 <parcoursSearch+0xea>
			{
				richting = 'S';
    127c:	83 e5       	ldi	r24, 0x53	; 83
    127e:	8a 83       	std	Y+2, r24	; 0x02
    1280:	1b c0       	rjmp	.+54     	; 0x12b8 <parcoursSearch+0x120>
			}
			else if (char_1 == 'S' && char_2 == 'L')
    1282:	83 35       	cpi	r24, 0x53	; 83
    1284:	29 f4       	brne	.+10     	; 0x1290 <parcoursSearch+0xf8>
    1286:	9c 34       	cpi	r25, 0x4C	; 76
    1288:	19 f4       	brne	.+6      	; 0x1290 <parcoursSearch+0xf8>
			{
				richting = 'R';
    128a:	82 e5       	ldi	r24, 0x52	; 82
    128c:	8a 83       	std	Y+2, r24	; 0x02
    128e:	14 c0       	rjmp	.+40     	; 0x12b8 <parcoursSearch+0x120>
			}
			else if (char_1 == 'R' && char_2 == 'L')
    1290:	82 35       	cpi	r24, 0x52	; 82
    1292:	29 f4       	brne	.+10     	; 0x129e <parcoursSearch+0x106>
    1294:	9c 34       	cpi	r25, 0x4C	; 76
    1296:	19 f4       	brne	.+6      	; 0x129e <parcoursSearch+0x106>
			{
				richting = 'T';
    1298:	84 e5       	ldi	r24, 0x54	; 84
    129a:	8a 83       	std	Y+2, r24	; 0x02
    129c:	0d c0       	rjmp	.+26     	; 0x12b8 <parcoursSearch+0x120>
			}
			else if (char_1 == 'L' && char_2 == 'R')
    129e:	8c 34       	cpi	r24, 0x4C	; 76
    12a0:	29 f4       	brne	.+10     	; 0x12ac <parcoursSearch+0x114>
    12a2:	92 35       	cpi	r25, 0x52	; 82
    12a4:	19 f4       	brne	.+6      	; 0x12ac <parcoursSearch+0x114>
			{
				richting = 'T';
    12a6:	84 e5       	ldi	r24, 0x54	; 84
    12a8:	8a 83       	std	Y+2, r24	; 0x02
    12aa:	06 c0       	rjmp	.+12     	; 0x12b8 <parcoursSearch+0x120>
			}
			else if (char_1 == 'L' && char_2 == 'S')
    12ac:	8c 34       	cpi	r24, 0x4C	; 76
    12ae:	21 f4       	brne	.+8      	; 0x12b8 <parcoursSearch+0x120>
    12b0:	93 35       	cpi	r25, 0x53	; 83
    12b2:	11 f4       	brne	.+4      	; 0x12b8 <parcoursSearch+0x120>
			{
				richting = 'R';
    12b4:	82 e5       	ldi	r24, 0x52	; 82
    12b6:	8a 83       	std	Y+2, r24	; 0x02
			}
			route[strlen(route)-3] = '\0';
    12b8:	e4 e1       	ldi	r30, 0x14	; 20
    12ba:	f1 e0       	ldi	r31, 0x01	; 1
    12bc:	01 90       	ld	r0, Z+
    12be:	00 20       	and	r0, r0
    12c0:	e9 f7       	brne	.-6      	; 0x12bc <parcoursSearch+0x124>
    12c2:	34 97       	sbiw	r30, 0x04	; 4
    12c4:	10 82       	st	Z, r1
			strncat(route, &richting, 1);
    12c6:	41 e0       	ldi	r20, 0x01	; 1
    12c8:	50 e0       	ldi	r21, 0x00	; 0
    12ca:	be 01       	movw	r22, r28
    12cc:	6e 5f       	subi	r22, 0xFE	; 254
    12ce:	7f 4f       	sbci	r23, 0xFF	; 255
    12d0:	84 e1       	ldi	r24, 0x14	; 20
    12d2:	91 e0       	ldi	r25, 0x01	; 1
    12d4:	0e 94 fe 1e 	call	0x3dfc	; 0x3dfc <strncat>
		}
	}
    12d8:	64 cf       	rjmp	.-312    	; 0x11a2 <parcoursSearch+0xa>
				richting = 'T';
				strncat(route, &richting, 1);
				break;
					
			case Barcode: // end of parcour
				motorControl('P');
    12da:	80 e5       	ldi	r24, 0x50	; 80
    12dc:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
			strncat(route, &richting, 1);
		}
	}
	routea = 0;	
	return 0;
}
    12e0:	80 e0       	ldi	r24, 0x00	; 0
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	0f 90       	pop	r0
    12e6:	0f 90       	pop	r0
    12e8:	df 91       	pop	r29
    12ea:	cf 91       	pop	r28
    12ec:	08 95       	ret

000012ee <parcoursRun>:

// run shortest route
int parcoursRun(char way, Communications *communications) 
{
    12ee:	ef 92       	push	r14
    12f0:	ff 92       	push	r15
    12f2:	1f 93       	push	r17
    12f4:	cf 93       	push	r28
    12f6:	df 93       	push	r29
    12f8:	18 2f       	mov	r17, r24
	char richting;
	for (int i = 0; i < strlen(route); i++) 
    12fa:	c0 e0       	ldi	r28, 0x00	; 0
    12fc:	d0 e0       	ldi	r29, 0x00	; 0
    12fe:	38 c0       	rjmp	.+112    	; 0x1370 <parcoursRun+0x82>
	{
		updateDisplay(0, batteryPercentage(), mazeSolver);
    1300:	0e 94 ff 02 	call	0x5fe	; 0x5fe <batteryPercentage>
    1304:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <__fixsfsi>
    1308:	41 e0       	ldi	r20, 0x01	; 1
    130a:	80 e0       	ldi	r24, 0x00	; 0
    130c:	90 e0       	ldi	r25, 0x00	; 0
    130e:	0e 94 21 03 	call	0x642	; 0x642 <updateDisplay>
		while (lineType() == Straight)
    1312:	03 c0       	rjmp	.+6      	; 0x131a <parcoursRun+0x2c>
		{
			motorControl('S');
    1314:	83 e5       	ldi	r24, 0x53	; 83
    1316:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
{
	char richting;
	for (int i = 0; i < strlen(route); i++) 
	{
		updateDisplay(0, batteryPercentage(), mazeSolver);
		while (lineType() == Straight)
    131a:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <lineType>
    131e:	88 23       	and	r24, r24
    1320:	c9 f3       	breq	.-14     	; 0x1314 <parcoursRun+0x26>
		{
			motorControl('S');
		}
		play_from_program_space(Beep);
    1322:	84 e8       	ldi	r24, 0x84	; 132
    1324:	90 e0       	ldi	r25, 0x00	; 0
    1326:	0e 94 15 13 	call	0x262a	; 0x262a <play_from_program_space>
		if (way == 'T') {
    132a:	14 35       	cpi	r17, 0x54	; 84
    132c:	39 f4       	brne	.+14     	; 0x133c <parcoursRun+0x4e>
			motorControl(route[i]);
    132e:	fe 01       	movw	r30, r28
    1330:	ec 5e       	subi	r30, 0xEC	; 236
    1332:	fe 4f       	sbci	r31, 0xFE	; 254
    1334:	80 81       	ld	r24, Z
    1336:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    133a:	19 c0       	rjmp	.+50     	; 0x136e <parcoursRun+0x80>
		} 
		else if (way == 'B') 
    133c:	12 34       	cpi	r17, 0x42	; 66
    133e:	b9 f4       	brne	.+46     	; 0x136e <parcoursRun+0x80>
		{
			richting = route[strlen(route)-i-1];
    1340:	e4 e1       	ldi	r30, 0x14	; 20
    1342:	f1 e0       	ldi	r31, 0x01	; 1
    1344:	01 90       	ld	r0, Z+
    1346:	00 20       	and	r0, r0
    1348:	e9 f7       	brne	.-6      	; 0x1344 <parcoursRun+0x56>
    134a:	31 97       	sbiw	r30, 0x01	; 1
    134c:	e4 51       	subi	r30, 0x14	; 20
    134e:	f1 40       	sbci	r31, 0x01	; 1
    1350:	ee 19       	sub	r30, r14
    1352:	ff 09       	sbc	r31, r15
    1354:	ed 5e       	subi	r30, 0xED	; 237
    1356:	fe 4f       	sbci	r31, 0xFE	; 254
    1358:	80 81       	ld	r24, Z
			switch (richting)
    135a:	8c 34       	cpi	r24, 0x4C	; 76
    135c:	19 f0       	breq	.+6      	; 0x1364 <parcoursRun+0x76>
    135e:	82 35       	cpi	r24, 0x52	; 82
    1360:	19 f0       	breq	.+6      	; 0x1368 <parcoursRun+0x7a>
    1362:	03 c0       	rjmp	.+6      	; 0x136a <parcoursRun+0x7c>
			{
				case 'R':
					richting = 'L';
					break;
				case 'L':
					richting = 'R';
    1364:	82 e5       	ldi	r24, 0x52	; 82
					break;
    1366:	01 c0       	rjmp	.+2      	; 0x136a <parcoursRun+0x7c>
		{
			richting = route[strlen(route)-i-1];
			switch (richting)
			{
				case 'R':
					richting = 'L';
    1368:	8c e4       	ldi	r24, 0x4C	; 76
					break;
				case 'L':
					richting = 'R';
					break;
			}
			motorControl(richting);
    136a:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>

// run shortest route
int parcoursRun(char way, Communications *communications) 
{
	char richting;
	for (int i = 0; i < strlen(route); i++) 
    136e:	21 96       	adiw	r28, 0x01	; 1
    1370:	e4 e1       	ldi	r30, 0x14	; 20
    1372:	f1 e0       	ldi	r31, 0x01	; 1
    1374:	01 90       	ld	r0, Z+
    1376:	00 20       	and	r0, r0
    1378:	e9 f7       	brne	.-6      	; 0x1374 <parcoursRun+0x86>
    137a:	31 97       	sbiw	r30, 0x01	; 1
    137c:	e4 51       	subi	r30, 0x14	; 20
    137e:	f1 40       	sbci	r31, 0x01	; 1
    1380:	7e 01       	movw	r14, r28
    1382:	ce 17       	cp	r28, r30
    1384:	df 07       	cpc	r29, r31
    1386:	08 f4       	brcc	.+2      	; 0x138a <parcoursRun+0x9c>
    1388:	bb cf       	rjmp	.-138    	; 0x1300 <parcoursRun+0x12>
			}
			motorControl(richting);
		}
	}
	return 0;
}
    138a:	80 e0       	ldi	r24, 0x00	; 0
    138c:	90 e0       	ldi	r25, 0x00	; 0
    138e:	df 91       	pop	r29
    1390:	cf 91       	pop	r28
    1392:	1f 91       	pop	r17
    1394:	ff 90       	pop	r15
    1396:	ef 90       	pop	r14
    1398:	08 95       	ret

0000139a <parcours>:

int parcours(char way, Communications *communications) 
{
	if (route[0] == '_')// if it is the first time -> parcoursSearch
    139a:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <route>
    139e:	9f 35       	cpi	r25, 0x5F	; 95
    13a0:	59 f4       	brne	.+22     	; 0x13b8 <parcours+0x1e>
	{		
		memset(route,0,sizeof route);
    13a2:	84 e1       	ldi	r24, 0x14	; 20
    13a4:	e4 e1       	ldi	r30, 0x14	; 20
    13a6:	f1 e0       	ldi	r31, 0x01	; 1
    13a8:	df 01       	movw	r26, r30
    13aa:	1d 92       	st	X+, r1
    13ac:	8a 95       	dec	r24
    13ae:	e9 f7       	brne	.-6      	; 0x13aa <parcours+0x10>
		parcoursSearch(communications);
    13b0:	cb 01       	movw	r24, r22
    13b2:	0e 94 cc 08 	call	0x1198	; 0x1198 <parcoursSearch>
    13b6:	02 c0       	rjmp	.+4      	; 0x13bc <parcours+0x22>
	} 
	else						// if it isn't the fist time -> run shortest route
	{
		parcoursRun(way, communications); // run shortest route
    13b8:	0e 94 77 09 	call	0x12ee	; 0x12ee <parcoursRun>
	//	parcoursSearch(communications);
	} 
	return 0;
    13bc:	80 e0       	ldi	r24, 0x00	; 0
    13be:	90 e0       	ldi	r25, 0x00	; 0
    13c0:	08 95       	ret

000013c2 <swap>:
    13c2:	fc 01       	movw	r30, r24
    13c4:	20 81       	ld	r18, Z
    13c6:	fb 01       	movw	r30, r22
    13c8:	30 81       	ld	r19, Z
    13ca:	fc 01       	movw	r30, r24
    13cc:	30 83       	st	Z, r19
    13ce:	fb 01       	movw	r30, r22
    13d0:	20 83       	st	Z, r18
    13d2:	08 95       	ret

000013d4 <bubbleSort>:
    13d4:	8f 92       	push	r8
    13d6:	9f 92       	push	r9
    13d8:	af 92       	push	r10
    13da:	bf 92       	push	r11
    13dc:	cf 92       	push	r12
    13de:	df 92       	push	r13
    13e0:	ef 92       	push	r14
    13e2:	ff 92       	push	r15
    13e4:	0f 93       	push	r16
    13e6:	1f 93       	push	r17
    13e8:	cf 93       	push	r28
    13ea:	df 93       	push	r29
    13ec:	8c 01       	movw	r16, r24
    13ee:	5b 01       	movw	r10, r22
    13f0:	6a 01       	movw	r12, r20
    13f2:	e1 2c       	mov	r14, r1
    13f4:	f1 2c       	mov	r15, r1
    13f6:	28 c0       	rjmp	.+80     	; 0x1448 <bubbleSort+0x74>
    13f8:	f8 01       	movw	r30, r16
    13fa:	ec 0f       	add	r30, r28
    13fc:	fd 1f       	adc	r31, r29
    13fe:	90 81       	ld	r25, Z
    1400:	4e 01       	movw	r8, r28
    1402:	8f ef       	ldi	r24, 0xFF	; 255
    1404:	88 1a       	sub	r8, r24
    1406:	98 0a       	sbc	r9, r24
    1408:	d8 01       	movw	r26, r16
    140a:	a8 0d       	add	r26, r8
    140c:	b9 1d       	adc	r27, r9
    140e:	8c 91       	ld	r24, X
    1410:	89 17       	cp	r24, r25
    1412:	60 f4       	brcc	.+24     	; 0x142c <bubbleSort+0x58>
    1414:	bd 01       	movw	r22, r26
    1416:	cf 01       	movw	r24, r30
    1418:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <swap>
    141c:	b5 01       	movw	r22, r10
    141e:	68 0d       	add	r22, r8
    1420:	79 1d       	adc	r23, r9
    1422:	c5 01       	movw	r24, r10
    1424:	8c 0f       	add	r24, r28
    1426:	9d 1f       	adc	r25, r29
    1428:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <swap>
    142c:	21 96       	adiw	r28, 0x01	; 1
    142e:	02 c0       	rjmp	.+4      	; 0x1434 <bubbleSort+0x60>
    1430:	c0 e0       	ldi	r28, 0x00	; 0
    1432:	d0 e0       	ldi	r29, 0x00	; 0
    1434:	c6 01       	movw	r24, r12
    1436:	8e 19       	sub	r24, r14
    1438:	9f 09       	sbc	r25, r15
    143a:	01 97       	sbiw	r24, 0x01	; 1
    143c:	c8 17       	cp	r28, r24
    143e:	d9 07       	cpc	r29, r25
    1440:	dc f2       	brlt	.-74     	; 0x13f8 <bubbleSort+0x24>
    1442:	8f ef       	ldi	r24, 0xFF	; 255
    1444:	e8 1a       	sub	r14, r24
    1446:	f8 0a       	sbc	r15, r24
    1448:	c6 01       	movw	r24, r12
    144a:	01 97       	sbiw	r24, 0x01	; 1
    144c:	e8 16       	cp	r14, r24
    144e:	f9 06       	cpc	r15, r25
    1450:	7c f3       	brlt	.-34     	; 0x1430 <bubbleSort+0x5c>
    1452:	df 91       	pop	r29
    1454:	cf 91       	pop	r28
    1456:	1f 91       	pop	r17
    1458:	0f 91       	pop	r16
    145a:	ff 90       	pop	r15
    145c:	ef 90       	pop	r14
    145e:	df 90       	pop	r13
    1460:	cf 90       	pop	r12
    1462:	bf 90       	pop	r11
    1464:	af 90       	pop	r10
    1466:	9f 90       	pop	r9
    1468:	8f 90       	pop	r8
    146a:	08 95       	ret

0000146c <drive>:
    146c:	cf 92       	push	r12
    146e:	df 92       	push	r13
    1470:	ef 92       	push	r14
    1472:	ff 92       	push	r15
    1474:	0f 93       	push	r16
    1476:	1f 93       	push	r17
    1478:	cf 93       	push	r28
    147a:	df 93       	push	r29
    147c:	6c 01       	movw	r12, r24
    147e:	7a 01       	movw	r14, r20
    1480:	83 e5       	ldi	r24, 0x53	; 83
    1482:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    1486:	00 e0       	ldi	r16, 0x00	; 0
    1488:	10 e0       	ldi	r17, 0x00	; 0
    148a:	c1 e0       	ldi	r28, 0x01	; 1
    148c:	d0 e0       	ldi	r29, 0x00	; 0
    148e:	22 c0       	rjmp	.+68     	; 0x14d4 <drive+0x68>
    1490:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <lineType>
    1494:	81 30       	cpi	r24, 0x01	; 1
    1496:	49 f0       	breq	.+18     	; 0x14aa <drive+0x3e>
    1498:	20 f0       	brcs	.+8      	; 0x14a2 <drive+0x36>
    149a:	83 50       	subi	r24, 0x03	; 3
    149c:	86 30       	cpi	r24, 0x06	; 6
    149e:	d0 f4       	brcc	.+52     	; 0x14d4 <drive+0x68>
    14a0:	04 c0       	rjmp	.+8      	; 0x14aa <drive+0x3e>
    14a2:	83 e5       	ldi	r24, 0x53	; 83
    14a4:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    14a8:	15 c0       	rjmp	.+42     	; 0x14d4 <drive+0x68>
    14aa:	0f 5f       	subi	r16, 0xFF	; 255
    14ac:	1f 4f       	sbci	r17, 0xFF	; 255
    14ae:	83 e5       	ldi	r24, 0x53	; 83
    14b0:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    14b4:	0c 15       	cp	r16, r12
    14b6:	1d 05       	cpc	r17, r13
    14b8:	29 f4       	brne	.+10     	; 0x14c4 <drive+0x58>
    14ba:	80 e5       	ldi	r24, 0x50	; 80
    14bc:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    14c0:	c0 e0       	ldi	r28, 0x00	; 0
    14c2:	d0 e0       	ldi	r29, 0x00	; 0
    14c4:	f7 01       	movw	r30, r14
    14c6:	ef 58       	subi	r30, 0x8F	; 143
    14c8:	ff 4f       	sbci	r31, 0xFF	; 255
    14ca:	01 90       	ld	r0, Z+
    14cc:	f0 81       	ld	r31, Z
    14ce:	e0 2d       	mov	r30, r0
    14d0:	c7 01       	movw	r24, r14
    14d2:	09 95       	icall
    14d4:	20 97       	sbiw	r28, 0x00	; 0
    14d6:	e1 f6       	brne	.-72     	; 0x1490 <drive+0x24>
    14d8:	df 91       	pop	r29
    14da:	cf 91       	pop	r28
    14dc:	1f 91       	pop	r17
    14de:	0f 91       	pop	r16
    14e0:	ff 90       	pop	r15
    14e2:	ef 90       	pop	r14
    14e4:	df 90       	pop	r13
    14e6:	cf 90       	pop	r12
    14e8:	08 95       	ret

000014ea <waitForTurn>:
    14ea:	cf 93       	push	r28
    14ec:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <lineType>
    14f0:	c8 2f       	mov	r28, r24
    14f2:	8f e0       	ldi	r24, 0x0F	; 15
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
    14fa:	03 c0       	rjmp	.+6      	; 0x1502 <waitForTurn+0x18>
    14fc:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <lineType>
    1500:	c8 2f       	mov	r28, r24
    1502:	c1 11       	cpse	r28, r1
    1504:	fb cf       	rjmp	.-10     	; 0x14fc <waitForTurn+0x12>
    1506:	8e e4       	ldi	r24, 0x4E	; 78
    1508:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    150c:	cf 91       	pop	r28
    150e:	08 95       	ret

00001510 <turnRobot>:
    1510:	ef 92       	push	r14
    1512:	ff 92       	push	r15
    1514:	0f 93       	push	r16
    1516:	1f 93       	push	r17
    1518:	cf 93       	push	r28
    151a:	c8 2f       	mov	r28, r24
    151c:	8b 01       	movw	r16, r22
    151e:	ee 24       	eor	r14, r14
    1520:	e3 94       	inc	r14
    1522:	f1 2c       	mov	r15, r1
    1524:	a6 c0       	rjmp	.+332    	; 0x1672 <turnRobot+0x162>
    1526:	f8 01       	movw	r30, r16
    1528:	84 81       	ldd	r24, Z+4	; 0x04
    152a:	8e 34       	cpi	r24, 0x4E	; 78
    152c:	59 f0       	breq	.+22     	; 0x1544 <turnRobot+0x34>
    152e:	18 f4       	brcc	.+6      	; 0x1536 <turnRobot+0x26>
    1530:	85 34       	cpi	r24, 0x45	; 69
    1532:	69 f1       	breq	.+90     	; 0x158e <turnRobot+0x7e>
    1534:	98 c0       	rjmp	.+304    	; 0x1666 <turnRobot+0x156>
    1536:	83 35       	cpi	r24, 0x53	; 83
    1538:	09 f4       	brne	.+2      	; 0x153c <turnRobot+0x2c>
    153a:	4e c0       	rjmp	.+156    	; 0x15d8 <turnRobot+0xc8>
    153c:	87 35       	cpi	r24, 0x57	; 87
    153e:	09 f4       	brne	.+2      	; 0x1542 <turnRobot+0x32>
    1540:	6f c0       	rjmp	.+222    	; 0x1620 <turnRobot+0x110>
    1542:	91 c0       	rjmp	.+290    	; 0x1666 <turnRobot+0x156>
    1544:	c5 34       	cpi	r28, 0x45	; 69
    1546:	49 f4       	brne	.+18     	; 0x155a <turnRobot+0x4a>
    1548:	82 e5       	ldi	r24, 0x52	; 82
    154a:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    154e:	0e 94 75 0a 	call	0x14ea	; 0x14ea <waitForTurn>
    1552:	85 e4       	ldi	r24, 0x45	; 69
    1554:	f8 01       	movw	r30, r16
    1556:	84 83       	std	Z+4, r24	; 0x04
    1558:	86 c0       	rjmp	.+268    	; 0x1666 <turnRobot+0x156>
    155a:	c7 35       	cpi	r28, 0x57	; 87
    155c:	49 f4       	brne	.+18     	; 0x1570 <turnRobot+0x60>
    155e:	8c e4       	ldi	r24, 0x4C	; 76
    1560:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    1564:	0e 94 75 0a 	call	0x14ea	; 0x14ea <waitForTurn>
    1568:	87 e5       	ldi	r24, 0x57	; 87
    156a:	f8 01       	movw	r30, r16
    156c:	84 83       	std	Z+4, r24	; 0x04
    156e:	7b c0       	rjmp	.+246    	; 0x1666 <turnRobot+0x156>
    1570:	c3 35       	cpi	r28, 0x53	; 83
    1572:	09 f0       	breq	.+2      	; 0x1576 <turnRobot+0x66>
    1574:	78 c0       	rjmp	.+240    	; 0x1666 <turnRobot+0x156>
    1576:	8c e4       	ldi	r24, 0x4C	; 76
    1578:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    157c:	8c e4       	ldi	r24, 0x4C	; 76
    157e:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    1582:	0e 94 75 0a 	call	0x14ea	; 0x14ea <waitForTurn>
    1586:	83 e5       	ldi	r24, 0x53	; 83
    1588:	f8 01       	movw	r30, r16
    158a:	84 83       	std	Z+4, r24	; 0x04
    158c:	6c c0       	rjmp	.+216    	; 0x1666 <turnRobot+0x156>
    158e:	c3 35       	cpi	r28, 0x53	; 83
    1590:	49 f4       	brne	.+18     	; 0x15a4 <turnRobot+0x94>
    1592:	82 e5       	ldi	r24, 0x52	; 82
    1594:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    1598:	0e 94 75 0a 	call	0x14ea	; 0x14ea <waitForTurn>
    159c:	83 e5       	ldi	r24, 0x53	; 83
    159e:	f8 01       	movw	r30, r16
    15a0:	84 83       	std	Z+4, r24	; 0x04
    15a2:	61 c0       	rjmp	.+194    	; 0x1666 <turnRobot+0x156>
    15a4:	c7 35       	cpi	r28, 0x57	; 87
    15a6:	49 f4       	brne	.+18     	; 0x15ba <turnRobot+0xaa>
    15a8:	8c e4       	ldi	r24, 0x4C	; 76
    15aa:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    15ae:	0e 94 75 0a 	call	0x14ea	; 0x14ea <waitForTurn>
    15b2:	87 e5       	ldi	r24, 0x57	; 87
    15b4:	f8 01       	movw	r30, r16
    15b6:	84 83       	std	Z+4, r24	; 0x04
    15b8:	56 c0       	rjmp	.+172    	; 0x1666 <turnRobot+0x156>
    15ba:	c3 35       	cpi	r28, 0x53	; 83
    15bc:	09 f0       	breq	.+2      	; 0x15c0 <turnRobot+0xb0>
    15be:	53 c0       	rjmp	.+166    	; 0x1666 <turnRobot+0x156>
    15c0:	8c e4       	ldi	r24, 0x4C	; 76
    15c2:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    15c6:	8c e4       	ldi	r24, 0x4C	; 76
    15c8:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    15cc:	0e 94 75 0a 	call	0x14ea	; 0x14ea <waitForTurn>
    15d0:	83 e5       	ldi	r24, 0x53	; 83
    15d2:	f8 01       	movw	r30, r16
    15d4:	84 83       	std	Z+4, r24	; 0x04
    15d6:	47 c0       	rjmp	.+142    	; 0x1666 <turnRobot+0x156>
    15d8:	c7 35       	cpi	r28, 0x57	; 87
    15da:	49 f4       	brne	.+18     	; 0x15ee <turnRobot+0xde>
    15dc:	82 e5       	ldi	r24, 0x52	; 82
    15de:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    15e2:	0e 94 75 0a 	call	0x14ea	; 0x14ea <waitForTurn>
    15e6:	87 e5       	ldi	r24, 0x57	; 87
    15e8:	f8 01       	movw	r30, r16
    15ea:	84 83       	std	Z+4, r24	; 0x04
    15ec:	3c c0       	rjmp	.+120    	; 0x1666 <turnRobot+0x156>
    15ee:	c5 34       	cpi	r28, 0x45	; 69
    15f0:	49 f4       	brne	.+18     	; 0x1604 <turnRobot+0xf4>
    15f2:	8c e4       	ldi	r24, 0x4C	; 76
    15f4:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    15f8:	0e 94 75 0a 	call	0x14ea	; 0x14ea <waitForTurn>
    15fc:	85 e4       	ldi	r24, 0x45	; 69
    15fe:	f8 01       	movw	r30, r16
    1600:	84 83       	std	Z+4, r24	; 0x04
    1602:	31 c0       	rjmp	.+98     	; 0x1666 <turnRobot+0x156>
    1604:	ce 34       	cpi	r28, 0x4E	; 78
    1606:	79 f5       	brne	.+94     	; 0x1666 <turnRobot+0x156>
    1608:	8c e4       	ldi	r24, 0x4C	; 76
    160a:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    160e:	8c e4       	ldi	r24, 0x4C	; 76
    1610:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    1614:	0e 94 75 0a 	call	0x14ea	; 0x14ea <waitForTurn>
    1618:	8e e4       	ldi	r24, 0x4E	; 78
    161a:	f8 01       	movw	r30, r16
    161c:	84 83       	std	Z+4, r24	; 0x04
    161e:	23 c0       	rjmp	.+70     	; 0x1666 <turnRobot+0x156>
    1620:	ce 34       	cpi	r28, 0x4E	; 78
    1622:	49 f4       	brne	.+18     	; 0x1636 <turnRobot+0x126>
    1624:	82 e5       	ldi	r24, 0x52	; 82
    1626:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    162a:	0e 94 75 0a 	call	0x14ea	; 0x14ea <waitForTurn>
    162e:	8e e4       	ldi	r24, 0x4E	; 78
    1630:	f8 01       	movw	r30, r16
    1632:	84 83       	std	Z+4, r24	; 0x04
    1634:	18 c0       	rjmp	.+48     	; 0x1666 <turnRobot+0x156>
    1636:	c3 35       	cpi	r28, 0x53	; 83
    1638:	49 f4       	brne	.+18     	; 0x164c <turnRobot+0x13c>
    163a:	8c e4       	ldi	r24, 0x4C	; 76
    163c:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    1640:	0e 94 75 0a 	call	0x14ea	; 0x14ea <waitForTurn>
    1644:	83 e5       	ldi	r24, 0x53	; 83
    1646:	f8 01       	movw	r30, r16
    1648:	84 83       	std	Z+4, r24	; 0x04
    164a:	0d c0       	rjmp	.+26     	; 0x1666 <turnRobot+0x156>
    164c:	c5 34       	cpi	r28, 0x45	; 69
    164e:	59 f4       	brne	.+22     	; 0x1666 <turnRobot+0x156>
    1650:	8c e4       	ldi	r24, 0x4C	; 76
    1652:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    1656:	8c e4       	ldi	r24, 0x4C	; 76
    1658:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    165c:	0e 94 75 0a 	call	0x14ea	; 0x14ea <waitForTurn>
    1660:	85 e4       	ldi	r24, 0x45	; 69
    1662:	f8 01       	movw	r30, r16
    1664:	84 83       	std	Z+4, r24	; 0x04
    1666:	f8 01       	movw	r30, r16
    1668:	84 81       	ldd	r24, Z+4	; 0x04
    166a:	c8 13       	cpse	r28, r24
    166c:	02 c0       	rjmp	.+4      	; 0x1672 <turnRobot+0x162>
    166e:	e1 2c       	mov	r14, r1
    1670:	f1 2c       	mov	r15, r1
    1672:	f1 e0       	ldi	r31, 0x01	; 1
    1674:	ef 16       	cp	r14, r31
    1676:	f1 04       	cpc	r15, r1
    1678:	09 f4       	brne	.+2      	; 0x167c <turnRobot+0x16c>
    167a:	55 cf       	rjmp	.-342    	; 0x1526 <turnRobot+0x16>
    167c:	cf 91       	pop	r28
    167e:	1f 91       	pop	r17
    1680:	0f 91       	pop	r16
    1682:	ff 90       	pop	r15
    1684:	ef 90       	pop	r14
    1686:	08 95       	ret

00001688 <moveX>:
    1688:	ef 92       	push	r14
    168a:	ff 92       	push	r15
    168c:	0f 93       	push	r16
    168e:	1f 93       	push	r17
    1690:	cf 93       	push	r28
    1692:	df 93       	push	r29
    1694:	fb 01       	movw	r30, r22
    1696:	20 81       	ld	r18, Z
    1698:	31 81       	ldd	r19, Z+1	; 0x01
    169a:	28 17       	cp	r18, r24
    169c:	39 07       	cpc	r19, r25
    169e:	d9 f0       	breq	.+54     	; 0x16d6 <moveX+0x4e>
    16a0:	7a 01       	movw	r14, r20
    16a2:	eb 01       	movw	r28, r22
    16a4:	8c 01       	movw	r16, r24
    16a6:	28 17       	cp	r18, r24
    16a8:	39 07       	cpc	r19, r25
    16aa:	54 f4       	brge	.+20     	; 0x16c0 <moveX+0x38>
    16ac:	87 e5       	ldi	r24, 0x57	; 87
    16ae:	0e 94 88 0a 	call	0x1510	; 0x1510 <turnRobot>
    16b2:	88 81       	ld	r24, Y
    16b4:	99 81       	ldd	r25, Y+1	; 0x01
    16b6:	98 01       	movw	r18, r16
    16b8:	28 1b       	sub	r18, r24
    16ba:	39 0b       	sbc	r19, r25
    16bc:	c9 01       	movw	r24, r18
    16be:	07 c0       	rjmp	.+14     	; 0x16ce <moveX+0x46>
    16c0:	85 e4       	ldi	r24, 0x45	; 69
    16c2:	0e 94 88 0a 	call	0x1510	; 0x1510 <turnRobot>
    16c6:	88 81       	ld	r24, Y
    16c8:	99 81       	ldd	r25, Y+1	; 0x01
    16ca:	80 1b       	sub	r24, r16
    16cc:	91 0b       	sbc	r25, r17
    16ce:	a7 01       	movw	r20, r14
    16d0:	be 01       	movw	r22, r28
    16d2:	0e 94 36 0a 	call	0x146c	; 0x146c <drive>
    16d6:	df 91       	pop	r29
    16d8:	cf 91       	pop	r28
    16da:	1f 91       	pop	r17
    16dc:	0f 91       	pop	r16
    16de:	ff 90       	pop	r15
    16e0:	ef 90       	pop	r14
    16e2:	08 95       	ret

000016e4 <moveY>:
    16e4:	ef 92       	push	r14
    16e6:	ff 92       	push	r15
    16e8:	0f 93       	push	r16
    16ea:	1f 93       	push	r17
    16ec:	cf 93       	push	r28
    16ee:	df 93       	push	r29
    16f0:	fb 01       	movw	r30, r22
    16f2:	22 81       	ldd	r18, Z+2	; 0x02
    16f4:	33 81       	ldd	r19, Z+3	; 0x03
    16f6:	28 17       	cp	r18, r24
    16f8:	39 07       	cpc	r19, r25
    16fa:	d9 f0       	breq	.+54     	; 0x1732 <moveY+0x4e>
    16fc:	7a 01       	movw	r14, r20
    16fe:	eb 01       	movw	r28, r22
    1700:	8c 01       	movw	r16, r24
    1702:	28 17       	cp	r18, r24
    1704:	39 07       	cpc	r19, r25
    1706:	54 f4       	brge	.+20     	; 0x171c <moveY+0x38>
    1708:	8e e4       	ldi	r24, 0x4E	; 78
    170a:	0e 94 88 0a 	call	0x1510	; 0x1510 <turnRobot>
    170e:	8a 81       	ldd	r24, Y+2	; 0x02
    1710:	9b 81       	ldd	r25, Y+3	; 0x03
    1712:	98 01       	movw	r18, r16
    1714:	28 1b       	sub	r18, r24
    1716:	39 0b       	sbc	r19, r25
    1718:	c9 01       	movw	r24, r18
    171a:	07 c0       	rjmp	.+14     	; 0x172a <moveY+0x46>
    171c:	83 e5       	ldi	r24, 0x53	; 83
    171e:	0e 94 88 0a 	call	0x1510	; 0x1510 <turnRobot>
    1722:	8a 81       	ldd	r24, Y+2	; 0x02
    1724:	9b 81       	ldd	r25, Y+3	; 0x03
    1726:	80 1b       	sub	r24, r16
    1728:	91 0b       	sbc	r25, r17
    172a:	a7 01       	movw	r20, r14
    172c:	be 01       	movw	r22, r28
    172e:	0e 94 36 0a 	call	0x146c	; 0x146c <drive>
    1732:	df 91       	pop	r29
    1734:	cf 91       	pop	r28
    1736:	1f 91       	pop	r17
    1738:	0f 91       	pop	r16
    173a:	ff 90       	pop	r15
    173c:	ef 90       	pop	r14
    173e:	08 95       	ret

00001740 <warehouse>:
    1740:	2f 92       	push	r2
    1742:	3f 92       	push	r3
    1744:	4f 92       	push	r4
    1746:	5f 92       	push	r5
    1748:	6f 92       	push	r6
    174a:	7f 92       	push	r7
    174c:	8f 92       	push	r8
    174e:	9f 92       	push	r9
    1750:	af 92       	push	r10
    1752:	bf 92       	push	r11
    1754:	cf 92       	push	r12
    1756:	df 92       	push	r13
    1758:	ef 92       	push	r14
    175a:	ff 92       	push	r15
    175c:	0f 93       	push	r16
    175e:	1f 93       	push	r17
    1760:	cf 93       	push	r28
    1762:	df 93       	push	r29
    1764:	cd b7       	in	r28, 0x3d	; 61
    1766:	de b7       	in	r29, 0x3e	; 62
    1768:	e7 97       	sbiw	r28, 0x37	; 55
    176a:	0f b6       	in	r0, 0x3f	; 63
    176c:	f8 94       	cli
    176e:	de bf       	out	0x3e, r29	; 62
    1770:	0f be       	out	0x3f, r0	; 63
    1772:	cd bf       	out	0x3d, r28	; 61
    1774:	f8 2e       	mov	r15, r24
    1776:	8b 01       	movw	r16, r22
    1778:	87 e5       	ldi	r24, 0x57	; 87
    177a:	8d 83       	std	Y+5, r24	; 0x05
    177c:	1a 82       	std	Y+2, r1	; 0x02
    177e:	19 82       	std	Y+1, r1	; 0x01
    1780:	81 e0       	ldi	r24, 0x01	; 1
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	9c 83       	std	Y+4, r25	; 0x04
    1786:	8b 83       	std	Y+3, r24	; 0x03
    1788:	fb 01       	movw	r30, r22
    178a:	e2 59       	subi	r30, 0x92	; 146
    178c:	ff 4f       	sbci	r31, 0xFF	; 255
    178e:	10 82       	st	Z, r1
    1790:	31 96       	adiw	r30, 0x01	; 1
    1792:	80 83       	st	Z, r24
    1794:	80 e0       	ldi	r24, 0x00	; 0
    1796:	90 e0       	ldi	r25, 0x00	; 0
    1798:	c1 2c       	mov	r12, r1
    179a:	d1 2c       	mov	r13, r1
    179c:	0c c0       	rjmp	.+24     	; 0x17b6 <warehouse+0x76>
    179e:	f8 01       	movw	r30, r16
    17a0:	e8 0f       	add	r30, r24
    17a2:	f9 1f       	adc	r31, r25
    17a4:	ee 5a       	subi	r30, 0xAE	; 174
    17a6:	ff 4f       	sbci	r31, 0xFF	; 255
    17a8:	20 81       	ld	r18, Z
    17aa:	22 23       	and	r18, r18
    17ac:	19 f0       	breq	.+6      	; 0x17b4 <warehouse+0x74>
    17ae:	2f ef       	ldi	r18, 0xFF	; 255
    17b0:	c2 1a       	sub	r12, r18
    17b2:	d2 0a       	sbc	r13, r18
    17b4:	01 96       	adiw	r24, 0x01	; 1
    17b6:	89 31       	cpi	r24, 0x19	; 25
    17b8:	91 05       	cpc	r25, r1
    17ba:	8c f3       	brlt	.-30     	; 0x179e <warehouse+0x5e>
    17bc:	80 e0       	ldi	r24, 0x00	; 0
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	18 c0       	rjmp	.+48     	; 0x17f2 <warehouse+0xb2>
    17c2:	d8 01       	movw	r26, r16
    17c4:	a8 0f       	add	r26, r24
    17c6:	b9 1f       	adc	r27, r25
    17c8:	fd 01       	movw	r30, r26
    17ca:	ee 5a       	subi	r30, 0xAE	; 174
    17cc:	ff 4f       	sbci	r31, 0xFF	; 255
    17ce:	20 81       	ld	r18, Z
    17d0:	e6 e0       	ldi	r30, 0x06	; 6
    17d2:	f0 e0       	ldi	r31, 0x00	; 0
    17d4:	ec 0f       	add	r30, r28
    17d6:	fd 1f       	adc	r31, r29
    17d8:	e8 0f       	add	r30, r24
    17da:	f9 1f       	adc	r31, r25
    17dc:	20 83       	st	Z, r18
    17de:	d9 96       	adiw	r26, 0x39	; 57
    17e0:	2c 91       	ld	r18, X
    17e2:	ef e1       	ldi	r30, 0x1F	; 31
    17e4:	f0 e0       	ldi	r31, 0x00	; 0
    17e6:	ec 0f       	add	r30, r28
    17e8:	fd 1f       	adc	r31, r29
    17ea:	e8 0f       	add	r30, r24
    17ec:	f9 1f       	adc	r31, r25
    17ee:	20 83       	st	Z, r18
    17f0:	01 96       	adiw	r24, 0x01	; 1
    17f2:	8c 15       	cp	r24, r12
    17f4:	9d 05       	cpc	r25, r13
    17f6:	2c f3       	brlt	.-54     	; 0x17c2 <warehouse+0x82>
    17f8:	a6 01       	movw	r20, r12
    17fa:	be 01       	movw	r22, r28
    17fc:	61 5e       	subi	r22, 0xE1	; 225
    17fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1800:	ce 01       	movw	r24, r28
    1802:	06 96       	adiw	r24, 0x06	; 6
    1804:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <bubbleSort>
    1808:	ff 20       	and	r15, r15
    180a:	09 f4       	brne	.+2      	; 0x180e <warehouse+0xce>
    180c:	93 c0       	rjmp	.+294    	; 0x1934 <warehouse+0x1f4>
    180e:	a9 c0       	rjmp	.+338    	; 0x1962 <warehouse+0x222>
    1810:	b1 01       	movw	r22, r2
    1812:	03 2c       	mov	r0, r3
    1814:	00 0c       	add	r0, r0
    1816:	88 0b       	sbc	r24, r24
    1818:	99 0b       	sbc	r25, r25
    181a:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <__floatsisf>
    181e:	2b 01       	movw	r4, r22
    1820:	3c 01       	movw	r6, r24
    1822:	b6 01       	movw	r22, r12
    1824:	0d 2c       	mov	r0, r13
    1826:	00 0c       	add	r0, r0
    1828:	88 0b       	sbc	r24, r24
    182a:	99 0b       	sbc	r25, r25
    182c:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <__floatsisf>
    1830:	4b 01       	movw	r8, r22
    1832:	5c 01       	movw	r10, r24
    1834:	0f 2e       	mov	r0, r31
    1836:	f6 e0       	ldi	r31, 0x06	; 6
    1838:	ef 2e       	mov	r14, r31
    183a:	f1 2c       	mov	r15, r1
    183c:	f0 2d       	mov	r31, r0
    183e:	ec 0e       	add	r14, r28
    1840:	fd 1e       	adc	r15, r29
    1842:	e2 0c       	add	r14, r2
    1844:	f3 1c       	adc	r15, r3
    1846:	f7 01       	movw	r30, r14
    1848:	80 81       	ld	r24, Z
    184a:	a8 01       	movw	r20, r16
    184c:	be 01       	movw	r22, r28
    184e:	6f 5f       	subi	r22, 0xFF	; 255
    1850:	7f 4f       	sbci	r23, 0xFF	; 255
    1852:	90 e0       	ldi	r25, 0x00	; 0
    1854:	0e 94 44 0b 	call	0x1688	; 0x1688 <moveX>
    1858:	f7 01       	movw	r30, r14
    185a:	80 81       	ld	r24, Z
    185c:	28 2f       	mov	r18, r24
    185e:	30 e0       	ldi	r19, 0x00	; 0
    1860:	3a 83       	std	Y+2, r19	; 0x02
    1862:	29 83       	std	Y+1, r18	; 0x01
    1864:	f8 01       	movw	r30, r16
    1866:	e2 59       	subi	r30, 0x92	; 146
    1868:	ff 4f       	sbci	r31, 0xFF	; 255
    186a:	80 83       	st	Z, r24
    186c:	0f 2e       	mov	r0, r31
    186e:	ff e1       	ldi	r31, 0x1F	; 31
    1870:	ef 2e       	mov	r14, r31
    1872:	f1 2c       	mov	r15, r1
    1874:	f0 2d       	mov	r31, r0
    1876:	ec 0e       	add	r14, r28
    1878:	fd 1e       	adc	r15, r29
    187a:	e2 0c       	add	r14, r2
    187c:	f3 1c       	adc	r15, r3
    187e:	f7 01       	movw	r30, r14
    1880:	80 81       	ld	r24, Z
    1882:	a8 01       	movw	r20, r16
    1884:	be 01       	movw	r22, r28
    1886:	6f 5f       	subi	r22, 0xFF	; 255
    1888:	7f 4f       	sbci	r23, 0xFF	; 255
    188a:	90 e0       	ldi	r25, 0x00	; 0
    188c:	0e 94 72 0b 	call	0x16e4	; 0x16e4 <moveY>
    1890:	f7 01       	movw	r30, r14
    1892:	80 81       	ld	r24, Z
    1894:	28 2f       	mov	r18, r24
    1896:	30 e0       	ldi	r19, 0x00	; 0
    1898:	3c 83       	std	Y+4, r19	; 0x04
    189a:	2b 83       	std	Y+3, r18	; 0x03
    189c:	f8 01       	movw	r30, r16
    189e:	e1 59       	subi	r30, 0x91	; 145
    18a0:	ff 4f       	sbci	r31, 0xFF	; 255
    18a2:	80 83       	st	Z, r24
    18a4:	89 e8       	ldi	r24, 0x89	; 137
    18a6:	90 e0       	ldi	r25, 0x00	; 0
    18a8:	0e 94 15 13 	call	0x262a	; 0x262a <play_from_program_space>
    18ac:	88 ee       	ldi	r24, 0xE8	; 232
    18ae:	93 e0       	ldi	r25, 0x03	; 3
    18b0:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
    18b4:	0e 94 ff 02 	call	0x5fe	; 0x5fe <batteryPercentage>
    18b8:	78 01       	movw	r14, r16
    18ba:	fc e6       	ldi	r31, 0x6C	; 108
    18bc:	ef 0e       	add	r14, r31
    18be:	f1 1c       	adc	r15, r1
    18c0:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__fixunssfsi>
    18c4:	f7 01       	movw	r30, r14
    18c6:	60 83       	st	Z, r22
    18c8:	20 e0       	ldi	r18, 0x00	; 0
    18ca:	30 e0       	ldi	r19, 0x00	; 0
    18cc:	40 e8       	ldi	r20, 0x80	; 128
    18ce:	5f e3       	ldi	r21, 0x3F	; 63
    18d0:	c3 01       	movw	r24, r6
    18d2:	b2 01       	movw	r22, r4
    18d4:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__addsf3>
    18d8:	a5 01       	movw	r20, r10
    18da:	94 01       	movw	r18, r8
    18dc:	0e 94 7b 0d 	call	0x1af6	; 0x1af6 <__divsf3>
    18e0:	20 e0       	ldi	r18, 0x00	; 0
    18e2:	30 e0       	ldi	r19, 0x00	; 0
    18e4:	48 ec       	ldi	r20, 0xC8	; 200
    18e6:	52 e4       	ldi	r21, 0x42	; 66
    18e8:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <__mulsf3>
    18ec:	4b 01       	movw	r8, r22
    18ee:	5c 01       	movw	r10, r24
    18f0:	78 01       	movw	r14, r16
    18f2:	fd e6       	ldi	r31, 0x6D	; 109
    18f4:	ef 0e       	add	r14, r31
    18f6:	f1 1c       	adc	r15, r1
    18f8:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__fixunssfsi>
    18fc:	f7 01       	movw	r30, r14
    18fe:	60 83       	st	Z, r22
    1900:	34 96       	adiw	r30, 0x04	; 4
    1902:	01 90       	ld	r0, Z+
    1904:	f0 81       	ld	r31, Z
    1906:	e0 2d       	mov	r30, r0
    1908:	c8 01       	movw	r24, r16
    190a:	09 95       	icall
    190c:	0e 94 ff 02 	call	0x5fe	; 0x5fe <batteryPercentage>
    1910:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <__fixsfsi>
    1914:	2b 01       	movw	r4, r22
    1916:	3c 01       	movw	r6, r24
    1918:	c5 01       	movw	r24, r10
    191a:	b4 01       	movw	r22, r8
    191c:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <__fixsfsi>
    1920:	dc 01       	movw	r26, r24
    1922:	cb 01       	movw	r24, r22
    1924:	42 e0       	ldi	r20, 0x02	; 2
    1926:	b2 01       	movw	r22, r4
    1928:	0e 94 21 03 	call	0x642	; 0x642 <updateDisplay>
    192c:	ff ef       	ldi	r31, 0xFF	; 255
    192e:	2f 1a       	sub	r2, r31
    1930:	3f 0a       	sbc	r3, r31
    1932:	02 c0       	rjmp	.+4      	; 0x1938 <warehouse+0x1f8>
    1934:	21 2c       	mov	r2, r1
    1936:	31 2c       	mov	r3, r1
    1938:	2c 14       	cp	r2, r12
    193a:	3d 04       	cpc	r3, r13
    193c:	0c f4       	brge	.+2      	; 0x1940 <warehouse+0x200>
    193e:	68 cf       	rjmp	.-304    	; 0x1810 <warehouse+0xd0>
    1940:	a8 01       	movw	r20, r16
    1942:	be 01       	movw	r22, r28
    1944:	6f 5f       	subi	r22, 0xFF	; 255
    1946:	7f 4f       	sbci	r23, 0xFF	; 255
    1948:	81 e0       	ldi	r24, 0x01	; 1
    194a:	90 e0       	ldi	r25, 0x00	; 0
    194c:	0e 94 72 0b 	call	0x16e4	; 0x16e4 <moveY>
    1950:	a8 01       	movw	r20, r16
    1952:	be 01       	movw	r22, r28
    1954:	6f 5f       	subi	r22, 0xFF	; 255
    1956:	7f 4f       	sbci	r23, 0xFF	; 255
    1958:	81 e0       	ldi	r24, 0x01	; 1
    195a:	90 e0       	ldi	r25, 0x00	; 0
    195c:	0e 94 44 0b 	call	0x1688	; 0x1688 <moveX>
    1960:	44 c0       	rjmp	.+136    	; 0x19ea <warehouse+0x2aa>
    1962:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <charged.2339>
    1966:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <charged.2339+0x1>
    196a:	89 2b       	or	r24, r25
    196c:	29 f5       	brne	.+74     	; 0x19b8 <warehouse+0x278>
    196e:	a8 01       	movw	r20, r16
    1970:	be 01       	movw	r22, r28
    1972:	6f 5f       	subi	r22, 0xFF	; 255
    1974:	7f 4f       	sbci	r23, 0xFF	; 255
    1976:	81 e0       	ldi	r24, 0x01	; 1
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	0e 94 36 0a 	call	0x146c	; 0x146c <drive>
    197e:	82 e5       	ldi	r24, 0x52	; 82
    1980:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    1984:	a8 01       	movw	r20, r16
    1986:	be 01       	movw	r22, r28
    1988:	6f 5f       	subi	r22, 0xFF	; 255
    198a:	7f 4f       	sbci	r23, 0xFF	; 255
    198c:	84 e0       	ldi	r24, 0x04	; 4
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	0e 94 36 0a 	call	0x146c	; 0x146c <drive>
    1994:	82 e5       	ldi	r24, 0x52	; 82
    1996:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    199a:	a8 01       	movw	r20, r16
    199c:	be 01       	movw	r22, r28
    199e:	6f 5f       	subi	r22, 0xFF	; 255
    19a0:	7f 4f       	sbci	r23, 0xFF	; 255
    19a2:	81 e0       	ldi	r24, 0x01	; 1
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	0e 94 36 0a 	call	0x146c	; 0x146c <drive>
    19aa:	81 e0       	ldi	r24, 0x01	; 1
    19ac:	90 e0       	ldi	r25, 0x00	; 0
    19ae:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <charged.2339+0x1>
    19b2:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <charged.2339>
    19b6:	19 c0       	rjmp	.+50     	; 0x19ea <warehouse+0x2aa>
    19b8:	84 e5       	ldi	r24, 0x54	; 84
    19ba:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    19be:	a8 01       	movw	r20, r16
    19c0:	be 01       	movw	r22, r28
    19c2:	6f 5f       	subi	r22, 0xFF	; 255
    19c4:	7f 4f       	sbci	r23, 0xFF	; 255
    19c6:	81 e0       	ldi	r24, 0x01	; 1
    19c8:	90 e0       	ldi	r25, 0x00	; 0
    19ca:	0e 94 36 0a 	call	0x146c	; 0x146c <drive>
    19ce:	8c e4       	ldi	r24, 0x4C	; 76
    19d0:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    19d4:	a8 01       	movw	r20, r16
    19d6:	be 01       	movw	r22, r28
    19d8:	6f 5f       	subi	r22, 0xFF	; 255
    19da:	7f 4f       	sbci	r23, 0xFF	; 255
    19dc:	84 e0       	ldi	r24, 0x04	; 4
    19de:	90 e0       	ldi	r25, 0x00	; 0
    19e0:	0e 94 36 0a 	call	0x146c	; 0x146c <drive>
    19e4:	8c e4       	ldi	r24, 0x4C	; 76
    19e6:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <motorControl>
    19ea:	e7 96       	adiw	r28, 0x37	; 55
    19ec:	0f b6       	in	r0, 0x3f	; 63
    19ee:	f8 94       	cli
    19f0:	de bf       	out	0x3e, r29	; 62
    19f2:	0f be       	out	0x3f, r0	; 63
    19f4:	cd bf       	out	0x3d, r28	; 61
    19f6:	df 91       	pop	r29
    19f8:	cf 91       	pop	r28
    19fa:	1f 91       	pop	r17
    19fc:	0f 91       	pop	r16
    19fe:	ff 90       	pop	r15
    1a00:	ef 90       	pop	r14
    1a02:	df 90       	pop	r13
    1a04:	cf 90       	pop	r12
    1a06:	bf 90       	pop	r11
    1a08:	af 90       	pop	r10
    1a0a:	9f 90       	pop	r9
    1a0c:	8f 90       	pop	r8
    1a0e:	7f 90       	pop	r7
    1a10:	6f 90       	pop	r6
    1a12:	5f 90       	pop	r5
    1a14:	4f 90       	pop	r4
    1a16:	3f 90       	pop	r3
    1a18:	2f 90       	pop	r2
    1a1a:	08 95       	ret

00001a1c <__subsf3>:
    1a1c:	50 58       	subi	r21, 0x80	; 128

00001a1e <__addsf3>:
    1a1e:	bb 27       	eor	r27, r27
    1a20:	aa 27       	eor	r26, r26
    1a22:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <__addsf3x>
    1a26:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__fp_round>
    1a2a:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <__fp_pscA>
    1a2e:	38 f0       	brcs	.+14     	; 0x1a3e <__addsf3+0x20>
    1a30:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <__fp_pscB>
    1a34:	20 f0       	brcs	.+8      	; 0x1a3e <__addsf3+0x20>
    1a36:	39 f4       	brne	.+14     	; 0x1a46 <__addsf3+0x28>
    1a38:	9f 3f       	cpi	r25, 0xFF	; 255
    1a3a:	19 f4       	brne	.+6      	; 0x1a42 <__addsf3+0x24>
    1a3c:	26 f4       	brtc	.+8      	; 0x1a46 <__addsf3+0x28>
    1a3e:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__fp_nan>
    1a42:	0e f4       	brtc	.+2      	; 0x1a46 <__addsf3+0x28>
    1a44:	e0 95       	com	r30
    1a46:	e7 fb       	bst	r30, 7
    1a48:	0c 94 60 0e 	jmp	0x1cc0	; 0x1cc0 <__fp_inf>

00001a4c <__addsf3x>:
    1a4c:	e9 2f       	mov	r30, r25
    1a4e:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <__fp_split3>
    1a52:	58 f3       	brcs	.-42     	; 0x1a2a <__addsf3+0xc>
    1a54:	ba 17       	cp	r27, r26
    1a56:	62 07       	cpc	r22, r18
    1a58:	73 07       	cpc	r23, r19
    1a5a:	84 07       	cpc	r24, r20
    1a5c:	95 07       	cpc	r25, r21
    1a5e:	20 f0       	brcs	.+8      	; 0x1a68 <__addsf3x+0x1c>
    1a60:	79 f4       	brne	.+30     	; 0x1a80 <__addsf3x+0x34>
    1a62:	a6 f5       	brtc	.+104    	; 0x1acc <__addsf3x+0x80>
    1a64:	0c 94 aa 0e 	jmp	0x1d54	; 0x1d54 <__fp_zero>
    1a68:	0e f4       	brtc	.+2      	; 0x1a6c <__addsf3x+0x20>
    1a6a:	e0 95       	com	r30
    1a6c:	0b 2e       	mov	r0, r27
    1a6e:	ba 2f       	mov	r27, r26
    1a70:	a0 2d       	mov	r26, r0
    1a72:	0b 01       	movw	r0, r22
    1a74:	b9 01       	movw	r22, r18
    1a76:	90 01       	movw	r18, r0
    1a78:	0c 01       	movw	r0, r24
    1a7a:	ca 01       	movw	r24, r20
    1a7c:	a0 01       	movw	r20, r0
    1a7e:	11 24       	eor	r1, r1
    1a80:	ff 27       	eor	r31, r31
    1a82:	59 1b       	sub	r21, r25
    1a84:	99 f0       	breq	.+38     	; 0x1aac <__addsf3x+0x60>
    1a86:	59 3f       	cpi	r21, 0xF9	; 249
    1a88:	50 f4       	brcc	.+20     	; 0x1a9e <__addsf3x+0x52>
    1a8a:	50 3e       	cpi	r21, 0xE0	; 224
    1a8c:	68 f1       	brcs	.+90     	; 0x1ae8 <__addsf3x+0x9c>
    1a8e:	1a 16       	cp	r1, r26
    1a90:	f0 40       	sbci	r31, 0x00	; 0
    1a92:	a2 2f       	mov	r26, r18
    1a94:	23 2f       	mov	r18, r19
    1a96:	34 2f       	mov	r19, r20
    1a98:	44 27       	eor	r20, r20
    1a9a:	58 5f       	subi	r21, 0xF8	; 248
    1a9c:	f3 cf       	rjmp	.-26     	; 0x1a84 <__addsf3x+0x38>
    1a9e:	46 95       	lsr	r20
    1aa0:	37 95       	ror	r19
    1aa2:	27 95       	ror	r18
    1aa4:	a7 95       	ror	r26
    1aa6:	f0 40       	sbci	r31, 0x00	; 0
    1aa8:	53 95       	inc	r21
    1aaa:	c9 f7       	brne	.-14     	; 0x1a9e <__addsf3x+0x52>
    1aac:	7e f4       	brtc	.+30     	; 0x1acc <__addsf3x+0x80>
    1aae:	1f 16       	cp	r1, r31
    1ab0:	ba 0b       	sbc	r27, r26
    1ab2:	62 0b       	sbc	r22, r18
    1ab4:	73 0b       	sbc	r23, r19
    1ab6:	84 0b       	sbc	r24, r20
    1ab8:	ba f0       	brmi	.+46     	; 0x1ae8 <__addsf3x+0x9c>
    1aba:	91 50       	subi	r25, 0x01	; 1
    1abc:	a1 f0       	breq	.+40     	; 0x1ae6 <__addsf3x+0x9a>
    1abe:	ff 0f       	add	r31, r31
    1ac0:	bb 1f       	adc	r27, r27
    1ac2:	66 1f       	adc	r22, r22
    1ac4:	77 1f       	adc	r23, r23
    1ac6:	88 1f       	adc	r24, r24
    1ac8:	c2 f7       	brpl	.-16     	; 0x1aba <__addsf3x+0x6e>
    1aca:	0e c0       	rjmp	.+28     	; 0x1ae8 <__addsf3x+0x9c>
    1acc:	ba 0f       	add	r27, r26
    1ace:	62 1f       	adc	r22, r18
    1ad0:	73 1f       	adc	r23, r19
    1ad2:	84 1f       	adc	r24, r20
    1ad4:	48 f4       	brcc	.+18     	; 0x1ae8 <__addsf3x+0x9c>
    1ad6:	87 95       	ror	r24
    1ad8:	77 95       	ror	r23
    1ada:	67 95       	ror	r22
    1adc:	b7 95       	ror	r27
    1ade:	f7 95       	ror	r31
    1ae0:	9e 3f       	cpi	r25, 0xFE	; 254
    1ae2:	08 f0       	brcs	.+2      	; 0x1ae6 <__addsf3x+0x9a>
    1ae4:	b0 cf       	rjmp	.-160    	; 0x1a46 <__addsf3+0x28>
    1ae6:	93 95       	inc	r25
    1ae8:	88 0f       	add	r24, r24
    1aea:	08 f0       	brcs	.+2      	; 0x1aee <__addsf3x+0xa2>
    1aec:	99 27       	eor	r25, r25
    1aee:	ee 0f       	add	r30, r30
    1af0:	97 95       	ror	r25
    1af2:	87 95       	ror	r24
    1af4:	08 95       	ret

00001af6 <__divsf3>:
    1af6:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <__divsf3x>
    1afa:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__fp_round>
    1afe:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <__fp_pscB>
    1b02:	58 f0       	brcs	.+22     	; 0x1b1a <__divsf3+0x24>
    1b04:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <__fp_pscA>
    1b08:	40 f0       	brcs	.+16     	; 0x1b1a <__divsf3+0x24>
    1b0a:	29 f4       	brne	.+10     	; 0x1b16 <__divsf3+0x20>
    1b0c:	5f 3f       	cpi	r21, 0xFF	; 255
    1b0e:	29 f0       	breq	.+10     	; 0x1b1a <__divsf3+0x24>
    1b10:	0c 94 60 0e 	jmp	0x1cc0	; 0x1cc0 <__fp_inf>
    1b14:	51 11       	cpse	r21, r1
    1b16:	0c 94 ab 0e 	jmp	0x1d56	; 0x1d56 <__fp_szero>
    1b1a:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__fp_nan>

00001b1e <__divsf3x>:
    1b1e:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <__fp_split3>
    1b22:	68 f3       	brcs	.-38     	; 0x1afe <__divsf3+0x8>

00001b24 <__divsf3_pse>:
    1b24:	99 23       	and	r25, r25
    1b26:	b1 f3       	breq	.-20     	; 0x1b14 <__divsf3+0x1e>
    1b28:	55 23       	and	r21, r21
    1b2a:	91 f3       	breq	.-28     	; 0x1b10 <__divsf3+0x1a>
    1b2c:	95 1b       	sub	r25, r21
    1b2e:	55 0b       	sbc	r21, r21
    1b30:	bb 27       	eor	r27, r27
    1b32:	aa 27       	eor	r26, r26
    1b34:	62 17       	cp	r22, r18
    1b36:	73 07       	cpc	r23, r19
    1b38:	84 07       	cpc	r24, r20
    1b3a:	38 f0       	brcs	.+14     	; 0x1b4a <__divsf3_pse+0x26>
    1b3c:	9f 5f       	subi	r25, 0xFF	; 255
    1b3e:	5f 4f       	sbci	r21, 0xFF	; 255
    1b40:	22 0f       	add	r18, r18
    1b42:	33 1f       	adc	r19, r19
    1b44:	44 1f       	adc	r20, r20
    1b46:	aa 1f       	adc	r26, r26
    1b48:	a9 f3       	breq	.-22     	; 0x1b34 <__divsf3_pse+0x10>
    1b4a:	35 d0       	rcall	.+106    	; 0x1bb6 <__divsf3_pse+0x92>
    1b4c:	0e 2e       	mov	r0, r30
    1b4e:	3a f0       	brmi	.+14     	; 0x1b5e <__divsf3_pse+0x3a>
    1b50:	e0 e8       	ldi	r30, 0x80	; 128
    1b52:	32 d0       	rcall	.+100    	; 0x1bb8 <__divsf3_pse+0x94>
    1b54:	91 50       	subi	r25, 0x01	; 1
    1b56:	50 40       	sbci	r21, 0x00	; 0
    1b58:	e6 95       	lsr	r30
    1b5a:	00 1c       	adc	r0, r0
    1b5c:	ca f7       	brpl	.-14     	; 0x1b50 <__divsf3_pse+0x2c>
    1b5e:	2b d0       	rcall	.+86     	; 0x1bb6 <__divsf3_pse+0x92>
    1b60:	fe 2f       	mov	r31, r30
    1b62:	29 d0       	rcall	.+82     	; 0x1bb6 <__divsf3_pse+0x92>
    1b64:	66 0f       	add	r22, r22
    1b66:	77 1f       	adc	r23, r23
    1b68:	88 1f       	adc	r24, r24
    1b6a:	bb 1f       	adc	r27, r27
    1b6c:	26 17       	cp	r18, r22
    1b6e:	37 07       	cpc	r19, r23
    1b70:	48 07       	cpc	r20, r24
    1b72:	ab 07       	cpc	r26, r27
    1b74:	b0 e8       	ldi	r27, 0x80	; 128
    1b76:	09 f0       	breq	.+2      	; 0x1b7a <__divsf3_pse+0x56>
    1b78:	bb 0b       	sbc	r27, r27
    1b7a:	80 2d       	mov	r24, r0
    1b7c:	bf 01       	movw	r22, r30
    1b7e:	ff 27       	eor	r31, r31
    1b80:	93 58       	subi	r25, 0x83	; 131
    1b82:	5f 4f       	sbci	r21, 0xFF	; 255
    1b84:	3a f0       	brmi	.+14     	; 0x1b94 <__divsf3_pse+0x70>
    1b86:	9e 3f       	cpi	r25, 0xFE	; 254
    1b88:	51 05       	cpc	r21, r1
    1b8a:	78 f0       	brcs	.+30     	; 0x1baa <__divsf3_pse+0x86>
    1b8c:	0c 94 60 0e 	jmp	0x1cc0	; 0x1cc0 <__fp_inf>
    1b90:	0c 94 ab 0e 	jmp	0x1d56	; 0x1d56 <__fp_szero>
    1b94:	5f 3f       	cpi	r21, 0xFF	; 255
    1b96:	e4 f3       	brlt	.-8      	; 0x1b90 <__divsf3_pse+0x6c>
    1b98:	98 3e       	cpi	r25, 0xE8	; 232
    1b9a:	d4 f3       	brlt	.-12     	; 0x1b90 <__divsf3_pse+0x6c>
    1b9c:	86 95       	lsr	r24
    1b9e:	77 95       	ror	r23
    1ba0:	67 95       	ror	r22
    1ba2:	b7 95       	ror	r27
    1ba4:	f7 95       	ror	r31
    1ba6:	9f 5f       	subi	r25, 0xFF	; 255
    1ba8:	c9 f7       	brne	.-14     	; 0x1b9c <__divsf3_pse+0x78>
    1baa:	88 0f       	add	r24, r24
    1bac:	91 1d       	adc	r25, r1
    1bae:	96 95       	lsr	r25
    1bb0:	87 95       	ror	r24
    1bb2:	97 f9       	bld	r25, 7
    1bb4:	08 95       	ret
    1bb6:	e1 e0       	ldi	r30, 0x01	; 1
    1bb8:	66 0f       	add	r22, r22
    1bba:	77 1f       	adc	r23, r23
    1bbc:	88 1f       	adc	r24, r24
    1bbe:	bb 1f       	adc	r27, r27
    1bc0:	62 17       	cp	r22, r18
    1bc2:	73 07       	cpc	r23, r19
    1bc4:	84 07       	cpc	r24, r20
    1bc6:	ba 07       	cpc	r27, r26
    1bc8:	20 f0       	brcs	.+8      	; 0x1bd2 <__divsf3_pse+0xae>
    1bca:	62 1b       	sub	r22, r18
    1bcc:	73 0b       	sbc	r23, r19
    1bce:	84 0b       	sbc	r24, r20
    1bd0:	ba 0b       	sbc	r27, r26
    1bd2:	ee 1f       	adc	r30, r30
    1bd4:	88 f7       	brcc	.-30     	; 0x1bb8 <__divsf3_pse+0x94>
    1bd6:	e0 95       	com	r30
    1bd8:	08 95       	ret

00001bda <__fixsfsi>:
    1bda:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__fixunssfsi>
    1bde:	68 94       	set
    1be0:	b1 11       	cpse	r27, r1
    1be2:	0c 94 ab 0e 	jmp	0x1d56	; 0x1d56 <__fp_szero>
    1be6:	08 95       	ret

00001be8 <__fixunssfsi>:
    1be8:	0e 94 90 0e 	call	0x1d20	; 0x1d20 <__fp_splitA>
    1bec:	88 f0       	brcs	.+34     	; 0x1c10 <__fixunssfsi+0x28>
    1bee:	9f 57       	subi	r25, 0x7F	; 127
    1bf0:	98 f0       	brcs	.+38     	; 0x1c18 <__fixunssfsi+0x30>
    1bf2:	b9 2f       	mov	r27, r25
    1bf4:	99 27       	eor	r25, r25
    1bf6:	b7 51       	subi	r27, 0x17	; 23
    1bf8:	b0 f0       	brcs	.+44     	; 0x1c26 <__fixunssfsi+0x3e>
    1bfa:	e1 f0       	breq	.+56     	; 0x1c34 <__fixunssfsi+0x4c>
    1bfc:	66 0f       	add	r22, r22
    1bfe:	77 1f       	adc	r23, r23
    1c00:	88 1f       	adc	r24, r24
    1c02:	99 1f       	adc	r25, r25
    1c04:	1a f0       	brmi	.+6      	; 0x1c0c <__fixunssfsi+0x24>
    1c06:	ba 95       	dec	r27
    1c08:	c9 f7       	brne	.-14     	; 0x1bfc <__fixunssfsi+0x14>
    1c0a:	14 c0       	rjmp	.+40     	; 0x1c34 <__fixunssfsi+0x4c>
    1c0c:	b1 30       	cpi	r27, 0x01	; 1
    1c0e:	91 f0       	breq	.+36     	; 0x1c34 <__fixunssfsi+0x4c>
    1c10:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <__fp_zero>
    1c14:	b1 e0       	ldi	r27, 0x01	; 1
    1c16:	08 95       	ret
    1c18:	0c 94 aa 0e 	jmp	0x1d54	; 0x1d54 <__fp_zero>
    1c1c:	67 2f       	mov	r22, r23
    1c1e:	78 2f       	mov	r23, r24
    1c20:	88 27       	eor	r24, r24
    1c22:	b8 5f       	subi	r27, 0xF8	; 248
    1c24:	39 f0       	breq	.+14     	; 0x1c34 <__fixunssfsi+0x4c>
    1c26:	b9 3f       	cpi	r27, 0xF9	; 249
    1c28:	cc f3       	brlt	.-14     	; 0x1c1c <__fixunssfsi+0x34>
    1c2a:	86 95       	lsr	r24
    1c2c:	77 95       	ror	r23
    1c2e:	67 95       	ror	r22
    1c30:	b3 95       	inc	r27
    1c32:	d9 f7       	brne	.-10     	; 0x1c2a <__fixunssfsi+0x42>
    1c34:	3e f4       	brtc	.+14     	; 0x1c44 <__fixunssfsi+0x5c>
    1c36:	90 95       	com	r25
    1c38:	80 95       	com	r24
    1c3a:	70 95       	com	r23
    1c3c:	61 95       	neg	r22
    1c3e:	7f 4f       	sbci	r23, 0xFF	; 255
    1c40:	8f 4f       	sbci	r24, 0xFF	; 255
    1c42:	9f 4f       	sbci	r25, 0xFF	; 255
    1c44:	08 95       	ret

00001c46 <__floatunsisf>:
    1c46:	e8 94       	clt
    1c48:	09 c0       	rjmp	.+18     	; 0x1c5c <__floatsisf+0x12>

00001c4a <__floatsisf>:
    1c4a:	97 fb       	bst	r25, 7
    1c4c:	3e f4       	brtc	.+14     	; 0x1c5c <__floatsisf+0x12>
    1c4e:	90 95       	com	r25
    1c50:	80 95       	com	r24
    1c52:	70 95       	com	r23
    1c54:	61 95       	neg	r22
    1c56:	7f 4f       	sbci	r23, 0xFF	; 255
    1c58:	8f 4f       	sbci	r24, 0xFF	; 255
    1c5a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c5c:	99 23       	and	r25, r25
    1c5e:	a9 f0       	breq	.+42     	; 0x1c8a <__floatsisf+0x40>
    1c60:	f9 2f       	mov	r31, r25
    1c62:	96 e9       	ldi	r25, 0x96	; 150
    1c64:	bb 27       	eor	r27, r27
    1c66:	93 95       	inc	r25
    1c68:	f6 95       	lsr	r31
    1c6a:	87 95       	ror	r24
    1c6c:	77 95       	ror	r23
    1c6e:	67 95       	ror	r22
    1c70:	b7 95       	ror	r27
    1c72:	f1 11       	cpse	r31, r1
    1c74:	f8 cf       	rjmp	.-16     	; 0x1c66 <__floatsisf+0x1c>
    1c76:	fa f4       	brpl	.+62     	; 0x1cb6 <__floatsisf+0x6c>
    1c78:	bb 0f       	add	r27, r27
    1c7a:	11 f4       	brne	.+4      	; 0x1c80 <__floatsisf+0x36>
    1c7c:	60 ff       	sbrs	r22, 0
    1c7e:	1b c0       	rjmp	.+54     	; 0x1cb6 <__floatsisf+0x6c>
    1c80:	6f 5f       	subi	r22, 0xFF	; 255
    1c82:	7f 4f       	sbci	r23, 0xFF	; 255
    1c84:	8f 4f       	sbci	r24, 0xFF	; 255
    1c86:	9f 4f       	sbci	r25, 0xFF	; 255
    1c88:	16 c0       	rjmp	.+44     	; 0x1cb6 <__floatsisf+0x6c>
    1c8a:	88 23       	and	r24, r24
    1c8c:	11 f0       	breq	.+4      	; 0x1c92 <__floatsisf+0x48>
    1c8e:	96 e9       	ldi	r25, 0x96	; 150
    1c90:	11 c0       	rjmp	.+34     	; 0x1cb4 <__floatsisf+0x6a>
    1c92:	77 23       	and	r23, r23
    1c94:	21 f0       	breq	.+8      	; 0x1c9e <__floatsisf+0x54>
    1c96:	9e e8       	ldi	r25, 0x8E	; 142
    1c98:	87 2f       	mov	r24, r23
    1c9a:	76 2f       	mov	r23, r22
    1c9c:	05 c0       	rjmp	.+10     	; 0x1ca8 <__floatsisf+0x5e>
    1c9e:	66 23       	and	r22, r22
    1ca0:	71 f0       	breq	.+28     	; 0x1cbe <__floatsisf+0x74>
    1ca2:	96 e8       	ldi	r25, 0x86	; 134
    1ca4:	86 2f       	mov	r24, r22
    1ca6:	70 e0       	ldi	r23, 0x00	; 0
    1ca8:	60 e0       	ldi	r22, 0x00	; 0
    1caa:	2a f0       	brmi	.+10     	; 0x1cb6 <__floatsisf+0x6c>
    1cac:	9a 95       	dec	r25
    1cae:	66 0f       	add	r22, r22
    1cb0:	77 1f       	adc	r23, r23
    1cb2:	88 1f       	adc	r24, r24
    1cb4:	da f7       	brpl	.-10     	; 0x1cac <__floatsisf+0x62>
    1cb6:	88 0f       	add	r24, r24
    1cb8:	96 95       	lsr	r25
    1cba:	87 95       	ror	r24
    1cbc:	97 f9       	bld	r25, 7
    1cbe:	08 95       	ret

00001cc0 <__fp_inf>:
    1cc0:	97 f9       	bld	r25, 7
    1cc2:	9f 67       	ori	r25, 0x7F	; 127
    1cc4:	80 e8       	ldi	r24, 0x80	; 128
    1cc6:	70 e0       	ldi	r23, 0x00	; 0
    1cc8:	60 e0       	ldi	r22, 0x00	; 0
    1cca:	08 95       	ret

00001ccc <__fp_nan>:
    1ccc:	9f ef       	ldi	r25, 0xFF	; 255
    1cce:	80 ec       	ldi	r24, 0xC0	; 192
    1cd0:	08 95       	ret

00001cd2 <__fp_pscA>:
    1cd2:	00 24       	eor	r0, r0
    1cd4:	0a 94       	dec	r0
    1cd6:	16 16       	cp	r1, r22
    1cd8:	17 06       	cpc	r1, r23
    1cda:	18 06       	cpc	r1, r24
    1cdc:	09 06       	cpc	r0, r25
    1cde:	08 95       	ret

00001ce0 <__fp_pscB>:
    1ce0:	00 24       	eor	r0, r0
    1ce2:	0a 94       	dec	r0
    1ce4:	12 16       	cp	r1, r18
    1ce6:	13 06       	cpc	r1, r19
    1ce8:	14 06       	cpc	r1, r20
    1cea:	05 06       	cpc	r0, r21
    1cec:	08 95       	ret

00001cee <__fp_round>:
    1cee:	09 2e       	mov	r0, r25
    1cf0:	03 94       	inc	r0
    1cf2:	00 0c       	add	r0, r0
    1cf4:	11 f4       	brne	.+4      	; 0x1cfa <__fp_round+0xc>
    1cf6:	88 23       	and	r24, r24
    1cf8:	52 f0       	brmi	.+20     	; 0x1d0e <__fp_round+0x20>
    1cfa:	bb 0f       	add	r27, r27
    1cfc:	40 f4       	brcc	.+16     	; 0x1d0e <__fp_round+0x20>
    1cfe:	bf 2b       	or	r27, r31
    1d00:	11 f4       	brne	.+4      	; 0x1d06 <__fp_round+0x18>
    1d02:	60 ff       	sbrs	r22, 0
    1d04:	04 c0       	rjmp	.+8      	; 0x1d0e <__fp_round+0x20>
    1d06:	6f 5f       	subi	r22, 0xFF	; 255
    1d08:	7f 4f       	sbci	r23, 0xFF	; 255
    1d0a:	8f 4f       	sbci	r24, 0xFF	; 255
    1d0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1d0e:	08 95       	ret

00001d10 <__fp_split3>:
    1d10:	57 fd       	sbrc	r21, 7
    1d12:	90 58       	subi	r25, 0x80	; 128
    1d14:	44 0f       	add	r20, r20
    1d16:	55 1f       	adc	r21, r21
    1d18:	59 f0       	breq	.+22     	; 0x1d30 <__fp_splitA+0x10>
    1d1a:	5f 3f       	cpi	r21, 0xFF	; 255
    1d1c:	71 f0       	breq	.+28     	; 0x1d3a <__fp_splitA+0x1a>
    1d1e:	47 95       	ror	r20

00001d20 <__fp_splitA>:
    1d20:	88 0f       	add	r24, r24
    1d22:	97 fb       	bst	r25, 7
    1d24:	99 1f       	adc	r25, r25
    1d26:	61 f0       	breq	.+24     	; 0x1d40 <__fp_splitA+0x20>
    1d28:	9f 3f       	cpi	r25, 0xFF	; 255
    1d2a:	79 f0       	breq	.+30     	; 0x1d4a <__fp_splitA+0x2a>
    1d2c:	87 95       	ror	r24
    1d2e:	08 95       	ret
    1d30:	12 16       	cp	r1, r18
    1d32:	13 06       	cpc	r1, r19
    1d34:	14 06       	cpc	r1, r20
    1d36:	55 1f       	adc	r21, r21
    1d38:	f2 cf       	rjmp	.-28     	; 0x1d1e <__fp_split3+0xe>
    1d3a:	46 95       	lsr	r20
    1d3c:	f1 df       	rcall	.-30     	; 0x1d20 <__fp_splitA>
    1d3e:	08 c0       	rjmp	.+16     	; 0x1d50 <__fp_splitA+0x30>
    1d40:	16 16       	cp	r1, r22
    1d42:	17 06       	cpc	r1, r23
    1d44:	18 06       	cpc	r1, r24
    1d46:	99 1f       	adc	r25, r25
    1d48:	f1 cf       	rjmp	.-30     	; 0x1d2c <__fp_splitA+0xc>
    1d4a:	86 95       	lsr	r24
    1d4c:	71 05       	cpc	r23, r1
    1d4e:	61 05       	cpc	r22, r1
    1d50:	08 94       	sec
    1d52:	08 95       	ret

00001d54 <__fp_zero>:
    1d54:	e8 94       	clt

00001d56 <__fp_szero>:
    1d56:	bb 27       	eor	r27, r27
    1d58:	66 27       	eor	r22, r22
    1d5a:	77 27       	eor	r23, r23
    1d5c:	cb 01       	movw	r24, r22
    1d5e:	97 f9       	bld	r25, 7
    1d60:	08 95       	ret

00001d62 <__mulsf3>:
    1d62:	0e 94 c4 0e 	call	0x1d88	; 0x1d88 <__mulsf3x>
    1d66:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__fp_round>
    1d6a:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <__fp_pscA>
    1d6e:	38 f0       	brcs	.+14     	; 0x1d7e <__mulsf3+0x1c>
    1d70:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <__fp_pscB>
    1d74:	20 f0       	brcs	.+8      	; 0x1d7e <__mulsf3+0x1c>
    1d76:	95 23       	and	r25, r21
    1d78:	11 f0       	breq	.+4      	; 0x1d7e <__mulsf3+0x1c>
    1d7a:	0c 94 60 0e 	jmp	0x1cc0	; 0x1cc0 <__fp_inf>
    1d7e:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__fp_nan>
    1d82:	11 24       	eor	r1, r1
    1d84:	0c 94 ab 0e 	jmp	0x1d56	; 0x1d56 <__fp_szero>

00001d88 <__mulsf3x>:
    1d88:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <__fp_split3>
    1d8c:	70 f3       	brcs	.-36     	; 0x1d6a <__mulsf3+0x8>

00001d8e <__mulsf3_pse>:
    1d8e:	95 9f       	mul	r25, r21
    1d90:	c1 f3       	breq	.-16     	; 0x1d82 <__mulsf3+0x20>
    1d92:	95 0f       	add	r25, r21
    1d94:	50 e0       	ldi	r21, 0x00	; 0
    1d96:	55 1f       	adc	r21, r21
    1d98:	62 9f       	mul	r22, r18
    1d9a:	f0 01       	movw	r30, r0
    1d9c:	72 9f       	mul	r23, r18
    1d9e:	bb 27       	eor	r27, r27
    1da0:	f0 0d       	add	r31, r0
    1da2:	b1 1d       	adc	r27, r1
    1da4:	63 9f       	mul	r22, r19
    1da6:	aa 27       	eor	r26, r26
    1da8:	f0 0d       	add	r31, r0
    1daa:	b1 1d       	adc	r27, r1
    1dac:	aa 1f       	adc	r26, r26
    1dae:	64 9f       	mul	r22, r20
    1db0:	66 27       	eor	r22, r22
    1db2:	b0 0d       	add	r27, r0
    1db4:	a1 1d       	adc	r26, r1
    1db6:	66 1f       	adc	r22, r22
    1db8:	82 9f       	mul	r24, r18
    1dba:	22 27       	eor	r18, r18
    1dbc:	b0 0d       	add	r27, r0
    1dbe:	a1 1d       	adc	r26, r1
    1dc0:	62 1f       	adc	r22, r18
    1dc2:	73 9f       	mul	r23, r19
    1dc4:	b0 0d       	add	r27, r0
    1dc6:	a1 1d       	adc	r26, r1
    1dc8:	62 1f       	adc	r22, r18
    1dca:	83 9f       	mul	r24, r19
    1dcc:	a0 0d       	add	r26, r0
    1dce:	61 1d       	adc	r22, r1
    1dd0:	22 1f       	adc	r18, r18
    1dd2:	74 9f       	mul	r23, r20
    1dd4:	33 27       	eor	r19, r19
    1dd6:	a0 0d       	add	r26, r0
    1dd8:	61 1d       	adc	r22, r1
    1dda:	23 1f       	adc	r18, r19
    1ddc:	84 9f       	mul	r24, r20
    1dde:	60 0d       	add	r22, r0
    1de0:	21 1d       	adc	r18, r1
    1de2:	82 2f       	mov	r24, r18
    1de4:	76 2f       	mov	r23, r22
    1de6:	6a 2f       	mov	r22, r26
    1de8:	11 24       	eor	r1, r1
    1dea:	9f 57       	subi	r25, 0x7F	; 127
    1dec:	50 40       	sbci	r21, 0x00	; 0
    1dee:	9a f0       	brmi	.+38     	; 0x1e16 <__mulsf3_pse+0x88>
    1df0:	f1 f0       	breq	.+60     	; 0x1e2e <__mulsf3_pse+0xa0>
    1df2:	88 23       	and	r24, r24
    1df4:	4a f0       	brmi	.+18     	; 0x1e08 <__mulsf3_pse+0x7a>
    1df6:	ee 0f       	add	r30, r30
    1df8:	ff 1f       	adc	r31, r31
    1dfa:	bb 1f       	adc	r27, r27
    1dfc:	66 1f       	adc	r22, r22
    1dfe:	77 1f       	adc	r23, r23
    1e00:	88 1f       	adc	r24, r24
    1e02:	91 50       	subi	r25, 0x01	; 1
    1e04:	50 40       	sbci	r21, 0x00	; 0
    1e06:	a9 f7       	brne	.-22     	; 0x1df2 <__mulsf3_pse+0x64>
    1e08:	9e 3f       	cpi	r25, 0xFE	; 254
    1e0a:	51 05       	cpc	r21, r1
    1e0c:	80 f0       	brcs	.+32     	; 0x1e2e <__mulsf3_pse+0xa0>
    1e0e:	0c 94 60 0e 	jmp	0x1cc0	; 0x1cc0 <__fp_inf>
    1e12:	0c 94 ab 0e 	jmp	0x1d56	; 0x1d56 <__fp_szero>
    1e16:	5f 3f       	cpi	r21, 0xFF	; 255
    1e18:	e4 f3       	brlt	.-8      	; 0x1e12 <__mulsf3_pse+0x84>
    1e1a:	98 3e       	cpi	r25, 0xE8	; 232
    1e1c:	d4 f3       	brlt	.-12     	; 0x1e12 <__mulsf3_pse+0x84>
    1e1e:	86 95       	lsr	r24
    1e20:	77 95       	ror	r23
    1e22:	67 95       	ror	r22
    1e24:	b7 95       	ror	r27
    1e26:	f7 95       	ror	r31
    1e28:	e7 95       	ror	r30
    1e2a:	9f 5f       	subi	r25, 0xFF	; 255
    1e2c:	c1 f7       	brne	.-16     	; 0x1e1e <__mulsf3_pse+0x90>
    1e2e:	fe 2b       	or	r31, r30
    1e30:	88 0f       	add	r24, r24
    1e32:	91 1d       	adc	r25, r1
    1e34:	96 95       	lsr	r25
    1e36:	87 95       	ror	r24
    1e38:	97 f9       	bld	r25, 7
    1e3a:	08 95       	ret

00001e3c <_ZN15OrangutanAnalog7setModeEh.part.0>:
    1e3c:	ec e7       	ldi	r30, 0x7C	; 124
    1e3e:	f0 e0       	ldi	r31, 0x00	; 0
    1e40:	80 81       	ld	r24, Z
    1e42:	8f 7d       	andi	r24, 0xDF	; 223
    1e44:	80 83       	st	Z, r24
    1e46:	08 95       	ret

00001e48 <_ZN15OrangutanAnalog7setModeEh>:
    1e48:	81 11       	cpse	r24, r1
    1e4a:	03 c0       	rjmp	.+6      	; 0x1e52 <_ZN15OrangutanAnalog7setModeEh+0xa>
    1e4c:	0e 94 1e 0f 	call	0x1e3c	; 0x1e3c <_ZN15OrangutanAnalog7setModeEh.part.0>
    1e50:	08 95       	ret
    1e52:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1e56:	80 62       	ori	r24, 0x20	; 32
    1e58:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1e5c:	08 95       	ret

00001e5e <_ZN15OrangutanAnalog7getModeEv>:
    1e5e:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1e62:	85 fb       	bst	r24, 5
    1e64:	88 27       	eor	r24, r24
    1e66:	80 f9       	bld	r24, 0
    1e68:	08 95       	ret

00001e6a <_ZN15OrangutanAnalog16conversionResultEv>:
    1e6a:	0e 94 2f 0f 	call	0x1e5e	; 0x1e5e <_ZN15OrangutanAnalog7getModeEv>
    1e6e:	88 23       	and	r24, r24
    1e70:	21 f0       	breq	.+8      	; 0x1e7a <_ZN15OrangutanAnalog16conversionResultEv+0x10>
    1e72:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1e76:	90 e0       	ldi	r25, 0x00	; 0
    1e78:	08 95       	ret
    1e7a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    1e7e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1e82:	08 95       	ret

00001e84 <_ZN15OrangutanAnalog15startConversionEhh>:
    1e84:	80 32       	cpi	r24, 0x20	; 32
    1e86:	a0 f4       	brcc	.+40     	; 0x1eb0 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
    1e88:	97 e8       	ldi	r25, 0x87	; 135
    1e8a:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1e8e:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1e92:	66 23       	and	r22, r22
    1e94:	11 f0       	breq	.+4      	; 0x1e9a <_ZN15OrangutanAnalog15startConversionEhh+0x16>
    1e96:	90 6c       	ori	r25, 0xC0	; 192
    1e98:	02 c0       	rjmp	.+4      	; 0x1e9e <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
    1e9a:	9f 77       	andi	r25, 0x7F	; 127
    1e9c:	90 64       	ori	r25, 0x40	; 64
    1e9e:	90 7e       	andi	r25, 0xE0	; 224
    1ea0:	98 2b       	or	r25, r24
    1ea2:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1ea6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1eaa:	80 64       	ori	r24, 0x40	; 64
    1eac:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1eb0:	08 95       	ret

00001eb2 <_ZN15OrangutanAnalog4readEh>:
    1eb2:	60 e0       	ldi	r22, 0x00	; 0
    1eb4:	0e 94 42 0f 	call	0x1e84	; 0x1e84 <_ZN15OrangutanAnalog15startConversionEhh>
    1eb8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1ebc:	86 fd       	sbrc	r24, 6
    1ebe:	fc cf       	rjmp	.-8      	; 0x1eb8 <_ZN15OrangutanAnalog4readEh+0x6>
    1ec0:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <_ZN15OrangutanAnalog16conversionResultEv>
    1ec4:	08 95       	ret

00001ec6 <analog_read>:
    1ec6:	0e 94 59 0f 	call	0x1eb2	; 0x1eb2 <_ZN15OrangutanAnalog4readEh>
    1eca:	08 95       	ret

00001ecc <_ZN15OrangutanAnalog11readAverageEhj>:
    1ecc:	a0 e0       	ldi	r26, 0x00	; 0
    1ece:	b0 e0       	ldi	r27, 0x00	; 0
    1ed0:	ec e6       	ldi	r30, 0x6C	; 108
    1ed2:	ff e0       	ldi	r31, 0x0F	; 15
    1ed4:	0c 94 b0 1d 	jmp	0x3b60	; 0x3b60 <__prologue_saves__+0x14>
    1ed8:	eb 01       	movw	r28, r22
    1eda:	60 e0       	ldi	r22, 0x00	; 0
    1edc:	0e 94 42 0f 	call	0x1e84	; 0x1e84 <_ZN15OrangutanAnalog15startConversionEhh>
    1ee0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1ee4:	86 fd       	sbrc	r24, 6
    1ee6:	fc cf       	rjmp	.-8      	; 0x1ee0 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
    1ee8:	8e 01       	movw	r16, r28
    1eea:	c1 2c       	mov	r12, r1
    1eec:	d1 2c       	mov	r13, r1
    1eee:	76 01       	movw	r14, r12
    1ef0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1ef4:	80 64       	ori	r24, 0x40	; 64
    1ef6:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1efa:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1efe:	86 fd       	sbrc	r24, 6
    1f00:	fc cf       	rjmp	.-8      	; 0x1efa <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
    1f02:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <_ZN15OrangutanAnalog16conversionResultEv>
    1f06:	c8 0e       	add	r12, r24
    1f08:	d9 1e       	adc	r13, r25
    1f0a:	e1 1c       	adc	r14, r1
    1f0c:	f1 1c       	adc	r15, r1
    1f0e:	01 50       	subi	r16, 0x01	; 1
    1f10:	11 09       	sbc	r17, r1
    1f12:	01 15       	cp	r16, r1
    1f14:	11 05       	cpc	r17, r1
    1f16:	61 f7       	brne	.-40     	; 0x1ef0 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
    1f18:	ce 01       	movw	r24, r28
    1f1a:	96 95       	lsr	r25
    1f1c:	87 95       	ror	r24
    1f1e:	c0 34       	cpi	r28, 0x40	; 64
    1f20:	d1 05       	cpc	r29, r1
    1f22:	38 f4       	brcc	.+14     	; 0x1f32 <_ZN15OrangutanAnalog11readAverageEhj+0x66>
    1f24:	8c 0d       	add	r24, r12
    1f26:	9d 1d       	adc	r25, r13
    1f28:	be 01       	movw	r22, r28
    1f2a:	0e 94 15 1d 	call	0x3a2a	; 0x3a2a <__udivmodhi4>
    1f2e:	cb 01       	movw	r24, r22
    1f30:	0e c0       	rjmp	.+28     	; 0x1f4e <_ZN15OrangutanAnalog11readAverageEhj+0x82>
    1f32:	a7 01       	movw	r20, r14
    1f34:	96 01       	movw	r18, r12
    1f36:	28 0f       	add	r18, r24
    1f38:	39 1f       	adc	r19, r25
    1f3a:	41 1d       	adc	r20, r1
    1f3c:	51 1d       	adc	r21, r1
    1f3e:	ca 01       	movw	r24, r20
    1f40:	b9 01       	movw	r22, r18
    1f42:	9e 01       	movw	r18, r28
    1f44:	40 e0       	ldi	r20, 0x00	; 0
    1f46:	50 e0       	ldi	r21, 0x00	; 0
    1f48:	0e 94 3d 1d 	call	0x3a7a	; 0x3a7a <__udivmodsi4>
    1f4c:	c9 01       	movw	r24, r18
    1f4e:	cd b7       	in	r28, 0x3d	; 61
    1f50:	de b7       	in	r29, 0x3e	; 62
    1f52:	e8 e0       	ldi	r30, 0x08	; 8
    1f54:	0c 94 cc 1d 	jmp	0x3b98	; 0x3b98 <__epilogue_restores__+0x14>

00001f58 <_ZN15OrangutanAnalog12toMillivoltsEj>:
    1f58:	cf 92       	push	r12
    1f5a:	df 92       	push	r13
    1f5c:	ef 92       	push	r14
    1f5e:	ff 92       	push	r15
    1f60:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1f64:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1f68:	9c 01       	movw	r18, r24
    1f6a:	0e 94 84 1d 	call	0x3b08	; 0x3b08 <__umulhisi3>
    1f6e:	6b 01       	movw	r12, r22
    1f70:	7c 01       	movw	r14, r24
    1f72:	0e 94 2f 0f 	call	0x1e5e	; 0x1e5e <_ZN15OrangutanAnalog7getModeEv>
    1f76:	88 23       	and	r24, r24
    1f78:	59 f0       	breq	.+22     	; 0x1f90 <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
    1f7a:	c7 01       	movw	r24, r14
    1f7c:	b6 01       	movw	r22, r12
    1f7e:	61 58       	subi	r22, 0x81	; 129
    1f80:	7f 4f       	sbci	r23, 0xFF	; 255
    1f82:	8f 4f       	sbci	r24, 0xFF	; 255
    1f84:	9f 4f       	sbci	r25, 0xFF	; 255
    1f86:	2f ef       	ldi	r18, 0xFF	; 255
    1f88:	30 e0       	ldi	r19, 0x00	; 0
    1f8a:	40 e0       	ldi	r20, 0x00	; 0
    1f8c:	50 e0       	ldi	r21, 0x00	; 0
    1f8e:	0a c0       	rjmp	.+20     	; 0x1fa4 <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
    1f90:	c7 01       	movw	r24, r14
    1f92:	b6 01       	movw	r22, r12
    1f94:	61 50       	subi	r22, 0x01	; 1
    1f96:	7e 4f       	sbci	r23, 0xFE	; 254
    1f98:	8f 4f       	sbci	r24, 0xFF	; 255
    1f9a:	9f 4f       	sbci	r25, 0xFF	; 255
    1f9c:	2f ef       	ldi	r18, 0xFF	; 255
    1f9e:	33 e0       	ldi	r19, 0x03	; 3
    1fa0:	40 e0       	ldi	r20, 0x00	; 0
    1fa2:	50 e0       	ldi	r21, 0x00	; 0
    1fa4:	0e 94 3d 1d 	call	0x3a7a	; 0x3a7a <__udivmodsi4>
    1fa8:	c9 01       	movw	r24, r18
    1faa:	ff 90       	pop	r15
    1fac:	ef 90       	pop	r14
    1fae:	df 90       	pop	r13
    1fb0:	cf 90       	pop	r12
    1fb2:	08 95       	ret

00001fb4 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
    1fb4:	0e 94 66 0f 	call	0x1ecc	; 0x1ecc <_ZN15OrangutanAnalog11readAverageEhj>
    1fb8:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <_ZN15OrangutanAnalog12toMillivoltsEj>
    1fbc:	08 95       	ret

00001fbe <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
    1fbe:	1f 93       	push	r17
    1fc0:	cf 93       	push	r28
    1fc2:	df 93       	push	r29
    1fc4:	0e 94 2f 0f 	call	0x1e5e	; 0x1e5e <_ZN15OrangutanAnalog7getModeEv>
    1fc8:	18 2f       	mov	r17, r24
    1fca:	0e 94 1e 0f 	call	0x1e3c	; 0x1e3c <_ZN15OrangutanAnalog7setModeEh.part.0>
    1fce:	6a e0       	ldi	r22, 0x0A	; 10
    1fd0:	70 e0       	ldi	r23, 0x00	; 0
    1fd2:	86 e0       	ldi	r24, 0x06	; 6
    1fd4:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
    1fd8:	ec 01       	movw	r28, r24
    1fda:	81 2f       	mov	r24, r17
    1fdc:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <_ZN15OrangutanAnalog7setModeEh>
    1fe0:	ce 01       	movw	r24, r28
    1fe2:	88 0f       	add	r24, r24
    1fe4:	99 1f       	adc	r25, r25
    1fe6:	8c 0f       	add	r24, r28
    1fe8:	9d 1f       	adc	r25, r29
    1fea:	01 96       	adiw	r24, 0x01	; 1
    1fec:	96 95       	lsr	r25
    1fee:	87 95       	ror	r24
    1ff0:	df 91       	pop	r29
    1ff2:	cf 91       	pop	r28
    1ff4:	1f 91       	pop	r17
    1ff6:	08 95       	ret

00001ff8 <read_battery_millivolts_3pi>:
    1ff8:	0e 94 df 0f 	call	0x1fbe	; 0x1fbe <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
    1ffc:	08 95       	ret

00001ffe <_ZL16currentCharacterv>:
    1ffe:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <_ZL17use_program_space>
    2002:	e0 91 8c 01 	lds	r30, 0x018C	; 0x80018c <__data_end>
    2006:	f0 91 8d 01 	lds	r31, 0x018D	; 0x80018d <__data_end+0x1>
    200a:	99 23       	and	r25, r25
    200c:	11 f0       	breq	.+4      	; 0x2012 <_ZL16currentCharacterv+0x14>
    200e:	84 91       	lpm	r24, Z
    2010:	01 c0       	rjmp	.+2      	; 0x2014 <_ZL16currentCharacterv+0x16>
    2012:	80 81       	ld	r24, Z
    2014:	2f eb       	ldi	r18, 0xBF	; 191
    2016:	28 0f       	add	r18, r24
    2018:	2a 31       	cpi	r18, 0x1A	; 26
    201a:	10 f4       	brcc	.+4      	; 0x2020 <_ZL16currentCharacterv+0x22>
    201c:	80 5e       	subi	r24, 0xE0	; 224
    201e:	08 95       	ret
    2020:	80 32       	cpi	r24, 0x20	; 32
    2022:	49 f4       	brne	.+18     	; 0x2036 <_ZL16currentCharacterv+0x38>
    2024:	9f 01       	movw	r18, r30
    2026:	2f 5f       	subi	r18, 0xFF	; 255
    2028:	3f 4f       	sbci	r19, 0xFF	; 255
    202a:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    202e:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    2032:	ef 2b       	or	r30, r31
    2034:	31 f7       	brne	.-52     	; 0x2002 <_ZL16currentCharacterv+0x4>
    2036:	08 95       	ret

00002038 <_ZL9getNumberv>:
    2038:	1f 93       	push	r17
    203a:	cf 93       	push	r28
    203c:	df 93       	push	r29
    203e:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <_ZL16currentCharacterv>
    2042:	c0 e0       	ldi	r28, 0x00	; 0
    2044:	d0 e0       	ldi	r29, 0x00	; 0
    2046:	1a e0       	ldi	r17, 0x0A	; 10
    2048:	90 ed       	ldi	r25, 0xD0	; 208
    204a:	98 0f       	add	r25, r24
    204c:	9a 30       	cpi	r25, 0x0A	; 10
    204e:	b8 f4       	brcc	.+46     	; 0x207e <_ZL9getNumberv+0x46>
    2050:	9e 01       	movw	r18, r28
    2052:	12 9f       	mul	r17, r18
    2054:	e0 01       	movw	r28, r0
    2056:	13 9f       	mul	r17, r19
    2058:	d0 0d       	add	r29, r0
    205a:	11 24       	eor	r1, r1
    205c:	c8 0f       	add	r28, r24
    205e:	d1 1d       	adc	r29, r1
    2060:	87 fd       	sbrc	r24, 7
    2062:	da 95       	dec	r29
    2064:	e0 97       	sbiw	r28, 0x30	; 48
    2066:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <__data_end>
    206a:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <__data_end+0x1>
    206e:	01 96       	adiw	r24, 0x01	; 1
    2070:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <__data_end+0x1>
    2074:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <__data_end>
    2078:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <_ZL16currentCharacterv>
    207c:	e5 cf       	rjmp	.-54     	; 0x2048 <_ZL9getNumberv+0x10>
    207e:	ce 01       	movw	r24, r28
    2080:	df 91       	pop	r29
    2082:	cf 91       	pop	r28
    2084:	1f 91       	pop	r17
    2086:	08 95       	ret

00002088 <_ZN15OrangutanBuzzer5init2Ev>:
    2088:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    208c:	83 e2       	ldi	r24, 0x23	; 35
    208e:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    2092:	81 e1       	ldi	r24, 0x11	; 17
    2094:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    2098:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7f8082>
    209c:	80 e1       	ldi	r24, 0x10	; 16
    209e:	97 e2       	ldi	r25, 0x27	; 39
    20a0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    20a4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    20a8:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    20ac:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    20b0:	22 9a       	sbi	0x04, 2	; 4
    20b2:	78 94       	sei
    20b4:	08 95       	ret

000020b6 <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
    20b6:	8f 92       	push	r8
    20b8:	9f 92       	push	r9
    20ba:	af 92       	push	r10
    20bc:	bf 92       	push	r11
    20be:	df 92       	push	r13
    20c0:	ef 92       	push	r14
    20c2:	ff 92       	push	r15
    20c4:	0f 93       	push	r16
    20c6:	1f 93       	push	r17
    20c8:	cf 93       	push	r28
    20ca:	df 93       	push	r29
    20cc:	5c 01       	movw	r10, r24
    20ce:	8b 01       	movw	r16, r22
    20d0:	d4 2e       	mov	r13, r20
    20d2:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <buzzerInitialized>
    20d6:	81 11       	cpse	r24, r1
    20d8:	05 c0       	rjmp	.+10     	; 0x20e4 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
    20da:	81 e0       	ldi	r24, 0x01	; 1
    20dc:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <buzzerInitialized>
    20e0:	0e 94 44 10 	call	0x2088	; 0x2088 <_ZN15OrangutanBuzzer5init2Ev>
    20e4:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <buzzerFinished>
    20e8:	b7 fe       	sbrs	r11, 7
    20ea:	05 c0       	rjmp	.+10     	; 0x20f6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
    20ec:	e8 94       	clt
    20ee:	b7 f8       	bld	r11, 7
    20f0:	2a e0       	ldi	r18, 0x0A	; 10
    20f2:	f2 2e       	mov	r15, r18
    20f4:	02 c0       	rjmp	.+4      	; 0x20fa <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
    20f6:	ff 24       	eor	r15, r15
    20f8:	f3 94       	inc	r15
    20fa:	e0 90 81 00 	lds	r14, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    20fe:	2e 2d       	mov	r18, r14
    2100:	28 7f       	andi	r18, 0xF8	; 248
    2102:	e2 2e       	mov	r14, r18
    2104:	48 ec       	ldi	r20, 0xC8	; 200
    2106:	f4 9e       	mul	r15, r20
    2108:	c0 01       	movw	r24, r0
    210a:	11 24       	eor	r1, r1
    210c:	8a 15       	cp	r24, r10
    210e:	9b 05       	cpc	r25, r11
    2110:	e0 f4       	brcc	.+56     	; 0x214a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
    2112:	e5 01       	movw	r28, r10
    2114:	51 e1       	ldi	r21, 0x11	; 17
    2116:	a5 16       	cp	r10, r21
    2118:	57 e2       	ldi	r21, 0x27	; 39
    211a:	b5 06       	cpc	r11, r21
    211c:	10 f0       	brcs	.+4      	; 0x2122 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
    211e:	c0 e1       	ldi	r28, 0x10	; 16
    2120:	d7 e2       	ldi	r29, 0x27	; 39
    2122:	be 01       	movw	r22, r28
    2124:	76 95       	lsr	r23
    2126:	67 95       	ror	r22
    2128:	80 e0       	ldi	r24, 0x00	; 0
    212a:	90 e0       	ldi	r25, 0x00	; 0
    212c:	60 58       	subi	r22, 0x80	; 128
    212e:	79 46       	sbci	r23, 0x69	; 105
    2130:	87 46       	sbci	r24, 0x67	; 103
    2132:	9f 4f       	sbci	r25, 0xFF	; 255
    2134:	4e 01       	movw	r8, r28
    2136:	a1 2c       	mov	r10, r1
    2138:	b1 2c       	mov	r11, r1
    213a:	a5 01       	movw	r20, r10
    213c:	94 01       	movw	r18, r8
    213e:	0e 94 3d 1d 	call	0x3a7a	; 0x3a7a <__udivmodsi4>
    2142:	59 01       	movw	r10, r18
    2144:	8e 2d       	mov	r24, r14
    2146:	81 60       	ori	r24, 0x01	; 1
    2148:	24 c0       	rjmp	.+72     	; 0x2192 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
    214a:	c8 e2       	ldi	r28, 0x28	; 40
    214c:	fc 9e       	mul	r15, r28
    214e:	c0 2d       	mov	r28, r0
    2150:	11 24       	eor	r1, r1
    2152:	d0 e0       	ldi	r29, 0x00	; 0
    2154:	ca 15       	cp	r28, r10
    2156:	db 05       	cpc	r29, r11
    2158:	08 f4       	brcc	.+2      	; 0x215c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
    215a:	e5 01       	movw	r28, r10
    215c:	be 01       	movw	r22, r28
    215e:	76 95       	lsr	r23
    2160:	67 95       	ror	r22
    2162:	9e 01       	movw	r18, r28
    2164:	40 e0       	ldi	r20, 0x00	; 0
    2166:	50 e0       	ldi	r21, 0x00	; 0
    2168:	8a e0       	ldi	r24, 0x0A	; 10
    216a:	f8 12       	cpse	r15, r24
    216c:	07 c0       	rjmp	.+14     	; 0x217c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
    216e:	80 e0       	ldi	r24, 0x00	; 0
    2170:	90 e0       	ldi	r25, 0x00	; 0
    2172:	60 5e       	subi	r22, 0xE0	; 224
    2174:	73 44       	sbci	r23, 0x43	; 67
    2176:	81 44       	sbci	r24, 0x41	; 65
    2178:	9f 4f       	sbci	r25, 0xFF	; 255
    217a:	06 c0       	rjmp	.+12     	; 0x2188 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
    217c:	80 e0       	ldi	r24, 0x00	; 0
    217e:	90 e0       	ldi	r25, 0x00	; 0
    2180:	60 53       	subi	r22, 0x30	; 48
    2182:	7d 4e       	sbci	r23, 0xED	; 237
    2184:	8c 4e       	sbci	r24, 0xEC	; 236
    2186:	9f 4f       	sbci	r25, 0xFF	; 255
    2188:	0e 94 3d 1d 	call	0x3a7a	; 0x3a7a <__udivmodsi4>
    218c:	59 01       	movw	r10, r18
    218e:	8e 2d       	mov	r24, r14
    2190:	82 60       	ori	r24, 0x02	; 2
    2192:	88 2e       	mov	r8, r24
    2194:	2a e0       	ldi	r18, 0x0A	; 10
    2196:	f2 12       	cpse	r15, r18
    2198:	07 c0       	rjmp	.+14     	; 0x21a8 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
    219a:	ce 01       	movw	r24, r28
    219c:	05 96       	adiw	r24, 0x05	; 5
    219e:	6a e0       	ldi	r22, 0x0A	; 10
    21a0:	70 e0       	ldi	r23, 0x00	; 0
    21a2:	0e 94 15 1d 	call	0x3a2a	; 0x3a2a <__udivmodhi4>
    21a6:	eb 01       	movw	r28, r22
    21a8:	c8 3e       	cpi	r28, 0xE8	; 232
    21aa:	43 e0       	ldi	r20, 0x03	; 3
    21ac:	d4 07       	cpc	r29, r20
    21ae:	59 f0       	breq	.+22     	; 0x21c6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
    21b0:	98 01       	movw	r18, r16
    21b2:	de 01       	movw	r26, r28
    21b4:	0e 94 84 1d 	call	0x3b08	; 0x3b08 <__umulhisi3>
    21b8:	28 ee       	ldi	r18, 0xE8	; 232
    21ba:	33 e0       	ldi	r19, 0x03	; 3
    21bc:	40 e0       	ldi	r20, 0x00	; 0
    21be:	50 e0       	ldi	r21, 0x00	; 0
    21c0:	0e 94 5f 1d 	call	0x3abe	; 0x3abe <__divmodsi4>
    21c4:	89 01       	movw	r16, r18
    21c6:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    21ca:	80 92 81 00 	sts	0x0081, r8	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    21ce:	b0 92 89 00 	sts	0x0089, r11	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    21d2:	a0 92 88 00 	sts	0x0088, r10	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    21d6:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    21da:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    21de:	4d 2d       	mov	r20, r13
    21e0:	40 31       	cpi	r20, 0x10	; 16
    21e2:	08 f0       	brcs	.+2      	; 0x21e6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
    21e4:	4f e0       	ldi	r20, 0x0F	; 15
    21e6:	80 e1       	ldi	r24, 0x10	; 16
    21e8:	90 e0       	ldi	r25, 0x00	; 0
    21ea:	84 1b       	sub	r24, r20
    21ec:	91 09       	sbc	r25, r1
    21ee:	a9 01       	movw	r20, r18
    21f0:	02 c0       	rjmp	.+4      	; 0x21f6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
    21f2:	56 95       	lsr	r21
    21f4:	47 95       	ror	r20
    21f6:	8a 95       	dec	r24
    21f8:	e2 f7       	brpl	.-8      	; 0x21f2 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
    21fa:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    21fe:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    2202:	10 93 94 01 	sts	0x0194, r17	; 0x800194 <_ZL13buzzerTimeout+0x1>
    2206:	00 93 93 01 	sts	0x0193, r16	; 0x800193 <_ZL13buzzerTimeout>
    220a:	86 b3       	in	r24, 0x16	; 22
    220c:	8f ef       	ldi	r24, 0xFF	; 255
    220e:	86 bb       	out	0x16, r24	; 22
    2210:	81 e0       	ldi	r24, 0x01	; 1
    2212:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    2216:	df 91       	pop	r29
    2218:	cf 91       	pop	r28
    221a:	1f 91       	pop	r17
    221c:	0f 91       	pop	r16
    221e:	ff 90       	pop	r15
    2220:	ef 90       	pop	r14
    2222:	df 90       	pop	r13
    2224:	bf 90       	pop	r11
    2226:	af 90       	pop	r10
    2228:	9f 90       	pop	r9
    222a:	8f 90       	pop	r8
    222c:	08 95       	ret

0000222e <_ZN15OrangutanBuzzer8playNoteEhjh>:
    222e:	cf 93       	push	r28
    2230:	df 93       	push	r29
    2232:	eb 01       	movw	r28, r22
    2234:	8f 3f       	cpi	r24, 0xFF	; 255
    2236:	11 f0       	breq	.+4      	; 0x223c <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
    2238:	41 11       	cpse	r20, r1
    223a:	05 c0       	rjmp	.+10     	; 0x2246 <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
    223c:	40 e0       	ldi	r20, 0x00	; 0
    223e:	be 01       	movw	r22, r28
    2240:	88 ee       	ldi	r24, 0xE8	; 232
    2242:	93 e0       	ldi	r25, 0x03	; 3
    2244:	43 c0       	rjmp	.+134    	; 0x22cc <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
    2246:	81 31       	cpi	r24, 0x11	; 17
    2248:	30 f0       	brcs	.+12     	; 0x2256 <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
    224a:	50 ef       	ldi	r21, 0xF0	; 240
    224c:	58 0f       	add	r21, r24
    224e:	50 36       	cpi	r21, 0x60	; 96
    2250:	18 f0       	brcs	.+6      	; 0x2258 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    2252:	5f e5       	ldi	r21, 0x5F	; 95
    2254:	01 c0       	rjmp	.+2      	; 0x2258 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    2256:	50 e0       	ldi	r21, 0x00	; 0
    2258:	85 2f       	mov	r24, r21
    225a:	6c e0       	ldi	r22, 0x0C	; 12
    225c:	0e 94 09 1d 	call	0x3a12	; 0x3a12 <__udivmodqi4>
    2260:	68 2f       	mov	r22, r24
    2262:	74 ef       	ldi	r23, 0xF4	; 244
    2264:	76 03       	mulsu	r23, r22
    2266:	90 01       	movw	r18, r0
    2268:	11 24       	eor	r1, r1
    226a:	25 0f       	add	r18, r21
    226c:	31 1d       	adc	r19, r1
    226e:	2c 30       	cpi	r18, 0x0C	; 12
    2270:	31 05       	cpc	r19, r1
    2272:	40 f4       	brcc	.+16     	; 0x2284 <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
    2274:	f9 01       	movw	r30, r18
    2276:	ee 0f       	add	r30, r30
    2278:	ff 1f       	adc	r31, r31
    227a:	e8 5c       	subi	r30, 0xC8	; 200
    227c:	fe 4f       	sbci	r31, 0xFE	; 254
    227e:	20 81       	ld	r18, Z
    2280:	31 81       	ldd	r19, Z+1	; 0x01
    2282:	02 c0       	rjmp	.+4      	; 0x2288 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
    2284:	20 e0       	ldi	r18, 0x00	; 0
    2286:	30 e0       	ldi	r19, 0x00	; 0
    2288:	87 30       	cpi	r24, 0x07	; 7
    228a:	81 f0       	breq	.+32     	; 0x22ac <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
    228c:	08 2e       	mov	r0, r24
    228e:	02 c0       	rjmp	.+4      	; 0x2294 <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
    2290:	22 0f       	add	r18, r18
    2292:	33 1f       	adc	r19, r19
    2294:	0a 94       	dec	r0
    2296:	e2 f7       	brpl	.-8      	; 0x2290 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
    2298:	82 30       	cpi	r24, 0x02	; 2
    229a:	28 f0       	brcs	.+10     	; 0x22a6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
    229c:	c9 01       	movw	r24, r18
    229e:	05 96       	adiw	r24, 0x05	; 5
    22a0:	6a e0       	ldi	r22, 0x0A	; 10
    22a2:	70 e0       	ldi	r23, 0x00	; 0
    22a4:	0c c0       	rjmp	.+24     	; 0x22be <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
    22a6:	c9 01       	movw	r24, r18
    22a8:	90 58       	subi	r25, 0x80	; 128
    22aa:	0c c0       	rjmp	.+24     	; 0x22c4 <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
    22ac:	c9 01       	movw	r24, r18
    22ae:	36 e0       	ldi	r19, 0x06	; 6
    22b0:	88 0f       	add	r24, r24
    22b2:	99 1f       	adc	r25, r25
    22b4:	3a 95       	dec	r19
    22b6:	e1 f7       	brne	.-8      	; 0x22b0 <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
    22b8:	02 96       	adiw	r24, 0x02	; 2
    22ba:	65 e0       	ldi	r22, 0x05	; 5
    22bc:	70 e0       	ldi	r23, 0x00	; 0
    22be:	0e 94 15 1d 	call	0x3a2a	; 0x3a2a <__udivmodhi4>
    22c2:	cb 01       	movw	r24, r22
    22c4:	40 31       	cpi	r20, 0x10	; 16
    22c6:	08 f0       	brcs	.+2      	; 0x22ca <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
    22c8:	4f e0       	ldi	r20, 0x0F	; 15
    22ca:	be 01       	movw	r22, r28
    22cc:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    22d0:	df 91       	pop	r29
    22d2:	cf 91       	pop	r28
    22d4:	08 95       	ret

000022d6 <_ZL8nextNotev>:
    22d6:	a2 e0       	ldi	r26, 0x02	; 2
    22d8:	b0 e0       	ldi	r27, 0x00	; 0
    22da:	e1 e7       	ldi	r30, 0x71	; 113
    22dc:	f1 e1       	ldi	r31, 0x11	; 17
    22de:	0c 94 a8 1d 	jmp	0x3b50	; 0x3b50 <__prologue_saves__+0x4>
    22e2:	90 90 0a 01 	lds	r9, 0x010A	; 0x80010a <_ZL6octave>
    22e6:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <_ZL8staccato>
    22ea:	88 23       	and	r24, r24
    22ec:	21 f0       	breq	.+8      	; 0x22f6 <_ZL8nextNotev+0x20>
    22ee:	60 91 8f 01 	lds	r22, 0x018F	; 0x80018f <_ZL22staccato_rest_duration>
    22f2:	61 11       	cpse	r22, r1
    22f4:	17 c0       	rjmp	.+46     	; 0x2324 <_ZL8nextNotev+0x4e>
    22f6:	77 24       	eor	r7, r7
    22f8:	73 94       	inc	r7
    22fa:	b0 ec       	ldi	r27, 0xC0	; 192
    22fc:	ab 2e       	mov	r10, r27
    22fe:	bd e5       	ldi	r27, 0x5D	; 93
    2300:	bb 2e       	mov	r11, r27
    2302:	1a e0       	ldi	r17, 0x0A	; 10
    2304:	61 2e       	mov	r6, r17
    2306:	04 e0       	ldi	r16, 0x04	; 4
    2308:	80 2e       	mov	r8, r16
    230a:	80 ed       	ldi	r24, 0xD0	; 208
    230c:	c8 2e       	mov	r12, r24
    230e:	87 e0       	ldi	r24, 0x07	; 7
    2310:	d8 2e       	mov	r13, r24
    2312:	94 e0       	ldi	r25, 0x04	; 4
    2314:	e9 2e       	mov	r14, r25
    2316:	f1 2c       	mov	r15, r1
    2318:	04 ef       	ldi	r16, 0xF4	; 244
    231a:	11 e0       	ldi	r17, 0x01	; 1
    231c:	2f e0       	ldi	r18, 0x0F	; 15
    231e:	42 2e       	mov	r4, r18
    2320:	51 2c       	mov	r5, r1
    2322:	15 c0       	rjmp	.+42     	; 0x234e <_ZL8nextNotev+0x78>
    2324:	70 e0       	ldi	r23, 0x00	; 0
    2326:	40 e0       	ldi	r20, 0x00	; 0
    2328:	88 ee       	ldi	r24, 0xE8	; 232
    232a:	93 e0       	ldi	r25, 0x03	; 3
    232c:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    2330:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <_ZL22staccato_rest_duration>
    2334:	17 c1       	rjmp	.+558    	; 0x2564 <_ZL8nextNotev+0x28e>
    2336:	86 36       	cpi	r24, 0x66	; 102
    2338:	d4 f5       	brge	.+116    	; 0x23ae <_ZL8nextNotev+0xd8>
    233a:	81 36       	cpi	r24, 0x61	; 97
    233c:	09 f4       	brne	.+2      	; 0x2340 <_ZL8nextNotev+0x6a>
    233e:	a9 c0       	rjmp	.+338    	; 0x2492 <_ZL8nextNotev+0x1bc>
    2340:	7c f5       	brge	.+94     	; 0x23a0 <_ZL8nextNotev+0xca>
    2342:	8c 33       	cpi	r24, 0x3C	; 60
    2344:	09 f4       	brne	.+2      	; 0x2348 <_ZL8nextNotev+0x72>
    2346:	60 c0       	rjmp	.+192    	; 0x2408 <_ZL8nextNotev+0x132>
    2348:	8e 33       	cpi	r24, 0x3E	; 62
    234a:	81 f4       	brne	.+32     	; 0x236c <_ZL8nextNotev+0x96>
    234c:	93 94       	inc	r9
    234e:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <_ZL16currentCharacterv>
    2352:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <__data_end>
    2356:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <__data_end+0x1>
    235a:	2f 5f       	subi	r18, 0xFF	; 255
    235c:	3f 4f       	sbci	r19, 0xFF	; 255
    235e:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    2362:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    2366:	85 36       	cpi	r24, 0x65	; 101
    2368:	31 f7       	brne	.-52     	; 0x2336 <_ZL8nextNotev+0x60>
    236a:	52 c0       	rjmp	.+164    	; 0x2410 <_ZL8nextNotev+0x13a>
    236c:	81 32       	cpi	r24, 0x21	; 33
    236e:	09 f0       	breq	.+2      	; 0x2372 <_ZL8nextNotev+0x9c>
    2370:	8b c0       	rjmp	.+278    	; 0x2488 <_ZL8nextNotev+0x1b2>
    2372:	80 92 0a 01 	sts	0x010A, r8	; 0x80010a <_ZL6octave>
    2376:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <_ZL19whole_note_duration+0x1>
    237a:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <_ZL19whole_note_duration>
    237e:	f0 92 07 01 	sts	0x0107, r15	; 0x800107 <_ZL9note_type+0x1>
    2382:	e0 92 06 01 	sts	0x0106, r14	; 0x800106 <_ZL9note_type>
    2386:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <_ZL8duration+0x1>
    238a:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <_ZL8duration>
    238e:	50 92 03 01 	sts	0x0103, r5	; 0x800103 <_ZL6volume+0x1>
    2392:	40 92 02 01 	sts	0x0102, r4	; 0x800102 <_ZL6volume>
    2396:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <_ZL8staccato>
    239a:	a4 e0       	ldi	r26, 0x04	; 4
    239c:	9a 2e       	mov	r9, r26
    239e:	d7 cf       	rjmp	.-82     	; 0x234e <_ZL8nextNotev+0x78>
    23a0:	83 36       	cpi	r24, 0x63	; 99
    23a2:	a1 f1       	breq	.+104    	; 0x240c <_ZL8nextNotev+0x136>
    23a4:	0c f4       	brge	.+2      	; 0x23a8 <_ZL8nextNotev+0xd2>
    23a6:	78 c0       	rjmp	.+240    	; 0x2498 <_ZL8nextNotev+0x1c2>
    23a8:	10 e0       	ldi	r17, 0x00	; 0
    23aa:	82 e0       	ldi	r24, 0x02	; 2
    23ac:	77 c0       	rjmp	.+238    	; 0x249c <_ZL8nextNotev+0x1c6>
    23ae:	8d 36       	cpi	r24, 0x6D	; 109
    23b0:	c1 f1       	breq	.+112    	; 0x2422 <_ZL8nextNotev+0x14c>
    23b2:	94 f4       	brge	.+36     	; 0x23d8 <_ZL8nextNotev+0x102>
    23b4:	87 36       	cpi	r24, 0x67	; 103
    23b6:	91 f1       	breq	.+100    	; 0x241c <_ZL8nextNotev+0x146>
    23b8:	74 f1       	brlt	.+92     	; 0x2416 <_ZL8nextNotev+0x140>
    23ba:	8c 36       	cpi	r24, 0x6C	; 108
    23bc:	09 f0       	breq	.+2      	; 0x23c0 <_ZL8nextNotev+0xea>
    23be:	64 c0       	rjmp	.+200    	; 0x2488 <_ZL8nextNotev+0x1b2>
    23c0:	0e 94 1c 10 	call	0x2038	; 0x2038 <_ZL9getNumberv>
    23c4:	bc 01       	movw	r22, r24
    23c6:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_ZL9note_type+0x1>
    23ca:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_ZL9note_type>
    23ce:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    23d2:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    23d6:	51 c0       	rjmp	.+162    	; 0x247a <_ZL8nextNotev+0x1a4>
    23d8:	82 37       	cpi	r24, 0x72	; 114
    23da:	c9 f1       	breq	.+114    	; 0x244e <_ZL8nextNotev+0x178>
    23dc:	4c f4       	brge	.+18     	; 0x23f0 <_ZL8nextNotev+0x11a>
    23de:	8f 36       	cpi	r24, 0x6F	; 111
    23e0:	09 f0       	breq	.+2      	; 0x23e4 <_ZL8nextNotev+0x10e>
    23e2:	52 c0       	rjmp	.+164    	; 0x2488 <_ZL8nextNotev+0x1b2>
    23e4:	0e 94 1c 10 	call	0x2038	; 0x2038 <_ZL9getNumberv>
    23e8:	98 2e       	mov	r9, r24
    23ea:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_ZL6octave>
    23ee:	af cf       	rjmp	.-162    	; 0x234e <_ZL8nextNotev+0x78>
    23f0:	84 37       	cpi	r24, 0x74	; 116
    23f2:	81 f1       	breq	.+96     	; 0x2454 <_ZL8nextNotev+0x17e>
    23f4:	86 37       	cpi	r24, 0x76	; 118
    23f6:	09 f0       	breq	.+2      	; 0x23fa <_ZL8nextNotev+0x124>
    23f8:	47 c0       	rjmp	.+142    	; 0x2488 <_ZL8nextNotev+0x1b2>
    23fa:	0e 94 1c 10 	call	0x2038	; 0x2038 <_ZL9getNumberv>
    23fe:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_ZL6volume+0x1>
    2402:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_ZL6volume>
    2406:	a3 cf       	rjmp	.-186    	; 0x234e <_ZL8nextNotev+0x78>
    2408:	9a 94       	dec	r9
    240a:	a1 cf       	rjmp	.-190    	; 0x234e <_ZL8nextNotev+0x78>
    240c:	10 e0       	ldi	r17, 0x00	; 0
    240e:	20 c0       	rjmp	.+64     	; 0x2450 <_ZL8nextNotev+0x17a>
    2410:	10 e0       	ldi	r17, 0x00	; 0
    2412:	84 e0       	ldi	r24, 0x04	; 4
    2414:	43 c0       	rjmp	.+134    	; 0x249c <_ZL8nextNotev+0x1c6>
    2416:	10 e0       	ldi	r17, 0x00	; 0
    2418:	85 e0       	ldi	r24, 0x05	; 5
    241a:	40 c0       	rjmp	.+128    	; 0x249c <_ZL8nextNotev+0x1c6>
    241c:	10 e0       	ldi	r17, 0x00	; 0
    241e:	87 e0       	ldi	r24, 0x07	; 7
    2420:	3d c0       	rjmp	.+122    	; 0x249c <_ZL8nextNotev+0x1c6>
    2422:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <_ZL16currentCharacterv>
    2426:	8c 36       	cpi	r24, 0x6C	; 108
    2428:	19 f4       	brne	.+6      	; 0x2430 <_ZL8nextNotev+0x15a>
    242a:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <_ZL8staccato>
    242e:	04 c0       	rjmp	.+8      	; 0x2438 <_ZL8nextNotev+0x162>
    2430:	70 92 90 01 	sts	0x0190, r7	; 0x800190 <_ZL8staccato>
    2434:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <_ZL22staccato_rest_duration>
    2438:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <__data_end>
    243c:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <__data_end+0x1>
    2440:	2f 5f       	subi	r18, 0xFF	; 255
    2442:	3f 4f       	sbci	r19, 0xFF	; 255
    2444:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    2448:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    244c:	80 cf       	rjmp	.-256    	; 0x234e <_ZL8nextNotev+0x78>
    244e:	11 e0       	ldi	r17, 0x01	; 1
    2450:	80 e0       	ldi	r24, 0x00	; 0
    2452:	24 c0       	rjmp	.+72     	; 0x249c <_ZL8nextNotev+0x1c6>
    2454:	0e 94 1c 10 	call	0x2038	; 0x2038 <_ZL9getNumberv>
    2458:	bc 01       	movw	r22, r24
    245a:	c5 01       	movw	r24, r10
    245c:	0e 94 15 1d 	call	0x3a2a	; 0x3a2a <__udivmodhi4>
    2460:	66 9e       	mul	r6, r22
    2462:	c0 01       	movw	r24, r0
    2464:	67 9e       	mul	r6, r23
    2466:	90 0d       	add	r25, r0
    2468:	11 24       	eor	r1, r1
    246a:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_ZL19whole_note_duration+0x1>
    246e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_ZL19whole_note_duration>
    2472:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <_ZL9note_type>
    2476:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <_ZL9note_type+0x1>
    247a:	0e 94 15 1d 	call	0x3a2a	; 0x3a2a <__udivmodhi4>
    247e:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_ZL8duration+0x1>
    2482:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_ZL8duration>
    2486:	63 cf       	rjmp	.-314    	; 0x234e <_ZL8nextNotev+0x78>
    2488:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <__data_end+0x1>
    248c:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <__data_end>
    2490:	69 c0       	rjmp	.+210    	; 0x2564 <_ZL8nextNotev+0x28e>
    2492:	10 e0       	ldi	r17, 0x00	; 0
    2494:	89 e0       	ldi	r24, 0x09	; 9
    2496:	02 c0       	rjmp	.+4      	; 0x249c <_ZL8nextNotev+0x1c6>
    2498:	10 e0       	ldi	r17, 0x00	; 0
    249a:	8b e0       	ldi	r24, 0x0B	; 11
    249c:	08 2f       	mov	r16, r24
    249e:	9c e0       	ldi	r25, 0x0C	; 12
    24a0:	99 9e       	mul	r9, r25
    24a2:	00 0d       	add	r16, r0
    24a4:	11 24       	eor	r1, r1
    24a6:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <_ZL16currentCharacterv>
    24aa:	98 2f       	mov	r25, r24
    24ac:	97 7f       	andi	r25, 0xF7	; 247
    24ae:	93 32       	cpi	r25, 0x23	; 35
    24b0:	61 f4       	brne	.+24     	; 0x24ca <_ZL8nextNotev+0x1f4>
    24b2:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <__data_end>
    24b6:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <__data_end+0x1>
    24ba:	2f 5f       	subi	r18, 0xFF	; 255
    24bc:	3f 4f       	sbci	r19, 0xFF	; 255
    24be:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    24c2:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    24c6:	0f 5f       	subi	r16, 0xFF	; 255
    24c8:	ee cf       	rjmp	.-36     	; 0x24a6 <_ZL8nextNotev+0x1d0>
    24ca:	8d 32       	cpi	r24, 0x2D	; 45
    24cc:	71 f4       	brne	.+28     	; 0x24ea <_ZL8nextNotev+0x214>
    24ce:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <__data_end>
    24d2:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <__data_end+0x1>
    24d6:	2f 5f       	subi	r18, 0xFF	; 255
    24d8:	3f 4f       	sbci	r19, 0xFF	; 255
    24da:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    24de:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    24e2:	01 50       	subi	r16, 0x01	; 1
    24e4:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <_ZL16currentCharacterv>
    24e8:	f0 cf       	rjmp	.-32     	; 0x24ca <_ZL8nextNotev+0x1f4>
    24ea:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <_ZL8duration>
    24ee:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <_ZL8duration+0x1>
    24f2:	81 53       	subi	r24, 0x31	; 49
    24f4:	88 30       	cpi	r24, 0x08	; 8
    24f6:	50 f4       	brcc	.+20     	; 0x250c <_ZL8nextNotev+0x236>
    24f8:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    24fc:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    2500:	0e 94 1c 10 	call	0x2038	; 0x2038 <_ZL9getNumberv>
    2504:	bc 01       	movw	r22, r24
    2506:	c7 01       	movw	r24, r14
    2508:	0e 94 15 1d 	call	0x3a2a	; 0x3a2a <__udivmodhi4>
    250c:	7b 01       	movw	r14, r22
    250e:	f6 94       	lsr	r15
    2510:	e7 94       	ror	r14
    2512:	69 83       	std	Y+1, r22	; 0x01
    2514:	7a 83       	std	Y+2, r23	; 0x02
    2516:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <_ZL16currentCharacterv>
    251a:	69 81       	ldd	r22, Y+1	; 0x01
    251c:	7a 81       	ldd	r23, Y+2	; 0x02
    251e:	8e 32       	cpi	r24, 0x2E	; 46
    2520:	69 f4       	brne	.+26     	; 0x253c <_ZL8nextNotev+0x266>
    2522:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <__data_end>
    2526:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <__data_end+0x1>
    252a:	2f 5f       	subi	r18, 0xFF	; 255
    252c:	3f 4f       	sbci	r19, 0xFF	; 255
    252e:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    2532:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    2536:	6e 0d       	add	r22, r14
    2538:	7f 1d       	adc	r23, r15
    253a:	e9 cf       	rjmp	.-46     	; 0x250e <_ZL8nextNotev+0x238>
    253c:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <_ZL8staccato>
    2540:	88 23       	and	r24, r24
    2542:	39 f0       	breq	.+14     	; 0x2552 <_ZL8nextNotev+0x27c>
    2544:	9b 01       	movw	r18, r22
    2546:	36 95       	lsr	r19
    2548:	27 95       	ror	r18
    254a:	20 93 8f 01 	sts	0x018F, r18	; 0x80018f <_ZL22staccato_rest_duration>
    254e:	62 1b       	sub	r22, r18
    2550:	71 09       	sbc	r23, r1
    2552:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <_ZL6volume>
    2556:	11 23       	and	r17, r17
    2558:	11 f0       	breq	.+4      	; 0x255e <_ZL8nextNotev+0x288>
    255a:	8f ef       	ldi	r24, 0xFF	; 255
    255c:	01 c0       	rjmp	.+2      	; 0x2560 <_ZL8nextNotev+0x28a>
    255e:	80 2f       	mov	r24, r16
    2560:	0e 94 17 11 	call	0x222e	; 0x222e <_ZN15OrangutanBuzzer8playNoteEhjh>
    2564:	22 96       	adiw	r28, 0x02	; 2
    2566:	e0 e1       	ldi	r30, 0x10	; 16
    2568:	0c 94 c4 1d 	jmp	0x3b88	; 0x3b88 <__epilogue_restores__+0x4>

0000256c <__vector_13>:
    256c:	1f 92       	push	r1
    256e:	0f 92       	push	r0
    2570:	0f b6       	in	r0, 0x3f	; 63
    2572:	0f 92       	push	r0
    2574:	11 24       	eor	r1, r1
    2576:	2f 93       	push	r18
    2578:	3f 93       	push	r19
    257a:	4f 93       	push	r20
    257c:	5f 93       	push	r21
    257e:	6f 93       	push	r22
    2580:	7f 93       	push	r23
    2582:	8f 93       	push	r24
    2584:	9f 93       	push	r25
    2586:	af 93       	push	r26
    2588:	bf 93       	push	r27
    258a:	ef 93       	push	r30
    258c:	ff 93       	push	r31
    258e:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <_ZL13buzzerTimeout>
    2592:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <_ZL13buzzerTimeout+0x1>
    2596:	9c 01       	movw	r18, r24
    2598:	21 50       	subi	r18, 0x01	; 1
    259a:	31 09       	sbc	r19, r1
    259c:	30 93 94 01 	sts	0x0194, r19	; 0x800194 <_ZL13buzzerTimeout+0x1>
    25a0:	20 93 93 01 	sts	0x0193, r18	; 0x800193 <_ZL13buzzerTimeout>
    25a4:	89 2b       	or	r24, r25
    25a6:	11 f5       	brne	.+68     	; 0x25ec <__vector_13+0x80>
    25a8:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    25ac:	78 94       	sei
    25ae:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    25b2:	88 7f       	andi	r24, 0xF8	; 248
    25b4:	81 60       	ori	r24, 0x01	; 1
    25b6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    25ba:	80 e1       	ldi	r24, 0x10	; 16
    25bc:	97 e2       	ldi	r25, 0x27	; 39
    25be:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    25c2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    25c6:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    25ca:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    25ce:	81 e0       	ldi	r24, 0x01	; 1
    25d0:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <buzzerFinished>
    25d4:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <__data_end>
    25d8:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <__data_end+0x1>
    25dc:	89 2b       	or	r24, r25
    25de:	31 f0       	breq	.+12     	; 0x25ec <__vector_13+0x80>
    25e0:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <_ZL17play_mode_setting>
    25e4:	81 11       	cpse	r24, r1
    25e6:	02 c0       	rjmp	.+4      	; 0x25ec <__vector_13+0x80>
    25e8:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <_ZL8nextNotev>
    25ec:	ff 91       	pop	r31
    25ee:	ef 91       	pop	r30
    25f0:	bf 91       	pop	r27
    25f2:	af 91       	pop	r26
    25f4:	9f 91       	pop	r25
    25f6:	8f 91       	pop	r24
    25f8:	7f 91       	pop	r23
    25fa:	6f 91       	pop	r22
    25fc:	5f 91       	pop	r21
    25fe:	4f 91       	pop	r20
    2600:	3f 91       	pop	r19
    2602:	2f 91       	pop	r18
    2604:	0f 90       	pop	r0
    2606:	0f be       	out	0x3f, r0	; 63
    2608:	0f 90       	pop	r0
    260a:	1f 90       	pop	r1
    260c:	18 95       	reti

0000260e <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    260e:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    2612:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <__data_end+0x1>
    2616:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <__data_end>
    261a:	81 e0       	ldi	r24, 0x01	; 1
    261c:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <_ZL17use_program_space>
    2620:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <_ZL22staccato_rest_duration>
    2624:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <_ZL8nextNotev>
    2628:	08 95       	ret

0000262a <play_from_program_space>:
    262a:	0e 94 07 13 	call	0x260e	; 0x260e <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    262e:	08 95       	ret

00002630 <delay_us.constprop.0>:
    2630:	81 e0       	ldi	r24, 0x01	; 1
    2632:	90 e0       	ldi	r25, 0x00	; 0
    2634:	6f 93       	push	r22
    2636:	64 e0       	ldi	r22, 0x04	; 4
    2638:	6a 95       	dec	r22
    263a:	f1 f7       	brne	.-4      	; 0x2638 <delay_us.constprop.0+0x8>
    263c:	6f 91       	pop	r22
    263e:	01 97       	sbiw	r24, 0x01	; 1
    2640:	c9 f7       	brne	.-14     	; 0x2634 <delay_us.constprop.0+0x4>
    2642:	08 95       	ret

00002644 <_ZN12OrangutanLCD8busyWaitEv>:
    2644:	0f 93       	push	r16
    2646:	1f 93       	push	r17
    2648:	cf 93       	push	r28
    264a:	df 93       	push	r29
    264c:	1a b1       	in	r17, 0x0a	; 10
    264e:	57 98       	cbi	0x0a, 7	; 10
    2650:	5a 98       	cbi	0x0b, 2	; 11
    2652:	28 9a       	sbi	0x05, 0	; 5
    2654:	c0 e0       	ldi	r28, 0x00	; 0
    2656:	d0 e0       	ldi	r29, 0x00	; 0
    2658:	0e 94 18 13 	call	0x2630	; 0x2630 <delay_us.constprop.0>
    265c:	5c 9a       	sbi	0x0b, 4	; 11
    265e:	0e 94 18 13 	call	0x2630	; 0x2630 <delay_us.constprop.0>
    2662:	09 b1       	in	r16, 0x09	; 9
    2664:	5c 98       	cbi	0x0b, 4	; 11
    2666:	0e 94 18 13 	call	0x2630	; 0x2630 <delay_us.constprop.0>
    266a:	5c 9a       	sbi	0x0b, 4	; 11
    266c:	0e 94 18 13 	call	0x2630	; 0x2630 <delay_us.constprop.0>
    2670:	5c 98       	cbi	0x0b, 4	; 11
    2672:	24 96       	adiw	r28, 0x04	; 4
    2674:	07 ff       	sbrs	r16, 7
    2676:	10 c0       	rjmp	.+32     	; 0x2698 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    2678:	ae 01       	movw	r20, r28
    267a:	60 e0       	ldi	r22, 0x00	; 0
    267c:	70 e0       	ldi	r23, 0x00	; 0
    267e:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <lcdTimeout>
    2682:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <lcdTimeout+0x1>
    2686:	a0 91 97 01 	lds	r26, 0x0197	; 0x800197 <lcdTimeout+0x2>
    268a:	b0 91 98 01 	lds	r27, 0x0198	; 0x800198 <lcdTimeout+0x3>
    268e:	48 17       	cp	r20, r24
    2690:	59 07       	cpc	r21, r25
    2692:	6a 07       	cpc	r22, r26
    2694:	7b 07       	cpc	r23, r27
    2696:	00 f3       	brcs	.-64     	; 0x2658 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    2698:	1a b9       	out	0x0a, r17	; 10
    269a:	df 91       	pop	r29
    269c:	cf 91       	pop	r28
    269e:	1f 91       	pop	r17
    26a0:	0f 91       	pop	r16
    26a2:	08 95       	ret

000026a4 <_ZN12OrangutanLCD8sendDataEh>:
    26a4:	95 b1       	in	r25, 0x05	; 5
    26a6:	28 2f       	mov	r18, r24
    26a8:	21 70       	andi	r18, 0x01	; 1
    26aa:	30 e0       	ldi	r19, 0x00	; 0
    26ac:	22 0f       	add	r18, r18
    26ae:	33 1f       	adc	r19, r19
    26b0:	48 2f       	mov	r20, r24
    26b2:	46 70       	andi	r20, 0x06	; 6
    26b4:	68 e0       	ldi	r22, 0x08	; 8
    26b6:	46 9f       	mul	r20, r22
    26b8:	a0 01       	movw	r20, r0
    26ba:	11 24       	eor	r1, r1
    26bc:	24 2b       	or	r18, r20
    26be:	9d 7c       	andi	r25, 0xCD	; 205
    26c0:	29 2b       	or	r18, r25
    26c2:	25 b9       	out	0x05, r18	; 5
    26c4:	9b b1       	in	r25, 0x0b	; 11
    26c6:	88 70       	andi	r24, 0x08	; 8
    26c8:	82 95       	swap	r24
    26ca:	80 7f       	andi	r24, 0xF0	; 240
    26cc:	9f 77       	andi	r25, 0x7F	; 127
    26ce:	89 2b       	or	r24, r25
    26d0:	8b b9       	out	0x0b, r24	; 11
    26d2:	5c 9a       	sbi	0x0b, 4	; 11
    26d4:	0e 94 18 13 	call	0x2630	; 0x2630 <delay_us.constprop.0>
    26d8:	5c 98       	cbi	0x0b, 4	; 11
    26da:	0e 94 18 13 	call	0x2630	; 0x2630 <delay_us.constprop.0>
    26de:	08 95       	ret

000026e0 <_ZN12OrangutanLCD4sendEhhh>:
    26e0:	a0 e0       	ldi	r26, 0x00	; 0
    26e2:	b0 e0       	ldi	r27, 0x00	; 0
    26e4:	e6 e7       	ldi	r30, 0x76	; 118
    26e6:	f3 e1       	ldi	r31, 0x13	; 19
    26e8:	0c 94 b1 1d 	jmp	0x3b62	; 0x3b62 <__prologue_saves__+0x16>
    26ec:	c8 2f       	mov	r28, r24
    26ee:	d6 2e       	mov	r13, r22
    26f0:	e4 2e       	mov	r14, r20
    26f2:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <_ZZN12OrangutanLCD4initEvE11initialized>
    26f6:	81 11       	cpse	r24, r1
    26f8:	05 c0       	rjmp	.+10     	; 0x2704 <_ZN12OrangutanLCD4sendEhhh+0x24>
    26fa:	81 e0       	ldi	r24, 0x01	; 1
    26fc:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <_ZZN12OrangutanLCD4initEvE11initialized>
    2700:	0e 94 b6 13 	call	0x276c	; 0x276c <_ZN12OrangutanLCD5init2Ev>
    2704:	0e 94 22 13 	call	0x2644	; 0x2644 <_ZN12OrangutanLCD8busyWaitEv>
    2708:	14 b1       	in	r17, 0x04	; 4
    270a:	d5 b1       	in	r29, 0x05	; 5
    270c:	fa b0       	in	r15, 0x0a	; 10
    270e:	0b b1       	in	r16, 0x0b	; 11
    2710:	28 98       	cbi	0x05, 0	; 5
    2712:	dd 20       	and	r13, r13
    2714:	11 f0       	breq	.+4      	; 0x271a <_ZN12OrangutanLCD4sendEhhh+0x3a>
    2716:	5a 9a       	sbi	0x0b, 2	; 11
    2718:	01 c0       	rjmp	.+2      	; 0x271c <_ZN12OrangutanLCD4sendEhhh+0x3c>
    271a:	5a 98       	cbi	0x0b, 2	; 11
    271c:	94 b1       	in	r25, 0x04	; 4
    271e:	92 63       	ori	r25, 0x32	; 50
    2720:	94 b9       	out	0x04, r25	; 4
    2722:	57 9a       	sbi	0x0a, 7	; 10
    2724:	81 e0       	ldi	r24, 0x01	; 1
    2726:	e8 16       	cp	r14, r24
    2728:	29 f0       	breq	.+10     	; 0x2734 <_ZN12OrangutanLCD4sendEhhh+0x54>
    272a:	8c 2f       	mov	r24, r28
    272c:	82 95       	swap	r24
    272e:	8f 70       	andi	r24, 0x0F	; 15
    2730:	0e 94 52 13 	call	0x26a4	; 0x26a4 <_ZN12OrangutanLCD8sendDataEh>
    2734:	8c 2f       	mov	r24, r28
    2736:	8f 70       	andi	r24, 0x0F	; 15
    2738:	0e 94 52 13 	call	0x26a4	; 0x26a4 <_ZN12OrangutanLCD8sendDataEh>
    273c:	fa b8       	out	0x0a, r15	; 10
    273e:	0b b9       	out	0x0b, r16	; 11
    2740:	14 b9       	out	0x04, r17	; 4
    2742:	d5 b9       	out	0x05, r29	; 5
    2744:	cd b7       	in	r28, 0x3d	; 61
    2746:	de b7       	in	r29, 0x3e	; 62
    2748:	e7 e0       	ldi	r30, 0x07	; 7
    274a:	0c 94 cd 1d 	jmp	0x3b9a	; 0x3b9a <__epilogue_restores__+0x16>

0000274e <_ZN12OrangutanLCD8send_cmdEh>:
    274e:	42 e0       	ldi	r20, 0x02	; 2
    2750:	60 e0       	ldi	r22, 0x00	; 0
    2752:	0e 94 70 13 	call	0x26e0	; 0x26e0 <_ZN12OrangutanLCD4sendEhhh>
    2756:	08 95       	ret

00002758 <_ZN12OrangutanLCD9send_dataEh>:
    2758:	42 e0       	ldi	r20, 0x02	; 2
    275a:	61 e0       	ldi	r22, 0x01	; 1
    275c:	0e 94 70 13 	call	0x26e0	; 0x26e0 <_ZN12OrangutanLCD4sendEhhh>
    2760:	08 95       	ret

00002762 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    2762:	41 e0       	ldi	r20, 0x01	; 1
    2764:	60 e0       	ldi	r22, 0x00	; 0
    2766:	0e 94 70 13 	call	0x26e0	; 0x26e0 <_ZN12OrangutanLCD4sendEhhh>
    276a:	08 95       	ret

0000276c <_ZN12OrangutanLCD5init2Ev>:
    276c:	80 e1       	ldi	r24, 0x10	; 16
    276e:	97 e2       	ldi	r25, 0x27	; 39
    2770:	a0 e0       	ldi	r26, 0x00	; 0
    2772:	b0 e0       	ldi	r27, 0x00	; 0
    2774:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <lcdTimeout>
    2778:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <lcdTimeout+0x1>
    277c:	a0 93 97 01 	sts	0x0197, r26	; 0x800197 <lcdTimeout+0x2>
    2780:	b0 93 98 01 	sts	0x0198, r27	; 0x800198 <lcdTimeout+0x3>
    2784:	52 9a       	sbi	0x0a, 2	; 10
    2786:	20 9a       	sbi	0x04, 0	; 4
    2788:	54 9a       	sbi	0x0a, 4	; 10
    278a:	8e e1       	ldi	r24, 0x1E	; 30
    278c:	90 e0       	ldi	r25, 0x00	; 0
    278e:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
    2792:	83 e0       	ldi	r24, 0x03	; 3
    2794:	0e 94 b1 13 	call	0x2762	; 0x2762 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    2798:	86 e0       	ldi	r24, 0x06	; 6
    279a:	90 e0       	ldi	r25, 0x00	; 0
    279c:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
    27a0:	83 e0       	ldi	r24, 0x03	; 3
    27a2:	0e 94 b1 13 	call	0x2762	; 0x2762 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    27a6:	82 e0       	ldi	r24, 0x02	; 2
    27a8:	90 e0       	ldi	r25, 0x00	; 0
    27aa:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
    27ae:	83 e0       	ldi	r24, 0x03	; 3
    27b0:	0e 94 b1 13 	call	0x2762	; 0x2762 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    27b4:	82 e0       	ldi	r24, 0x02	; 2
    27b6:	90 e0       	ldi	r25, 0x00	; 0
    27b8:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
    27bc:	82 e0       	ldi	r24, 0x02	; 2
    27be:	0e 94 b1 13 	call	0x2762	; 0x2762 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    27c2:	82 e0       	ldi	r24, 0x02	; 2
    27c4:	90 e0       	ldi	r25, 0x00	; 0
    27c6:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
    27ca:	88 e2       	ldi	r24, 0x28	; 40
    27cc:	0e 94 a7 13 	call	0x274e	; 0x274e <_ZN12OrangutanLCD8send_cmdEh>
    27d0:	88 e0       	ldi	r24, 0x08	; 8
    27d2:	0e 94 a7 13 	call	0x274e	; 0x274e <_ZN12OrangutanLCD8send_cmdEh>
    27d6:	81 e0       	ldi	r24, 0x01	; 1
    27d8:	0e 94 a7 13 	call	0x274e	; 0x274e <_ZN12OrangutanLCD8send_cmdEh>
    27dc:	86 e0       	ldi	r24, 0x06	; 6
    27de:	0e 94 a7 13 	call	0x274e	; 0x274e <_ZN12OrangutanLCD8send_cmdEh>
    27e2:	8c e0       	ldi	r24, 0x0C	; 12
    27e4:	0e 94 a7 13 	call	0x274e	; 0x274e <_ZN12OrangutanLCD8send_cmdEh>
    27e8:	08 95       	ret

000027ea <_ZN12OrangutanLCD5clearEv>:
    27ea:	81 e0       	ldi	r24, 0x01	; 1
    27ec:	0e 94 a7 13 	call	0x274e	; 0x274e <_ZN12OrangutanLCD8send_cmdEh>
    27f0:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <printf_chars>
    27f4:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <printf_chars+0x1>
    27f8:	89 2b       	or	r24, r25
    27fa:	f9 f0       	breq	.+62     	; 0x283a <_ZN12OrangutanLCD5clearEv+0x50>
    27fc:	60 e0       	ldi	r22, 0x00	; 0
    27fe:	a0 e2       	ldi	r26, 0x20	; 32
    2800:	26 2f       	mov	r18, r22
    2802:	30 e0       	ldi	r19, 0x00	; 0
    2804:	70 91 0c 01 	lds	r23, 0x010C	; 0x80010c <numLCDCols>
    2808:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <numLCDRows>
    280c:	90 e0       	ldi	r25, 0x00	; 0
    280e:	01 97       	sbiw	r24, 0x01	; 1
    2810:	78 9f       	mul	r23, r24
    2812:	a0 01       	movw	r20, r0
    2814:	79 9f       	mul	r23, r25
    2816:	50 0d       	add	r21, r0
    2818:	11 24       	eor	r1, r1
    281a:	24 17       	cp	r18, r20
    281c:	35 07       	cpc	r19, r21
    281e:	4c f4       	brge	.+18     	; 0x2832 <_ZN12OrangutanLCD5clearEv+0x48>
    2820:	e0 91 9b 01 	lds	r30, 0x019B	; 0x80019b <printf_chars>
    2824:	f0 91 9c 01 	lds	r31, 0x019C	; 0x80019c <printf_chars+0x1>
    2828:	e2 0f       	add	r30, r18
    282a:	f3 1f       	adc	r31, r19
    282c:	a0 83       	st	Z, r26
    282e:	6f 5f       	subi	r22, 0xFF	; 255
    2830:	e7 cf       	rjmp	.-50     	; 0x2800 <_ZN12OrangutanLCD5clearEv+0x16>
    2832:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <col>
    2836:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <row>
    283a:	08 95       	ret

0000283c <clear>:
    283c:	0e 94 f5 13 	call	0x27ea	; 0x27ea <_ZN12OrangutanLCD5clearEv>
    2840:	08 95       	ret

00002842 <_ZN12OrangutanLCD5printEPKc>:
    2842:	cf 93       	push	r28
    2844:	df 93       	push	r29
    2846:	ec 01       	movw	r28, r24
    2848:	89 91       	ld	r24, Y+
    284a:	88 23       	and	r24, r24
    284c:	19 f0       	breq	.+6      	; 0x2854 <_ZN12OrangutanLCD5printEPKc+0x12>
    284e:	0e 94 ac 13 	call	0x2758	; 0x2758 <_ZN12OrangutanLCD9send_dataEh>
    2852:	fa cf       	rjmp	.-12     	; 0x2848 <_ZN12OrangutanLCD5printEPKc+0x6>
    2854:	df 91       	pop	r29
    2856:	cf 91       	pop	r28
    2858:	08 95       	ret

0000285a <print>:
    285a:	0e 94 21 14 	call	0x2842	; 0x2842 <_ZN12OrangutanLCD5printEPKc>
    285e:	08 95       	ret

00002860 <_ZN12OrangutanLCD5printEm>:
    2860:	aa e0       	ldi	r26, 0x0A	; 10
    2862:	b0 e0       	ldi	r27, 0x00	; 0
    2864:	e6 e3       	ldi	r30, 0x36	; 54
    2866:	f4 e1       	ldi	r31, 0x14	; 20
    2868:	0c 94 b0 1d 	jmp	0x3b60	; 0x3b60 <__prologue_saves__+0x14>
    286c:	1a e0       	ldi	r17, 0x0A	; 10
    286e:	5a e0       	ldi	r21, 0x0A	; 10
    2870:	c5 2e       	mov	r12, r21
    2872:	d1 2c       	mov	r13, r1
    2874:	e1 2c       	mov	r14, r1
    2876:	f1 2c       	mov	r15, r1
    2878:	06 2f       	mov	r16, r22
    287a:	a7 01       	movw	r20, r14
    287c:	96 01       	movw	r18, r12
    287e:	0e 94 3d 1d 	call	0x3a7a	; 0x3a7a <__udivmodsi4>
    2882:	ca 01       	movw	r24, r20
    2884:	b9 01       	movw	r22, r18
    2886:	11 50       	subi	r17, 0x01	; 1
    2888:	e1 e0       	ldi	r30, 0x01	; 1
    288a:	f0 e0       	ldi	r31, 0x00	; 0
    288c:	ec 0f       	add	r30, r28
    288e:	fd 1f       	adc	r31, r29
    2890:	e1 0f       	add	r30, r17
    2892:	f1 1d       	adc	r31, r1
    2894:	00 5d       	subi	r16, 0xD0	; 208
    2896:	2a e0       	ldi	r18, 0x0A	; 10
    2898:	62 9f       	mul	r22, r18
    289a:	00 19       	sub	r16, r0
    289c:	11 24       	eor	r1, r1
    289e:	00 83       	st	Z, r16
    28a0:	61 15       	cp	r22, r1
    28a2:	71 05       	cpc	r23, r1
    28a4:	81 05       	cpc	r24, r1
    28a6:	91 05       	cpc	r25, r1
    28a8:	39 f7       	brne	.-50     	; 0x2878 <_ZN12OrangutanLCD5printEm+0x18>
    28aa:	1a 30       	cpi	r17, 0x0A	; 10
    28ac:	58 f4       	brcc	.+22     	; 0x28c4 <_ZN12OrangutanLCD5printEm+0x64>
    28ae:	e1 e0       	ldi	r30, 0x01	; 1
    28b0:	f0 e0       	ldi	r31, 0x00	; 0
    28b2:	ec 0f       	add	r30, r28
    28b4:	fd 1f       	adc	r31, r29
    28b6:	e1 0f       	add	r30, r17
    28b8:	f1 1d       	adc	r31, r1
    28ba:	80 81       	ld	r24, Z
    28bc:	0e 94 ac 13 	call	0x2758	; 0x2758 <_ZN12OrangutanLCD9send_dataEh>
    28c0:	1f 5f       	subi	r17, 0xFF	; 255
    28c2:	f3 cf       	rjmp	.-26     	; 0x28aa <_ZN12OrangutanLCD5printEm+0x4a>
    28c4:	2a 96       	adiw	r28, 0x0a	; 10
    28c6:	e8 e0       	ldi	r30, 0x08	; 8
    28c8:	0c 94 cc 1d 	jmp	0x3b98	; 0x3b98 <__epilogue_restores__+0x14>

000028cc <_ZN12OrangutanLCD5printEl>:
    28cc:	cf 92       	push	r12
    28ce:	df 92       	push	r13
    28d0:	ef 92       	push	r14
    28d2:	ff 92       	push	r15
    28d4:	6b 01       	movw	r12, r22
    28d6:	7c 01       	movw	r14, r24
    28d8:	97 ff       	sbrs	r25, 7
    28da:	0b c0       	rjmp	.+22     	; 0x28f2 <_ZN12OrangutanLCD5printEl+0x26>
    28dc:	f0 94       	com	r15
    28de:	e0 94       	com	r14
    28e0:	d0 94       	com	r13
    28e2:	c0 94       	com	r12
    28e4:	c1 1c       	adc	r12, r1
    28e6:	d1 1c       	adc	r13, r1
    28e8:	e1 1c       	adc	r14, r1
    28ea:	f1 1c       	adc	r15, r1
    28ec:	8d e2       	ldi	r24, 0x2D	; 45
    28ee:	0e 94 ac 13 	call	0x2758	; 0x2758 <_ZN12OrangutanLCD9send_dataEh>
    28f2:	c7 01       	movw	r24, r14
    28f4:	b6 01       	movw	r22, r12
    28f6:	0e 94 30 14 	call	0x2860	; 0x2860 <_ZN12OrangutanLCD5printEm>
    28fa:	ff 90       	pop	r15
    28fc:	ef 90       	pop	r14
    28fe:	df 90       	pop	r13
    2900:	cf 90       	pop	r12
    2902:	08 95       	ret

00002904 <print_long>:
    2904:	0e 94 66 14 	call	0x28cc	; 0x28cc <_ZN12OrangutanLCD5printEl>
    2908:	08 95       	ret

0000290a <_ZN12OrangutanLCD6gotoXYEhh>:
    290a:	a5 e0       	ldi	r26, 0x05	; 5
    290c:	b0 e0       	ldi	r27, 0x00	; 0
    290e:	eb e8       	ldi	r30, 0x8B	; 139
    2910:	f4 e1       	ldi	r31, 0x14	; 20
    2912:	0c 94 b5 1d 	jmp	0x3b6a	; 0x3b6a <__prologue_saves__+0x1e>
    2916:	18 2f       	mov	r17, r24
    2918:	80 e8       	ldi	r24, 0x80	; 128
    291a:	89 83       	std	Y+1, r24	; 0x01
    291c:	80 ec       	ldi	r24, 0xC0	; 192
    291e:	8a 83       	std	Y+2, r24	; 0x02
    2920:	84 e9       	ldi	r24, 0x94	; 148
    2922:	8b 83       	std	Y+3, r24	; 0x03
    2924:	84 ed       	ldi	r24, 0xD4	; 212
    2926:	8c 83       	std	Y+4, r24	; 0x04
    2928:	fe 01       	movw	r30, r28
    292a:	e6 0f       	add	r30, r22
    292c:	f1 1d       	adc	r31, r1
    292e:	81 81       	ldd	r24, Z+1	; 0x01
    2930:	81 0f       	add	r24, r17
    2932:	6d 83       	std	Y+5, r22	; 0x05
    2934:	0e 94 a7 13 	call	0x274e	; 0x274e <_ZN12OrangutanLCD8send_cmdEh>
    2938:	10 93 99 01 	sts	0x0199, r17	; 0x800199 <col>
    293c:	6d 81       	ldd	r22, Y+5	; 0x05
    293e:	60 93 9a 01 	sts	0x019A, r22	; 0x80019a <row>
    2942:	25 96       	adiw	r28, 0x05	; 5
    2944:	e3 e0       	ldi	r30, 0x03	; 3
    2946:	0c 94 d1 1d 	jmp	0x3ba2	; 0x3ba2 <__epilogue_restores__+0x1e>

0000294a <lcd_goto_xy>:
    294a:	0e 94 85 14 	call	0x290a	; 0x290a <_ZN12OrangutanLCD6gotoXYEhh>
    294e:	08 95       	ret

00002950 <_ZN16OrangutanDigital9setOutputEhh>:
    2950:	88 30       	cpi	r24, 0x08	; 8
    2952:	58 f4       	brcc	.+22     	; 0x296a <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    2954:	91 e0       	ldi	r25, 0x01	; 1
    2956:	01 c0       	rjmp	.+2      	; 0x295a <_ZN16OrangutanDigital9setOutputEhh+0xa>
    2958:	99 0f       	add	r25, r25
    295a:	8a 95       	dec	r24
    295c:	ea f7       	brpl	.-6      	; 0x2958 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    295e:	89 2f       	mov	r24, r25
    2960:	aa e2       	ldi	r26, 0x2A	; 42
    2962:	b0 e0       	ldi	r27, 0x00	; 0
    2964:	eb e2       	ldi	r30, 0x2B	; 43
    2966:	f0 e0       	ldi	r31, 0x00	; 0
    2968:	21 c0       	rjmp	.+66     	; 0x29ac <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    296a:	8e 30       	cpi	r24, 0x0E	; 14
    296c:	60 f4       	brcc	.+24     	; 0x2986 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    296e:	98 ef       	ldi	r25, 0xF8	; 248
    2970:	98 0f       	add	r25, r24
    2972:	81 e0       	ldi	r24, 0x01	; 1
    2974:	01 c0       	rjmp	.+2      	; 0x2978 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    2976:	88 0f       	add	r24, r24
    2978:	9a 95       	dec	r25
    297a:	ea f7       	brpl	.-6      	; 0x2976 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    297c:	a4 e2       	ldi	r26, 0x24	; 36
    297e:	b0 e0       	ldi	r27, 0x00	; 0
    2980:	e5 e2       	ldi	r30, 0x25	; 37
    2982:	f0 e0       	ldi	r31, 0x00	; 0
    2984:	13 c0       	rjmp	.+38     	; 0x29ac <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    2986:	85 31       	cpi	r24, 0x15	; 21
    2988:	60 f4       	brcc	.+24     	; 0x29a2 <_ZN16OrangutanDigital9setOutputEhh+0x52>
    298a:	92 ef       	ldi	r25, 0xF2	; 242
    298c:	98 0f       	add	r25, r24
    298e:	81 e0       	ldi	r24, 0x01	; 1
    2990:	01 c0       	rjmp	.+2      	; 0x2994 <_ZN16OrangutanDigital9setOutputEhh+0x44>
    2992:	88 0f       	add	r24, r24
    2994:	9a 95       	dec	r25
    2996:	ea f7       	brpl	.-6      	; 0x2992 <_ZN16OrangutanDigital9setOutputEhh+0x42>
    2998:	a7 e2       	ldi	r26, 0x27	; 39
    299a:	b0 e0       	ldi	r27, 0x00	; 0
    299c:	e8 e2       	ldi	r30, 0x28	; 40
    299e:	f0 e0       	ldi	r31, 0x00	; 0
    29a0:	05 c0       	rjmp	.+10     	; 0x29ac <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    29a2:	80 e0       	ldi	r24, 0x00	; 0
    29a4:	a0 e0       	ldi	r26, 0x00	; 0
    29a6:	b0 e0       	ldi	r27, 0x00	; 0
    29a8:	e0 e0       	ldi	r30, 0x00	; 0
    29aa:	f0 e0       	ldi	r31, 0x00	; 0
    29ac:	6f 3f       	cpi	r22, 0xFF	; 255
    29ae:	19 f4       	brne	.+6      	; 0x29b6 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    29b0:	90 81       	ld	r25, Z
    29b2:	98 27       	eor	r25, r24
    29b4:	09 c0       	rjmp	.+18     	; 0x29c8 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    29b6:	66 23       	and	r22, r22
    29b8:	19 f0       	breq	.+6      	; 0x29c0 <_ZN16OrangutanDigital9setOutputEhh+0x70>
    29ba:	90 81       	ld	r25, Z
    29bc:	98 2b       	or	r25, r24
    29be:	04 c0       	rjmp	.+8      	; 0x29c8 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    29c0:	20 81       	ld	r18, Z
    29c2:	98 2f       	mov	r25, r24
    29c4:	90 95       	com	r25
    29c6:	92 23       	and	r25, r18
    29c8:	90 83       	st	Z, r25
    29ca:	9c 91       	ld	r25, X
    29cc:	98 2b       	or	r25, r24
    29ce:	9c 93       	st	X, r25
    29d0:	08 95       	ret

000029d2 <_ZN15OrangutanMotors5init2Ev>:
    29d2:	83 ef       	ldi	r24, 0xF3	; 243
    29d4:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    29d8:	84 bd       	out	0x24, r24	; 36
    29da:	82 e0       	ldi	r24, 0x02	; 2
    29dc:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    29e0:	85 bd       	out	0x25, r24	; 37
    29e2:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    29e6:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    29ea:	18 bc       	out	0x28, r1	; 40
    29ec:	17 bc       	out	0x27, r1	; 39
    29ee:	60 e0       	ldi	r22, 0x00	; 0
    29f0:	86 e0       	ldi	r24, 0x06	; 6
    29f2:	0e 94 a8 14 	call	0x2950	; 0x2950 <_ZN16OrangutanDigital9setOutputEhh>
    29f6:	60 e0       	ldi	r22, 0x00	; 0
    29f8:	85 e0       	ldi	r24, 0x05	; 5
    29fa:	0e 94 a8 14 	call	0x2950	; 0x2950 <_ZN16OrangutanDigital9setOutputEhh>
    29fe:	60 e0       	ldi	r22, 0x00	; 0
    2a00:	8b e0       	ldi	r24, 0x0B	; 11
    2a02:	0e 94 a8 14 	call	0x2950	; 0x2950 <_ZN16OrangutanDigital9setOutputEhh>
    2a06:	60 e0       	ldi	r22, 0x00	; 0
    2a08:	83 e0       	ldi	r24, 0x03	; 3
    2a0a:	0e 94 a8 14 	call	0x2950	; 0x2950 <_ZN16OrangutanDigital9setOutputEhh>
    2a0e:	08 95       	ret

00002a10 <_ZN15OrangutanMotors4initEv>:
    2a10:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <_ZZN15OrangutanMotors4initEvE11initialized>
    2a14:	81 11       	cpse	r24, r1
    2a16:	05 c0       	rjmp	.+10     	; 0x2a22 <_ZN15OrangutanMotors4initEv+0x12>
    2a18:	81 e0       	ldi	r24, 0x01	; 1
    2a1a:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <_ZZN15OrangutanMotors4initEvE11initialized>
    2a1e:	0e 94 e9 14 	call	0x29d2	; 0x29d2 <_ZN15OrangutanMotors5init2Ev>
    2a22:	08 95       	ret

00002a24 <_ZN15OrangutanMotors10setM1SpeedEi>:
    2a24:	cf 93       	push	r28
    2a26:	df 93       	push	r29
    2a28:	ec 01       	movw	r28, r24
    2a2a:	0e 94 08 15 	call	0x2a10	; 0x2a10 <_ZN15OrangutanMotors4initEv>
    2a2e:	d7 ff       	sbrs	r29, 7
    2a30:	05 c0       	rjmp	.+10     	; 0x2a3c <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    2a32:	d1 95       	neg	r29
    2a34:	c1 95       	neg	r28
    2a36:	d1 09       	sbc	r29, r1
    2a38:	81 e0       	ldi	r24, 0x01	; 1
    2a3a:	01 c0       	rjmp	.+2      	; 0x2a3e <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    2a3c:	80 e0       	ldi	r24, 0x00	; 0
    2a3e:	cf 3f       	cpi	r28, 0xFF	; 255
    2a40:	d1 05       	cpc	r29, r1
    2a42:	19 f0       	breq	.+6      	; 0x2a4a <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    2a44:	14 f0       	brlt	.+4      	; 0x2a4a <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    2a46:	cf ef       	ldi	r28, 0xFF	; 255
    2a48:	d0 e0       	ldi	r29, 0x00	; 0
    2a4a:	88 23       	and	r24, r24
    2a4c:	19 f0       	breq	.+6      	; 0x2a54 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    2a4e:	18 bc       	out	0x28, r1	; 40
    2a50:	c7 bd       	out	0x27, r28	; 39
    2a52:	02 c0       	rjmp	.+4      	; 0x2a58 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    2a54:	c8 bd       	out	0x28, r28	; 40
    2a56:	17 bc       	out	0x27, r1	; 39
    2a58:	df 91       	pop	r29
    2a5a:	cf 91       	pop	r28
    2a5c:	08 95       	ret

00002a5e <_ZN15OrangutanMotors10setM2SpeedEi>:
    2a5e:	cf 93       	push	r28
    2a60:	df 93       	push	r29
    2a62:	ec 01       	movw	r28, r24
    2a64:	0e 94 08 15 	call	0x2a10	; 0x2a10 <_ZN15OrangutanMotors4initEv>
    2a68:	d7 ff       	sbrs	r29, 7
    2a6a:	05 c0       	rjmp	.+10     	; 0x2a76 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    2a6c:	d1 95       	neg	r29
    2a6e:	c1 95       	neg	r28
    2a70:	d1 09       	sbc	r29, r1
    2a72:	81 e0       	ldi	r24, 0x01	; 1
    2a74:	01 c0       	rjmp	.+2      	; 0x2a78 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    2a76:	80 e0       	ldi	r24, 0x00	; 0
    2a78:	cf 3f       	cpi	r28, 0xFF	; 255
    2a7a:	d1 05       	cpc	r29, r1
    2a7c:	19 f0       	breq	.+6      	; 0x2a84 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    2a7e:	14 f0       	brlt	.+4      	; 0x2a84 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    2a80:	cf ef       	ldi	r28, 0xFF	; 255
    2a82:	d0 e0       	ldi	r29, 0x00	; 0
    2a84:	88 23       	and	r24, r24
    2a86:	29 f0       	breq	.+10     	; 0x2a92 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    2a88:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    2a8c:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    2a90:	04 c0       	rjmp	.+8      	; 0x2a9a <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    2a92:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    2a96:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    2a9a:	df 91       	pop	r29
    2a9c:	cf 91       	pop	r28
    2a9e:	08 95       	ret

00002aa0 <_ZN15OrangutanMotors9setSpeedsEii>:
    2aa0:	cf 93       	push	r28
    2aa2:	df 93       	push	r29
    2aa4:	eb 01       	movw	r28, r22
    2aa6:	0e 94 12 15 	call	0x2a24	; 0x2a24 <_ZN15OrangutanMotors10setM1SpeedEi>
    2aaa:	ce 01       	movw	r24, r28
    2aac:	0e 94 2f 15 	call	0x2a5e	; 0x2a5e <_ZN15OrangutanMotors10setM2SpeedEi>
    2ab0:	df 91       	pop	r29
    2ab2:	cf 91       	pop	r28
    2ab4:	08 95       	ret

00002ab6 <set_motors>:
    2ab6:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <_ZN15OrangutanMotors9setSpeedsEii>
    2aba:	08 95       	ret

00002abc <_ZN20OrangutanPushbuttons5init2Ev>:
    2abc:	84 b1       	in	r24, 0x04	; 4
    2abe:	8d 7c       	andi	r24, 0xCD	; 205
    2ac0:	84 b9       	out	0x04, r24	; 4
    2ac2:	85 b1       	in	r24, 0x05	; 5
    2ac4:	82 63       	ori	r24, 0x32	; 50
    2ac6:	85 b9       	out	0x05, r24	; 5
    2ac8:	85 e0       	ldi	r24, 0x05	; 5
    2aca:	90 e0       	ldi	r25, 0x00	; 0
    2acc:	6f 93       	push	r22
    2ace:	64 e0       	ldi	r22, 0x04	; 4
    2ad0:	6a 95       	dec	r22
    2ad2:	f1 f7       	brne	.-4      	; 0x2ad0 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    2ad4:	6f 91       	pop	r22
    2ad6:	01 97       	sbiw	r24, 0x01	; 1
    2ad8:	c9 f7       	brne	.-14     	; 0x2acc <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    2ada:	08 95       	ret

00002adc <_ZN20OrangutanPushbuttons4initEv>:
    2adc:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    2ae0:	81 11       	cpse	r24, r1
    2ae2:	05 c0       	rjmp	.+10     	; 0x2aee <_ZN20OrangutanPushbuttons4initEv+0x12>
    2ae4:	81 e0       	ldi	r24, 0x01	; 1
    2ae6:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    2aea:	0e 94 5e 15 	call	0x2abc	; 0x2abc <_ZN20OrangutanPushbuttons5init2Ev>
    2aee:	08 95       	ret

00002af0 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    2af0:	cf 93       	push	r28
    2af2:	c8 2f       	mov	r28, r24
    2af4:	0e 94 6e 15 	call	0x2adc	; 0x2adc <_ZN20OrangutanPushbuttons4initEv>
    2af8:	83 b1       	in	r24, 0x03	; 3
    2afa:	8c 23       	and	r24, r28
    2afc:	e9 f3       	breq	.-6      	; 0x2af8 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    2afe:	8a e0       	ldi	r24, 0x0A	; 10
    2b00:	90 e0       	ldi	r25, 0x00	; 0
    2b02:	0e 94 64 17 	call	0x2ec8	; 0x2ec8 <delay_ms>
    2b06:	83 b1       	in	r24, 0x03	; 3
    2b08:	8c 23       	and	r24, r28
    2b0a:	b1 f3       	breq	.-20     	; 0x2af8 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    2b0c:	83 b1       	in	r24, 0x03	; 3
    2b0e:	8c 23       	and	r24, r28
    2b10:	cf 91       	pop	r28
    2b12:	08 95       	ret

00002b14 <wait_for_button_release>:
    2b14:	0e 94 78 15 	call	0x2af0	; 0x2af0 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    2b18:	08 95       	ret

00002b1a <_ZN20OrangutanPushbuttons9isPressedEh>:
    2b1a:	a1 e0       	ldi	r26, 0x01	; 1
    2b1c:	b0 e0       	ldi	r27, 0x00	; 0
    2b1e:	e3 e9       	ldi	r30, 0x93	; 147
    2b20:	f5 e1       	ldi	r31, 0x15	; 21
    2b22:	0c 94 b6 1d 	jmp	0x3b6c	; 0x3b6c <__prologue_saves__+0x20>
    2b26:	89 83       	std	Y+1, r24	; 0x01
    2b28:	0e 94 6e 15 	call	0x2adc	; 0x2adc <_ZN20OrangutanPushbuttons4initEv>
    2b2c:	93 b1       	in	r25, 0x03	; 3
    2b2e:	90 95       	com	r25
    2b30:	89 81       	ldd	r24, Y+1	; 0x01
    2b32:	89 23       	and	r24, r25
    2b34:	21 96       	adiw	r28, 0x01	; 1
    2b36:	e2 e0       	ldi	r30, 0x02	; 2
    2b38:	0c 94 d2 1d 	jmp	0x3ba4	; 0x3ba4 <__epilogue_restores__+0x20>

00002b3c <button_is_pressed>:
    2b3c:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <_ZN20OrangutanPushbuttons9isPressedEh>
    2b40:	08 95       	ret

00002b42 <serial_receive_buffer_full>:
    2b42:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <_ZN15OrangutanSerial5portsE+0x2>
    2b46:	81 e0       	ldi	r24, 0x01	; 1
    2b48:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <_ZN15OrangutanSerial5portsE+0x4>
    2b4c:	29 13       	cpse	r18, r25
    2b4e:	80 e0       	ldi	r24, 0x00	; 0
    2b50:	08 95       	ret

00002b52 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
    2b52:	28 2f       	mov	r18, r24
    2b54:	30 e0       	ldi	r19, 0x00	; 0
    2b56:	9a e0       	ldi	r25, 0x0A	; 10
    2b58:	89 9f       	mul	r24, r25
    2b5a:	f0 01       	movw	r30, r0
    2b5c:	11 24       	eor	r1, r1
    2b5e:	e3 56       	subi	r30, 0x63	; 99
    2b60:	fe 4f       	sbci	r31, 0xFE	; 254
    2b62:	80 85       	ldd	r24, Z+8	; 0x08
    2b64:	91 85       	ldd	r25, Z+9	; 0x09
    2b66:	00 97       	sbiw	r24, 0x00	; 0
    2b68:	21 f0       	breq	.+8      	; 0x2b72 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    2b6a:	52 81       	ldd	r21, Z+2	; 0x02
    2b6c:	44 81       	ldd	r20, Z+4	; 0x04
    2b6e:	54 17       	cp	r21, r20
    2b70:	80 f0       	brcs	.+32     	; 0x2b92 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x40>
    2b72:	8a e0       	ldi	r24, 0x0A	; 10
    2b74:	82 9f       	mul	r24, r18
    2b76:	f0 01       	movw	r30, r0
    2b78:	83 9f       	mul	r24, r19
    2b7a:	f0 0d       	add	r31, r0
    2b7c:	11 24       	eor	r1, r1
    2b7e:	e3 56       	subi	r30, 0x63	; 99
    2b80:	fe 4f       	sbci	r31, 0xFE	; 254
    2b82:	92 81       	ldd	r25, Z+2	; 0x02
    2b84:	84 81       	ldd	r24, Z+4	; 0x04
    2b86:	98 13       	cpse	r25, r24
    2b88:	0e c0       	rjmp	.+28     	; 0x2ba6 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x54>
    2b8a:	85 81       	ldd	r24, Z+5	; 0x05
    2b8c:	81 11       	cpse	r24, r1
    2b8e:	0a c0       	rjmp	.+20     	; 0x2ba4 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
    2b90:	08 95       	ret
    2b92:	42 81       	ldd	r20, Z+2	; 0x02
    2b94:	dc 01       	movw	r26, r24
    2b96:	a4 0f       	add	r26, r20
    2b98:	b1 1d       	adc	r27, r1
    2b9a:	6c 93       	st	X, r22
    2b9c:	82 81       	ldd	r24, Z+2	; 0x02
    2b9e:	8f 5f       	subi	r24, 0xFF	; 255
    2ba0:	82 83       	std	Z+2, r24	; 0x02
    2ba2:	e7 cf       	rjmp	.-50     	; 0x2b72 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    2ba4:	12 82       	std	Z+2, r1	; 0x02
    2ba6:	08 95       	ret

00002ba8 <_ZN15OrangutanSerial15serial_rx_checkEh>:
    2ba8:	cf 93       	push	r28
    2baa:	df 93       	push	r29
    2bac:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2bb0:	9f 77       	andi	r25, 0x7F	; 127
    2bb2:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2bb6:	c8 2f       	mov	r28, r24
    2bb8:	d0 e0       	ldi	r29, 0x00	; 0
    2bba:	9a e0       	ldi	r25, 0x0A	; 10
    2bbc:	89 9f       	mul	r24, r25
    2bbe:	f0 01       	movw	r30, r0
    2bc0:	11 24       	eor	r1, r1
    2bc2:	e3 56       	subi	r30, 0x63	; 99
    2bc4:	fe 4f       	sbci	r31, 0xFE	; 254
    2bc6:	20 85       	ldd	r18, Z+8	; 0x08
    2bc8:	31 85       	ldd	r19, Z+9	; 0x09
    2bca:	23 2b       	or	r18, r19
    2bcc:	41 f0       	breq	.+16     	; 0x2bde <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2bce:	22 81       	ldd	r18, Z+2	; 0x02
    2bd0:	94 81       	ldd	r25, Z+4	; 0x04
    2bd2:	29 17       	cp	r18, r25
    2bd4:	20 f4       	brcc	.+8      	; 0x2bde <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2bd6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2bda:	97 fd       	sbrc	r25, 7
    2bdc:	11 c0       	rjmp	.+34     	; 0x2c00 <_ZN15OrangutanSerial15serial_rx_checkEh+0x58>
    2bde:	8a e0       	ldi	r24, 0x0A	; 10
    2be0:	8c 9f       	mul	r24, r28
    2be2:	f0 01       	movw	r30, r0
    2be4:	8d 9f       	mul	r24, r29
    2be6:	f0 0d       	add	r31, r0
    2be8:	11 24       	eor	r1, r1
    2bea:	e3 56       	subi	r30, 0x63	; 99
    2bec:	fe 4f       	sbci	r31, 0xFE	; 254
    2bee:	80 81       	ld	r24, Z
    2bf0:	81 11       	cpse	r24, r1
    2bf2:	0b c0       	rjmp	.+22     	; 0x2c0a <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    2bf4:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2bf8:	80 68       	ori	r24, 0x80	; 128
    2bfa:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2bfe:	05 c0       	rjmp	.+10     	; 0x2c0a <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    2c00:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2c04:	0e 94 a9 15 	call	0x2b52	; 0x2b52 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    2c08:	ea cf       	rjmp	.-44     	; 0x2bde <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2c0a:	df 91       	pop	r29
    2c0c:	cf 91       	pop	r28
    2c0e:	08 95       	ret

00002c10 <_ZN15OrangutanSerial14receive_inlineEhPchh>:
    2c10:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2c14:	9f 77       	andi	r25, 0x7F	; 127
    2c16:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2c1a:	9a e0       	ldi	r25, 0x0A	; 10
    2c1c:	89 9f       	mul	r24, r25
    2c1e:	f0 01       	movw	r30, r0
    2c20:	11 24       	eor	r1, r1
    2c22:	e3 56       	subi	r30, 0x63	; 99
    2c24:	fe 4f       	sbci	r31, 0xFE	; 254
    2c26:	71 87       	std	Z+9, r23	; 0x09
    2c28:	60 87       	std	Z+8, r22	; 0x08
    2c2a:	12 82       	std	Z+2, r1	; 0x02
    2c2c:	44 83       	std	Z+4, r20	; 0x04
    2c2e:	25 83       	std	Z+5, r18	; 0x05
    2c30:	80 81       	ld	r24, Z
    2c32:	81 11       	cpse	r24, r1
    2c34:	05 c0       	rjmp	.+10     	; 0x2c40 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x30>
    2c36:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2c3a:	80 68       	ori	r24, 0x80	; 128
    2c3c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2c40:	08 95       	ret

00002c42 <_ZN15OrangutanSerial7receiveEPch>:
    2c42:	46 2f       	mov	r20, r22
    2c44:	20 e0       	ldi	r18, 0x00	; 0
    2c46:	bc 01       	movw	r22, r24
    2c48:	80 e0       	ldi	r24, 0x00	; 0
    2c4a:	0e 94 08 16 	call	0x2c10	; 0x2c10 <_ZN15OrangutanSerial14receive_inlineEhPchh>
    2c4e:	08 95       	ret

00002c50 <serial_receive>:
    2c50:	0e 94 21 16 	call	0x2c42	; 0x2c42 <_ZN15OrangutanSerial7receiveEPch>
    2c54:	08 95       	ret

00002c56 <__vector_18>:
    2c56:	1f 92       	push	r1
    2c58:	0f 92       	push	r0
    2c5a:	0f b6       	in	r0, 0x3f	; 63
    2c5c:	0f 92       	push	r0
    2c5e:	11 24       	eor	r1, r1
    2c60:	2f 93       	push	r18
    2c62:	3f 93       	push	r19
    2c64:	4f 93       	push	r20
    2c66:	5f 93       	push	r21
    2c68:	6f 93       	push	r22
    2c6a:	7f 93       	push	r23
    2c6c:	8f 93       	push	r24
    2c6e:	9f 93       	push	r25
    2c70:	af 93       	push	r26
    2c72:	bf 93       	push	r27
    2c74:	ef 93       	push	r30
    2c76:	ff 93       	push	r31
    2c78:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2c7c:	80 e0       	ldi	r24, 0x00	; 0
    2c7e:	0e 94 a9 15 	call	0x2b52	; 0x2b52 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    2c82:	ff 91       	pop	r31
    2c84:	ef 91       	pop	r30
    2c86:	bf 91       	pop	r27
    2c88:	af 91       	pop	r26
    2c8a:	9f 91       	pop	r25
    2c8c:	8f 91       	pop	r24
    2c8e:	7f 91       	pop	r23
    2c90:	6f 91       	pop	r22
    2c92:	5f 91       	pop	r21
    2c94:	4f 91       	pop	r20
    2c96:	3f 91       	pop	r19
    2c98:	2f 91       	pop	r18
    2c9a:	0f 90       	pop	r0
    2c9c:	0f be       	out	0x3f, r0	; 63
    2c9e:	0f 90       	pop	r0
    2ca0:	1f 90       	pop	r1
    2ca2:	18 95       	reti

00002ca4 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    2ca4:	9a e0       	ldi	r25, 0x0A	; 10
    2ca6:	89 9f       	mul	r24, r25
    2ca8:	f0 01       	movw	r30, r0
    2caa:	11 24       	eor	r1, r1
    2cac:	e3 56       	subi	r30, 0x63	; 99
    2cae:	fe 4f       	sbci	r31, 0xFE	; 254
    2cb0:	86 81       	ldd	r24, Z+6	; 0x06
    2cb2:	97 81       	ldd	r25, Z+7	; 0x07
    2cb4:	89 2b       	or	r24, r25
    2cb6:	59 f0       	breq	.+22     	; 0x2cce <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2cb8:	91 81       	ldd	r25, Z+1	; 0x01
    2cba:	83 81       	ldd	r24, Z+3	; 0x03
    2cbc:	98 17       	cp	r25, r24
    2cbe:	38 f4       	brcc	.+14     	; 0x2cce <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2cc0:	80 81       	ld	r24, Z
    2cc2:	81 11       	cpse	r24, r1
    2cc4:	04 c0       	rjmp	.+8      	; 0x2cce <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2cc6:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2cca:	80 62       	ori	r24, 0x20	; 32
    2ccc:	03 c0       	rjmp	.+6      	; 0x2cd4 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x30>
    2cce:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2cd2:	8f 7d       	andi	r24, 0xDF	; 223
    2cd4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2cd8:	08 95       	ret

00002cda <_ZN15OrangutanSerial15initUART_inlineEh>:
    2cda:	9a e0       	ldi	r25, 0x0A	; 10
    2cdc:	89 9f       	mul	r24, r25
    2cde:	f0 01       	movw	r30, r0
    2ce0:	11 24       	eor	r1, r1
    2ce2:	e3 56       	subi	r30, 0x63	; 99
    2ce4:	fe 4f       	sbci	r31, 0xFE	; 254
    2ce6:	90 81       	ld	r25, Z
    2ce8:	91 11       	cpse	r25, r1
    2cea:	02 c0       	rjmp	.+4      	; 0x2cf0 <_ZN15OrangutanSerial15initUART_inlineEh+0x16>
    2cec:	98 e9       	ldi	r25, 0x98	; 152
    2cee:	01 c0       	rjmp	.+2      	; 0x2cf2 <_ZN15OrangutanSerial15initUART_inlineEh+0x18>
    2cf0:	98 e1       	ldi	r25, 0x18	; 24
    2cf2:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2cf6:	0e 94 52 16 	call	0x2ca4	; 0x2ca4 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2cfa:	78 94       	sei
    2cfc:	08 95       	ret

00002cfe <serial_set_baud_rate>:
    2cfe:	cf 92       	push	r12
    2d00:	df 92       	push	r13
    2d02:	ef 92       	push	r14
    2d04:	ff 92       	push	r15
    2d06:	6b 01       	movw	r12, r22
    2d08:	7c 01       	movw	r14, r24
    2d0a:	80 e0       	ldi	r24, 0x00	; 0
    2d0c:	0e 94 6d 16 	call	0x2cda	; 0x2cda <_ZN15OrangutanSerial15initUART_inlineEh>
    2d10:	a8 ef       	ldi	r26, 0xF8	; 248
    2d12:	bf ef       	ldi	r27, 0xFF	; 255
    2d14:	a7 01       	movw	r20, r14
    2d16:	96 01       	movw	r18, r12
    2d18:	0e 94 a1 1d 	call	0x3b42	; 0x3b42 <__mulohisi3>
    2d1c:	73 5d       	subi	r23, 0xD3	; 211
    2d1e:	8e 4c       	sbci	r24, 0xCE	; 206
    2d20:	9e 4f       	sbci	r25, 0xFE	; 254
    2d22:	e4 e0       	ldi	r30, 0x04	; 4
    2d24:	22 0f       	add	r18, r18
    2d26:	33 1f       	adc	r19, r19
    2d28:	44 1f       	adc	r20, r20
    2d2a:	55 1f       	adc	r21, r21
    2d2c:	ea 95       	dec	r30
    2d2e:	d1 f7       	brne	.-12     	; 0x2d24 <serial_set_baud_rate+0x26>
    2d30:	0e 94 3d 1d 	call	0x3a7a	; 0x3a7a <__udivmodsi4>
    2d34:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
    2d38:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
    2d3c:	ff 90       	pop	r15
    2d3e:	ef 90       	pop	r14
    2d40:	df 90       	pop	r13
    2d42:	cf 90       	pop	r12
    2d44:	08 95       	ret

00002d46 <_ZN15OrangutanSerial4sendEPch>:
    2d46:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <_ZN15OrangutanSerial5portsE+0x7>
    2d4a:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <_ZN15OrangutanSerial5portsE+0x6>
    2d4e:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <_ZN15OrangutanSerial5portsE+0x1>
    2d52:	60 93 a0 01 	sts	0x01A0, r22	; 0x8001a0 <_ZN15OrangutanSerial5portsE+0x3>
    2d56:	80 e0       	ldi	r24, 0x00	; 0
    2d58:	0e 94 52 16 	call	0x2ca4	; 0x2ca4 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2d5c:	08 95       	ret

00002d5e <serial_send>:
    2d5e:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <_ZN15OrangutanSerial4sendEPch>
    2d62:	08 95       	ret

00002d64 <_ZN15OrangutanSerial11uart_tx_isrEh>:
    2d64:	9a e0       	ldi	r25, 0x0A	; 10
    2d66:	89 9f       	mul	r24, r25
    2d68:	f0 01       	movw	r30, r0
    2d6a:	11 24       	eor	r1, r1
    2d6c:	e3 56       	subi	r30, 0x63	; 99
    2d6e:	fe 4f       	sbci	r31, 0xFE	; 254
    2d70:	26 81       	ldd	r18, Z+6	; 0x06
    2d72:	37 81       	ldd	r19, Z+7	; 0x07
    2d74:	21 15       	cp	r18, r1
    2d76:	31 05       	cpc	r19, r1
    2d78:	41 f0       	breq	.+16     	; 0x2d8a <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2d7a:	41 81       	ldd	r20, Z+1	; 0x01
    2d7c:	93 81       	ldd	r25, Z+3	; 0x03
    2d7e:	49 17       	cp	r20, r25
    2d80:	20 f4       	brcc	.+8      	; 0x2d8a <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2d82:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2d86:	95 fd       	sbrc	r25, 5
    2d88:	03 c0       	rjmp	.+6      	; 0x2d90 <_ZN15OrangutanSerial11uart_tx_isrEh+0x2c>
    2d8a:	0e 94 52 16 	call	0x2ca4	; 0x2ca4 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2d8e:	08 95       	ret
    2d90:	91 81       	ldd	r25, Z+1	; 0x01
    2d92:	d9 01       	movw	r26, r18
    2d94:	a9 0f       	add	r26, r25
    2d96:	b1 1d       	adc	r27, r1
    2d98:	9c 91       	ld	r25, X
    2d9a:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2d9e:	91 81       	ldd	r25, Z+1	; 0x01
    2da0:	9f 5f       	subi	r25, 0xFF	; 255
    2da2:	91 83       	std	Z+1, r25	; 0x01
    2da4:	f2 cf       	rjmp	.-28     	; 0x2d8a <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>

00002da6 <_ZN15OrangutanSerial5checkEv>:
    2da6:	e1 ec       	ldi	r30, 0xC1	; 193
    2da8:	f0 e0       	ldi	r31, 0x00	; 0
    2daa:	80 81       	ld	r24, Z
    2dac:	8f 7d       	andi	r24, 0xDF	; 223
    2dae:	80 83       	st	Z, r24
    2db0:	80 e0       	ldi	r24, 0x00	; 0
    2db2:	0e 94 b2 16 	call	0x2d64	; 0x2d64 <_ZN15OrangutanSerial11uart_tx_isrEh>
    2db6:	80 e0       	ldi	r24, 0x00	; 0
    2db8:	0e 94 d4 15 	call	0x2ba8	; 0x2ba8 <_ZN15OrangutanSerial15serial_rx_checkEh>
    2dbc:	08 95       	ret

00002dbe <_ZN15OrangutanSerial12sendBlockingEPch>:
    2dbe:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <_ZN15OrangutanSerial5portsE+0x7>
    2dc2:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <_ZN15OrangutanSerial5portsE+0x6>
    2dc6:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <_ZN15OrangutanSerial5portsE+0x1>
    2dca:	60 93 a0 01 	sts	0x01A0, r22	; 0x8001a0 <_ZN15OrangutanSerial5portsE+0x3>
    2dce:	80 e0       	ldi	r24, 0x00	; 0
    2dd0:	0e 94 52 16 	call	0x2ca4	; 0x2ca4 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2dd4:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <_ZN15OrangutanSerial5portsE+0x1>
    2dd8:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <_ZN15OrangutanSerial5portsE+0x3>
    2ddc:	98 17       	cp	r25, r24
    2dde:	19 f0       	breq	.+6      	; 0x2de6 <_ZN15OrangutanSerial12sendBlockingEPch+0x28>
    2de0:	0e 94 d3 16 	call	0x2da6	; 0x2da6 <_ZN15OrangutanSerial5checkEv>
    2de4:	f7 cf       	rjmp	.-18     	; 0x2dd4 <_ZN15OrangutanSerial12sendBlockingEPch+0x16>
    2de6:	08 95       	ret

00002de8 <serial_send_blocking>:
    2de8:	0e 94 df 16 	call	0x2dbe	; 0x2dbe <_ZN15OrangutanSerial12sendBlockingEPch>
    2dec:	08 95       	ret

00002dee <__vector_19>:
    2dee:	1f 92       	push	r1
    2df0:	0f 92       	push	r0
    2df2:	0f b6       	in	r0, 0x3f	; 63
    2df4:	0f 92       	push	r0
    2df6:	11 24       	eor	r1, r1
    2df8:	2f 93       	push	r18
    2dfa:	3f 93       	push	r19
    2dfc:	4f 93       	push	r20
    2dfe:	5f 93       	push	r21
    2e00:	6f 93       	push	r22
    2e02:	7f 93       	push	r23
    2e04:	8f 93       	push	r24
    2e06:	9f 93       	push	r25
    2e08:	af 93       	push	r26
    2e0a:	bf 93       	push	r27
    2e0c:	ef 93       	push	r30
    2e0e:	ff 93       	push	r31
    2e10:	80 e0       	ldi	r24, 0x00	; 0
    2e12:	0e 94 b2 16 	call	0x2d64	; 0x2d64 <_ZN15OrangutanSerial11uart_tx_isrEh>
    2e16:	ff 91       	pop	r31
    2e18:	ef 91       	pop	r30
    2e1a:	bf 91       	pop	r27
    2e1c:	af 91       	pop	r26
    2e1e:	9f 91       	pop	r25
    2e20:	8f 91       	pop	r24
    2e22:	7f 91       	pop	r23
    2e24:	6f 91       	pop	r22
    2e26:	5f 91       	pop	r21
    2e28:	4f 91       	pop	r20
    2e2a:	3f 91       	pop	r19
    2e2c:	2f 91       	pop	r18
    2e2e:	0f 90       	pop	r0
    2e30:	0f be       	out	0x3f, r0	; 63
    2e32:	0f 90       	pop	r0
    2e34:	1f 90       	pop	r1
    2e36:	18 95       	reti

00002e38 <__vector_9>:
    2e38:	2f 92       	push	r2
    2e3a:	8f 93       	push	r24
    2e3c:	9f 93       	push	r25
    2e3e:	2f b6       	in	r2, 0x3f	; 63
    2e40:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <tickCount+0x1>
    2e44:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <tickCount+0x2>
    2e48:	01 96       	adiw	r24, 0x01	; 1
    2e4a:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <tickCount+0x1>
    2e4e:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <tickCount+0x2>
    2e52:	90 e0       	ldi	r25, 0x00	; 0
    2e54:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <tickCount+0x3>
    2e58:	89 1f       	adc	r24, r25
    2e5a:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <tickCount+0x3>
    2e5e:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <us_over_10+0x1>
    2e62:	9c 5f       	subi	r25, 0xFC	; 252
    2e64:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <us_over_10+0x1>
    2e68:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <us_over_10>
    2e6c:	80 51       	subi	r24, 0x10	; 16
    2e6e:	97 42       	sbci	r25, 0x27	; 39
    2e70:	c0 f0       	brcs	.+48     	; 0x2ea2 <end>
    2e72:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <us_over_10+0x1>
    2e76:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <us_over_10>
    2e7a:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <msCounter>
    2e7e:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <msCounter+0x1>
    2e82:	01 96       	adiw	r24, 0x01	; 1
    2e84:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <msCounter>
    2e88:	90 93 aa 01 	sts	0x01AA, r25	; 0x8001aa <msCounter+0x1>
    2e8c:	90 e0       	ldi	r25, 0x00	; 0
    2e8e:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <msCounter+0x2>
    2e92:	89 1f       	adc	r24, r25
    2e94:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <msCounter+0x2>
    2e98:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <msCounter+0x3>
    2e9c:	89 1f       	adc	r24, r25
    2e9e:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <msCounter+0x3>

00002ea2 <end>:
    2ea2:	2f be       	out	0x3f, r2	; 63
    2ea4:	9f 91       	pop	r25
    2ea6:	8f 91       	pop	r24
    2ea8:	2f 90       	pop	r2
    2eaa:	18 95       	reti

00002eac <_ZN13OrangutanTime17delayMillisecondsEj>:
    2eac:	28 ee       	ldi	r18, 0xE8	; 232
    2eae:	33 e0       	ldi	r19, 0x03	; 3
    2eb0:	01 97       	sbiw	r24, 0x01	; 1
    2eb2:	48 f0       	brcs	.+18     	; 0x2ec6 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    2eb4:	f9 01       	movw	r30, r18
    2eb6:	6f 93       	push	r22
    2eb8:	64 e0       	ldi	r22, 0x04	; 4
    2eba:	6a 95       	dec	r22
    2ebc:	f1 f7       	brne	.-4      	; 0x2eba <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    2ebe:	6f 91       	pop	r22
    2ec0:	31 97       	sbiw	r30, 0x01	; 1
    2ec2:	c9 f7       	brne	.-14     	; 0x2eb6 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    2ec4:	f5 cf       	rjmp	.-22     	; 0x2eb0 <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    2ec6:	08 95       	ret

00002ec8 <delay_ms>:
    2ec8:	0e 94 56 17 	call	0x2eac	; 0x2eac <_ZN13OrangutanTime17delayMillisecondsEj>
    2ecc:	08 95       	ret

00002ece <_ZN13OrangutanTime5init2Ev>:
    2ece:	e0 e7       	ldi	r30, 0x70	; 112
    2ed0:	f0 e0       	ldi	r31, 0x00	; 0
    2ed2:	80 81       	ld	r24, Z
    2ed4:	8e 7f       	andi	r24, 0xFE	; 254
    2ed6:	80 83       	st	Z, r24
    2ed8:	a0 eb       	ldi	r26, 0xB0	; 176
    2eda:	b0 e0       	ldi	r27, 0x00	; 0
    2edc:	8c 91       	ld	r24, X
    2ede:	83 60       	ori	r24, 0x03	; 3
    2ee0:	8c 93       	st	X, r24
    2ee2:	a1 eb       	ldi	r26, 0xB1	; 177
    2ee4:	b0 e0       	ldi	r27, 0x00	; 0
    2ee6:	8c 91       	ld	r24, X
    2ee8:	80 7f       	andi	r24, 0xF0	; 240
    2eea:	8c 93       	st	X, r24
    2eec:	8c 91       	ld	r24, X
    2eee:	82 60       	ori	r24, 0x02	; 2
    2ef0:	8c 93       	st	X, r24
    2ef2:	b8 9a       	sbi	0x17, 0	; 23
    2ef4:	80 81       	ld	r24, Z
    2ef6:	81 60       	ori	r24, 0x01	; 1
    2ef8:	80 83       	st	Z, r24
    2efa:	78 94       	sei
    2efc:	08 95       	ret

00002efe <_ZN13OrangutanTime4initEv>:
    2efe:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <_ZZN13OrangutanTime4initEvE11initialized>
    2f02:	81 11       	cpse	r24, r1
    2f04:	05 c0       	rjmp	.+10     	; 0x2f10 <_ZN13OrangutanTime4initEv+0x12>
    2f06:	81 e0       	ldi	r24, 0x01	; 1
    2f08:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <_ZZN13OrangutanTime4initEvE11initialized>
    2f0c:	0e 94 67 17 	call	0x2ece	; 0x2ece <_ZN13OrangutanTime5init2Ev>
    2f10:	08 95       	ret

00002f12 <_ZN13OrangutanTime2msEv>:
    2f12:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_ZN13OrangutanTime4initEv>
    2f16:	e0 e7       	ldi	r30, 0x70	; 112
    2f18:	f0 e0       	ldi	r31, 0x00	; 0
    2f1a:	80 81       	ld	r24, Z
    2f1c:	8e 7f       	andi	r24, 0xFE	; 254
    2f1e:	80 83       	st	Z, r24
    2f20:	60 91 a9 01 	lds	r22, 0x01A9	; 0x8001a9 <msCounter>
    2f24:	70 91 aa 01 	lds	r23, 0x01AA	; 0x8001aa <msCounter+0x1>
    2f28:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <msCounter+0x2>
    2f2c:	90 91 ac 01 	lds	r25, 0x01AC	; 0x8001ac <msCounter+0x3>
    2f30:	20 81       	ld	r18, Z
    2f32:	21 60       	ori	r18, 0x01	; 1
    2f34:	20 83       	st	Z, r18
    2f36:	08 95       	ret

00002f38 <get_ms>:
    2f38:	0e 94 89 17 	call	0x2f12	; 0x2f12 <_ZN13OrangutanTime2msEv>
    2f3c:	08 95       	ret

00002f3e <_ZN13OrangutanTime5resetEv>:
    2f3e:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_ZN13OrangutanTime4initEv>
    2f42:	e0 e7       	ldi	r30, 0x70	; 112
    2f44:	f0 e0       	ldi	r31, 0x00	; 0
    2f46:	80 81       	ld	r24, Z
    2f48:	8e 7f       	andi	r24, 0xFE	; 254
    2f4a:	80 83       	st	Z, r24
    2f4c:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <msCounter>
    2f50:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <msCounter+0x1>
    2f54:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <msCounter+0x2>
    2f58:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <msCounter+0x3>
    2f5c:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <us_over_10+0x1>
    2f60:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <us_over_10>
    2f64:	80 81       	ld	r24, Z
    2f66:	81 60       	ori	r24, 0x01	; 1
    2f68:	80 83       	st	Z, r24
    2f6a:	08 95       	ret

00002f6c <calibrate_line_sensors>:
    2f6c:	68 2f       	mov	r22, r24
    2f6e:	81 eb       	ldi	r24, 0xB1	; 177
    2f70:	91 e0       	ldi	r25, 0x01	; 1
    2f72:	0e 94 a5 1b 	call	0x374a	; 0x374a <_ZN16PololuQTRSensors9calibrateEh>
    2f76:	08 95       	ret

00002f78 <read_line_sensors_calibrated>:
    2f78:	46 2f       	mov	r20, r22
    2f7a:	bc 01       	movw	r22, r24
    2f7c:	81 eb       	ldi	r24, 0xB1	; 177
    2f7e:	91 e0       	ldi	r25, 0x01	; 1
    2f80:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    2f84:	08 95       	ret

00002f86 <read_line>:
    2f86:	46 2f       	mov	r20, r22
    2f88:	20 e0       	ldi	r18, 0x00	; 0
    2f8a:	bc 01       	movw	r22, r24
    2f8c:	81 eb       	ldi	r24, 0xB1	; 177
    2f8e:	91 e0       	ldi	r25, 0x01	; 1
    2f90:	0e 94 76 1c 	call	0x38ec	; 0x38ec <_ZN16PololuQTRSensors8readLineEPjhh>
    2f94:	08 95       	ret

00002f96 <_ZN9Pololu3pi4initEjh>:
    2f96:	0f 93       	push	r16
    2f98:	cf 93       	push	r28
    2f9a:	df 93       	push	r29
    2f9c:	00 d0       	rcall	.+0      	; 0x2f9e <_ZN9Pololu3pi4initEjh+0x8>
    2f9e:	00 d0       	rcall	.+0      	; 0x2fa0 <_ZN9Pololu3pi4initEjh+0xa>
    2fa0:	1f 92       	push	r1
    2fa2:	cd b7       	in	r28, 0x3d	; 61
    2fa4:	de b7       	in	r29, 0x3e	; 62
    2fa6:	9c 01       	movw	r18, r24
    2fa8:	85 e0       	ldi	r24, 0x05	; 5
    2faa:	e0 e5       	ldi	r30, 0x50	; 80
    2fac:	f1 e0       	ldi	r31, 0x01	; 1
    2fae:	de 01       	movw	r26, r28
    2fb0:	11 96       	adiw	r26, 0x01	; 1
    2fb2:	01 90       	ld	r0, Z+
    2fb4:	0d 92       	st	X+, r0
    2fb6:	8a 95       	dec	r24
    2fb8:	e1 f7       	brne	.-8      	; 0x2fb2 <_ZN9Pololu3pi4initEjh+0x1c>
    2fba:	66 23       	and	r22, r22
    2fbc:	11 f0       	breq	.+4      	; 0x2fc2 <_ZN9Pololu3pi4initEjh+0x2c>
    2fbe:	0f ef       	ldi	r16, 0xFF	; 255
    2fc0:	01 c0       	rjmp	.+2      	; 0x2fc4 <_ZN9Pololu3pi4initEjh+0x2e>
    2fc2:	03 e1       	ldi	r16, 0x13	; 19
    2fc4:	45 e0       	ldi	r20, 0x05	; 5
    2fc6:	be 01       	movw	r22, r28
    2fc8:	6f 5f       	subi	r22, 0xFF	; 255
    2fca:	7f 4f       	sbci	r23, 0xFF	; 255
    2fcc:	81 eb       	ldi	r24, 0xB1	; 177
    2fce:	91 e0       	ldi	r25, 0x01	; 1
    2fd0:	0e 94 9d 18 	call	0x313a	; 0x313a <_ZN18PololuQTRSensorsRC4initEPhhjh>
    2fd4:	81 eb       	ldi	r24, 0xB1	; 177
    2fd6:	91 e0       	ldi	r25, 0x01	; 1
    2fd8:	0e 94 74 18 	call	0x30e8	; 0x30e8 <_ZN16PololuQTRSensors11emittersOffEv>
    2fdc:	0e 94 9f 17 	call	0x2f3e	; 0x2f3e <_ZN13OrangutanTime5resetEv>
    2fe0:	0f 90       	pop	r0
    2fe2:	0f 90       	pop	r0
    2fe4:	0f 90       	pop	r0
    2fe6:	0f 90       	pop	r0
    2fe8:	0f 90       	pop	r0
    2fea:	df 91       	pop	r29
    2fec:	cf 91       	pop	r28
    2fee:	0f 91       	pop	r16
    2ff0:	08 95       	ret

00002ff2 <pololu_3pi_init>:
    2ff2:	60 e0       	ldi	r22, 0x00	; 0
    2ff4:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <_ZN9Pololu3pi4initEjh>
    2ff8:	08 95       	ret

00002ffa <_GLOBAL__sub_D_pololu_3pi_init>:
    2ffa:	81 eb       	ldi	r24, 0xB1	; 177
    2ffc:	91 e0       	ldi	r25, 0x01	; 1
    2ffe:	0e 94 eb 1c 	call	0x39d6	; 0x39d6 <_ZN16PololuQTRSensorsD1Ev>
    3002:	08 95       	ret

00003004 <delay_us>:
    3004:	6f 93       	push	r22
    3006:	64 e0       	ldi	r22, 0x04	; 4
    3008:	6a 95       	dec	r22
    300a:	f1 f7       	brne	.-4      	; 0x3008 <delay_us+0x4>
    300c:	6f 91       	pop	r22
    300e:	01 97       	sbiw	r24, 0x01	; 1
    3010:	c9 f7       	brne	.-14     	; 0x3004 <delay_us>
    3012:	08 95       	ret

00003014 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    3014:	fc 01       	movw	r30, r24
    3016:	11 82       	std	Z+1, r1	; 0x01
    3018:	10 82       	st	Z, r1
    301a:	13 82       	std	Z+3, r1	; 0x03
    301c:	12 82       	std	Z+2, r1	; 0x02
    301e:	15 82       	std	Z+5, r1	; 0x05
    3020:	14 82       	std	Z+4, r1	; 0x04
    3022:	16 82       	std	Z+6, r1	; 0x06
    3024:	68 30       	cpi	r22, 0x08	; 8
    3026:	68 f4       	brcc	.+26     	; 0x3042 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    3028:	89 e2       	ldi	r24, 0x29	; 41
    302a:	90 e0       	ldi	r25, 0x00	; 0
    302c:	91 83       	std	Z+1, r25	; 0x01
    302e:	80 83       	st	Z, r24
    3030:	8b e2       	ldi	r24, 0x2B	; 43
    3032:	90 e0       	ldi	r25, 0x00	; 0
    3034:	93 83       	std	Z+3, r25	; 0x03
    3036:	82 83       	std	Z+2, r24	; 0x02
    3038:	8a e2       	ldi	r24, 0x2A	; 42
    303a:	90 e0       	ldi	r25, 0x00	; 0
    303c:	95 83       	std	Z+5, r25	; 0x05
    303e:	84 83       	std	Z+4, r24	; 0x04
    3040:	1f c0       	rjmp	.+62     	; 0x3080 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    3042:	6e 30       	cpi	r22, 0x0E	; 14
    3044:	70 f4       	brcc	.+28     	; 0x3062 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    3046:	83 e2       	ldi	r24, 0x23	; 35
    3048:	90 e0       	ldi	r25, 0x00	; 0
    304a:	91 83       	std	Z+1, r25	; 0x01
    304c:	80 83       	st	Z, r24
    304e:	85 e2       	ldi	r24, 0x25	; 37
    3050:	90 e0       	ldi	r25, 0x00	; 0
    3052:	93 83       	std	Z+3, r25	; 0x03
    3054:	82 83       	std	Z+2, r24	; 0x02
    3056:	84 e2       	ldi	r24, 0x24	; 36
    3058:	90 e0       	ldi	r25, 0x00	; 0
    305a:	95 83       	std	Z+5, r25	; 0x05
    305c:	84 83       	std	Z+4, r24	; 0x04
    305e:	68 50       	subi	r22, 0x08	; 8
    3060:	0f c0       	rjmp	.+30     	; 0x3080 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    3062:	65 31       	cpi	r22, 0x15	; 21
    3064:	98 f4       	brcc	.+38     	; 0x308c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    3066:	86 e2       	ldi	r24, 0x26	; 38
    3068:	90 e0       	ldi	r25, 0x00	; 0
    306a:	91 83       	std	Z+1, r25	; 0x01
    306c:	80 83       	st	Z, r24
    306e:	88 e2       	ldi	r24, 0x28	; 40
    3070:	90 e0       	ldi	r25, 0x00	; 0
    3072:	93 83       	std	Z+3, r25	; 0x03
    3074:	82 83       	std	Z+2, r24	; 0x02
    3076:	87 e2       	ldi	r24, 0x27	; 39
    3078:	90 e0       	ldi	r25, 0x00	; 0
    307a:	95 83       	std	Z+5, r25	; 0x05
    307c:	84 83       	std	Z+4, r24	; 0x04
    307e:	6e 50       	subi	r22, 0x0E	; 14
    3080:	81 e0       	ldi	r24, 0x01	; 1
    3082:	01 c0       	rjmp	.+2      	; 0x3086 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    3084:	88 0f       	add	r24, r24
    3086:	6a 95       	dec	r22
    3088:	ea f7       	brpl	.-6      	; 0x3084 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    308a:	86 83       	std	Z+6, r24	; 0x06
    308c:	08 95       	ret

0000308e <_ZN16PololuQTRSensors4initEhhh>:
    308e:	a7 e0       	ldi	r26, 0x07	; 7
    3090:	b0 e0       	ldi	r27, 0x00	; 0
    3092:	ed e4       	ldi	r30, 0x4D	; 77
    3094:	f8 e1       	ldi	r31, 0x18	; 24
    3096:	0c 94 b4 1d 	jmp	0x3b68	; 0x3b68 <__prologue_saves__+0x1c>
    309a:	8c 01       	movw	r16, r24
    309c:	fc 01       	movw	r30, r24
    309e:	11 82       	std	Z+1, r1	; 0x01
    30a0:	10 82       	st	Z, r1
    30a2:	13 82       	std	Z+3, r1	; 0x03
    30a4:	12 82       	std	Z+2, r1	; 0x02
    30a6:	15 82       	std	Z+5, r1	; 0x05
    30a8:	14 82       	std	Z+4, r1	; 0x04
    30aa:	17 82       	std	Z+7, r1	; 0x07
    30ac:	16 82       	std	Z+6, r1	; 0x06
    30ae:	61 31       	cpi	r22, 0x11	; 17
    30b0:	18 f0       	brcs	.+6      	; 0x30b8 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    30b2:	80 e1       	ldi	r24, 0x10	; 16
    30b4:	80 87       	std	Z+8, r24	; 0x08
    30b6:	02 c0       	rjmp	.+4      	; 0x30bc <_ZN16PololuQTRSensors4initEhhh+0x2e>
    30b8:	fc 01       	movw	r30, r24
    30ba:	60 87       	std	Z+8, r22	; 0x08
    30bc:	f8 01       	movw	r30, r16
    30be:	20 8b       	std	Z+16, r18	; 0x10
    30c0:	64 2f       	mov	r22, r20
    30c2:	ce 01       	movw	r24, r28
    30c4:	01 96       	adiw	r24, 0x01	; 1
    30c6:	0e 94 0a 18 	call	0x3014	; 0x3014 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    30ca:	8f 81       	ldd	r24, Y+7	; 0x07
    30cc:	f8 01       	movw	r30, r16
    30ce:	81 87       	std	Z+9, r24	; 0x09
    30d0:	8b 81       	ldd	r24, Y+3	; 0x03
    30d2:	9c 81       	ldd	r25, Y+4	; 0x04
    30d4:	93 87       	std	Z+11, r25	; 0x0b
    30d6:	82 87       	std	Z+10, r24	; 0x0a
    30d8:	8d 81       	ldd	r24, Y+5	; 0x05
    30da:	9e 81       	ldd	r25, Y+6	; 0x06
    30dc:	95 87       	std	Z+13, r25	; 0x0d
    30de:	84 87       	std	Z+12, r24	; 0x0c
    30e0:	27 96       	adiw	r28, 0x07	; 7
    30e2:	e4 e0       	ldi	r30, 0x04	; 4
    30e4:	0c 94 d0 1d 	jmp	0x3ba0	; 0x3ba0 <__epilogue_restores__+0x1c>

000030e8 <_ZN16PololuQTRSensors11emittersOffEv>:
    30e8:	fc 01       	movw	r30, r24
    30ea:	a4 85       	ldd	r26, Z+12	; 0x0c
    30ec:	b5 85       	ldd	r27, Z+13	; 0x0d
    30ee:	10 97       	sbiw	r26, 0x00	; 0
    30f0:	79 f0       	breq	.+30     	; 0x3110 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    30f2:	8c 91       	ld	r24, X
    30f4:	91 85       	ldd	r25, Z+9	; 0x09
    30f6:	89 2b       	or	r24, r25
    30f8:	8c 93       	st	X, r24
    30fa:	a2 85       	ldd	r26, Z+10	; 0x0a
    30fc:	b3 85       	ldd	r27, Z+11	; 0x0b
    30fe:	9c 91       	ld	r25, X
    3100:	81 85       	ldd	r24, Z+9	; 0x09
    3102:	80 95       	com	r24
    3104:	89 23       	and	r24, r25
    3106:	8c 93       	st	X, r24
    3108:	88 ec       	ldi	r24, 0xC8	; 200
    310a:	90 e0       	ldi	r25, 0x00	; 0
    310c:	0e 94 02 18 	call	0x3004	; 0x3004 <delay_us>
    3110:	08 95       	ret

00003112 <_ZN16PololuQTRSensors10emittersOnEv>:
    3112:	fc 01       	movw	r30, r24
    3114:	a4 85       	ldd	r26, Z+12	; 0x0c
    3116:	b5 85       	ldd	r27, Z+13	; 0x0d
    3118:	10 97       	sbiw	r26, 0x00	; 0
    311a:	71 f0       	breq	.+28     	; 0x3138 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    311c:	8c 91       	ld	r24, X
    311e:	91 85       	ldd	r25, Z+9	; 0x09
    3120:	89 2b       	or	r24, r25
    3122:	8c 93       	st	X, r24
    3124:	a2 85       	ldd	r26, Z+10	; 0x0a
    3126:	b3 85       	ldd	r27, Z+11	; 0x0b
    3128:	8c 91       	ld	r24, X
    312a:	91 85       	ldd	r25, Z+9	; 0x09
    312c:	89 2b       	or	r24, r25
    312e:	8c 93       	st	X, r24
    3130:	88 ec       	ldi	r24, 0xC8	; 200
    3132:	90 e0       	ldi	r25, 0x00	; 0
    3134:	0e 94 02 18 	call	0x3004	; 0x3004 <delay_us>
    3138:	08 95       	ret

0000313a <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    313a:	a7 e0       	ldi	r26, 0x07	; 7
    313c:	b0 e0       	ldi	r27, 0x00	; 0
    313e:	e3 ea       	ldi	r30, 0xA3	; 163
    3140:	f8 e1       	ldi	r31, 0x18	; 24
    3142:	0c 94 a9 1d 	jmp	0x3b52	; 0x3b52 <__prologue_saves__+0x6>
    3146:	7c 01       	movw	r14, r24
    3148:	4b 01       	movw	r8, r22
    314a:	64 2f       	mov	r22, r20
    314c:	39 01       	movw	r6, r18
    314e:	40 2f       	mov	r20, r16
    3150:	20 e0       	ldi	r18, 0x00	; 0
    3152:	0e 94 47 18 	call	0x308e	; 0x308e <_ZN16PololuQTRSensors4initEhhh>
    3156:	87 01       	movw	r16, r14
    3158:	0f 5b       	subi	r16, 0xBF	; 191
    315a:	1f 4f       	sbci	r17, 0xFF	; 255
    315c:	f8 01       	movw	r30, r16
    315e:	10 82       	st	Z, r1
    3160:	67 01       	movw	r12, r14
    3162:	f2 e4       	ldi	r31, 0x42	; 66
    3164:	cf 0e       	add	r12, r31
    3166:	d1 1c       	adc	r13, r1
    3168:	f6 01       	movw	r30, r12
    316a:	10 82       	st	Z, r1
    316c:	57 01       	movw	r10, r14
    316e:	f3 e4       	ldi	r31, 0x43	; 67
    3170:	af 0e       	add	r10, r31
    3172:	b1 1c       	adc	r11, r1
    3174:	f5 01       	movw	r30, r10
    3176:	10 82       	st	Z, r1
    3178:	f7 01       	movw	r30, r14
    317a:	77 86       	std	Z+15, r7	; 0x0f
    317c:	66 86       	std	Z+14, r6	; 0x0e
    317e:	51 2c       	mov	r5, r1
    3180:	f7 01       	movw	r30, r14
    3182:	80 85       	ldd	r24, Z+8	; 0x08
    3184:	58 16       	cp	r5, r24
    3186:	50 f5       	brcc	.+84     	; 0x31dc <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    3188:	65 2c       	mov	r6, r5
    318a:	71 2c       	mov	r7, r1
    318c:	f4 01       	movw	r30, r8
    318e:	e6 0d       	add	r30, r6
    3190:	f7 1d       	adc	r31, r7
    3192:	60 81       	ld	r22, Z
    3194:	ce 01       	movw	r24, r28
    3196:	01 96       	adiw	r24, 0x01	; 1
    3198:	0e 94 0a 18 	call	0x3014	; 0x3014 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    319c:	2f 81       	ldd	r18, Y+7	; 0x07
    319e:	f7 01       	movw	r30, r14
    31a0:	e6 0d       	add	r30, r6
    31a2:	f7 1d       	adc	r31, r7
    31a4:	21 8b       	std	Z+17, r18	; 0x11
    31a6:	89 81       	ldd	r24, Y+1	; 0x01
    31a8:	9a 81       	ldd	r25, Y+2	; 0x02
    31aa:	f3 01       	movw	r30, r6
    31ac:	ee 0f       	add	r30, r30
    31ae:	ff 1f       	adc	r31, r31
    31b0:	ee 0d       	add	r30, r14
    31b2:	ff 1d       	adc	r31, r15
    31b4:	92 a3       	std	Z+34, r25	; 0x22
    31b6:	81 a3       	std	Z+33, r24	; 0x21
    31b8:	83 32       	cpi	r24, 0x23	; 35
    31ba:	91 05       	cpc	r25, r1
    31bc:	11 f4       	brne	.+4      	; 0x31c2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    31be:	f8 01       	movw	r30, r16
    31c0:	08 c0       	rjmp	.+16     	; 0x31d2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    31c2:	86 32       	cpi	r24, 0x26	; 38
    31c4:	91 05       	cpc	r25, r1
    31c6:	11 f4       	brne	.+4      	; 0x31cc <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    31c8:	f6 01       	movw	r30, r12
    31ca:	03 c0       	rjmp	.+6      	; 0x31d2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    31cc:	89 97       	sbiw	r24, 0x29	; 41
    31ce:	21 f4       	brne	.+8      	; 0x31d8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    31d0:	f5 01       	movw	r30, r10
    31d2:	80 81       	ld	r24, Z
    31d4:	82 2b       	or	r24, r18
    31d6:	80 83       	st	Z, r24
    31d8:	53 94       	inc	r5
    31da:	d2 cf       	rjmp	.-92     	; 0x3180 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    31dc:	27 96       	adiw	r28, 0x07	; 7
    31de:	ef e0       	ldi	r30, 0x0F	; 15
    31e0:	0c 94 c5 1d 	jmp	0x3b8a	; 0x3b8a <__epilogue_restores__+0x6>

000031e4 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    31e4:	a0 e0       	ldi	r26, 0x00	; 0
    31e6:	b0 e0       	ldi	r27, 0x00	; 0
    31e8:	e8 ef       	ldi	r30, 0xF8	; 248
    31ea:	f8 e1       	ldi	r31, 0x18	; 24
    31ec:	0c 94 ab 1d 	jmp	0x3b56	; 0x3b56 <__prologue_saves__+0xa>
    31f0:	ec 01       	movw	r28, r24
    31f2:	5b 01       	movw	r10, r22
    31f4:	6c 01       	movw	r12, r24
    31f6:	81 e4       	ldi	r24, 0x41	; 65
    31f8:	c8 0e       	add	r12, r24
    31fa:	d1 1c       	adc	r13, r1
    31fc:	f6 01       	movw	r30, r12
    31fe:	80 80       	ld	r8, Z
    3200:	7e 01       	movw	r14, r28
    3202:	f2 e4       	ldi	r31, 0x42	; 66
    3204:	ef 0e       	add	r14, r31
    3206:	f1 1c       	adc	r15, r1
    3208:	f7 01       	movw	r30, r14
    320a:	70 80       	ld	r7, Z
    320c:	8e 01       	movw	r16, r28
    320e:	0d 5b       	subi	r16, 0xBD	; 189
    3210:	1f 4f       	sbci	r17, 0xFF	; 255
    3212:	f8 01       	movw	r30, r16
    3214:	90 80       	ld	r9, Z
    3216:	80 e0       	ldi	r24, 0x00	; 0
    3218:	98 85       	ldd	r25, Y+8	; 0x08
    321a:	89 17       	cp	r24, r25
    321c:	48 f4       	brcc	.+18     	; 0x3230 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    321e:	f5 01       	movw	r30, r10
    3220:	e8 0f       	add	r30, r24
    3222:	f1 1d       	adc	r31, r1
    3224:	e8 0f       	add	r30, r24
    3226:	f1 1d       	adc	r31, r1
    3228:	11 82       	std	Z+1, r1	; 0x01
    322a:	10 82       	st	Z, r1
    322c:	8f 5f       	subi	r24, 0xFF	; 255
    322e:	f4 cf       	rjmp	.-24     	; 0x3218 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    3230:	84 b1       	in	r24, 0x04	; 4
    3232:	f6 01       	movw	r30, r12
    3234:	90 81       	ld	r25, Z
    3236:	89 2b       	or	r24, r25
    3238:	84 b9       	out	0x04, r24	; 4
    323a:	87 b1       	in	r24, 0x07	; 7
    323c:	f7 01       	movw	r30, r14
    323e:	90 81       	ld	r25, Z
    3240:	89 2b       	or	r24, r25
    3242:	87 b9       	out	0x07, r24	; 7
    3244:	8a b1       	in	r24, 0x0a	; 10
    3246:	f8 01       	movw	r30, r16
    3248:	90 81       	ld	r25, Z
    324a:	89 2b       	or	r24, r25
    324c:	8a b9       	out	0x0a, r24	; 10
    324e:	85 b1       	in	r24, 0x05	; 5
    3250:	f6 01       	movw	r30, r12
    3252:	90 81       	ld	r25, Z
    3254:	89 2b       	or	r24, r25
    3256:	85 b9       	out	0x05, r24	; 5
    3258:	88 b1       	in	r24, 0x08	; 8
    325a:	f7 01       	movw	r30, r14
    325c:	90 81       	ld	r25, Z
    325e:	89 2b       	or	r24, r25
    3260:	88 b9       	out	0x08, r24	; 8
    3262:	8b b1       	in	r24, 0x0b	; 11
    3264:	f8 01       	movw	r30, r16
    3266:	90 81       	ld	r25, Z
    3268:	89 2b       	or	r24, r25
    326a:	8b b9       	out	0x0b, r24	; 11
    326c:	8a e0       	ldi	r24, 0x0A	; 10
    326e:	90 e0       	ldi	r25, 0x00	; 0
    3270:	0e 94 02 18 	call	0x3004	; 0x3004 <delay_us>
    3274:	94 b1       	in	r25, 0x04	; 4
    3276:	f6 01       	movw	r30, r12
    3278:	80 81       	ld	r24, Z
    327a:	80 95       	com	r24
    327c:	89 23       	and	r24, r25
    327e:	84 b9       	out	0x04, r24	; 4
    3280:	97 b1       	in	r25, 0x07	; 7
    3282:	f7 01       	movw	r30, r14
    3284:	80 81       	ld	r24, Z
    3286:	80 95       	com	r24
    3288:	89 23       	and	r24, r25
    328a:	87 b9       	out	0x07, r24	; 7
    328c:	9a b1       	in	r25, 0x0a	; 10
    328e:	f8 01       	movw	r30, r16
    3290:	80 81       	ld	r24, Z
    3292:	80 95       	com	r24
    3294:	89 23       	and	r24, r25
    3296:	8a b9       	out	0x0a, r24	; 10
    3298:	95 b1       	in	r25, 0x05	; 5
    329a:	f6 01       	movw	r30, r12
    329c:	80 81       	ld	r24, Z
    329e:	80 95       	com	r24
    32a0:	89 23       	and	r24, r25
    32a2:	85 b9       	out	0x05, r24	; 5
    32a4:	98 b1       	in	r25, 0x08	; 8
    32a6:	f7 01       	movw	r30, r14
    32a8:	80 81       	ld	r24, Z
    32aa:	80 95       	com	r24
    32ac:	89 23       	and	r24, r25
    32ae:	88 b9       	out	0x08, r24	; 8
    32b0:	9b b1       	in	r25, 0x0b	; 11
    32b2:	f8 01       	movw	r30, r16
    32b4:	80 81       	ld	r24, Z
    32b6:	80 95       	com	r24
    32b8:	89 23       	and	r24, r25
    32ba:	8b b9       	out	0x0b, r24	; 11
    32bc:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    32c0:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    32c4:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    32c8:	83 60       	ori	r24, 0x03	; 3
    32ca:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    32ce:	82 e0       	ldi	r24, 0x02	; 2
    32d0:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    32d4:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    32d8:	80 e0       	ldi	r24, 0x00	; 0
    32da:	90 e0       	ldi	r25, 0x00	; 0
    32dc:	2e 85       	ldd	r18, Y+14	; 0x0e
    32de:	3f 85       	ldd	r19, Y+15	; 0x0f
    32e0:	82 17       	cp	r24, r18
    32e2:	93 07       	cpc	r25, r19
    32e4:	20 f5       	brcc	.+72     	; 0x332e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    32e6:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    32ea:	2c 2d       	mov	r18, r12
    32ec:	24 1b       	sub	r18, r20
    32ee:	82 0f       	add	r24, r18
    32f0:	91 1d       	adc	r25, r1
    32f2:	03 b1       	in	r16, 0x03	; 3
    32f4:	08 11       	cpse	r16, r8
    32f6:	32 c0       	rjmp	.+100    	; 0x335c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    32f8:	f6 b0       	in	r15, 0x06	; 6
    32fa:	f7 10       	cpse	r15, r7
    32fc:	2f c0       	rjmp	.+94     	; 0x335c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    32fe:	29 b1       	in	r18, 0x09	; 9
    3300:	29 11       	cpse	r18, r9
    3302:	2c c0       	rjmp	.+88     	; 0x335c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    3304:	10 c0       	rjmp	.+32     	; 0x3326 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    3306:	21 2f       	mov	r18, r17
    3308:	30 e0       	ldi	r19, 0x00	; 0
    330a:	a9 01       	movw	r20, r18
    330c:	44 0f       	add	r20, r20
    330e:	55 1f       	adc	r21, r21
    3310:	f5 01       	movw	r30, r10
    3312:	e4 0f       	add	r30, r20
    3314:	f5 1f       	adc	r31, r21
    3316:	60 81       	ld	r22, Z
    3318:	71 81       	ldd	r23, Z+1	; 0x01
    331a:	67 2b       	or	r22, r23
    331c:	21 f1       	breq	.+72     	; 0x3366 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    331e:	1f 5f       	subi	r17, 0xFF	; 255
    3320:	28 85       	ldd	r18, Y+8	; 0x08
    3322:	12 17       	cp	r17, r18
    3324:	80 f3       	brcs	.-32     	; 0x3306 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    3326:	7f 2c       	mov	r7, r15
    3328:	80 2e       	mov	r8, r16
    332a:	4c 2d       	mov	r20, r12
    332c:	d7 cf       	rjmp	.-82     	; 0x32dc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    332e:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    3332:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    3336:	20 e0       	ldi	r18, 0x00	; 0
    3338:	88 85       	ldd	r24, Y+8	; 0x08
    333a:	28 17       	cp	r18, r24
    333c:	30 f5       	brcc	.+76     	; 0x338a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    333e:	f5 01       	movw	r30, r10
    3340:	e2 0f       	add	r30, r18
    3342:	f1 1d       	adc	r31, r1
    3344:	e2 0f       	add	r30, r18
    3346:	f1 1d       	adc	r31, r1
    3348:	80 81       	ld	r24, Z
    334a:	91 81       	ldd	r25, Z+1	; 0x01
    334c:	89 2b       	or	r24, r25
    334e:	21 f4       	brne	.+8      	; 0x3358 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    3350:	8e 85       	ldd	r24, Y+14	; 0x0e
    3352:	9f 85       	ldd	r25, Y+15	; 0x0f
    3354:	91 83       	std	Z+1, r25	; 0x01
    3356:	80 83       	st	Z, r24
    3358:	2f 5f       	subi	r18, 0xFF	; 255
    335a:	ee cf       	rjmp	.-36     	; 0x3338 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    335c:	03 b1       	in	r16, 0x03	; 3
    335e:	f6 b0       	in	r15, 0x06	; 6
    3360:	99 b0       	in	r9, 0x09	; 9
    3362:	10 e0       	ldi	r17, 0x00	; 0
    3364:	dd cf       	rjmp	.-70     	; 0x3320 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    3366:	de 01       	movw	r26, r28
    3368:	a4 0f       	add	r26, r20
    336a:	b5 1f       	adc	r27, r21
    336c:	91 96       	adiw	r26, 0x21	; 33
    336e:	0d 90       	ld	r0, X+
    3370:	bc 91       	ld	r27, X
    3372:	a0 2d       	mov	r26, r0
    3374:	4c 91       	ld	r20, X
    3376:	de 01       	movw	r26, r28
    3378:	a2 0f       	add	r26, r18
    337a:	b3 1f       	adc	r27, r19
    337c:	51 96       	adiw	r26, 0x11	; 17
    337e:	2c 91       	ld	r18, X
    3380:	42 23       	and	r20, r18
    3382:	69 f6       	brne	.-102    	; 0x331e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    3384:	91 83       	std	Z+1, r25	; 0x01
    3386:	80 83       	st	Z, r24
    3388:	ca cf       	rjmp	.-108    	; 0x331e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    338a:	cd b7       	in	r28, 0x3d	; 61
    338c:	de b7       	in	r29, 0x3e	; 62
    338e:	ed e0       	ldi	r30, 0x0D	; 13
    3390:	0c 94 c7 1d 	jmp	0x3b8e	; 0x3b8e <__epilogue_restores__+0xa>

00003394 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    3394:	ef 92       	push	r14
    3396:	ff 92       	push	r15
    3398:	0f 93       	push	r16
    339a:	1f 93       	push	r17
    339c:	cf 93       	push	r28
    339e:	df 93       	push	r29
    33a0:	fc 01       	movw	r30, r24
    33a2:	9b 01       	movw	r18, r22
    33a4:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    33a8:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    33ac:	47 b1       	in	r20, 0x07	; 7
    33ae:	18 b1       	in	r17, 0x08	; 8
    33b0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    33b4:	86 fd       	sbrc	r24, 6
    33b6:	fc cf       	rjmp	.-8      	; 0x33b0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    33b8:	80 e0       	ldi	r24, 0x00	; 0
    33ba:	90 85       	ldd	r25, Z+8	; 0x08
    33bc:	89 17       	cp	r24, r25
    33be:	48 f4       	brcc	.+18     	; 0x33d2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    33c0:	d9 01       	movw	r26, r18
    33c2:	a8 0f       	add	r26, r24
    33c4:	b1 1d       	adc	r27, r1
    33c6:	a8 0f       	add	r26, r24
    33c8:	b1 1d       	adc	r27, r1
    33ca:	1d 92       	st	X+, r1
    33cc:	1c 92       	st	X, r1
    33ce:	8f 5f       	subi	r24, 0xFF	; 255
    33d0:	f4 cf       	rjmp	.-24     	; 0x33ba <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    33d2:	97 b1       	in	r25, 0x07	; 7
    33d4:	82 a1       	ldd	r24, Z+34	; 0x22
    33d6:	80 95       	com	r24
    33d8:	89 23       	and	r24, r25
    33da:	87 b9       	out	0x07, r24	; 7
    33dc:	98 b1       	in	r25, 0x08	; 8
    33de:	82 a1       	ldd	r24, Z+34	; 0x22
    33e0:	80 95       	com	r24
    33e2:	89 23       	and	r24, r25
    33e4:	88 b9       	out	0x08, r24	; 8
    33e6:	87 e8       	ldi	r24, 0x87	; 135
    33e8:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    33ec:	e1 2c       	mov	r14, r1
    33ee:	81 a1       	ldd	r24, Z+33	; 0x21
    33f0:	e8 16       	cp	r14, r24
    33f2:	10 f0       	brcs	.+4      	; 0x33f8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    33f4:	e1 2c       	mov	r14, r1
    33f6:	29 c0       	rjmp	.+82     	; 0x344a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    33f8:	50 e0       	ldi	r21, 0x00	; 0
    33fa:	80 85       	ldd	r24, Z+8	; 0x08
    33fc:	58 17       	cp	r21, r24
    33fe:	18 f5       	brcc	.+70     	; 0x3446 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    3400:	a5 2f       	mov	r26, r21
    3402:	b0 e0       	ldi	r27, 0x00	; 0
    3404:	ef 01       	movw	r28, r30
    3406:	ca 0f       	add	r28, r26
    3408:	db 1f       	adc	r29, r27
    340a:	89 89       	ldd	r24, Y+17	; 0x11
    340c:	80 64       	ori	r24, 0x40	; 64
    340e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    3412:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3416:	80 64       	ori	r24, 0x40	; 64
    3418:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    341c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3420:	86 fd       	sbrc	r24, 6
    3422:	fc cf       	rjmp	.-8      	; 0x341c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    3424:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    3428:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    342c:	aa 0f       	add	r26, r26
    342e:	bb 1f       	adc	r27, r27
    3430:	a2 0f       	add	r26, r18
    3432:	b3 1f       	adc	r27, r19
    3434:	8d 91       	ld	r24, X+
    3436:	9c 91       	ld	r25, X
    3438:	11 97       	sbiw	r26, 0x01	; 1
    343a:	86 0f       	add	r24, r22
    343c:	97 1f       	adc	r25, r23
    343e:	8d 93       	st	X+, r24
    3440:	9c 93       	st	X, r25
    3442:	5f 5f       	subi	r21, 0xFF	; 255
    3444:	da cf       	rjmp	.-76     	; 0x33fa <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    3446:	e3 94       	inc	r14
    3448:	d2 cf       	rjmp	.-92     	; 0x33ee <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    344a:	80 85       	ldd	r24, Z+8	; 0x08
    344c:	e8 16       	cp	r14, r24
    344e:	a0 f4       	brcc	.+40     	; 0x3478 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    3450:	e9 01       	movw	r28, r18
    3452:	ce 0d       	add	r28, r14
    3454:	d1 1d       	adc	r29, r1
    3456:	ce 0d       	add	r28, r14
    3458:	d1 1d       	adc	r29, r1
    345a:	61 a1       	ldd	r22, Z+33	; 0x21
    345c:	70 e0       	ldi	r23, 0x00	; 0
    345e:	cb 01       	movw	r24, r22
    3460:	95 95       	asr	r25
    3462:	87 95       	ror	r24
    3464:	a8 81       	ld	r26, Y
    3466:	b9 81       	ldd	r27, Y+1	; 0x01
    3468:	8a 0f       	add	r24, r26
    346a:	9b 1f       	adc	r25, r27
    346c:	0e 94 15 1d 	call	0x3a2a	; 0x3a2a <__udivmodhi4>
    3470:	79 83       	std	Y+1, r23	; 0x01
    3472:	68 83       	st	Y, r22
    3474:	e3 94       	inc	r14
    3476:	e9 cf       	rjmp	.-46     	; 0x344a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    3478:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    347c:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3480:	18 b9       	out	0x08, r17	; 8
    3482:	47 b9       	out	0x07, r20	; 7
    3484:	cd b7       	in	r28, 0x3d	; 61
    3486:	de b7       	in	r29, 0x3e	; 62
    3488:	e6 e0       	ldi	r30, 0x06	; 6
    348a:	0c 94 ce 1d 	jmp	0x3b9c	; 0x3b9c <__epilogue_restores__+0x18>

0000348e <_ZN16PololuQTRSensors4readEPjh>:
    348e:	a0 e2       	ldi	r26, 0x20	; 32
    3490:	b0 e0       	ldi	r27, 0x00	; 0
    3492:	ed e4       	ldi	r30, 0x4D	; 77
    3494:	fa e1       	ldi	r31, 0x1A	; 26
    3496:	0c 94 b1 1d 	jmp	0x3b62	; 0x3b62 <__prologue_saves__+0x16>
    349a:	8c 01       	movw	r16, r24
    349c:	7b 01       	movw	r14, r22
    349e:	d4 2e       	mov	r13, r20
    34a0:	8f ef       	ldi	r24, 0xFF	; 255
    34a2:	84 0f       	add	r24, r20
    34a4:	82 30       	cpi	r24, 0x02	; 2
    34a6:	18 f4       	brcc	.+6      	; 0x34ae <_ZN16PololuQTRSensors4readEPjh+0x20>
    34a8:	c8 01       	movw	r24, r16
    34aa:	0e 94 89 18 	call	0x3112	; 0x3112 <_ZN16PololuQTRSensors10emittersOnEv>
    34ae:	d8 01       	movw	r26, r16
    34b0:	50 96       	adiw	r26, 0x10	; 16
    34b2:	8c 91       	ld	r24, X
    34b4:	b7 01       	movw	r22, r14
    34b6:	81 11       	cpse	r24, r1
    34b8:	10 c0       	rjmp	.+32     	; 0x34da <_ZN16PololuQTRSensors4readEPjh+0x4c>
    34ba:	c8 01       	movw	r24, r16
    34bc:	0e 94 f2 18 	call	0x31e4	; 0x31e4 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    34c0:	c8 01       	movw	r24, r16
    34c2:	0e 94 74 18 	call	0x30e8	; 0x30e8 <_ZN16PololuQTRSensors11emittersOffEv>
    34c6:	b2 e0       	ldi	r27, 0x02	; 2
    34c8:	db 12       	cpse	r13, r27
    34ca:	3a c0       	rjmp	.+116    	; 0x3540 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    34cc:	be 01       	movw	r22, r28
    34ce:	6f 5f       	subi	r22, 0xFF	; 255
    34d0:	7f 4f       	sbci	r23, 0xFF	; 255
    34d2:	c8 01       	movw	r24, r16
    34d4:	0e 94 f2 18 	call	0x31e4	; 0x31e4 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    34d8:	0f c0       	rjmp	.+30     	; 0x34f8 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    34da:	c8 01       	movw	r24, r16
    34dc:	0e 94 ca 19 	call	0x3394	; 0x3394 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    34e0:	c8 01       	movw	r24, r16
    34e2:	0e 94 74 18 	call	0x30e8	; 0x30e8 <_ZN16PololuQTRSensors11emittersOffEv>
    34e6:	e2 e0       	ldi	r30, 0x02	; 2
    34e8:	de 12       	cpse	r13, r30
    34ea:	2a c0       	rjmp	.+84     	; 0x3540 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    34ec:	be 01       	movw	r22, r28
    34ee:	6f 5f       	subi	r22, 0xFF	; 255
    34f0:	7f 4f       	sbci	r23, 0xFF	; 255
    34f2:	c8 01       	movw	r24, r16
    34f4:	0e 94 ca 19 	call	0x3394	; 0x3394 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    34f8:	40 e0       	ldi	r20, 0x00	; 0
    34fa:	f8 01       	movw	r30, r16
    34fc:	80 85       	ldd	r24, Z+8	; 0x08
    34fe:	48 17       	cp	r20, r24
    3500:	f8 f4       	brcc	.+62     	; 0x3540 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    3502:	84 2f       	mov	r24, r20
    3504:	90 e0       	ldi	r25, 0x00	; 0
    3506:	88 0f       	add	r24, r24
    3508:	99 1f       	adc	r25, r25
    350a:	f7 01       	movw	r30, r14
    350c:	e8 0f       	add	r30, r24
    350e:	f9 1f       	adc	r31, r25
    3510:	21 e0       	ldi	r18, 0x01	; 1
    3512:	30 e0       	ldi	r19, 0x00	; 0
    3514:	2c 0f       	add	r18, r28
    3516:	3d 1f       	adc	r19, r29
    3518:	82 0f       	add	r24, r18
    351a:	93 1f       	adc	r25, r19
    351c:	d8 01       	movw	r26, r16
    351e:	1e 96       	adiw	r26, 0x0e	; 14
    3520:	2d 91       	ld	r18, X+
    3522:	3c 91       	ld	r19, X
    3524:	1f 97       	sbiw	r26, 0x0f	; 15
    3526:	dc 01       	movw	r26, r24
    3528:	8d 91       	ld	r24, X+
    352a:	9c 91       	ld	r25, X
    352c:	28 1b       	sub	r18, r24
    352e:	39 0b       	sbc	r19, r25
    3530:	80 81       	ld	r24, Z
    3532:	91 81       	ldd	r25, Z+1	; 0x01
    3534:	82 0f       	add	r24, r18
    3536:	93 1f       	adc	r25, r19
    3538:	91 83       	std	Z+1, r25	; 0x01
    353a:	80 83       	st	Z, r24
    353c:	4f 5f       	subi	r20, 0xFF	; 255
    353e:	dd cf       	rjmp	.-70     	; 0x34fa <_ZN16PololuQTRSensors4readEPjh+0x6c>
    3540:	a0 96       	adiw	r28, 0x20	; 32
    3542:	e7 e0       	ldi	r30, 0x07	; 7
    3544:	0c 94 cd 1d 	jmp	0x3b9a	; 0x3b9a <__epilogue_restores__+0x16>

00003548 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    3548:	2f 92       	push	r2
    354a:	3f 92       	push	r3
    354c:	5f 92       	push	r5
    354e:	6f 92       	push	r6
    3550:	7f 92       	push	r7
    3552:	8f 92       	push	r8
    3554:	9f 92       	push	r9
    3556:	af 92       	push	r10
    3558:	bf 92       	push	r11
    355a:	cf 92       	push	r12
    355c:	df 92       	push	r13
    355e:	ef 92       	push	r14
    3560:	ff 92       	push	r15
    3562:	0f 93       	push	r16
    3564:	1f 93       	push	r17
    3566:	cf 93       	push	r28
    3568:	df 93       	push	r29
    356a:	cd b7       	in	r28, 0x3d	; 61
    356c:	de b7       	in	r29, 0x3e	; 62
    356e:	c0 56       	subi	r28, 0x60	; 96
    3570:	d1 09       	sbc	r29, r1
    3572:	0f b6       	in	r0, 0x3f	; 63
    3574:	f8 94       	cli
    3576:	de bf       	out	0x3e, r29	; 62
    3578:	0f be       	out	0x3f, r0	; 63
    357a:	cd bf       	out	0x3d, r28	; 61
    357c:	8c 01       	movw	r16, r24
    357e:	4b 01       	movw	r8, r22
    3580:	5a 01       	movw	r10, r20
    3582:	52 2e       	mov	r5, r18
    3584:	da 01       	movw	r26, r20
    3586:	8d 91       	ld	r24, X+
    3588:	9c 91       	ld	r25, X
    358a:	89 2b       	or	r24, r25
    358c:	31 f0       	breq	.+12     	; 0x359a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    358e:	f4 01       	movw	r30, r8
    3590:	80 81       	ld	r24, Z
    3592:	91 81       	ldd	r25, Z+1	; 0x01
    3594:	89 2b       	or	r24, r25
    3596:	f1 f4       	brne	.+60     	; 0x35d4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    3598:	24 c0       	rjmp	.+72     	; 0x35e2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    359a:	d8 01       	movw	r26, r16
    359c:	18 96       	adiw	r26, 0x08	; 8
    359e:	8c 91       	ld	r24, X
    35a0:	90 e0       	ldi	r25, 0x00	; 0
    35a2:	88 0f       	add	r24, r24
    35a4:	99 1f       	adc	r25, r25
    35a6:	0e 94 dd 1d 	call	0x3bba	; 0x3bba <malloc>
    35aa:	f5 01       	movw	r30, r10
    35ac:	91 83       	std	Z+1, r25	; 0x01
    35ae:	80 83       	st	Z, r24
    35b0:	00 97       	sbiw	r24, 0x00	; 0
    35b2:	09 f4       	brne	.+2      	; 0x35b6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    35b4:	b1 c0       	rjmp	.+354    	; 0x3718 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    35b6:	fc 01       	movw	r30, r24
    35b8:	20 e0       	ldi	r18, 0x00	; 0
    35ba:	30 e0       	ldi	r19, 0x00	; 0
    35bc:	d8 01       	movw	r26, r16
    35be:	18 96       	adiw	r26, 0x08	; 8
    35c0:	8c 91       	ld	r24, X
    35c2:	90 e0       	ldi	r25, 0x00	; 0
    35c4:	28 17       	cp	r18, r24
    35c6:	39 07       	cpc	r19, r25
    35c8:	14 f7       	brge	.-60     	; 0x358e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    35ca:	11 92       	st	Z+, r1
    35cc:	11 92       	st	Z+, r1
    35ce:	2f 5f       	subi	r18, 0xFF	; 255
    35d0:	3f 4f       	sbci	r19, 0xFF	; 255
    35d2:	f4 cf       	rjmp	.-24     	; 0x35bc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    35d4:	e1 2c       	mov	r14, r1
    35d6:	f1 2c       	mov	r15, r1
    35d8:	6e 01       	movw	r12, r28
    35da:	b1 e2       	ldi	r27, 0x21	; 33
    35dc:	cb 0e       	add	r12, r27
    35de:	d1 1c       	adc	r13, r1
    35e0:	21 c0       	rjmp	.+66     	; 0x3624 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    35e2:	f8 01       	movw	r30, r16
    35e4:	80 85       	ldd	r24, Z+8	; 0x08
    35e6:	90 e0       	ldi	r25, 0x00	; 0
    35e8:	88 0f       	add	r24, r24
    35ea:	99 1f       	adc	r25, r25
    35ec:	0e 94 dd 1d 	call	0x3bba	; 0x3bba <malloc>
    35f0:	d4 01       	movw	r26, r8
    35f2:	8d 93       	st	X+, r24
    35f4:	9c 93       	st	X, r25
    35f6:	00 97       	sbiw	r24, 0x00	; 0
    35f8:	09 f4       	brne	.+2      	; 0x35fc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    35fa:	8e c0       	rjmp	.+284    	; 0x3718 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    35fc:	fc 01       	movw	r30, r24
    35fe:	20 e0       	ldi	r18, 0x00	; 0
    3600:	30 e0       	ldi	r19, 0x00	; 0
    3602:	d8 01       	movw	r26, r16
    3604:	18 96       	adiw	r26, 0x08	; 8
    3606:	8c 91       	ld	r24, X
    3608:	90 e0       	ldi	r25, 0x00	; 0
    360a:	28 17       	cp	r18, r24
    360c:	39 07       	cpc	r19, r25
    360e:	14 f7       	brge	.-60     	; 0x35d4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    3610:	d8 01       	movw	r26, r16
    3612:	1e 96       	adiw	r26, 0x0e	; 14
    3614:	8d 91       	ld	r24, X+
    3616:	9c 91       	ld	r25, X
    3618:	1f 97       	sbiw	r26, 0x0f	; 15
    361a:	81 93       	st	Z+, r24
    361c:	91 93       	st	Z+, r25
    361e:	2f 5f       	subi	r18, 0xFF	; 255
    3620:	3f 4f       	sbci	r19, 0xFF	; 255
    3622:	ef cf       	rjmp	.-34     	; 0x3602 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    3624:	45 2d       	mov	r20, r5
    3626:	be 01       	movw	r22, r28
    3628:	6f 5b       	subi	r22, 0xBF	; 191
    362a:	7f 4f       	sbci	r23, 0xFF	; 255
    362c:	c8 01       	movw	r24, r16
    362e:	0e 94 47 1a 	call	0x348e	; 0x348e <_ZN16PololuQTRSensors4readEPjh>
    3632:	f8 01       	movw	r30, r16
    3634:	60 84       	ldd	r6, Z+8	; 0x08
    3636:	71 2c       	mov	r7, r1
    3638:	fe 01       	movw	r30, r28
    363a:	ef 5b       	subi	r30, 0xBF	; 191
    363c:	ff 4f       	sbci	r31, 0xFF	; 255
    363e:	c6 01       	movw	r24, r12
    3640:	9e 01       	movw	r18, r28
    3642:	2f 5f       	subi	r18, 0xFF	; 255
    3644:	3f 4f       	sbci	r19, 0xFF	; 255
    3646:	19 01       	movw	r2, r18
    3648:	20 e0       	ldi	r18, 0x00	; 0
    364a:	30 e0       	ldi	r19, 0x00	; 0
    364c:	26 15       	cp	r18, r6
    364e:	37 05       	cpc	r19, r7
    3650:	4c f5       	brge	.+82     	; 0x36a4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    3652:	e1 14       	cp	r14, r1
    3654:	f1 04       	cpc	r15, r1
    3656:	89 f0       	breq	.+34     	; 0x367a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    3658:	dc 01       	movw	r26, r24
    365a:	6d 91       	ld	r22, X+
    365c:	7c 91       	ld	r23, X
    365e:	40 81       	ld	r20, Z
    3660:	51 81       	ldd	r21, Z+1	; 0x01
    3662:	64 17       	cp	r22, r20
    3664:	75 07       	cpc	r23, r21
    3666:	48 f0       	brcs	.+18     	; 0x367a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    3668:	d1 01       	movw	r26, r2
    366a:	6d 91       	ld	r22, X+
    366c:	7c 91       	ld	r23, X
    366e:	40 81       	ld	r20, Z
    3670:	51 81       	ldd	r21, Z+1	; 0x01
    3672:	46 17       	cp	r20, r22
    3674:	57 07       	cpc	r21, r23
    3676:	48 f0       	brcs	.+18     	; 0x368a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    3678:	0d c0       	rjmp	.+26     	; 0x3694 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    367a:	40 81       	ld	r20, Z
    367c:	51 81       	ldd	r21, Z+1	; 0x01
    367e:	dc 01       	movw	r26, r24
    3680:	4d 93       	st	X+, r20
    3682:	5c 93       	st	X, r21
    3684:	e1 14       	cp	r14, r1
    3686:	f1 04       	cpc	r15, r1
    3688:	79 f7       	brne	.-34     	; 0x3668 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    368a:	40 81       	ld	r20, Z
    368c:	51 81       	ldd	r21, Z+1	; 0x01
    368e:	d1 01       	movw	r26, r2
    3690:	4d 93       	st	X+, r20
    3692:	5c 93       	st	X, r21
    3694:	2f 5f       	subi	r18, 0xFF	; 255
    3696:	3f 4f       	sbci	r19, 0xFF	; 255
    3698:	b2 e0       	ldi	r27, 0x02	; 2
    369a:	2b 0e       	add	r2, r27
    369c:	31 1c       	adc	r3, r1
    369e:	32 96       	adiw	r30, 0x02	; 2
    36a0:	02 96       	adiw	r24, 0x02	; 2
    36a2:	d4 cf       	rjmp	.-88     	; 0x364c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    36a4:	ef ef       	ldi	r30, 0xFF	; 255
    36a6:	ee 1a       	sub	r14, r30
    36a8:	fe 0a       	sbc	r15, r30
    36aa:	fa e0       	ldi	r31, 0x0A	; 10
    36ac:	ef 16       	cp	r14, r31
    36ae:	f1 04       	cpc	r15, r1
    36b0:	09 f0       	breq	.+2      	; 0x36b4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    36b2:	b8 cf       	rjmp	.-144    	; 0x3624 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    36b4:	9e 01       	movw	r18, r28
    36b6:	2f 5f       	subi	r18, 0xFF	; 255
    36b8:	3f 4f       	sbci	r19, 0xFF	; 255
    36ba:	79 01       	movw	r14, r18
    36bc:	36 01       	movw	r6, r12
    36be:	80 e0       	ldi	r24, 0x00	; 0
    36c0:	90 e0       	ldi	r25, 0x00	; 0
    36c2:	f8 01       	movw	r30, r16
    36c4:	20 85       	ldd	r18, Z+8	; 0x08
    36c6:	30 e0       	ldi	r19, 0x00	; 0
    36c8:	82 17       	cp	r24, r18
    36ca:	93 07       	cpc	r25, r19
    36cc:	2c f5       	brge	.+74     	; 0x3718 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    36ce:	d7 01       	movw	r26, r14
    36d0:	2d 91       	ld	r18, X+
    36d2:	3d 91       	ld	r19, X+
    36d4:	7d 01       	movw	r14, r26
    36d6:	b3 01       	movw	r22, r6
    36d8:	6c 19       	sub	r22, r12
    36da:	7d 09       	sbc	r23, r13
    36dc:	d5 01       	movw	r26, r10
    36de:	ed 91       	ld	r30, X+
    36e0:	fc 91       	ld	r31, X
    36e2:	e6 0f       	add	r30, r22
    36e4:	f7 1f       	adc	r31, r23
    36e6:	40 81       	ld	r20, Z
    36e8:	51 81       	ldd	r21, Z+1	; 0x01
    36ea:	42 17       	cp	r20, r18
    36ec:	53 07       	cpc	r21, r19
    36ee:	10 f4       	brcc	.+4      	; 0x36f4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    36f0:	31 83       	std	Z+1, r19	; 0x01
    36f2:	20 83       	st	Z, r18
    36f4:	f3 01       	movw	r30, r6
    36f6:	21 91       	ld	r18, Z+
    36f8:	31 91       	ld	r19, Z+
    36fa:	3f 01       	movw	r6, r30
    36fc:	d4 01       	movw	r26, r8
    36fe:	ed 91       	ld	r30, X+
    3700:	fc 91       	ld	r31, X
    3702:	e6 0f       	add	r30, r22
    3704:	f7 1f       	adc	r31, r23
    3706:	40 81       	ld	r20, Z
    3708:	51 81       	ldd	r21, Z+1	; 0x01
    370a:	24 17       	cp	r18, r20
    370c:	35 07       	cpc	r19, r21
    370e:	10 f4       	brcc	.+4      	; 0x3714 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    3710:	31 83       	std	Z+1, r19	; 0x01
    3712:	20 83       	st	Z, r18
    3714:	01 96       	adiw	r24, 0x01	; 1
    3716:	d5 cf       	rjmp	.-86     	; 0x36c2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    3718:	c0 5a       	subi	r28, 0xA0	; 160
    371a:	df 4f       	sbci	r29, 0xFF	; 255
    371c:	0f b6       	in	r0, 0x3f	; 63
    371e:	f8 94       	cli
    3720:	de bf       	out	0x3e, r29	; 62
    3722:	0f be       	out	0x3f, r0	; 63
    3724:	cd bf       	out	0x3d, r28	; 61
    3726:	df 91       	pop	r29
    3728:	cf 91       	pop	r28
    372a:	1f 91       	pop	r17
    372c:	0f 91       	pop	r16
    372e:	ff 90       	pop	r15
    3730:	ef 90       	pop	r14
    3732:	df 90       	pop	r13
    3734:	cf 90       	pop	r12
    3736:	bf 90       	pop	r11
    3738:	af 90       	pop	r10
    373a:	9f 90       	pop	r9
    373c:	8f 90       	pop	r8
    373e:	7f 90       	pop	r7
    3740:	6f 90       	pop	r6
    3742:	5f 90       	pop	r5
    3744:	3f 90       	pop	r3
    3746:	2f 90       	pop	r2
    3748:	08 95       	ret

0000374a <_ZN16PololuQTRSensors9calibrateEh>:
    374a:	1f 93       	push	r17
    374c:	cf 93       	push	r28
    374e:	df 93       	push	r29
    3750:	ec 01       	movw	r28, r24
    3752:	16 2f       	mov	r17, r22
    3754:	8f ef       	ldi	r24, 0xFF	; 255
    3756:	86 0f       	add	r24, r22
    3758:	82 30       	cpi	r24, 0x02	; 2
    375a:	18 f0       	brcs	.+6      	; 0x3762 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    375c:	66 23       	and	r22, r22
    375e:	59 f0       	breq	.+22     	; 0x3776 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    3760:	14 c0       	rjmp	.+40     	; 0x378a <_ZN16PololuQTRSensors9calibrateEh+0x40>
    3762:	21 e0       	ldi	r18, 0x01	; 1
    3764:	ae 01       	movw	r20, r28
    3766:	4e 5f       	subi	r20, 0xFE	; 254
    3768:	5f 4f       	sbci	r21, 0xFF	; 255
    376a:	be 01       	movw	r22, r28
    376c:	ce 01       	movw	r24, r28
    376e:	0e 94 a4 1a 	call	0x3548	; 0x3548 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    3772:	12 30       	cpi	r17, 0x02	; 2
    3774:	51 f4       	brne	.+20     	; 0x378a <_ZN16PololuQTRSensors9calibrateEh+0x40>
    3776:	ae 01       	movw	r20, r28
    3778:	4a 5f       	subi	r20, 0xFA	; 250
    377a:	5f 4f       	sbci	r21, 0xFF	; 255
    377c:	be 01       	movw	r22, r28
    377e:	6c 5f       	subi	r22, 0xFC	; 252
    3780:	7f 4f       	sbci	r23, 0xFF	; 255
    3782:	20 e0       	ldi	r18, 0x00	; 0
    3784:	ce 01       	movw	r24, r28
    3786:	0e 94 a4 1a 	call	0x3548	; 0x3548 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    378a:	df 91       	pop	r29
    378c:	cf 91       	pop	r28
    378e:	1f 91       	pop	r17
    3790:	08 95       	ret

00003792 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    3792:	a0 e0       	ldi	r26, 0x00	; 0
    3794:	b0 e0       	ldi	r27, 0x00	; 0
    3796:	ef ec       	ldi	r30, 0xCF	; 207
    3798:	fb e1       	ldi	r31, 0x1B	; 27
    379a:	0c 94 af 1d 	jmp	0x3b5e	; 0x3b5e <__prologue_saves__+0x12>
    379e:	ec 01       	movw	r28, r24
    37a0:	8b 01       	movw	r16, r22
    37a2:	b4 2e       	mov	r11, r20
    37a4:	84 2f       	mov	r24, r20
    37a6:	8d 7f       	andi	r24, 0xFD	; 253
    37a8:	51 f4       	brne	.+20     	; 0x37be <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    37aa:	8c 81       	ldd	r24, Y+4	; 0x04
    37ac:	9d 81       	ldd	r25, Y+5	; 0x05
    37ae:	89 2b       	or	r24, r25
    37b0:	09 f4       	brne	.+2      	; 0x37b4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    37b2:	97 c0       	rjmp	.+302    	; 0x38e2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    37b4:	8e 81       	ldd	r24, Y+6	; 0x06
    37b6:	9f 81       	ldd	r25, Y+7	; 0x07
    37b8:	89 2b       	or	r24, r25
    37ba:	09 f4       	brne	.+2      	; 0x37be <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    37bc:	92 c0       	rjmp	.+292    	; 0x38e2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    37be:	8f ef       	ldi	r24, 0xFF	; 255
    37c0:	8b 0d       	add	r24, r11
    37c2:	82 30       	cpi	r24, 0x02	; 2
    37c4:	50 f4       	brcc	.+20     	; 0x37da <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    37c6:	88 81       	ld	r24, Y
    37c8:	99 81       	ldd	r25, Y+1	; 0x01
    37ca:	89 2b       	or	r24, r25
    37cc:	09 f4       	brne	.+2      	; 0x37d0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    37ce:	89 c0       	rjmp	.+274    	; 0x38e2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    37d0:	8a 81       	ldd	r24, Y+2	; 0x02
    37d2:	9b 81       	ldd	r25, Y+3	; 0x03
    37d4:	89 2b       	or	r24, r25
    37d6:	09 f4       	brne	.+2      	; 0x37da <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    37d8:	84 c0       	rjmp	.+264    	; 0x38e2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    37da:	4b 2d       	mov	r20, r11
    37dc:	b8 01       	movw	r22, r16
    37de:	ce 01       	movw	r24, r28
    37e0:	0e 94 47 1a 	call	0x348e	; 0x348e <_ZN16PololuQTRSensors4readEPjh>
    37e4:	78 01       	movw	r14, r16
    37e6:	00 e0       	ldi	r16, 0x00	; 0
    37e8:	10 e0       	ldi	r17, 0x00	; 0
    37ea:	c1 2c       	mov	r12, r1
    37ec:	d1 2c       	mov	r13, r1
    37ee:	88 85       	ldd	r24, Y+8	; 0x08
    37f0:	90 e0       	ldi	r25, 0x00	; 0
    37f2:	c8 16       	cp	r12, r24
    37f4:	d9 06       	cpc	r13, r25
    37f6:	0c f0       	brlt	.+2      	; 0x37fa <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    37f8:	74 c0       	rjmp	.+232    	; 0x38e2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    37fa:	81 e0       	ldi	r24, 0x01	; 1
    37fc:	b8 12       	cpse	r11, r24
    37fe:	0a c0       	rjmp	.+20     	; 0x3814 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    3800:	ea 81       	ldd	r30, Y+2	; 0x02
    3802:	fb 81       	ldd	r31, Y+3	; 0x03
    3804:	e0 0f       	add	r30, r16
    3806:	f1 1f       	adc	r31, r17
    3808:	01 90       	ld	r0, Z+
    380a:	f0 81       	ld	r31, Z
    380c:	e0 2d       	mov	r30, r0
    380e:	a8 81       	ld	r26, Y
    3810:	b9 81       	ldd	r27, Y+1	; 0x01
    3812:	0d c0       	rjmp	.+26     	; 0x382e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    3814:	8c 81       	ldd	r24, Y+4	; 0x04
    3816:	9d 81       	ldd	r25, Y+5	; 0x05
    3818:	2e 81       	ldd	r18, Y+6	; 0x06
    381a:	3f 81       	ldd	r19, Y+7	; 0x07
    381c:	b1 10       	cpse	r11, r1
    381e:	0c c0       	rjmp	.+24     	; 0x3838 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    3820:	f9 01       	movw	r30, r18
    3822:	e0 0f       	add	r30, r16
    3824:	f1 1f       	adc	r31, r17
    3826:	01 90       	ld	r0, Z+
    3828:	f0 81       	ld	r31, Z
    382a:	e0 2d       	mov	r30, r0
    382c:	dc 01       	movw	r26, r24
    382e:	a0 0f       	add	r26, r16
    3830:	b1 1f       	adc	r27, r17
    3832:	8d 91       	ld	r24, X+
    3834:	9c 91       	ld	r25, X
    3836:	28 c0       	rjmp	.+80     	; 0x3888 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    3838:	fc 01       	movw	r30, r24
    383a:	e0 0f       	add	r30, r16
    383c:	f1 1f       	adc	r31, r17
    383e:	40 81       	ld	r20, Z
    3840:	51 81       	ldd	r21, Z+1	; 0x01
    3842:	e8 81       	ld	r30, Y
    3844:	f9 81       	ldd	r31, Y+1	; 0x01
    3846:	e0 0f       	add	r30, r16
    3848:	f1 1f       	adc	r31, r17
    384a:	80 81       	ld	r24, Z
    384c:	91 81       	ldd	r25, Z+1	; 0x01
    384e:	ee 85       	ldd	r30, Y+14	; 0x0e
    3850:	ff 85       	ldd	r31, Y+15	; 0x0f
    3852:	48 17       	cp	r20, r24
    3854:	59 07       	cpc	r21, r25
    3856:	10 f4       	brcc	.+4      	; 0x385c <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    3858:	cf 01       	movw	r24, r30
    385a:	04 c0       	rjmp	.+8      	; 0x3864 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    385c:	8e 0f       	add	r24, r30
    385e:	9f 1f       	adc	r25, r31
    3860:	84 1b       	sub	r24, r20
    3862:	95 0b       	sbc	r25, r21
    3864:	d9 01       	movw	r26, r18
    3866:	a0 0f       	add	r26, r16
    3868:	b1 1f       	adc	r27, r17
    386a:	2d 91       	ld	r18, X+
    386c:	3c 91       	ld	r19, X
    386e:	aa 81       	ldd	r26, Y+2	; 0x02
    3870:	bb 81       	ldd	r27, Y+3	; 0x03
    3872:	a0 0f       	add	r26, r16
    3874:	b1 1f       	adc	r27, r17
    3876:	4d 91       	ld	r20, X+
    3878:	5c 91       	ld	r21, X
    387a:	24 17       	cp	r18, r20
    387c:	35 07       	cpc	r19, r21
    387e:	20 f0       	brcs	.+8      	; 0x3888 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    3880:	e4 0f       	add	r30, r20
    3882:	f5 1f       	adc	r31, r21
    3884:	e2 1b       	sub	r30, r18
    3886:	f3 0b       	sbc	r31, r19
    3888:	e8 1b       	sub	r30, r24
    388a:	f9 0b       	sbc	r31, r25
    388c:	a9 f0       	breq	.+42     	; 0x38b8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    388e:	d7 01       	movw	r26, r14
    3890:	2d 91       	ld	r18, X+
    3892:	3c 91       	ld	r19, X
    3894:	40 e0       	ldi	r20, 0x00	; 0
    3896:	50 e0       	ldi	r21, 0x00	; 0
    3898:	28 1b       	sub	r18, r24
    389a:	39 0b       	sbc	r19, r25
    389c:	41 09       	sbc	r20, r1
    389e:	51 09       	sbc	r21, r1
    38a0:	a8 ee       	ldi	r26, 0xE8	; 232
    38a2:	b3 e0       	ldi	r27, 0x03	; 3
    38a4:	0e 94 93 1d 	call	0x3b26	; 0x3b26 <__muluhisi3>
    38a8:	9f 01       	movw	r18, r30
    38aa:	40 e0       	ldi	r20, 0x00	; 0
    38ac:	50 e0       	ldi	r21, 0x00	; 0
    38ae:	0e 94 5f 1d 	call	0x3abe	; 0x3abe <__divmodsi4>
    38b2:	37 fd       	sbrc	r19, 7
    38b4:	0a c0       	rjmp	.+20     	; 0x38ca <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    38b6:	02 c0       	rjmp	.+4      	; 0x38bc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    38b8:	20 e0       	ldi	r18, 0x00	; 0
    38ba:	30 e0       	ldi	r19, 0x00	; 0
    38bc:	29 3e       	cpi	r18, 0xE9	; 233
    38be:	b3 e0       	ldi	r27, 0x03	; 3
    38c0:	3b 07       	cpc	r19, r27
    38c2:	2c f0       	brlt	.+10     	; 0x38ce <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    38c4:	28 ee       	ldi	r18, 0xE8	; 232
    38c6:	33 e0       	ldi	r19, 0x03	; 3
    38c8:	02 c0       	rjmp	.+4      	; 0x38ce <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    38ca:	20 e0       	ldi	r18, 0x00	; 0
    38cc:	30 e0       	ldi	r19, 0x00	; 0
    38ce:	f7 01       	movw	r30, r14
    38d0:	21 93       	st	Z+, r18
    38d2:	31 93       	st	Z+, r19
    38d4:	7f 01       	movw	r14, r30
    38d6:	ff ef       	ldi	r31, 0xFF	; 255
    38d8:	cf 1a       	sub	r12, r31
    38da:	df 0a       	sbc	r13, r31
    38dc:	0e 5f       	subi	r16, 0xFE	; 254
    38de:	1f 4f       	sbci	r17, 0xFF	; 255
    38e0:	86 cf       	rjmp	.-244    	; 0x37ee <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    38e2:	cd b7       	in	r28, 0x3d	; 61
    38e4:	de b7       	in	r29, 0x3e	; 62
    38e6:	e9 e0       	ldi	r30, 0x09	; 9
    38e8:	0c 94 cb 1d 	jmp	0x3b96	; 0x3b96 <__epilogue_restores__+0x12>

000038ec <_ZN16PololuQTRSensors8readLineEPjhh>:
    38ec:	a0 e0       	ldi	r26, 0x00	; 0
    38ee:	b0 e0       	ldi	r27, 0x00	; 0
    38f0:	ec e7       	ldi	r30, 0x7C	; 124
    38f2:	fc e1       	ldi	r31, 0x1C	; 28
    38f4:	0c 94 a6 1d 	jmp	0x3b4c	; 0x3b4c <__prologue_saves__>
    38f8:	ec 01       	movw	r28, r24
    38fa:	8b 01       	movw	r16, r22
    38fc:	82 2e       	mov	r8, r18
    38fe:	0e 94 c9 1b 	call	0x3792	; 0x3792 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    3902:	28 84       	ldd	r2, Y+8	; 0x08
    3904:	e8 01       	movw	r28, r16
    3906:	41 2c       	mov	r4, r1
    3908:	51 2c       	mov	r5, r1
    390a:	32 01       	movw	r6, r4
    390c:	00 e0       	ldi	r16, 0x00	; 0
    390e:	10 e0       	ldi	r17, 0x00	; 0
    3910:	c1 2c       	mov	r12, r1
    3912:	d1 2c       	mov	r13, r1
    3914:	76 01       	movw	r14, r12
    3916:	31 2c       	mov	r3, r1
    3918:	91 2c       	mov	r9, r1
    391a:	58 ee       	ldi	r21, 0xE8	; 232
    391c:	a5 2e       	mov	r10, r21
    391e:	53 e0       	ldi	r21, 0x03	; 3
    3920:	b5 2e       	mov	r11, r21
    3922:	92 14       	cp	r9, r2
    3924:	21 f1       	breq	.+72     	; 0x396e <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    3926:	e9 91       	ld	r30, Y+
    3928:	f9 91       	ld	r31, Y+
    392a:	88 20       	and	r8, r8
    392c:	21 f0       	breq	.+8      	; 0x3936 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    392e:	c5 01       	movw	r24, r10
    3930:	8e 1b       	sub	r24, r30
    3932:	9f 0b       	sbc	r25, r31
    3934:	fc 01       	movw	r30, r24
    3936:	e9 3c       	cpi	r30, 0xC9	; 201
    3938:	f1 05       	cpc	r31, r1
    393a:	24 f4       	brge	.+8      	; 0x3944 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    393c:	e3 33       	cpi	r30, 0x33	; 51
    393e:	f1 05       	cpc	r31, r1
    3940:	74 f0       	brlt	.+28     	; 0x395e <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    3942:	02 c0       	rjmp	.+4      	; 0x3948 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    3944:	33 24       	eor	r3, r3
    3946:	33 94       	inc	r3
    3948:	df 01       	movw	r26, r30
    394a:	a3 01       	movw	r20, r6
    394c:	92 01       	movw	r18, r4
    394e:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <__mulshisi3>
    3952:	c6 0e       	add	r12, r22
    3954:	d7 1e       	adc	r13, r23
    3956:	e8 1e       	adc	r14, r24
    3958:	f9 1e       	adc	r15, r25
    395a:	0e 0f       	add	r16, r30
    395c:	1f 1f       	adc	r17, r31
    395e:	93 94       	inc	r9
    3960:	98 ee       	ldi	r25, 0xE8	; 232
    3962:	49 0e       	add	r4, r25
    3964:	93 e0       	ldi	r25, 0x03	; 3
    3966:	59 1e       	adc	r5, r25
    3968:	61 1c       	adc	r6, r1
    396a:	71 1c       	adc	r7, r1
    396c:	da cf       	rjmp	.-76     	; 0x3922 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    396e:	31 10       	cpse	r3, r1
    3970:	1e c0       	rjmp	.+60     	; 0x39ae <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    3972:	49 2d       	mov	r20, r9
    3974:	50 e0       	ldi	r21, 0x00	; 0
    3976:	41 50       	subi	r20, 0x01	; 1
    3978:	51 09       	sbc	r21, r1
    397a:	24 ef       	ldi	r18, 0xF4	; 244
    397c:	31 e0       	ldi	r19, 0x01	; 1
    397e:	42 9f       	mul	r20, r18
    3980:	c0 01       	movw	r24, r0
    3982:	43 9f       	mul	r20, r19
    3984:	90 0d       	add	r25, r0
    3986:	52 9f       	mul	r21, r18
    3988:	90 0d       	add	r25, r0
    398a:	11 24       	eor	r1, r1
    398c:	20 91 f5 01 	lds	r18, 0x01F5	; 0x8001f5 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    3990:	30 91 f6 01 	lds	r19, 0x01F6	; 0x8001f6 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    3994:	28 17       	cp	r18, r24
    3996:	39 07       	cpc	r19, r25
    3998:	b4 f0       	brlt	.+44     	; 0x39c6 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    399a:	88 ee       	ldi	r24, 0xE8	; 232
    399c:	93 e0       	ldi	r25, 0x03	; 3
    399e:	48 9f       	mul	r20, r24
    39a0:	90 01       	movw	r18, r0
    39a2:	49 9f       	mul	r20, r25
    39a4:	30 0d       	add	r19, r0
    39a6:	58 9f       	mul	r21, r24
    39a8:	30 0d       	add	r19, r0
    39aa:	11 24       	eor	r1, r1
    39ac:	0e c0       	rjmp	.+28     	; 0x39ca <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    39ae:	98 01       	movw	r18, r16
    39b0:	40 e0       	ldi	r20, 0x00	; 0
    39b2:	50 e0       	ldi	r21, 0x00	; 0
    39b4:	c7 01       	movw	r24, r14
    39b6:	b6 01       	movw	r22, r12
    39b8:	0e 94 3d 1d 	call	0x3a7a	; 0x3a7a <__udivmodsi4>
    39bc:	30 93 f6 01 	sts	0x01F6, r19	; 0x8001f6 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    39c0:	20 93 f5 01 	sts	0x01F5, r18	; 0x8001f5 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    39c4:	02 c0       	rjmp	.+4      	; 0x39ca <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    39c6:	20 e0       	ldi	r18, 0x00	; 0
    39c8:	30 e0       	ldi	r19, 0x00	; 0
    39ca:	c9 01       	movw	r24, r18
    39cc:	cd b7       	in	r28, 0x3d	; 61
    39ce:	de b7       	in	r29, 0x3e	; 62
    39d0:	e2 e1       	ldi	r30, 0x12	; 18
    39d2:	0c 94 c2 1d 	jmp	0x3b84	; 0x3b84 <__epilogue_restores__>

000039d6 <_ZN16PololuQTRSensorsD1Ev>:
    39d6:	cf 93       	push	r28
    39d8:	df 93       	push	r29
    39da:	ec 01       	movw	r28, r24
    39dc:	8a 81       	ldd	r24, Y+2	; 0x02
    39de:	9b 81       	ldd	r25, Y+3	; 0x03
    39e0:	00 97       	sbiw	r24, 0x00	; 0
    39e2:	11 f0       	breq	.+4      	; 0x39e8 <_ZN16PololuQTRSensorsD1Ev+0x12>
    39e4:	0e 94 75 1e 	call	0x3cea	; 0x3cea <free>
    39e8:	8e 81       	ldd	r24, Y+6	; 0x06
    39ea:	9f 81       	ldd	r25, Y+7	; 0x07
    39ec:	00 97       	sbiw	r24, 0x00	; 0
    39ee:	11 f0       	breq	.+4      	; 0x39f4 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    39f0:	0e 94 75 1e 	call	0x3cea	; 0x3cea <free>
    39f4:	88 81       	ld	r24, Y
    39f6:	99 81       	ldd	r25, Y+1	; 0x01
    39f8:	00 97       	sbiw	r24, 0x00	; 0
    39fa:	11 f0       	breq	.+4      	; 0x3a00 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    39fc:	0e 94 75 1e 	call	0x3cea	; 0x3cea <free>
    3a00:	8c 81       	ldd	r24, Y+4	; 0x04
    3a02:	9d 81       	ldd	r25, Y+5	; 0x05
    3a04:	00 97       	sbiw	r24, 0x00	; 0
    3a06:	11 f0       	breq	.+4      	; 0x3a0c <_ZN16PololuQTRSensorsD1Ev+0x36>
    3a08:	0e 94 75 1e 	call	0x3cea	; 0x3cea <free>
    3a0c:	df 91       	pop	r29
    3a0e:	cf 91       	pop	r28
    3a10:	08 95       	ret

00003a12 <__udivmodqi4>:
    3a12:	99 1b       	sub	r25, r25
    3a14:	79 e0       	ldi	r23, 0x09	; 9
    3a16:	04 c0       	rjmp	.+8      	; 0x3a20 <__udivmodqi4_ep>

00003a18 <__udivmodqi4_loop>:
    3a18:	99 1f       	adc	r25, r25
    3a1a:	96 17       	cp	r25, r22
    3a1c:	08 f0       	brcs	.+2      	; 0x3a20 <__udivmodqi4_ep>
    3a1e:	96 1b       	sub	r25, r22

00003a20 <__udivmodqi4_ep>:
    3a20:	88 1f       	adc	r24, r24
    3a22:	7a 95       	dec	r23
    3a24:	c9 f7       	brne	.-14     	; 0x3a18 <__udivmodqi4_loop>
    3a26:	80 95       	com	r24
    3a28:	08 95       	ret

00003a2a <__udivmodhi4>:
    3a2a:	aa 1b       	sub	r26, r26
    3a2c:	bb 1b       	sub	r27, r27
    3a2e:	51 e1       	ldi	r21, 0x11	; 17
    3a30:	07 c0       	rjmp	.+14     	; 0x3a40 <__udivmodhi4_ep>

00003a32 <__udivmodhi4_loop>:
    3a32:	aa 1f       	adc	r26, r26
    3a34:	bb 1f       	adc	r27, r27
    3a36:	a6 17       	cp	r26, r22
    3a38:	b7 07       	cpc	r27, r23
    3a3a:	10 f0       	brcs	.+4      	; 0x3a40 <__udivmodhi4_ep>
    3a3c:	a6 1b       	sub	r26, r22
    3a3e:	b7 0b       	sbc	r27, r23

00003a40 <__udivmodhi4_ep>:
    3a40:	88 1f       	adc	r24, r24
    3a42:	99 1f       	adc	r25, r25
    3a44:	5a 95       	dec	r21
    3a46:	a9 f7       	brne	.-22     	; 0x3a32 <__udivmodhi4_loop>
    3a48:	80 95       	com	r24
    3a4a:	90 95       	com	r25
    3a4c:	bc 01       	movw	r22, r24
    3a4e:	cd 01       	movw	r24, r26
    3a50:	08 95       	ret

00003a52 <__divmodhi4>:
    3a52:	97 fb       	bst	r25, 7
    3a54:	07 2e       	mov	r0, r23
    3a56:	16 f4       	brtc	.+4      	; 0x3a5c <__divmodhi4+0xa>
    3a58:	00 94       	com	r0
    3a5a:	07 d0       	rcall	.+14     	; 0x3a6a <__divmodhi4_neg1>
    3a5c:	77 fd       	sbrc	r23, 7
    3a5e:	09 d0       	rcall	.+18     	; 0x3a72 <__divmodhi4_neg2>
    3a60:	0e 94 15 1d 	call	0x3a2a	; 0x3a2a <__udivmodhi4>
    3a64:	07 fc       	sbrc	r0, 7
    3a66:	05 d0       	rcall	.+10     	; 0x3a72 <__divmodhi4_neg2>
    3a68:	3e f4       	brtc	.+14     	; 0x3a78 <__divmodhi4_exit>

00003a6a <__divmodhi4_neg1>:
    3a6a:	90 95       	com	r25
    3a6c:	81 95       	neg	r24
    3a6e:	9f 4f       	sbci	r25, 0xFF	; 255
    3a70:	08 95       	ret

00003a72 <__divmodhi4_neg2>:
    3a72:	70 95       	com	r23
    3a74:	61 95       	neg	r22
    3a76:	7f 4f       	sbci	r23, 0xFF	; 255

00003a78 <__divmodhi4_exit>:
    3a78:	08 95       	ret

00003a7a <__udivmodsi4>:
    3a7a:	a1 e2       	ldi	r26, 0x21	; 33
    3a7c:	1a 2e       	mov	r1, r26
    3a7e:	aa 1b       	sub	r26, r26
    3a80:	bb 1b       	sub	r27, r27
    3a82:	fd 01       	movw	r30, r26
    3a84:	0d c0       	rjmp	.+26     	; 0x3aa0 <__udivmodsi4_ep>

00003a86 <__udivmodsi4_loop>:
    3a86:	aa 1f       	adc	r26, r26
    3a88:	bb 1f       	adc	r27, r27
    3a8a:	ee 1f       	adc	r30, r30
    3a8c:	ff 1f       	adc	r31, r31
    3a8e:	a2 17       	cp	r26, r18
    3a90:	b3 07       	cpc	r27, r19
    3a92:	e4 07       	cpc	r30, r20
    3a94:	f5 07       	cpc	r31, r21
    3a96:	20 f0       	brcs	.+8      	; 0x3aa0 <__udivmodsi4_ep>
    3a98:	a2 1b       	sub	r26, r18
    3a9a:	b3 0b       	sbc	r27, r19
    3a9c:	e4 0b       	sbc	r30, r20
    3a9e:	f5 0b       	sbc	r31, r21

00003aa0 <__udivmodsi4_ep>:
    3aa0:	66 1f       	adc	r22, r22
    3aa2:	77 1f       	adc	r23, r23
    3aa4:	88 1f       	adc	r24, r24
    3aa6:	99 1f       	adc	r25, r25
    3aa8:	1a 94       	dec	r1
    3aaa:	69 f7       	brne	.-38     	; 0x3a86 <__udivmodsi4_loop>
    3aac:	60 95       	com	r22
    3aae:	70 95       	com	r23
    3ab0:	80 95       	com	r24
    3ab2:	90 95       	com	r25
    3ab4:	9b 01       	movw	r18, r22
    3ab6:	ac 01       	movw	r20, r24
    3ab8:	bd 01       	movw	r22, r26
    3aba:	cf 01       	movw	r24, r30
    3abc:	08 95       	ret

00003abe <__divmodsi4>:
    3abe:	05 2e       	mov	r0, r21
    3ac0:	97 fb       	bst	r25, 7
    3ac2:	1e f4       	brtc	.+6      	; 0x3aca <__divmodsi4+0xc>
    3ac4:	00 94       	com	r0
    3ac6:	0e 94 76 1d 	call	0x3aec	; 0x3aec <__negsi2>
    3aca:	57 fd       	sbrc	r21, 7
    3acc:	07 d0       	rcall	.+14     	; 0x3adc <__divmodsi4_neg2>
    3ace:	0e 94 3d 1d 	call	0x3a7a	; 0x3a7a <__udivmodsi4>
    3ad2:	07 fc       	sbrc	r0, 7
    3ad4:	03 d0       	rcall	.+6      	; 0x3adc <__divmodsi4_neg2>
    3ad6:	4e f4       	brtc	.+18     	; 0x3aea <__divmodsi4_exit>
    3ad8:	0c 94 76 1d 	jmp	0x3aec	; 0x3aec <__negsi2>

00003adc <__divmodsi4_neg2>:
    3adc:	50 95       	com	r21
    3ade:	40 95       	com	r20
    3ae0:	30 95       	com	r19
    3ae2:	21 95       	neg	r18
    3ae4:	3f 4f       	sbci	r19, 0xFF	; 255
    3ae6:	4f 4f       	sbci	r20, 0xFF	; 255
    3ae8:	5f 4f       	sbci	r21, 0xFF	; 255

00003aea <__divmodsi4_exit>:
    3aea:	08 95       	ret

00003aec <__negsi2>:
    3aec:	90 95       	com	r25
    3aee:	80 95       	com	r24
    3af0:	70 95       	com	r23
    3af2:	61 95       	neg	r22
    3af4:	7f 4f       	sbci	r23, 0xFF	; 255
    3af6:	8f 4f       	sbci	r24, 0xFF	; 255
    3af8:	9f 4f       	sbci	r25, 0xFF	; 255
    3afa:	08 95       	ret

00003afc <__tablejump2__>:
    3afc:	ee 0f       	add	r30, r30
    3afe:	ff 1f       	adc	r31, r31
    3b00:	05 90       	lpm	r0, Z+
    3b02:	f4 91       	lpm	r31, Z
    3b04:	e0 2d       	mov	r30, r0
    3b06:	09 94       	ijmp

00003b08 <__umulhisi3>:
    3b08:	a2 9f       	mul	r26, r18
    3b0a:	b0 01       	movw	r22, r0
    3b0c:	b3 9f       	mul	r27, r19
    3b0e:	c0 01       	movw	r24, r0
    3b10:	a3 9f       	mul	r26, r19
    3b12:	70 0d       	add	r23, r0
    3b14:	81 1d       	adc	r24, r1
    3b16:	11 24       	eor	r1, r1
    3b18:	91 1d       	adc	r25, r1
    3b1a:	b2 9f       	mul	r27, r18
    3b1c:	70 0d       	add	r23, r0
    3b1e:	81 1d       	adc	r24, r1
    3b20:	11 24       	eor	r1, r1
    3b22:	91 1d       	adc	r25, r1
    3b24:	08 95       	ret

00003b26 <__muluhisi3>:
    3b26:	0e 94 84 1d 	call	0x3b08	; 0x3b08 <__umulhisi3>
    3b2a:	a5 9f       	mul	r26, r21
    3b2c:	90 0d       	add	r25, r0
    3b2e:	b4 9f       	mul	r27, r20
    3b30:	90 0d       	add	r25, r0
    3b32:	a4 9f       	mul	r26, r20
    3b34:	80 0d       	add	r24, r0
    3b36:	91 1d       	adc	r25, r1
    3b38:	11 24       	eor	r1, r1
    3b3a:	08 95       	ret

00003b3c <__mulshisi3>:
    3b3c:	b7 ff       	sbrs	r27, 7
    3b3e:	0c 94 93 1d 	jmp	0x3b26	; 0x3b26 <__muluhisi3>

00003b42 <__mulohisi3>:
    3b42:	0e 94 93 1d 	call	0x3b26	; 0x3b26 <__muluhisi3>
    3b46:	82 1b       	sub	r24, r18
    3b48:	93 0b       	sbc	r25, r19
    3b4a:	08 95       	ret

00003b4c <__prologue_saves__>:
    3b4c:	2f 92       	push	r2
    3b4e:	3f 92       	push	r3
    3b50:	4f 92       	push	r4
    3b52:	5f 92       	push	r5
    3b54:	6f 92       	push	r6
    3b56:	7f 92       	push	r7
    3b58:	8f 92       	push	r8
    3b5a:	9f 92       	push	r9
    3b5c:	af 92       	push	r10
    3b5e:	bf 92       	push	r11
    3b60:	cf 92       	push	r12
    3b62:	df 92       	push	r13
    3b64:	ef 92       	push	r14
    3b66:	ff 92       	push	r15
    3b68:	0f 93       	push	r16
    3b6a:	1f 93       	push	r17
    3b6c:	cf 93       	push	r28
    3b6e:	df 93       	push	r29
    3b70:	cd b7       	in	r28, 0x3d	; 61
    3b72:	de b7       	in	r29, 0x3e	; 62
    3b74:	ca 1b       	sub	r28, r26
    3b76:	db 0b       	sbc	r29, r27
    3b78:	0f b6       	in	r0, 0x3f	; 63
    3b7a:	f8 94       	cli
    3b7c:	de bf       	out	0x3e, r29	; 62
    3b7e:	0f be       	out	0x3f, r0	; 63
    3b80:	cd bf       	out	0x3d, r28	; 61
    3b82:	09 94       	ijmp

00003b84 <__epilogue_restores__>:
    3b84:	2a 88       	ldd	r2, Y+18	; 0x12
    3b86:	39 88       	ldd	r3, Y+17	; 0x11
    3b88:	48 88       	ldd	r4, Y+16	; 0x10
    3b8a:	5f 84       	ldd	r5, Y+15	; 0x0f
    3b8c:	6e 84       	ldd	r6, Y+14	; 0x0e
    3b8e:	7d 84       	ldd	r7, Y+13	; 0x0d
    3b90:	8c 84       	ldd	r8, Y+12	; 0x0c
    3b92:	9b 84       	ldd	r9, Y+11	; 0x0b
    3b94:	aa 84       	ldd	r10, Y+10	; 0x0a
    3b96:	b9 84       	ldd	r11, Y+9	; 0x09
    3b98:	c8 84       	ldd	r12, Y+8	; 0x08
    3b9a:	df 80       	ldd	r13, Y+7	; 0x07
    3b9c:	ee 80       	ldd	r14, Y+6	; 0x06
    3b9e:	fd 80       	ldd	r15, Y+5	; 0x05
    3ba0:	0c 81       	ldd	r16, Y+4	; 0x04
    3ba2:	1b 81       	ldd	r17, Y+3	; 0x03
    3ba4:	aa 81       	ldd	r26, Y+2	; 0x02
    3ba6:	b9 81       	ldd	r27, Y+1	; 0x01
    3ba8:	ce 0f       	add	r28, r30
    3baa:	d1 1d       	adc	r29, r1
    3bac:	0f b6       	in	r0, 0x3f	; 63
    3bae:	f8 94       	cli
    3bb0:	de bf       	out	0x3e, r29	; 62
    3bb2:	0f be       	out	0x3f, r0	; 63
    3bb4:	cd bf       	out	0x3d, r28	; 61
    3bb6:	ed 01       	movw	r28, r26
    3bb8:	08 95       	ret

00003bba <malloc>:
    3bba:	0f 93       	push	r16
    3bbc:	1f 93       	push	r17
    3bbe:	cf 93       	push	r28
    3bc0:	df 93       	push	r29
    3bc2:	82 30       	cpi	r24, 0x02	; 2
    3bc4:	91 05       	cpc	r25, r1
    3bc6:	10 f4       	brcc	.+4      	; 0x3bcc <malloc+0x12>
    3bc8:	82 e0       	ldi	r24, 0x02	; 2
    3bca:	90 e0       	ldi	r25, 0x00	; 0
    3bcc:	e0 91 1d 02 	lds	r30, 0x021D	; 0x80021d <__flp>
    3bd0:	f0 91 1e 02 	lds	r31, 0x021E	; 0x80021e <__flp+0x1>
    3bd4:	20 e0       	ldi	r18, 0x00	; 0
    3bd6:	30 e0       	ldi	r19, 0x00	; 0
    3bd8:	a0 e0       	ldi	r26, 0x00	; 0
    3bda:	b0 e0       	ldi	r27, 0x00	; 0
    3bdc:	30 97       	sbiw	r30, 0x00	; 0
    3bde:	19 f1       	breq	.+70     	; 0x3c26 <malloc+0x6c>
    3be0:	40 81       	ld	r20, Z
    3be2:	51 81       	ldd	r21, Z+1	; 0x01
    3be4:	02 81       	ldd	r16, Z+2	; 0x02
    3be6:	13 81       	ldd	r17, Z+3	; 0x03
    3be8:	48 17       	cp	r20, r24
    3bea:	59 07       	cpc	r21, r25
    3bec:	c8 f0       	brcs	.+50     	; 0x3c20 <malloc+0x66>
    3bee:	84 17       	cp	r24, r20
    3bf0:	95 07       	cpc	r25, r21
    3bf2:	69 f4       	brne	.+26     	; 0x3c0e <malloc+0x54>
    3bf4:	10 97       	sbiw	r26, 0x00	; 0
    3bf6:	31 f0       	breq	.+12     	; 0x3c04 <malloc+0x4a>
    3bf8:	12 96       	adiw	r26, 0x02	; 2
    3bfa:	0c 93       	st	X, r16
    3bfc:	12 97       	sbiw	r26, 0x02	; 2
    3bfe:	13 96       	adiw	r26, 0x03	; 3
    3c00:	1c 93       	st	X, r17
    3c02:	27 c0       	rjmp	.+78     	; 0x3c52 <malloc+0x98>
    3c04:	00 93 1d 02 	sts	0x021D, r16	; 0x80021d <__flp>
    3c08:	10 93 1e 02 	sts	0x021E, r17	; 0x80021e <__flp+0x1>
    3c0c:	22 c0       	rjmp	.+68     	; 0x3c52 <malloc+0x98>
    3c0e:	21 15       	cp	r18, r1
    3c10:	31 05       	cpc	r19, r1
    3c12:	19 f0       	breq	.+6      	; 0x3c1a <malloc+0x60>
    3c14:	42 17       	cp	r20, r18
    3c16:	53 07       	cpc	r21, r19
    3c18:	18 f4       	brcc	.+6      	; 0x3c20 <malloc+0x66>
    3c1a:	9a 01       	movw	r18, r20
    3c1c:	bd 01       	movw	r22, r26
    3c1e:	ef 01       	movw	r28, r30
    3c20:	df 01       	movw	r26, r30
    3c22:	f8 01       	movw	r30, r16
    3c24:	db cf       	rjmp	.-74     	; 0x3bdc <malloc+0x22>
    3c26:	21 15       	cp	r18, r1
    3c28:	31 05       	cpc	r19, r1
    3c2a:	f9 f0       	breq	.+62     	; 0x3c6a <malloc+0xb0>
    3c2c:	28 1b       	sub	r18, r24
    3c2e:	39 0b       	sbc	r19, r25
    3c30:	24 30       	cpi	r18, 0x04	; 4
    3c32:	31 05       	cpc	r19, r1
    3c34:	80 f4       	brcc	.+32     	; 0x3c56 <malloc+0x9c>
    3c36:	8a 81       	ldd	r24, Y+2	; 0x02
    3c38:	9b 81       	ldd	r25, Y+3	; 0x03
    3c3a:	61 15       	cp	r22, r1
    3c3c:	71 05       	cpc	r23, r1
    3c3e:	21 f0       	breq	.+8      	; 0x3c48 <malloc+0x8e>
    3c40:	fb 01       	movw	r30, r22
    3c42:	93 83       	std	Z+3, r25	; 0x03
    3c44:	82 83       	std	Z+2, r24	; 0x02
    3c46:	04 c0       	rjmp	.+8      	; 0x3c50 <malloc+0x96>
    3c48:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <__flp+0x1>
    3c4c:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <__flp>
    3c50:	fe 01       	movw	r30, r28
    3c52:	32 96       	adiw	r30, 0x02	; 2
    3c54:	44 c0       	rjmp	.+136    	; 0x3cde <malloc+0x124>
    3c56:	fe 01       	movw	r30, r28
    3c58:	e2 0f       	add	r30, r18
    3c5a:	f3 1f       	adc	r31, r19
    3c5c:	81 93       	st	Z+, r24
    3c5e:	91 93       	st	Z+, r25
    3c60:	22 50       	subi	r18, 0x02	; 2
    3c62:	31 09       	sbc	r19, r1
    3c64:	39 83       	std	Y+1, r19	; 0x01
    3c66:	28 83       	st	Y, r18
    3c68:	3a c0       	rjmp	.+116    	; 0x3cde <malloc+0x124>
    3c6a:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <__brkval>
    3c6e:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <__brkval+0x1>
    3c72:	23 2b       	or	r18, r19
    3c74:	41 f4       	brne	.+16     	; 0x3c86 <malloc+0xcc>
    3c76:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__malloc_heap_start>
    3c7a:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__malloc_heap_start+0x1>
    3c7e:	30 93 1c 02 	sts	0x021C, r19	; 0x80021c <__brkval+0x1>
    3c82:	20 93 1b 02 	sts	0x021B, r18	; 0x80021b <__brkval>
    3c86:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_end>
    3c8a:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_end+0x1>
    3c8e:	21 15       	cp	r18, r1
    3c90:	31 05       	cpc	r19, r1
    3c92:	41 f4       	brne	.+16     	; 0x3ca4 <malloc+0xea>
    3c94:	2d b7       	in	r18, 0x3d	; 61
    3c96:	3e b7       	in	r19, 0x3e	; 62
    3c98:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <__malloc_margin>
    3c9c:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <__malloc_margin+0x1>
    3ca0:	24 1b       	sub	r18, r20
    3ca2:	35 0b       	sbc	r19, r21
    3ca4:	e0 91 1b 02 	lds	r30, 0x021B	; 0x80021b <__brkval>
    3ca8:	f0 91 1c 02 	lds	r31, 0x021C	; 0x80021c <__brkval+0x1>
    3cac:	e2 17       	cp	r30, r18
    3cae:	f3 07       	cpc	r31, r19
    3cb0:	a0 f4       	brcc	.+40     	; 0x3cda <malloc+0x120>
    3cb2:	2e 1b       	sub	r18, r30
    3cb4:	3f 0b       	sbc	r19, r31
    3cb6:	28 17       	cp	r18, r24
    3cb8:	39 07       	cpc	r19, r25
    3cba:	78 f0       	brcs	.+30     	; 0x3cda <malloc+0x120>
    3cbc:	ac 01       	movw	r20, r24
    3cbe:	4e 5f       	subi	r20, 0xFE	; 254
    3cc0:	5f 4f       	sbci	r21, 0xFF	; 255
    3cc2:	24 17       	cp	r18, r20
    3cc4:	35 07       	cpc	r19, r21
    3cc6:	48 f0       	brcs	.+18     	; 0x3cda <malloc+0x120>
    3cc8:	4e 0f       	add	r20, r30
    3cca:	5f 1f       	adc	r21, r31
    3ccc:	50 93 1c 02 	sts	0x021C, r21	; 0x80021c <__brkval+0x1>
    3cd0:	40 93 1b 02 	sts	0x021B, r20	; 0x80021b <__brkval>
    3cd4:	81 93       	st	Z+, r24
    3cd6:	91 93       	st	Z+, r25
    3cd8:	02 c0       	rjmp	.+4      	; 0x3cde <malloc+0x124>
    3cda:	e0 e0       	ldi	r30, 0x00	; 0
    3cdc:	f0 e0       	ldi	r31, 0x00	; 0
    3cde:	cf 01       	movw	r24, r30
    3ce0:	df 91       	pop	r29
    3ce2:	cf 91       	pop	r28
    3ce4:	1f 91       	pop	r17
    3ce6:	0f 91       	pop	r16
    3ce8:	08 95       	ret

00003cea <free>:
    3cea:	cf 93       	push	r28
    3cec:	df 93       	push	r29
    3cee:	00 97       	sbiw	r24, 0x00	; 0
    3cf0:	09 f4       	brne	.+2      	; 0x3cf4 <free+0xa>
    3cf2:	81 c0       	rjmp	.+258    	; 0x3df6 <free+0x10c>
    3cf4:	fc 01       	movw	r30, r24
    3cf6:	32 97       	sbiw	r30, 0x02	; 2
    3cf8:	13 82       	std	Z+3, r1	; 0x03
    3cfa:	12 82       	std	Z+2, r1	; 0x02
    3cfc:	a0 91 1d 02 	lds	r26, 0x021D	; 0x80021d <__flp>
    3d00:	b0 91 1e 02 	lds	r27, 0x021E	; 0x80021e <__flp+0x1>
    3d04:	10 97       	sbiw	r26, 0x00	; 0
    3d06:	81 f4       	brne	.+32     	; 0x3d28 <free+0x3e>
    3d08:	20 81       	ld	r18, Z
    3d0a:	31 81       	ldd	r19, Z+1	; 0x01
    3d0c:	82 0f       	add	r24, r18
    3d0e:	93 1f       	adc	r25, r19
    3d10:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <__brkval>
    3d14:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <__brkval+0x1>
    3d18:	28 17       	cp	r18, r24
    3d1a:	39 07       	cpc	r19, r25
    3d1c:	51 f5       	brne	.+84     	; 0x3d72 <free+0x88>
    3d1e:	f0 93 1c 02 	sts	0x021C, r31	; 0x80021c <__brkval+0x1>
    3d22:	e0 93 1b 02 	sts	0x021B, r30	; 0x80021b <__brkval>
    3d26:	67 c0       	rjmp	.+206    	; 0x3df6 <free+0x10c>
    3d28:	ed 01       	movw	r28, r26
    3d2a:	20 e0       	ldi	r18, 0x00	; 0
    3d2c:	30 e0       	ldi	r19, 0x00	; 0
    3d2e:	ce 17       	cp	r28, r30
    3d30:	df 07       	cpc	r29, r31
    3d32:	40 f4       	brcc	.+16     	; 0x3d44 <free+0x5a>
    3d34:	4a 81       	ldd	r20, Y+2	; 0x02
    3d36:	5b 81       	ldd	r21, Y+3	; 0x03
    3d38:	9e 01       	movw	r18, r28
    3d3a:	41 15       	cp	r20, r1
    3d3c:	51 05       	cpc	r21, r1
    3d3e:	f1 f0       	breq	.+60     	; 0x3d7c <free+0x92>
    3d40:	ea 01       	movw	r28, r20
    3d42:	f5 cf       	rjmp	.-22     	; 0x3d2e <free+0x44>
    3d44:	d3 83       	std	Z+3, r29	; 0x03
    3d46:	c2 83       	std	Z+2, r28	; 0x02
    3d48:	40 81       	ld	r20, Z
    3d4a:	51 81       	ldd	r21, Z+1	; 0x01
    3d4c:	84 0f       	add	r24, r20
    3d4e:	95 1f       	adc	r25, r21
    3d50:	c8 17       	cp	r28, r24
    3d52:	d9 07       	cpc	r29, r25
    3d54:	59 f4       	brne	.+22     	; 0x3d6c <free+0x82>
    3d56:	88 81       	ld	r24, Y
    3d58:	99 81       	ldd	r25, Y+1	; 0x01
    3d5a:	84 0f       	add	r24, r20
    3d5c:	95 1f       	adc	r25, r21
    3d5e:	02 96       	adiw	r24, 0x02	; 2
    3d60:	91 83       	std	Z+1, r25	; 0x01
    3d62:	80 83       	st	Z, r24
    3d64:	8a 81       	ldd	r24, Y+2	; 0x02
    3d66:	9b 81       	ldd	r25, Y+3	; 0x03
    3d68:	93 83       	std	Z+3, r25	; 0x03
    3d6a:	82 83       	std	Z+2, r24	; 0x02
    3d6c:	21 15       	cp	r18, r1
    3d6e:	31 05       	cpc	r19, r1
    3d70:	29 f4       	brne	.+10     	; 0x3d7c <free+0x92>
    3d72:	f0 93 1e 02 	sts	0x021E, r31	; 0x80021e <__flp+0x1>
    3d76:	e0 93 1d 02 	sts	0x021D, r30	; 0x80021d <__flp>
    3d7a:	3d c0       	rjmp	.+122    	; 0x3df6 <free+0x10c>
    3d7c:	e9 01       	movw	r28, r18
    3d7e:	fb 83       	std	Y+3, r31	; 0x03
    3d80:	ea 83       	std	Y+2, r30	; 0x02
    3d82:	49 91       	ld	r20, Y+
    3d84:	59 91       	ld	r21, Y+
    3d86:	c4 0f       	add	r28, r20
    3d88:	d5 1f       	adc	r29, r21
    3d8a:	ec 17       	cp	r30, r28
    3d8c:	fd 07       	cpc	r31, r29
    3d8e:	61 f4       	brne	.+24     	; 0x3da8 <free+0xbe>
    3d90:	80 81       	ld	r24, Z
    3d92:	91 81       	ldd	r25, Z+1	; 0x01
    3d94:	84 0f       	add	r24, r20
    3d96:	95 1f       	adc	r25, r21
    3d98:	02 96       	adiw	r24, 0x02	; 2
    3d9a:	e9 01       	movw	r28, r18
    3d9c:	99 83       	std	Y+1, r25	; 0x01
    3d9e:	88 83       	st	Y, r24
    3da0:	82 81       	ldd	r24, Z+2	; 0x02
    3da2:	93 81       	ldd	r25, Z+3	; 0x03
    3da4:	9b 83       	std	Y+3, r25	; 0x03
    3da6:	8a 83       	std	Y+2, r24	; 0x02
    3da8:	e0 e0       	ldi	r30, 0x00	; 0
    3daa:	f0 e0       	ldi	r31, 0x00	; 0
    3dac:	12 96       	adiw	r26, 0x02	; 2
    3dae:	8d 91       	ld	r24, X+
    3db0:	9c 91       	ld	r25, X
    3db2:	13 97       	sbiw	r26, 0x03	; 3
    3db4:	00 97       	sbiw	r24, 0x00	; 0
    3db6:	19 f0       	breq	.+6      	; 0x3dbe <free+0xd4>
    3db8:	fd 01       	movw	r30, r26
    3dba:	dc 01       	movw	r26, r24
    3dbc:	f7 cf       	rjmp	.-18     	; 0x3dac <free+0xc2>
    3dbe:	8d 91       	ld	r24, X+
    3dc0:	9c 91       	ld	r25, X
    3dc2:	11 97       	sbiw	r26, 0x01	; 1
    3dc4:	9d 01       	movw	r18, r26
    3dc6:	2e 5f       	subi	r18, 0xFE	; 254
    3dc8:	3f 4f       	sbci	r19, 0xFF	; 255
    3dca:	82 0f       	add	r24, r18
    3dcc:	93 1f       	adc	r25, r19
    3dce:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <__brkval>
    3dd2:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <__brkval+0x1>
    3dd6:	28 17       	cp	r18, r24
    3dd8:	39 07       	cpc	r19, r25
    3dda:	69 f4       	brne	.+26     	; 0x3df6 <free+0x10c>
    3ddc:	30 97       	sbiw	r30, 0x00	; 0
    3dde:	29 f4       	brne	.+10     	; 0x3dea <free+0x100>
    3de0:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <__flp+0x1>
    3de4:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <__flp>
    3de8:	02 c0       	rjmp	.+4      	; 0x3dee <free+0x104>
    3dea:	13 82       	std	Z+3, r1	; 0x03
    3dec:	12 82       	std	Z+2, r1	; 0x02
    3dee:	b0 93 1c 02 	sts	0x021C, r27	; 0x80021c <__brkval+0x1>
    3df2:	a0 93 1b 02 	sts	0x021B, r26	; 0x80021b <__brkval>
    3df6:	df 91       	pop	r29
    3df8:	cf 91       	pop	r28
    3dfa:	08 95       	ret

00003dfc <strncat>:
    3dfc:	fb 01       	movw	r30, r22
    3dfe:	dc 01       	movw	r26, r24
    3e00:	0d 90       	ld	r0, X+
    3e02:	00 20       	and	r0, r0
    3e04:	e9 f7       	brne	.-6      	; 0x3e00 <strncat+0x4>
    3e06:	11 97       	sbiw	r26, 0x01	; 1
    3e08:	41 50       	subi	r20, 0x01	; 1
    3e0a:	50 40       	sbci	r21, 0x00	; 0
    3e0c:	28 f0       	brcs	.+10     	; 0x3e18 <strncat+0x1c>
    3e0e:	01 90       	ld	r0, Z+
    3e10:	00 20       	and	r0, r0
    3e12:	0d 92       	st	X+, r0
    3e14:	c9 f7       	brne	.-14     	; 0x3e08 <strncat+0xc>
    3e16:	08 95       	ret
    3e18:	1c 92       	st	X, r1
    3e1a:	08 95       	ret

00003e1c <__do_global_dtors>:
    3e1c:	10 e0       	ldi	r17, 0x00	; 0
    3e1e:	ca e4       	ldi	r28, 0x4A	; 74
    3e20:	d0 e0       	ldi	r29, 0x00	; 0
    3e22:	04 c0       	rjmp	.+8      	; 0x3e2c <__do_global_dtors+0x10>
    3e24:	fe 01       	movw	r30, r28
    3e26:	0e 94 7e 1d 	call	0x3afc	; 0x3afc <__tablejump2__>
    3e2a:	21 96       	adiw	r28, 0x01	; 1
    3e2c:	cb 34       	cpi	r28, 0x4B	; 75
    3e2e:	d1 07       	cpc	r29, r17
    3e30:	c9 f7       	brne	.-14     	; 0x3e24 <__do_global_dtors+0x8>
    3e32:	f8 94       	cli

00003e34 <__stop_program>:
    3e34:	ff cf       	rjmp	.-2      	; 0x3e34 <__stop_program>
