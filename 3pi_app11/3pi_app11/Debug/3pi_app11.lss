
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000094  00800100  00003b44  00003bd8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003b44  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000008f  00800194  00800194  00003c6c  2**0
                  ALLOC
  3 .stab         00007a64  00000000  00000000  00003c6c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000a086  00000000  00000000  0000b6d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  00015756  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00015798  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 000001c0  00000000  00000000  000157d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00003601  00000000  00000000  00015998  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000011fa  00000000  00000000  00018f99  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00002161  00000000  00000000  0001a193  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000584  00000000  00000000  0001c2f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000a78  00000000  00000000  0001c878  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00001750  00000000  00000000  0001d2f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000001d8  00000000  00000000  0001ea40  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 43 00 	jmp	0x86	; 0x86 <__dtors_end>
       4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
       8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
       c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      24:	0c 94 a3 15 	jmp	0x2b46	; 0x2b46 <__vector_9>
      28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      34:	0c 94 3a 11 	jmp	0x2274	; 0x2274 <__vector_13>
      38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      48:	0c 94 b2 14 	jmp	0x2964	; 0x2964 <__vector_18>
      4c:	0c 94 7e 15 	jmp	0x2afc	; 0x2afc <__vector_19>
      50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      68:	69 07       	cpc	r22, r25
      6a:	97 07       	cpc	r25, r23
      6c:	02 08       	sbc	r0, r2
      6e:	6d 07       	cpc	r22, r29
      70:	7c 07       	cpc	r23, r28
      72:	8b 07       	cpc	r24, r27
      74:	6d 07       	cpc	r22, r29
      76:	6d 07       	cpc	r22, r29
      78:	6d 07       	cpc	r22, r29

0000007a <__trampolines_end>:
      7a:	3e 67       	ori	r19, 0x7E	; 126
      7c:	33 32       	cpi	r19, 0x23	; 35
      7e:	3e 3e       	cpi	r19, 0xEE	; 238
      80:	63 33       	cpi	r22, 0x33	; 51
      82:	32 00       	.word	0x0032	; ????

00000084 <__ctors_end>:
      84:	84 16       	cp	r8, r20

00000086 <__dtors_end>:
      86:	11 24       	eor	r1, r1
      88:	1f be       	out	0x3f, r1	; 63
      8a:	cf ef       	ldi	r28, 0xFF	; 255
      8c:	d8 e0       	ldi	r29, 0x08	; 8
      8e:	de bf       	out	0x3e, r29	; 62
      90:	cd bf       	out	0x3d, r28	; 61

00000092 <__do_copy_data>:
      92:	11 e0       	ldi	r17, 0x01	; 1
      94:	a0 e0       	ldi	r26, 0x00	; 0
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	e4 e4       	ldi	r30, 0x44	; 68
      9a:	fb e3       	ldi	r31, 0x3B	; 59
      9c:	02 c0       	rjmp	.+4      	; 0xa2 <__do_copy_data+0x10>
      9e:	05 90       	lpm	r0, Z+
      a0:	0d 92       	st	X+, r0
      a2:	a4 39       	cpi	r26, 0x94	; 148
      a4:	b1 07       	cpc	r27, r17
      a6:	d9 f7       	brne	.-10     	; 0x9e <__do_copy_data+0xc>

000000a8 <__do_clear_bss>:
      a8:	22 e0       	ldi	r18, 0x02	; 2
      aa:	a4 e9       	ldi	r26, 0x94	; 148
      ac:	b1 e0       	ldi	r27, 0x01	; 1
      ae:	01 c0       	rjmp	.+2      	; 0xb2 <.do_clear_bss_start>

000000b0 <.do_clear_bss_loop>:
      b0:	1d 92       	st	X+, r1

000000b2 <.do_clear_bss_start>:
      b2:	a3 32       	cpi	r26, 0x23	; 35
      b4:	b2 07       	cpc	r27, r18
      b6:	e1 f7       	brne	.-8      	; 0xb0 <.do_clear_bss_loop>
      b8:	0e 94 8d 03 	call	0x71a	; 0x71a <main>
      bc:	0c 94 95 1d 	jmp	0x3b2a	; 0x3b2a <__do_global_dtors>

000000c0 <__bad_interrupt>:
      c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <filllocationarrays>:


#define START 010
#define STOP 101

void filllocationarrays(Communications *self){
      c4:	cf 93       	push	r28
      c6:	df 93       	push	r29
      c8:	cd b7       	in	r28, 0x3d	; 61
      ca:	de b7       	in	r29, 0x3e	; 62
      cc:	e2 97       	sbiw	r28, 0x32	; 50
      ce:	0f b6       	in	r0, 0x3f	; 63
      d0:	f8 94       	cli
      d2:	de bf       	out	0x3e, r29	; 62
      d4:	0f be       	out	0x3f, r0	; 63
      d6:	cd bf       	out	0x3d, r28	; 61
      d8:	dc 01       	movw	r26, r24
	char arrx[25];
	char arry[25];
	char set;
	int placement=0;

	for (int i=0;i<25;i++){
      da:	20 e0       	ldi	r18, 0x00	; 0
      dc:	30 e0       	ldi	r19, 0x00	; 0
      de:	1a c0       	rjmp	.+52     	; 0x114 <filllocationarrays+0x50>
	arrx[i]=arry[i]=self->Orderary[i]=self->Orderarx[i]=0;
      e0:	ad 01       	movw	r20, r26
      e2:	42 0f       	add	r20, r18
      e4:	53 1f       	adc	r21, r19
      e6:	ca 01       	movw	r24, r20
      e8:	8e 5a       	subi	r24, 0xAE	; 174
      ea:	9f 4f       	sbci	r25, 0xFF	; 255
      ec:	fc 01       	movw	r30, r24
      ee:	10 82       	st	Z, r1
      f0:	fa 01       	movw	r30, r20
      f2:	11 ae       	std	Z+57, r1	; 0x39
      f4:	ea e1       	ldi	r30, 0x1A	; 26
      f6:	f0 e0       	ldi	r31, 0x00	; 0
      f8:	ec 0f       	add	r30, r28
      fa:	fd 1f       	adc	r31, r29
      fc:	e2 0f       	add	r30, r18
      fe:	f3 1f       	adc	r31, r19
     100:	10 82       	st	Z, r1
     102:	e1 e0       	ldi	r30, 0x01	; 1
     104:	f0 e0       	ldi	r31, 0x00	; 0
     106:	ec 0f       	add	r30, r28
     108:	fd 1f       	adc	r31, r29
     10a:	e2 0f       	add	r30, r18
     10c:	f3 1f       	adc	r31, r19
     10e:	10 82       	st	Z, r1
	char arrx[25];
	char arry[25];
	char set;
	int placement=0;

	for (int i=0;i<25;i++){
     110:	2f 5f       	subi	r18, 0xFF	; 255
     112:	3f 4f       	sbci	r19, 0xFF	; 255
     114:	29 31       	cpi	r18, 0x19	; 25
     116:	31 05       	cpc	r19, r1
     118:	1c f3       	brlt	.-58     	; 0xe0 <filllocationarrays+0x1c>
	arrx[i]=arry[i]=self->Orderary[i]=self->Orderarx[i]=0;
}

	if (self->Recieved[1]==1){
     11a:	5c 96       	adiw	r26, 0x1c	; 28
     11c:	8c 91       	ld	r24, X
     11e:	5c 97       	sbiw	r26, 0x1c	; 28
     120:	81 30       	cpi	r24, 0x01	; 1
     122:	29 f4       	brne	.+10     	; 0x12e <filllocationarrays+0x6a>
		arrx[placement]=1;
     124:	89 83       	std	Y+1, r24	; 0x01
		arry[placement]=1;
     126:	8a 8f       	std	Y+26, r24	; 0x1a
		placement++;
     128:	21 e0       	ldi	r18, 0x01	; 1
     12a:	30 e0       	ldi	r19, 0x00	; 0
     12c:	02 c0       	rjmp	.+4      	; 0x132 <filllocationarrays+0x6e>

void filllocationarrays(Communications *self){
	char arrx[25];
	char arry[25];
	char set;
	int placement=0;
     12e:	20 e0       	ldi	r18, 0x00	; 0
     130:	30 e0       	ldi	r19, 0x00	; 0
     132:	40 e0       	ldi	r20, 0x00	; 0
     134:	50 e0       	ldi	r21, 0x00	; 0
     136:	3b c0       	rjmp	.+118    	; 0x1ae <filllocationarrays+0xea>
		arrx[placement]=1;
		arry[placement]=1;
		placement++;
	}
	for (int i=0;i<8;i++){
		set = ((self->Recieved[2] >> i)  & 0x01);
     138:	5d 96       	adiw	r26, 0x1d	; 29
     13a:	8c 91       	ld	r24, X
     13c:	5d 97       	sbiw	r26, 0x1d	; 29
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	04 2e       	mov	r0, r20
     142:	02 c0       	rjmp	.+4      	; 0x148 <filllocationarrays+0x84>
     144:	95 95       	asr	r25
     146:	87 95       	ror	r24
     148:	0a 94       	dec	r0
     14a:	e2 f7       	brpl	.-8      	; 0x144 <filllocationarrays+0x80>
     14c:	81 70       	andi	r24, 0x01	; 1
		if (i<4){
     14e:	44 30       	cpi	r20, 0x04	; 4
     150:	51 05       	cpc	r21, r1
     152:	b4 f4       	brge	.+44     	; 0x180 <filllocationarrays+0xbc>
			if (set == 1){
     154:	81 30       	cpi	r24, 0x01	; 1
     156:	49 f5       	brne	.+82     	; 0x1aa <filllocationarrays+0xe6>
			arrx[placement]=i+1+1;
     158:	e1 e0       	ldi	r30, 0x01	; 1
     15a:	f0 e0       	ldi	r31, 0x00	; 0
     15c:	ec 0f       	add	r30, r28
     15e:	fd 1f       	adc	r31, r29
     160:	e2 0f       	add	r30, r18
     162:	f3 1f       	adc	r31, r19
     164:	82 e0       	ldi	r24, 0x02	; 2
     166:	84 0f       	add	r24, r20
     168:	80 83       	st	Z, r24
			arry[placement]=0+1;
     16a:	ea e1       	ldi	r30, 0x1A	; 26
     16c:	f0 e0       	ldi	r31, 0x00	; 0
     16e:	ec 0f       	add	r30, r28
     170:	fd 1f       	adc	r31, r29
     172:	e2 0f       	add	r30, r18
     174:	f3 1f       	adc	r31, r19
     176:	81 e0       	ldi	r24, 0x01	; 1
     178:	80 83       	st	Z, r24
			placement++;}
     17a:	2f 5f       	subi	r18, 0xFF	; 255
     17c:	3f 4f       	sbci	r19, 0xFF	; 255
     17e:	15 c0       	rjmp	.+42     	; 0x1aa <filllocationarrays+0xe6>
		}else{
			if (set == 1){
     180:	81 30       	cpi	r24, 0x01	; 1
     182:	99 f4       	brne	.+38     	; 0x1aa <filllocationarrays+0xe6>
			arrx[placement]=i-4+1;
     184:	e1 e0       	ldi	r30, 0x01	; 1
     186:	f0 e0       	ldi	r31, 0x00	; 0
     188:	ec 0f       	add	r30, r28
     18a:	fd 1f       	adc	r31, r29
     18c:	e2 0f       	add	r30, r18
     18e:	f3 1f       	adc	r31, r19
     190:	8d ef       	ldi	r24, 0xFD	; 253
     192:	84 0f       	add	r24, r20
     194:	80 83       	st	Z, r24
			arry[placement]=1+1;
     196:	ea e1       	ldi	r30, 0x1A	; 26
     198:	f0 e0       	ldi	r31, 0x00	; 0
     19a:	ec 0f       	add	r30, r28
     19c:	fd 1f       	adc	r31, r29
     19e:	e2 0f       	add	r30, r18
     1a0:	f3 1f       	adc	r31, r19
     1a2:	82 e0       	ldi	r24, 0x02	; 2
     1a4:	80 83       	st	Z, r24
			placement++;}
     1a6:	2f 5f       	subi	r18, 0xFF	; 255
     1a8:	3f 4f       	sbci	r19, 0xFF	; 255
	if (self->Recieved[1]==1){
		arrx[placement]=1;
		arry[placement]=1;
		placement++;
	}
	for (int i=0;i<8;i++){
     1aa:	4f 5f       	subi	r20, 0xFF	; 255
     1ac:	5f 4f       	sbci	r21, 0xFF	; 255
     1ae:	48 30       	cpi	r20, 0x08	; 8
     1b0:	51 05       	cpc	r21, r1
     1b2:	14 f2       	brlt	.-124    	; 0x138 <filllocationarrays+0x74>
     1b4:	40 e0       	ldi	r20, 0x00	; 0
     1b6:	50 e0       	ldi	r21, 0x00	; 0
     1b8:	53 c0       	rjmp	.+166    	; 0x260 <filllocationarrays+0x19c>
			arry[placement]=1+1;
			placement++;}
		}
	}
		for (int i=0;i<8;i++){
			set = ((self->Recieved[3] >> i)  & 0x01);
     1ba:	5e 96       	adiw	r26, 0x1e	; 30
     1bc:	8c 91       	ld	r24, X
     1be:	5e 97       	sbiw	r26, 0x1e	; 30
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	04 2e       	mov	r0, r20
     1c4:	02 c0       	rjmp	.+4      	; 0x1ca <filllocationarrays+0x106>
     1c6:	95 95       	asr	r25
     1c8:	87 95       	ror	r24
     1ca:	0a 94       	dec	r0
     1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <filllocationarrays+0x102>
     1ce:	81 70       	andi	r24, 0x01	; 1
			if (i==0){
     1d0:	41 15       	cp	r20, r1
     1d2:	51 05       	cpc	r21, r1
     1d4:	b9 f4       	brne	.+46     	; 0x204 <filllocationarrays+0x140>
				if (set == 1){
     1d6:	81 30       	cpi	r24, 0x01	; 1
     1d8:	09 f0       	breq	.+2      	; 0x1dc <filllocationarrays+0x118>
     1da:	40 c0       	rjmp	.+128    	; 0x25c <filllocationarrays+0x198>
				arrx[placement]=i+4+1;
     1dc:	e1 e0       	ldi	r30, 0x01	; 1
     1de:	f0 e0       	ldi	r31, 0x00	; 0
     1e0:	ec 0f       	add	r30, r28
     1e2:	fd 1f       	adc	r31, r29
     1e4:	e2 0f       	add	r30, r18
     1e6:	f3 1f       	adc	r31, r19
     1e8:	85 e0       	ldi	r24, 0x05	; 5
     1ea:	84 0f       	add	r24, r20
     1ec:	80 83       	st	Z, r24
				arry[placement]=1+1;
     1ee:	ea e1       	ldi	r30, 0x1A	; 26
     1f0:	f0 e0       	ldi	r31, 0x00	; 0
     1f2:	ec 0f       	add	r30, r28
     1f4:	fd 1f       	adc	r31, r29
     1f6:	e2 0f       	add	r30, r18
     1f8:	f3 1f       	adc	r31, r19
     1fa:	82 e0       	ldi	r24, 0x02	; 2
     1fc:	80 83       	st	Z, r24
				placement++;}
     1fe:	2f 5f       	subi	r18, 0xFF	; 255
     200:	3f 4f       	sbci	r19, 0xFF	; 255
     202:	2c c0       	rjmp	.+88     	; 0x25c <filllocationarrays+0x198>
			}else if(i<6){
     204:	46 30       	cpi	r20, 0x06	; 6
     206:	51 05       	cpc	r21, r1
     208:	a4 f4       	brge	.+40     	; 0x232 <filllocationarrays+0x16e>
				if (set == 1){
     20a:	81 30       	cpi	r24, 0x01	; 1
     20c:	39 f5       	brne	.+78     	; 0x25c <filllocationarrays+0x198>
				arrx[placement]=i-1+1;
     20e:	e1 e0       	ldi	r30, 0x01	; 1
     210:	f0 e0       	ldi	r31, 0x00	; 0
     212:	ec 0f       	add	r30, r28
     214:	fd 1f       	adc	r31, r29
     216:	e2 0f       	add	r30, r18
     218:	f3 1f       	adc	r31, r19
     21a:	40 83       	st	Z, r20
				arry[placement]=2+1;
     21c:	ea e1       	ldi	r30, 0x1A	; 26
     21e:	f0 e0       	ldi	r31, 0x00	; 0
     220:	ec 0f       	add	r30, r28
     222:	fd 1f       	adc	r31, r29
     224:	e2 0f       	add	r30, r18
     226:	f3 1f       	adc	r31, r19
     228:	83 e0       	ldi	r24, 0x03	; 3
     22a:	80 83       	st	Z, r24
				placement++;}
     22c:	2f 5f       	subi	r18, 0xFF	; 255
     22e:	3f 4f       	sbci	r19, 0xFF	; 255
     230:	15 c0       	rjmp	.+42     	; 0x25c <filllocationarrays+0x198>
			}else{
				if (set == 1){
     232:	81 30       	cpi	r24, 0x01	; 1
     234:	99 f4       	brne	.+38     	; 0x25c <filllocationarrays+0x198>
				arrx[placement]=i-6+1;
     236:	e1 e0       	ldi	r30, 0x01	; 1
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	ec 0f       	add	r30, r28
     23c:	fd 1f       	adc	r31, r29
     23e:	e2 0f       	add	r30, r18
     240:	f3 1f       	adc	r31, r19
     242:	8b ef       	ldi	r24, 0xFB	; 251
     244:	84 0f       	add	r24, r20
     246:	80 83       	st	Z, r24
				arry[placement]=3+1;
     248:	ea e1       	ldi	r30, 0x1A	; 26
     24a:	f0 e0       	ldi	r31, 0x00	; 0
     24c:	ec 0f       	add	r30, r28
     24e:	fd 1f       	adc	r31, r29
     250:	e2 0f       	add	r30, r18
     252:	f3 1f       	adc	r31, r19
     254:	84 e0       	ldi	r24, 0x04	; 4
     256:	80 83       	st	Z, r24
				placement++;}
     258:	2f 5f       	subi	r18, 0xFF	; 255
     25a:	3f 4f       	sbci	r19, 0xFF	; 255
			arrx[placement]=i-4+1;
			arry[placement]=1+1;
			placement++;}
		}
	}
		for (int i=0;i<8;i++){
     25c:	4f 5f       	subi	r20, 0xFF	; 255
     25e:	5f 4f       	sbci	r21, 0xFF	; 255
     260:	48 30       	cpi	r20, 0x08	; 8
     262:	51 05       	cpc	r21, r1
     264:	0c f4       	brge	.+2      	; 0x268 <filllocationarrays+0x1a4>
     266:	a9 cf       	rjmp	.-174    	; 0x1ba <filllocationarrays+0xf6>
     268:	40 e0       	ldi	r20, 0x00	; 0
     26a:	50 e0       	ldi	r21, 0x00	; 0
     26c:	3b c0       	rjmp	.+118    	; 0x2e4 <filllocationarrays+0x220>
				arry[placement]=3+1;
				placement++;}
			}
		}
		for (int i=0;i<8;i++){
			set = ((self->Recieved[4] >> i)  & 0x01);
     26e:	5f 96       	adiw	r26, 0x1f	; 31
     270:	8c 91       	ld	r24, X
     272:	5f 97       	sbiw	r26, 0x1f	; 31
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	04 2e       	mov	r0, r20
     278:	02 c0       	rjmp	.+4      	; 0x27e <filllocationarrays+0x1ba>
     27a:	95 95       	asr	r25
     27c:	87 95       	ror	r24
     27e:	0a 94       	dec	r0
     280:	e2 f7       	brpl	.-8      	; 0x27a <filllocationarrays+0x1b6>
     282:	81 70       	andi	r24, 0x01	; 1
			if (i<3){
     284:	43 30       	cpi	r20, 0x03	; 3
     286:	51 05       	cpc	r21, r1
     288:	b4 f4       	brge	.+44     	; 0x2b6 <filllocationarrays+0x1f2>
				if (set == 1){
     28a:	81 30       	cpi	r24, 0x01	; 1
     28c:	49 f5       	brne	.+82     	; 0x2e0 <filllocationarrays+0x21c>
				arrx[placement]=i+2+1;
     28e:	e1 e0       	ldi	r30, 0x01	; 1
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	ec 0f       	add	r30, r28
     294:	fd 1f       	adc	r31, r29
     296:	e2 0f       	add	r30, r18
     298:	f3 1f       	adc	r31, r19
     29a:	83 e0       	ldi	r24, 0x03	; 3
     29c:	84 0f       	add	r24, r20
     29e:	80 83       	st	Z, r24
				arry[placement]=3+1;
     2a0:	ea e1       	ldi	r30, 0x1A	; 26
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	ec 0f       	add	r30, r28
     2a6:	fd 1f       	adc	r31, r29
     2a8:	e2 0f       	add	r30, r18
     2aa:	f3 1f       	adc	r31, r19
     2ac:	84 e0       	ldi	r24, 0x04	; 4
     2ae:	80 83       	st	Z, r24
				placement++;}
     2b0:	2f 5f       	subi	r18, 0xFF	; 255
     2b2:	3f 4f       	sbci	r19, 0xFF	; 255
     2b4:	15 c0       	rjmp	.+42     	; 0x2e0 <filllocationarrays+0x21c>
			}else{
				if (set == 1){
     2b6:	81 30       	cpi	r24, 0x01	; 1
     2b8:	99 f4       	brne	.+38     	; 0x2e0 <filllocationarrays+0x21c>
				arrx[placement]=i-3+1;
     2ba:	e1 e0       	ldi	r30, 0x01	; 1
     2bc:	f0 e0       	ldi	r31, 0x00	; 0
     2be:	ec 0f       	add	r30, r28
     2c0:	fd 1f       	adc	r31, r29
     2c2:	e2 0f       	add	r30, r18
     2c4:	f3 1f       	adc	r31, r19
     2c6:	8e ef       	ldi	r24, 0xFE	; 254
     2c8:	84 0f       	add	r24, r20
     2ca:	80 83       	st	Z, r24
				arry[placement]=4+1;
     2cc:	ea e1       	ldi	r30, 0x1A	; 26
     2ce:	f0 e0       	ldi	r31, 0x00	; 0
     2d0:	ec 0f       	add	r30, r28
     2d2:	fd 1f       	adc	r31, r29
     2d4:	e2 0f       	add	r30, r18
     2d6:	f3 1f       	adc	r31, r19
     2d8:	85 e0       	ldi	r24, 0x05	; 5
     2da:	80 83       	st	Z, r24
				placement++;}
     2dc:	2f 5f       	subi	r18, 0xFF	; 255
     2de:	3f 4f       	sbci	r19, 0xFF	; 255
				arrx[placement]=i-6+1;
				arry[placement]=3+1;
				placement++;}
			}
		}
		for (int i=0;i<8;i++){
     2e0:	4f 5f       	subi	r20, 0xFF	; 255
     2e2:	5f 4f       	sbci	r21, 0xFF	; 255
     2e4:	48 30       	cpi	r20, 0x08	; 8
     2e6:	51 05       	cpc	r21, r1
     2e8:	14 f2       	brlt	.-124    	; 0x26e <filllocationarrays+0x1aa>
     2ea:	20 e0       	ldi	r18, 0x00	; 0
     2ec:	30 e0       	ldi	r19, 0x00	; 0
     2ee:	19 c0       	rjmp	.+50     	; 0x322 <filllocationarrays+0x25e>
				arry[placement]=4+1;
				placement++;}
			}
		}
	for (int i=0;i<25;i++){
		self->Orderarx[i]=arrx[i];
     2f0:	e1 e0       	ldi	r30, 0x01	; 1
     2f2:	f0 e0       	ldi	r31, 0x00	; 0
     2f4:	ec 0f       	add	r30, r28
     2f6:	fd 1f       	adc	r31, r29
     2f8:	e2 0f       	add	r30, r18
     2fa:	f3 1f       	adc	r31, r19
     2fc:	40 81       	ld	r20, Z
     2fe:	cd 01       	movw	r24, r26
     300:	82 0f       	add	r24, r18
     302:	93 1f       	adc	r25, r19
     304:	fc 01       	movw	r30, r24
     306:	ee 5a       	subi	r30, 0xAE	; 174
     308:	ff 4f       	sbci	r31, 0xFF	; 255
     30a:	40 83       	st	Z, r20
		self->Orderary[i]=arry[i];
     30c:	ea e1       	ldi	r30, 0x1A	; 26
     30e:	f0 e0       	ldi	r31, 0x00	; 0
     310:	ec 0f       	add	r30, r28
     312:	fd 1f       	adc	r31, r29
     314:	e2 0f       	add	r30, r18
     316:	f3 1f       	adc	r31, r19
     318:	40 81       	ld	r20, Z
     31a:	fc 01       	movw	r30, r24
     31c:	41 af       	std	Z+57, r20	; 0x39
				arrx[placement]=i-3+1;
				arry[placement]=4+1;
				placement++;}
			}
		}
	for (int i=0;i<25;i++){
     31e:	2f 5f       	subi	r18, 0xFF	; 255
     320:	3f 4f       	sbci	r19, 0xFF	; 255
     322:	29 31       	cpi	r18, 0x19	; 25
     324:	31 05       	cpc	r19, r1
     326:	24 f3       	brlt	.-56     	; 0x2f0 <filllocationarrays+0x22c>
		self->Orderarx[i]=arrx[i];
		self->Orderary[i]=arry[i];
	}
}
     328:	e2 96       	adiw	r28, 0x32	; 50
     32a:	0f b6       	in	r0, 0x3f	; 63
     32c:	f8 94       	cli
     32e:	de bf       	out	0x3e, r29	; 62
     330:	0f be       	out	0x3f, r0	; 63
     332:	cd bf       	out	0x3d, r28	; 61
     334:	df 91       	pop	r29
     336:	cf 91       	pop	r28
     338:	08 95       	ret

0000033a <sendACK>:
			


void sendACK(Communications *self ){
     33a:	cf 93       	push	r28
     33c:	df 93       	push	r29
     33e:	00 d0       	rcall	.+0      	; 0x340 <sendACK+0x6>
     340:	1f 92       	push	r1
     342:	cd b7       	in	r28, 0x3d	; 61
     344:	de b7       	in	r29, 0x3e	; 62
						char tmp[3];
						tmp[0]=START;
     346:	88 e0       	ldi	r24, 0x08	; 8
     348:	89 83       	std	Y+1, r24	; 0x01
						tmp[1]=255;
     34a:	8f ef       	ldi	r24, 0xFF	; 255
     34c:	8a 83       	std	Y+2, r24	; 0x02
						tmp[2]=STOP;
     34e:	85 e6       	ldi	r24, 0x65	; 101
     350:	8b 83       	std	Y+3, r24	; 0x03
						serial_send_blocking(tmp,4);
     352:	64 e0       	ldi	r22, 0x04	; 4
     354:	ce 01       	movw	r24, r28
     356:	01 96       	adiw	r24, 0x01	; 1
     358:	0e 94 7b 15 	call	0x2af6	; 0x2af6 <serial_send_blocking>
}
     35c:	0f 90       	pop	r0
     35e:	0f 90       	pop	r0
     360:	0f 90       	pop	r0
     362:	df 91       	pop	r29
     364:	cf 91       	pop	r28
     366:	08 95       	ret

00000368 <Update>:

void Update(Communications *self){
     368:	cf 92       	push	r12
     36a:	df 92       	push	r13
     36c:	ef 92       	push	r14
     36e:	ff 92       	push	r15
     370:	1f 93       	push	r17
     372:	cf 93       	push	r28
     374:	df 93       	push	r29
     376:	ec 01       	movw	r28, r24
	
	char Flag =0;
	unsigned long timebetweensends = 50;
	static unsigned long timesincelastsend = 0;
	
	if (serial_receive_buffer_full()==1){
     378:	0e 94 28 14 	call	0x2850	; 0x2850 <serial_receive_buffer_full>
     37c:	81 30       	cpi	r24, 0x01	; 1
     37e:	09 f0       	breq	.+2      	; 0x382 <Update+0x1a>
     380:	5c c0       	rjmp	.+184    	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
		if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
     382:	8b 8d       	ldd	r24, Y+27	; 0x1b
     384:	88 30       	cpi	r24, 0x08	; 8
     386:	09 f0       	breq	.+2      	; 0x38a <Update+0x22>
     388:	5a c0       	rjmp	.+180    	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
     38a:	e8 81       	ld	r30, Y
     38c:	f0 e0       	ldi	r31, 0x00	; 0
     38e:	31 97       	sbiw	r30, 0x01	; 1
     390:	ec 0f       	add	r30, r28
     392:	fd 1f       	adc	r31, r29
     394:	83 8d       	ldd	r24, Z+27	; 0x1b
     396:	85 36       	cpi	r24, 0x65	; 101
     398:	09 f0       	breq	.+2      	; 0x39c <Update+0x34>
     39a:	53 c0       	rjmp	.+166    	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
			Flag = 1;
			//play_from_program_space(fugue);
			
			sendACK(self); // stops here to send acknowledge
     39c:	ce 01       	movw	r24, r28
     39e:	0e 94 9d 01 	call	0x33a	; 0x33a <sendACK>
			clear();
     3a2:	0e 94 a5 12 	call	0x254a	; 0x254a <clear>
			print_long(self->Recieved[5]);
     3a6:	68 a1       	ldd	r22, Y+32	; 0x20
     3a8:	70 e0       	ldi	r23, 0x00	; 0
     3aa:	80 e0       	ldi	r24, 0x00	; 0
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	0e 94 09 13 	call	0x2612	; 0x2612 <print_long>
			if (self->Recieved[5]==254 || self->Recieved[8]==254){    //enter emergency stop
     3b2:	88 a1       	ldd	r24, Y+32	; 0x20
     3b4:	8e 3f       	cpi	r24, 0xFE	; 254
     3b6:	19 f0       	breq	.+6      	; 0x3be <Update+0x56>
     3b8:	8b a1       	ldd	r24, Y+35	; 0x23
     3ba:	8e 3f       	cpi	r24, 0xFE	; 254
     3bc:	29 f4       	brne	.+10     	; 0x3c8 <Update+0x60>
				//play_from_program_space(fugue);
				self->EmergencyStop=1;
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	fe 01       	movw	r30, r28
     3c2:	e5 59       	subi	r30, 0x95	; 149
     3c4:	ff 4f       	sbci	r31, 0xFF	; 255
     3c6:	80 83       	st	Z, r24
			}
			
			if (self->Recieved[8]==250){    // Leave emergency stop
     3c8:	8b a1       	ldd	r24, Y+35	; 0x23
     3ca:	8a 3f       	cpi	r24, 0xFA	; 250
     3cc:	21 f4       	brne	.+8      	; 0x3d6 <Update+0x6e>
				self->EmergencyStop=0;
     3ce:	fe 01       	movw	r30, r28
     3d0:	e5 59       	subi	r30, 0x95	; 149
     3d2:	ff 4f       	sbci	r31, 0xFF	; 255
     3d4:	10 82       	st	Z, r1
			}
			
			if (self->Recieved[8]==245){                            // Enter Spin Mode
     3d6:	85 3f       	cpi	r24, 0xF5	; 245
     3d8:	29 f4       	brne	.+10     	; 0x3e4 <Update+0x7c>
				self->EmergencyStop=2;
     3da:	92 e0       	ldi	r25, 0x02	; 2
     3dc:	fe 01       	movw	r30, r28
     3de:	e5 59       	subi	r30, 0x95	; 149
     3e0:	ff 4f       	sbci	r31, 0xFF	; 255
     3e2:	90 83       	st	Z, r25
			}
			if (self->Recieved[8]==240){                            // Enter Manual Mode
     3e4:	80 3f       	cpi	r24, 0xF0	; 240
     3e6:	a9 f4       	brne	.+42     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
				self->EmergencyStop=3;
     3e8:	83 e0       	ldi	r24, 0x03	; 3
     3ea:	fe 01       	movw	r30, r28
     3ec:	e5 59       	subi	r30, 0x95	; 149
     3ee:	ff 4f       	sbci	r31, 0xFF	; 255
     3f0:	80 83       	st	Z, r24
				for (int i = 0; i < 4; i++){
     3f2:	80 e0       	ldi	r24, 0x00	; 0
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	0a c0       	rjmp	.+20     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
					self->Direction[i]=self->Recieved[i+9];
     3f8:	fc 01       	movw	r30, r24
     3fa:	39 96       	adiw	r30, 0x09	; 9
     3fc:	ec 0f       	add	r30, r28
     3fe:	fd 1f       	adc	r31, r29
     400:	23 8d       	ldd	r18, Z+27	; 0x1b
     402:	fe 01       	movw	r30, r28
     404:	e8 0f       	add	r30, r24
     406:	f9 1f       	adc	r31, r25
     408:	25 ab       	std	Z+53, r18	; 0x35
			if (self->Recieved[8]==245){                            // Enter Spin Mode
				self->EmergencyStop=2;
			}
			if (self->Recieved[8]==240){                            // Enter Manual Mode
				self->EmergencyStop=3;
				for (int i = 0; i < 4; i++){
     40a:	01 96       	adiw	r24, 0x01	; 1
     40c:	84 30       	cpi	r24, 0x04	; 4
     40e:	91 05       	cpc	r25, r1
     410:	9c f3       	brlt	.-26     	; 0x3f8 <Update+0x90>
					self->Direction[i]=self->Recieved[i+9];
				}
			}
			
			if (self->locationx==255 && self->locationy==255){
     412:	fe 01       	movw	r30, r28
     414:	e2 59       	subi	r30, 0x92	; 146
     416:	ff 4f       	sbci	r31, 0xFF	; 255
     418:	80 81       	ld	r24, Z
     41a:	8f 3f       	cpi	r24, 0xFF	; 255
     41c:	a1 f4       	brne	.+40     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     41e:	31 96       	adiw	r30, 0x01	; 1
     420:	80 81       	ld	r24, Z
     422:	8f 3f       	cpi	r24, 0xFF	; 255
     424:	91 f4       	brne	.+36     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
				filllocationarrays(self);
     426:	ce 01       	movw	r24, r28
     428:	0e 94 62 00 	call	0xc4	; 0xc4 <filllocationarrays>
				self->flag =1;
     42c:	81 e0       	ldi	r24, 0x01	; 1
     42e:	fe 01       	movw	r30, r28
     430:	e0 59       	subi	r30, 0x90	; 144
     432:	ff 4f       	sbci	r31, 0xFF	; 255
     434:	80 83       	st	Z, r24
	unsigned long timebetweensends = 50;
	static unsigned long timesincelastsend = 0;
	
	if (serial_receive_buffer_full()==1){
		if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
			Flag = 1;
     436:	11 e0       	ldi	r17, 0x01	; 1
     438:	09 c0       	rjmp	.+18     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
}

void Update(Communications *self){
	
	
	char Flag =0;
     43a:	10 e0       	ldi	r17, 0x00	; 0
     43c:	07 c0       	rjmp	.+14     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     43e:	10 e0       	ldi	r17, 0x00	; 0
     440:	05 c0       	rjmp	.+10     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     442:	10 e0       	ldi	r17, 0x00	; 0
     444:	03 c0       	rjmp	.+6      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
	unsigned long timebetweensends = 50;
	static unsigned long timesincelastsend = 0;
	
	if (serial_receive_buffer_full()==1){
		if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
			Flag = 1;
     446:	11 e0       	ldi	r17, 0x01	; 1
     448:	01 c0       	rjmp	.+2      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     44a:	11 e0       	ldi	r17, 0x01	; 1
				filllocationarrays(self);
				self->flag =1;
			}
		}
	}
 if (timesincelastsend+timebetweensends<=get_ms()){
     44c:	c0 90 01 02 	lds	r12, 0x0201	; 0x800201 <timesincelastsend.2211>
     450:	d0 90 02 02 	lds	r13, 0x0202	; 0x800202 <timesincelastsend.2211+0x1>
     454:	e0 90 03 02 	lds	r14, 0x0203	; 0x800203 <timesincelastsend.2211+0x2>
     458:	f0 90 04 02 	lds	r15, 0x0204	; 0x800204 <timesincelastsend.2211+0x3>
     45c:	82 e3       	ldi	r24, 0x32	; 50
     45e:	c8 0e       	add	r12, r24
     460:	d1 1c       	adc	r13, r1
     462:	e1 1c       	adc	r14, r1
     464:	f1 1c       	adc	r15, r1
     466:	0e 94 23 16 	call	0x2c46	; 0x2c46 <get_ms>
     46a:	6c 15       	cp	r22, r12
     46c:	7d 05       	cpc	r23, r13
     46e:	8e 05       	cpc	r24, r14
     470:	9f 05       	cpc	r25, r15
     472:	c8 f1       	brcs	.+114    	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
	 timesincelastsend=get_ms();
     474:	0e 94 23 16 	call	0x2c46	; 0x2c46 <get_ms>
     478:	60 93 01 02 	sts	0x0201, r22	; 0x800201 <timesincelastsend.2211>
     47c:	70 93 02 02 	sts	0x0202, r23	; 0x800202 <timesincelastsend.2211+0x1>
     480:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <timesincelastsend.2211+0x2>
     484:	90 93 04 02 	sts	0x0204, r25	; 0x800204 <timesincelastsend.2211+0x3>
	 for (char i=0;i<self->val;i++){
     488:	80 e0       	ldi	r24, 0x00	; 0
     48a:	05 c0       	rjmp	.+10     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
		 self->msgBuffer[i]=i;
     48c:	fe 01       	movw	r30, r28
     48e:	e8 0f       	add	r30, r24
     490:	f1 1d       	adc	r31, r1
     492:	81 83       	std	Z+1, r24	; 0x01
			}
		}
	}
 if (timesincelastsend+timebetweensends<=get_ms()){
	 timesincelastsend=get_ms();
	 for (char i=0;i<self->val;i++){
     494:	8f 5f       	subi	r24, 0xFF	; 255
     496:	68 81       	ld	r22, Y
     498:	86 17       	cp	r24, r22
     49a:	c0 f3       	brcs	.-16     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
		 self->msgBuffer[i]=i;
	 }
	 self->msgBuffer[0]=START;
     49c:	88 e0       	ldi	r24, 0x08	; 8
     49e:	89 83       	std	Y+1, r24	; 0x01
	 self->msgBuffer[1]=self->batterylvl;
     4a0:	fe 01       	movw	r30, r28
     4a2:	e4 59       	subi	r30, 0x94	; 148
     4a4:	ff 4f       	sbci	r31, 0xFF	; 255
     4a6:	80 81       	ld	r24, Z
     4a8:	8a 83       	std	Y+2, r24	; 0x02
	 self->msgBuffer[2]=self->magprocess;
     4aa:	31 96       	adiw	r30, 0x01	; 1
     4ac:	80 81       	ld	r24, Z
     4ae:	8b 83       	std	Y+3, r24	; 0x03
	 self->msgBuffer[3]=self->locationx;
     4b0:	31 96       	adiw	r30, 0x01	; 1
     4b2:	80 81       	ld	r24, Z
     4b4:	8c 83       	std	Y+4, r24	; 0x04
	 self->msgBuffer[4]=self->locationy;
     4b6:	31 96       	adiw	r30, 0x01	; 1
     4b8:	80 81       	ld	r24, Z
     4ba:	8d 83       	std	Y+5, r24	; 0x05
	 self->msgBuffer[5]=self->EmergencyStop;
     4bc:	34 97       	sbiw	r30, 0x04	; 4
     4be:	80 81       	ld	r24, Z
     4c0:	8e 83       	std	Y+6, r24	; 0x06
	 self->msgBuffer[self->val-1]=STOP;
     4c2:	e6 2f       	mov	r30, r22
     4c4:	f0 e0       	ldi	r31, 0x00	; 0
     4c6:	31 97       	sbiw	r30, 0x01	; 1
     4c8:	ec 0f       	add	r30, r28
     4ca:	fd 1f       	adc	r31, r29
     4cc:	85 e6       	ldi	r24, 0x65	; 101
     4ce:	81 83       	std	Z+1, r24	; 0x01
	 serial_send(self->msgBuffer, self->val);
     4d0:	ce 01       	movw	r24, r28
     4d2:	01 96       	adiw	r24, 0x01	; 1
     4d4:	0e 94 36 15 	call	0x2a6c	; 0x2a6c <serial_send>

	 //delay_ms(10000); // test
	 if (Flag == 1){
     4d8:	11 30       	cpi	r17, 0x01	; 1
     4da:	29 f4       	brne	.+10     	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
		 serial_receive(self->Recieved,self->val);
     4dc:	68 81       	ld	r22, Y
     4de:	ce 01       	movw	r24, r28
     4e0:	4b 96       	adiw	r24, 0x1b	; 27
     4e2:	0e 94 af 14 	call	0x295e	; 0x295e <serial_receive>
	 }
 }
}
     4e6:	df 91       	pop	r29
     4e8:	cf 91       	pop	r28
     4ea:	1f 91       	pop	r17
     4ec:	ff 90       	pop	r15
     4ee:	ef 90       	pop	r14
     4f0:	df 90       	pop	r13
     4f2:	cf 90       	pop	r12
     4f4:	08 95       	ret

000004f6 <fillarrays>:

void fillarrays(Communications *self){
     4f6:	cf 93       	push	r28
     4f8:	df 93       	push	r29
     4fa:	cd b7       	in	r28, 0x3d	; 61
     4fc:	de b7       	in	r29, 0x3e	; 62
     4fe:	60 97       	sbiw	r28, 0x10	; 16
     500:	0f b6       	in	r0, 0x3f	; 63
     502:	f8 94       	cli
     504:	de bf       	out	0x3e, r29	; 62
     506:	0f be       	out	0x3f, r0	; 63
     508:	cd bf       	out	0x3d, r28	; 61
     50a:	ac 01       	movw	r20, r24
	//temp
		char arrx[]={2,5,4,2,1,6,1,5};
     50c:	88 e0       	ldi	r24, 0x08	; 8
     50e:	e8 e2       	ldi	r30, 0x28	; 40
     510:	f1 e0       	ldi	r31, 0x01	; 1
     512:	de 01       	movw	r26, r28
     514:	11 96       	adiw	r26, 0x01	; 1
     516:	01 90       	ld	r0, Z+
     518:	0d 92       	st	X+, r0
     51a:	8a 95       	dec	r24
     51c:	e1 f7       	brne	.-8      	; 0x516 <fillarrays+0x20>
		char arry[]={0,1,3,5,2,4,1,2};
     51e:	88 e0       	ldi	r24, 0x08	; 8
     520:	e0 e3       	ldi	r30, 0x30	; 48
     522:	f1 e0       	ldi	r31, 0x01	; 1
     524:	de 01       	movw	r26, r28
     526:	19 96       	adiw	r26, 0x09	; 9
     528:	01 90       	ld	r0, Z+
     52a:	0d 92       	st	X+, r0
     52c:	8a 95       	dec	r24
     52e:	e1 f7       	brne	.-8      	; 0x528 <fillarrays+0x32>
		for (int i=0;i<8;i++){
     530:	20 e0       	ldi	r18, 0x00	; 0
     532:	30 e0       	ldi	r19, 0x00	; 0
     534:	19 c0       	rjmp	.+50     	; 0x568 <fillarrays+0x72>
			self->Orderarx[i]=arrx[i];
     536:	e1 e0       	ldi	r30, 0x01	; 1
     538:	f0 e0       	ldi	r31, 0x00	; 0
     53a:	ec 0f       	add	r30, r28
     53c:	fd 1f       	adc	r31, r29
     53e:	e2 0f       	add	r30, r18
     540:	f3 1f       	adc	r31, r19
     542:	90 81       	ld	r25, Z
     544:	da 01       	movw	r26, r20
     546:	a2 0f       	add	r26, r18
     548:	b3 1f       	adc	r27, r19
     54a:	fd 01       	movw	r30, r26
     54c:	ee 5a       	subi	r30, 0xAE	; 174
     54e:	ff 4f       	sbci	r31, 0xFF	; 255
     550:	90 83       	st	Z, r25
			self->Orderary[i]=arry[i];
     552:	e9 e0       	ldi	r30, 0x09	; 9
     554:	f0 e0       	ldi	r31, 0x00	; 0
     556:	ec 0f       	add	r30, r28
     558:	fd 1f       	adc	r31, r29
     55a:	e2 0f       	add	r30, r18
     55c:	f3 1f       	adc	r31, r19
     55e:	90 81       	ld	r25, Z
     560:	d9 96       	adiw	r26, 0x39	; 57
     562:	9c 93       	st	X, r25

void fillarrays(Communications *self){
	//temp
		char arrx[]={2,5,4,2,1,6,1,5};
		char arry[]={0,1,3,5,2,4,1,2};
		for (int i=0;i<8;i++){
     564:	2f 5f       	subi	r18, 0xFF	; 255
     566:	3f 4f       	sbci	r19, 0xFF	; 255
     568:	28 30       	cpi	r18, 0x08	; 8
     56a:	31 05       	cpc	r19, r1
     56c:	24 f3       	brlt	.-56     	; 0x536 <fillarrays+0x40>
			self->Orderarx[i]=arrx[i];
			self->Orderary[i]=arry[i];
		}
}
     56e:	60 96       	adiw	r28, 0x10	; 16
     570:	0f b6       	in	r0, 0x3f	; 63
     572:	f8 94       	cli
     574:	de bf       	out	0x3e, r29	; 62
     576:	0f be       	out	0x3f, r0	; 63
     578:	cd bf       	out	0x3d, r28	; 61
     57a:	df 91       	pop	r29
     57c:	cf 91       	pop	r28
     57e:	08 95       	ret

00000580 <Communications_INIT>:

void Communications_INIT(Communications * myCom){
     580:	cf 93       	push	r28
     582:	df 93       	push	r29
     584:	ec 01       	movw	r28, r24
	myCom->val = Max_Bytes;	
     586:	8a e1       	ldi	r24, 0x1A	; 26
     588:	88 83       	st	Y, r24


	//Setup Communications
	serial_set_baud_rate(9600);
     58a:	60 e8       	ldi	r22, 0x80	; 128
     58c:	75 e2       	ldi	r23, 0x25	; 37
     58e:	80 e0       	ldi	r24, 0x00	; 0
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <serial_set_baud_rate>
	serial_receive(myCom->Recieved,myCom->val);
     596:	68 81       	ld	r22, Y
     598:	ce 01       	movw	r24, r28
     59a:	4b 96       	adiw	r24, 0x1b	; 27
     59c:	0e 94 af 14 	call	0x295e	; 0x295e <serial_receive>

	//filling in functions
	myCom->Update		 = Update;
     5a0:	fe 01       	movw	r30, r28
     5a2:	ef 58       	subi	r30, 0x8F	; 143
     5a4:	ff 4f       	sbci	r31, 0xFF	; 255
     5a6:	84 eb       	ldi	r24, 0xB4	; 180
     5a8:	91 e0       	ldi	r25, 0x01	; 1
     5aa:	91 83       	std	Z+1, r25	; 0x01
     5ac:	80 83       	st	Z, r24
		
	//filling in default values
	myCom->EmergencyStop = 0;
     5ae:	36 97       	sbiw	r30, 0x06	; 6
     5b0:	10 82       	st	Z, r1
	myCom->batterylvl	 = 55;
     5b2:	31 96       	adiw	r30, 0x01	; 1
     5b4:	87 e3       	ldi	r24, 0x37	; 55
     5b6:	80 83       	st	Z, r24
	myCom->magprocess	 = 20;
     5b8:	31 96       	adiw	r30, 0x01	; 1
     5ba:	84 e1       	ldi	r24, 0x14	; 20
     5bc:	80 83       	st	Z, r24
	myCom->locationx	 = 4;
     5be:	31 96       	adiw	r30, 0x01	; 1
     5c0:	84 e0       	ldi	r24, 0x04	; 4
     5c2:	80 83       	st	Z, r24
	myCom->locationy	 = 5;
     5c4:	31 96       	adiw	r30, 0x01	; 1
     5c6:	85 e0       	ldi	r24, 0x05	; 5
     5c8:	80 83       	st	Z, r24
	
	
	fillarrays(myCom);
     5ca:	ce 01       	movw	r24, r28
     5cc:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <fillarrays>
}
     5d0:	df 91       	pop	r29
     5d2:	cf 91       	pop	r28
     5d4:	08 95       	ret

000005d6 <batteryPercentage>:

#include "display.h"
#include <pololu/3pi.h>

float batteryPercentage()//Should this function be in main or in display.c or something else?
{
     5d6:	cf 92       	push	r12
     5d8:	df 92       	push	r13
     5da:	ef 92       	push	r14
     5dc:	ff 92       	push	r15
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     5de:	0e 94 80 0e 	call	0x1d00	; 0x1d00 <read_battery_millivolts_3pi>
	
	float milliVolts = read_battery_millivolts();
     5e2:	bc 01       	movw	r22, r24
     5e4:	80 e0       	ldi	r24, 0x00	; 0
     5e6:	90 e0       	ldi	r25, 0x00	; 0
     5e8:	0e 94 b4 0c 	call	0x1968	; 0x1968 <__floatunsisf>
     5ec:	6b 01       	movw	r12, r22
     5ee:	7c 01       	movw	r14, r24
	float batteryPercent = 0.000000000632*((milliVolts)*(milliVolts)*(milliVolts));
     5f0:	9b 01       	movw	r18, r22
     5f2:	ac 01       	movw	r20, r24
     5f4:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <__mulsf3>
     5f8:	9b 01       	movw	r18, r22
     5fa:	ac 01       	movw	r20, r24
     5fc:	c7 01       	movw	r24, r14
     5fe:	b6 01       	movw	r22, r12
     600:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <__mulsf3>
     604:	2c e0       	ldi	r18, 0x0C	; 12
     606:	39 eb       	ldi	r19, 0xB9	; 185
     608:	4d e2       	ldi	r20, 0x2D	; 45
     60a:	50 e3       	ldi	r21, 0x30	; 48
     60c:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <__mulsf3>
	return batteryPercent;
}
     610:	ff 90       	pop	r15
     612:	ef 90       	pop	r14
     614:	df 90       	pop	r13
     616:	cf 90       	pop	r12
     618:	08 95       	ret

0000061a <updateDisplay>:

void updateDisplay(int orderPercent, int batteryPercent, robotStates currentState)
{
     61a:	ef 92       	push	r14
     61c:	ff 92       	push	r15
     61e:	0f 93       	push	r16
     620:	1f 93       	push	r17
     622:	cf 93       	push	r28
     624:	7c 01       	movw	r14, r24
     626:	8b 01       	movw	r16, r22
     628:	c4 2f       	mov	r28, r20
	clear();
     62a:	0e 94 a5 12 	call	0x254a	; 0x254a <clear>
	lcd_goto_xy(0,0);
     62e:	60 e0       	ldi	r22, 0x00	; 0
     630:	80 e0       	ldi	r24, 0x00	; 0
     632:	0e 94 2c 13 	call	0x2658	; 0x2658 <lcd_goto_xy>
	print("Job:");
     636:	85 e5       	ldi	r24, 0x55	; 85
     638:	91 e0       	ldi	r25, 0x01	; 1
     63a:	0e 94 b4 12 	call	0x2568	; 0x2568 <print>
	print_long(orderPercent);
     63e:	b7 01       	movw	r22, r14
     640:	ff 0c       	add	r15, r15
     642:	88 0b       	sbc	r24, r24
     644:	99 0b       	sbc	r25, r25
     646:	0e 94 09 13 	call	0x2612	; 0x2612 <print_long>
	print("%");
     64a:	8a e5       	ldi	r24, 0x5A	; 90
     64c:	91 e0       	ldi	r25, 0x01	; 1
     64e:	0e 94 b4 12 	call	0x2568	; 0x2568 <print>
	
	lcd_goto_xy(0,1);
     652:	61 e0       	ldi	r22, 0x01	; 1
     654:	80 e0       	ldi	r24, 0x00	; 0
     656:	0e 94 2c 13 	call	0x2658	; 0x2658 <lcd_goto_xy>
	print("Bat:");
     65a:	8c e5       	ldi	r24, 0x5C	; 92
     65c:	91 e0       	ldi	r25, 0x01	; 1
     65e:	0e 94 b4 12 	call	0x2568	; 0x2568 <print>
	print_long(batteryPercent);
     662:	b8 01       	movw	r22, r16
     664:	11 0f       	add	r17, r17
     666:	88 0b       	sbc	r24, r24
     668:	99 0b       	sbc	r25, r25
     66a:	0e 94 09 13 	call	0x2612	; 0x2612 <print_long>
	print("%");
     66e:	8a e5       	ldi	r24, 0x5A	; 90
     670:	91 e0       	ldi	r25, 0x01	; 1
     672:	0e 94 b4 12 	call	0x2568	; 0x2568 <print>
	switch(currentState)
     676:	c2 30       	cpi	r28, 0x02	; 2
     678:	a9 f0       	breq	.+42     	; 0x6a4 <updateDisplay+0x8a>
     67a:	28 f4       	brcc	.+10     	; 0x686 <updateDisplay+0x6c>
     67c:	cc 23       	and	r28, r28
     67e:	41 f0       	breq	.+16     	; 0x690 <updateDisplay+0x76>
     680:	c1 30       	cpi	r28, 0x01	; 1
     682:	59 f0       	breq	.+22     	; 0x69a <updateDisplay+0x80>
     684:	1d c0       	rjmp	.+58     	; 0x6c0 <updateDisplay+0xa6>
     686:	c3 30       	cpi	r28, 0x03	; 3
     688:	91 f0       	breq	.+36     	; 0x6ae <updateDisplay+0x94>
     68a:	c4 30       	cpi	r28, 0x04	; 4
     68c:	a9 f0       	breq	.+42     	; 0x6b8 <updateDisplay+0x9e>
     68e:	18 c0       	rjmp	.+48     	; 0x6c0 <updateDisplay+0xa6>
	{
		case manual:
		print("M");//M for Manual
     690:	81 e6       	ldi	r24, 0x61	; 97
     692:	91 e0       	ldi	r25, 0x01	; 1
     694:	0e 94 b4 12 	call	0x2568	; 0x2568 <print>
		break;
     698:	13 c0       	rjmp	.+38     	; 0x6c0 <updateDisplay+0xa6>
		case mazeSolver:
		print("P");//P for Parcour
     69a:	83 e6       	ldi	r24, 0x63	; 99
     69c:	91 e0       	ldi	r25, 0x01	; 1
     69e:	0e 94 b4 12 	call	0x2568	; 0x2568 <print>
		break;
     6a2:	0e c0       	rjmp	.+28     	; 0x6c0 <updateDisplay+0xa6>
		case logicsBot:
		print("O");//O for Order
     6a4:	85 e6       	ldi	r24, 0x65	; 101
     6a6:	91 e0       	ldi	r25, 0x01	; 1
     6a8:	0e 94 b4 12 	call	0x2568	; 0x2568 <print>
		break;
     6ac:	09 c0       	rjmp	.+18     	; 0x6c0 <updateDisplay+0xa6>
		case chargeMode:
		print("C");//C for Charge
     6ae:	87 e6       	ldi	r24, 0x67	; 103
     6b0:	91 e0       	ldi	r25, 0x01	; 1
     6b2:	0e 94 b4 12 	call	0x2568	; 0x2568 <print>
		break;
     6b6:	04 c0       	rjmp	.+8      	; 0x6c0 <updateDisplay+0xa6>
		case homingMode:
		print("H");//H for Homing
     6b8:	89 e6       	ldi	r24, 0x69	; 105
     6ba:	91 e0       	ldi	r25, 0x01	; 1
     6bc:	0e 94 b4 12 	call	0x2568	; 0x2568 <print>
		break;
	}
}
     6c0:	cf 91       	pop	r28
     6c2:	1f 91       	pop	r17
     6c4:	0f 91       	pop	r16
     6c6:	ff 90       	pop	r15
     6c8:	ef 90       	pop	r14
     6ca:	08 95       	ret

000006cc <whileBarcode>:
     6cc:	03 c0       	rjmp	.+6      	; 0x6d4 <whileBarcode+0x8>
     6ce:	83 e5       	ldi	r24, 0x53	; 83
     6d0:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
     6d4:	0e 94 b6 05 	call	0xb6c	; 0xb6c <lineType>
     6d8:	82 30       	cpi	r24, 0x02	; 2
     6da:	c9 f7       	brne	.-14     	; 0x6ce <whileBarcode+0x2>
     6dc:	08 95       	ret

000006de <whileLineEnd>:
     6de:	03 c0       	rjmp	.+6      	; 0x6e6 <whileLineEnd+0x8>
     6e0:	83 e5       	ldi	r24, 0x53	; 83
     6e2:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
     6e6:	0e 94 b6 05 	call	0xb6c	; 0xb6c <lineType>
     6ea:	81 30       	cpi	r24, 0x01	; 1
     6ec:	c9 f7       	brne	.-14     	; 0x6e0 <whileLineEnd+0x2>
     6ee:	08 95       	ret

000006f0 <pickOrder>:
     6f0:	cf 93       	push	r28
     6f2:	df 93       	push	r29
     6f4:	ec 01       	movw	r28, r24
     6f6:	0e 94 66 03 	call	0x6cc	; 0x6cc <whileBarcode>
     6fa:	be 01       	movw	r22, r28
     6fc:	80 e0       	ldi	r24, 0x00	; 0
     6fe:	0e 94 43 0a 	call	0x1486	; 0x1486 <warehouse>
     702:	be 01       	movw	r22, r28
     704:	82 e4       	ldi	r24, 0x42	; 66
     706:	0e 94 55 08 	call	0x10aa	; 0x10aa <parcours>
     70a:	0e 94 6f 03 	call	0x6de	; 0x6de <whileLineEnd>
     70e:	8c e4       	ldi	r24, 0x4C	; 76
     710:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
     714:	df 91       	pop	r29
     716:	cf 91       	pop	r28
     718:	08 95       	ret

0000071a <main>:
     71a:	cf 93       	push	r28
     71c:	df 93       	push	r29
     71e:	cd b7       	in	r28, 0x3d	; 61
     720:	de b7       	in	r29, 0x3e	; 62
     722:	c3 57       	subi	r28, 0x73	; 115
     724:	d1 09       	sbc	r29, r1
     726:	0f b6       	in	r0, 0x3f	; 63
     728:	f8 94       	cli
     72a:	de bf       	out	0x3e, r29	; 62
     72c:	0f be       	out	0x3f, r0	; 63
     72e:	cd bf       	out	0x3d, r28	; 61
     730:	8a e7       	ldi	r24, 0x7A	; 122
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	0e 94 99 11 	call	0x2332	; 0x2332 <play_from_program_space>
     738:	ce 01       	movw	r24, r28
     73a:	01 96       	adiw	r24, 0x01	; 1
     73c:	0e 94 c0 02 	call	0x580	; 0x580 <Communications_INIT>
     740:	ce 01       	movw	r24, r28
     742:	01 96       	adiw	r24, 0x01	; 1
     744:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <initialize>
     748:	e4 96       	adiw	r28, 0x34	; 52
     74a:	ee ad       	ldd	r30, Y+62	; 0x3e
     74c:	ff ad       	ldd	r31, Y+63	; 0x3f
     74e:	e4 97       	sbiw	r28, 0x34	; 52
     750:	ce 01       	movw	r24, r28
     752:	01 96       	adiw	r24, 0x01	; 1
     754:	09 95       	icall
     756:	8f ef       	ldi	r24, 0xFF	; 255
     758:	e0 96       	adiw	r28, 0x30	; 48
     75a:	8f af       	std	Y+63, r24	; 0x3f
     75c:	e0 97       	sbiw	r28, 0x30	; 48
     75e:	e1 96       	adiw	r28, 0x31	; 49
     760:	8f af       	std	Y+63, r24	; 0x3f
     762:	e1 97       	sbiw	r28, 0x31	; 49
     764:	60 e0       	ldi	r22, 0x00	; 0
     766:	80 e0       	ldi	r24, 0x00	; 0
     768:	0e 94 2c 13 	call	0x2658	; 0x2658 <lcd_goto_xy>
     76c:	ad 96       	adiw	r28, 0x2d	; 45
     76e:	6f ad       	ldd	r22, Y+63	; 0x3f
     770:	ad 97       	sbiw	r28, 0x2d	; 45
     772:	70 e0       	ldi	r23, 0x00	; 0
     774:	80 e0       	ldi	r24, 0x00	; 0
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	0e 94 09 13 	call	0x2612	; 0x2612 <print_long>
     77c:	ad 96       	adiw	r28, 0x2d	; 45
     77e:	8f ad       	ldd	r24, Y+63	; 0x3f
     780:	ad 97       	sbiw	r28, 0x2d	; 45
     782:	82 30       	cpi	r24, 0x02	; 2
     784:	91 f1       	breq	.+100    	; 0x7ea <main+0xd0>
     786:	83 30       	cpi	r24, 0x03	; 3
     788:	99 f1       	breq	.+102    	; 0x7f0 <main+0xd6>
     78a:	81 11       	cpse	r24, r1
     78c:	dd cf       	rjmp	.-70     	; 0x748 <main+0x2e>
     78e:	e0 96       	adiw	r28, 0x30	; 48
     790:	6f ad       	ldd	r22, Y+63	; 0x3f
     792:	e0 97       	sbiw	r28, 0x30	; 48
     794:	70 e0       	ldi	r23, 0x00	; 0
     796:	80 e0       	ldi	r24, 0x00	; 0
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	0e 94 09 13 	call	0x2612	; 0x2612 <print_long>
     79e:	e1 96       	adiw	r28, 0x31	; 49
     7a0:	6f ad       	ldd	r22, Y+63	; 0x3f
     7a2:	e1 97       	sbiw	r28, 0x31	; 49
     7a4:	70 e0       	ldi	r23, 0x00	; 0
     7a6:	80 e0       	ldi	r24, 0x00	; 0
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	0e 94 09 13 	call	0x2612	; 0x2612 <print_long>
     7ae:	e2 96       	adiw	r28, 0x32	; 50
     7b0:	8f ad       	ldd	r24, Y+63	; 0x3f
     7b2:	e2 97       	sbiw	r28, 0x32	; 50
     7b4:	81 30       	cpi	r24, 0x01	; 1
     7b6:	41 f6       	brne	.-112    	; 0x748 <main+0x2e>
     7b8:	e2 96       	adiw	r28, 0x32	; 50
     7ba:	1f ae       	std	Y+63, r1	; 0x3f
     7bc:	e2 97       	sbiw	r28, 0x32	; 50
     7be:	8a e7       	ldi	r24, 0x7A	; 122
     7c0:	90 e0       	ldi	r25, 0x00	; 0
     7c2:	0e 94 99 11 	call	0x2332	; 0x2332 <play_from_program_space>
     7c6:	e0 96       	adiw	r28, 0x30	; 48
     7c8:	1f ae       	std	Y+63, r1	; 0x3f
     7ca:	e0 97       	sbiw	r28, 0x30	; 48
     7cc:	e1 96       	adiw	r28, 0x31	; 49
     7ce:	1f ae       	std	Y+63, r1	; 0x3f
     7d0:	e1 97       	sbiw	r28, 0x31	; 49
     7d2:	ce 01       	movw	r24, r28
     7d4:	01 96       	adiw	r24, 0x01	; 1
     7d6:	0e 94 78 03 	call	0x6f0	; 0x6f0 <pickOrder>
     7da:	8f ef       	ldi	r24, 0xFF	; 255
     7dc:	e0 96       	adiw	r28, 0x30	; 48
     7de:	8f af       	std	Y+63, r24	; 0x3f
     7e0:	e0 97       	sbiw	r28, 0x30	; 48
     7e2:	e1 96       	adiw	r28, 0x31	; 49
     7e4:	8f af       	std	Y+63, r24	; 0x3f
     7e6:	e1 97       	sbiw	r28, 0x31	; 49
     7e8:	af cf       	rjmp	.-162    	; 0x748 <main+0x2e>
     7ea:	0e 94 15 07 	call	0xe2a	; 0xe2a <Spin>
     7ee:	ac cf       	rjmp	.-168    	; 0x748 <main+0x2e>
     7f0:	0e 94 ce 06 	call	0xd9c	; 0xd9c <manualControl>
     7f4:	a9 cf       	rjmp	.-174    	; 0x748 <main+0x2e>

000007f6 <initialize>:
void inch(){
	set_motors(50,50);
	delay(200);
	set_motors(0,0);
}
void println(int x){
     7f6:	cf 93       	push	r28
     7f8:	df 93       	push	r29
     7fa:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <myComs+0x1>
     7fe:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <myComs>
     802:	80 ed       	ldi	r24, 0xD0	; 208
     804:	97 e0       	ldi	r25, 0x07	; 7
     806:	0e 94 80 16 	call	0x2d00	; 0x2d00 <pololu_3pi_init>
     80a:	0d c0       	rjmp	.+26     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
     80c:	0e 94 a5 12 	call	0x254a	; 0x254a <clear>
     810:	60 e0       	ldi	r22, 0x00	; 0
     812:	80 e0       	ldi	r24, 0x00	; 0
     814:	0e 94 2c 13 	call	0x2658	; 0x2658 <lcd_goto_xy>
     818:	0e 94 80 0e 	call	0x1d00	; 0x1d00 <read_battery_millivolts_3pi>
     81c:	bc 01       	movw	r22, r24
     81e:	80 e0       	ldi	r24, 0x00	; 0
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	0e 94 09 13 	call	0x2612	; 0x2612 <print_long>
     826:	80 e1       	ldi	r24, 0x10	; 16
     828:	0e 94 25 14 	call	0x284a	; 0x284a <button_is_pressed>
     82c:	88 23       	and	r24, r24
     82e:	71 f3       	breq	.-36     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
     830:	80 e1       	ldi	r24, 0x10	; 16
     832:	0e 94 11 14 	call	0x2822	; 0x2822 <wait_for_button_release>
     836:	88 ee       	ldi	r24, 0xE8	; 232
     838:	93 e0       	ldi	r25, 0x03	; 3
     83a:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <delay_ms>
     83e:	c0 e0       	ldi	r28, 0x00	; 0
     840:	d0 e0       	ldi	r29, 0x00	; 0
     842:	19 c0       	rjmp	.+50     	; 0x876 <__DATA_REGION_LENGTH__+0x76>
     844:	ce 01       	movw	r24, r28
     846:	44 97       	sbiw	r24, 0x14	; 20
     848:	88 97       	sbiw	r24, 0x28	; 40
     84a:	38 f0       	brcs	.+14     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
     84c:	68 ed       	ldi	r22, 0xD8	; 216
     84e:	7f ef       	ldi	r23, 0xFF	; 255
     850:	88 e2       	ldi	r24, 0x28	; 40
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
     858:	06 c0       	rjmp	.+12     	; 0x866 <__DATA_REGION_LENGTH__+0x66>
     85a:	68 e2       	ldi	r22, 0x28	; 40
     85c:	70 e0       	ldi	r23, 0x00	; 0
     85e:	88 ed       	ldi	r24, 0xD8	; 216
     860:	9f ef       	ldi	r25, 0xFF	; 255
     862:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
     866:	81 e0       	ldi	r24, 0x01	; 1
     868:	0e 94 3d 16 	call	0x2c7a	; 0x2c7a <calibrate_line_sensors>
     86c:	84 e1       	ldi	r24, 0x14	; 20
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <delay_ms>
     874:	21 96       	adiw	r28, 0x01	; 1
     876:	c0 35       	cpi	r28, 0x50	; 80
     878:	d1 05       	cpc	r29, r1
     87a:	20 f3       	brcs	.-56     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
     87c:	60 e0       	ldi	r22, 0x00	; 0
     87e:	70 e0       	ldi	r23, 0x00	; 0
     880:	80 e0       	ldi	r24, 0x00	; 0
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
     888:	80 e1       	ldi	r24, 0x10	; 16
     88a:	0e 94 25 14 	call	0x284a	; 0x284a <button_is_pressed>
     88e:	88 23       	and	r24, r24
     890:	d9 f3       	breq	.-10     	; 0x888 <__DATA_REGION_LENGTH__+0x88>
     892:	80 e1       	ldi	r24, 0x10	; 16
     894:	0e 94 11 14 	call	0x2822	; 0x2822 <wait_for_button_release>
     898:	0e 94 a5 12 	call	0x254a	; 0x254a <clear>
     89c:	df 91       	pop	r29
     89e:	cf 91       	pop	r28
     8a0:	08 95       	ret

000008a2 <inch>:
     8a2:	62 e3       	ldi	r22, 0x32	; 50
     8a4:	70 e0       	ldi	r23, 0x00	; 0
     8a6:	82 e3       	ldi	r24, 0x32	; 50
     8a8:	90 e0       	ldi	r25, 0x00	; 0
     8aa:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
     8ae:	88 ec       	ldi	r24, 0xC8	; 200
     8b0:	90 e0       	ldi	r25, 0x00	; 0
     8b2:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <delay_ms>
     8b6:	60 e0       	ldi	r22, 0x00	; 0
     8b8:	70 e0       	ldi	r23, 0x00	; 0
     8ba:	80 e0       	ldi	r24, 0x00	; 0
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
     8c2:	08 95       	ret

000008c4 <wait>:
	lcd_goto_xy(0,0);
	print_long(x);	*/
}

void wait(){
	set_motors(0,0);
     8c4:	60 e0       	ldi	r22, 0x00	; 0
     8c6:	70 e0       	ldi	r23, 0x00	; 0
     8c8:	80 e0       	ldi	r24, 0x00	; 0
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
						
	while(!button_is_pressed(BUTTON_B)){}
     8d0:	80 e1       	ldi	r24, 0x10	; 16
     8d2:	0e 94 25 14 	call	0x284a	; 0x284a <button_is_pressed>
     8d6:	88 23       	and	r24, r24
     8d8:	d9 f3       	breq	.-10     	; 0x8d0 <wait+0xc>
	wait_for_button_release(BUTTON_B);
     8da:	80 e1       	ldi	r24, 0x10	; 16
     8dc:	0e 94 11 14 	call	0x2822	; 0x2822 <wait_for_button_release>
     8e0:	08 95       	ret

000008e2 <motorControl>:
		
	
	}
}

void motorControl(char x){													// function that controlls the motor movement and the turns
     8e2:	8f 92       	push	r8
     8e4:	9f 92       	push	r9
     8e6:	af 92       	push	r10
     8e8:	bf 92       	push	r11
     8ea:	cf 92       	push	r12
     8ec:	df 92       	push	r13
     8ee:	ef 92       	push	r14
     8f0:	ff 92       	push	r15
     8f2:	0f 93       	push	r16
     8f4:	1f 93       	push	r17
     8f6:	cf 93       	push	r28
     8f8:	df 93       	push	r29
     8fa:	c8 2f       	mov	r28, r24
	myComs->Update(myComs);
     8fc:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <myComs>
     900:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <myComs+0x1>
     904:	fc 01       	movw	r30, r24
     906:	ef 58       	subi	r30, 0x8F	; 143
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	01 90       	ld	r0, Z+
     90c:	f0 81       	ld	r31, Z
     90e:	e0 2d       	mov	r30, r0
     910:	09 95       	icall
	unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     912:	61 e0       	ldi	r22, 0x01	; 1
     914:	85 e1       	ldi	r24, 0x15	; 21
     916:	92 e0       	ldi	r25, 0x02	; 2
     918:	0e 94 4a 16 	call	0x2c94	; 0x2c94 <read_line>
     91c:	8c 01       	movw	r16, r24
	read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     91e:	61 e0       	ldi	r22, 0x01	; 1
     920:	85 e1       	ldi	r24, 0x15	; 21
     922:	92 e0       	ldi	r25, 0x02	; 2
     924:	0e 94 43 16 	call	0x2c86	; 0x2c86 <read_line_sensors_calibrated>
	
	if(myComs->EmergencyStop == 1)															//Emergency Brake
     928:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <myComs>
     92c:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <myComs+0x1>
     930:	e5 59       	subi	r30, 0x95	; 149
     932:	ff 4f       	sbci	r31, 0xFF	; 255
     934:	80 81       	ld	r24, Z
     936:	81 30       	cpi	r24, 0x01	; 1
     938:	39 f4       	brne	.+14     	; 0x948 <__stack+0x49>
		set_motors(0,0);	
     93a:	60 e0       	ldi	r22, 0x00	; 0
     93c:	70 e0       	ldi	r23, 0x00	; 0
     93e:	80 e0       	ldi	r24, 0x00	; 0
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
     946:	05 c1       	rjmp	.+522    	; 0xb52 <__stack+0x253>
	
	
	else if(x == 'L'){														//Turn Left
     948:	cc 34       	cpi	r28, 0x4C	; 76
     94a:	39 f5       	brne	.+78     	; 0x99a <__stack+0x9b>
		set_motors(-turn_value,turn_value);
     94c:	6c e3       	ldi	r22, 0x3C	; 60
     94e:	70 e0       	ldi	r23, 0x00	; 0
     950:	84 ec       	ldi	r24, 0xC4	; 196
     952:	9f ef       	ldi	r25, 0xFF	; 255
     954:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
		
		while (sensors[2] >=Refrence_value)
     958:	05 c0       	rjmp	.+10     	; 0x964 <__stack+0x65>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     95a:	61 e0       	ldi	r22, 0x01	; 1
     95c:	85 e1       	ldi	r24, 0x15	; 21
     95e:	92 e0       	ldi	r25, 0x02	; 2
     960:	0e 94 43 16 	call	0x2c86	; 0x2c86 <read_line_sensors_calibrated>
	
	
	else if(x == 'L'){														//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] >=Refrence_value)
     964:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     968:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     96c:	80 39       	cpi	r24, 0x90	; 144
     96e:	91 40       	sbci	r25, 0x01	; 1
     970:	a0 f7       	brcc	.-24     	; 0x95a <__stack+0x5b>
     972:	05 c0       	rjmp	.+10     	; 0x97e <__stack+0x7f>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     974:	61 e0       	ldi	r22, 0x01	; 1
     976:	85 e1       	ldi	r24, 0x15	; 21
     978:	92 e0       	ldi	r25, 0x02	; 2
     97a:	0e 94 43 16 	call	0x2c86	; 0x2c86 <read_line_sensors_calibrated>
	else if(x == 'L'){														//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] >=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
     97e:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     982:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     986:	81 39       	cpi	r24, 0x91	; 145
     988:	91 40       	sbci	r25, 0x01	; 1
     98a:	a0 f3       	brcs	.-24     	; 0x974 <__stack+0x75>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		set_motors(0,0);
     98c:	60 e0       	ldi	r22, 0x00	; 0
     98e:	70 e0       	ldi	r23, 0x00	; 0
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
     998:	dc c0       	rjmp	.+440    	; 0xb52 <__stack+0x253>
	}
	
	
	else if(x == 'R'){														//Turn Right
     99a:	c2 35       	cpi	r28, 0x52	; 82
     99c:	39 f5       	brne	.+78     	; 0x9ec <__stack+0xed>
		set_motors(turn_value,-turn_value);
     99e:	64 ec       	ldi	r22, 0xC4	; 196
     9a0:	7f ef       	ldi	r23, 0xFF	; 255
     9a2:	8c e3       	ldi	r24, 0x3C	; 60
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
		
		while (sensors[2] >=Refrence_value)
     9aa:	05 c0       	rjmp	.+10     	; 0x9b6 <__stack+0xb7>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     9ac:	61 e0       	ldi	r22, 0x01	; 1
     9ae:	85 e1       	ldi	r24, 0x15	; 21
     9b0:	92 e0       	ldi	r25, 0x02	; 2
     9b2:	0e 94 43 16 	call	0x2c86	; 0x2c86 <read_line_sensors_calibrated>
	
	
	else if(x == 'R'){														//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] >=Refrence_value)
     9b6:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     9ba:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     9be:	80 39       	cpi	r24, 0x90	; 144
     9c0:	91 40       	sbci	r25, 0x01	; 1
     9c2:	a0 f7       	brcc	.-24     	; 0x9ac <__stack+0xad>
     9c4:	05 c0       	rjmp	.+10     	; 0x9d0 <__stack+0xd1>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     9c6:	61 e0       	ldi	r22, 0x01	; 1
     9c8:	85 e1       	ldi	r24, 0x15	; 21
     9ca:	92 e0       	ldi	r25, 0x02	; 2
     9cc:	0e 94 43 16 	call	0x2c86	; 0x2c86 <read_line_sensors_calibrated>
	else if(x == 'R'){														//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] >=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
     9d0:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     9d4:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     9d8:	81 39       	cpi	r24, 0x91	; 145
     9da:	91 40       	sbci	r25, 0x01	; 1
     9dc:	a0 f3       	brcs	.-24     	; 0x9c6 <__stack+0xc7>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		set_motors(0,0);
     9de:	60 e0       	ldi	r22, 0x00	; 0
     9e0:	70 e0       	ldi	r23, 0x00	; 0
     9e2:	80 e0       	ldi	r24, 0x00	; 0
     9e4:	90 e0       	ldi	r25, 0x00	; 0
     9e6:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
     9ea:	b3 c0       	rjmp	.+358    	; 0xb52 <__stack+0x253>
	}
		
			
	else if(x == 'S'){												//drive straight and adjusts the robot so it follows the line
     9ec:	c3 35       	cpi	r28, 0x53	; 83
     9ee:	09 f0       	breq	.+2      	; 0x9f2 <__stack+0xf3>
     9f0:	66 c0       	rjmp	.+204    	; 0xabe <__stack+0x1bf>
		// are not interested in the individual sensor readings.
		// The "proportional" term should be 0 when we are on the line.
		int proportional = ((int)position) - 2000;
     9f2:	c8 01       	movw	r24, r16
     9f4:	80 5d       	subi	r24, 0xD0	; 208
     9f6:	97 40       	sbci	r25, 0x07	; 7

		// Compute the derivative (change) and integral (sum) of the
		// position.
		int derivative = proportional - last_proportional;
     9f8:	20 91 11 02 	lds	r18, 0x0211	; 0x800211 <last_proportional>
     9fc:	30 91 12 02 	lds	r19, 0x0212	; 0x800212 <last_proportional+0x1>
     a00:	ec 01       	movw	r28, r24
     a02:	c2 1b       	sub	r28, r18
     a04:	d3 0b       	sbc	r29, r19
		integral = integral + proportional;
     a06:	60 91 13 02 	lds	r22, 0x0213	; 0x800213 <integral>
     a0a:	70 91 14 02 	lds	r23, 0x0214	; 0x800214 <integral+0x1>
     a0e:	fc 01       	movw	r30, r24
     a10:	e6 0f       	add	r30, r22
     a12:	f7 1f       	adc	r31, r23
     a14:	f0 93 14 02 	sts	0x0214, r31	; 0x800214 <integral+0x1>
     a18:	e0 93 13 02 	sts	0x0213, r30	; 0x800213 <integral>

		// Remember the last position.
		 last_proportional = proportional;
     a1c:	90 93 12 02 	sts	0x0212, r25	; 0x800212 <last_proportional+0x1>
     a20:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <last_proportional>
 
 
		int power_difference = proportional/10 + integral/40000 + derivative*0.50;						// derivative == stuur snelheid
     a24:	6a e0       	ldi	r22, 0x0A	; 10
     a26:	70 e0       	ldi	r23, 0x00	; 0
     a28:	0e 94 b0 1b 	call	0x3760	; 0x3760 <__divmodhi4>
     a2c:	6b 01       	movw	r12, r22
     a2e:	bf 01       	movw	r22, r30
     a30:	ff 0f       	add	r31, r31
     a32:	88 0b       	sbc	r24, r24
     a34:	99 0b       	sbc	r25, r25
     a36:	20 e4       	ldi	r18, 0x40	; 64
     a38:	3c e9       	ldi	r19, 0x9C	; 156
     a3a:	40 e0       	ldi	r20, 0x00	; 0
     a3c:	50 e0       	ldi	r21, 0x00	; 0
     a3e:	0e 94 e6 1b 	call	0x37cc	; 0x37cc <__divmodsi4>
     a42:	0d 2c       	mov	r0, r13
     a44:	00 0c       	add	r0, r0
     a46:	ee 08       	sbc	r14, r14
     a48:	ff 08       	sbc	r15, r15
     a4a:	c2 0e       	add	r12, r18
     a4c:	d3 1e       	adc	r13, r19
     a4e:	e4 1e       	adc	r14, r20
     a50:	f5 1e       	adc	r15, r21
     a52:	be 01       	movw	r22, r28
     a54:	dd 0f       	add	r29, r29
     a56:	88 0b       	sbc	r24, r24
     a58:	99 0b       	sbc	r25, r25
     a5a:	0e 94 b6 0c 	call	0x196c	; 0x196c <__floatsisf>
     a5e:	20 e0       	ldi	r18, 0x00	; 0
     a60:	30 e0       	ldi	r19, 0x00	; 0
     a62:	40 e0       	ldi	r20, 0x00	; 0
     a64:	5f e3       	ldi	r21, 0x3F	; 63
     a66:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <__mulsf3>
     a6a:	4b 01       	movw	r8, r22
     a6c:	5c 01       	movw	r10, r24
     a6e:	c7 01       	movw	r24, r14
     a70:	b6 01       	movw	r22, r12
     a72:	0e 94 b6 0c 	call	0x196c	; 0x196c <__floatsisf>
     a76:	a5 01       	movw	r20, r10
     a78:	94 01       	movw	r18, r8
     a7a:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__addsf3>
     a7e:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <__fixsfsi>
     a82:	cb 01       	movw	r24, r22

		// Compute the actual motor settings.  We never set either motor
		// to a negative value.
		const int max = 70;
		if(power_difference > max)
     a84:	67 34       	cpi	r22, 0x47	; 71
     a86:	71 05       	cpc	r23, r1
     a88:	14 f0       	brlt	.+4      	; 0xa8e <__stack+0x18f>
			power_difference = max;
     a8a:	86 e4       	ldi	r24, 0x46	; 70
     a8c:	90 e0       	ldi	r25, 0x00	; 0
		if(power_difference < -max)
     a8e:	8a 3b       	cpi	r24, 0xBA	; 186
     a90:	2f ef       	ldi	r18, 0xFF	; 255
     a92:	92 07       	cpc	r25, r18
     a94:	14 f4       	brge	.+4      	; 0xa9a <__stack+0x19b>
			power_difference = -max;
     a96:	8a eb       	ldi	r24, 0xBA	; 186
     a98:	9f ef       	ldi	r25, 0xFF	; 255

		if(power_difference < 0)
     a9a:	99 23       	and	r25, r25
     a9c:	3c f4       	brge	.+14     	; 0xaac <__stack+0x1ad>
			set_motors(max+power_difference, max);
     a9e:	66 e4       	ldi	r22, 0x46	; 70
     aa0:	70 e0       	ldi	r23, 0x00	; 0
     aa2:	8a 5b       	subi	r24, 0xBA	; 186
     aa4:	9f 4f       	sbci	r25, 0xFF	; 255
     aa6:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
     aaa:	53 c0       	rjmp	.+166    	; 0xb52 <__stack+0x253>
		else
			set_motors(max, max-power_difference);
     aac:	66 e4       	ldi	r22, 0x46	; 70
     aae:	70 e0       	ldi	r23, 0x00	; 0
     ab0:	68 1b       	sub	r22, r24
     ab2:	79 0b       	sbc	r23, r25
     ab4:	86 e4       	ldi	r24, 0x46	; 70
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
     abc:	4a c0       	rjmp	.+148    	; 0xb52 <__stack+0x253>
		
	}
	
	
	else if(x == 'B'){														//Reverse while following the line
     abe:	c2 34       	cpi	r28, 0x42	; 66
     ac0:	09 f5       	brne	.+66     	; 0xb04 <__stack+0x205>
		set_motors(-50,-50);
     ac2:	6e ec       	ldi	r22, 0xCE	; 206
     ac4:	7f ef       	ldi	r23, 0xFF	; 255
     ac6:	8e ec       	ldi	r24, 0xCE	; 206
     ac8:	9f ef       	ldi	r25, 0xFF	; 255
     aca:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
		
		if (sensors[3] >=Refrence_value)
     ace:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <sensors+0x6>
     ad2:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <sensors+0x7>
     ad6:	80 39       	cpi	r24, 0x90	; 144
     ad8:	91 40       	sbci	r25, 0x01	; 1
     ada:	30 f0       	brcs	.+12     	; 0xae8 <__stack+0x1e9>
			set_motors(-50,-55);
     adc:	69 ec       	ldi	r22, 0xC9	; 201
     ade:	7f ef       	ldi	r23, 0xFF	; 255
     ae0:	8e ec       	ldi	r24, 0xCE	; 206
     ae2:	9f ef       	ldi	r25, 0xFF	; 255
     ae4:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
		if (sensors[1] >=Refrence_value)
     ae8:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x2>
     aec:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x3>
     af0:	80 39       	cpi	r24, 0x90	; 144
     af2:	91 40       	sbci	r25, 0x01	; 1
     af4:	70 f1       	brcs	.+92     	; 0xb52 <__stack+0x253>
			set_motors(-55,-50);
     af6:	6e ec       	ldi	r22, 0xCE	; 206
     af8:	7f ef       	ldi	r23, 0xFF	; 255
     afa:	89 ec       	ldi	r24, 0xC9	; 201
     afc:	9f ef       	ldi	r25, 0xFF	; 255
     afe:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
     b02:	27 c0       	rjmp	.+78     	; 0xb52 <__stack+0x253>
	}
	
	
	else if(x == 'T'){														// Turn around
     b04:	c4 35       	cpi	r28, 0x54	; 84
     b06:	a1 f4       	brne	.+40     	; 0xb30 <__stack+0x231>
		set_motors(-turn_value,turn_value);
     b08:	6c e3       	ldi	r22, 0x3C	; 60
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	84 ec       	ldi	r24, 0xC4	; 196
     b0e:	9f ef       	ldi	r25, 0xFF	; 255
     b10:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
		
		while (sensors[2] <=Refrence_value)
     b14:	05 c0       	rjmp	.+10     	; 0xb20 <__stack+0x221>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     b16:	61 e0       	ldi	r22, 0x01	; 1
     b18:	85 e1       	ldi	r24, 0x15	; 21
     b1a:	92 e0       	ldi	r25, 0x02	; 2
     b1c:	0e 94 43 16 	call	0x2c86	; 0x2c86 <read_line_sensors_calibrated>
	
	
	else if(x == 'T'){														// Turn around
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] <=Refrence_value)
     b20:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     b24:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     b28:	81 39       	cpi	r24, 0x91	; 145
     b2a:	91 40       	sbci	r25, 0x01	; 1
     b2c:	a0 f3       	brcs	.-24     	; 0xb16 <__stack+0x217>
     b2e:	11 c0       	rjmp	.+34     	; 0xb52 <__stack+0x253>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'P')														//Robot stops on a slow pace
     b30:	c0 35       	cpi	r28, 0x50	; 80
     b32:	79 f4       	brne	.+30     	; 0xb52 <__stack+0x253>
     b34:	0a c0       	rjmp	.+20     	; 0xb4a <__stack+0x24b>
		for( int i=50;i>=0;i-=3)
		{
			set_motors(i,i);
     b36:	be 01       	movw	r22, r28
     b38:	ce 01       	movw	r24, r28
     b3a:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     b3e:	84 e0       	ldi	r24, 0x04	; 4
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <delay_ms>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'P')														//Robot stops on a slow pace
		for( int i=50;i>=0;i-=3)
     b46:	23 97       	sbiw	r28, 0x03	; 3
     b48:	02 c0       	rjmp	.+4      	; 0xb4e <__stack+0x24f>
     b4a:	c2 e3       	ldi	r28, 0x32	; 50
     b4c:	d0 e0       	ldi	r29, 0x00	; 0
     b4e:	dd 23       	and	r29, r29
     b50:	94 f7       	brge	.-28     	; 0xb36 <__stack+0x237>
			set_motors(i,i);
			delay(4);
		}
		
		
}
     b52:	df 91       	pop	r29
     b54:	cf 91       	pop	r28
     b56:	1f 91       	pop	r17
     b58:	0f 91       	pop	r16
     b5a:	ff 90       	pop	r15
     b5c:	ef 90       	pop	r14
     b5e:	df 90       	pop	r13
     b60:	cf 90       	pop	r12
     b62:	bf 90       	pop	r11
     b64:	af 90       	pop	r10
     b66:	9f 90       	pop	r9
     b68:	8f 90       	pop	r8
     b6a:	08 95       	ret

00000b6c <lineType>:
						
	while(!button_is_pressed(BUTTON_B)){}
	wait_for_button_release(BUTTON_B);
}

char lineType(){																																	// function that returns the type of junction it detects
     b6c:	cf 93       	push	r28
     b6e:	df 93       	push	r29
	while(1){																																		// >= 500 = black line		<=500 = white
		read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     b70:	61 e0       	ldi	r22, 0x01	; 1
     b72:	85 e1       	ldi	r24, 0x15	; 21
     b74:	92 e0       	ldi	r25, 0x02	; 2
     b76:	0e 94 43 16 	call	0x2c86	; 0x2c86 <read_line_sensors_calibrated>
					
		if (sensors[0] >=Refrence_value && sensors[1] >= Refrence_value && sensors[4] <= Refrence_value ){																							//Checks if its a left corner or a straight with left corner
     b7a:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors>
     b7e:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x1>
     b82:	80 39       	cpi	r24, 0x90	; 144
     b84:	21 e0       	ldi	r18, 0x01	; 1
     b86:	92 07       	cpc	r25, r18
     b88:	38 f1       	brcs	.+78     	; 0xbd8 <lineType+0x6c>
     b8a:	20 91 17 02 	lds	r18, 0x0217	; 0x800217 <sensors+0x2>
     b8e:	30 91 18 02 	lds	r19, 0x0218	; 0x800218 <sensors+0x3>
     b92:	20 39       	cpi	r18, 0x90	; 144
     b94:	31 40       	sbci	r19, 0x01	; 1
     b96:	00 f1       	brcs	.+64     	; 0xbd8 <lineType+0x6c>
     b98:	20 91 1d 02 	lds	r18, 0x021D	; 0x80021d <sensors+0x8>
     b9c:	30 91 1e 02 	lds	r19, 0x021E	; 0x80021e <sensors+0x9>
     ba0:	21 39       	cpi	r18, 0x91	; 145
     ba2:	31 40       	sbci	r19, 0x01	; 1
     ba4:	c8 f4       	brcc	.+50     	; 0xbd8 <lineType+0x6c>
			inch();
     ba6:	0e 94 51 04 	call	0x8a2	; 0x8a2 <inch>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     baa:	61 e0       	ldi	r22, 0x01	; 1
     bac:	85 e1       	ldi	r24, 0x15	; 21
     bae:	92 e0       	ldi	r25, 0x02	; 2
     bb0:	0e 94 43 16 	call	0x2c86	; 0x2c86 <read_line_sensors_calibrated>
			
			if (sensors[2] >= Refrence_value || sensors[3] >=Refrence_value){
     bb4:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     bb8:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     bbc:	80 39       	cpi	r24, 0x90	; 144
     bbe:	91 40       	sbci	r25, 0x01	; 1
     bc0:	08 f0       	brcs	.+2      	; 0xbc4 <lineType+0x58>
     bc2:	da c0       	rjmp	.+436    	; 0xd78 <lineType+0x20c>
     bc4:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <sensors+0x6>
     bc8:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <sensors+0x7>
     bcc:	80 39       	cpi	r24, 0x90	; 144
     bce:	91 40       	sbci	r25, 0x01	; 1
     bd0:	08 f4       	brcc	.+2      	; 0xbd4 <lineType+0x68>
     bd2:	d4 c0       	rjmp	.+424    	; 0xd7c <lineType+0x210>
				println(Straight_left_junction);
				return Straight_left_junction;
     bd4:	86 e0       	ldi	r24, 0x06	; 6
     bd6:	df c0       	rjmp	.+446    	; 0xd96 <lineType+0x22a>
				return Left_corner;
			}
		}
		
		
		else if (sensors[3] >=Refrence_value && sensors[4] >= Refrence_value && sensors[0] <= Refrence_value){																							//Checks if its a right corner or a straight with right corner
     bd8:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <sensors+0x6>
     bdc:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <sensors+0x7>
     be0:	20 39       	cpi	r18, 0x90	; 144
     be2:	61 e0       	ldi	r22, 0x01	; 1
     be4:	36 07       	cpc	r19, r22
     be6:	20 f1       	brcs	.+72     	; 0xc30 <lineType+0xc4>
     be8:	40 91 1d 02 	lds	r20, 0x021D	; 0x80021d <sensors+0x8>
     bec:	50 91 1e 02 	lds	r21, 0x021E	; 0x80021e <sensors+0x9>
     bf0:	40 39       	cpi	r20, 0x90	; 144
     bf2:	51 40       	sbci	r21, 0x01	; 1
     bf4:	e8 f0       	brcs	.+58     	; 0xc30 <lineType+0xc4>
     bf6:	81 39       	cpi	r24, 0x91	; 145
     bf8:	41 e0       	ldi	r20, 0x01	; 1
     bfa:	94 07       	cpc	r25, r20
     bfc:	c8 f4       	brcc	.+50     	; 0xc30 <lineType+0xc4>
			inch();
     bfe:	0e 94 51 04 	call	0x8a2	; 0x8a2 <inch>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     c02:	61 e0       	ldi	r22, 0x01	; 1
     c04:	85 e1       	ldi	r24, 0x15	; 21
     c06:	92 e0       	ldi	r25, 0x02	; 2
     c08:	0e 94 43 16 	call	0x2c86	; 0x2c86 <read_line_sensors_calibrated>
			
			if (sensors[2] >= Refrence_value || sensors[1] >=Refrence_value){
     c0c:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     c10:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     c14:	80 39       	cpi	r24, 0x90	; 144
     c16:	91 40       	sbci	r25, 0x01	; 1
     c18:	08 f0       	brcs	.+2      	; 0xc1c <lineType+0xb0>
     c1a:	b2 c0       	rjmp	.+356    	; 0xd80 <lineType+0x214>
     c1c:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x2>
     c20:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x3>
     c24:	80 39       	cpi	r24, 0x90	; 144
     c26:	91 40       	sbci	r25, 0x01	; 1
     c28:	08 f4       	brcc	.+2      	; 0xc2c <lineType+0xc0>
     c2a:	ac c0       	rjmp	.+344    	; 0xd84 <lineType+0x218>
				println(Straight_right_junction);
				return Straight_right_junction;
     c2c:	85 e0       	ldi	r24, 0x05	; 5
     c2e:	b3 c0       	rjmp	.+358    	; 0xd96 <lineType+0x22a>
				println(Straight_left_junction);
				return Right_corner;
			}
		}
		
				else if (sensors[0] >= Refrence_value && sensors[1] >=Refrence_value && sensors[3] >= Refrence_value && sensors[4] >= Refrence_value){																									//Checks if its a X junction or a T junction
     c30:	80 39       	cpi	r24, 0x90	; 144
     c32:	91 40       	sbci	r25, 0x01	; 1
     c34:	08 f4       	brcc	.+2      	; 0xc38 <lineType+0xcc>
     c36:	8d c0       	rjmp	.+282    	; 0xd52 <lineType+0x1e6>
     c38:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x2>
     c3c:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x3>
     c40:	80 39       	cpi	r24, 0x90	; 144
     c42:	91 40       	sbci	r25, 0x01	; 1
     c44:	08 f4       	brcc	.+2      	; 0xc48 <lineType+0xdc>
     c46:	85 c0       	rjmp	.+266    	; 0xd52 <lineType+0x1e6>
     c48:	20 39       	cpi	r18, 0x90	; 144
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	38 07       	cpc	r19, r24
     c4e:	08 f4       	brcc	.+2      	; 0xc52 <lineType+0xe6>
     c50:	80 c0       	rjmp	.+256    	; 0xd52 <lineType+0x1e6>
     c52:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sensors+0x8>
     c56:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sensors+0x9>
     c5a:	80 39       	cpi	r24, 0x90	; 144
     c5c:	91 40       	sbci	r25, 0x01	; 1
     c5e:	08 f4       	brcc	.+2      	; 0xc62 <lineType+0xf6>
     c60:	78 c0       	rjmp	.+240    	; 0xd52 <lineType+0x1e6>
					inch();
     c62:	0e 94 51 04 	call	0x8a2	; 0x8a2 <inch>
					read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     c66:	61 e0       	ldi	r22, 0x01	; 1
     c68:	85 e1       	ldi	r24, 0x15	; 21
     c6a:	92 e0       	ldi	r25, 0x02	; 2
     c6c:	0e 94 43 16 	call	0x2c86	; 0x2c86 <read_line_sensors_calibrated>
					if (sensors[0] >=Refrence_value && sensors[1] >=Refrence_value && sensors[3] >= Refrence_value && sensors[4] >=Refrence_value){
     c70:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors>
     c74:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x1>
     c78:	80 39       	cpi	r24, 0x90	; 144
     c7a:	91 40       	sbci	r25, 0x01	; 1
     c7c:	08 f4       	brcc	.+2      	; 0xc80 <lineType+0x114>
     c7e:	60 c0       	rjmp	.+192    	; 0xd40 <lineType+0x1d4>
     c80:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x2>
     c84:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x3>
     c88:	80 39       	cpi	r24, 0x90	; 144
     c8a:	91 40       	sbci	r25, 0x01	; 1
     c8c:	08 f4       	brcc	.+2      	; 0xc90 <lineType+0x124>
     c8e:	58 c0       	rjmp	.+176    	; 0xd40 <lineType+0x1d4>
     c90:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <sensors+0x6>
     c94:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <sensors+0x7>
     c98:	80 39       	cpi	r24, 0x90	; 144
     c9a:	91 40       	sbci	r25, 0x01	; 1
     c9c:	08 f4       	brcc	.+2      	; 0xca0 <lineType+0x134>
     c9e:	50 c0       	rjmp	.+160    	; 0xd40 <lineType+0x1d4>
     ca0:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sensors+0x8>
     ca4:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sensors+0x9>
     ca8:	80 39       	cpi	r24, 0x90	; 144
     caa:	91 40       	sbci	r25, 0x01	; 1
     cac:	08 f4       	brcc	.+2      	; 0xcb0 <lineType+0x144>
     cae:	48 c0       	rjmp	.+144    	; 0xd40 <lineType+0x1d4>
						clear();
     cb0:	0e 94 a5 12 	call	0x254a	; 0x254a <clear>
						while(sensors[0] >= 400 || sensors[4] >=400)
     cb4:	31 c0       	rjmp	.+98     	; 0xd18 <lineType+0x1ac>
						{
							lcd_goto_xy(0,0);
     cb6:	60 e0       	ldi	r22, 0x00	; 0
     cb8:	80 e0       	ldi	r24, 0x00	; 0
     cba:	0e 94 2c 13 	call	0x2658	; 0x2658 <lcd_goto_xy>
							print_long(sensors[1]);
     cbe:	c5 e1       	ldi	r28, 0x15	; 21
     cc0:	d2 e0       	ldi	r29, 0x02	; 2
     cc2:	6a 81       	ldd	r22, Y+2	; 0x02
     cc4:	7b 81       	ldd	r23, Y+3	; 0x03
     cc6:	80 e0       	ldi	r24, 0x00	; 0
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	0e 94 09 13 	call	0x2612	; 0x2612 <print_long>
							lcd_goto_xy(0,1);
     cce:	61 e0       	ldi	r22, 0x01	; 1
     cd0:	80 e0       	ldi	r24, 0x00	; 0
     cd2:	0e 94 2c 13 	call	0x2658	; 0x2658 <lcd_goto_xy>
							print_long(sensors[3]);
     cd6:	6e 81       	ldd	r22, Y+6	; 0x06
     cd8:	7f 81       	ldd	r23, Y+7	; 0x07
     cda:	80 e0       	ldi	r24, 0x00	; 0
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	0e 94 09 13 	call	0x2612	; 0x2612 <print_long>
							lcd_goto_xy(5,0);
     ce2:	60 e0       	ldi	r22, 0x00	; 0
     ce4:	85 e0       	ldi	r24, 0x05	; 5
     ce6:	0e 94 2c 13 	call	0x2658	; 0x2658 <lcd_goto_xy>
							print_long(sensors[0]);
     cea:	68 81       	ld	r22, Y
     cec:	79 81       	ldd	r23, Y+1	; 0x01
     cee:	80 e0       	ldi	r24, 0x00	; 0
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	0e 94 09 13 	call	0x2612	; 0x2612 <print_long>
							lcd_goto_xy(5,1);
     cf6:	61 e0       	ldi	r22, 0x01	; 1
     cf8:	85 e0       	ldi	r24, 0x05	; 5
     cfa:	0e 94 2c 13 	call	0x2658	; 0x2658 <lcd_goto_xy>
							print_long(sensors[4]);
     cfe:	68 85       	ldd	r22, Y+8	; 0x08
     d00:	79 85       	ldd	r23, Y+9	; 0x09
     d02:	80 e0       	ldi	r24, 0x00	; 0
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	0e 94 09 13 	call	0x2612	; 0x2612 <print_long>
							
							read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     d0a:	61 e0       	ldi	r22, 0x01	; 1
     d0c:	ce 01       	movw	r24, r28
     d0e:	0e 94 43 16 	call	0x2c86	; 0x2c86 <read_line_sensors_calibrated>
							motorControl('S');
     d12:	83 e5       	ldi	r24, 0x53	; 83
     d14:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
				else if (sensors[0] >= Refrence_value && sensors[1] >=Refrence_value && sensors[3] >= Refrence_value && sensors[4] >= Refrence_value){																									//Checks if its a X junction or a T junction
					inch();
					read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
					if (sensors[0] >=Refrence_value && sensors[1] >=Refrence_value && sensors[3] >= Refrence_value && sensors[4] >=Refrence_value){
						clear();
						while(sensors[0] >= 400 || sensors[4] >=400)
     d18:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors>
     d1c:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x1>
     d20:	80 39       	cpi	r24, 0x90	; 144
     d22:	91 40       	sbci	r25, 0x01	; 1
     d24:	40 f6       	brcc	.-112    	; 0xcb6 <lineType+0x14a>
     d26:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sensors+0x8>
     d2a:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sensors+0x9>
     d2e:	80 39       	cpi	r24, 0x90	; 144
     d30:	91 40       	sbci	r25, 0x01	; 1
     d32:	08 f6       	brcc	.-126    	; 0xcb6 <lineType+0x14a>
							print_long(sensors[4]);
							
							read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
							motorControl('S');
						}
						wait();
     d34:	0e 94 62 04 	call	0x8c4	; 0x8c4 <wait>
						clear();
     d38:	0e 94 a5 12 	call	0x254a	; 0x254a <clear>
					return Barcode;
     d3c:	82 e0       	ldi	r24, 0x02	; 2
     d3e:	2b c0       	rjmp	.+86     	; 0xd96 <lineType+0x22a>
					}
					else if (sensors[2] >=Refrence_value){
     d40:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     d44:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     d48:	80 39       	cpi	r24, 0x90	; 144
     d4a:	91 40       	sbci	r25, 0x01	; 1
     d4c:	e8 f0       	brcs	.+58     	; 0xd88 <lineType+0x21c>
						println(X_junction);
						return X_junction;
     d4e:	88 e0       	ldi	r24, 0x08	; 8
     d50:	22 c0       	rjmp	.+68     	; 0xd96 <lineType+0x22a>
						println(T_junction);
						return T_junction;
					}
				}
				
				else if(sensors[2] <= End_Line_Value && sensors[1] <=End_Line_Value && sensors[3] <=End_Line_Value){
     d52:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x4>
     d56:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x5>
     d5a:	89 3c       	cpi	r24, 0xC9	; 201
     d5c:	91 05       	cpc	r25, r1
     d5e:	b0 f4       	brcc	.+44     	; 0xd8c <lineType+0x220>
     d60:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x2>
     d64:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x3>
     d68:	89 3c       	cpi	r24, 0xC9	; 201
     d6a:	91 05       	cpc	r25, r1
     d6c:	88 f4       	brcc	.+34     	; 0xd90 <lineType+0x224>
     d6e:	29 3c       	cpi	r18, 0xC9	; 201
     d70:	31 05       	cpc	r19, r1
     d72:	80 f0       	brcs	.+32     	; 0xd94 <lineType+0x228>
			}
			else{
				println(Straight);
				return Straight;
			}				*/																					// check if its straight without any corners
			return Straight;
     d74:	80 e0       	ldi	r24, 0x00	; 0
     d76:	0f c0       	rjmp	.+30     	; 0xd96 <lineType+0x22a>
			inch();
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= Refrence_value || sensors[3] >=Refrence_value){
				println(Straight_left_junction);
				return Straight_left_junction;
     d78:	86 e0       	ldi	r24, 0x06	; 6
     d7a:	0d c0       	rjmp	.+26     	; 0xd96 <lineType+0x22a>
			}
			else{
				println(Left_corner);
				return Left_corner;
     d7c:	83 e0       	ldi	r24, 0x03	; 3
     d7e:	0b c0       	rjmp	.+22     	; 0xd96 <lineType+0x22a>
			inch();
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= Refrence_value || sensors[1] >=Refrence_value){
				println(Straight_right_junction);
				return Straight_right_junction;
     d80:	85 e0       	ldi	r24, 0x05	; 5
     d82:	09 c0       	rjmp	.+18     	; 0xd96 <lineType+0x22a>
			}
			else{
				println(Straight_left_junction);
				return Right_corner;
     d84:	84 e0       	ldi	r24, 0x04	; 4
     d86:	07 c0       	rjmp	.+14     	; 0xd96 <lineType+0x22a>
						println(X_junction);
						return X_junction;
					}
					else {
						println(T_junction);
						return T_junction;
     d88:	87 e0       	ldi	r24, 0x07	; 7
     d8a:	05 c0       	rjmp	.+10     	; 0xd96 <lineType+0x22a>
			}
			else{
				println(Straight);
				return Straight;
			}				*/																					// check if its straight without any corners
			return Straight;
     d8c:	80 e0       	ldi	r24, 0x00	; 0
     d8e:	03 c0       	rjmp	.+6      	; 0xd96 <lineType+0x22a>
     d90:	80 e0       	ldi	r24, 0x00	; 0
     d92:	01 c0       	rjmp	.+2      	; 0xd96 <lineType+0x22a>
					}
				}
				
				else if(sensors[2] <= End_Line_Value && sensors[1] <=End_Line_Value && sensors[3] <=End_Line_Value){
					println(Line_end);																													// check if the line ends
					return Line_end;
     d94:	81 e0       	ldi	r24, 0x01	; 1
			return Straight;
		}
		
	
	}
}
     d96:	df 91       	pop	r29
     d98:	cf 91       	pop	r28
     d9a:	08 95       	ret

00000d9c <manualControl>:
}




void manualControl(){
     d9c:	cf 93       	push	r28
     d9e:	df 93       	push	r29
int speed = 0;

	if(myComs->Direction[0] == 1){
     da0:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <myComs>
     da4:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <myComs+0x1>
     da8:	85 a9       	ldd	r24, Z+53	; 0x35
     daa:	81 30       	cpi	r24, 0x01	; 1
     dac:	49 f4       	brne	.+18     	; 0xdc0 <manualControl+0x24>
		set_motors(speed,speed);
     dae:	60 e0       	ldi	r22, 0x00	; 0
     db0:	70 e0       	ldi	r23, 0x00	; 0
     db2:	80 e0       	ldi	r24, 0x00	; 0
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
		speed++;
     dba:	c1 e0       	ldi	r28, 0x01	; 1
     dbc:	d0 e0       	ldi	r29, 0x00	; 0
     dbe:	02 c0       	rjmp	.+4      	; 0xdc4 <manualControl+0x28>




void manualControl(){
int speed = 0;
     dc0:	c0 e0       	ldi	r28, 0x00	; 0
     dc2:	d0 e0       	ldi	r29, 0x00	; 0
	if(myComs->Direction[0] == 1){
		set_motors(speed,speed);
		speed++;
	}
	
	if(myComs->Direction[1] == 1){
     dc4:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <myComs>
     dc8:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <myComs+0x1>
     dcc:	86 a9       	ldd	r24, Z+54	; 0x36
     dce:	81 30       	cpi	r24, 0x01	; 1
     dd0:	41 f4       	brne	.+16     	; 0xde2 <manualControl+0x46>
		set_motors(-speed,-speed);
     dd2:	88 27       	eor	r24, r24
     dd4:	99 27       	eor	r25, r25
     dd6:	8c 1b       	sub	r24, r28
     dd8:	9d 0b       	sbc	r25, r29
     dda:	bc 01       	movw	r22, r24
     ddc:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
		speed--;
     de0:	21 97       	sbiw	r28, 0x01	; 1
	}
	
	if(myComs->Direction[2] == 1){
     de2:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <myComs>
     de6:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <myComs+0x1>
     dea:	87 a9       	ldd	r24, Z+55	; 0x37
     dec:	81 30       	cpi	r24, 0x01	; 1
     dee:	49 f4       	brne	.+18     	; 0xe02 <manualControl+0x66>
		set_motors(speed/2,speed);
     df0:	ce 01       	movw	r24, r28
     df2:	dd 23       	and	r29, r29
     df4:	0c f4       	brge	.+2      	; 0xdf8 <manualControl+0x5c>
     df6:	01 96       	adiw	r24, 0x01	; 1
     df8:	be 01       	movw	r22, r28
     dfa:	95 95       	asr	r25
     dfc:	87 95       	ror	r24
     dfe:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
	}
	
	if(myComs->Direction[3] == 1){
     e02:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <myComs>
     e06:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <myComs+0x1>
     e0a:	80 ad       	ldd	r24, Z+56	; 0x38
     e0c:	81 30       	cpi	r24, 0x01	; 1
     e0e:	51 f4       	brne	.+20     	; 0xe24 <manualControl+0x88>
		set_motors(speed,speed/2);
     e10:	be 01       	movw	r22, r28
     e12:	dd 23       	and	r29, r29
     e14:	14 f4       	brge	.+4      	; 0xe1a <manualControl+0x7e>
     e16:	6f 5f       	subi	r22, 0xFF	; 255
     e18:	7f 4f       	sbci	r23, 0xFF	; 255
     e1a:	75 95       	asr	r23
     e1c:	67 95       	ror	r22
     e1e:	ce 01       	movw	r24, r28
     e20:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
	}
}
     e24:	df 91       	pop	r29
     e26:	cf 91       	pop	r28
     e28:	08 95       	ret

00000e2a <Spin>:

void Spin(){
     e2a:	cf 93       	push	r28
     e2c:	df 93       	push	r29
	
	for(int i = 0;i<=255;i++){
     e2e:	c0 e0       	ldi	r28, 0x00	; 0
     e30:	d0 e0       	ldi	r29, 0x00	; 0
     e32:	0c c0       	rjmp	.+24     	; 0xe4c <Spin+0x22>
		set_motors(i,0-i);
     e34:	66 27       	eor	r22, r22
     e36:	77 27       	eor	r23, r23
     e38:	6c 1b       	sub	r22, r28
     e3a:	7d 0b       	sbc	r23, r29
     e3c:	ce 01       	movw	r24, r28
     e3e:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>
     e42:	82 e0       	ldi	r24, 0x02	; 2
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <delay_ms>
	}
}

void Spin(){
	
	for(int i = 0;i<=255;i++){
     e4a:	21 96       	adiw	r28, 0x01	; 1
     e4c:	cf 3f       	cpi	r28, 0xFF	; 255
     e4e:	d1 05       	cpc	r29, r1
     e50:	89 f3       	breq	.-30     	; 0xe34 <Spin+0xa>
     e52:	84 f3       	brlt	.-32     	; 0xe34 <Spin+0xa>
     e54:	c0 e0       	ldi	r28, 0x00	; 0
     e56:	d0 e0       	ldi	r29, 0x00	; 0
     e58:	15 c0       	rjmp	.+42     	; 0xe84 <Spin+0x5a>
		set_motors(i,0-i);
		delay(2);
	}
	int count = 0;
	while(myComs->EmergencyStop == 2){
		count++;
     e5a:	21 96       	adiw	r28, 0x01	; 1
		if(count % 10000 == 0)
     e5c:	ce 01       	movw	r24, r28
     e5e:	60 e1       	ldi	r22, 0x10	; 16
     e60:	77 e2       	ldi	r23, 0x27	; 39
     e62:	0e 94 b0 1b 	call	0x3760	; 0x3760 <__divmodhi4>
     e66:	89 2b       	or	r24, r25
     e68:	69 f4       	brne	.+26     	; 0xe84 <Spin+0x5a>
		{
			clear();
     e6a:	0e 94 a5 12 	call	0x254a	; 0x254a <clear>
			myComs->Update(myComs);
     e6e:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <myComs>
     e72:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <myComs+0x1>
     e76:	fc 01       	movw	r30, r24
     e78:	ef 58       	subi	r30, 0x8F	; 143
     e7a:	ff 4f       	sbci	r31, 0xFF	; 255
     e7c:	01 90       	ld	r0, Z+
     e7e:	f0 81       	ld	r31, Z
     e80:	e0 2d       	mov	r30, r0
     e82:	09 95       	icall
	for(int i = 0;i<=255;i++){
		set_motors(i,0-i);
		delay(2);
	}
	int count = 0;
	while(myComs->EmergencyStop == 2){
     e84:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <myComs>
     e88:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <myComs+0x1>
     e8c:	e5 59       	subi	r30, 0x95	; 149
     e8e:	ff 4f       	sbci	r31, 0xFF	; 255
     e90:	80 81       	ld	r24, Z
     e92:	82 30       	cpi	r24, 0x02	; 2
     e94:	11 f3       	breq	.-60     	; 0xe5a <Spin+0x30>
		


	}
	
	set_motors(0,0);
     e96:	60 e0       	ldi	r22, 0x00	; 0
     e98:	70 e0       	ldi	r23, 0x00	; 0
     e9a:	80 e0       	ldi	r24, 0x00	; 0
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <set_motors>

	
     ea2:	df 91       	pop	r29
     ea4:	cf 91       	pop	r28
     ea6:	08 95       	ret

00000ea8 <parcoursSearch>:
     ea8:	0f 93       	push	r16
     eaa:	1f 93       	push	r17
     eac:	cf 93       	push	r28
     eae:	df 93       	push	r29
     eb0:	00 d0       	rcall	.+0      	; 0xeb2 <parcoursSearch+0xa>
     eb2:	cd b7       	in	r28, 0x3d	; 61
     eb4:	de b7       	in	r29, 0x3e	; 62
     eb6:	0e 94 b6 05 	call	0xb6c	; 0xb6c <lineType>
     eba:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <situatie>
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	89 30       	cpi	r24, 0x09	; 9
     ec2:	91 05       	cpc	r25, r1
     ec4:	08 f0       	brcs	.+2      	; 0xec8 <parcoursSearch+0x20>
     ec6:	41 c0       	rjmp	.+130    	; 0xf4a <parcoursSearch+0xa2>
     ec8:	fc 01       	movw	r30, r24
     eca:	ec 5c       	subi	r30, 0xCC	; 204
     ecc:	ff 4f       	sbci	r31, 0xFF	; 255
     ece:	0c 94 05 1c 	jmp	0x380a	; 0x380a <__tablejump2__>
     ed2:	83 e5       	ldi	r24, 0x53	; 83
     ed4:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
     ed8:	38 c0       	rjmp	.+112    	; 0xf4a <parcoursSearch+0xa2>
     eda:	8c e4       	ldi	r24, 0x4C	; 76
     edc:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
     ee0:	8c e4       	ldi	r24, 0x4C	; 76
     ee2:	89 83       	std	Y+1, r24	; 0x01
     ee4:	41 e0       	ldi	r20, 0x01	; 1
     ee6:	50 e0       	ldi	r21, 0x00	; 0
     ee8:	be 01       	movw	r22, r28
     eea:	6f 5f       	subi	r22, 0xFF	; 255
     eec:	7f 4f       	sbci	r23, 0xFF	; 255
     eee:	84 e1       	ldi	r24, 0x14	; 20
     ef0:	91 e0       	ldi	r25, 0x01	; 1
     ef2:	0e 94 85 1d 	call	0x3b0a	; 0x3b0a <strncat>
     ef6:	29 c0       	rjmp	.+82     	; 0xf4a <parcoursSearch+0xa2>
     ef8:	82 e5       	ldi	r24, 0x52	; 82
     efa:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
     efe:	82 e5       	ldi	r24, 0x52	; 82
     f00:	89 83       	std	Y+1, r24	; 0x01
     f02:	41 e0       	ldi	r20, 0x01	; 1
     f04:	50 e0       	ldi	r21, 0x00	; 0
     f06:	be 01       	movw	r22, r28
     f08:	6f 5f       	subi	r22, 0xFF	; 255
     f0a:	7f 4f       	sbci	r23, 0xFF	; 255
     f0c:	84 e1       	ldi	r24, 0x14	; 20
     f0e:	91 e0       	ldi	r25, 0x01	; 1
     f10:	0e 94 85 1d 	call	0x3b0a	; 0x3b0a <strncat>
     f14:	1a c0       	rjmp	.+52     	; 0xf4a <parcoursSearch+0xa2>
     f16:	83 e5       	ldi	r24, 0x53	; 83
     f18:	89 83       	std	Y+1, r24	; 0x01
     f1a:	41 e0       	ldi	r20, 0x01	; 1
     f1c:	50 e0       	ldi	r21, 0x00	; 0
     f1e:	be 01       	movw	r22, r28
     f20:	6f 5f       	subi	r22, 0xFF	; 255
     f22:	7f 4f       	sbci	r23, 0xFF	; 255
     f24:	84 e1       	ldi	r24, 0x14	; 20
     f26:	91 e0       	ldi	r25, 0x01	; 1
     f28:	0e 94 85 1d 	call	0x3b0a	; 0x3b0a <strncat>
     f2c:	0e c0       	rjmp	.+28     	; 0xf4a <parcoursSearch+0xa2>
     f2e:	84 e5       	ldi	r24, 0x54	; 84
     f30:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
     f34:	84 e5       	ldi	r24, 0x54	; 84
     f36:	89 83       	std	Y+1, r24	; 0x01
     f38:	41 e0       	ldi	r20, 0x01	; 1
     f3a:	50 e0       	ldi	r21, 0x00	; 0
     f3c:	be 01       	movw	r22, r28
     f3e:	6f 5f       	subi	r22, 0xFF	; 255
     f40:	7f 4f       	sbci	r23, 0xFF	; 255
     f42:	84 e1       	ldi	r24, 0x14	; 20
     f44:	91 e0       	ldi	r25, 0x01	; 1
     f46:	0e 94 85 1d 	call	0x3b0a	; 0x3b0a <strncat>
     f4a:	0e 94 a5 12 	call	0x254a	; 0x254a <clear>
     f4e:	60 e0       	ldi	r22, 0x00	; 0
     f50:	80 e0       	ldi	r24, 0x00	; 0
     f52:	0e 94 2c 13 	call	0x2658	; 0x2658 <lcd_goto_xy>
     f56:	00 e0       	ldi	r16, 0x00	; 0
     f58:	10 e0       	ldi	r17, 0x00	; 0
     f5a:	08 c0       	rjmp	.+16     	; 0xf6c <parcoursSearch+0xc4>
     f5c:	f8 01       	movw	r30, r16
     f5e:	ec 5e       	subi	r30, 0xEC	; 236
     f60:	fe 4f       	sbci	r31, 0xFE	; 254
     f62:	80 81       	ld	r24, Z
     f64:	0e 94 35 12 	call	0x246a	; 0x246a <print_character>
     f68:	0f 5f       	subi	r16, 0xFF	; 255
     f6a:	1f 4f       	sbci	r17, 0xFF	; 255
     f6c:	e4 e1       	ldi	r30, 0x14	; 20
     f6e:	f1 e0       	ldi	r31, 0x01	; 1
     f70:	01 90       	ld	r0, Z+
     f72:	00 20       	and	r0, r0
     f74:	e9 f7       	brne	.-6      	; 0xf70 <parcoursSearch+0xc8>
     f76:	31 97       	sbiw	r30, 0x01	; 1
     f78:	e4 51       	subi	r30, 0x14	; 20
     f7a:	f1 40       	sbci	r31, 0x01	; 1
     f7c:	e0 17       	cp	r30, r16
     f7e:	f1 07       	cpc	r31, r17
     f80:	68 f7       	brcc	.-38     	; 0xf5c <parcoursSearch+0xb4>
     f82:	df 01       	movw	r26, r30
     f84:	ae 5e       	subi	r26, 0xEE	; 238
     f86:	be 4f       	sbci	r27, 0xFE	; 254
     f88:	8c 91       	ld	r24, X
     f8a:	84 35       	cpi	r24, 0x54	; 84
     f8c:	09 f0       	breq	.+2      	; 0xf90 <parcoursSearch+0xe8>
     f8e:	93 cf       	rjmp	.-218    	; 0xeb6 <parcoursSearch+0xe>
     f90:	df 01       	movw	r26, r30
     f92:	af 5e       	subi	r26, 0xEF	; 239
     f94:	be 4f       	sbci	r27, 0xFE	; 254
     f96:	8c 91       	ld	r24, X
     f98:	ed 5e       	subi	r30, 0xED	; 237
     f9a:	fe 4f       	sbci	r31, 0xFE	; 254
     f9c:	90 81       	ld	r25, Z
     f9e:	8c 34       	cpi	r24, 0x4C	; 76
     fa0:	29 f4       	brne	.+10     	; 0xfac <parcoursSearch+0x104>
     fa2:	9c 34       	cpi	r25, 0x4C	; 76
     fa4:	19 f4       	brne	.+6      	; 0xfac <parcoursSearch+0x104>
     fa6:	83 e5       	ldi	r24, 0x53	; 83
     fa8:	8a 83       	std	Y+2, r24	; 0x02
     faa:	1b c0       	rjmp	.+54     	; 0xfe2 <parcoursSearch+0x13a>
     fac:	83 35       	cpi	r24, 0x53	; 83
     fae:	29 f4       	brne	.+10     	; 0xfba <parcoursSearch+0x112>
     fb0:	9c 34       	cpi	r25, 0x4C	; 76
     fb2:	19 f4       	brne	.+6      	; 0xfba <parcoursSearch+0x112>
     fb4:	82 e5       	ldi	r24, 0x52	; 82
     fb6:	8a 83       	std	Y+2, r24	; 0x02
     fb8:	14 c0       	rjmp	.+40     	; 0xfe2 <parcoursSearch+0x13a>
     fba:	82 35       	cpi	r24, 0x52	; 82
     fbc:	29 f4       	brne	.+10     	; 0xfc8 <parcoursSearch+0x120>
     fbe:	9c 34       	cpi	r25, 0x4C	; 76
     fc0:	19 f4       	brne	.+6      	; 0xfc8 <parcoursSearch+0x120>
     fc2:	84 e5       	ldi	r24, 0x54	; 84
     fc4:	8a 83       	std	Y+2, r24	; 0x02
     fc6:	0d c0       	rjmp	.+26     	; 0xfe2 <parcoursSearch+0x13a>
     fc8:	8c 34       	cpi	r24, 0x4C	; 76
     fca:	29 f4       	brne	.+10     	; 0xfd6 <parcoursSearch+0x12e>
     fcc:	92 35       	cpi	r25, 0x52	; 82
     fce:	19 f4       	brne	.+6      	; 0xfd6 <parcoursSearch+0x12e>
     fd0:	84 e5       	ldi	r24, 0x54	; 84
     fd2:	8a 83       	std	Y+2, r24	; 0x02
     fd4:	06 c0       	rjmp	.+12     	; 0xfe2 <parcoursSearch+0x13a>
     fd6:	8c 34       	cpi	r24, 0x4C	; 76
     fd8:	21 f4       	brne	.+8      	; 0xfe2 <parcoursSearch+0x13a>
     fda:	93 35       	cpi	r25, 0x53	; 83
     fdc:	11 f4       	brne	.+4      	; 0xfe2 <parcoursSearch+0x13a>
     fde:	82 e5       	ldi	r24, 0x52	; 82
     fe0:	8a 83       	std	Y+2, r24	; 0x02
     fe2:	e4 e1       	ldi	r30, 0x14	; 20
     fe4:	f1 e0       	ldi	r31, 0x01	; 1
     fe6:	01 90       	ld	r0, Z+
     fe8:	00 20       	and	r0, r0
     fea:	e9 f7       	brne	.-6      	; 0xfe6 <parcoursSearch+0x13e>
     fec:	34 97       	sbiw	r30, 0x04	; 4
     fee:	10 82       	st	Z, r1
     ff0:	41 e0       	ldi	r20, 0x01	; 1
     ff2:	50 e0       	ldi	r21, 0x00	; 0
     ff4:	be 01       	movw	r22, r28
     ff6:	6e 5f       	subi	r22, 0xFE	; 254
     ff8:	7f 4f       	sbci	r23, 0xFF	; 255
     ffa:	84 e1       	ldi	r24, 0x14	; 20
     ffc:	91 e0       	ldi	r25, 0x01	; 1
     ffe:	0e 94 85 1d 	call	0x3b0a	; 0x3b0a <strncat>
    1002:	59 cf       	rjmp	.-334    	; 0xeb6 <parcoursSearch+0xe>
    1004:	80 e5       	ldi	r24, 0x50	; 80
    1006:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    100a:	80 e0       	ldi	r24, 0x00	; 0
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	0f 90       	pop	r0
    1010:	0f 90       	pop	r0
    1012:	df 91       	pop	r29
    1014:	cf 91       	pop	r28
    1016:	1f 91       	pop	r17
    1018:	0f 91       	pop	r16
    101a:	08 95       	ret

0000101c <parcoursRun>:
    101c:	ef 92       	push	r14
    101e:	ff 92       	push	r15
    1020:	1f 93       	push	r17
    1022:	cf 93       	push	r28
    1024:	df 93       	push	r29
    1026:	18 2f       	mov	r17, r24
    1028:	c0 e0       	ldi	r28, 0x00	; 0
    102a:	d0 e0       	ldi	r29, 0x00	; 0
    102c:	2a c0       	rjmp	.+84     	; 0x1082 <parcoursRun+0x66>
    102e:	83 e5       	ldi	r24, 0x53	; 83
    1030:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    1034:	0e 94 b6 05 	call	0xb6c	; 0xb6c <lineType>
    1038:	88 23       	and	r24, r24
    103a:	c9 f3       	breq	.-14     	; 0x102e <parcoursRun+0x12>
    103c:	14 35       	cpi	r17, 0x54	; 84
    103e:	39 f4       	brne	.+14     	; 0x104e <parcoursRun+0x32>
    1040:	fe 01       	movw	r30, r28
    1042:	ec 5e       	subi	r30, 0xEC	; 236
    1044:	fe 4f       	sbci	r31, 0xFE	; 254
    1046:	80 81       	ld	r24, Z
    1048:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    104c:	19 c0       	rjmp	.+50     	; 0x1080 <parcoursRun+0x64>
    104e:	12 34       	cpi	r17, 0x42	; 66
    1050:	b9 f4       	brne	.+46     	; 0x1080 <parcoursRun+0x64>
    1052:	e4 e1       	ldi	r30, 0x14	; 20
    1054:	f1 e0       	ldi	r31, 0x01	; 1
    1056:	01 90       	ld	r0, Z+
    1058:	00 20       	and	r0, r0
    105a:	e9 f7       	brne	.-6      	; 0x1056 <parcoursRun+0x3a>
    105c:	31 97       	sbiw	r30, 0x01	; 1
    105e:	e4 51       	subi	r30, 0x14	; 20
    1060:	f1 40       	sbci	r31, 0x01	; 1
    1062:	ee 19       	sub	r30, r14
    1064:	ff 09       	sbc	r31, r15
    1066:	ed 5e       	subi	r30, 0xED	; 237
    1068:	fe 4f       	sbci	r31, 0xFE	; 254
    106a:	80 81       	ld	r24, Z
    106c:	8c 34       	cpi	r24, 0x4C	; 76
    106e:	19 f0       	breq	.+6      	; 0x1076 <parcoursRun+0x5a>
    1070:	82 35       	cpi	r24, 0x52	; 82
    1072:	19 f0       	breq	.+6      	; 0x107a <parcoursRun+0x5e>
    1074:	03 c0       	rjmp	.+6      	; 0x107c <parcoursRun+0x60>
    1076:	82 e5       	ldi	r24, 0x52	; 82
    1078:	01 c0       	rjmp	.+2      	; 0x107c <parcoursRun+0x60>
    107a:	8c e4       	ldi	r24, 0x4C	; 76
    107c:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    1080:	21 96       	adiw	r28, 0x01	; 1
    1082:	e4 e1       	ldi	r30, 0x14	; 20
    1084:	f1 e0       	ldi	r31, 0x01	; 1
    1086:	01 90       	ld	r0, Z+
    1088:	00 20       	and	r0, r0
    108a:	e9 f7       	brne	.-6      	; 0x1086 <parcoursRun+0x6a>
    108c:	31 97       	sbiw	r30, 0x01	; 1
    108e:	e4 51       	subi	r30, 0x14	; 20
    1090:	f1 40       	sbci	r31, 0x01	; 1
    1092:	7e 01       	movw	r14, r28
    1094:	ce 17       	cp	r28, r30
    1096:	df 07       	cpc	r29, r31
    1098:	68 f2       	brcs	.-102    	; 0x1034 <parcoursRun+0x18>
    109a:	80 e0       	ldi	r24, 0x00	; 0
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	df 91       	pop	r29
    10a0:	cf 91       	pop	r28
    10a2:	1f 91       	pop	r17
    10a4:	ff 90       	pop	r15
    10a6:	ef 90       	pop	r14
    10a8:	08 95       	ret

000010aa <parcours>:
    10aa:	1f 93       	push	r17
    10ac:	cf 93       	push	r28
    10ae:	df 93       	push	r29
    10b0:	00 d0       	rcall	.+0      	; 0x10b2 <parcours+0x8>
    10b2:	cd b7       	in	r28, 0x3d	; 61
    10b4:	de b7       	in	r29, 0x3e	; 62
    10b6:	18 2f       	mov	r17, r24
    10b8:	7a 83       	std	Y+2, r23	; 0x02
    10ba:	69 83       	std	Y+1, r22	; 0x01
    10bc:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <batteryPercentage>
    10c0:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <__fixsfsi>
    10c4:	41 e0       	ldi	r20, 0x01	; 1
    10c6:	80 e0       	ldi	r24, 0x00	; 0
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	0e 94 0d 03 	call	0x61a	; 0x61a <updateDisplay>
    10ce:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <route>
    10d2:	8f 35       	cpi	r24, 0x5F	; 95
    10d4:	61 f4       	brne	.+24     	; 0x10ee <parcours+0x44>
    10d6:	84 e1       	ldi	r24, 0x14	; 20
    10d8:	e4 e1       	ldi	r30, 0x14	; 20
    10da:	f1 e0       	ldi	r31, 0x01	; 1
    10dc:	df 01       	movw	r26, r30
    10de:	1d 92       	st	X+, r1
    10e0:	8a 95       	dec	r24
    10e2:	e9 f7       	brne	.-6      	; 0x10de <parcours+0x34>
    10e4:	ce 01       	movw	r24, r28
    10e6:	01 96       	adiw	r24, 0x01	; 1
    10e8:	0e 94 54 07 	call	0xea8	; 0xea8 <parcoursSearch>
    10ec:	05 c0       	rjmp	.+10     	; 0x10f8 <parcours+0x4e>
    10ee:	69 81       	ldd	r22, Y+1	; 0x01
    10f0:	7a 81       	ldd	r23, Y+2	; 0x02
    10f2:	81 2f       	mov	r24, r17
    10f4:	0e 94 0e 08 	call	0x101c	; 0x101c <parcoursRun>
    10f8:	80 e0       	ldi	r24, 0x00	; 0
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	0f 90       	pop	r0
    10fe:	0f 90       	pop	r0
    1100:	df 91       	pop	r29
    1102:	cf 91       	pop	r28
    1104:	1f 91       	pop	r17
    1106:	08 95       	ret

00001108 <swap>:
    1108:	fc 01       	movw	r30, r24
    110a:	20 81       	ld	r18, Z
    110c:	fb 01       	movw	r30, r22
    110e:	30 81       	ld	r19, Z
    1110:	fc 01       	movw	r30, r24
    1112:	30 83       	st	Z, r19
    1114:	fb 01       	movw	r30, r22
    1116:	20 83       	st	Z, r18
    1118:	08 95       	ret

0000111a <bubbleSort>:
    111a:	8f 92       	push	r8
    111c:	9f 92       	push	r9
    111e:	af 92       	push	r10
    1120:	bf 92       	push	r11
    1122:	cf 92       	push	r12
    1124:	df 92       	push	r13
    1126:	ef 92       	push	r14
    1128:	ff 92       	push	r15
    112a:	0f 93       	push	r16
    112c:	1f 93       	push	r17
    112e:	cf 93       	push	r28
    1130:	df 93       	push	r29
    1132:	8c 01       	movw	r16, r24
    1134:	5b 01       	movw	r10, r22
    1136:	6a 01       	movw	r12, r20
    1138:	e1 2c       	mov	r14, r1
    113a:	f1 2c       	mov	r15, r1
    113c:	28 c0       	rjmp	.+80     	; 0x118e <bubbleSort+0x74>
    113e:	f8 01       	movw	r30, r16
    1140:	ec 0f       	add	r30, r28
    1142:	fd 1f       	adc	r31, r29
    1144:	90 81       	ld	r25, Z
    1146:	4e 01       	movw	r8, r28
    1148:	8f ef       	ldi	r24, 0xFF	; 255
    114a:	88 1a       	sub	r8, r24
    114c:	98 0a       	sbc	r9, r24
    114e:	d8 01       	movw	r26, r16
    1150:	a8 0d       	add	r26, r8
    1152:	b9 1d       	adc	r27, r9
    1154:	8c 91       	ld	r24, X
    1156:	89 17       	cp	r24, r25
    1158:	60 f4       	brcc	.+24     	; 0x1172 <bubbleSort+0x58>
    115a:	bd 01       	movw	r22, r26
    115c:	cf 01       	movw	r24, r30
    115e:	0e 94 84 08 	call	0x1108	; 0x1108 <swap>
    1162:	b5 01       	movw	r22, r10
    1164:	68 0d       	add	r22, r8
    1166:	79 1d       	adc	r23, r9
    1168:	c5 01       	movw	r24, r10
    116a:	8c 0f       	add	r24, r28
    116c:	9d 1f       	adc	r25, r29
    116e:	0e 94 84 08 	call	0x1108	; 0x1108 <swap>
    1172:	21 96       	adiw	r28, 0x01	; 1
    1174:	02 c0       	rjmp	.+4      	; 0x117a <bubbleSort+0x60>
    1176:	c0 e0       	ldi	r28, 0x00	; 0
    1178:	d0 e0       	ldi	r29, 0x00	; 0
    117a:	c6 01       	movw	r24, r12
    117c:	8e 19       	sub	r24, r14
    117e:	9f 09       	sbc	r25, r15
    1180:	01 97       	sbiw	r24, 0x01	; 1
    1182:	c8 17       	cp	r28, r24
    1184:	d9 07       	cpc	r29, r25
    1186:	dc f2       	brlt	.-74     	; 0x113e <bubbleSort+0x24>
    1188:	8f ef       	ldi	r24, 0xFF	; 255
    118a:	e8 1a       	sub	r14, r24
    118c:	f8 0a       	sbc	r15, r24
    118e:	c6 01       	movw	r24, r12
    1190:	01 97       	sbiw	r24, 0x01	; 1
    1192:	e8 16       	cp	r14, r24
    1194:	f9 06       	cpc	r15, r25
    1196:	7c f3       	brlt	.-34     	; 0x1176 <bubbleSort+0x5c>
    1198:	df 91       	pop	r29
    119a:	cf 91       	pop	r28
    119c:	1f 91       	pop	r17
    119e:	0f 91       	pop	r16
    11a0:	ff 90       	pop	r15
    11a2:	ef 90       	pop	r14
    11a4:	df 90       	pop	r13
    11a6:	cf 90       	pop	r12
    11a8:	bf 90       	pop	r11
    11aa:	af 90       	pop	r10
    11ac:	9f 90       	pop	r9
    11ae:	8f 90       	pop	r8
    11b0:	08 95       	ret

000011b2 <drive>:
    11b2:	cf 92       	push	r12
    11b4:	df 92       	push	r13
    11b6:	ef 92       	push	r14
    11b8:	ff 92       	push	r15
    11ba:	0f 93       	push	r16
    11bc:	1f 93       	push	r17
    11be:	cf 93       	push	r28
    11c0:	df 93       	push	r29
    11c2:	6c 01       	movw	r12, r24
    11c4:	7a 01       	movw	r14, r20
    11c6:	83 e5       	ldi	r24, 0x53	; 83
    11c8:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    11cc:	00 e0       	ldi	r16, 0x00	; 0
    11ce:	10 e0       	ldi	r17, 0x00	; 0
    11d0:	c1 e0       	ldi	r28, 0x01	; 1
    11d2:	d0 e0       	ldi	r29, 0x00	; 0
    11d4:	22 c0       	rjmp	.+68     	; 0x121a <drive+0x68>
    11d6:	0e 94 b6 05 	call	0xb6c	; 0xb6c <lineType>
    11da:	81 30       	cpi	r24, 0x01	; 1
    11dc:	49 f0       	breq	.+18     	; 0x11f0 <drive+0x3e>
    11de:	20 f0       	brcs	.+8      	; 0x11e8 <drive+0x36>
    11e0:	83 50       	subi	r24, 0x03	; 3
    11e2:	86 30       	cpi	r24, 0x06	; 6
    11e4:	d0 f4       	brcc	.+52     	; 0x121a <drive+0x68>
    11e6:	04 c0       	rjmp	.+8      	; 0x11f0 <drive+0x3e>
    11e8:	83 e5       	ldi	r24, 0x53	; 83
    11ea:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    11ee:	15 c0       	rjmp	.+42     	; 0x121a <drive+0x68>
    11f0:	0f 5f       	subi	r16, 0xFF	; 255
    11f2:	1f 4f       	sbci	r17, 0xFF	; 255
    11f4:	83 e5       	ldi	r24, 0x53	; 83
    11f6:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    11fa:	0c 15       	cp	r16, r12
    11fc:	1d 05       	cpc	r17, r13
    11fe:	29 f4       	brne	.+10     	; 0x120a <drive+0x58>
    1200:	80 e5       	ldi	r24, 0x50	; 80
    1202:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    1206:	c0 e0       	ldi	r28, 0x00	; 0
    1208:	d0 e0       	ldi	r29, 0x00	; 0
    120a:	f7 01       	movw	r30, r14
    120c:	ef 58       	subi	r30, 0x8F	; 143
    120e:	ff 4f       	sbci	r31, 0xFF	; 255
    1210:	01 90       	ld	r0, Z+
    1212:	f0 81       	ld	r31, Z
    1214:	e0 2d       	mov	r30, r0
    1216:	c7 01       	movw	r24, r14
    1218:	09 95       	icall
    121a:	20 97       	sbiw	r28, 0x00	; 0
    121c:	e1 f6       	brne	.-72     	; 0x11d6 <drive+0x24>
    121e:	df 91       	pop	r29
    1220:	cf 91       	pop	r28
    1222:	1f 91       	pop	r17
    1224:	0f 91       	pop	r16
    1226:	ff 90       	pop	r15
    1228:	ef 90       	pop	r14
    122a:	df 90       	pop	r13
    122c:	cf 90       	pop	r12
    122e:	08 95       	ret

00001230 <waitForTurn>:
    1230:	cf 93       	push	r28
    1232:	0e 94 b6 05 	call	0xb6c	; 0xb6c <lineType>
    1236:	c8 2f       	mov	r28, r24
    1238:	8f e0       	ldi	r24, 0x0F	; 15
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <delay_ms>
    1240:	03 c0       	rjmp	.+6      	; 0x1248 <waitForTurn+0x18>
    1242:	0e 94 b6 05 	call	0xb6c	; 0xb6c <lineType>
    1246:	c8 2f       	mov	r28, r24
    1248:	c1 11       	cpse	r28, r1
    124a:	fb cf       	rjmp	.-10     	; 0x1242 <waitForTurn+0x12>
    124c:	8e e4       	ldi	r24, 0x4E	; 78
    124e:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    1252:	cf 91       	pop	r28
    1254:	08 95       	ret

00001256 <turnRobot>:
    1256:	ef 92       	push	r14
    1258:	ff 92       	push	r15
    125a:	0f 93       	push	r16
    125c:	1f 93       	push	r17
    125e:	cf 93       	push	r28
    1260:	c8 2f       	mov	r28, r24
    1262:	8b 01       	movw	r16, r22
    1264:	ee 24       	eor	r14, r14
    1266:	e3 94       	inc	r14
    1268:	f1 2c       	mov	r15, r1
    126a:	a6 c0       	rjmp	.+332    	; 0x13b8 <turnRobot+0x162>
    126c:	f8 01       	movw	r30, r16
    126e:	84 81       	ldd	r24, Z+4	; 0x04
    1270:	8e 34       	cpi	r24, 0x4E	; 78
    1272:	59 f0       	breq	.+22     	; 0x128a <turnRobot+0x34>
    1274:	18 f4       	brcc	.+6      	; 0x127c <turnRobot+0x26>
    1276:	85 34       	cpi	r24, 0x45	; 69
    1278:	69 f1       	breq	.+90     	; 0x12d4 <turnRobot+0x7e>
    127a:	98 c0       	rjmp	.+304    	; 0x13ac <turnRobot+0x156>
    127c:	83 35       	cpi	r24, 0x53	; 83
    127e:	09 f4       	brne	.+2      	; 0x1282 <turnRobot+0x2c>
    1280:	4e c0       	rjmp	.+156    	; 0x131e <turnRobot+0xc8>
    1282:	87 35       	cpi	r24, 0x57	; 87
    1284:	09 f4       	brne	.+2      	; 0x1288 <turnRobot+0x32>
    1286:	6f c0       	rjmp	.+222    	; 0x1366 <turnRobot+0x110>
    1288:	91 c0       	rjmp	.+290    	; 0x13ac <turnRobot+0x156>
    128a:	c5 34       	cpi	r28, 0x45	; 69
    128c:	49 f4       	brne	.+18     	; 0x12a0 <turnRobot+0x4a>
    128e:	82 e5       	ldi	r24, 0x52	; 82
    1290:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    1294:	0e 94 18 09 	call	0x1230	; 0x1230 <waitForTurn>
    1298:	85 e4       	ldi	r24, 0x45	; 69
    129a:	f8 01       	movw	r30, r16
    129c:	84 83       	std	Z+4, r24	; 0x04
    129e:	86 c0       	rjmp	.+268    	; 0x13ac <turnRobot+0x156>
    12a0:	c7 35       	cpi	r28, 0x57	; 87
    12a2:	49 f4       	brne	.+18     	; 0x12b6 <turnRobot+0x60>
    12a4:	8c e4       	ldi	r24, 0x4C	; 76
    12a6:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    12aa:	0e 94 18 09 	call	0x1230	; 0x1230 <waitForTurn>
    12ae:	87 e5       	ldi	r24, 0x57	; 87
    12b0:	f8 01       	movw	r30, r16
    12b2:	84 83       	std	Z+4, r24	; 0x04
    12b4:	7b c0       	rjmp	.+246    	; 0x13ac <turnRobot+0x156>
    12b6:	c3 35       	cpi	r28, 0x53	; 83
    12b8:	09 f0       	breq	.+2      	; 0x12bc <turnRobot+0x66>
    12ba:	78 c0       	rjmp	.+240    	; 0x13ac <turnRobot+0x156>
    12bc:	8c e4       	ldi	r24, 0x4C	; 76
    12be:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    12c2:	8c e4       	ldi	r24, 0x4C	; 76
    12c4:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    12c8:	0e 94 18 09 	call	0x1230	; 0x1230 <waitForTurn>
    12cc:	83 e5       	ldi	r24, 0x53	; 83
    12ce:	f8 01       	movw	r30, r16
    12d0:	84 83       	std	Z+4, r24	; 0x04
    12d2:	6c c0       	rjmp	.+216    	; 0x13ac <turnRobot+0x156>
    12d4:	c3 35       	cpi	r28, 0x53	; 83
    12d6:	49 f4       	brne	.+18     	; 0x12ea <turnRobot+0x94>
    12d8:	82 e5       	ldi	r24, 0x52	; 82
    12da:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    12de:	0e 94 18 09 	call	0x1230	; 0x1230 <waitForTurn>
    12e2:	83 e5       	ldi	r24, 0x53	; 83
    12e4:	f8 01       	movw	r30, r16
    12e6:	84 83       	std	Z+4, r24	; 0x04
    12e8:	61 c0       	rjmp	.+194    	; 0x13ac <turnRobot+0x156>
    12ea:	c7 35       	cpi	r28, 0x57	; 87
    12ec:	49 f4       	brne	.+18     	; 0x1300 <turnRobot+0xaa>
    12ee:	8c e4       	ldi	r24, 0x4C	; 76
    12f0:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    12f4:	0e 94 18 09 	call	0x1230	; 0x1230 <waitForTurn>
    12f8:	87 e5       	ldi	r24, 0x57	; 87
    12fa:	f8 01       	movw	r30, r16
    12fc:	84 83       	std	Z+4, r24	; 0x04
    12fe:	56 c0       	rjmp	.+172    	; 0x13ac <turnRobot+0x156>
    1300:	c3 35       	cpi	r28, 0x53	; 83
    1302:	09 f0       	breq	.+2      	; 0x1306 <turnRobot+0xb0>
    1304:	53 c0       	rjmp	.+166    	; 0x13ac <turnRobot+0x156>
    1306:	8c e4       	ldi	r24, 0x4C	; 76
    1308:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    130c:	8c e4       	ldi	r24, 0x4C	; 76
    130e:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    1312:	0e 94 18 09 	call	0x1230	; 0x1230 <waitForTurn>
    1316:	83 e5       	ldi	r24, 0x53	; 83
    1318:	f8 01       	movw	r30, r16
    131a:	84 83       	std	Z+4, r24	; 0x04
    131c:	47 c0       	rjmp	.+142    	; 0x13ac <turnRobot+0x156>
    131e:	c7 35       	cpi	r28, 0x57	; 87
    1320:	49 f4       	brne	.+18     	; 0x1334 <turnRobot+0xde>
    1322:	82 e5       	ldi	r24, 0x52	; 82
    1324:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    1328:	0e 94 18 09 	call	0x1230	; 0x1230 <waitForTurn>
    132c:	87 e5       	ldi	r24, 0x57	; 87
    132e:	f8 01       	movw	r30, r16
    1330:	84 83       	std	Z+4, r24	; 0x04
    1332:	3c c0       	rjmp	.+120    	; 0x13ac <turnRobot+0x156>
    1334:	c5 34       	cpi	r28, 0x45	; 69
    1336:	49 f4       	brne	.+18     	; 0x134a <turnRobot+0xf4>
    1338:	8c e4       	ldi	r24, 0x4C	; 76
    133a:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    133e:	0e 94 18 09 	call	0x1230	; 0x1230 <waitForTurn>
    1342:	85 e4       	ldi	r24, 0x45	; 69
    1344:	f8 01       	movw	r30, r16
    1346:	84 83       	std	Z+4, r24	; 0x04
    1348:	31 c0       	rjmp	.+98     	; 0x13ac <turnRobot+0x156>
    134a:	ce 34       	cpi	r28, 0x4E	; 78
    134c:	79 f5       	brne	.+94     	; 0x13ac <turnRobot+0x156>
    134e:	8c e4       	ldi	r24, 0x4C	; 76
    1350:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    1354:	8c e4       	ldi	r24, 0x4C	; 76
    1356:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    135a:	0e 94 18 09 	call	0x1230	; 0x1230 <waitForTurn>
    135e:	8e e4       	ldi	r24, 0x4E	; 78
    1360:	f8 01       	movw	r30, r16
    1362:	84 83       	std	Z+4, r24	; 0x04
    1364:	23 c0       	rjmp	.+70     	; 0x13ac <turnRobot+0x156>
    1366:	ce 34       	cpi	r28, 0x4E	; 78
    1368:	49 f4       	brne	.+18     	; 0x137c <turnRobot+0x126>
    136a:	82 e5       	ldi	r24, 0x52	; 82
    136c:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    1370:	0e 94 18 09 	call	0x1230	; 0x1230 <waitForTurn>
    1374:	8e e4       	ldi	r24, 0x4E	; 78
    1376:	f8 01       	movw	r30, r16
    1378:	84 83       	std	Z+4, r24	; 0x04
    137a:	18 c0       	rjmp	.+48     	; 0x13ac <turnRobot+0x156>
    137c:	c3 35       	cpi	r28, 0x53	; 83
    137e:	49 f4       	brne	.+18     	; 0x1392 <turnRobot+0x13c>
    1380:	8c e4       	ldi	r24, 0x4C	; 76
    1382:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    1386:	0e 94 18 09 	call	0x1230	; 0x1230 <waitForTurn>
    138a:	83 e5       	ldi	r24, 0x53	; 83
    138c:	f8 01       	movw	r30, r16
    138e:	84 83       	std	Z+4, r24	; 0x04
    1390:	0d c0       	rjmp	.+26     	; 0x13ac <turnRobot+0x156>
    1392:	c5 34       	cpi	r28, 0x45	; 69
    1394:	59 f4       	brne	.+22     	; 0x13ac <turnRobot+0x156>
    1396:	8c e4       	ldi	r24, 0x4C	; 76
    1398:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    139c:	8c e4       	ldi	r24, 0x4C	; 76
    139e:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    13a2:	0e 94 18 09 	call	0x1230	; 0x1230 <waitForTurn>
    13a6:	85 e4       	ldi	r24, 0x45	; 69
    13a8:	f8 01       	movw	r30, r16
    13aa:	84 83       	std	Z+4, r24	; 0x04
    13ac:	f8 01       	movw	r30, r16
    13ae:	84 81       	ldd	r24, Z+4	; 0x04
    13b0:	c8 13       	cpse	r28, r24
    13b2:	02 c0       	rjmp	.+4      	; 0x13b8 <turnRobot+0x162>
    13b4:	e1 2c       	mov	r14, r1
    13b6:	f1 2c       	mov	r15, r1
    13b8:	f1 e0       	ldi	r31, 0x01	; 1
    13ba:	ef 16       	cp	r14, r31
    13bc:	f1 04       	cpc	r15, r1
    13be:	09 f4       	brne	.+2      	; 0x13c2 <turnRobot+0x16c>
    13c0:	55 cf       	rjmp	.-342    	; 0x126c <turnRobot+0x16>
    13c2:	cf 91       	pop	r28
    13c4:	1f 91       	pop	r17
    13c6:	0f 91       	pop	r16
    13c8:	ff 90       	pop	r15
    13ca:	ef 90       	pop	r14
    13cc:	08 95       	ret

000013ce <moveX>:
    13ce:	ef 92       	push	r14
    13d0:	ff 92       	push	r15
    13d2:	0f 93       	push	r16
    13d4:	1f 93       	push	r17
    13d6:	cf 93       	push	r28
    13d8:	df 93       	push	r29
    13da:	fb 01       	movw	r30, r22
    13dc:	20 81       	ld	r18, Z
    13de:	31 81       	ldd	r19, Z+1	; 0x01
    13e0:	28 17       	cp	r18, r24
    13e2:	39 07       	cpc	r19, r25
    13e4:	d9 f0       	breq	.+54     	; 0x141c <moveX+0x4e>
    13e6:	7a 01       	movw	r14, r20
    13e8:	eb 01       	movw	r28, r22
    13ea:	8c 01       	movw	r16, r24
    13ec:	28 17       	cp	r18, r24
    13ee:	39 07       	cpc	r19, r25
    13f0:	54 f4       	brge	.+20     	; 0x1406 <moveX+0x38>
    13f2:	87 e5       	ldi	r24, 0x57	; 87
    13f4:	0e 94 2b 09 	call	0x1256	; 0x1256 <turnRobot>
    13f8:	88 81       	ld	r24, Y
    13fa:	99 81       	ldd	r25, Y+1	; 0x01
    13fc:	98 01       	movw	r18, r16
    13fe:	28 1b       	sub	r18, r24
    1400:	39 0b       	sbc	r19, r25
    1402:	c9 01       	movw	r24, r18
    1404:	07 c0       	rjmp	.+14     	; 0x1414 <moveX+0x46>
    1406:	85 e4       	ldi	r24, 0x45	; 69
    1408:	0e 94 2b 09 	call	0x1256	; 0x1256 <turnRobot>
    140c:	88 81       	ld	r24, Y
    140e:	99 81       	ldd	r25, Y+1	; 0x01
    1410:	80 1b       	sub	r24, r16
    1412:	91 0b       	sbc	r25, r17
    1414:	a7 01       	movw	r20, r14
    1416:	be 01       	movw	r22, r28
    1418:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <drive>
    141c:	df 91       	pop	r29
    141e:	cf 91       	pop	r28
    1420:	1f 91       	pop	r17
    1422:	0f 91       	pop	r16
    1424:	ff 90       	pop	r15
    1426:	ef 90       	pop	r14
    1428:	08 95       	ret

0000142a <moveY>:
    142a:	ef 92       	push	r14
    142c:	ff 92       	push	r15
    142e:	0f 93       	push	r16
    1430:	1f 93       	push	r17
    1432:	cf 93       	push	r28
    1434:	df 93       	push	r29
    1436:	fb 01       	movw	r30, r22
    1438:	22 81       	ldd	r18, Z+2	; 0x02
    143a:	33 81       	ldd	r19, Z+3	; 0x03
    143c:	28 17       	cp	r18, r24
    143e:	39 07       	cpc	r19, r25
    1440:	d9 f0       	breq	.+54     	; 0x1478 <moveY+0x4e>
    1442:	7a 01       	movw	r14, r20
    1444:	eb 01       	movw	r28, r22
    1446:	8c 01       	movw	r16, r24
    1448:	28 17       	cp	r18, r24
    144a:	39 07       	cpc	r19, r25
    144c:	54 f4       	brge	.+20     	; 0x1462 <moveY+0x38>
    144e:	8e e4       	ldi	r24, 0x4E	; 78
    1450:	0e 94 2b 09 	call	0x1256	; 0x1256 <turnRobot>
    1454:	8a 81       	ldd	r24, Y+2	; 0x02
    1456:	9b 81       	ldd	r25, Y+3	; 0x03
    1458:	98 01       	movw	r18, r16
    145a:	28 1b       	sub	r18, r24
    145c:	39 0b       	sbc	r19, r25
    145e:	c9 01       	movw	r24, r18
    1460:	07 c0       	rjmp	.+14     	; 0x1470 <moveY+0x46>
    1462:	83 e5       	ldi	r24, 0x53	; 83
    1464:	0e 94 2b 09 	call	0x1256	; 0x1256 <turnRobot>
    1468:	8a 81       	ldd	r24, Y+2	; 0x02
    146a:	9b 81       	ldd	r25, Y+3	; 0x03
    146c:	80 1b       	sub	r24, r16
    146e:	91 0b       	sbc	r25, r17
    1470:	a7 01       	movw	r20, r14
    1472:	be 01       	movw	r22, r28
    1474:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <drive>
    1478:	df 91       	pop	r29
    147a:	cf 91       	pop	r28
    147c:	1f 91       	pop	r17
    147e:	0f 91       	pop	r16
    1480:	ff 90       	pop	r15
    1482:	ef 90       	pop	r14
    1484:	08 95       	ret

00001486 <warehouse>:
    1486:	2f 92       	push	r2
    1488:	3f 92       	push	r3
    148a:	4f 92       	push	r4
    148c:	5f 92       	push	r5
    148e:	6f 92       	push	r6
    1490:	7f 92       	push	r7
    1492:	8f 92       	push	r8
    1494:	9f 92       	push	r9
    1496:	af 92       	push	r10
    1498:	bf 92       	push	r11
    149a:	cf 92       	push	r12
    149c:	df 92       	push	r13
    149e:	ef 92       	push	r14
    14a0:	ff 92       	push	r15
    14a2:	0f 93       	push	r16
    14a4:	1f 93       	push	r17
    14a6:	cf 93       	push	r28
    14a8:	df 93       	push	r29
    14aa:	cd b7       	in	r28, 0x3d	; 61
    14ac:	de b7       	in	r29, 0x3e	; 62
    14ae:	e7 97       	sbiw	r28, 0x37	; 55
    14b0:	0f b6       	in	r0, 0x3f	; 63
    14b2:	f8 94       	cli
    14b4:	de bf       	out	0x3e, r29	; 62
    14b6:	0f be       	out	0x3f, r0	; 63
    14b8:	cd bf       	out	0x3d, r28	; 61
    14ba:	f8 2e       	mov	r15, r24
    14bc:	8b 01       	movw	r16, r22
    14be:	87 e5       	ldi	r24, 0x57	; 87
    14c0:	8d 83       	std	Y+5, r24	; 0x05
    14c2:	1a 82       	std	Y+2, r1	; 0x02
    14c4:	19 82       	std	Y+1, r1	; 0x01
    14c6:	81 e0       	ldi	r24, 0x01	; 1
    14c8:	90 e0       	ldi	r25, 0x00	; 0
    14ca:	9c 83       	std	Y+4, r25	; 0x04
    14cc:	8b 83       	std	Y+3, r24	; 0x03
    14ce:	80 e0       	ldi	r24, 0x00	; 0
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	c1 2c       	mov	r12, r1
    14d4:	d1 2c       	mov	r13, r1
    14d6:	0c c0       	rjmp	.+24     	; 0x14f0 <warehouse+0x6a>
    14d8:	f8 01       	movw	r30, r16
    14da:	e8 0f       	add	r30, r24
    14dc:	f9 1f       	adc	r31, r25
    14de:	ee 5a       	subi	r30, 0xAE	; 174
    14e0:	ff 4f       	sbci	r31, 0xFF	; 255
    14e2:	20 81       	ld	r18, Z
    14e4:	22 23       	and	r18, r18
    14e6:	19 f0       	breq	.+6      	; 0x14ee <warehouse+0x68>
    14e8:	2f ef       	ldi	r18, 0xFF	; 255
    14ea:	c2 1a       	sub	r12, r18
    14ec:	d2 0a       	sbc	r13, r18
    14ee:	01 96       	adiw	r24, 0x01	; 1
    14f0:	89 31       	cpi	r24, 0x19	; 25
    14f2:	91 05       	cpc	r25, r1
    14f4:	8c f3       	brlt	.-30     	; 0x14d8 <warehouse+0x52>
    14f6:	80 e0       	ldi	r24, 0x00	; 0
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	18 c0       	rjmp	.+48     	; 0x152c <warehouse+0xa6>
    14fc:	d8 01       	movw	r26, r16
    14fe:	a8 0f       	add	r26, r24
    1500:	b9 1f       	adc	r27, r25
    1502:	fd 01       	movw	r30, r26
    1504:	ee 5a       	subi	r30, 0xAE	; 174
    1506:	ff 4f       	sbci	r31, 0xFF	; 255
    1508:	20 81       	ld	r18, Z
    150a:	e6 e0       	ldi	r30, 0x06	; 6
    150c:	f0 e0       	ldi	r31, 0x00	; 0
    150e:	ec 0f       	add	r30, r28
    1510:	fd 1f       	adc	r31, r29
    1512:	e8 0f       	add	r30, r24
    1514:	f9 1f       	adc	r31, r25
    1516:	20 83       	st	Z, r18
    1518:	d9 96       	adiw	r26, 0x39	; 57
    151a:	2c 91       	ld	r18, X
    151c:	ef e1       	ldi	r30, 0x1F	; 31
    151e:	f0 e0       	ldi	r31, 0x00	; 0
    1520:	ec 0f       	add	r30, r28
    1522:	fd 1f       	adc	r31, r29
    1524:	e8 0f       	add	r30, r24
    1526:	f9 1f       	adc	r31, r25
    1528:	20 83       	st	Z, r18
    152a:	01 96       	adiw	r24, 0x01	; 1
    152c:	8c 15       	cp	r24, r12
    152e:	9d 05       	cpc	r25, r13
    1530:	2c f3       	brlt	.-54     	; 0x14fc <warehouse+0x76>
    1532:	0e 94 a5 12 	call	0x254a	; 0x254a <clear>
    1536:	a6 01       	movw	r20, r12
    1538:	be 01       	movw	r22, r28
    153a:	61 5e       	subi	r22, 0xE1	; 225
    153c:	7f 4f       	sbci	r23, 0xFF	; 255
    153e:	ce 01       	movw	r24, r28
    1540:	06 96       	adiw	r24, 0x06	; 6
    1542:	0e 94 8d 08 	call	0x111a	; 0x111a <bubbleSort>
    1546:	ff 20       	and	r15, r15
    1548:	09 f4       	brne	.+2      	; 0x154c <warehouse+0xc6>
    154a:	85 c0       	rjmp	.+266    	; 0x1656 <warehouse+0x1d0>
    154c:	9b c0       	rjmp	.+310    	; 0x1684 <warehouse+0x1fe>
    154e:	b1 01       	movw	r22, r2
    1550:	03 2c       	mov	r0, r3
    1552:	00 0c       	add	r0, r0
    1554:	88 0b       	sbc	r24, r24
    1556:	99 0b       	sbc	r25, r25
    1558:	0e 94 b6 0c 	call	0x196c	; 0x196c <__floatsisf>
    155c:	2b 01       	movw	r4, r22
    155e:	3c 01       	movw	r6, r24
    1560:	b6 01       	movw	r22, r12
    1562:	0d 2c       	mov	r0, r13
    1564:	00 0c       	add	r0, r0
    1566:	88 0b       	sbc	r24, r24
    1568:	99 0b       	sbc	r25, r25
    156a:	0e 94 b6 0c 	call	0x196c	; 0x196c <__floatsisf>
    156e:	4b 01       	movw	r8, r22
    1570:	5c 01       	movw	r10, r24
    1572:	0f 2e       	mov	r0, r31
    1574:	f6 e0       	ldi	r31, 0x06	; 6
    1576:	ef 2e       	mov	r14, r31
    1578:	f1 2c       	mov	r15, r1
    157a:	f0 2d       	mov	r31, r0
    157c:	ec 0e       	add	r14, r28
    157e:	fd 1e       	adc	r15, r29
    1580:	e2 0c       	add	r14, r2
    1582:	f3 1c       	adc	r15, r3
    1584:	f7 01       	movw	r30, r14
    1586:	80 81       	ld	r24, Z
    1588:	a8 01       	movw	r20, r16
    158a:	be 01       	movw	r22, r28
    158c:	6f 5f       	subi	r22, 0xFF	; 255
    158e:	7f 4f       	sbci	r23, 0xFF	; 255
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	0e 94 e7 09 	call	0x13ce	; 0x13ce <moveX>
    1596:	f7 01       	movw	r30, r14
    1598:	80 81       	ld	r24, Z
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	9a 83       	std	Y+2, r25	; 0x02
    159e:	89 83       	std	Y+1, r24	; 0x01
    15a0:	0f 2e       	mov	r0, r31
    15a2:	ff e1       	ldi	r31, 0x1F	; 31
    15a4:	ef 2e       	mov	r14, r31
    15a6:	f1 2c       	mov	r15, r1
    15a8:	f0 2d       	mov	r31, r0
    15aa:	ec 0e       	add	r14, r28
    15ac:	fd 1e       	adc	r15, r29
    15ae:	e2 0c       	add	r14, r2
    15b0:	f3 1c       	adc	r15, r3
    15b2:	f7 01       	movw	r30, r14
    15b4:	80 81       	ld	r24, Z
    15b6:	a8 01       	movw	r20, r16
    15b8:	be 01       	movw	r22, r28
    15ba:	6f 5f       	subi	r22, 0xFF	; 255
    15bc:	7f 4f       	sbci	r23, 0xFF	; 255
    15be:	90 e0       	ldi	r25, 0x00	; 0
    15c0:	0e 94 15 0a 	call	0x142a	; 0x142a <moveY>
    15c4:	f7 01       	movw	r30, r14
    15c6:	80 81       	ld	r24, Z
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	9c 83       	std	Y+4, r25	; 0x04
    15cc:	8b 83       	std	Y+3, r24	; 0x03
    15ce:	88 ee       	ldi	r24, 0xE8	; 232
    15d0:	93 e0       	ldi	r25, 0x03	; 3
    15d2:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <delay_ms>
    15d6:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <batteryPercentage>
    15da:	78 01       	movw	r14, r16
    15dc:	fc e6       	ldi	r31, 0x6C	; 108
    15de:	ef 0e       	add	r14, r31
    15e0:	f1 1c       	adc	r15, r1
    15e2:	0e 94 85 0c 	call	0x190a	; 0x190a <__fixunssfsi>
    15e6:	f7 01       	movw	r30, r14
    15e8:	60 83       	st	Z, r22
    15ea:	20 e0       	ldi	r18, 0x00	; 0
    15ec:	30 e0       	ldi	r19, 0x00	; 0
    15ee:	40 e8       	ldi	r20, 0x80	; 128
    15f0:	5f e3       	ldi	r21, 0x3F	; 63
    15f2:	c3 01       	movw	r24, r6
    15f4:	b2 01       	movw	r22, r4
    15f6:	0e 94 a0 0b 	call	0x1740	; 0x1740 <__addsf3>
    15fa:	a5 01       	movw	r20, r10
    15fc:	94 01       	movw	r18, r8
    15fe:	0e 94 0c 0c 	call	0x1818	; 0x1818 <__divsf3>
    1602:	20 e0       	ldi	r18, 0x00	; 0
    1604:	30 e0       	ldi	r19, 0x00	; 0
    1606:	48 ec       	ldi	r20, 0xC8	; 200
    1608:	52 e4       	ldi	r21, 0x42	; 66
    160a:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <__mulsf3>
    160e:	4b 01       	movw	r8, r22
    1610:	5c 01       	movw	r10, r24
    1612:	78 01       	movw	r14, r16
    1614:	fd e6       	ldi	r31, 0x6D	; 109
    1616:	ef 0e       	add	r14, r31
    1618:	f1 1c       	adc	r15, r1
    161a:	0e 94 85 0c 	call	0x190a	; 0x190a <__fixunssfsi>
    161e:	f7 01       	movw	r30, r14
    1620:	60 83       	st	Z, r22
    1622:	34 96       	adiw	r30, 0x04	; 4
    1624:	01 90       	ld	r0, Z+
    1626:	f0 81       	ld	r31, Z
    1628:	e0 2d       	mov	r30, r0
    162a:	c8 01       	movw	r24, r16
    162c:	09 95       	icall
    162e:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <batteryPercentage>
    1632:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <__fixsfsi>
    1636:	2b 01       	movw	r4, r22
    1638:	3c 01       	movw	r6, r24
    163a:	c5 01       	movw	r24, r10
    163c:	b4 01       	movw	r22, r8
    163e:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <__fixsfsi>
    1642:	dc 01       	movw	r26, r24
    1644:	cb 01       	movw	r24, r22
    1646:	42 e0       	ldi	r20, 0x02	; 2
    1648:	b2 01       	movw	r22, r4
    164a:	0e 94 0d 03 	call	0x61a	; 0x61a <updateDisplay>
    164e:	ff ef       	ldi	r31, 0xFF	; 255
    1650:	2f 1a       	sub	r2, r31
    1652:	3f 0a       	sbc	r3, r31
    1654:	02 c0       	rjmp	.+4      	; 0x165a <warehouse+0x1d4>
    1656:	21 2c       	mov	r2, r1
    1658:	31 2c       	mov	r3, r1
    165a:	2c 14       	cp	r2, r12
    165c:	3d 04       	cpc	r3, r13
    165e:	0c f4       	brge	.+2      	; 0x1662 <warehouse+0x1dc>
    1660:	76 cf       	rjmp	.-276    	; 0x154e <warehouse+0xc8>
    1662:	a8 01       	movw	r20, r16
    1664:	be 01       	movw	r22, r28
    1666:	6f 5f       	subi	r22, 0xFF	; 255
    1668:	7f 4f       	sbci	r23, 0xFF	; 255
    166a:	81 e0       	ldi	r24, 0x01	; 1
    166c:	90 e0       	ldi	r25, 0x00	; 0
    166e:	0e 94 15 0a 	call	0x142a	; 0x142a <moveY>
    1672:	a8 01       	movw	r20, r16
    1674:	be 01       	movw	r22, r28
    1676:	6f 5f       	subi	r22, 0xFF	; 255
    1678:	7f 4f       	sbci	r23, 0xFF	; 255
    167a:	81 e0       	ldi	r24, 0x01	; 1
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	0e 94 e7 09 	call	0x13ce	; 0x13ce <moveX>
    1682:	44 c0       	rjmp	.+136    	; 0x170c <warehouse+0x286>
    1684:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <charged.2339>
    1688:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <charged.2339+0x1>
    168c:	89 2b       	or	r24, r25
    168e:	29 f5       	brne	.+74     	; 0x16da <warehouse+0x254>
    1690:	a8 01       	movw	r20, r16
    1692:	be 01       	movw	r22, r28
    1694:	6f 5f       	subi	r22, 0xFF	; 255
    1696:	7f 4f       	sbci	r23, 0xFF	; 255
    1698:	81 e0       	ldi	r24, 0x01	; 1
    169a:	90 e0       	ldi	r25, 0x00	; 0
    169c:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <drive>
    16a0:	82 e5       	ldi	r24, 0x52	; 82
    16a2:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    16a6:	a8 01       	movw	r20, r16
    16a8:	be 01       	movw	r22, r28
    16aa:	6f 5f       	subi	r22, 0xFF	; 255
    16ac:	7f 4f       	sbci	r23, 0xFF	; 255
    16ae:	83 e0       	ldi	r24, 0x03	; 3
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <drive>
    16b6:	82 e5       	ldi	r24, 0x52	; 82
    16b8:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    16bc:	a8 01       	movw	r20, r16
    16be:	be 01       	movw	r22, r28
    16c0:	6f 5f       	subi	r22, 0xFF	; 255
    16c2:	7f 4f       	sbci	r23, 0xFF	; 255
    16c4:	81 e0       	ldi	r24, 0x01	; 1
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <drive>
    16cc:	81 e0       	ldi	r24, 0x01	; 1
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <charged.2339+0x1>
    16d4:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <charged.2339>
    16d8:	19 c0       	rjmp	.+50     	; 0x170c <warehouse+0x286>
    16da:	84 e5       	ldi	r24, 0x54	; 84
    16dc:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    16e0:	a8 01       	movw	r20, r16
    16e2:	be 01       	movw	r22, r28
    16e4:	6f 5f       	subi	r22, 0xFF	; 255
    16e6:	7f 4f       	sbci	r23, 0xFF	; 255
    16e8:	81 e0       	ldi	r24, 0x01	; 1
    16ea:	90 e0       	ldi	r25, 0x00	; 0
    16ec:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <drive>
    16f0:	8c e4       	ldi	r24, 0x4C	; 76
    16f2:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    16f6:	a8 01       	movw	r20, r16
    16f8:	be 01       	movw	r22, r28
    16fa:	6f 5f       	subi	r22, 0xFF	; 255
    16fc:	7f 4f       	sbci	r23, 0xFF	; 255
    16fe:	83 e0       	ldi	r24, 0x03	; 3
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <drive>
    1706:	8c e4       	ldi	r24, 0x4C	; 76
    1708:	0e 94 71 04 	call	0x8e2	; 0x8e2 <motorControl>
    170c:	e7 96       	adiw	r28, 0x37	; 55
    170e:	0f b6       	in	r0, 0x3f	; 63
    1710:	f8 94       	cli
    1712:	de bf       	out	0x3e, r29	; 62
    1714:	0f be       	out	0x3f, r0	; 63
    1716:	cd bf       	out	0x3d, r28	; 61
    1718:	df 91       	pop	r29
    171a:	cf 91       	pop	r28
    171c:	1f 91       	pop	r17
    171e:	0f 91       	pop	r16
    1720:	ff 90       	pop	r15
    1722:	ef 90       	pop	r14
    1724:	df 90       	pop	r13
    1726:	cf 90       	pop	r12
    1728:	bf 90       	pop	r11
    172a:	af 90       	pop	r10
    172c:	9f 90       	pop	r9
    172e:	8f 90       	pop	r8
    1730:	7f 90       	pop	r7
    1732:	6f 90       	pop	r6
    1734:	5f 90       	pop	r5
    1736:	4f 90       	pop	r4
    1738:	3f 90       	pop	r3
    173a:	2f 90       	pop	r2
    173c:	08 95       	ret

0000173e <__subsf3>:
    173e:	50 58       	subi	r21, 0x80	; 128

00001740 <__addsf3>:
    1740:	bb 27       	eor	r27, r27
    1742:	aa 27       	eor	r26, r26
    1744:	0e 94 b7 0b 	call	0x176e	; 0x176e <__addsf3x>
    1748:	0c 94 08 0d 	jmp	0x1a10	; 0x1a10 <__fp_round>
    174c:	0e 94 fa 0c 	call	0x19f4	; 0x19f4 <__fp_pscA>
    1750:	38 f0       	brcs	.+14     	; 0x1760 <__addsf3+0x20>
    1752:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <__fp_pscB>
    1756:	20 f0       	brcs	.+8      	; 0x1760 <__addsf3+0x20>
    1758:	39 f4       	brne	.+14     	; 0x1768 <__addsf3+0x28>
    175a:	9f 3f       	cpi	r25, 0xFF	; 255
    175c:	19 f4       	brne	.+6      	; 0x1764 <__addsf3+0x24>
    175e:	26 f4       	brtc	.+8      	; 0x1768 <__addsf3+0x28>
    1760:	0c 94 f7 0c 	jmp	0x19ee	; 0x19ee <__fp_nan>
    1764:	0e f4       	brtc	.+2      	; 0x1768 <__addsf3+0x28>
    1766:	e0 95       	com	r30
    1768:	e7 fb       	bst	r30, 7
    176a:	0c 94 f1 0c 	jmp	0x19e2	; 0x19e2 <__fp_inf>

0000176e <__addsf3x>:
    176e:	e9 2f       	mov	r30, r25
    1770:	0e 94 19 0d 	call	0x1a32	; 0x1a32 <__fp_split3>
    1774:	58 f3       	brcs	.-42     	; 0x174c <__addsf3+0xc>
    1776:	ba 17       	cp	r27, r26
    1778:	62 07       	cpc	r22, r18
    177a:	73 07       	cpc	r23, r19
    177c:	84 07       	cpc	r24, r20
    177e:	95 07       	cpc	r25, r21
    1780:	20 f0       	brcs	.+8      	; 0x178a <__addsf3x+0x1c>
    1782:	79 f4       	brne	.+30     	; 0x17a2 <__addsf3x+0x34>
    1784:	a6 f5       	brtc	.+104    	; 0x17ee <__addsf3x+0x80>
    1786:	0c 94 3b 0d 	jmp	0x1a76	; 0x1a76 <__fp_zero>
    178a:	0e f4       	brtc	.+2      	; 0x178e <__addsf3x+0x20>
    178c:	e0 95       	com	r30
    178e:	0b 2e       	mov	r0, r27
    1790:	ba 2f       	mov	r27, r26
    1792:	a0 2d       	mov	r26, r0
    1794:	0b 01       	movw	r0, r22
    1796:	b9 01       	movw	r22, r18
    1798:	90 01       	movw	r18, r0
    179a:	0c 01       	movw	r0, r24
    179c:	ca 01       	movw	r24, r20
    179e:	a0 01       	movw	r20, r0
    17a0:	11 24       	eor	r1, r1
    17a2:	ff 27       	eor	r31, r31
    17a4:	59 1b       	sub	r21, r25
    17a6:	99 f0       	breq	.+38     	; 0x17ce <__addsf3x+0x60>
    17a8:	59 3f       	cpi	r21, 0xF9	; 249
    17aa:	50 f4       	brcc	.+20     	; 0x17c0 <__addsf3x+0x52>
    17ac:	50 3e       	cpi	r21, 0xE0	; 224
    17ae:	68 f1       	brcs	.+90     	; 0x180a <__addsf3x+0x9c>
    17b0:	1a 16       	cp	r1, r26
    17b2:	f0 40       	sbci	r31, 0x00	; 0
    17b4:	a2 2f       	mov	r26, r18
    17b6:	23 2f       	mov	r18, r19
    17b8:	34 2f       	mov	r19, r20
    17ba:	44 27       	eor	r20, r20
    17bc:	58 5f       	subi	r21, 0xF8	; 248
    17be:	f3 cf       	rjmp	.-26     	; 0x17a6 <__addsf3x+0x38>
    17c0:	46 95       	lsr	r20
    17c2:	37 95       	ror	r19
    17c4:	27 95       	ror	r18
    17c6:	a7 95       	ror	r26
    17c8:	f0 40       	sbci	r31, 0x00	; 0
    17ca:	53 95       	inc	r21
    17cc:	c9 f7       	brne	.-14     	; 0x17c0 <__addsf3x+0x52>
    17ce:	7e f4       	brtc	.+30     	; 0x17ee <__addsf3x+0x80>
    17d0:	1f 16       	cp	r1, r31
    17d2:	ba 0b       	sbc	r27, r26
    17d4:	62 0b       	sbc	r22, r18
    17d6:	73 0b       	sbc	r23, r19
    17d8:	84 0b       	sbc	r24, r20
    17da:	ba f0       	brmi	.+46     	; 0x180a <__addsf3x+0x9c>
    17dc:	91 50       	subi	r25, 0x01	; 1
    17de:	a1 f0       	breq	.+40     	; 0x1808 <__addsf3x+0x9a>
    17e0:	ff 0f       	add	r31, r31
    17e2:	bb 1f       	adc	r27, r27
    17e4:	66 1f       	adc	r22, r22
    17e6:	77 1f       	adc	r23, r23
    17e8:	88 1f       	adc	r24, r24
    17ea:	c2 f7       	brpl	.-16     	; 0x17dc <__addsf3x+0x6e>
    17ec:	0e c0       	rjmp	.+28     	; 0x180a <__addsf3x+0x9c>
    17ee:	ba 0f       	add	r27, r26
    17f0:	62 1f       	adc	r22, r18
    17f2:	73 1f       	adc	r23, r19
    17f4:	84 1f       	adc	r24, r20
    17f6:	48 f4       	brcc	.+18     	; 0x180a <__addsf3x+0x9c>
    17f8:	87 95       	ror	r24
    17fa:	77 95       	ror	r23
    17fc:	67 95       	ror	r22
    17fe:	b7 95       	ror	r27
    1800:	f7 95       	ror	r31
    1802:	9e 3f       	cpi	r25, 0xFE	; 254
    1804:	08 f0       	brcs	.+2      	; 0x1808 <__addsf3x+0x9a>
    1806:	b0 cf       	rjmp	.-160    	; 0x1768 <__addsf3+0x28>
    1808:	93 95       	inc	r25
    180a:	88 0f       	add	r24, r24
    180c:	08 f0       	brcs	.+2      	; 0x1810 <__addsf3x+0xa2>
    180e:	99 27       	eor	r25, r25
    1810:	ee 0f       	add	r30, r30
    1812:	97 95       	ror	r25
    1814:	87 95       	ror	r24
    1816:	08 95       	ret

00001818 <__divsf3>:
    1818:	0e 94 20 0c 	call	0x1840	; 0x1840 <__divsf3x>
    181c:	0c 94 08 0d 	jmp	0x1a10	; 0x1a10 <__fp_round>
    1820:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <__fp_pscB>
    1824:	58 f0       	brcs	.+22     	; 0x183c <__divsf3+0x24>
    1826:	0e 94 fa 0c 	call	0x19f4	; 0x19f4 <__fp_pscA>
    182a:	40 f0       	brcs	.+16     	; 0x183c <__divsf3+0x24>
    182c:	29 f4       	brne	.+10     	; 0x1838 <__divsf3+0x20>
    182e:	5f 3f       	cpi	r21, 0xFF	; 255
    1830:	29 f0       	breq	.+10     	; 0x183c <__divsf3+0x24>
    1832:	0c 94 f1 0c 	jmp	0x19e2	; 0x19e2 <__fp_inf>
    1836:	51 11       	cpse	r21, r1
    1838:	0c 94 3c 0d 	jmp	0x1a78	; 0x1a78 <__fp_szero>
    183c:	0c 94 f7 0c 	jmp	0x19ee	; 0x19ee <__fp_nan>

00001840 <__divsf3x>:
    1840:	0e 94 19 0d 	call	0x1a32	; 0x1a32 <__fp_split3>
    1844:	68 f3       	brcs	.-38     	; 0x1820 <__divsf3+0x8>

00001846 <__divsf3_pse>:
    1846:	99 23       	and	r25, r25
    1848:	b1 f3       	breq	.-20     	; 0x1836 <__divsf3+0x1e>
    184a:	55 23       	and	r21, r21
    184c:	91 f3       	breq	.-28     	; 0x1832 <__divsf3+0x1a>
    184e:	95 1b       	sub	r25, r21
    1850:	55 0b       	sbc	r21, r21
    1852:	bb 27       	eor	r27, r27
    1854:	aa 27       	eor	r26, r26
    1856:	62 17       	cp	r22, r18
    1858:	73 07       	cpc	r23, r19
    185a:	84 07       	cpc	r24, r20
    185c:	38 f0       	brcs	.+14     	; 0x186c <__divsf3_pse+0x26>
    185e:	9f 5f       	subi	r25, 0xFF	; 255
    1860:	5f 4f       	sbci	r21, 0xFF	; 255
    1862:	22 0f       	add	r18, r18
    1864:	33 1f       	adc	r19, r19
    1866:	44 1f       	adc	r20, r20
    1868:	aa 1f       	adc	r26, r26
    186a:	a9 f3       	breq	.-22     	; 0x1856 <__divsf3_pse+0x10>
    186c:	35 d0       	rcall	.+106    	; 0x18d8 <__divsf3_pse+0x92>
    186e:	0e 2e       	mov	r0, r30
    1870:	3a f0       	brmi	.+14     	; 0x1880 <__divsf3_pse+0x3a>
    1872:	e0 e8       	ldi	r30, 0x80	; 128
    1874:	32 d0       	rcall	.+100    	; 0x18da <__divsf3_pse+0x94>
    1876:	91 50       	subi	r25, 0x01	; 1
    1878:	50 40       	sbci	r21, 0x00	; 0
    187a:	e6 95       	lsr	r30
    187c:	00 1c       	adc	r0, r0
    187e:	ca f7       	brpl	.-14     	; 0x1872 <__divsf3_pse+0x2c>
    1880:	2b d0       	rcall	.+86     	; 0x18d8 <__divsf3_pse+0x92>
    1882:	fe 2f       	mov	r31, r30
    1884:	29 d0       	rcall	.+82     	; 0x18d8 <__divsf3_pse+0x92>
    1886:	66 0f       	add	r22, r22
    1888:	77 1f       	adc	r23, r23
    188a:	88 1f       	adc	r24, r24
    188c:	bb 1f       	adc	r27, r27
    188e:	26 17       	cp	r18, r22
    1890:	37 07       	cpc	r19, r23
    1892:	48 07       	cpc	r20, r24
    1894:	ab 07       	cpc	r26, r27
    1896:	b0 e8       	ldi	r27, 0x80	; 128
    1898:	09 f0       	breq	.+2      	; 0x189c <__divsf3_pse+0x56>
    189a:	bb 0b       	sbc	r27, r27
    189c:	80 2d       	mov	r24, r0
    189e:	bf 01       	movw	r22, r30
    18a0:	ff 27       	eor	r31, r31
    18a2:	93 58       	subi	r25, 0x83	; 131
    18a4:	5f 4f       	sbci	r21, 0xFF	; 255
    18a6:	3a f0       	brmi	.+14     	; 0x18b6 <__divsf3_pse+0x70>
    18a8:	9e 3f       	cpi	r25, 0xFE	; 254
    18aa:	51 05       	cpc	r21, r1
    18ac:	78 f0       	brcs	.+30     	; 0x18cc <__divsf3_pse+0x86>
    18ae:	0c 94 f1 0c 	jmp	0x19e2	; 0x19e2 <__fp_inf>
    18b2:	0c 94 3c 0d 	jmp	0x1a78	; 0x1a78 <__fp_szero>
    18b6:	5f 3f       	cpi	r21, 0xFF	; 255
    18b8:	e4 f3       	brlt	.-8      	; 0x18b2 <__divsf3_pse+0x6c>
    18ba:	98 3e       	cpi	r25, 0xE8	; 232
    18bc:	d4 f3       	brlt	.-12     	; 0x18b2 <__divsf3_pse+0x6c>
    18be:	86 95       	lsr	r24
    18c0:	77 95       	ror	r23
    18c2:	67 95       	ror	r22
    18c4:	b7 95       	ror	r27
    18c6:	f7 95       	ror	r31
    18c8:	9f 5f       	subi	r25, 0xFF	; 255
    18ca:	c9 f7       	brne	.-14     	; 0x18be <__divsf3_pse+0x78>
    18cc:	88 0f       	add	r24, r24
    18ce:	91 1d       	adc	r25, r1
    18d0:	96 95       	lsr	r25
    18d2:	87 95       	ror	r24
    18d4:	97 f9       	bld	r25, 7
    18d6:	08 95       	ret
    18d8:	e1 e0       	ldi	r30, 0x01	; 1
    18da:	66 0f       	add	r22, r22
    18dc:	77 1f       	adc	r23, r23
    18de:	88 1f       	adc	r24, r24
    18e0:	bb 1f       	adc	r27, r27
    18e2:	62 17       	cp	r22, r18
    18e4:	73 07       	cpc	r23, r19
    18e6:	84 07       	cpc	r24, r20
    18e8:	ba 07       	cpc	r27, r26
    18ea:	20 f0       	brcs	.+8      	; 0x18f4 <__divsf3_pse+0xae>
    18ec:	62 1b       	sub	r22, r18
    18ee:	73 0b       	sbc	r23, r19
    18f0:	84 0b       	sbc	r24, r20
    18f2:	ba 0b       	sbc	r27, r26
    18f4:	ee 1f       	adc	r30, r30
    18f6:	88 f7       	brcc	.-30     	; 0x18da <__divsf3_pse+0x94>
    18f8:	e0 95       	com	r30
    18fa:	08 95       	ret

000018fc <__fixsfsi>:
    18fc:	0e 94 85 0c 	call	0x190a	; 0x190a <__fixunssfsi>
    1900:	68 94       	set
    1902:	b1 11       	cpse	r27, r1
    1904:	0c 94 3c 0d 	jmp	0x1a78	; 0x1a78 <__fp_szero>
    1908:	08 95       	ret

0000190a <__fixunssfsi>:
    190a:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <__fp_splitA>
    190e:	88 f0       	brcs	.+34     	; 0x1932 <__fixunssfsi+0x28>
    1910:	9f 57       	subi	r25, 0x7F	; 127
    1912:	98 f0       	brcs	.+38     	; 0x193a <__fixunssfsi+0x30>
    1914:	b9 2f       	mov	r27, r25
    1916:	99 27       	eor	r25, r25
    1918:	b7 51       	subi	r27, 0x17	; 23
    191a:	b0 f0       	brcs	.+44     	; 0x1948 <__fixunssfsi+0x3e>
    191c:	e1 f0       	breq	.+56     	; 0x1956 <__fixunssfsi+0x4c>
    191e:	66 0f       	add	r22, r22
    1920:	77 1f       	adc	r23, r23
    1922:	88 1f       	adc	r24, r24
    1924:	99 1f       	adc	r25, r25
    1926:	1a f0       	brmi	.+6      	; 0x192e <__fixunssfsi+0x24>
    1928:	ba 95       	dec	r27
    192a:	c9 f7       	brne	.-14     	; 0x191e <__fixunssfsi+0x14>
    192c:	14 c0       	rjmp	.+40     	; 0x1956 <__fixunssfsi+0x4c>
    192e:	b1 30       	cpi	r27, 0x01	; 1
    1930:	91 f0       	breq	.+36     	; 0x1956 <__fixunssfsi+0x4c>
    1932:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <__fp_zero>
    1936:	b1 e0       	ldi	r27, 0x01	; 1
    1938:	08 95       	ret
    193a:	0c 94 3b 0d 	jmp	0x1a76	; 0x1a76 <__fp_zero>
    193e:	67 2f       	mov	r22, r23
    1940:	78 2f       	mov	r23, r24
    1942:	88 27       	eor	r24, r24
    1944:	b8 5f       	subi	r27, 0xF8	; 248
    1946:	39 f0       	breq	.+14     	; 0x1956 <__fixunssfsi+0x4c>
    1948:	b9 3f       	cpi	r27, 0xF9	; 249
    194a:	cc f3       	brlt	.-14     	; 0x193e <__fixunssfsi+0x34>
    194c:	86 95       	lsr	r24
    194e:	77 95       	ror	r23
    1950:	67 95       	ror	r22
    1952:	b3 95       	inc	r27
    1954:	d9 f7       	brne	.-10     	; 0x194c <__fixunssfsi+0x42>
    1956:	3e f4       	brtc	.+14     	; 0x1966 <__fixunssfsi+0x5c>
    1958:	90 95       	com	r25
    195a:	80 95       	com	r24
    195c:	70 95       	com	r23
    195e:	61 95       	neg	r22
    1960:	7f 4f       	sbci	r23, 0xFF	; 255
    1962:	8f 4f       	sbci	r24, 0xFF	; 255
    1964:	9f 4f       	sbci	r25, 0xFF	; 255
    1966:	08 95       	ret

00001968 <__floatunsisf>:
    1968:	e8 94       	clt
    196a:	09 c0       	rjmp	.+18     	; 0x197e <__floatsisf+0x12>

0000196c <__floatsisf>:
    196c:	97 fb       	bst	r25, 7
    196e:	3e f4       	brtc	.+14     	; 0x197e <__floatsisf+0x12>
    1970:	90 95       	com	r25
    1972:	80 95       	com	r24
    1974:	70 95       	com	r23
    1976:	61 95       	neg	r22
    1978:	7f 4f       	sbci	r23, 0xFF	; 255
    197a:	8f 4f       	sbci	r24, 0xFF	; 255
    197c:	9f 4f       	sbci	r25, 0xFF	; 255
    197e:	99 23       	and	r25, r25
    1980:	a9 f0       	breq	.+42     	; 0x19ac <__floatsisf+0x40>
    1982:	f9 2f       	mov	r31, r25
    1984:	96 e9       	ldi	r25, 0x96	; 150
    1986:	bb 27       	eor	r27, r27
    1988:	93 95       	inc	r25
    198a:	f6 95       	lsr	r31
    198c:	87 95       	ror	r24
    198e:	77 95       	ror	r23
    1990:	67 95       	ror	r22
    1992:	b7 95       	ror	r27
    1994:	f1 11       	cpse	r31, r1
    1996:	f8 cf       	rjmp	.-16     	; 0x1988 <__floatsisf+0x1c>
    1998:	fa f4       	brpl	.+62     	; 0x19d8 <__floatsisf+0x6c>
    199a:	bb 0f       	add	r27, r27
    199c:	11 f4       	brne	.+4      	; 0x19a2 <__floatsisf+0x36>
    199e:	60 ff       	sbrs	r22, 0
    19a0:	1b c0       	rjmp	.+54     	; 0x19d8 <__floatsisf+0x6c>
    19a2:	6f 5f       	subi	r22, 0xFF	; 255
    19a4:	7f 4f       	sbci	r23, 0xFF	; 255
    19a6:	8f 4f       	sbci	r24, 0xFF	; 255
    19a8:	9f 4f       	sbci	r25, 0xFF	; 255
    19aa:	16 c0       	rjmp	.+44     	; 0x19d8 <__floatsisf+0x6c>
    19ac:	88 23       	and	r24, r24
    19ae:	11 f0       	breq	.+4      	; 0x19b4 <__floatsisf+0x48>
    19b0:	96 e9       	ldi	r25, 0x96	; 150
    19b2:	11 c0       	rjmp	.+34     	; 0x19d6 <__floatsisf+0x6a>
    19b4:	77 23       	and	r23, r23
    19b6:	21 f0       	breq	.+8      	; 0x19c0 <__floatsisf+0x54>
    19b8:	9e e8       	ldi	r25, 0x8E	; 142
    19ba:	87 2f       	mov	r24, r23
    19bc:	76 2f       	mov	r23, r22
    19be:	05 c0       	rjmp	.+10     	; 0x19ca <__floatsisf+0x5e>
    19c0:	66 23       	and	r22, r22
    19c2:	71 f0       	breq	.+28     	; 0x19e0 <__floatsisf+0x74>
    19c4:	96 e8       	ldi	r25, 0x86	; 134
    19c6:	86 2f       	mov	r24, r22
    19c8:	70 e0       	ldi	r23, 0x00	; 0
    19ca:	60 e0       	ldi	r22, 0x00	; 0
    19cc:	2a f0       	brmi	.+10     	; 0x19d8 <__floatsisf+0x6c>
    19ce:	9a 95       	dec	r25
    19d0:	66 0f       	add	r22, r22
    19d2:	77 1f       	adc	r23, r23
    19d4:	88 1f       	adc	r24, r24
    19d6:	da f7       	brpl	.-10     	; 0x19ce <__floatsisf+0x62>
    19d8:	88 0f       	add	r24, r24
    19da:	96 95       	lsr	r25
    19dc:	87 95       	ror	r24
    19de:	97 f9       	bld	r25, 7
    19e0:	08 95       	ret

000019e2 <__fp_inf>:
    19e2:	97 f9       	bld	r25, 7
    19e4:	9f 67       	ori	r25, 0x7F	; 127
    19e6:	80 e8       	ldi	r24, 0x80	; 128
    19e8:	70 e0       	ldi	r23, 0x00	; 0
    19ea:	60 e0       	ldi	r22, 0x00	; 0
    19ec:	08 95       	ret

000019ee <__fp_nan>:
    19ee:	9f ef       	ldi	r25, 0xFF	; 255
    19f0:	80 ec       	ldi	r24, 0xC0	; 192
    19f2:	08 95       	ret

000019f4 <__fp_pscA>:
    19f4:	00 24       	eor	r0, r0
    19f6:	0a 94       	dec	r0
    19f8:	16 16       	cp	r1, r22
    19fa:	17 06       	cpc	r1, r23
    19fc:	18 06       	cpc	r1, r24
    19fe:	09 06       	cpc	r0, r25
    1a00:	08 95       	ret

00001a02 <__fp_pscB>:
    1a02:	00 24       	eor	r0, r0
    1a04:	0a 94       	dec	r0
    1a06:	12 16       	cp	r1, r18
    1a08:	13 06       	cpc	r1, r19
    1a0a:	14 06       	cpc	r1, r20
    1a0c:	05 06       	cpc	r0, r21
    1a0e:	08 95       	ret

00001a10 <__fp_round>:
    1a10:	09 2e       	mov	r0, r25
    1a12:	03 94       	inc	r0
    1a14:	00 0c       	add	r0, r0
    1a16:	11 f4       	brne	.+4      	; 0x1a1c <__fp_round+0xc>
    1a18:	88 23       	and	r24, r24
    1a1a:	52 f0       	brmi	.+20     	; 0x1a30 <__fp_round+0x20>
    1a1c:	bb 0f       	add	r27, r27
    1a1e:	40 f4       	brcc	.+16     	; 0x1a30 <__fp_round+0x20>
    1a20:	bf 2b       	or	r27, r31
    1a22:	11 f4       	brne	.+4      	; 0x1a28 <__fp_round+0x18>
    1a24:	60 ff       	sbrs	r22, 0
    1a26:	04 c0       	rjmp	.+8      	; 0x1a30 <__fp_round+0x20>
    1a28:	6f 5f       	subi	r22, 0xFF	; 255
    1a2a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a2c:	8f 4f       	sbci	r24, 0xFF	; 255
    1a2e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a30:	08 95       	ret

00001a32 <__fp_split3>:
    1a32:	57 fd       	sbrc	r21, 7
    1a34:	90 58       	subi	r25, 0x80	; 128
    1a36:	44 0f       	add	r20, r20
    1a38:	55 1f       	adc	r21, r21
    1a3a:	59 f0       	breq	.+22     	; 0x1a52 <__fp_splitA+0x10>
    1a3c:	5f 3f       	cpi	r21, 0xFF	; 255
    1a3e:	71 f0       	breq	.+28     	; 0x1a5c <__fp_splitA+0x1a>
    1a40:	47 95       	ror	r20

00001a42 <__fp_splitA>:
    1a42:	88 0f       	add	r24, r24
    1a44:	97 fb       	bst	r25, 7
    1a46:	99 1f       	adc	r25, r25
    1a48:	61 f0       	breq	.+24     	; 0x1a62 <__fp_splitA+0x20>
    1a4a:	9f 3f       	cpi	r25, 0xFF	; 255
    1a4c:	79 f0       	breq	.+30     	; 0x1a6c <__fp_splitA+0x2a>
    1a4e:	87 95       	ror	r24
    1a50:	08 95       	ret
    1a52:	12 16       	cp	r1, r18
    1a54:	13 06       	cpc	r1, r19
    1a56:	14 06       	cpc	r1, r20
    1a58:	55 1f       	adc	r21, r21
    1a5a:	f2 cf       	rjmp	.-28     	; 0x1a40 <__fp_split3+0xe>
    1a5c:	46 95       	lsr	r20
    1a5e:	f1 df       	rcall	.-30     	; 0x1a42 <__fp_splitA>
    1a60:	08 c0       	rjmp	.+16     	; 0x1a72 <__fp_splitA+0x30>
    1a62:	16 16       	cp	r1, r22
    1a64:	17 06       	cpc	r1, r23
    1a66:	18 06       	cpc	r1, r24
    1a68:	99 1f       	adc	r25, r25
    1a6a:	f1 cf       	rjmp	.-30     	; 0x1a4e <__fp_splitA+0xc>
    1a6c:	86 95       	lsr	r24
    1a6e:	71 05       	cpc	r23, r1
    1a70:	61 05       	cpc	r22, r1
    1a72:	08 94       	sec
    1a74:	08 95       	ret

00001a76 <__fp_zero>:
    1a76:	e8 94       	clt

00001a78 <__fp_szero>:
    1a78:	bb 27       	eor	r27, r27
    1a7a:	66 27       	eor	r22, r22
    1a7c:	77 27       	eor	r23, r23
    1a7e:	cb 01       	movw	r24, r22
    1a80:	97 f9       	bld	r25, 7
    1a82:	08 95       	ret

00001a84 <__mulsf3>:
    1a84:	0e 94 55 0d 	call	0x1aaa	; 0x1aaa <__mulsf3x>
    1a88:	0c 94 08 0d 	jmp	0x1a10	; 0x1a10 <__fp_round>
    1a8c:	0e 94 fa 0c 	call	0x19f4	; 0x19f4 <__fp_pscA>
    1a90:	38 f0       	brcs	.+14     	; 0x1aa0 <__mulsf3+0x1c>
    1a92:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <__fp_pscB>
    1a96:	20 f0       	brcs	.+8      	; 0x1aa0 <__mulsf3+0x1c>
    1a98:	95 23       	and	r25, r21
    1a9a:	11 f0       	breq	.+4      	; 0x1aa0 <__mulsf3+0x1c>
    1a9c:	0c 94 f1 0c 	jmp	0x19e2	; 0x19e2 <__fp_inf>
    1aa0:	0c 94 f7 0c 	jmp	0x19ee	; 0x19ee <__fp_nan>
    1aa4:	11 24       	eor	r1, r1
    1aa6:	0c 94 3c 0d 	jmp	0x1a78	; 0x1a78 <__fp_szero>

00001aaa <__mulsf3x>:
    1aaa:	0e 94 19 0d 	call	0x1a32	; 0x1a32 <__fp_split3>
    1aae:	70 f3       	brcs	.-36     	; 0x1a8c <__mulsf3+0x8>

00001ab0 <__mulsf3_pse>:
    1ab0:	95 9f       	mul	r25, r21
    1ab2:	c1 f3       	breq	.-16     	; 0x1aa4 <__mulsf3+0x20>
    1ab4:	95 0f       	add	r25, r21
    1ab6:	50 e0       	ldi	r21, 0x00	; 0
    1ab8:	55 1f       	adc	r21, r21
    1aba:	62 9f       	mul	r22, r18
    1abc:	f0 01       	movw	r30, r0
    1abe:	72 9f       	mul	r23, r18
    1ac0:	bb 27       	eor	r27, r27
    1ac2:	f0 0d       	add	r31, r0
    1ac4:	b1 1d       	adc	r27, r1
    1ac6:	63 9f       	mul	r22, r19
    1ac8:	aa 27       	eor	r26, r26
    1aca:	f0 0d       	add	r31, r0
    1acc:	b1 1d       	adc	r27, r1
    1ace:	aa 1f       	adc	r26, r26
    1ad0:	64 9f       	mul	r22, r20
    1ad2:	66 27       	eor	r22, r22
    1ad4:	b0 0d       	add	r27, r0
    1ad6:	a1 1d       	adc	r26, r1
    1ad8:	66 1f       	adc	r22, r22
    1ada:	82 9f       	mul	r24, r18
    1adc:	22 27       	eor	r18, r18
    1ade:	b0 0d       	add	r27, r0
    1ae0:	a1 1d       	adc	r26, r1
    1ae2:	62 1f       	adc	r22, r18
    1ae4:	73 9f       	mul	r23, r19
    1ae6:	b0 0d       	add	r27, r0
    1ae8:	a1 1d       	adc	r26, r1
    1aea:	62 1f       	adc	r22, r18
    1aec:	83 9f       	mul	r24, r19
    1aee:	a0 0d       	add	r26, r0
    1af0:	61 1d       	adc	r22, r1
    1af2:	22 1f       	adc	r18, r18
    1af4:	74 9f       	mul	r23, r20
    1af6:	33 27       	eor	r19, r19
    1af8:	a0 0d       	add	r26, r0
    1afa:	61 1d       	adc	r22, r1
    1afc:	23 1f       	adc	r18, r19
    1afe:	84 9f       	mul	r24, r20
    1b00:	60 0d       	add	r22, r0
    1b02:	21 1d       	adc	r18, r1
    1b04:	82 2f       	mov	r24, r18
    1b06:	76 2f       	mov	r23, r22
    1b08:	6a 2f       	mov	r22, r26
    1b0a:	11 24       	eor	r1, r1
    1b0c:	9f 57       	subi	r25, 0x7F	; 127
    1b0e:	50 40       	sbci	r21, 0x00	; 0
    1b10:	9a f0       	brmi	.+38     	; 0x1b38 <__mulsf3_pse+0x88>
    1b12:	f1 f0       	breq	.+60     	; 0x1b50 <__mulsf3_pse+0xa0>
    1b14:	88 23       	and	r24, r24
    1b16:	4a f0       	brmi	.+18     	; 0x1b2a <__mulsf3_pse+0x7a>
    1b18:	ee 0f       	add	r30, r30
    1b1a:	ff 1f       	adc	r31, r31
    1b1c:	bb 1f       	adc	r27, r27
    1b1e:	66 1f       	adc	r22, r22
    1b20:	77 1f       	adc	r23, r23
    1b22:	88 1f       	adc	r24, r24
    1b24:	91 50       	subi	r25, 0x01	; 1
    1b26:	50 40       	sbci	r21, 0x00	; 0
    1b28:	a9 f7       	brne	.-22     	; 0x1b14 <__mulsf3_pse+0x64>
    1b2a:	9e 3f       	cpi	r25, 0xFE	; 254
    1b2c:	51 05       	cpc	r21, r1
    1b2e:	80 f0       	brcs	.+32     	; 0x1b50 <__mulsf3_pse+0xa0>
    1b30:	0c 94 f1 0c 	jmp	0x19e2	; 0x19e2 <__fp_inf>
    1b34:	0c 94 3c 0d 	jmp	0x1a78	; 0x1a78 <__fp_szero>
    1b38:	5f 3f       	cpi	r21, 0xFF	; 255
    1b3a:	e4 f3       	brlt	.-8      	; 0x1b34 <__mulsf3_pse+0x84>
    1b3c:	98 3e       	cpi	r25, 0xE8	; 232
    1b3e:	d4 f3       	brlt	.-12     	; 0x1b34 <__mulsf3_pse+0x84>
    1b40:	86 95       	lsr	r24
    1b42:	77 95       	ror	r23
    1b44:	67 95       	ror	r22
    1b46:	b7 95       	ror	r27
    1b48:	f7 95       	ror	r31
    1b4a:	e7 95       	ror	r30
    1b4c:	9f 5f       	subi	r25, 0xFF	; 255
    1b4e:	c1 f7       	brne	.-16     	; 0x1b40 <__mulsf3_pse+0x90>
    1b50:	fe 2b       	or	r31, r30
    1b52:	88 0f       	add	r24, r24
    1b54:	91 1d       	adc	r25, r1
    1b56:	96 95       	lsr	r25
    1b58:	87 95       	ror	r24
    1b5a:	97 f9       	bld	r25, 7
    1b5c:	08 95       	ret

00001b5e <_ZN15OrangutanAnalog7setModeEh.part.0>:
    1b5e:	ec e7       	ldi	r30, 0x7C	; 124
    1b60:	f0 e0       	ldi	r31, 0x00	; 0
    1b62:	80 81       	ld	r24, Z
    1b64:	8f 7d       	andi	r24, 0xDF	; 223
    1b66:	80 83       	st	Z, r24
    1b68:	08 95       	ret

00001b6a <_ZN15OrangutanAnalog7setModeEh>:
    1b6a:	81 11       	cpse	r24, r1
    1b6c:	03 c0       	rjmp	.+6      	; 0x1b74 <_ZN15OrangutanAnalog7setModeEh+0xa>
    1b6e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <_ZN15OrangutanAnalog7setModeEh.part.0>
    1b72:	08 95       	ret
    1b74:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1b78:	80 62       	ori	r24, 0x20	; 32
    1b7a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1b7e:	08 95       	ret

00001b80 <_ZN15OrangutanAnalog7getModeEv>:
    1b80:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1b84:	85 fb       	bst	r24, 5
    1b86:	88 27       	eor	r24, r24
    1b88:	80 f9       	bld	r24, 0
    1b8a:	08 95       	ret

00001b8c <_ZN15OrangutanAnalog16conversionResultEv>:
    1b8c:	0e 94 c0 0d 	call	0x1b80	; 0x1b80 <_ZN15OrangutanAnalog7getModeEv>
    1b90:	88 23       	and	r24, r24
    1b92:	21 f0       	breq	.+8      	; 0x1b9c <_ZN15OrangutanAnalog16conversionResultEv+0x10>
    1b94:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1b98:	90 e0       	ldi	r25, 0x00	; 0
    1b9a:	08 95       	ret
    1b9c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    1ba0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1ba4:	08 95       	ret

00001ba6 <_ZN15OrangutanAnalog15startConversionEhh>:
    1ba6:	80 32       	cpi	r24, 0x20	; 32
    1ba8:	a0 f4       	brcc	.+40     	; 0x1bd2 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
    1baa:	97 e8       	ldi	r25, 0x87	; 135
    1bac:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1bb0:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1bb4:	66 23       	and	r22, r22
    1bb6:	11 f0       	breq	.+4      	; 0x1bbc <_ZN15OrangutanAnalog15startConversionEhh+0x16>
    1bb8:	90 6c       	ori	r25, 0xC0	; 192
    1bba:	02 c0       	rjmp	.+4      	; 0x1bc0 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
    1bbc:	9f 77       	andi	r25, 0x7F	; 127
    1bbe:	90 64       	ori	r25, 0x40	; 64
    1bc0:	90 7e       	andi	r25, 0xE0	; 224
    1bc2:	98 2b       	or	r25, r24
    1bc4:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1bc8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1bcc:	80 64       	ori	r24, 0x40	; 64
    1bce:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1bd2:	08 95       	ret

00001bd4 <_ZN15OrangutanAnalog11readAverageEhj>:
    1bd4:	a0 e0       	ldi	r26, 0x00	; 0
    1bd6:	b0 e0       	ldi	r27, 0x00	; 0
    1bd8:	e0 ef       	ldi	r30, 0xF0	; 240
    1bda:	fd e0       	ldi	r31, 0x0D	; 13
    1bdc:	0c 94 37 1c 	jmp	0x386e	; 0x386e <__prologue_saves__+0x14>
    1be0:	eb 01       	movw	r28, r22
    1be2:	60 e0       	ldi	r22, 0x00	; 0
    1be4:	0e 94 d3 0d 	call	0x1ba6	; 0x1ba6 <_ZN15OrangutanAnalog15startConversionEhh>
    1be8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1bec:	86 fd       	sbrc	r24, 6
    1bee:	fc cf       	rjmp	.-8      	; 0x1be8 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
    1bf0:	8e 01       	movw	r16, r28
    1bf2:	c1 2c       	mov	r12, r1
    1bf4:	d1 2c       	mov	r13, r1
    1bf6:	76 01       	movw	r14, r12
    1bf8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1bfc:	80 64       	ori	r24, 0x40	; 64
    1bfe:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1c02:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1c06:	86 fd       	sbrc	r24, 6
    1c08:	fc cf       	rjmp	.-8      	; 0x1c02 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
    1c0a:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <_ZN15OrangutanAnalog16conversionResultEv>
    1c0e:	c8 0e       	add	r12, r24
    1c10:	d9 1e       	adc	r13, r25
    1c12:	e1 1c       	adc	r14, r1
    1c14:	f1 1c       	adc	r15, r1
    1c16:	01 50       	subi	r16, 0x01	; 1
    1c18:	11 09       	sbc	r17, r1
    1c1a:	01 15       	cp	r16, r1
    1c1c:	11 05       	cpc	r17, r1
    1c1e:	61 f7       	brne	.-40     	; 0x1bf8 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
    1c20:	ce 01       	movw	r24, r28
    1c22:	96 95       	lsr	r25
    1c24:	87 95       	ror	r24
    1c26:	c0 34       	cpi	r28, 0x40	; 64
    1c28:	d1 05       	cpc	r29, r1
    1c2a:	38 f4       	brcc	.+14     	; 0x1c3a <_ZN15OrangutanAnalog11readAverageEhj+0x66>
    1c2c:	8c 0d       	add	r24, r12
    1c2e:	9d 1d       	adc	r25, r13
    1c30:	be 01       	movw	r22, r28
    1c32:	0e 94 9c 1b 	call	0x3738	; 0x3738 <__udivmodhi4>
    1c36:	cb 01       	movw	r24, r22
    1c38:	0e c0       	rjmp	.+28     	; 0x1c56 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
    1c3a:	a7 01       	movw	r20, r14
    1c3c:	96 01       	movw	r18, r12
    1c3e:	28 0f       	add	r18, r24
    1c40:	39 1f       	adc	r19, r25
    1c42:	41 1d       	adc	r20, r1
    1c44:	51 1d       	adc	r21, r1
    1c46:	ca 01       	movw	r24, r20
    1c48:	b9 01       	movw	r22, r18
    1c4a:	9e 01       	movw	r18, r28
    1c4c:	40 e0       	ldi	r20, 0x00	; 0
    1c4e:	50 e0       	ldi	r21, 0x00	; 0
    1c50:	0e 94 c4 1b 	call	0x3788	; 0x3788 <__udivmodsi4>
    1c54:	c9 01       	movw	r24, r18
    1c56:	cd b7       	in	r28, 0x3d	; 61
    1c58:	de b7       	in	r29, 0x3e	; 62
    1c5a:	e8 e0       	ldi	r30, 0x08	; 8
    1c5c:	0c 94 53 1c 	jmp	0x38a6	; 0x38a6 <__epilogue_restores__+0x14>

00001c60 <_ZN15OrangutanAnalog12toMillivoltsEj>:
    1c60:	cf 92       	push	r12
    1c62:	df 92       	push	r13
    1c64:	ef 92       	push	r14
    1c66:	ff 92       	push	r15
    1c68:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1c6c:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1c70:	9c 01       	movw	r18, r24
    1c72:	0e 94 0b 1c 	call	0x3816	; 0x3816 <__umulhisi3>
    1c76:	6b 01       	movw	r12, r22
    1c78:	7c 01       	movw	r14, r24
    1c7a:	0e 94 c0 0d 	call	0x1b80	; 0x1b80 <_ZN15OrangutanAnalog7getModeEv>
    1c7e:	88 23       	and	r24, r24
    1c80:	59 f0       	breq	.+22     	; 0x1c98 <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
    1c82:	c7 01       	movw	r24, r14
    1c84:	b6 01       	movw	r22, r12
    1c86:	61 58       	subi	r22, 0x81	; 129
    1c88:	7f 4f       	sbci	r23, 0xFF	; 255
    1c8a:	8f 4f       	sbci	r24, 0xFF	; 255
    1c8c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c8e:	2f ef       	ldi	r18, 0xFF	; 255
    1c90:	30 e0       	ldi	r19, 0x00	; 0
    1c92:	40 e0       	ldi	r20, 0x00	; 0
    1c94:	50 e0       	ldi	r21, 0x00	; 0
    1c96:	0a c0       	rjmp	.+20     	; 0x1cac <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
    1c98:	c7 01       	movw	r24, r14
    1c9a:	b6 01       	movw	r22, r12
    1c9c:	61 50       	subi	r22, 0x01	; 1
    1c9e:	7e 4f       	sbci	r23, 0xFE	; 254
    1ca0:	8f 4f       	sbci	r24, 0xFF	; 255
    1ca2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ca4:	2f ef       	ldi	r18, 0xFF	; 255
    1ca6:	33 e0       	ldi	r19, 0x03	; 3
    1ca8:	40 e0       	ldi	r20, 0x00	; 0
    1caa:	50 e0       	ldi	r21, 0x00	; 0
    1cac:	0e 94 c4 1b 	call	0x3788	; 0x3788 <__udivmodsi4>
    1cb0:	c9 01       	movw	r24, r18
    1cb2:	ff 90       	pop	r15
    1cb4:	ef 90       	pop	r14
    1cb6:	df 90       	pop	r13
    1cb8:	cf 90       	pop	r12
    1cba:	08 95       	ret

00001cbc <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
    1cbc:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <_ZN15OrangutanAnalog11readAverageEhj>
    1cc0:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <_ZN15OrangutanAnalog12toMillivoltsEj>
    1cc4:	08 95       	ret

00001cc6 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
    1cc6:	1f 93       	push	r17
    1cc8:	cf 93       	push	r28
    1cca:	df 93       	push	r29
    1ccc:	0e 94 c0 0d 	call	0x1b80	; 0x1b80 <_ZN15OrangutanAnalog7getModeEv>
    1cd0:	18 2f       	mov	r17, r24
    1cd2:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <_ZN15OrangutanAnalog7setModeEh.part.0>
    1cd6:	6a e0       	ldi	r22, 0x0A	; 10
    1cd8:	70 e0       	ldi	r23, 0x00	; 0
    1cda:	86 e0       	ldi	r24, 0x06	; 6
    1cdc:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
    1ce0:	ec 01       	movw	r28, r24
    1ce2:	81 2f       	mov	r24, r17
    1ce4:	0e 94 b5 0d 	call	0x1b6a	; 0x1b6a <_ZN15OrangutanAnalog7setModeEh>
    1ce8:	ce 01       	movw	r24, r28
    1cea:	88 0f       	add	r24, r24
    1cec:	99 1f       	adc	r25, r25
    1cee:	8c 0f       	add	r24, r28
    1cf0:	9d 1f       	adc	r25, r29
    1cf2:	01 96       	adiw	r24, 0x01	; 1
    1cf4:	96 95       	lsr	r25
    1cf6:	87 95       	ror	r24
    1cf8:	df 91       	pop	r29
    1cfa:	cf 91       	pop	r28
    1cfc:	1f 91       	pop	r17
    1cfe:	08 95       	ret

00001d00 <read_battery_millivolts_3pi>:
    1d00:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
    1d04:	08 95       	ret

00001d06 <_ZL16currentCharacterv>:
    1d06:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <_ZL17use_program_space>
    1d0a:	e0 91 94 01 	lds	r30, 0x0194	; 0x800194 <__data_end>
    1d0e:	f0 91 95 01 	lds	r31, 0x0195	; 0x800195 <__data_end+0x1>
    1d12:	99 23       	and	r25, r25
    1d14:	11 f0       	breq	.+4      	; 0x1d1a <_ZL16currentCharacterv+0x14>
    1d16:	84 91       	lpm	r24, Z
    1d18:	01 c0       	rjmp	.+2      	; 0x1d1c <_ZL16currentCharacterv+0x16>
    1d1a:	80 81       	ld	r24, Z
    1d1c:	2f eb       	ldi	r18, 0xBF	; 191
    1d1e:	28 0f       	add	r18, r24
    1d20:	2a 31       	cpi	r18, 0x1A	; 26
    1d22:	10 f4       	brcc	.+4      	; 0x1d28 <_ZL16currentCharacterv+0x22>
    1d24:	80 5e       	subi	r24, 0xE0	; 224
    1d26:	08 95       	ret
    1d28:	80 32       	cpi	r24, 0x20	; 32
    1d2a:	49 f4       	brne	.+18     	; 0x1d3e <_ZL16currentCharacterv+0x38>
    1d2c:	9f 01       	movw	r18, r30
    1d2e:	2f 5f       	subi	r18, 0xFF	; 255
    1d30:	3f 4f       	sbci	r19, 0xFF	; 255
    1d32:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    1d36:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    1d3a:	ef 2b       	or	r30, r31
    1d3c:	31 f7       	brne	.-52     	; 0x1d0a <_ZL16currentCharacterv+0x4>
    1d3e:	08 95       	ret

00001d40 <_ZL9getNumberv>:
    1d40:	1f 93       	push	r17
    1d42:	cf 93       	push	r28
    1d44:	df 93       	push	r29
    1d46:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <_ZL16currentCharacterv>
    1d4a:	c0 e0       	ldi	r28, 0x00	; 0
    1d4c:	d0 e0       	ldi	r29, 0x00	; 0
    1d4e:	1a e0       	ldi	r17, 0x0A	; 10
    1d50:	90 ed       	ldi	r25, 0xD0	; 208
    1d52:	98 0f       	add	r25, r24
    1d54:	9a 30       	cpi	r25, 0x0A	; 10
    1d56:	b8 f4       	brcc	.+46     	; 0x1d86 <_ZL9getNumberv+0x46>
    1d58:	9e 01       	movw	r18, r28
    1d5a:	12 9f       	mul	r17, r18
    1d5c:	e0 01       	movw	r28, r0
    1d5e:	13 9f       	mul	r17, r19
    1d60:	d0 0d       	add	r29, r0
    1d62:	11 24       	eor	r1, r1
    1d64:	c8 0f       	add	r28, r24
    1d66:	d1 1d       	adc	r29, r1
    1d68:	87 fd       	sbrc	r24, 7
    1d6a:	da 95       	dec	r29
    1d6c:	e0 97       	sbiw	r28, 0x30	; 48
    1d6e:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <__data_end>
    1d72:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <__data_end+0x1>
    1d76:	01 96       	adiw	r24, 0x01	; 1
    1d78:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <__data_end+0x1>
    1d7c:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <__data_end>
    1d80:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <_ZL16currentCharacterv>
    1d84:	e5 cf       	rjmp	.-54     	; 0x1d50 <_ZL9getNumberv+0x10>
    1d86:	ce 01       	movw	r24, r28
    1d88:	df 91       	pop	r29
    1d8a:	cf 91       	pop	r28
    1d8c:	1f 91       	pop	r17
    1d8e:	08 95       	ret

00001d90 <_ZN15OrangutanBuzzer5init2Ev>:
    1d90:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1d94:	83 e2       	ldi	r24, 0x23	; 35
    1d96:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    1d9a:	81 e1       	ldi	r24, 0x11	; 17
    1d9c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1da0:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7f8082>
    1da4:	80 e1       	ldi	r24, 0x10	; 16
    1da6:	97 e2       	ldi	r25, 0x27	; 39
    1da8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    1dac:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1db0:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    1db4:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    1db8:	22 9a       	sbi	0x04, 2	; 4
    1dba:	78 94       	sei
    1dbc:	08 95       	ret

00001dbe <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
    1dbe:	8f 92       	push	r8
    1dc0:	9f 92       	push	r9
    1dc2:	af 92       	push	r10
    1dc4:	bf 92       	push	r11
    1dc6:	df 92       	push	r13
    1dc8:	ef 92       	push	r14
    1dca:	ff 92       	push	r15
    1dcc:	0f 93       	push	r16
    1dce:	1f 93       	push	r17
    1dd0:	cf 93       	push	r28
    1dd2:	df 93       	push	r29
    1dd4:	5c 01       	movw	r10, r24
    1dd6:	8b 01       	movw	r16, r22
    1dd8:	d4 2e       	mov	r13, r20
    1dda:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <buzzerInitialized>
    1dde:	81 11       	cpse	r24, r1
    1de0:	05 c0       	rjmp	.+10     	; 0x1dec <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
    1de2:	81 e0       	ldi	r24, 0x01	; 1
    1de4:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <buzzerInitialized>
    1de8:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <_ZN15OrangutanBuzzer5init2Ev>
    1dec:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <buzzerFinished>
    1df0:	b7 fe       	sbrs	r11, 7
    1df2:	05 c0       	rjmp	.+10     	; 0x1dfe <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
    1df4:	e8 94       	clt
    1df6:	b7 f8       	bld	r11, 7
    1df8:	2a e0       	ldi	r18, 0x0A	; 10
    1dfa:	f2 2e       	mov	r15, r18
    1dfc:	02 c0       	rjmp	.+4      	; 0x1e02 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
    1dfe:	ff 24       	eor	r15, r15
    1e00:	f3 94       	inc	r15
    1e02:	e0 90 81 00 	lds	r14, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1e06:	2e 2d       	mov	r18, r14
    1e08:	28 7f       	andi	r18, 0xF8	; 248
    1e0a:	e2 2e       	mov	r14, r18
    1e0c:	48 ec       	ldi	r20, 0xC8	; 200
    1e0e:	f4 9e       	mul	r15, r20
    1e10:	c0 01       	movw	r24, r0
    1e12:	11 24       	eor	r1, r1
    1e14:	8a 15       	cp	r24, r10
    1e16:	9b 05       	cpc	r25, r11
    1e18:	e0 f4       	brcc	.+56     	; 0x1e52 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
    1e1a:	e5 01       	movw	r28, r10
    1e1c:	51 e1       	ldi	r21, 0x11	; 17
    1e1e:	a5 16       	cp	r10, r21
    1e20:	57 e2       	ldi	r21, 0x27	; 39
    1e22:	b5 06       	cpc	r11, r21
    1e24:	10 f0       	brcs	.+4      	; 0x1e2a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
    1e26:	c0 e1       	ldi	r28, 0x10	; 16
    1e28:	d7 e2       	ldi	r29, 0x27	; 39
    1e2a:	be 01       	movw	r22, r28
    1e2c:	76 95       	lsr	r23
    1e2e:	67 95       	ror	r22
    1e30:	80 e0       	ldi	r24, 0x00	; 0
    1e32:	90 e0       	ldi	r25, 0x00	; 0
    1e34:	60 58       	subi	r22, 0x80	; 128
    1e36:	79 46       	sbci	r23, 0x69	; 105
    1e38:	87 46       	sbci	r24, 0x67	; 103
    1e3a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e3c:	4e 01       	movw	r8, r28
    1e3e:	a1 2c       	mov	r10, r1
    1e40:	b1 2c       	mov	r11, r1
    1e42:	a5 01       	movw	r20, r10
    1e44:	94 01       	movw	r18, r8
    1e46:	0e 94 c4 1b 	call	0x3788	; 0x3788 <__udivmodsi4>
    1e4a:	59 01       	movw	r10, r18
    1e4c:	8e 2d       	mov	r24, r14
    1e4e:	81 60       	ori	r24, 0x01	; 1
    1e50:	24 c0       	rjmp	.+72     	; 0x1e9a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
    1e52:	c8 e2       	ldi	r28, 0x28	; 40
    1e54:	fc 9e       	mul	r15, r28
    1e56:	c0 2d       	mov	r28, r0
    1e58:	11 24       	eor	r1, r1
    1e5a:	d0 e0       	ldi	r29, 0x00	; 0
    1e5c:	ca 15       	cp	r28, r10
    1e5e:	db 05       	cpc	r29, r11
    1e60:	08 f4       	brcc	.+2      	; 0x1e64 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
    1e62:	e5 01       	movw	r28, r10
    1e64:	be 01       	movw	r22, r28
    1e66:	76 95       	lsr	r23
    1e68:	67 95       	ror	r22
    1e6a:	9e 01       	movw	r18, r28
    1e6c:	40 e0       	ldi	r20, 0x00	; 0
    1e6e:	50 e0       	ldi	r21, 0x00	; 0
    1e70:	8a e0       	ldi	r24, 0x0A	; 10
    1e72:	f8 12       	cpse	r15, r24
    1e74:	07 c0       	rjmp	.+14     	; 0x1e84 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
    1e76:	80 e0       	ldi	r24, 0x00	; 0
    1e78:	90 e0       	ldi	r25, 0x00	; 0
    1e7a:	60 5e       	subi	r22, 0xE0	; 224
    1e7c:	73 44       	sbci	r23, 0x43	; 67
    1e7e:	81 44       	sbci	r24, 0x41	; 65
    1e80:	9f 4f       	sbci	r25, 0xFF	; 255
    1e82:	06 c0       	rjmp	.+12     	; 0x1e90 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
    1e84:	80 e0       	ldi	r24, 0x00	; 0
    1e86:	90 e0       	ldi	r25, 0x00	; 0
    1e88:	60 53       	subi	r22, 0x30	; 48
    1e8a:	7d 4e       	sbci	r23, 0xED	; 237
    1e8c:	8c 4e       	sbci	r24, 0xEC	; 236
    1e8e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e90:	0e 94 c4 1b 	call	0x3788	; 0x3788 <__udivmodsi4>
    1e94:	59 01       	movw	r10, r18
    1e96:	8e 2d       	mov	r24, r14
    1e98:	82 60       	ori	r24, 0x02	; 2
    1e9a:	88 2e       	mov	r8, r24
    1e9c:	2a e0       	ldi	r18, 0x0A	; 10
    1e9e:	f2 12       	cpse	r15, r18
    1ea0:	07 c0       	rjmp	.+14     	; 0x1eb0 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
    1ea2:	ce 01       	movw	r24, r28
    1ea4:	05 96       	adiw	r24, 0x05	; 5
    1ea6:	6a e0       	ldi	r22, 0x0A	; 10
    1ea8:	70 e0       	ldi	r23, 0x00	; 0
    1eaa:	0e 94 9c 1b 	call	0x3738	; 0x3738 <__udivmodhi4>
    1eae:	eb 01       	movw	r28, r22
    1eb0:	c8 3e       	cpi	r28, 0xE8	; 232
    1eb2:	43 e0       	ldi	r20, 0x03	; 3
    1eb4:	d4 07       	cpc	r29, r20
    1eb6:	59 f0       	breq	.+22     	; 0x1ece <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
    1eb8:	98 01       	movw	r18, r16
    1eba:	de 01       	movw	r26, r28
    1ebc:	0e 94 0b 1c 	call	0x3816	; 0x3816 <__umulhisi3>
    1ec0:	28 ee       	ldi	r18, 0xE8	; 232
    1ec2:	33 e0       	ldi	r19, 0x03	; 3
    1ec4:	40 e0       	ldi	r20, 0x00	; 0
    1ec6:	50 e0       	ldi	r21, 0x00	; 0
    1ec8:	0e 94 e6 1b 	call	0x37cc	; 0x37cc <__divmodsi4>
    1ecc:	89 01       	movw	r16, r18
    1ece:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1ed2:	80 92 81 00 	sts	0x0081, r8	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1ed6:	b0 92 89 00 	sts	0x0089, r11	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    1eda:	a0 92 88 00 	sts	0x0088, r10	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1ede:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1ee2:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    1ee6:	4d 2d       	mov	r20, r13
    1ee8:	40 31       	cpi	r20, 0x10	; 16
    1eea:	08 f0       	brcs	.+2      	; 0x1eee <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
    1eec:	4f e0       	ldi	r20, 0x0F	; 15
    1eee:	80 e1       	ldi	r24, 0x10	; 16
    1ef0:	90 e0       	ldi	r25, 0x00	; 0
    1ef2:	84 1b       	sub	r24, r20
    1ef4:	91 09       	sbc	r25, r1
    1ef6:	a9 01       	movw	r20, r18
    1ef8:	02 c0       	rjmp	.+4      	; 0x1efe <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
    1efa:	56 95       	lsr	r21
    1efc:	47 95       	ror	r20
    1efe:	8a 95       	dec	r24
    1f00:	e2 f7       	brpl	.-8      	; 0x1efa <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
    1f02:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    1f06:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    1f0a:	10 93 9c 01 	sts	0x019C, r17	; 0x80019c <_ZL13buzzerTimeout+0x1>
    1f0e:	00 93 9b 01 	sts	0x019B, r16	; 0x80019b <_ZL13buzzerTimeout>
    1f12:	86 b3       	in	r24, 0x16	; 22
    1f14:	8f ef       	ldi	r24, 0xFF	; 255
    1f16:	86 bb       	out	0x16, r24	; 22
    1f18:	81 e0       	ldi	r24, 0x01	; 1
    1f1a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1f1e:	df 91       	pop	r29
    1f20:	cf 91       	pop	r28
    1f22:	1f 91       	pop	r17
    1f24:	0f 91       	pop	r16
    1f26:	ff 90       	pop	r15
    1f28:	ef 90       	pop	r14
    1f2a:	df 90       	pop	r13
    1f2c:	bf 90       	pop	r11
    1f2e:	af 90       	pop	r10
    1f30:	9f 90       	pop	r9
    1f32:	8f 90       	pop	r8
    1f34:	08 95       	ret

00001f36 <_ZN15OrangutanBuzzer8playNoteEhjh>:
    1f36:	cf 93       	push	r28
    1f38:	df 93       	push	r29
    1f3a:	eb 01       	movw	r28, r22
    1f3c:	8f 3f       	cpi	r24, 0xFF	; 255
    1f3e:	11 f0       	breq	.+4      	; 0x1f44 <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
    1f40:	41 11       	cpse	r20, r1
    1f42:	05 c0       	rjmp	.+10     	; 0x1f4e <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
    1f44:	40 e0       	ldi	r20, 0x00	; 0
    1f46:	be 01       	movw	r22, r28
    1f48:	88 ee       	ldi	r24, 0xE8	; 232
    1f4a:	93 e0       	ldi	r25, 0x03	; 3
    1f4c:	43 c0       	rjmp	.+134    	; 0x1fd4 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
    1f4e:	81 31       	cpi	r24, 0x11	; 17
    1f50:	30 f0       	brcs	.+12     	; 0x1f5e <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
    1f52:	50 ef       	ldi	r21, 0xF0	; 240
    1f54:	58 0f       	add	r21, r24
    1f56:	50 36       	cpi	r21, 0x60	; 96
    1f58:	18 f0       	brcs	.+6      	; 0x1f60 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    1f5a:	5f e5       	ldi	r21, 0x5F	; 95
    1f5c:	01 c0       	rjmp	.+2      	; 0x1f60 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    1f5e:	50 e0       	ldi	r21, 0x00	; 0
    1f60:	85 2f       	mov	r24, r21
    1f62:	6c e0       	ldi	r22, 0x0C	; 12
    1f64:	0e 94 90 1b 	call	0x3720	; 0x3720 <__udivmodqi4>
    1f68:	68 2f       	mov	r22, r24
    1f6a:	74 ef       	ldi	r23, 0xF4	; 244
    1f6c:	76 03       	mulsu	r23, r22
    1f6e:	90 01       	movw	r18, r0
    1f70:	11 24       	eor	r1, r1
    1f72:	25 0f       	add	r18, r21
    1f74:	31 1d       	adc	r19, r1
    1f76:	2c 30       	cpi	r18, 0x0C	; 12
    1f78:	31 05       	cpc	r19, r1
    1f7a:	40 f4       	brcc	.+16     	; 0x1f8c <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
    1f7c:	f9 01       	movw	r30, r18
    1f7e:	ee 0f       	add	r30, r30
    1f80:	ff 1f       	adc	r31, r31
    1f82:	e8 5c       	subi	r30, 0xC8	; 200
    1f84:	fe 4f       	sbci	r31, 0xFE	; 254
    1f86:	20 81       	ld	r18, Z
    1f88:	31 81       	ldd	r19, Z+1	; 0x01
    1f8a:	02 c0       	rjmp	.+4      	; 0x1f90 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
    1f8c:	20 e0       	ldi	r18, 0x00	; 0
    1f8e:	30 e0       	ldi	r19, 0x00	; 0
    1f90:	87 30       	cpi	r24, 0x07	; 7
    1f92:	81 f0       	breq	.+32     	; 0x1fb4 <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
    1f94:	08 2e       	mov	r0, r24
    1f96:	02 c0       	rjmp	.+4      	; 0x1f9c <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
    1f98:	22 0f       	add	r18, r18
    1f9a:	33 1f       	adc	r19, r19
    1f9c:	0a 94       	dec	r0
    1f9e:	e2 f7       	brpl	.-8      	; 0x1f98 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
    1fa0:	82 30       	cpi	r24, 0x02	; 2
    1fa2:	28 f0       	brcs	.+10     	; 0x1fae <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
    1fa4:	c9 01       	movw	r24, r18
    1fa6:	05 96       	adiw	r24, 0x05	; 5
    1fa8:	6a e0       	ldi	r22, 0x0A	; 10
    1faa:	70 e0       	ldi	r23, 0x00	; 0
    1fac:	0c c0       	rjmp	.+24     	; 0x1fc6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
    1fae:	c9 01       	movw	r24, r18
    1fb0:	90 58       	subi	r25, 0x80	; 128
    1fb2:	0c c0       	rjmp	.+24     	; 0x1fcc <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
    1fb4:	c9 01       	movw	r24, r18
    1fb6:	36 e0       	ldi	r19, 0x06	; 6
    1fb8:	88 0f       	add	r24, r24
    1fba:	99 1f       	adc	r25, r25
    1fbc:	3a 95       	dec	r19
    1fbe:	e1 f7       	brne	.-8      	; 0x1fb8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
    1fc0:	02 96       	adiw	r24, 0x02	; 2
    1fc2:	65 e0       	ldi	r22, 0x05	; 5
    1fc4:	70 e0       	ldi	r23, 0x00	; 0
    1fc6:	0e 94 9c 1b 	call	0x3738	; 0x3738 <__udivmodhi4>
    1fca:	cb 01       	movw	r24, r22
    1fcc:	40 31       	cpi	r20, 0x10	; 16
    1fce:	08 f0       	brcs	.+2      	; 0x1fd2 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
    1fd0:	4f e0       	ldi	r20, 0x0F	; 15
    1fd2:	be 01       	movw	r22, r28
    1fd4:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    1fd8:	df 91       	pop	r29
    1fda:	cf 91       	pop	r28
    1fdc:	08 95       	ret

00001fde <_ZL8nextNotev>:
    1fde:	a2 e0       	ldi	r26, 0x02	; 2
    1fe0:	b0 e0       	ldi	r27, 0x00	; 0
    1fe2:	e5 ef       	ldi	r30, 0xF5	; 245
    1fe4:	ff e0       	ldi	r31, 0x0F	; 15
    1fe6:	0c 94 2f 1c 	jmp	0x385e	; 0x385e <__prologue_saves__+0x4>
    1fea:	90 90 0a 01 	lds	r9, 0x010A	; 0x80010a <_ZL6octave>
    1fee:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <_ZL8staccato>
    1ff2:	88 23       	and	r24, r24
    1ff4:	21 f0       	breq	.+8      	; 0x1ffe <_ZL8nextNotev+0x20>
    1ff6:	60 91 97 01 	lds	r22, 0x0197	; 0x800197 <_ZL22staccato_rest_duration>
    1ffa:	61 11       	cpse	r22, r1
    1ffc:	17 c0       	rjmp	.+46     	; 0x202c <_ZL8nextNotev+0x4e>
    1ffe:	77 24       	eor	r7, r7
    2000:	73 94       	inc	r7
    2002:	b0 ec       	ldi	r27, 0xC0	; 192
    2004:	ab 2e       	mov	r10, r27
    2006:	bd e5       	ldi	r27, 0x5D	; 93
    2008:	bb 2e       	mov	r11, r27
    200a:	1a e0       	ldi	r17, 0x0A	; 10
    200c:	61 2e       	mov	r6, r17
    200e:	04 e0       	ldi	r16, 0x04	; 4
    2010:	80 2e       	mov	r8, r16
    2012:	80 ed       	ldi	r24, 0xD0	; 208
    2014:	c8 2e       	mov	r12, r24
    2016:	87 e0       	ldi	r24, 0x07	; 7
    2018:	d8 2e       	mov	r13, r24
    201a:	94 e0       	ldi	r25, 0x04	; 4
    201c:	e9 2e       	mov	r14, r25
    201e:	f1 2c       	mov	r15, r1
    2020:	04 ef       	ldi	r16, 0xF4	; 244
    2022:	11 e0       	ldi	r17, 0x01	; 1
    2024:	2f e0       	ldi	r18, 0x0F	; 15
    2026:	42 2e       	mov	r4, r18
    2028:	51 2c       	mov	r5, r1
    202a:	15 c0       	rjmp	.+42     	; 0x2056 <_ZL8nextNotev+0x78>
    202c:	70 e0       	ldi	r23, 0x00	; 0
    202e:	40 e0       	ldi	r20, 0x00	; 0
    2030:	88 ee       	ldi	r24, 0xE8	; 232
    2032:	93 e0       	ldi	r25, 0x03	; 3
    2034:	0e 94 df 0e 	call	0x1dbe	; 0x1dbe <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    2038:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_ZL22staccato_rest_duration>
    203c:	17 c1       	rjmp	.+558    	; 0x226c <_ZL8nextNotev+0x28e>
    203e:	86 36       	cpi	r24, 0x66	; 102
    2040:	d4 f5       	brge	.+116    	; 0x20b6 <_ZL8nextNotev+0xd8>
    2042:	81 36       	cpi	r24, 0x61	; 97
    2044:	09 f4       	brne	.+2      	; 0x2048 <_ZL8nextNotev+0x6a>
    2046:	a9 c0       	rjmp	.+338    	; 0x219a <_ZL8nextNotev+0x1bc>
    2048:	7c f5       	brge	.+94     	; 0x20a8 <_ZL8nextNotev+0xca>
    204a:	8c 33       	cpi	r24, 0x3C	; 60
    204c:	09 f4       	brne	.+2      	; 0x2050 <_ZL8nextNotev+0x72>
    204e:	60 c0       	rjmp	.+192    	; 0x2110 <_ZL8nextNotev+0x132>
    2050:	8e 33       	cpi	r24, 0x3E	; 62
    2052:	81 f4       	brne	.+32     	; 0x2074 <_ZL8nextNotev+0x96>
    2054:	93 94       	inc	r9
    2056:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <_ZL16currentCharacterv>
    205a:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    205e:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    2062:	2f 5f       	subi	r18, 0xFF	; 255
    2064:	3f 4f       	sbci	r19, 0xFF	; 255
    2066:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    206a:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    206e:	85 36       	cpi	r24, 0x65	; 101
    2070:	31 f7       	brne	.-52     	; 0x203e <_ZL8nextNotev+0x60>
    2072:	52 c0       	rjmp	.+164    	; 0x2118 <_ZL8nextNotev+0x13a>
    2074:	81 32       	cpi	r24, 0x21	; 33
    2076:	09 f0       	breq	.+2      	; 0x207a <_ZL8nextNotev+0x9c>
    2078:	8b c0       	rjmp	.+278    	; 0x2190 <_ZL8nextNotev+0x1b2>
    207a:	80 92 0a 01 	sts	0x010A, r8	; 0x80010a <_ZL6octave>
    207e:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <_ZL19whole_note_duration+0x1>
    2082:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <_ZL19whole_note_duration>
    2086:	f0 92 07 01 	sts	0x0107, r15	; 0x800107 <_ZL9note_type+0x1>
    208a:	e0 92 06 01 	sts	0x0106, r14	; 0x800106 <_ZL9note_type>
    208e:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <_ZL8duration+0x1>
    2092:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <_ZL8duration>
    2096:	50 92 03 01 	sts	0x0103, r5	; 0x800103 <_ZL6volume+0x1>
    209a:	40 92 02 01 	sts	0x0102, r4	; 0x800102 <_ZL6volume>
    209e:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <_ZL8staccato>
    20a2:	a4 e0       	ldi	r26, 0x04	; 4
    20a4:	9a 2e       	mov	r9, r26
    20a6:	d7 cf       	rjmp	.-82     	; 0x2056 <_ZL8nextNotev+0x78>
    20a8:	83 36       	cpi	r24, 0x63	; 99
    20aa:	a1 f1       	breq	.+104    	; 0x2114 <_ZL8nextNotev+0x136>
    20ac:	0c f4       	brge	.+2      	; 0x20b0 <_ZL8nextNotev+0xd2>
    20ae:	78 c0       	rjmp	.+240    	; 0x21a0 <_ZL8nextNotev+0x1c2>
    20b0:	10 e0       	ldi	r17, 0x00	; 0
    20b2:	82 e0       	ldi	r24, 0x02	; 2
    20b4:	77 c0       	rjmp	.+238    	; 0x21a4 <_ZL8nextNotev+0x1c6>
    20b6:	8d 36       	cpi	r24, 0x6D	; 109
    20b8:	c1 f1       	breq	.+112    	; 0x212a <_ZL8nextNotev+0x14c>
    20ba:	94 f4       	brge	.+36     	; 0x20e0 <_ZL8nextNotev+0x102>
    20bc:	87 36       	cpi	r24, 0x67	; 103
    20be:	91 f1       	breq	.+100    	; 0x2124 <_ZL8nextNotev+0x146>
    20c0:	74 f1       	brlt	.+92     	; 0x211e <_ZL8nextNotev+0x140>
    20c2:	8c 36       	cpi	r24, 0x6C	; 108
    20c4:	09 f0       	breq	.+2      	; 0x20c8 <_ZL8nextNotev+0xea>
    20c6:	64 c0       	rjmp	.+200    	; 0x2190 <_ZL8nextNotev+0x1b2>
    20c8:	0e 94 a0 0e 	call	0x1d40	; 0x1d40 <_ZL9getNumberv>
    20cc:	bc 01       	movw	r22, r24
    20ce:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_ZL9note_type+0x1>
    20d2:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_ZL9note_type>
    20d6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    20da:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    20de:	51 c0       	rjmp	.+162    	; 0x2182 <_ZL8nextNotev+0x1a4>
    20e0:	82 37       	cpi	r24, 0x72	; 114
    20e2:	c9 f1       	breq	.+114    	; 0x2156 <_ZL8nextNotev+0x178>
    20e4:	4c f4       	brge	.+18     	; 0x20f8 <_ZL8nextNotev+0x11a>
    20e6:	8f 36       	cpi	r24, 0x6F	; 111
    20e8:	09 f0       	breq	.+2      	; 0x20ec <_ZL8nextNotev+0x10e>
    20ea:	52 c0       	rjmp	.+164    	; 0x2190 <_ZL8nextNotev+0x1b2>
    20ec:	0e 94 a0 0e 	call	0x1d40	; 0x1d40 <_ZL9getNumberv>
    20f0:	98 2e       	mov	r9, r24
    20f2:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_ZL6octave>
    20f6:	af cf       	rjmp	.-162    	; 0x2056 <_ZL8nextNotev+0x78>
    20f8:	84 37       	cpi	r24, 0x74	; 116
    20fa:	81 f1       	breq	.+96     	; 0x215c <_ZL8nextNotev+0x17e>
    20fc:	86 37       	cpi	r24, 0x76	; 118
    20fe:	09 f0       	breq	.+2      	; 0x2102 <_ZL8nextNotev+0x124>
    2100:	47 c0       	rjmp	.+142    	; 0x2190 <_ZL8nextNotev+0x1b2>
    2102:	0e 94 a0 0e 	call	0x1d40	; 0x1d40 <_ZL9getNumberv>
    2106:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_ZL6volume+0x1>
    210a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_ZL6volume>
    210e:	a3 cf       	rjmp	.-186    	; 0x2056 <_ZL8nextNotev+0x78>
    2110:	9a 94       	dec	r9
    2112:	a1 cf       	rjmp	.-190    	; 0x2056 <_ZL8nextNotev+0x78>
    2114:	10 e0       	ldi	r17, 0x00	; 0
    2116:	20 c0       	rjmp	.+64     	; 0x2158 <_ZL8nextNotev+0x17a>
    2118:	10 e0       	ldi	r17, 0x00	; 0
    211a:	84 e0       	ldi	r24, 0x04	; 4
    211c:	43 c0       	rjmp	.+134    	; 0x21a4 <_ZL8nextNotev+0x1c6>
    211e:	10 e0       	ldi	r17, 0x00	; 0
    2120:	85 e0       	ldi	r24, 0x05	; 5
    2122:	40 c0       	rjmp	.+128    	; 0x21a4 <_ZL8nextNotev+0x1c6>
    2124:	10 e0       	ldi	r17, 0x00	; 0
    2126:	87 e0       	ldi	r24, 0x07	; 7
    2128:	3d c0       	rjmp	.+122    	; 0x21a4 <_ZL8nextNotev+0x1c6>
    212a:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <_ZL16currentCharacterv>
    212e:	8c 36       	cpi	r24, 0x6C	; 108
    2130:	19 f4       	brne	.+6      	; 0x2138 <_ZL8nextNotev+0x15a>
    2132:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <_ZL8staccato>
    2136:	04 c0       	rjmp	.+8      	; 0x2140 <_ZL8nextNotev+0x162>
    2138:	70 92 98 01 	sts	0x0198, r7	; 0x800198 <_ZL8staccato>
    213c:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_ZL22staccato_rest_duration>
    2140:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    2144:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    2148:	2f 5f       	subi	r18, 0xFF	; 255
    214a:	3f 4f       	sbci	r19, 0xFF	; 255
    214c:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    2150:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    2154:	80 cf       	rjmp	.-256    	; 0x2056 <_ZL8nextNotev+0x78>
    2156:	11 e0       	ldi	r17, 0x01	; 1
    2158:	80 e0       	ldi	r24, 0x00	; 0
    215a:	24 c0       	rjmp	.+72     	; 0x21a4 <_ZL8nextNotev+0x1c6>
    215c:	0e 94 a0 0e 	call	0x1d40	; 0x1d40 <_ZL9getNumberv>
    2160:	bc 01       	movw	r22, r24
    2162:	c5 01       	movw	r24, r10
    2164:	0e 94 9c 1b 	call	0x3738	; 0x3738 <__udivmodhi4>
    2168:	66 9e       	mul	r6, r22
    216a:	c0 01       	movw	r24, r0
    216c:	67 9e       	mul	r6, r23
    216e:	90 0d       	add	r25, r0
    2170:	11 24       	eor	r1, r1
    2172:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_ZL19whole_note_duration+0x1>
    2176:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_ZL19whole_note_duration>
    217a:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <_ZL9note_type>
    217e:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <_ZL9note_type+0x1>
    2182:	0e 94 9c 1b 	call	0x3738	; 0x3738 <__udivmodhi4>
    2186:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_ZL8duration+0x1>
    218a:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_ZL8duration>
    218e:	63 cf       	rjmp	.-314    	; 0x2056 <_ZL8nextNotev+0x78>
    2190:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <__data_end+0x1>
    2194:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <__data_end>
    2198:	69 c0       	rjmp	.+210    	; 0x226c <_ZL8nextNotev+0x28e>
    219a:	10 e0       	ldi	r17, 0x00	; 0
    219c:	89 e0       	ldi	r24, 0x09	; 9
    219e:	02 c0       	rjmp	.+4      	; 0x21a4 <_ZL8nextNotev+0x1c6>
    21a0:	10 e0       	ldi	r17, 0x00	; 0
    21a2:	8b e0       	ldi	r24, 0x0B	; 11
    21a4:	08 2f       	mov	r16, r24
    21a6:	9c e0       	ldi	r25, 0x0C	; 12
    21a8:	99 9e       	mul	r9, r25
    21aa:	00 0d       	add	r16, r0
    21ac:	11 24       	eor	r1, r1
    21ae:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <_ZL16currentCharacterv>
    21b2:	98 2f       	mov	r25, r24
    21b4:	97 7f       	andi	r25, 0xF7	; 247
    21b6:	93 32       	cpi	r25, 0x23	; 35
    21b8:	61 f4       	brne	.+24     	; 0x21d2 <_ZL8nextNotev+0x1f4>
    21ba:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    21be:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    21c2:	2f 5f       	subi	r18, 0xFF	; 255
    21c4:	3f 4f       	sbci	r19, 0xFF	; 255
    21c6:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    21ca:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    21ce:	0f 5f       	subi	r16, 0xFF	; 255
    21d0:	ee cf       	rjmp	.-36     	; 0x21ae <_ZL8nextNotev+0x1d0>
    21d2:	8d 32       	cpi	r24, 0x2D	; 45
    21d4:	71 f4       	brne	.+28     	; 0x21f2 <_ZL8nextNotev+0x214>
    21d6:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    21da:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    21de:	2f 5f       	subi	r18, 0xFF	; 255
    21e0:	3f 4f       	sbci	r19, 0xFF	; 255
    21e2:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    21e6:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    21ea:	01 50       	subi	r16, 0x01	; 1
    21ec:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <_ZL16currentCharacterv>
    21f0:	f0 cf       	rjmp	.-32     	; 0x21d2 <_ZL8nextNotev+0x1f4>
    21f2:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <_ZL8duration>
    21f6:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <_ZL8duration+0x1>
    21fa:	81 53       	subi	r24, 0x31	; 49
    21fc:	88 30       	cpi	r24, 0x08	; 8
    21fe:	50 f4       	brcc	.+20     	; 0x2214 <_ZL8nextNotev+0x236>
    2200:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    2204:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    2208:	0e 94 a0 0e 	call	0x1d40	; 0x1d40 <_ZL9getNumberv>
    220c:	bc 01       	movw	r22, r24
    220e:	c7 01       	movw	r24, r14
    2210:	0e 94 9c 1b 	call	0x3738	; 0x3738 <__udivmodhi4>
    2214:	7b 01       	movw	r14, r22
    2216:	f6 94       	lsr	r15
    2218:	e7 94       	ror	r14
    221a:	69 83       	std	Y+1, r22	; 0x01
    221c:	7a 83       	std	Y+2, r23	; 0x02
    221e:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <_ZL16currentCharacterv>
    2222:	69 81       	ldd	r22, Y+1	; 0x01
    2224:	7a 81       	ldd	r23, Y+2	; 0x02
    2226:	8e 32       	cpi	r24, 0x2E	; 46
    2228:	69 f4       	brne	.+26     	; 0x2244 <_ZL8nextNotev+0x266>
    222a:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    222e:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    2232:	2f 5f       	subi	r18, 0xFF	; 255
    2234:	3f 4f       	sbci	r19, 0xFF	; 255
    2236:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    223a:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    223e:	6e 0d       	add	r22, r14
    2240:	7f 1d       	adc	r23, r15
    2242:	e9 cf       	rjmp	.-46     	; 0x2216 <_ZL8nextNotev+0x238>
    2244:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <_ZL8staccato>
    2248:	88 23       	and	r24, r24
    224a:	39 f0       	breq	.+14     	; 0x225a <_ZL8nextNotev+0x27c>
    224c:	9b 01       	movw	r18, r22
    224e:	36 95       	lsr	r19
    2250:	27 95       	ror	r18
    2252:	20 93 97 01 	sts	0x0197, r18	; 0x800197 <_ZL22staccato_rest_duration>
    2256:	62 1b       	sub	r22, r18
    2258:	71 09       	sbc	r23, r1
    225a:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <_ZL6volume>
    225e:	11 23       	and	r17, r17
    2260:	11 f0       	breq	.+4      	; 0x2266 <_ZL8nextNotev+0x288>
    2262:	8f ef       	ldi	r24, 0xFF	; 255
    2264:	01 c0       	rjmp	.+2      	; 0x2268 <_ZL8nextNotev+0x28a>
    2266:	80 2f       	mov	r24, r16
    2268:	0e 94 9b 0f 	call	0x1f36	; 0x1f36 <_ZN15OrangutanBuzzer8playNoteEhjh>
    226c:	22 96       	adiw	r28, 0x02	; 2
    226e:	e0 e1       	ldi	r30, 0x10	; 16
    2270:	0c 94 4b 1c 	jmp	0x3896	; 0x3896 <__epilogue_restores__+0x4>

00002274 <__vector_13>:
    2274:	1f 92       	push	r1
    2276:	0f 92       	push	r0
    2278:	0f b6       	in	r0, 0x3f	; 63
    227a:	0f 92       	push	r0
    227c:	11 24       	eor	r1, r1
    227e:	2f 93       	push	r18
    2280:	3f 93       	push	r19
    2282:	4f 93       	push	r20
    2284:	5f 93       	push	r21
    2286:	6f 93       	push	r22
    2288:	7f 93       	push	r23
    228a:	8f 93       	push	r24
    228c:	9f 93       	push	r25
    228e:	af 93       	push	r26
    2290:	bf 93       	push	r27
    2292:	ef 93       	push	r30
    2294:	ff 93       	push	r31
    2296:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <_ZL13buzzerTimeout>
    229a:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <_ZL13buzzerTimeout+0x1>
    229e:	9c 01       	movw	r18, r24
    22a0:	21 50       	subi	r18, 0x01	; 1
    22a2:	31 09       	sbc	r19, r1
    22a4:	30 93 9c 01 	sts	0x019C, r19	; 0x80019c <_ZL13buzzerTimeout+0x1>
    22a8:	20 93 9b 01 	sts	0x019B, r18	; 0x80019b <_ZL13buzzerTimeout>
    22ac:	89 2b       	or	r24, r25
    22ae:	11 f5       	brne	.+68     	; 0x22f4 <__vector_13+0x80>
    22b0:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    22b4:	78 94       	sei
    22b6:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    22ba:	88 7f       	andi	r24, 0xF8	; 248
    22bc:	81 60       	ori	r24, 0x01	; 1
    22be:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    22c2:	80 e1       	ldi	r24, 0x10	; 16
    22c4:	97 e2       	ldi	r25, 0x27	; 39
    22c6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    22ca:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    22ce:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    22d2:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    22d6:	81 e0       	ldi	r24, 0x01	; 1
    22d8:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <buzzerFinished>
    22dc:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <__data_end>
    22e0:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <__data_end+0x1>
    22e4:	89 2b       	or	r24, r25
    22e6:	31 f0       	breq	.+12     	; 0x22f4 <__vector_13+0x80>
    22e8:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <_ZL17play_mode_setting>
    22ec:	81 11       	cpse	r24, r1
    22ee:	02 c0       	rjmp	.+4      	; 0x22f4 <__vector_13+0x80>
    22f0:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <_ZL8nextNotev>
    22f4:	ff 91       	pop	r31
    22f6:	ef 91       	pop	r30
    22f8:	bf 91       	pop	r27
    22fa:	af 91       	pop	r26
    22fc:	9f 91       	pop	r25
    22fe:	8f 91       	pop	r24
    2300:	7f 91       	pop	r23
    2302:	6f 91       	pop	r22
    2304:	5f 91       	pop	r21
    2306:	4f 91       	pop	r20
    2308:	3f 91       	pop	r19
    230a:	2f 91       	pop	r18
    230c:	0f 90       	pop	r0
    230e:	0f be       	out	0x3f, r0	; 63
    2310:	0f 90       	pop	r0
    2312:	1f 90       	pop	r1
    2314:	18 95       	reti

00002316 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    2316:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    231a:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <__data_end+0x1>
    231e:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <__data_end>
    2322:	81 e0       	ldi	r24, 0x01	; 1
    2324:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <_ZL17use_program_space>
    2328:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_ZL22staccato_rest_duration>
    232c:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <_ZL8nextNotev>
    2330:	08 95       	ret

00002332 <play_from_program_space>:
    2332:	0e 94 8b 11 	call	0x2316	; 0x2316 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    2336:	08 95       	ret

00002338 <delay_us.constprop.0>:
    2338:	81 e0       	ldi	r24, 0x01	; 1
    233a:	90 e0       	ldi	r25, 0x00	; 0
    233c:	6f 93       	push	r22
    233e:	64 e0       	ldi	r22, 0x04	; 4
    2340:	6a 95       	dec	r22
    2342:	f1 f7       	brne	.-4      	; 0x2340 <delay_us.constprop.0+0x8>
    2344:	6f 91       	pop	r22
    2346:	01 97       	sbiw	r24, 0x01	; 1
    2348:	c9 f7       	brne	.-14     	; 0x233c <delay_us.constprop.0+0x4>
    234a:	08 95       	ret

0000234c <_ZN12OrangutanLCD8busyWaitEv>:
    234c:	0f 93       	push	r16
    234e:	1f 93       	push	r17
    2350:	cf 93       	push	r28
    2352:	df 93       	push	r29
    2354:	1a b1       	in	r17, 0x0a	; 10
    2356:	57 98       	cbi	0x0a, 7	; 10
    2358:	5a 98       	cbi	0x0b, 2	; 11
    235a:	28 9a       	sbi	0x05, 0	; 5
    235c:	c0 e0       	ldi	r28, 0x00	; 0
    235e:	d0 e0       	ldi	r29, 0x00	; 0
    2360:	0e 94 9c 11 	call	0x2338	; 0x2338 <delay_us.constprop.0>
    2364:	5c 9a       	sbi	0x0b, 4	; 11
    2366:	0e 94 9c 11 	call	0x2338	; 0x2338 <delay_us.constprop.0>
    236a:	09 b1       	in	r16, 0x09	; 9
    236c:	5c 98       	cbi	0x0b, 4	; 11
    236e:	0e 94 9c 11 	call	0x2338	; 0x2338 <delay_us.constprop.0>
    2372:	5c 9a       	sbi	0x0b, 4	; 11
    2374:	0e 94 9c 11 	call	0x2338	; 0x2338 <delay_us.constprop.0>
    2378:	5c 98       	cbi	0x0b, 4	; 11
    237a:	24 96       	adiw	r28, 0x04	; 4
    237c:	07 ff       	sbrs	r16, 7
    237e:	10 c0       	rjmp	.+32     	; 0x23a0 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    2380:	ae 01       	movw	r20, r28
    2382:	60 e0       	ldi	r22, 0x00	; 0
    2384:	70 e0       	ldi	r23, 0x00	; 0
    2386:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <lcdTimeout>
    238a:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <lcdTimeout+0x1>
    238e:	a0 91 9f 01 	lds	r26, 0x019F	; 0x80019f <lcdTimeout+0x2>
    2392:	b0 91 a0 01 	lds	r27, 0x01A0	; 0x8001a0 <lcdTimeout+0x3>
    2396:	48 17       	cp	r20, r24
    2398:	59 07       	cpc	r21, r25
    239a:	6a 07       	cpc	r22, r26
    239c:	7b 07       	cpc	r23, r27
    239e:	00 f3       	brcs	.-64     	; 0x2360 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    23a0:	1a b9       	out	0x0a, r17	; 10
    23a2:	df 91       	pop	r29
    23a4:	cf 91       	pop	r28
    23a6:	1f 91       	pop	r17
    23a8:	0f 91       	pop	r16
    23aa:	08 95       	ret

000023ac <_ZN12OrangutanLCD8sendDataEh>:
    23ac:	95 b1       	in	r25, 0x05	; 5
    23ae:	28 2f       	mov	r18, r24
    23b0:	21 70       	andi	r18, 0x01	; 1
    23b2:	30 e0       	ldi	r19, 0x00	; 0
    23b4:	22 0f       	add	r18, r18
    23b6:	33 1f       	adc	r19, r19
    23b8:	48 2f       	mov	r20, r24
    23ba:	46 70       	andi	r20, 0x06	; 6
    23bc:	68 e0       	ldi	r22, 0x08	; 8
    23be:	46 9f       	mul	r20, r22
    23c0:	a0 01       	movw	r20, r0
    23c2:	11 24       	eor	r1, r1
    23c4:	24 2b       	or	r18, r20
    23c6:	9d 7c       	andi	r25, 0xCD	; 205
    23c8:	29 2b       	or	r18, r25
    23ca:	25 b9       	out	0x05, r18	; 5
    23cc:	9b b1       	in	r25, 0x0b	; 11
    23ce:	88 70       	andi	r24, 0x08	; 8
    23d0:	82 95       	swap	r24
    23d2:	80 7f       	andi	r24, 0xF0	; 240
    23d4:	9f 77       	andi	r25, 0x7F	; 127
    23d6:	89 2b       	or	r24, r25
    23d8:	8b b9       	out	0x0b, r24	; 11
    23da:	5c 9a       	sbi	0x0b, 4	; 11
    23dc:	0e 94 9c 11 	call	0x2338	; 0x2338 <delay_us.constprop.0>
    23e0:	5c 98       	cbi	0x0b, 4	; 11
    23e2:	0e 94 9c 11 	call	0x2338	; 0x2338 <delay_us.constprop.0>
    23e6:	08 95       	ret

000023e8 <_ZN12OrangutanLCD4sendEhhh>:
    23e8:	a0 e0       	ldi	r26, 0x00	; 0
    23ea:	b0 e0       	ldi	r27, 0x00	; 0
    23ec:	ea ef       	ldi	r30, 0xFA	; 250
    23ee:	f1 e1       	ldi	r31, 0x11	; 17
    23f0:	0c 94 38 1c 	jmp	0x3870	; 0x3870 <__prologue_saves__+0x16>
    23f4:	c8 2f       	mov	r28, r24
    23f6:	d6 2e       	mov	r13, r22
    23f8:	e4 2e       	mov	r14, r20
    23fa:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <_ZZN12OrangutanLCD4initEvE11initialized>
    23fe:	81 11       	cpse	r24, r1
    2400:	05 c0       	rjmp	.+10     	; 0x240c <_ZN12OrangutanLCD4sendEhhh+0x24>
    2402:	81 e0       	ldi	r24, 0x01	; 1
    2404:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <_ZZN12OrangutanLCD4initEvE11initialized>
    2408:	0e 94 3d 12 	call	0x247a	; 0x247a <_ZN12OrangutanLCD5init2Ev>
    240c:	0e 94 a6 11 	call	0x234c	; 0x234c <_ZN12OrangutanLCD8busyWaitEv>
    2410:	14 b1       	in	r17, 0x04	; 4
    2412:	d5 b1       	in	r29, 0x05	; 5
    2414:	fa b0       	in	r15, 0x0a	; 10
    2416:	0b b1       	in	r16, 0x0b	; 11
    2418:	28 98       	cbi	0x05, 0	; 5
    241a:	dd 20       	and	r13, r13
    241c:	11 f0       	breq	.+4      	; 0x2422 <_ZN12OrangutanLCD4sendEhhh+0x3a>
    241e:	5a 9a       	sbi	0x0b, 2	; 11
    2420:	01 c0       	rjmp	.+2      	; 0x2424 <_ZN12OrangutanLCD4sendEhhh+0x3c>
    2422:	5a 98       	cbi	0x0b, 2	; 11
    2424:	94 b1       	in	r25, 0x04	; 4
    2426:	92 63       	ori	r25, 0x32	; 50
    2428:	94 b9       	out	0x04, r25	; 4
    242a:	57 9a       	sbi	0x0a, 7	; 10
    242c:	81 e0       	ldi	r24, 0x01	; 1
    242e:	e8 16       	cp	r14, r24
    2430:	29 f0       	breq	.+10     	; 0x243c <_ZN12OrangutanLCD4sendEhhh+0x54>
    2432:	8c 2f       	mov	r24, r28
    2434:	82 95       	swap	r24
    2436:	8f 70       	andi	r24, 0x0F	; 15
    2438:	0e 94 d6 11 	call	0x23ac	; 0x23ac <_ZN12OrangutanLCD8sendDataEh>
    243c:	8c 2f       	mov	r24, r28
    243e:	8f 70       	andi	r24, 0x0F	; 15
    2440:	0e 94 d6 11 	call	0x23ac	; 0x23ac <_ZN12OrangutanLCD8sendDataEh>
    2444:	fa b8       	out	0x0a, r15	; 10
    2446:	0b b9       	out	0x0b, r16	; 11
    2448:	14 b9       	out	0x04, r17	; 4
    244a:	d5 b9       	out	0x05, r29	; 5
    244c:	cd b7       	in	r28, 0x3d	; 61
    244e:	de b7       	in	r29, 0x3e	; 62
    2450:	e7 e0       	ldi	r30, 0x07	; 7
    2452:	0c 94 54 1c 	jmp	0x38a8	; 0x38a8 <__epilogue_restores__+0x16>

00002456 <_ZN12OrangutanLCD8send_cmdEh>:
    2456:	42 e0       	ldi	r20, 0x02	; 2
    2458:	60 e0       	ldi	r22, 0x00	; 0
    245a:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <_ZN12OrangutanLCD4sendEhhh>
    245e:	08 95       	ret

00002460 <_ZN12OrangutanLCD9send_dataEh>:
    2460:	42 e0       	ldi	r20, 0x02	; 2
    2462:	61 e0       	ldi	r22, 0x01	; 1
    2464:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <_ZN12OrangutanLCD4sendEhhh>
    2468:	08 95       	ret

0000246a <print_character>:
    246a:	0e 94 30 12 	call	0x2460	; 0x2460 <_ZN12OrangutanLCD9send_dataEh>
    246e:	08 95       	ret

00002470 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    2470:	41 e0       	ldi	r20, 0x01	; 1
    2472:	60 e0       	ldi	r22, 0x00	; 0
    2474:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <_ZN12OrangutanLCD4sendEhhh>
    2478:	08 95       	ret

0000247a <_ZN12OrangutanLCD5init2Ev>:
    247a:	80 e1       	ldi	r24, 0x10	; 16
    247c:	97 e2       	ldi	r25, 0x27	; 39
    247e:	a0 e0       	ldi	r26, 0x00	; 0
    2480:	b0 e0       	ldi	r27, 0x00	; 0
    2482:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <lcdTimeout>
    2486:	90 93 9e 01 	sts	0x019E, r25	; 0x80019e <lcdTimeout+0x1>
    248a:	a0 93 9f 01 	sts	0x019F, r26	; 0x80019f <lcdTimeout+0x2>
    248e:	b0 93 a0 01 	sts	0x01A0, r27	; 0x8001a0 <lcdTimeout+0x3>
    2492:	52 9a       	sbi	0x0a, 2	; 10
    2494:	20 9a       	sbi	0x04, 0	; 4
    2496:	54 9a       	sbi	0x0a, 4	; 10
    2498:	8e e1       	ldi	r24, 0x1E	; 30
    249a:	90 e0       	ldi	r25, 0x00	; 0
    249c:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <delay_ms>
    24a0:	83 e0       	ldi	r24, 0x03	; 3
    24a2:	0e 94 38 12 	call	0x2470	; 0x2470 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    24a6:	86 e0       	ldi	r24, 0x06	; 6
    24a8:	90 e0       	ldi	r25, 0x00	; 0
    24aa:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <delay_ms>
    24ae:	83 e0       	ldi	r24, 0x03	; 3
    24b0:	0e 94 38 12 	call	0x2470	; 0x2470 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    24b4:	82 e0       	ldi	r24, 0x02	; 2
    24b6:	90 e0       	ldi	r25, 0x00	; 0
    24b8:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <delay_ms>
    24bc:	83 e0       	ldi	r24, 0x03	; 3
    24be:	0e 94 38 12 	call	0x2470	; 0x2470 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    24c2:	82 e0       	ldi	r24, 0x02	; 2
    24c4:	90 e0       	ldi	r25, 0x00	; 0
    24c6:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <delay_ms>
    24ca:	82 e0       	ldi	r24, 0x02	; 2
    24cc:	0e 94 38 12 	call	0x2470	; 0x2470 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    24d0:	82 e0       	ldi	r24, 0x02	; 2
    24d2:	90 e0       	ldi	r25, 0x00	; 0
    24d4:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <delay_ms>
    24d8:	88 e2       	ldi	r24, 0x28	; 40
    24da:	0e 94 2b 12 	call	0x2456	; 0x2456 <_ZN12OrangutanLCD8send_cmdEh>
    24de:	88 e0       	ldi	r24, 0x08	; 8
    24e0:	0e 94 2b 12 	call	0x2456	; 0x2456 <_ZN12OrangutanLCD8send_cmdEh>
    24e4:	81 e0       	ldi	r24, 0x01	; 1
    24e6:	0e 94 2b 12 	call	0x2456	; 0x2456 <_ZN12OrangutanLCD8send_cmdEh>
    24ea:	86 e0       	ldi	r24, 0x06	; 6
    24ec:	0e 94 2b 12 	call	0x2456	; 0x2456 <_ZN12OrangutanLCD8send_cmdEh>
    24f0:	8c e0       	ldi	r24, 0x0C	; 12
    24f2:	0e 94 2b 12 	call	0x2456	; 0x2456 <_ZN12OrangutanLCD8send_cmdEh>
    24f6:	08 95       	ret

000024f8 <_ZN12OrangutanLCD5clearEv>:
    24f8:	81 e0       	ldi	r24, 0x01	; 1
    24fa:	0e 94 2b 12 	call	0x2456	; 0x2456 <_ZN12OrangutanLCD8send_cmdEh>
    24fe:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <printf_chars>
    2502:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <printf_chars+0x1>
    2506:	89 2b       	or	r24, r25
    2508:	f9 f0       	breq	.+62     	; 0x2548 <_ZN12OrangutanLCD5clearEv+0x50>
    250a:	60 e0       	ldi	r22, 0x00	; 0
    250c:	a0 e2       	ldi	r26, 0x20	; 32
    250e:	26 2f       	mov	r18, r22
    2510:	30 e0       	ldi	r19, 0x00	; 0
    2512:	70 91 0c 01 	lds	r23, 0x010C	; 0x80010c <numLCDCols>
    2516:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <numLCDRows>
    251a:	90 e0       	ldi	r25, 0x00	; 0
    251c:	01 97       	sbiw	r24, 0x01	; 1
    251e:	78 9f       	mul	r23, r24
    2520:	a0 01       	movw	r20, r0
    2522:	79 9f       	mul	r23, r25
    2524:	50 0d       	add	r21, r0
    2526:	11 24       	eor	r1, r1
    2528:	24 17       	cp	r18, r20
    252a:	35 07       	cpc	r19, r21
    252c:	4c f4       	brge	.+18     	; 0x2540 <_ZN12OrangutanLCD5clearEv+0x48>
    252e:	e0 91 a3 01 	lds	r30, 0x01A3	; 0x8001a3 <printf_chars>
    2532:	f0 91 a4 01 	lds	r31, 0x01A4	; 0x8001a4 <printf_chars+0x1>
    2536:	e2 0f       	add	r30, r18
    2538:	f3 1f       	adc	r31, r19
    253a:	a0 83       	st	Z, r26
    253c:	6f 5f       	subi	r22, 0xFF	; 255
    253e:	e7 cf       	rjmp	.-50     	; 0x250e <_ZN12OrangutanLCD5clearEv+0x16>
    2540:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <col>
    2544:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <row>
    2548:	08 95       	ret

0000254a <clear>:
    254a:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <_ZN12OrangutanLCD5clearEv>
    254e:	08 95       	ret

00002550 <_ZN12OrangutanLCD5printEPKc>:
    2550:	cf 93       	push	r28
    2552:	df 93       	push	r29
    2554:	ec 01       	movw	r28, r24
    2556:	89 91       	ld	r24, Y+
    2558:	88 23       	and	r24, r24
    255a:	19 f0       	breq	.+6      	; 0x2562 <_ZN12OrangutanLCD5printEPKc+0x12>
    255c:	0e 94 30 12 	call	0x2460	; 0x2460 <_ZN12OrangutanLCD9send_dataEh>
    2560:	fa cf       	rjmp	.-12     	; 0x2556 <_ZN12OrangutanLCD5printEPKc+0x6>
    2562:	df 91       	pop	r29
    2564:	cf 91       	pop	r28
    2566:	08 95       	ret

00002568 <print>:
    2568:	0e 94 a8 12 	call	0x2550	; 0x2550 <_ZN12OrangutanLCD5printEPKc>
    256c:	08 95       	ret

0000256e <_ZN12OrangutanLCD5printEm>:
    256e:	aa e0       	ldi	r26, 0x0A	; 10
    2570:	b0 e0       	ldi	r27, 0x00	; 0
    2572:	ed eb       	ldi	r30, 0xBD	; 189
    2574:	f2 e1       	ldi	r31, 0x12	; 18
    2576:	0c 94 37 1c 	jmp	0x386e	; 0x386e <__prologue_saves__+0x14>
    257a:	1a e0       	ldi	r17, 0x0A	; 10
    257c:	5a e0       	ldi	r21, 0x0A	; 10
    257e:	c5 2e       	mov	r12, r21
    2580:	d1 2c       	mov	r13, r1
    2582:	e1 2c       	mov	r14, r1
    2584:	f1 2c       	mov	r15, r1
    2586:	06 2f       	mov	r16, r22
    2588:	a7 01       	movw	r20, r14
    258a:	96 01       	movw	r18, r12
    258c:	0e 94 c4 1b 	call	0x3788	; 0x3788 <__udivmodsi4>
    2590:	ca 01       	movw	r24, r20
    2592:	b9 01       	movw	r22, r18
    2594:	11 50       	subi	r17, 0x01	; 1
    2596:	e1 e0       	ldi	r30, 0x01	; 1
    2598:	f0 e0       	ldi	r31, 0x00	; 0
    259a:	ec 0f       	add	r30, r28
    259c:	fd 1f       	adc	r31, r29
    259e:	e1 0f       	add	r30, r17
    25a0:	f1 1d       	adc	r31, r1
    25a2:	00 5d       	subi	r16, 0xD0	; 208
    25a4:	2a e0       	ldi	r18, 0x0A	; 10
    25a6:	62 9f       	mul	r22, r18
    25a8:	00 19       	sub	r16, r0
    25aa:	11 24       	eor	r1, r1
    25ac:	00 83       	st	Z, r16
    25ae:	61 15       	cp	r22, r1
    25b0:	71 05       	cpc	r23, r1
    25b2:	81 05       	cpc	r24, r1
    25b4:	91 05       	cpc	r25, r1
    25b6:	39 f7       	brne	.-50     	; 0x2586 <_ZN12OrangutanLCD5printEm+0x18>
    25b8:	1a 30       	cpi	r17, 0x0A	; 10
    25ba:	58 f4       	brcc	.+22     	; 0x25d2 <_ZN12OrangutanLCD5printEm+0x64>
    25bc:	e1 e0       	ldi	r30, 0x01	; 1
    25be:	f0 e0       	ldi	r31, 0x00	; 0
    25c0:	ec 0f       	add	r30, r28
    25c2:	fd 1f       	adc	r31, r29
    25c4:	e1 0f       	add	r30, r17
    25c6:	f1 1d       	adc	r31, r1
    25c8:	80 81       	ld	r24, Z
    25ca:	0e 94 30 12 	call	0x2460	; 0x2460 <_ZN12OrangutanLCD9send_dataEh>
    25ce:	1f 5f       	subi	r17, 0xFF	; 255
    25d0:	f3 cf       	rjmp	.-26     	; 0x25b8 <_ZN12OrangutanLCD5printEm+0x4a>
    25d2:	2a 96       	adiw	r28, 0x0a	; 10
    25d4:	e8 e0       	ldi	r30, 0x08	; 8
    25d6:	0c 94 53 1c 	jmp	0x38a6	; 0x38a6 <__epilogue_restores__+0x14>

000025da <_ZN12OrangutanLCD5printEl>:
    25da:	cf 92       	push	r12
    25dc:	df 92       	push	r13
    25de:	ef 92       	push	r14
    25e0:	ff 92       	push	r15
    25e2:	6b 01       	movw	r12, r22
    25e4:	7c 01       	movw	r14, r24
    25e6:	97 ff       	sbrs	r25, 7
    25e8:	0b c0       	rjmp	.+22     	; 0x2600 <_ZN12OrangutanLCD5printEl+0x26>
    25ea:	f0 94       	com	r15
    25ec:	e0 94       	com	r14
    25ee:	d0 94       	com	r13
    25f0:	c0 94       	com	r12
    25f2:	c1 1c       	adc	r12, r1
    25f4:	d1 1c       	adc	r13, r1
    25f6:	e1 1c       	adc	r14, r1
    25f8:	f1 1c       	adc	r15, r1
    25fa:	8d e2       	ldi	r24, 0x2D	; 45
    25fc:	0e 94 30 12 	call	0x2460	; 0x2460 <_ZN12OrangutanLCD9send_dataEh>
    2600:	c7 01       	movw	r24, r14
    2602:	b6 01       	movw	r22, r12
    2604:	0e 94 b7 12 	call	0x256e	; 0x256e <_ZN12OrangutanLCD5printEm>
    2608:	ff 90       	pop	r15
    260a:	ef 90       	pop	r14
    260c:	df 90       	pop	r13
    260e:	cf 90       	pop	r12
    2610:	08 95       	ret

00002612 <print_long>:
    2612:	0e 94 ed 12 	call	0x25da	; 0x25da <_ZN12OrangutanLCD5printEl>
    2616:	08 95       	ret

00002618 <_ZN12OrangutanLCD6gotoXYEhh>:
    2618:	a5 e0       	ldi	r26, 0x05	; 5
    261a:	b0 e0       	ldi	r27, 0x00	; 0
    261c:	e2 e1       	ldi	r30, 0x12	; 18
    261e:	f3 e1       	ldi	r31, 0x13	; 19
    2620:	0c 94 3c 1c 	jmp	0x3878	; 0x3878 <__prologue_saves__+0x1e>
    2624:	18 2f       	mov	r17, r24
    2626:	80 e8       	ldi	r24, 0x80	; 128
    2628:	89 83       	std	Y+1, r24	; 0x01
    262a:	80 ec       	ldi	r24, 0xC0	; 192
    262c:	8a 83       	std	Y+2, r24	; 0x02
    262e:	84 e9       	ldi	r24, 0x94	; 148
    2630:	8b 83       	std	Y+3, r24	; 0x03
    2632:	84 ed       	ldi	r24, 0xD4	; 212
    2634:	8c 83       	std	Y+4, r24	; 0x04
    2636:	fe 01       	movw	r30, r28
    2638:	e6 0f       	add	r30, r22
    263a:	f1 1d       	adc	r31, r1
    263c:	81 81       	ldd	r24, Z+1	; 0x01
    263e:	81 0f       	add	r24, r17
    2640:	6d 83       	std	Y+5, r22	; 0x05
    2642:	0e 94 2b 12 	call	0x2456	; 0x2456 <_ZN12OrangutanLCD8send_cmdEh>
    2646:	10 93 a1 01 	sts	0x01A1, r17	; 0x8001a1 <col>
    264a:	6d 81       	ldd	r22, Y+5	; 0x05
    264c:	60 93 a2 01 	sts	0x01A2, r22	; 0x8001a2 <row>
    2650:	25 96       	adiw	r28, 0x05	; 5
    2652:	e3 e0       	ldi	r30, 0x03	; 3
    2654:	0c 94 58 1c 	jmp	0x38b0	; 0x38b0 <__epilogue_restores__+0x1e>

00002658 <lcd_goto_xy>:
    2658:	0e 94 0c 13 	call	0x2618	; 0x2618 <_ZN12OrangutanLCD6gotoXYEhh>
    265c:	08 95       	ret

0000265e <_ZN16OrangutanDigital9setOutputEhh>:
    265e:	88 30       	cpi	r24, 0x08	; 8
    2660:	58 f4       	brcc	.+22     	; 0x2678 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    2662:	91 e0       	ldi	r25, 0x01	; 1
    2664:	01 c0       	rjmp	.+2      	; 0x2668 <_ZN16OrangutanDigital9setOutputEhh+0xa>
    2666:	99 0f       	add	r25, r25
    2668:	8a 95       	dec	r24
    266a:	ea f7       	brpl	.-6      	; 0x2666 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    266c:	89 2f       	mov	r24, r25
    266e:	aa e2       	ldi	r26, 0x2A	; 42
    2670:	b0 e0       	ldi	r27, 0x00	; 0
    2672:	eb e2       	ldi	r30, 0x2B	; 43
    2674:	f0 e0       	ldi	r31, 0x00	; 0
    2676:	21 c0       	rjmp	.+66     	; 0x26ba <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    2678:	8e 30       	cpi	r24, 0x0E	; 14
    267a:	60 f4       	brcc	.+24     	; 0x2694 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    267c:	98 ef       	ldi	r25, 0xF8	; 248
    267e:	98 0f       	add	r25, r24
    2680:	81 e0       	ldi	r24, 0x01	; 1
    2682:	01 c0       	rjmp	.+2      	; 0x2686 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    2684:	88 0f       	add	r24, r24
    2686:	9a 95       	dec	r25
    2688:	ea f7       	brpl	.-6      	; 0x2684 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    268a:	a4 e2       	ldi	r26, 0x24	; 36
    268c:	b0 e0       	ldi	r27, 0x00	; 0
    268e:	e5 e2       	ldi	r30, 0x25	; 37
    2690:	f0 e0       	ldi	r31, 0x00	; 0
    2692:	13 c0       	rjmp	.+38     	; 0x26ba <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    2694:	85 31       	cpi	r24, 0x15	; 21
    2696:	60 f4       	brcc	.+24     	; 0x26b0 <_ZN16OrangutanDigital9setOutputEhh+0x52>
    2698:	92 ef       	ldi	r25, 0xF2	; 242
    269a:	98 0f       	add	r25, r24
    269c:	81 e0       	ldi	r24, 0x01	; 1
    269e:	01 c0       	rjmp	.+2      	; 0x26a2 <_ZN16OrangutanDigital9setOutputEhh+0x44>
    26a0:	88 0f       	add	r24, r24
    26a2:	9a 95       	dec	r25
    26a4:	ea f7       	brpl	.-6      	; 0x26a0 <_ZN16OrangutanDigital9setOutputEhh+0x42>
    26a6:	a7 e2       	ldi	r26, 0x27	; 39
    26a8:	b0 e0       	ldi	r27, 0x00	; 0
    26aa:	e8 e2       	ldi	r30, 0x28	; 40
    26ac:	f0 e0       	ldi	r31, 0x00	; 0
    26ae:	05 c0       	rjmp	.+10     	; 0x26ba <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    26b0:	80 e0       	ldi	r24, 0x00	; 0
    26b2:	a0 e0       	ldi	r26, 0x00	; 0
    26b4:	b0 e0       	ldi	r27, 0x00	; 0
    26b6:	e0 e0       	ldi	r30, 0x00	; 0
    26b8:	f0 e0       	ldi	r31, 0x00	; 0
    26ba:	6f 3f       	cpi	r22, 0xFF	; 255
    26bc:	19 f4       	brne	.+6      	; 0x26c4 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    26be:	90 81       	ld	r25, Z
    26c0:	98 27       	eor	r25, r24
    26c2:	09 c0       	rjmp	.+18     	; 0x26d6 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    26c4:	66 23       	and	r22, r22
    26c6:	19 f0       	breq	.+6      	; 0x26ce <_ZN16OrangutanDigital9setOutputEhh+0x70>
    26c8:	90 81       	ld	r25, Z
    26ca:	98 2b       	or	r25, r24
    26cc:	04 c0       	rjmp	.+8      	; 0x26d6 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    26ce:	20 81       	ld	r18, Z
    26d0:	98 2f       	mov	r25, r24
    26d2:	90 95       	com	r25
    26d4:	92 23       	and	r25, r18
    26d6:	90 83       	st	Z, r25
    26d8:	9c 91       	ld	r25, X
    26da:	98 2b       	or	r25, r24
    26dc:	9c 93       	st	X, r25
    26de:	08 95       	ret

000026e0 <_ZN15OrangutanMotors5init2Ev>:
    26e0:	83 ef       	ldi	r24, 0xF3	; 243
    26e2:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    26e6:	84 bd       	out	0x24, r24	; 36
    26e8:	82 e0       	ldi	r24, 0x02	; 2
    26ea:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    26ee:	85 bd       	out	0x25, r24	; 37
    26f0:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    26f4:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    26f8:	18 bc       	out	0x28, r1	; 40
    26fa:	17 bc       	out	0x27, r1	; 39
    26fc:	60 e0       	ldi	r22, 0x00	; 0
    26fe:	86 e0       	ldi	r24, 0x06	; 6
    2700:	0e 94 2f 13 	call	0x265e	; 0x265e <_ZN16OrangutanDigital9setOutputEhh>
    2704:	60 e0       	ldi	r22, 0x00	; 0
    2706:	85 e0       	ldi	r24, 0x05	; 5
    2708:	0e 94 2f 13 	call	0x265e	; 0x265e <_ZN16OrangutanDigital9setOutputEhh>
    270c:	60 e0       	ldi	r22, 0x00	; 0
    270e:	8b e0       	ldi	r24, 0x0B	; 11
    2710:	0e 94 2f 13 	call	0x265e	; 0x265e <_ZN16OrangutanDigital9setOutputEhh>
    2714:	60 e0       	ldi	r22, 0x00	; 0
    2716:	83 e0       	ldi	r24, 0x03	; 3
    2718:	0e 94 2f 13 	call	0x265e	; 0x265e <_ZN16OrangutanDigital9setOutputEhh>
    271c:	08 95       	ret

0000271e <_ZN15OrangutanMotors4initEv>:
    271e:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <_ZZN15OrangutanMotors4initEvE11initialized>
    2722:	81 11       	cpse	r24, r1
    2724:	05 c0       	rjmp	.+10     	; 0x2730 <_ZN15OrangutanMotors4initEv+0x12>
    2726:	81 e0       	ldi	r24, 0x01	; 1
    2728:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <_ZZN15OrangutanMotors4initEvE11initialized>
    272c:	0e 94 70 13 	call	0x26e0	; 0x26e0 <_ZN15OrangutanMotors5init2Ev>
    2730:	08 95       	ret

00002732 <_ZN15OrangutanMotors10setM1SpeedEi>:
    2732:	cf 93       	push	r28
    2734:	df 93       	push	r29
    2736:	ec 01       	movw	r28, r24
    2738:	0e 94 8f 13 	call	0x271e	; 0x271e <_ZN15OrangutanMotors4initEv>
    273c:	d7 ff       	sbrs	r29, 7
    273e:	05 c0       	rjmp	.+10     	; 0x274a <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    2740:	d1 95       	neg	r29
    2742:	c1 95       	neg	r28
    2744:	d1 09       	sbc	r29, r1
    2746:	81 e0       	ldi	r24, 0x01	; 1
    2748:	01 c0       	rjmp	.+2      	; 0x274c <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    274a:	80 e0       	ldi	r24, 0x00	; 0
    274c:	cf 3f       	cpi	r28, 0xFF	; 255
    274e:	d1 05       	cpc	r29, r1
    2750:	19 f0       	breq	.+6      	; 0x2758 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    2752:	14 f0       	brlt	.+4      	; 0x2758 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    2754:	cf ef       	ldi	r28, 0xFF	; 255
    2756:	d0 e0       	ldi	r29, 0x00	; 0
    2758:	88 23       	and	r24, r24
    275a:	19 f0       	breq	.+6      	; 0x2762 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    275c:	18 bc       	out	0x28, r1	; 40
    275e:	c7 bd       	out	0x27, r28	; 39
    2760:	02 c0       	rjmp	.+4      	; 0x2766 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    2762:	c8 bd       	out	0x28, r28	; 40
    2764:	17 bc       	out	0x27, r1	; 39
    2766:	df 91       	pop	r29
    2768:	cf 91       	pop	r28
    276a:	08 95       	ret

0000276c <_ZN15OrangutanMotors10setM2SpeedEi>:
    276c:	cf 93       	push	r28
    276e:	df 93       	push	r29
    2770:	ec 01       	movw	r28, r24
    2772:	0e 94 8f 13 	call	0x271e	; 0x271e <_ZN15OrangutanMotors4initEv>
    2776:	d7 ff       	sbrs	r29, 7
    2778:	05 c0       	rjmp	.+10     	; 0x2784 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    277a:	d1 95       	neg	r29
    277c:	c1 95       	neg	r28
    277e:	d1 09       	sbc	r29, r1
    2780:	81 e0       	ldi	r24, 0x01	; 1
    2782:	01 c0       	rjmp	.+2      	; 0x2786 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    2784:	80 e0       	ldi	r24, 0x00	; 0
    2786:	cf 3f       	cpi	r28, 0xFF	; 255
    2788:	d1 05       	cpc	r29, r1
    278a:	19 f0       	breq	.+6      	; 0x2792 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    278c:	14 f0       	brlt	.+4      	; 0x2792 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    278e:	cf ef       	ldi	r28, 0xFF	; 255
    2790:	d0 e0       	ldi	r29, 0x00	; 0
    2792:	88 23       	and	r24, r24
    2794:	29 f0       	breq	.+10     	; 0x27a0 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    2796:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    279a:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    279e:	04 c0       	rjmp	.+8      	; 0x27a8 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    27a0:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    27a4:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    27a8:	df 91       	pop	r29
    27aa:	cf 91       	pop	r28
    27ac:	08 95       	ret

000027ae <_ZN15OrangutanMotors9setSpeedsEii>:
    27ae:	cf 93       	push	r28
    27b0:	df 93       	push	r29
    27b2:	eb 01       	movw	r28, r22
    27b4:	0e 94 99 13 	call	0x2732	; 0x2732 <_ZN15OrangutanMotors10setM1SpeedEi>
    27b8:	ce 01       	movw	r24, r28
    27ba:	0e 94 b6 13 	call	0x276c	; 0x276c <_ZN15OrangutanMotors10setM2SpeedEi>
    27be:	df 91       	pop	r29
    27c0:	cf 91       	pop	r28
    27c2:	08 95       	ret

000027c4 <set_motors>:
    27c4:	0e 94 d7 13 	call	0x27ae	; 0x27ae <_ZN15OrangutanMotors9setSpeedsEii>
    27c8:	08 95       	ret

000027ca <_ZN20OrangutanPushbuttons5init2Ev>:
    27ca:	84 b1       	in	r24, 0x04	; 4
    27cc:	8d 7c       	andi	r24, 0xCD	; 205
    27ce:	84 b9       	out	0x04, r24	; 4
    27d0:	85 b1       	in	r24, 0x05	; 5
    27d2:	82 63       	ori	r24, 0x32	; 50
    27d4:	85 b9       	out	0x05, r24	; 5
    27d6:	85 e0       	ldi	r24, 0x05	; 5
    27d8:	90 e0       	ldi	r25, 0x00	; 0
    27da:	6f 93       	push	r22
    27dc:	64 e0       	ldi	r22, 0x04	; 4
    27de:	6a 95       	dec	r22
    27e0:	f1 f7       	brne	.-4      	; 0x27de <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    27e2:	6f 91       	pop	r22
    27e4:	01 97       	sbiw	r24, 0x01	; 1
    27e6:	c9 f7       	brne	.-14     	; 0x27da <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    27e8:	08 95       	ret

000027ea <_ZN20OrangutanPushbuttons4initEv>:
    27ea:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    27ee:	81 11       	cpse	r24, r1
    27f0:	05 c0       	rjmp	.+10     	; 0x27fc <_ZN20OrangutanPushbuttons4initEv+0x12>
    27f2:	81 e0       	ldi	r24, 0x01	; 1
    27f4:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    27f8:	0e 94 e5 13 	call	0x27ca	; 0x27ca <_ZN20OrangutanPushbuttons5init2Ev>
    27fc:	08 95       	ret

000027fe <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    27fe:	cf 93       	push	r28
    2800:	c8 2f       	mov	r28, r24
    2802:	0e 94 f5 13 	call	0x27ea	; 0x27ea <_ZN20OrangutanPushbuttons4initEv>
    2806:	83 b1       	in	r24, 0x03	; 3
    2808:	8c 23       	and	r24, r28
    280a:	e9 f3       	breq	.-6      	; 0x2806 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    280c:	8a e0       	ldi	r24, 0x0A	; 10
    280e:	90 e0       	ldi	r25, 0x00	; 0
    2810:	0e 94 eb 15 	call	0x2bd6	; 0x2bd6 <delay_ms>
    2814:	83 b1       	in	r24, 0x03	; 3
    2816:	8c 23       	and	r24, r28
    2818:	b1 f3       	breq	.-20     	; 0x2806 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    281a:	83 b1       	in	r24, 0x03	; 3
    281c:	8c 23       	and	r24, r28
    281e:	cf 91       	pop	r28
    2820:	08 95       	ret

00002822 <wait_for_button_release>:
    2822:	0e 94 ff 13 	call	0x27fe	; 0x27fe <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    2826:	08 95       	ret

00002828 <_ZN20OrangutanPushbuttons9isPressedEh>:
    2828:	a1 e0       	ldi	r26, 0x01	; 1
    282a:	b0 e0       	ldi	r27, 0x00	; 0
    282c:	ea e1       	ldi	r30, 0x1A	; 26
    282e:	f4 e1       	ldi	r31, 0x14	; 20
    2830:	0c 94 3d 1c 	jmp	0x387a	; 0x387a <__prologue_saves__+0x20>
    2834:	89 83       	std	Y+1, r24	; 0x01
    2836:	0e 94 f5 13 	call	0x27ea	; 0x27ea <_ZN20OrangutanPushbuttons4initEv>
    283a:	93 b1       	in	r25, 0x03	; 3
    283c:	90 95       	com	r25
    283e:	89 81       	ldd	r24, Y+1	; 0x01
    2840:	89 23       	and	r24, r25
    2842:	21 96       	adiw	r28, 0x01	; 1
    2844:	e2 e0       	ldi	r30, 0x02	; 2
    2846:	0c 94 59 1c 	jmp	0x38b2	; 0x38b2 <__epilogue_restores__+0x20>

0000284a <button_is_pressed>:
    284a:	0e 94 14 14 	call	0x2828	; 0x2828 <_ZN20OrangutanPushbuttons9isPressedEh>
    284e:	08 95       	ret

00002850 <serial_receive_buffer_full>:
    2850:	20 91 a7 01 	lds	r18, 0x01A7	; 0x8001a7 <_ZN15OrangutanSerial5portsE+0x2>
    2854:	81 e0       	ldi	r24, 0x01	; 1
    2856:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <_ZN15OrangutanSerial5portsE+0x4>
    285a:	29 13       	cpse	r18, r25
    285c:	80 e0       	ldi	r24, 0x00	; 0
    285e:	08 95       	ret

00002860 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
    2860:	28 2f       	mov	r18, r24
    2862:	30 e0       	ldi	r19, 0x00	; 0
    2864:	9a e0       	ldi	r25, 0x0A	; 10
    2866:	89 9f       	mul	r24, r25
    2868:	f0 01       	movw	r30, r0
    286a:	11 24       	eor	r1, r1
    286c:	eb 55       	subi	r30, 0x5B	; 91
    286e:	fe 4f       	sbci	r31, 0xFE	; 254
    2870:	80 85       	ldd	r24, Z+8	; 0x08
    2872:	91 85       	ldd	r25, Z+9	; 0x09
    2874:	00 97       	sbiw	r24, 0x00	; 0
    2876:	21 f0       	breq	.+8      	; 0x2880 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    2878:	52 81       	ldd	r21, Z+2	; 0x02
    287a:	44 81       	ldd	r20, Z+4	; 0x04
    287c:	54 17       	cp	r21, r20
    287e:	80 f0       	brcs	.+32     	; 0x28a0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x40>
    2880:	8a e0       	ldi	r24, 0x0A	; 10
    2882:	82 9f       	mul	r24, r18
    2884:	f0 01       	movw	r30, r0
    2886:	83 9f       	mul	r24, r19
    2888:	f0 0d       	add	r31, r0
    288a:	11 24       	eor	r1, r1
    288c:	eb 55       	subi	r30, 0x5B	; 91
    288e:	fe 4f       	sbci	r31, 0xFE	; 254
    2890:	92 81       	ldd	r25, Z+2	; 0x02
    2892:	84 81       	ldd	r24, Z+4	; 0x04
    2894:	98 13       	cpse	r25, r24
    2896:	0e c0       	rjmp	.+28     	; 0x28b4 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x54>
    2898:	85 81       	ldd	r24, Z+5	; 0x05
    289a:	81 11       	cpse	r24, r1
    289c:	0a c0       	rjmp	.+20     	; 0x28b2 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
    289e:	08 95       	ret
    28a0:	42 81       	ldd	r20, Z+2	; 0x02
    28a2:	dc 01       	movw	r26, r24
    28a4:	a4 0f       	add	r26, r20
    28a6:	b1 1d       	adc	r27, r1
    28a8:	6c 93       	st	X, r22
    28aa:	82 81       	ldd	r24, Z+2	; 0x02
    28ac:	8f 5f       	subi	r24, 0xFF	; 255
    28ae:	82 83       	std	Z+2, r24	; 0x02
    28b0:	e7 cf       	rjmp	.-50     	; 0x2880 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    28b2:	12 82       	std	Z+2, r1	; 0x02
    28b4:	08 95       	ret

000028b6 <_ZN15OrangutanSerial15serial_rx_checkEh>:
    28b6:	cf 93       	push	r28
    28b8:	df 93       	push	r29
    28ba:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    28be:	9f 77       	andi	r25, 0x7F	; 127
    28c0:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    28c4:	c8 2f       	mov	r28, r24
    28c6:	d0 e0       	ldi	r29, 0x00	; 0
    28c8:	9a e0       	ldi	r25, 0x0A	; 10
    28ca:	89 9f       	mul	r24, r25
    28cc:	f0 01       	movw	r30, r0
    28ce:	11 24       	eor	r1, r1
    28d0:	eb 55       	subi	r30, 0x5B	; 91
    28d2:	fe 4f       	sbci	r31, 0xFE	; 254
    28d4:	20 85       	ldd	r18, Z+8	; 0x08
    28d6:	31 85       	ldd	r19, Z+9	; 0x09
    28d8:	23 2b       	or	r18, r19
    28da:	41 f0       	breq	.+16     	; 0x28ec <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    28dc:	22 81       	ldd	r18, Z+2	; 0x02
    28de:	94 81       	ldd	r25, Z+4	; 0x04
    28e0:	29 17       	cp	r18, r25
    28e2:	20 f4       	brcc	.+8      	; 0x28ec <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    28e4:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    28e8:	97 fd       	sbrc	r25, 7
    28ea:	11 c0       	rjmp	.+34     	; 0x290e <_ZN15OrangutanSerial15serial_rx_checkEh+0x58>
    28ec:	8a e0       	ldi	r24, 0x0A	; 10
    28ee:	8c 9f       	mul	r24, r28
    28f0:	f0 01       	movw	r30, r0
    28f2:	8d 9f       	mul	r24, r29
    28f4:	f0 0d       	add	r31, r0
    28f6:	11 24       	eor	r1, r1
    28f8:	eb 55       	subi	r30, 0x5B	; 91
    28fa:	fe 4f       	sbci	r31, 0xFE	; 254
    28fc:	80 81       	ld	r24, Z
    28fe:	81 11       	cpse	r24, r1
    2900:	0b c0       	rjmp	.+22     	; 0x2918 <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    2902:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2906:	80 68       	ori	r24, 0x80	; 128
    2908:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    290c:	05 c0       	rjmp	.+10     	; 0x2918 <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    290e:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2912:	0e 94 30 14 	call	0x2860	; 0x2860 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    2916:	ea cf       	rjmp	.-44     	; 0x28ec <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2918:	df 91       	pop	r29
    291a:	cf 91       	pop	r28
    291c:	08 95       	ret

0000291e <_ZN15OrangutanSerial14receive_inlineEhPchh>:
    291e:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2922:	9f 77       	andi	r25, 0x7F	; 127
    2924:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2928:	9a e0       	ldi	r25, 0x0A	; 10
    292a:	89 9f       	mul	r24, r25
    292c:	f0 01       	movw	r30, r0
    292e:	11 24       	eor	r1, r1
    2930:	eb 55       	subi	r30, 0x5B	; 91
    2932:	fe 4f       	sbci	r31, 0xFE	; 254
    2934:	71 87       	std	Z+9, r23	; 0x09
    2936:	60 87       	std	Z+8, r22	; 0x08
    2938:	12 82       	std	Z+2, r1	; 0x02
    293a:	44 83       	std	Z+4, r20	; 0x04
    293c:	25 83       	std	Z+5, r18	; 0x05
    293e:	80 81       	ld	r24, Z
    2940:	81 11       	cpse	r24, r1
    2942:	05 c0       	rjmp	.+10     	; 0x294e <_ZN15OrangutanSerial14receive_inlineEhPchh+0x30>
    2944:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2948:	80 68       	ori	r24, 0x80	; 128
    294a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    294e:	08 95       	ret

00002950 <_ZN15OrangutanSerial7receiveEPch>:
    2950:	46 2f       	mov	r20, r22
    2952:	20 e0       	ldi	r18, 0x00	; 0
    2954:	bc 01       	movw	r22, r24
    2956:	80 e0       	ldi	r24, 0x00	; 0
    2958:	0e 94 8f 14 	call	0x291e	; 0x291e <_ZN15OrangutanSerial14receive_inlineEhPchh>
    295c:	08 95       	ret

0000295e <serial_receive>:
    295e:	0e 94 a8 14 	call	0x2950	; 0x2950 <_ZN15OrangutanSerial7receiveEPch>
    2962:	08 95       	ret

00002964 <__vector_18>:
    2964:	1f 92       	push	r1
    2966:	0f 92       	push	r0
    2968:	0f b6       	in	r0, 0x3f	; 63
    296a:	0f 92       	push	r0
    296c:	11 24       	eor	r1, r1
    296e:	2f 93       	push	r18
    2970:	3f 93       	push	r19
    2972:	4f 93       	push	r20
    2974:	5f 93       	push	r21
    2976:	6f 93       	push	r22
    2978:	7f 93       	push	r23
    297a:	8f 93       	push	r24
    297c:	9f 93       	push	r25
    297e:	af 93       	push	r26
    2980:	bf 93       	push	r27
    2982:	ef 93       	push	r30
    2984:	ff 93       	push	r31
    2986:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    298a:	80 e0       	ldi	r24, 0x00	; 0
    298c:	0e 94 30 14 	call	0x2860	; 0x2860 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    2990:	ff 91       	pop	r31
    2992:	ef 91       	pop	r30
    2994:	bf 91       	pop	r27
    2996:	af 91       	pop	r26
    2998:	9f 91       	pop	r25
    299a:	8f 91       	pop	r24
    299c:	7f 91       	pop	r23
    299e:	6f 91       	pop	r22
    29a0:	5f 91       	pop	r21
    29a2:	4f 91       	pop	r20
    29a4:	3f 91       	pop	r19
    29a6:	2f 91       	pop	r18
    29a8:	0f 90       	pop	r0
    29aa:	0f be       	out	0x3f, r0	; 63
    29ac:	0f 90       	pop	r0
    29ae:	1f 90       	pop	r1
    29b0:	18 95       	reti

000029b2 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    29b2:	9a e0       	ldi	r25, 0x0A	; 10
    29b4:	89 9f       	mul	r24, r25
    29b6:	f0 01       	movw	r30, r0
    29b8:	11 24       	eor	r1, r1
    29ba:	eb 55       	subi	r30, 0x5B	; 91
    29bc:	fe 4f       	sbci	r31, 0xFE	; 254
    29be:	86 81       	ldd	r24, Z+6	; 0x06
    29c0:	97 81       	ldd	r25, Z+7	; 0x07
    29c2:	89 2b       	or	r24, r25
    29c4:	59 f0       	breq	.+22     	; 0x29dc <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    29c6:	91 81       	ldd	r25, Z+1	; 0x01
    29c8:	83 81       	ldd	r24, Z+3	; 0x03
    29ca:	98 17       	cp	r25, r24
    29cc:	38 f4       	brcc	.+14     	; 0x29dc <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    29ce:	80 81       	ld	r24, Z
    29d0:	81 11       	cpse	r24, r1
    29d2:	04 c0       	rjmp	.+8      	; 0x29dc <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    29d4:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    29d8:	80 62       	ori	r24, 0x20	; 32
    29da:	03 c0       	rjmp	.+6      	; 0x29e2 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x30>
    29dc:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    29e0:	8f 7d       	andi	r24, 0xDF	; 223
    29e2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    29e6:	08 95       	ret

000029e8 <_ZN15OrangutanSerial15initUART_inlineEh>:
    29e8:	9a e0       	ldi	r25, 0x0A	; 10
    29ea:	89 9f       	mul	r24, r25
    29ec:	f0 01       	movw	r30, r0
    29ee:	11 24       	eor	r1, r1
    29f0:	eb 55       	subi	r30, 0x5B	; 91
    29f2:	fe 4f       	sbci	r31, 0xFE	; 254
    29f4:	90 81       	ld	r25, Z
    29f6:	91 11       	cpse	r25, r1
    29f8:	02 c0       	rjmp	.+4      	; 0x29fe <_ZN15OrangutanSerial15initUART_inlineEh+0x16>
    29fa:	98 e9       	ldi	r25, 0x98	; 152
    29fc:	01 c0       	rjmp	.+2      	; 0x2a00 <_ZN15OrangutanSerial15initUART_inlineEh+0x18>
    29fe:	98 e1       	ldi	r25, 0x18	; 24
    2a00:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2a04:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2a08:	78 94       	sei
    2a0a:	08 95       	ret

00002a0c <serial_set_baud_rate>:
    2a0c:	cf 92       	push	r12
    2a0e:	df 92       	push	r13
    2a10:	ef 92       	push	r14
    2a12:	ff 92       	push	r15
    2a14:	6b 01       	movw	r12, r22
    2a16:	7c 01       	movw	r14, r24
    2a18:	80 e0       	ldi	r24, 0x00	; 0
    2a1a:	0e 94 f4 14 	call	0x29e8	; 0x29e8 <_ZN15OrangutanSerial15initUART_inlineEh>
    2a1e:	a8 ef       	ldi	r26, 0xF8	; 248
    2a20:	bf ef       	ldi	r27, 0xFF	; 255
    2a22:	a7 01       	movw	r20, r14
    2a24:	96 01       	movw	r18, r12
    2a26:	0e 94 28 1c 	call	0x3850	; 0x3850 <__mulohisi3>
    2a2a:	73 5d       	subi	r23, 0xD3	; 211
    2a2c:	8e 4c       	sbci	r24, 0xCE	; 206
    2a2e:	9e 4f       	sbci	r25, 0xFE	; 254
    2a30:	e4 e0       	ldi	r30, 0x04	; 4
    2a32:	22 0f       	add	r18, r18
    2a34:	33 1f       	adc	r19, r19
    2a36:	44 1f       	adc	r20, r20
    2a38:	55 1f       	adc	r21, r21
    2a3a:	ea 95       	dec	r30
    2a3c:	d1 f7       	brne	.-12     	; 0x2a32 <serial_set_baud_rate+0x26>
    2a3e:	0e 94 c4 1b 	call	0x3788	; 0x3788 <__udivmodsi4>
    2a42:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
    2a46:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
    2a4a:	ff 90       	pop	r15
    2a4c:	ef 90       	pop	r14
    2a4e:	df 90       	pop	r13
    2a50:	cf 90       	pop	r12
    2a52:	08 95       	ret

00002a54 <_ZN15OrangutanSerial4sendEPch>:
    2a54:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <_ZN15OrangutanSerial5portsE+0x7>
    2a58:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_ZN15OrangutanSerial5portsE+0x6>
    2a5c:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <_ZN15OrangutanSerial5portsE+0x1>
    2a60:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <_ZN15OrangutanSerial5portsE+0x3>
    2a64:	80 e0       	ldi	r24, 0x00	; 0
    2a66:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2a6a:	08 95       	ret

00002a6c <serial_send>:
    2a6c:	0e 94 2a 15 	call	0x2a54	; 0x2a54 <_ZN15OrangutanSerial4sendEPch>
    2a70:	08 95       	ret

00002a72 <_ZN15OrangutanSerial11uart_tx_isrEh>:
    2a72:	9a e0       	ldi	r25, 0x0A	; 10
    2a74:	89 9f       	mul	r24, r25
    2a76:	f0 01       	movw	r30, r0
    2a78:	11 24       	eor	r1, r1
    2a7a:	eb 55       	subi	r30, 0x5B	; 91
    2a7c:	fe 4f       	sbci	r31, 0xFE	; 254
    2a7e:	26 81       	ldd	r18, Z+6	; 0x06
    2a80:	37 81       	ldd	r19, Z+7	; 0x07
    2a82:	21 15       	cp	r18, r1
    2a84:	31 05       	cpc	r19, r1
    2a86:	41 f0       	breq	.+16     	; 0x2a98 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2a88:	41 81       	ldd	r20, Z+1	; 0x01
    2a8a:	93 81       	ldd	r25, Z+3	; 0x03
    2a8c:	49 17       	cp	r20, r25
    2a8e:	20 f4       	brcc	.+8      	; 0x2a98 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2a90:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2a94:	95 fd       	sbrc	r25, 5
    2a96:	03 c0       	rjmp	.+6      	; 0x2a9e <_ZN15OrangutanSerial11uart_tx_isrEh+0x2c>
    2a98:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2a9c:	08 95       	ret
    2a9e:	91 81       	ldd	r25, Z+1	; 0x01
    2aa0:	d9 01       	movw	r26, r18
    2aa2:	a9 0f       	add	r26, r25
    2aa4:	b1 1d       	adc	r27, r1
    2aa6:	9c 91       	ld	r25, X
    2aa8:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2aac:	91 81       	ldd	r25, Z+1	; 0x01
    2aae:	9f 5f       	subi	r25, 0xFF	; 255
    2ab0:	91 83       	std	Z+1, r25	; 0x01
    2ab2:	f2 cf       	rjmp	.-28     	; 0x2a98 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>

00002ab4 <_ZN15OrangutanSerial5checkEv>:
    2ab4:	e1 ec       	ldi	r30, 0xC1	; 193
    2ab6:	f0 e0       	ldi	r31, 0x00	; 0
    2ab8:	80 81       	ld	r24, Z
    2aba:	8f 7d       	andi	r24, 0xDF	; 223
    2abc:	80 83       	st	Z, r24
    2abe:	80 e0       	ldi	r24, 0x00	; 0
    2ac0:	0e 94 39 15 	call	0x2a72	; 0x2a72 <_ZN15OrangutanSerial11uart_tx_isrEh>
    2ac4:	80 e0       	ldi	r24, 0x00	; 0
    2ac6:	0e 94 5b 14 	call	0x28b6	; 0x28b6 <_ZN15OrangutanSerial15serial_rx_checkEh>
    2aca:	08 95       	ret

00002acc <_ZN15OrangutanSerial12sendBlockingEPch>:
    2acc:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <_ZN15OrangutanSerial5portsE+0x7>
    2ad0:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_ZN15OrangutanSerial5portsE+0x6>
    2ad4:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <_ZN15OrangutanSerial5portsE+0x1>
    2ad8:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <_ZN15OrangutanSerial5portsE+0x3>
    2adc:	80 e0       	ldi	r24, 0x00	; 0
    2ade:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2ae2:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <_ZN15OrangutanSerial5portsE+0x1>
    2ae6:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <_ZN15OrangutanSerial5portsE+0x3>
    2aea:	98 17       	cp	r25, r24
    2aec:	19 f0       	breq	.+6      	; 0x2af4 <_ZN15OrangutanSerial12sendBlockingEPch+0x28>
    2aee:	0e 94 5a 15 	call	0x2ab4	; 0x2ab4 <_ZN15OrangutanSerial5checkEv>
    2af2:	f7 cf       	rjmp	.-18     	; 0x2ae2 <_ZN15OrangutanSerial12sendBlockingEPch+0x16>
    2af4:	08 95       	ret

00002af6 <serial_send_blocking>:
    2af6:	0e 94 66 15 	call	0x2acc	; 0x2acc <_ZN15OrangutanSerial12sendBlockingEPch>
    2afa:	08 95       	ret

00002afc <__vector_19>:
    2afc:	1f 92       	push	r1
    2afe:	0f 92       	push	r0
    2b00:	0f b6       	in	r0, 0x3f	; 63
    2b02:	0f 92       	push	r0
    2b04:	11 24       	eor	r1, r1
    2b06:	2f 93       	push	r18
    2b08:	3f 93       	push	r19
    2b0a:	4f 93       	push	r20
    2b0c:	5f 93       	push	r21
    2b0e:	6f 93       	push	r22
    2b10:	7f 93       	push	r23
    2b12:	8f 93       	push	r24
    2b14:	9f 93       	push	r25
    2b16:	af 93       	push	r26
    2b18:	bf 93       	push	r27
    2b1a:	ef 93       	push	r30
    2b1c:	ff 93       	push	r31
    2b1e:	80 e0       	ldi	r24, 0x00	; 0
    2b20:	0e 94 39 15 	call	0x2a72	; 0x2a72 <_ZN15OrangutanSerial11uart_tx_isrEh>
    2b24:	ff 91       	pop	r31
    2b26:	ef 91       	pop	r30
    2b28:	bf 91       	pop	r27
    2b2a:	af 91       	pop	r26
    2b2c:	9f 91       	pop	r25
    2b2e:	8f 91       	pop	r24
    2b30:	7f 91       	pop	r23
    2b32:	6f 91       	pop	r22
    2b34:	5f 91       	pop	r21
    2b36:	4f 91       	pop	r20
    2b38:	3f 91       	pop	r19
    2b3a:	2f 91       	pop	r18
    2b3c:	0f 90       	pop	r0
    2b3e:	0f be       	out	0x3f, r0	; 63
    2b40:	0f 90       	pop	r0
    2b42:	1f 90       	pop	r1
    2b44:	18 95       	reti

00002b46 <__vector_9>:
    2b46:	2f 92       	push	r2
    2b48:	8f 93       	push	r24
    2b4a:	9f 93       	push	r25
    2b4c:	2f b6       	in	r2, 0x3f	; 63
    2b4e:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <tickCount+0x1>
    2b52:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <tickCount+0x2>
    2b56:	01 96       	adiw	r24, 0x01	; 1
    2b58:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <tickCount+0x1>
    2b5c:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <tickCount+0x2>
    2b60:	90 e0       	ldi	r25, 0x00	; 0
    2b62:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <tickCount+0x3>
    2b66:	89 1f       	adc	r24, r25
    2b68:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <tickCount+0x3>
    2b6c:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <us_over_10+0x1>
    2b70:	9c 5f       	subi	r25, 0xFC	; 252
    2b72:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <us_over_10+0x1>
    2b76:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <us_over_10>
    2b7a:	80 51       	subi	r24, 0x10	; 16
    2b7c:	97 42       	sbci	r25, 0x27	; 39
    2b7e:	c0 f0       	brcs	.+48     	; 0x2bb0 <end>
    2b80:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <us_over_10+0x1>
    2b84:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <us_over_10>
    2b88:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <msCounter>
    2b8c:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <msCounter+0x1>
    2b90:	01 96       	adiw	r24, 0x01	; 1
    2b92:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <msCounter>
    2b96:	90 93 b2 01 	sts	0x01B2, r25	; 0x8001b2 <msCounter+0x1>
    2b9a:	90 e0       	ldi	r25, 0x00	; 0
    2b9c:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <msCounter+0x2>
    2ba0:	89 1f       	adc	r24, r25
    2ba2:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <msCounter+0x2>
    2ba6:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <msCounter+0x3>
    2baa:	89 1f       	adc	r24, r25
    2bac:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <msCounter+0x3>

00002bb0 <end>:
    2bb0:	2f be       	out	0x3f, r2	; 63
    2bb2:	9f 91       	pop	r25
    2bb4:	8f 91       	pop	r24
    2bb6:	2f 90       	pop	r2
    2bb8:	18 95       	reti

00002bba <_ZN13OrangutanTime17delayMillisecondsEj>:
    2bba:	28 ee       	ldi	r18, 0xE8	; 232
    2bbc:	33 e0       	ldi	r19, 0x03	; 3
    2bbe:	01 97       	sbiw	r24, 0x01	; 1
    2bc0:	48 f0       	brcs	.+18     	; 0x2bd4 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    2bc2:	f9 01       	movw	r30, r18
    2bc4:	6f 93       	push	r22
    2bc6:	64 e0       	ldi	r22, 0x04	; 4
    2bc8:	6a 95       	dec	r22
    2bca:	f1 f7       	brne	.-4      	; 0x2bc8 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    2bcc:	6f 91       	pop	r22
    2bce:	31 97       	sbiw	r30, 0x01	; 1
    2bd0:	c9 f7       	brne	.-14     	; 0x2bc4 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    2bd2:	f5 cf       	rjmp	.-22     	; 0x2bbe <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    2bd4:	08 95       	ret

00002bd6 <delay_ms>:
    2bd6:	0e 94 dd 15 	call	0x2bba	; 0x2bba <_ZN13OrangutanTime17delayMillisecondsEj>
    2bda:	08 95       	ret

00002bdc <_ZN13OrangutanTime5init2Ev>:
    2bdc:	e0 e7       	ldi	r30, 0x70	; 112
    2bde:	f0 e0       	ldi	r31, 0x00	; 0
    2be0:	80 81       	ld	r24, Z
    2be2:	8e 7f       	andi	r24, 0xFE	; 254
    2be4:	80 83       	st	Z, r24
    2be6:	a0 eb       	ldi	r26, 0xB0	; 176
    2be8:	b0 e0       	ldi	r27, 0x00	; 0
    2bea:	8c 91       	ld	r24, X
    2bec:	83 60       	ori	r24, 0x03	; 3
    2bee:	8c 93       	st	X, r24
    2bf0:	a1 eb       	ldi	r26, 0xB1	; 177
    2bf2:	b0 e0       	ldi	r27, 0x00	; 0
    2bf4:	8c 91       	ld	r24, X
    2bf6:	80 7f       	andi	r24, 0xF0	; 240
    2bf8:	8c 93       	st	X, r24
    2bfa:	8c 91       	ld	r24, X
    2bfc:	82 60       	ori	r24, 0x02	; 2
    2bfe:	8c 93       	st	X, r24
    2c00:	b8 9a       	sbi	0x17, 0	; 23
    2c02:	80 81       	ld	r24, Z
    2c04:	81 60       	ori	r24, 0x01	; 1
    2c06:	80 83       	st	Z, r24
    2c08:	78 94       	sei
    2c0a:	08 95       	ret

00002c0c <_ZN13OrangutanTime4initEv>:
    2c0c:	80 91 0b 02 	lds	r24, 0x020B	; 0x80020b <_ZZN13OrangutanTime4initEvE11initialized>
    2c10:	81 11       	cpse	r24, r1
    2c12:	05 c0       	rjmp	.+10     	; 0x2c1e <_ZN13OrangutanTime4initEv+0x12>
    2c14:	81 e0       	ldi	r24, 0x01	; 1
    2c16:	80 93 0b 02 	sts	0x020B, r24	; 0x80020b <_ZZN13OrangutanTime4initEvE11initialized>
    2c1a:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <_ZN13OrangutanTime5init2Ev>
    2c1e:	08 95       	ret

00002c20 <_ZN13OrangutanTime2msEv>:
    2c20:	0e 94 06 16 	call	0x2c0c	; 0x2c0c <_ZN13OrangutanTime4initEv>
    2c24:	e0 e7       	ldi	r30, 0x70	; 112
    2c26:	f0 e0       	ldi	r31, 0x00	; 0
    2c28:	80 81       	ld	r24, Z
    2c2a:	8e 7f       	andi	r24, 0xFE	; 254
    2c2c:	80 83       	st	Z, r24
    2c2e:	60 91 b1 01 	lds	r22, 0x01B1	; 0x8001b1 <msCounter>
    2c32:	70 91 b2 01 	lds	r23, 0x01B2	; 0x8001b2 <msCounter+0x1>
    2c36:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <msCounter+0x2>
    2c3a:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <msCounter+0x3>
    2c3e:	20 81       	ld	r18, Z
    2c40:	21 60       	ori	r18, 0x01	; 1
    2c42:	20 83       	st	Z, r18
    2c44:	08 95       	ret

00002c46 <get_ms>:
    2c46:	0e 94 10 16 	call	0x2c20	; 0x2c20 <_ZN13OrangutanTime2msEv>
    2c4a:	08 95       	ret

00002c4c <_ZN13OrangutanTime5resetEv>:
    2c4c:	0e 94 06 16 	call	0x2c0c	; 0x2c0c <_ZN13OrangutanTime4initEv>
    2c50:	e0 e7       	ldi	r30, 0x70	; 112
    2c52:	f0 e0       	ldi	r31, 0x00	; 0
    2c54:	80 81       	ld	r24, Z
    2c56:	8e 7f       	andi	r24, 0xFE	; 254
    2c58:	80 83       	st	Z, r24
    2c5a:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <msCounter>
    2c5e:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <msCounter+0x1>
    2c62:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <msCounter+0x2>
    2c66:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <msCounter+0x3>
    2c6a:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <us_over_10+0x1>
    2c6e:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <us_over_10>
    2c72:	80 81       	ld	r24, Z
    2c74:	81 60       	ori	r24, 0x01	; 1
    2c76:	80 83       	st	Z, r24
    2c78:	08 95       	ret

00002c7a <calibrate_line_sensors>:
    2c7a:	68 2f       	mov	r22, r24
    2c7c:	89 eb       	ldi	r24, 0xB9	; 185
    2c7e:	91 e0       	ldi	r25, 0x01	; 1
    2c80:	0e 94 2c 1a 	call	0x3458	; 0x3458 <_ZN16PololuQTRSensors9calibrateEh>
    2c84:	08 95       	ret

00002c86 <read_line_sensors_calibrated>:
    2c86:	46 2f       	mov	r20, r22
    2c88:	bc 01       	movw	r22, r24
    2c8a:	89 eb       	ldi	r24, 0xB9	; 185
    2c8c:	91 e0       	ldi	r25, 0x01	; 1
    2c8e:	0e 94 50 1a 	call	0x34a0	; 0x34a0 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    2c92:	08 95       	ret

00002c94 <read_line>:
    2c94:	46 2f       	mov	r20, r22
    2c96:	20 e0       	ldi	r18, 0x00	; 0
    2c98:	bc 01       	movw	r22, r24
    2c9a:	89 eb       	ldi	r24, 0xB9	; 185
    2c9c:	91 e0       	ldi	r25, 0x01	; 1
    2c9e:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <_ZN16PololuQTRSensors8readLineEPjhh>
    2ca2:	08 95       	ret

00002ca4 <_ZN9Pololu3pi4initEjh>:
    2ca4:	0f 93       	push	r16
    2ca6:	cf 93       	push	r28
    2ca8:	df 93       	push	r29
    2caa:	00 d0       	rcall	.+0      	; 0x2cac <_ZN9Pololu3pi4initEjh+0x8>
    2cac:	00 d0       	rcall	.+0      	; 0x2cae <_ZN9Pololu3pi4initEjh+0xa>
    2cae:	1f 92       	push	r1
    2cb0:	cd b7       	in	r28, 0x3d	; 61
    2cb2:	de b7       	in	r29, 0x3e	; 62
    2cb4:	9c 01       	movw	r18, r24
    2cb6:	85 e0       	ldi	r24, 0x05	; 5
    2cb8:	e0 e5       	ldi	r30, 0x50	; 80
    2cba:	f1 e0       	ldi	r31, 0x01	; 1
    2cbc:	de 01       	movw	r26, r28
    2cbe:	11 96       	adiw	r26, 0x01	; 1
    2cc0:	01 90       	ld	r0, Z+
    2cc2:	0d 92       	st	X+, r0
    2cc4:	8a 95       	dec	r24
    2cc6:	e1 f7       	brne	.-8      	; 0x2cc0 <_ZN9Pololu3pi4initEjh+0x1c>
    2cc8:	66 23       	and	r22, r22
    2cca:	11 f0       	breq	.+4      	; 0x2cd0 <_ZN9Pololu3pi4initEjh+0x2c>
    2ccc:	0f ef       	ldi	r16, 0xFF	; 255
    2cce:	01 c0       	rjmp	.+2      	; 0x2cd2 <_ZN9Pololu3pi4initEjh+0x2e>
    2cd0:	03 e1       	ldi	r16, 0x13	; 19
    2cd2:	45 e0       	ldi	r20, 0x05	; 5
    2cd4:	be 01       	movw	r22, r28
    2cd6:	6f 5f       	subi	r22, 0xFF	; 255
    2cd8:	7f 4f       	sbci	r23, 0xFF	; 255
    2cda:	89 eb       	ldi	r24, 0xB9	; 185
    2cdc:	91 e0       	ldi	r25, 0x01	; 1
    2cde:	0e 94 24 17 	call	0x2e48	; 0x2e48 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    2ce2:	89 eb       	ldi	r24, 0xB9	; 185
    2ce4:	91 e0       	ldi	r25, 0x01	; 1
    2ce6:	0e 94 fb 16 	call	0x2df6	; 0x2df6 <_ZN16PololuQTRSensors11emittersOffEv>
    2cea:	0e 94 26 16 	call	0x2c4c	; 0x2c4c <_ZN13OrangutanTime5resetEv>
    2cee:	0f 90       	pop	r0
    2cf0:	0f 90       	pop	r0
    2cf2:	0f 90       	pop	r0
    2cf4:	0f 90       	pop	r0
    2cf6:	0f 90       	pop	r0
    2cf8:	df 91       	pop	r29
    2cfa:	cf 91       	pop	r28
    2cfc:	0f 91       	pop	r16
    2cfe:	08 95       	ret

00002d00 <pololu_3pi_init>:
    2d00:	60 e0       	ldi	r22, 0x00	; 0
    2d02:	0e 94 52 16 	call	0x2ca4	; 0x2ca4 <_ZN9Pololu3pi4initEjh>
    2d06:	08 95       	ret

00002d08 <_GLOBAL__sub_D_pololu_3pi_init>:
    2d08:	89 eb       	ldi	r24, 0xB9	; 185
    2d0a:	91 e0       	ldi	r25, 0x01	; 1
    2d0c:	0e 94 72 1b 	call	0x36e4	; 0x36e4 <_ZN16PololuQTRSensorsD1Ev>
    2d10:	08 95       	ret

00002d12 <delay_us>:
    2d12:	6f 93       	push	r22
    2d14:	64 e0       	ldi	r22, 0x04	; 4
    2d16:	6a 95       	dec	r22
    2d18:	f1 f7       	brne	.-4      	; 0x2d16 <delay_us+0x4>
    2d1a:	6f 91       	pop	r22
    2d1c:	01 97       	sbiw	r24, 0x01	; 1
    2d1e:	c9 f7       	brne	.-14     	; 0x2d12 <delay_us>
    2d20:	08 95       	ret

00002d22 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    2d22:	fc 01       	movw	r30, r24
    2d24:	11 82       	std	Z+1, r1	; 0x01
    2d26:	10 82       	st	Z, r1
    2d28:	13 82       	std	Z+3, r1	; 0x03
    2d2a:	12 82       	std	Z+2, r1	; 0x02
    2d2c:	15 82       	std	Z+5, r1	; 0x05
    2d2e:	14 82       	std	Z+4, r1	; 0x04
    2d30:	16 82       	std	Z+6, r1	; 0x06
    2d32:	68 30       	cpi	r22, 0x08	; 8
    2d34:	68 f4       	brcc	.+26     	; 0x2d50 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    2d36:	89 e2       	ldi	r24, 0x29	; 41
    2d38:	90 e0       	ldi	r25, 0x00	; 0
    2d3a:	91 83       	std	Z+1, r25	; 0x01
    2d3c:	80 83       	st	Z, r24
    2d3e:	8b e2       	ldi	r24, 0x2B	; 43
    2d40:	90 e0       	ldi	r25, 0x00	; 0
    2d42:	93 83       	std	Z+3, r25	; 0x03
    2d44:	82 83       	std	Z+2, r24	; 0x02
    2d46:	8a e2       	ldi	r24, 0x2A	; 42
    2d48:	90 e0       	ldi	r25, 0x00	; 0
    2d4a:	95 83       	std	Z+5, r25	; 0x05
    2d4c:	84 83       	std	Z+4, r24	; 0x04
    2d4e:	1f c0       	rjmp	.+62     	; 0x2d8e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2d50:	6e 30       	cpi	r22, 0x0E	; 14
    2d52:	70 f4       	brcc	.+28     	; 0x2d70 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    2d54:	83 e2       	ldi	r24, 0x23	; 35
    2d56:	90 e0       	ldi	r25, 0x00	; 0
    2d58:	91 83       	std	Z+1, r25	; 0x01
    2d5a:	80 83       	st	Z, r24
    2d5c:	85 e2       	ldi	r24, 0x25	; 37
    2d5e:	90 e0       	ldi	r25, 0x00	; 0
    2d60:	93 83       	std	Z+3, r25	; 0x03
    2d62:	82 83       	std	Z+2, r24	; 0x02
    2d64:	84 e2       	ldi	r24, 0x24	; 36
    2d66:	90 e0       	ldi	r25, 0x00	; 0
    2d68:	95 83       	std	Z+5, r25	; 0x05
    2d6a:	84 83       	std	Z+4, r24	; 0x04
    2d6c:	68 50       	subi	r22, 0x08	; 8
    2d6e:	0f c0       	rjmp	.+30     	; 0x2d8e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2d70:	65 31       	cpi	r22, 0x15	; 21
    2d72:	98 f4       	brcc	.+38     	; 0x2d9a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    2d74:	86 e2       	ldi	r24, 0x26	; 38
    2d76:	90 e0       	ldi	r25, 0x00	; 0
    2d78:	91 83       	std	Z+1, r25	; 0x01
    2d7a:	80 83       	st	Z, r24
    2d7c:	88 e2       	ldi	r24, 0x28	; 40
    2d7e:	90 e0       	ldi	r25, 0x00	; 0
    2d80:	93 83       	std	Z+3, r25	; 0x03
    2d82:	82 83       	std	Z+2, r24	; 0x02
    2d84:	87 e2       	ldi	r24, 0x27	; 39
    2d86:	90 e0       	ldi	r25, 0x00	; 0
    2d88:	95 83       	std	Z+5, r25	; 0x05
    2d8a:	84 83       	std	Z+4, r24	; 0x04
    2d8c:	6e 50       	subi	r22, 0x0E	; 14
    2d8e:	81 e0       	ldi	r24, 0x01	; 1
    2d90:	01 c0       	rjmp	.+2      	; 0x2d94 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    2d92:	88 0f       	add	r24, r24
    2d94:	6a 95       	dec	r22
    2d96:	ea f7       	brpl	.-6      	; 0x2d92 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    2d98:	86 83       	std	Z+6, r24	; 0x06
    2d9a:	08 95       	ret

00002d9c <_ZN16PololuQTRSensors4initEhhh>:
    2d9c:	a7 e0       	ldi	r26, 0x07	; 7
    2d9e:	b0 e0       	ldi	r27, 0x00	; 0
    2da0:	e4 ed       	ldi	r30, 0xD4	; 212
    2da2:	f6 e1       	ldi	r31, 0x16	; 22
    2da4:	0c 94 3b 1c 	jmp	0x3876	; 0x3876 <__prologue_saves__+0x1c>
    2da8:	8c 01       	movw	r16, r24
    2daa:	fc 01       	movw	r30, r24
    2dac:	11 82       	std	Z+1, r1	; 0x01
    2dae:	10 82       	st	Z, r1
    2db0:	13 82       	std	Z+3, r1	; 0x03
    2db2:	12 82       	std	Z+2, r1	; 0x02
    2db4:	15 82       	std	Z+5, r1	; 0x05
    2db6:	14 82       	std	Z+4, r1	; 0x04
    2db8:	17 82       	std	Z+7, r1	; 0x07
    2dba:	16 82       	std	Z+6, r1	; 0x06
    2dbc:	61 31       	cpi	r22, 0x11	; 17
    2dbe:	18 f0       	brcs	.+6      	; 0x2dc6 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    2dc0:	80 e1       	ldi	r24, 0x10	; 16
    2dc2:	80 87       	std	Z+8, r24	; 0x08
    2dc4:	02 c0       	rjmp	.+4      	; 0x2dca <_ZN16PololuQTRSensors4initEhhh+0x2e>
    2dc6:	fc 01       	movw	r30, r24
    2dc8:	60 87       	std	Z+8, r22	; 0x08
    2dca:	f8 01       	movw	r30, r16
    2dcc:	20 8b       	std	Z+16, r18	; 0x10
    2dce:	64 2f       	mov	r22, r20
    2dd0:	ce 01       	movw	r24, r28
    2dd2:	01 96       	adiw	r24, 0x01	; 1
    2dd4:	0e 94 91 16 	call	0x2d22	; 0x2d22 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    2dd8:	8f 81       	ldd	r24, Y+7	; 0x07
    2dda:	f8 01       	movw	r30, r16
    2ddc:	81 87       	std	Z+9, r24	; 0x09
    2dde:	8b 81       	ldd	r24, Y+3	; 0x03
    2de0:	9c 81       	ldd	r25, Y+4	; 0x04
    2de2:	93 87       	std	Z+11, r25	; 0x0b
    2de4:	82 87       	std	Z+10, r24	; 0x0a
    2de6:	8d 81       	ldd	r24, Y+5	; 0x05
    2de8:	9e 81       	ldd	r25, Y+6	; 0x06
    2dea:	95 87       	std	Z+13, r25	; 0x0d
    2dec:	84 87       	std	Z+12, r24	; 0x0c
    2dee:	27 96       	adiw	r28, 0x07	; 7
    2df0:	e4 e0       	ldi	r30, 0x04	; 4
    2df2:	0c 94 57 1c 	jmp	0x38ae	; 0x38ae <__epilogue_restores__+0x1c>

00002df6 <_ZN16PololuQTRSensors11emittersOffEv>:
    2df6:	fc 01       	movw	r30, r24
    2df8:	a4 85       	ldd	r26, Z+12	; 0x0c
    2dfa:	b5 85       	ldd	r27, Z+13	; 0x0d
    2dfc:	10 97       	sbiw	r26, 0x00	; 0
    2dfe:	79 f0       	breq	.+30     	; 0x2e1e <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    2e00:	8c 91       	ld	r24, X
    2e02:	91 85       	ldd	r25, Z+9	; 0x09
    2e04:	89 2b       	or	r24, r25
    2e06:	8c 93       	st	X, r24
    2e08:	a2 85       	ldd	r26, Z+10	; 0x0a
    2e0a:	b3 85       	ldd	r27, Z+11	; 0x0b
    2e0c:	9c 91       	ld	r25, X
    2e0e:	81 85       	ldd	r24, Z+9	; 0x09
    2e10:	80 95       	com	r24
    2e12:	89 23       	and	r24, r25
    2e14:	8c 93       	st	X, r24
    2e16:	88 ec       	ldi	r24, 0xC8	; 200
    2e18:	90 e0       	ldi	r25, 0x00	; 0
    2e1a:	0e 94 89 16 	call	0x2d12	; 0x2d12 <delay_us>
    2e1e:	08 95       	ret

00002e20 <_ZN16PololuQTRSensors10emittersOnEv>:
    2e20:	fc 01       	movw	r30, r24
    2e22:	a4 85       	ldd	r26, Z+12	; 0x0c
    2e24:	b5 85       	ldd	r27, Z+13	; 0x0d
    2e26:	10 97       	sbiw	r26, 0x00	; 0
    2e28:	71 f0       	breq	.+28     	; 0x2e46 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    2e2a:	8c 91       	ld	r24, X
    2e2c:	91 85       	ldd	r25, Z+9	; 0x09
    2e2e:	89 2b       	or	r24, r25
    2e30:	8c 93       	st	X, r24
    2e32:	a2 85       	ldd	r26, Z+10	; 0x0a
    2e34:	b3 85       	ldd	r27, Z+11	; 0x0b
    2e36:	8c 91       	ld	r24, X
    2e38:	91 85       	ldd	r25, Z+9	; 0x09
    2e3a:	89 2b       	or	r24, r25
    2e3c:	8c 93       	st	X, r24
    2e3e:	88 ec       	ldi	r24, 0xC8	; 200
    2e40:	90 e0       	ldi	r25, 0x00	; 0
    2e42:	0e 94 89 16 	call	0x2d12	; 0x2d12 <delay_us>
    2e46:	08 95       	ret

00002e48 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    2e48:	a7 e0       	ldi	r26, 0x07	; 7
    2e4a:	b0 e0       	ldi	r27, 0x00	; 0
    2e4c:	ea e2       	ldi	r30, 0x2A	; 42
    2e4e:	f7 e1       	ldi	r31, 0x17	; 23
    2e50:	0c 94 30 1c 	jmp	0x3860	; 0x3860 <__prologue_saves__+0x6>
    2e54:	7c 01       	movw	r14, r24
    2e56:	4b 01       	movw	r8, r22
    2e58:	64 2f       	mov	r22, r20
    2e5a:	39 01       	movw	r6, r18
    2e5c:	40 2f       	mov	r20, r16
    2e5e:	20 e0       	ldi	r18, 0x00	; 0
    2e60:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <_ZN16PololuQTRSensors4initEhhh>
    2e64:	87 01       	movw	r16, r14
    2e66:	0f 5b       	subi	r16, 0xBF	; 191
    2e68:	1f 4f       	sbci	r17, 0xFF	; 255
    2e6a:	f8 01       	movw	r30, r16
    2e6c:	10 82       	st	Z, r1
    2e6e:	67 01       	movw	r12, r14
    2e70:	f2 e4       	ldi	r31, 0x42	; 66
    2e72:	cf 0e       	add	r12, r31
    2e74:	d1 1c       	adc	r13, r1
    2e76:	f6 01       	movw	r30, r12
    2e78:	10 82       	st	Z, r1
    2e7a:	57 01       	movw	r10, r14
    2e7c:	f3 e4       	ldi	r31, 0x43	; 67
    2e7e:	af 0e       	add	r10, r31
    2e80:	b1 1c       	adc	r11, r1
    2e82:	f5 01       	movw	r30, r10
    2e84:	10 82       	st	Z, r1
    2e86:	f7 01       	movw	r30, r14
    2e88:	77 86       	std	Z+15, r7	; 0x0f
    2e8a:	66 86       	std	Z+14, r6	; 0x0e
    2e8c:	51 2c       	mov	r5, r1
    2e8e:	f7 01       	movw	r30, r14
    2e90:	80 85       	ldd	r24, Z+8	; 0x08
    2e92:	58 16       	cp	r5, r24
    2e94:	50 f5       	brcc	.+84     	; 0x2eea <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    2e96:	65 2c       	mov	r6, r5
    2e98:	71 2c       	mov	r7, r1
    2e9a:	f4 01       	movw	r30, r8
    2e9c:	e6 0d       	add	r30, r6
    2e9e:	f7 1d       	adc	r31, r7
    2ea0:	60 81       	ld	r22, Z
    2ea2:	ce 01       	movw	r24, r28
    2ea4:	01 96       	adiw	r24, 0x01	; 1
    2ea6:	0e 94 91 16 	call	0x2d22	; 0x2d22 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    2eaa:	2f 81       	ldd	r18, Y+7	; 0x07
    2eac:	f7 01       	movw	r30, r14
    2eae:	e6 0d       	add	r30, r6
    2eb0:	f7 1d       	adc	r31, r7
    2eb2:	21 8b       	std	Z+17, r18	; 0x11
    2eb4:	89 81       	ldd	r24, Y+1	; 0x01
    2eb6:	9a 81       	ldd	r25, Y+2	; 0x02
    2eb8:	f3 01       	movw	r30, r6
    2eba:	ee 0f       	add	r30, r30
    2ebc:	ff 1f       	adc	r31, r31
    2ebe:	ee 0d       	add	r30, r14
    2ec0:	ff 1d       	adc	r31, r15
    2ec2:	92 a3       	std	Z+34, r25	; 0x22
    2ec4:	81 a3       	std	Z+33, r24	; 0x21
    2ec6:	83 32       	cpi	r24, 0x23	; 35
    2ec8:	91 05       	cpc	r25, r1
    2eca:	11 f4       	brne	.+4      	; 0x2ed0 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    2ecc:	f8 01       	movw	r30, r16
    2ece:	08 c0       	rjmp	.+16     	; 0x2ee0 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    2ed0:	86 32       	cpi	r24, 0x26	; 38
    2ed2:	91 05       	cpc	r25, r1
    2ed4:	11 f4       	brne	.+4      	; 0x2eda <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    2ed6:	f6 01       	movw	r30, r12
    2ed8:	03 c0       	rjmp	.+6      	; 0x2ee0 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    2eda:	89 97       	sbiw	r24, 0x29	; 41
    2edc:	21 f4       	brne	.+8      	; 0x2ee6 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    2ede:	f5 01       	movw	r30, r10
    2ee0:	80 81       	ld	r24, Z
    2ee2:	82 2b       	or	r24, r18
    2ee4:	80 83       	st	Z, r24
    2ee6:	53 94       	inc	r5
    2ee8:	d2 cf       	rjmp	.-92     	; 0x2e8e <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    2eea:	27 96       	adiw	r28, 0x07	; 7
    2eec:	ef e0       	ldi	r30, 0x0F	; 15
    2eee:	0c 94 4c 1c 	jmp	0x3898	; 0x3898 <__epilogue_restores__+0x6>

00002ef2 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    2ef2:	a0 e0       	ldi	r26, 0x00	; 0
    2ef4:	b0 e0       	ldi	r27, 0x00	; 0
    2ef6:	ef e7       	ldi	r30, 0x7F	; 127
    2ef8:	f7 e1       	ldi	r31, 0x17	; 23
    2efa:	0c 94 32 1c 	jmp	0x3864	; 0x3864 <__prologue_saves__+0xa>
    2efe:	ec 01       	movw	r28, r24
    2f00:	5b 01       	movw	r10, r22
    2f02:	6c 01       	movw	r12, r24
    2f04:	81 e4       	ldi	r24, 0x41	; 65
    2f06:	c8 0e       	add	r12, r24
    2f08:	d1 1c       	adc	r13, r1
    2f0a:	f6 01       	movw	r30, r12
    2f0c:	80 80       	ld	r8, Z
    2f0e:	7e 01       	movw	r14, r28
    2f10:	f2 e4       	ldi	r31, 0x42	; 66
    2f12:	ef 0e       	add	r14, r31
    2f14:	f1 1c       	adc	r15, r1
    2f16:	f7 01       	movw	r30, r14
    2f18:	70 80       	ld	r7, Z
    2f1a:	8e 01       	movw	r16, r28
    2f1c:	0d 5b       	subi	r16, 0xBD	; 189
    2f1e:	1f 4f       	sbci	r17, 0xFF	; 255
    2f20:	f8 01       	movw	r30, r16
    2f22:	90 80       	ld	r9, Z
    2f24:	80 e0       	ldi	r24, 0x00	; 0
    2f26:	98 85       	ldd	r25, Y+8	; 0x08
    2f28:	89 17       	cp	r24, r25
    2f2a:	48 f4       	brcc	.+18     	; 0x2f3e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    2f2c:	f5 01       	movw	r30, r10
    2f2e:	e8 0f       	add	r30, r24
    2f30:	f1 1d       	adc	r31, r1
    2f32:	e8 0f       	add	r30, r24
    2f34:	f1 1d       	adc	r31, r1
    2f36:	11 82       	std	Z+1, r1	; 0x01
    2f38:	10 82       	st	Z, r1
    2f3a:	8f 5f       	subi	r24, 0xFF	; 255
    2f3c:	f4 cf       	rjmp	.-24     	; 0x2f26 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    2f3e:	84 b1       	in	r24, 0x04	; 4
    2f40:	f6 01       	movw	r30, r12
    2f42:	90 81       	ld	r25, Z
    2f44:	89 2b       	or	r24, r25
    2f46:	84 b9       	out	0x04, r24	; 4
    2f48:	87 b1       	in	r24, 0x07	; 7
    2f4a:	f7 01       	movw	r30, r14
    2f4c:	90 81       	ld	r25, Z
    2f4e:	89 2b       	or	r24, r25
    2f50:	87 b9       	out	0x07, r24	; 7
    2f52:	8a b1       	in	r24, 0x0a	; 10
    2f54:	f8 01       	movw	r30, r16
    2f56:	90 81       	ld	r25, Z
    2f58:	89 2b       	or	r24, r25
    2f5a:	8a b9       	out	0x0a, r24	; 10
    2f5c:	85 b1       	in	r24, 0x05	; 5
    2f5e:	f6 01       	movw	r30, r12
    2f60:	90 81       	ld	r25, Z
    2f62:	89 2b       	or	r24, r25
    2f64:	85 b9       	out	0x05, r24	; 5
    2f66:	88 b1       	in	r24, 0x08	; 8
    2f68:	f7 01       	movw	r30, r14
    2f6a:	90 81       	ld	r25, Z
    2f6c:	89 2b       	or	r24, r25
    2f6e:	88 b9       	out	0x08, r24	; 8
    2f70:	8b b1       	in	r24, 0x0b	; 11
    2f72:	f8 01       	movw	r30, r16
    2f74:	90 81       	ld	r25, Z
    2f76:	89 2b       	or	r24, r25
    2f78:	8b b9       	out	0x0b, r24	; 11
    2f7a:	8a e0       	ldi	r24, 0x0A	; 10
    2f7c:	90 e0       	ldi	r25, 0x00	; 0
    2f7e:	0e 94 89 16 	call	0x2d12	; 0x2d12 <delay_us>
    2f82:	94 b1       	in	r25, 0x04	; 4
    2f84:	f6 01       	movw	r30, r12
    2f86:	80 81       	ld	r24, Z
    2f88:	80 95       	com	r24
    2f8a:	89 23       	and	r24, r25
    2f8c:	84 b9       	out	0x04, r24	; 4
    2f8e:	97 b1       	in	r25, 0x07	; 7
    2f90:	f7 01       	movw	r30, r14
    2f92:	80 81       	ld	r24, Z
    2f94:	80 95       	com	r24
    2f96:	89 23       	and	r24, r25
    2f98:	87 b9       	out	0x07, r24	; 7
    2f9a:	9a b1       	in	r25, 0x0a	; 10
    2f9c:	f8 01       	movw	r30, r16
    2f9e:	80 81       	ld	r24, Z
    2fa0:	80 95       	com	r24
    2fa2:	89 23       	and	r24, r25
    2fa4:	8a b9       	out	0x0a, r24	; 10
    2fa6:	95 b1       	in	r25, 0x05	; 5
    2fa8:	f6 01       	movw	r30, r12
    2faa:	80 81       	ld	r24, Z
    2fac:	80 95       	com	r24
    2fae:	89 23       	and	r24, r25
    2fb0:	85 b9       	out	0x05, r24	; 5
    2fb2:	98 b1       	in	r25, 0x08	; 8
    2fb4:	f7 01       	movw	r30, r14
    2fb6:	80 81       	ld	r24, Z
    2fb8:	80 95       	com	r24
    2fba:	89 23       	and	r24, r25
    2fbc:	88 b9       	out	0x08, r24	; 8
    2fbe:	9b b1       	in	r25, 0x0b	; 11
    2fc0:	f8 01       	movw	r30, r16
    2fc2:	80 81       	ld	r24, Z
    2fc4:	80 95       	com	r24
    2fc6:	89 23       	and	r24, r25
    2fc8:	8b b9       	out	0x0b, r24	; 11
    2fca:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2fce:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    2fd2:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2fd6:	83 60       	ori	r24, 0x03	; 3
    2fd8:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2fdc:	82 e0       	ldi	r24, 0x02	; 2
    2fde:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    2fe2:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2fe6:	80 e0       	ldi	r24, 0x00	; 0
    2fe8:	90 e0       	ldi	r25, 0x00	; 0
    2fea:	2e 85       	ldd	r18, Y+14	; 0x0e
    2fec:	3f 85       	ldd	r19, Y+15	; 0x0f
    2fee:	82 17       	cp	r24, r18
    2ff0:	93 07       	cpc	r25, r19
    2ff2:	20 f5       	brcc	.+72     	; 0x303c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    2ff4:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2ff8:	2c 2d       	mov	r18, r12
    2ffa:	24 1b       	sub	r18, r20
    2ffc:	82 0f       	add	r24, r18
    2ffe:	91 1d       	adc	r25, r1
    3000:	03 b1       	in	r16, 0x03	; 3
    3002:	08 11       	cpse	r16, r8
    3004:	32 c0       	rjmp	.+100    	; 0x306a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    3006:	f6 b0       	in	r15, 0x06	; 6
    3008:	f7 10       	cpse	r15, r7
    300a:	2f c0       	rjmp	.+94     	; 0x306a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    300c:	29 b1       	in	r18, 0x09	; 9
    300e:	29 11       	cpse	r18, r9
    3010:	2c c0       	rjmp	.+88     	; 0x306a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    3012:	10 c0       	rjmp	.+32     	; 0x3034 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    3014:	21 2f       	mov	r18, r17
    3016:	30 e0       	ldi	r19, 0x00	; 0
    3018:	a9 01       	movw	r20, r18
    301a:	44 0f       	add	r20, r20
    301c:	55 1f       	adc	r21, r21
    301e:	f5 01       	movw	r30, r10
    3020:	e4 0f       	add	r30, r20
    3022:	f5 1f       	adc	r31, r21
    3024:	60 81       	ld	r22, Z
    3026:	71 81       	ldd	r23, Z+1	; 0x01
    3028:	67 2b       	or	r22, r23
    302a:	21 f1       	breq	.+72     	; 0x3074 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    302c:	1f 5f       	subi	r17, 0xFF	; 255
    302e:	28 85       	ldd	r18, Y+8	; 0x08
    3030:	12 17       	cp	r17, r18
    3032:	80 f3       	brcs	.-32     	; 0x3014 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    3034:	7f 2c       	mov	r7, r15
    3036:	80 2e       	mov	r8, r16
    3038:	4c 2d       	mov	r20, r12
    303a:	d7 cf       	rjmp	.-82     	; 0x2fea <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    303c:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    3040:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    3044:	20 e0       	ldi	r18, 0x00	; 0
    3046:	88 85       	ldd	r24, Y+8	; 0x08
    3048:	28 17       	cp	r18, r24
    304a:	30 f5       	brcc	.+76     	; 0x3098 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    304c:	f5 01       	movw	r30, r10
    304e:	e2 0f       	add	r30, r18
    3050:	f1 1d       	adc	r31, r1
    3052:	e2 0f       	add	r30, r18
    3054:	f1 1d       	adc	r31, r1
    3056:	80 81       	ld	r24, Z
    3058:	91 81       	ldd	r25, Z+1	; 0x01
    305a:	89 2b       	or	r24, r25
    305c:	21 f4       	brne	.+8      	; 0x3066 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    305e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3060:	9f 85       	ldd	r25, Y+15	; 0x0f
    3062:	91 83       	std	Z+1, r25	; 0x01
    3064:	80 83       	st	Z, r24
    3066:	2f 5f       	subi	r18, 0xFF	; 255
    3068:	ee cf       	rjmp	.-36     	; 0x3046 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    306a:	03 b1       	in	r16, 0x03	; 3
    306c:	f6 b0       	in	r15, 0x06	; 6
    306e:	99 b0       	in	r9, 0x09	; 9
    3070:	10 e0       	ldi	r17, 0x00	; 0
    3072:	dd cf       	rjmp	.-70     	; 0x302e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    3074:	de 01       	movw	r26, r28
    3076:	a4 0f       	add	r26, r20
    3078:	b5 1f       	adc	r27, r21
    307a:	91 96       	adiw	r26, 0x21	; 33
    307c:	0d 90       	ld	r0, X+
    307e:	bc 91       	ld	r27, X
    3080:	a0 2d       	mov	r26, r0
    3082:	4c 91       	ld	r20, X
    3084:	de 01       	movw	r26, r28
    3086:	a2 0f       	add	r26, r18
    3088:	b3 1f       	adc	r27, r19
    308a:	51 96       	adiw	r26, 0x11	; 17
    308c:	2c 91       	ld	r18, X
    308e:	42 23       	and	r20, r18
    3090:	69 f6       	brne	.-102    	; 0x302c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    3092:	91 83       	std	Z+1, r25	; 0x01
    3094:	80 83       	st	Z, r24
    3096:	ca cf       	rjmp	.-108    	; 0x302c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    3098:	cd b7       	in	r28, 0x3d	; 61
    309a:	de b7       	in	r29, 0x3e	; 62
    309c:	ed e0       	ldi	r30, 0x0D	; 13
    309e:	0c 94 4e 1c 	jmp	0x389c	; 0x389c <__epilogue_restores__+0xa>

000030a2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    30a2:	ef 92       	push	r14
    30a4:	ff 92       	push	r15
    30a6:	0f 93       	push	r16
    30a8:	1f 93       	push	r17
    30aa:	cf 93       	push	r28
    30ac:	df 93       	push	r29
    30ae:	fc 01       	movw	r30, r24
    30b0:	9b 01       	movw	r18, r22
    30b2:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    30b6:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    30ba:	47 b1       	in	r20, 0x07	; 7
    30bc:	18 b1       	in	r17, 0x08	; 8
    30be:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    30c2:	86 fd       	sbrc	r24, 6
    30c4:	fc cf       	rjmp	.-8      	; 0x30be <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    30c6:	80 e0       	ldi	r24, 0x00	; 0
    30c8:	90 85       	ldd	r25, Z+8	; 0x08
    30ca:	89 17       	cp	r24, r25
    30cc:	48 f4       	brcc	.+18     	; 0x30e0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    30ce:	d9 01       	movw	r26, r18
    30d0:	a8 0f       	add	r26, r24
    30d2:	b1 1d       	adc	r27, r1
    30d4:	a8 0f       	add	r26, r24
    30d6:	b1 1d       	adc	r27, r1
    30d8:	1d 92       	st	X+, r1
    30da:	1c 92       	st	X, r1
    30dc:	8f 5f       	subi	r24, 0xFF	; 255
    30de:	f4 cf       	rjmp	.-24     	; 0x30c8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    30e0:	97 b1       	in	r25, 0x07	; 7
    30e2:	82 a1       	ldd	r24, Z+34	; 0x22
    30e4:	80 95       	com	r24
    30e6:	89 23       	and	r24, r25
    30e8:	87 b9       	out	0x07, r24	; 7
    30ea:	98 b1       	in	r25, 0x08	; 8
    30ec:	82 a1       	ldd	r24, Z+34	; 0x22
    30ee:	80 95       	com	r24
    30f0:	89 23       	and	r24, r25
    30f2:	88 b9       	out	0x08, r24	; 8
    30f4:	87 e8       	ldi	r24, 0x87	; 135
    30f6:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    30fa:	e1 2c       	mov	r14, r1
    30fc:	81 a1       	ldd	r24, Z+33	; 0x21
    30fe:	e8 16       	cp	r14, r24
    3100:	10 f0       	brcs	.+4      	; 0x3106 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    3102:	e1 2c       	mov	r14, r1
    3104:	29 c0       	rjmp	.+82     	; 0x3158 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    3106:	50 e0       	ldi	r21, 0x00	; 0
    3108:	80 85       	ldd	r24, Z+8	; 0x08
    310a:	58 17       	cp	r21, r24
    310c:	18 f5       	brcc	.+70     	; 0x3154 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    310e:	a5 2f       	mov	r26, r21
    3110:	b0 e0       	ldi	r27, 0x00	; 0
    3112:	ef 01       	movw	r28, r30
    3114:	ca 0f       	add	r28, r26
    3116:	db 1f       	adc	r29, r27
    3118:	89 89       	ldd	r24, Y+17	; 0x11
    311a:	80 64       	ori	r24, 0x40	; 64
    311c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    3120:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3124:	80 64       	ori	r24, 0x40	; 64
    3126:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    312a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    312e:	86 fd       	sbrc	r24, 6
    3130:	fc cf       	rjmp	.-8      	; 0x312a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    3132:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    3136:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    313a:	aa 0f       	add	r26, r26
    313c:	bb 1f       	adc	r27, r27
    313e:	a2 0f       	add	r26, r18
    3140:	b3 1f       	adc	r27, r19
    3142:	8d 91       	ld	r24, X+
    3144:	9c 91       	ld	r25, X
    3146:	11 97       	sbiw	r26, 0x01	; 1
    3148:	86 0f       	add	r24, r22
    314a:	97 1f       	adc	r25, r23
    314c:	8d 93       	st	X+, r24
    314e:	9c 93       	st	X, r25
    3150:	5f 5f       	subi	r21, 0xFF	; 255
    3152:	da cf       	rjmp	.-76     	; 0x3108 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    3154:	e3 94       	inc	r14
    3156:	d2 cf       	rjmp	.-92     	; 0x30fc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    3158:	80 85       	ldd	r24, Z+8	; 0x08
    315a:	e8 16       	cp	r14, r24
    315c:	a0 f4       	brcc	.+40     	; 0x3186 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    315e:	e9 01       	movw	r28, r18
    3160:	ce 0d       	add	r28, r14
    3162:	d1 1d       	adc	r29, r1
    3164:	ce 0d       	add	r28, r14
    3166:	d1 1d       	adc	r29, r1
    3168:	61 a1       	ldd	r22, Z+33	; 0x21
    316a:	70 e0       	ldi	r23, 0x00	; 0
    316c:	cb 01       	movw	r24, r22
    316e:	95 95       	asr	r25
    3170:	87 95       	ror	r24
    3172:	a8 81       	ld	r26, Y
    3174:	b9 81       	ldd	r27, Y+1	; 0x01
    3176:	8a 0f       	add	r24, r26
    3178:	9b 1f       	adc	r25, r27
    317a:	0e 94 9c 1b 	call	0x3738	; 0x3738 <__udivmodhi4>
    317e:	79 83       	std	Y+1, r23	; 0x01
    3180:	68 83       	st	Y, r22
    3182:	e3 94       	inc	r14
    3184:	e9 cf       	rjmp	.-46     	; 0x3158 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    3186:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    318a:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    318e:	18 b9       	out	0x08, r17	; 8
    3190:	47 b9       	out	0x07, r20	; 7
    3192:	cd b7       	in	r28, 0x3d	; 61
    3194:	de b7       	in	r29, 0x3e	; 62
    3196:	e6 e0       	ldi	r30, 0x06	; 6
    3198:	0c 94 55 1c 	jmp	0x38aa	; 0x38aa <__epilogue_restores__+0x18>

0000319c <_ZN16PololuQTRSensors4readEPjh>:
    319c:	a0 e2       	ldi	r26, 0x20	; 32
    319e:	b0 e0       	ldi	r27, 0x00	; 0
    31a0:	e4 ed       	ldi	r30, 0xD4	; 212
    31a2:	f8 e1       	ldi	r31, 0x18	; 24
    31a4:	0c 94 38 1c 	jmp	0x3870	; 0x3870 <__prologue_saves__+0x16>
    31a8:	8c 01       	movw	r16, r24
    31aa:	7b 01       	movw	r14, r22
    31ac:	d4 2e       	mov	r13, r20
    31ae:	8f ef       	ldi	r24, 0xFF	; 255
    31b0:	84 0f       	add	r24, r20
    31b2:	82 30       	cpi	r24, 0x02	; 2
    31b4:	18 f4       	brcc	.+6      	; 0x31bc <_ZN16PololuQTRSensors4readEPjh+0x20>
    31b6:	c8 01       	movw	r24, r16
    31b8:	0e 94 10 17 	call	0x2e20	; 0x2e20 <_ZN16PololuQTRSensors10emittersOnEv>
    31bc:	d8 01       	movw	r26, r16
    31be:	50 96       	adiw	r26, 0x10	; 16
    31c0:	8c 91       	ld	r24, X
    31c2:	b7 01       	movw	r22, r14
    31c4:	81 11       	cpse	r24, r1
    31c6:	10 c0       	rjmp	.+32     	; 0x31e8 <_ZN16PololuQTRSensors4readEPjh+0x4c>
    31c8:	c8 01       	movw	r24, r16
    31ca:	0e 94 79 17 	call	0x2ef2	; 0x2ef2 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    31ce:	c8 01       	movw	r24, r16
    31d0:	0e 94 fb 16 	call	0x2df6	; 0x2df6 <_ZN16PololuQTRSensors11emittersOffEv>
    31d4:	b2 e0       	ldi	r27, 0x02	; 2
    31d6:	db 12       	cpse	r13, r27
    31d8:	3a c0       	rjmp	.+116    	; 0x324e <_ZN16PololuQTRSensors4readEPjh+0xb2>
    31da:	be 01       	movw	r22, r28
    31dc:	6f 5f       	subi	r22, 0xFF	; 255
    31de:	7f 4f       	sbci	r23, 0xFF	; 255
    31e0:	c8 01       	movw	r24, r16
    31e2:	0e 94 79 17 	call	0x2ef2	; 0x2ef2 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    31e6:	0f c0       	rjmp	.+30     	; 0x3206 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    31e8:	c8 01       	movw	r24, r16
    31ea:	0e 94 51 18 	call	0x30a2	; 0x30a2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    31ee:	c8 01       	movw	r24, r16
    31f0:	0e 94 fb 16 	call	0x2df6	; 0x2df6 <_ZN16PololuQTRSensors11emittersOffEv>
    31f4:	e2 e0       	ldi	r30, 0x02	; 2
    31f6:	de 12       	cpse	r13, r30
    31f8:	2a c0       	rjmp	.+84     	; 0x324e <_ZN16PololuQTRSensors4readEPjh+0xb2>
    31fa:	be 01       	movw	r22, r28
    31fc:	6f 5f       	subi	r22, 0xFF	; 255
    31fe:	7f 4f       	sbci	r23, 0xFF	; 255
    3200:	c8 01       	movw	r24, r16
    3202:	0e 94 51 18 	call	0x30a2	; 0x30a2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    3206:	40 e0       	ldi	r20, 0x00	; 0
    3208:	f8 01       	movw	r30, r16
    320a:	80 85       	ldd	r24, Z+8	; 0x08
    320c:	48 17       	cp	r20, r24
    320e:	f8 f4       	brcc	.+62     	; 0x324e <_ZN16PololuQTRSensors4readEPjh+0xb2>
    3210:	84 2f       	mov	r24, r20
    3212:	90 e0       	ldi	r25, 0x00	; 0
    3214:	88 0f       	add	r24, r24
    3216:	99 1f       	adc	r25, r25
    3218:	f7 01       	movw	r30, r14
    321a:	e8 0f       	add	r30, r24
    321c:	f9 1f       	adc	r31, r25
    321e:	21 e0       	ldi	r18, 0x01	; 1
    3220:	30 e0       	ldi	r19, 0x00	; 0
    3222:	2c 0f       	add	r18, r28
    3224:	3d 1f       	adc	r19, r29
    3226:	82 0f       	add	r24, r18
    3228:	93 1f       	adc	r25, r19
    322a:	d8 01       	movw	r26, r16
    322c:	1e 96       	adiw	r26, 0x0e	; 14
    322e:	2d 91       	ld	r18, X+
    3230:	3c 91       	ld	r19, X
    3232:	1f 97       	sbiw	r26, 0x0f	; 15
    3234:	dc 01       	movw	r26, r24
    3236:	8d 91       	ld	r24, X+
    3238:	9c 91       	ld	r25, X
    323a:	28 1b       	sub	r18, r24
    323c:	39 0b       	sbc	r19, r25
    323e:	80 81       	ld	r24, Z
    3240:	91 81       	ldd	r25, Z+1	; 0x01
    3242:	82 0f       	add	r24, r18
    3244:	93 1f       	adc	r25, r19
    3246:	91 83       	std	Z+1, r25	; 0x01
    3248:	80 83       	st	Z, r24
    324a:	4f 5f       	subi	r20, 0xFF	; 255
    324c:	dd cf       	rjmp	.-70     	; 0x3208 <_ZN16PololuQTRSensors4readEPjh+0x6c>
    324e:	a0 96       	adiw	r28, 0x20	; 32
    3250:	e7 e0       	ldi	r30, 0x07	; 7
    3252:	0c 94 54 1c 	jmp	0x38a8	; 0x38a8 <__epilogue_restores__+0x16>

00003256 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    3256:	2f 92       	push	r2
    3258:	3f 92       	push	r3
    325a:	5f 92       	push	r5
    325c:	6f 92       	push	r6
    325e:	7f 92       	push	r7
    3260:	8f 92       	push	r8
    3262:	9f 92       	push	r9
    3264:	af 92       	push	r10
    3266:	bf 92       	push	r11
    3268:	cf 92       	push	r12
    326a:	df 92       	push	r13
    326c:	ef 92       	push	r14
    326e:	ff 92       	push	r15
    3270:	0f 93       	push	r16
    3272:	1f 93       	push	r17
    3274:	cf 93       	push	r28
    3276:	df 93       	push	r29
    3278:	cd b7       	in	r28, 0x3d	; 61
    327a:	de b7       	in	r29, 0x3e	; 62
    327c:	c0 56       	subi	r28, 0x60	; 96
    327e:	d1 09       	sbc	r29, r1
    3280:	0f b6       	in	r0, 0x3f	; 63
    3282:	f8 94       	cli
    3284:	de bf       	out	0x3e, r29	; 62
    3286:	0f be       	out	0x3f, r0	; 63
    3288:	cd bf       	out	0x3d, r28	; 61
    328a:	8c 01       	movw	r16, r24
    328c:	4b 01       	movw	r8, r22
    328e:	5a 01       	movw	r10, r20
    3290:	52 2e       	mov	r5, r18
    3292:	da 01       	movw	r26, r20
    3294:	8d 91       	ld	r24, X+
    3296:	9c 91       	ld	r25, X
    3298:	89 2b       	or	r24, r25
    329a:	31 f0       	breq	.+12     	; 0x32a8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    329c:	f4 01       	movw	r30, r8
    329e:	80 81       	ld	r24, Z
    32a0:	91 81       	ldd	r25, Z+1	; 0x01
    32a2:	89 2b       	or	r24, r25
    32a4:	f1 f4       	brne	.+60     	; 0x32e2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    32a6:	24 c0       	rjmp	.+72     	; 0x32f0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    32a8:	d8 01       	movw	r26, r16
    32aa:	18 96       	adiw	r26, 0x08	; 8
    32ac:	8c 91       	ld	r24, X
    32ae:	90 e0       	ldi	r25, 0x00	; 0
    32b0:	88 0f       	add	r24, r24
    32b2:	99 1f       	adc	r25, r25
    32b4:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <malloc>
    32b8:	f5 01       	movw	r30, r10
    32ba:	91 83       	std	Z+1, r25	; 0x01
    32bc:	80 83       	st	Z, r24
    32be:	00 97       	sbiw	r24, 0x00	; 0
    32c0:	09 f4       	brne	.+2      	; 0x32c4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    32c2:	b1 c0       	rjmp	.+354    	; 0x3426 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    32c4:	fc 01       	movw	r30, r24
    32c6:	20 e0       	ldi	r18, 0x00	; 0
    32c8:	30 e0       	ldi	r19, 0x00	; 0
    32ca:	d8 01       	movw	r26, r16
    32cc:	18 96       	adiw	r26, 0x08	; 8
    32ce:	8c 91       	ld	r24, X
    32d0:	90 e0       	ldi	r25, 0x00	; 0
    32d2:	28 17       	cp	r18, r24
    32d4:	39 07       	cpc	r19, r25
    32d6:	14 f7       	brge	.-60     	; 0x329c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    32d8:	11 92       	st	Z+, r1
    32da:	11 92       	st	Z+, r1
    32dc:	2f 5f       	subi	r18, 0xFF	; 255
    32de:	3f 4f       	sbci	r19, 0xFF	; 255
    32e0:	f4 cf       	rjmp	.-24     	; 0x32ca <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    32e2:	e1 2c       	mov	r14, r1
    32e4:	f1 2c       	mov	r15, r1
    32e6:	6e 01       	movw	r12, r28
    32e8:	b1 e2       	ldi	r27, 0x21	; 33
    32ea:	cb 0e       	add	r12, r27
    32ec:	d1 1c       	adc	r13, r1
    32ee:	21 c0       	rjmp	.+66     	; 0x3332 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    32f0:	f8 01       	movw	r30, r16
    32f2:	80 85       	ldd	r24, Z+8	; 0x08
    32f4:	90 e0       	ldi	r25, 0x00	; 0
    32f6:	88 0f       	add	r24, r24
    32f8:	99 1f       	adc	r25, r25
    32fa:	0e 94 64 1c 	call	0x38c8	; 0x38c8 <malloc>
    32fe:	d4 01       	movw	r26, r8
    3300:	8d 93       	st	X+, r24
    3302:	9c 93       	st	X, r25
    3304:	00 97       	sbiw	r24, 0x00	; 0
    3306:	09 f4       	brne	.+2      	; 0x330a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    3308:	8e c0       	rjmp	.+284    	; 0x3426 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    330a:	fc 01       	movw	r30, r24
    330c:	20 e0       	ldi	r18, 0x00	; 0
    330e:	30 e0       	ldi	r19, 0x00	; 0
    3310:	d8 01       	movw	r26, r16
    3312:	18 96       	adiw	r26, 0x08	; 8
    3314:	8c 91       	ld	r24, X
    3316:	90 e0       	ldi	r25, 0x00	; 0
    3318:	28 17       	cp	r18, r24
    331a:	39 07       	cpc	r19, r25
    331c:	14 f7       	brge	.-60     	; 0x32e2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    331e:	d8 01       	movw	r26, r16
    3320:	1e 96       	adiw	r26, 0x0e	; 14
    3322:	8d 91       	ld	r24, X+
    3324:	9c 91       	ld	r25, X
    3326:	1f 97       	sbiw	r26, 0x0f	; 15
    3328:	81 93       	st	Z+, r24
    332a:	91 93       	st	Z+, r25
    332c:	2f 5f       	subi	r18, 0xFF	; 255
    332e:	3f 4f       	sbci	r19, 0xFF	; 255
    3330:	ef cf       	rjmp	.-34     	; 0x3310 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    3332:	45 2d       	mov	r20, r5
    3334:	be 01       	movw	r22, r28
    3336:	6f 5b       	subi	r22, 0xBF	; 191
    3338:	7f 4f       	sbci	r23, 0xFF	; 255
    333a:	c8 01       	movw	r24, r16
    333c:	0e 94 ce 18 	call	0x319c	; 0x319c <_ZN16PololuQTRSensors4readEPjh>
    3340:	f8 01       	movw	r30, r16
    3342:	60 84       	ldd	r6, Z+8	; 0x08
    3344:	71 2c       	mov	r7, r1
    3346:	fe 01       	movw	r30, r28
    3348:	ef 5b       	subi	r30, 0xBF	; 191
    334a:	ff 4f       	sbci	r31, 0xFF	; 255
    334c:	c6 01       	movw	r24, r12
    334e:	9e 01       	movw	r18, r28
    3350:	2f 5f       	subi	r18, 0xFF	; 255
    3352:	3f 4f       	sbci	r19, 0xFF	; 255
    3354:	19 01       	movw	r2, r18
    3356:	20 e0       	ldi	r18, 0x00	; 0
    3358:	30 e0       	ldi	r19, 0x00	; 0
    335a:	26 15       	cp	r18, r6
    335c:	37 05       	cpc	r19, r7
    335e:	4c f5       	brge	.+82     	; 0x33b2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    3360:	e1 14       	cp	r14, r1
    3362:	f1 04       	cpc	r15, r1
    3364:	89 f0       	breq	.+34     	; 0x3388 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    3366:	dc 01       	movw	r26, r24
    3368:	6d 91       	ld	r22, X+
    336a:	7c 91       	ld	r23, X
    336c:	40 81       	ld	r20, Z
    336e:	51 81       	ldd	r21, Z+1	; 0x01
    3370:	64 17       	cp	r22, r20
    3372:	75 07       	cpc	r23, r21
    3374:	48 f0       	brcs	.+18     	; 0x3388 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    3376:	d1 01       	movw	r26, r2
    3378:	6d 91       	ld	r22, X+
    337a:	7c 91       	ld	r23, X
    337c:	40 81       	ld	r20, Z
    337e:	51 81       	ldd	r21, Z+1	; 0x01
    3380:	46 17       	cp	r20, r22
    3382:	57 07       	cpc	r21, r23
    3384:	48 f0       	brcs	.+18     	; 0x3398 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    3386:	0d c0       	rjmp	.+26     	; 0x33a2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    3388:	40 81       	ld	r20, Z
    338a:	51 81       	ldd	r21, Z+1	; 0x01
    338c:	dc 01       	movw	r26, r24
    338e:	4d 93       	st	X+, r20
    3390:	5c 93       	st	X, r21
    3392:	e1 14       	cp	r14, r1
    3394:	f1 04       	cpc	r15, r1
    3396:	79 f7       	brne	.-34     	; 0x3376 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    3398:	40 81       	ld	r20, Z
    339a:	51 81       	ldd	r21, Z+1	; 0x01
    339c:	d1 01       	movw	r26, r2
    339e:	4d 93       	st	X+, r20
    33a0:	5c 93       	st	X, r21
    33a2:	2f 5f       	subi	r18, 0xFF	; 255
    33a4:	3f 4f       	sbci	r19, 0xFF	; 255
    33a6:	b2 e0       	ldi	r27, 0x02	; 2
    33a8:	2b 0e       	add	r2, r27
    33aa:	31 1c       	adc	r3, r1
    33ac:	32 96       	adiw	r30, 0x02	; 2
    33ae:	02 96       	adiw	r24, 0x02	; 2
    33b0:	d4 cf       	rjmp	.-88     	; 0x335a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    33b2:	ef ef       	ldi	r30, 0xFF	; 255
    33b4:	ee 1a       	sub	r14, r30
    33b6:	fe 0a       	sbc	r15, r30
    33b8:	fa e0       	ldi	r31, 0x0A	; 10
    33ba:	ef 16       	cp	r14, r31
    33bc:	f1 04       	cpc	r15, r1
    33be:	09 f0       	breq	.+2      	; 0x33c2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    33c0:	b8 cf       	rjmp	.-144    	; 0x3332 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    33c2:	9e 01       	movw	r18, r28
    33c4:	2f 5f       	subi	r18, 0xFF	; 255
    33c6:	3f 4f       	sbci	r19, 0xFF	; 255
    33c8:	79 01       	movw	r14, r18
    33ca:	36 01       	movw	r6, r12
    33cc:	80 e0       	ldi	r24, 0x00	; 0
    33ce:	90 e0       	ldi	r25, 0x00	; 0
    33d0:	f8 01       	movw	r30, r16
    33d2:	20 85       	ldd	r18, Z+8	; 0x08
    33d4:	30 e0       	ldi	r19, 0x00	; 0
    33d6:	82 17       	cp	r24, r18
    33d8:	93 07       	cpc	r25, r19
    33da:	2c f5       	brge	.+74     	; 0x3426 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    33dc:	d7 01       	movw	r26, r14
    33de:	2d 91       	ld	r18, X+
    33e0:	3d 91       	ld	r19, X+
    33e2:	7d 01       	movw	r14, r26
    33e4:	b3 01       	movw	r22, r6
    33e6:	6c 19       	sub	r22, r12
    33e8:	7d 09       	sbc	r23, r13
    33ea:	d5 01       	movw	r26, r10
    33ec:	ed 91       	ld	r30, X+
    33ee:	fc 91       	ld	r31, X
    33f0:	e6 0f       	add	r30, r22
    33f2:	f7 1f       	adc	r31, r23
    33f4:	40 81       	ld	r20, Z
    33f6:	51 81       	ldd	r21, Z+1	; 0x01
    33f8:	42 17       	cp	r20, r18
    33fa:	53 07       	cpc	r21, r19
    33fc:	10 f4       	brcc	.+4      	; 0x3402 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    33fe:	31 83       	std	Z+1, r19	; 0x01
    3400:	20 83       	st	Z, r18
    3402:	f3 01       	movw	r30, r6
    3404:	21 91       	ld	r18, Z+
    3406:	31 91       	ld	r19, Z+
    3408:	3f 01       	movw	r6, r30
    340a:	d4 01       	movw	r26, r8
    340c:	ed 91       	ld	r30, X+
    340e:	fc 91       	ld	r31, X
    3410:	e6 0f       	add	r30, r22
    3412:	f7 1f       	adc	r31, r23
    3414:	40 81       	ld	r20, Z
    3416:	51 81       	ldd	r21, Z+1	; 0x01
    3418:	24 17       	cp	r18, r20
    341a:	35 07       	cpc	r19, r21
    341c:	10 f4       	brcc	.+4      	; 0x3422 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    341e:	31 83       	std	Z+1, r19	; 0x01
    3420:	20 83       	st	Z, r18
    3422:	01 96       	adiw	r24, 0x01	; 1
    3424:	d5 cf       	rjmp	.-86     	; 0x33d0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    3426:	c0 5a       	subi	r28, 0xA0	; 160
    3428:	df 4f       	sbci	r29, 0xFF	; 255
    342a:	0f b6       	in	r0, 0x3f	; 63
    342c:	f8 94       	cli
    342e:	de bf       	out	0x3e, r29	; 62
    3430:	0f be       	out	0x3f, r0	; 63
    3432:	cd bf       	out	0x3d, r28	; 61
    3434:	df 91       	pop	r29
    3436:	cf 91       	pop	r28
    3438:	1f 91       	pop	r17
    343a:	0f 91       	pop	r16
    343c:	ff 90       	pop	r15
    343e:	ef 90       	pop	r14
    3440:	df 90       	pop	r13
    3442:	cf 90       	pop	r12
    3444:	bf 90       	pop	r11
    3446:	af 90       	pop	r10
    3448:	9f 90       	pop	r9
    344a:	8f 90       	pop	r8
    344c:	7f 90       	pop	r7
    344e:	6f 90       	pop	r6
    3450:	5f 90       	pop	r5
    3452:	3f 90       	pop	r3
    3454:	2f 90       	pop	r2
    3456:	08 95       	ret

00003458 <_ZN16PololuQTRSensors9calibrateEh>:
    3458:	1f 93       	push	r17
    345a:	cf 93       	push	r28
    345c:	df 93       	push	r29
    345e:	ec 01       	movw	r28, r24
    3460:	16 2f       	mov	r17, r22
    3462:	8f ef       	ldi	r24, 0xFF	; 255
    3464:	86 0f       	add	r24, r22
    3466:	82 30       	cpi	r24, 0x02	; 2
    3468:	18 f0       	brcs	.+6      	; 0x3470 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    346a:	66 23       	and	r22, r22
    346c:	59 f0       	breq	.+22     	; 0x3484 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    346e:	14 c0       	rjmp	.+40     	; 0x3498 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    3470:	21 e0       	ldi	r18, 0x01	; 1
    3472:	ae 01       	movw	r20, r28
    3474:	4e 5f       	subi	r20, 0xFE	; 254
    3476:	5f 4f       	sbci	r21, 0xFF	; 255
    3478:	be 01       	movw	r22, r28
    347a:	ce 01       	movw	r24, r28
    347c:	0e 94 2b 19 	call	0x3256	; 0x3256 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    3480:	12 30       	cpi	r17, 0x02	; 2
    3482:	51 f4       	brne	.+20     	; 0x3498 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    3484:	ae 01       	movw	r20, r28
    3486:	4a 5f       	subi	r20, 0xFA	; 250
    3488:	5f 4f       	sbci	r21, 0xFF	; 255
    348a:	be 01       	movw	r22, r28
    348c:	6c 5f       	subi	r22, 0xFC	; 252
    348e:	7f 4f       	sbci	r23, 0xFF	; 255
    3490:	20 e0       	ldi	r18, 0x00	; 0
    3492:	ce 01       	movw	r24, r28
    3494:	0e 94 2b 19 	call	0x3256	; 0x3256 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    3498:	df 91       	pop	r29
    349a:	cf 91       	pop	r28
    349c:	1f 91       	pop	r17
    349e:	08 95       	ret

000034a0 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    34a0:	a0 e0       	ldi	r26, 0x00	; 0
    34a2:	b0 e0       	ldi	r27, 0x00	; 0
    34a4:	e6 e5       	ldi	r30, 0x56	; 86
    34a6:	fa e1       	ldi	r31, 0x1A	; 26
    34a8:	0c 94 36 1c 	jmp	0x386c	; 0x386c <__prologue_saves__+0x12>
    34ac:	ec 01       	movw	r28, r24
    34ae:	8b 01       	movw	r16, r22
    34b0:	b4 2e       	mov	r11, r20
    34b2:	84 2f       	mov	r24, r20
    34b4:	8d 7f       	andi	r24, 0xFD	; 253
    34b6:	51 f4       	brne	.+20     	; 0x34cc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    34b8:	8c 81       	ldd	r24, Y+4	; 0x04
    34ba:	9d 81       	ldd	r25, Y+5	; 0x05
    34bc:	89 2b       	or	r24, r25
    34be:	09 f4       	brne	.+2      	; 0x34c2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    34c0:	97 c0       	rjmp	.+302    	; 0x35f0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    34c2:	8e 81       	ldd	r24, Y+6	; 0x06
    34c4:	9f 81       	ldd	r25, Y+7	; 0x07
    34c6:	89 2b       	or	r24, r25
    34c8:	09 f4       	brne	.+2      	; 0x34cc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    34ca:	92 c0       	rjmp	.+292    	; 0x35f0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    34cc:	8f ef       	ldi	r24, 0xFF	; 255
    34ce:	8b 0d       	add	r24, r11
    34d0:	82 30       	cpi	r24, 0x02	; 2
    34d2:	50 f4       	brcc	.+20     	; 0x34e8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    34d4:	88 81       	ld	r24, Y
    34d6:	99 81       	ldd	r25, Y+1	; 0x01
    34d8:	89 2b       	or	r24, r25
    34da:	09 f4       	brne	.+2      	; 0x34de <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    34dc:	89 c0       	rjmp	.+274    	; 0x35f0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    34de:	8a 81       	ldd	r24, Y+2	; 0x02
    34e0:	9b 81       	ldd	r25, Y+3	; 0x03
    34e2:	89 2b       	or	r24, r25
    34e4:	09 f4       	brne	.+2      	; 0x34e8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    34e6:	84 c0       	rjmp	.+264    	; 0x35f0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    34e8:	4b 2d       	mov	r20, r11
    34ea:	b8 01       	movw	r22, r16
    34ec:	ce 01       	movw	r24, r28
    34ee:	0e 94 ce 18 	call	0x319c	; 0x319c <_ZN16PololuQTRSensors4readEPjh>
    34f2:	78 01       	movw	r14, r16
    34f4:	00 e0       	ldi	r16, 0x00	; 0
    34f6:	10 e0       	ldi	r17, 0x00	; 0
    34f8:	c1 2c       	mov	r12, r1
    34fa:	d1 2c       	mov	r13, r1
    34fc:	88 85       	ldd	r24, Y+8	; 0x08
    34fe:	90 e0       	ldi	r25, 0x00	; 0
    3500:	c8 16       	cp	r12, r24
    3502:	d9 06       	cpc	r13, r25
    3504:	0c f0       	brlt	.+2      	; 0x3508 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    3506:	74 c0       	rjmp	.+232    	; 0x35f0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3508:	81 e0       	ldi	r24, 0x01	; 1
    350a:	b8 12       	cpse	r11, r24
    350c:	0a c0       	rjmp	.+20     	; 0x3522 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    350e:	ea 81       	ldd	r30, Y+2	; 0x02
    3510:	fb 81       	ldd	r31, Y+3	; 0x03
    3512:	e0 0f       	add	r30, r16
    3514:	f1 1f       	adc	r31, r17
    3516:	01 90       	ld	r0, Z+
    3518:	f0 81       	ld	r31, Z
    351a:	e0 2d       	mov	r30, r0
    351c:	a8 81       	ld	r26, Y
    351e:	b9 81       	ldd	r27, Y+1	; 0x01
    3520:	0d c0       	rjmp	.+26     	; 0x353c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    3522:	8c 81       	ldd	r24, Y+4	; 0x04
    3524:	9d 81       	ldd	r25, Y+5	; 0x05
    3526:	2e 81       	ldd	r18, Y+6	; 0x06
    3528:	3f 81       	ldd	r19, Y+7	; 0x07
    352a:	b1 10       	cpse	r11, r1
    352c:	0c c0       	rjmp	.+24     	; 0x3546 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    352e:	f9 01       	movw	r30, r18
    3530:	e0 0f       	add	r30, r16
    3532:	f1 1f       	adc	r31, r17
    3534:	01 90       	ld	r0, Z+
    3536:	f0 81       	ld	r31, Z
    3538:	e0 2d       	mov	r30, r0
    353a:	dc 01       	movw	r26, r24
    353c:	a0 0f       	add	r26, r16
    353e:	b1 1f       	adc	r27, r17
    3540:	8d 91       	ld	r24, X+
    3542:	9c 91       	ld	r25, X
    3544:	28 c0       	rjmp	.+80     	; 0x3596 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    3546:	fc 01       	movw	r30, r24
    3548:	e0 0f       	add	r30, r16
    354a:	f1 1f       	adc	r31, r17
    354c:	40 81       	ld	r20, Z
    354e:	51 81       	ldd	r21, Z+1	; 0x01
    3550:	e8 81       	ld	r30, Y
    3552:	f9 81       	ldd	r31, Y+1	; 0x01
    3554:	e0 0f       	add	r30, r16
    3556:	f1 1f       	adc	r31, r17
    3558:	80 81       	ld	r24, Z
    355a:	91 81       	ldd	r25, Z+1	; 0x01
    355c:	ee 85       	ldd	r30, Y+14	; 0x0e
    355e:	ff 85       	ldd	r31, Y+15	; 0x0f
    3560:	48 17       	cp	r20, r24
    3562:	59 07       	cpc	r21, r25
    3564:	10 f4       	brcc	.+4      	; 0x356a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    3566:	cf 01       	movw	r24, r30
    3568:	04 c0       	rjmp	.+8      	; 0x3572 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    356a:	8e 0f       	add	r24, r30
    356c:	9f 1f       	adc	r25, r31
    356e:	84 1b       	sub	r24, r20
    3570:	95 0b       	sbc	r25, r21
    3572:	d9 01       	movw	r26, r18
    3574:	a0 0f       	add	r26, r16
    3576:	b1 1f       	adc	r27, r17
    3578:	2d 91       	ld	r18, X+
    357a:	3c 91       	ld	r19, X
    357c:	aa 81       	ldd	r26, Y+2	; 0x02
    357e:	bb 81       	ldd	r27, Y+3	; 0x03
    3580:	a0 0f       	add	r26, r16
    3582:	b1 1f       	adc	r27, r17
    3584:	4d 91       	ld	r20, X+
    3586:	5c 91       	ld	r21, X
    3588:	24 17       	cp	r18, r20
    358a:	35 07       	cpc	r19, r21
    358c:	20 f0       	brcs	.+8      	; 0x3596 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    358e:	e4 0f       	add	r30, r20
    3590:	f5 1f       	adc	r31, r21
    3592:	e2 1b       	sub	r30, r18
    3594:	f3 0b       	sbc	r31, r19
    3596:	e8 1b       	sub	r30, r24
    3598:	f9 0b       	sbc	r31, r25
    359a:	a9 f0       	breq	.+42     	; 0x35c6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    359c:	d7 01       	movw	r26, r14
    359e:	2d 91       	ld	r18, X+
    35a0:	3c 91       	ld	r19, X
    35a2:	40 e0       	ldi	r20, 0x00	; 0
    35a4:	50 e0       	ldi	r21, 0x00	; 0
    35a6:	28 1b       	sub	r18, r24
    35a8:	39 0b       	sbc	r19, r25
    35aa:	41 09       	sbc	r20, r1
    35ac:	51 09       	sbc	r21, r1
    35ae:	a8 ee       	ldi	r26, 0xE8	; 232
    35b0:	b3 e0       	ldi	r27, 0x03	; 3
    35b2:	0e 94 1a 1c 	call	0x3834	; 0x3834 <__muluhisi3>
    35b6:	9f 01       	movw	r18, r30
    35b8:	40 e0       	ldi	r20, 0x00	; 0
    35ba:	50 e0       	ldi	r21, 0x00	; 0
    35bc:	0e 94 e6 1b 	call	0x37cc	; 0x37cc <__divmodsi4>
    35c0:	37 fd       	sbrc	r19, 7
    35c2:	0a c0       	rjmp	.+20     	; 0x35d8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    35c4:	02 c0       	rjmp	.+4      	; 0x35ca <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    35c6:	20 e0       	ldi	r18, 0x00	; 0
    35c8:	30 e0       	ldi	r19, 0x00	; 0
    35ca:	29 3e       	cpi	r18, 0xE9	; 233
    35cc:	b3 e0       	ldi	r27, 0x03	; 3
    35ce:	3b 07       	cpc	r19, r27
    35d0:	2c f0       	brlt	.+10     	; 0x35dc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    35d2:	28 ee       	ldi	r18, 0xE8	; 232
    35d4:	33 e0       	ldi	r19, 0x03	; 3
    35d6:	02 c0       	rjmp	.+4      	; 0x35dc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    35d8:	20 e0       	ldi	r18, 0x00	; 0
    35da:	30 e0       	ldi	r19, 0x00	; 0
    35dc:	f7 01       	movw	r30, r14
    35de:	21 93       	st	Z+, r18
    35e0:	31 93       	st	Z+, r19
    35e2:	7f 01       	movw	r14, r30
    35e4:	ff ef       	ldi	r31, 0xFF	; 255
    35e6:	cf 1a       	sub	r12, r31
    35e8:	df 0a       	sbc	r13, r31
    35ea:	0e 5f       	subi	r16, 0xFE	; 254
    35ec:	1f 4f       	sbci	r17, 0xFF	; 255
    35ee:	86 cf       	rjmp	.-244    	; 0x34fc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    35f0:	cd b7       	in	r28, 0x3d	; 61
    35f2:	de b7       	in	r29, 0x3e	; 62
    35f4:	e9 e0       	ldi	r30, 0x09	; 9
    35f6:	0c 94 52 1c 	jmp	0x38a4	; 0x38a4 <__epilogue_restores__+0x12>

000035fa <_ZN16PololuQTRSensors8readLineEPjhh>:
    35fa:	a0 e0       	ldi	r26, 0x00	; 0
    35fc:	b0 e0       	ldi	r27, 0x00	; 0
    35fe:	e3 e0       	ldi	r30, 0x03	; 3
    3600:	fb e1       	ldi	r31, 0x1B	; 27
    3602:	0c 94 2d 1c 	jmp	0x385a	; 0x385a <__prologue_saves__>
    3606:	ec 01       	movw	r28, r24
    3608:	8b 01       	movw	r16, r22
    360a:	82 2e       	mov	r8, r18
    360c:	0e 94 50 1a 	call	0x34a0	; 0x34a0 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    3610:	28 84       	ldd	r2, Y+8	; 0x08
    3612:	e8 01       	movw	r28, r16
    3614:	41 2c       	mov	r4, r1
    3616:	51 2c       	mov	r5, r1
    3618:	32 01       	movw	r6, r4
    361a:	00 e0       	ldi	r16, 0x00	; 0
    361c:	10 e0       	ldi	r17, 0x00	; 0
    361e:	c1 2c       	mov	r12, r1
    3620:	d1 2c       	mov	r13, r1
    3622:	76 01       	movw	r14, r12
    3624:	31 2c       	mov	r3, r1
    3626:	91 2c       	mov	r9, r1
    3628:	58 ee       	ldi	r21, 0xE8	; 232
    362a:	a5 2e       	mov	r10, r21
    362c:	53 e0       	ldi	r21, 0x03	; 3
    362e:	b5 2e       	mov	r11, r21
    3630:	92 14       	cp	r9, r2
    3632:	21 f1       	breq	.+72     	; 0x367c <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    3634:	e9 91       	ld	r30, Y+
    3636:	f9 91       	ld	r31, Y+
    3638:	88 20       	and	r8, r8
    363a:	21 f0       	breq	.+8      	; 0x3644 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    363c:	c5 01       	movw	r24, r10
    363e:	8e 1b       	sub	r24, r30
    3640:	9f 0b       	sbc	r25, r31
    3642:	fc 01       	movw	r30, r24
    3644:	e9 3c       	cpi	r30, 0xC9	; 201
    3646:	f1 05       	cpc	r31, r1
    3648:	24 f4       	brge	.+8      	; 0x3652 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    364a:	e3 33       	cpi	r30, 0x33	; 51
    364c:	f1 05       	cpc	r31, r1
    364e:	74 f0       	brlt	.+28     	; 0x366c <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    3650:	02 c0       	rjmp	.+4      	; 0x3656 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    3652:	33 24       	eor	r3, r3
    3654:	33 94       	inc	r3
    3656:	df 01       	movw	r26, r30
    3658:	a3 01       	movw	r20, r6
    365a:	92 01       	movw	r18, r4
    365c:	0e 94 25 1c 	call	0x384a	; 0x384a <__mulshisi3>
    3660:	c6 0e       	add	r12, r22
    3662:	d7 1e       	adc	r13, r23
    3664:	e8 1e       	adc	r14, r24
    3666:	f9 1e       	adc	r15, r25
    3668:	0e 0f       	add	r16, r30
    366a:	1f 1f       	adc	r17, r31
    366c:	93 94       	inc	r9
    366e:	98 ee       	ldi	r25, 0xE8	; 232
    3670:	49 0e       	add	r4, r25
    3672:	93 e0       	ldi	r25, 0x03	; 3
    3674:	59 1e       	adc	r5, r25
    3676:	61 1c       	adc	r6, r1
    3678:	71 1c       	adc	r7, r1
    367a:	da cf       	rjmp	.-76     	; 0x3630 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    367c:	31 10       	cpse	r3, r1
    367e:	1e c0       	rjmp	.+60     	; 0x36bc <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    3680:	49 2d       	mov	r20, r9
    3682:	50 e0       	ldi	r21, 0x00	; 0
    3684:	41 50       	subi	r20, 0x01	; 1
    3686:	51 09       	sbc	r21, r1
    3688:	24 ef       	ldi	r18, 0xF4	; 244
    368a:	31 e0       	ldi	r19, 0x01	; 1
    368c:	42 9f       	mul	r20, r18
    368e:	c0 01       	movw	r24, r0
    3690:	43 9f       	mul	r20, r19
    3692:	90 0d       	add	r25, r0
    3694:	52 9f       	mul	r21, r18
    3696:	90 0d       	add	r25, r0
    3698:	11 24       	eor	r1, r1
    369a:	20 91 fd 01 	lds	r18, 0x01FD	; 0x8001fd <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    369e:	30 91 fe 01 	lds	r19, 0x01FE	; 0x8001fe <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    36a2:	28 17       	cp	r18, r24
    36a4:	39 07       	cpc	r19, r25
    36a6:	b4 f0       	brlt	.+44     	; 0x36d4 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    36a8:	88 ee       	ldi	r24, 0xE8	; 232
    36aa:	93 e0       	ldi	r25, 0x03	; 3
    36ac:	48 9f       	mul	r20, r24
    36ae:	90 01       	movw	r18, r0
    36b0:	49 9f       	mul	r20, r25
    36b2:	30 0d       	add	r19, r0
    36b4:	58 9f       	mul	r21, r24
    36b6:	30 0d       	add	r19, r0
    36b8:	11 24       	eor	r1, r1
    36ba:	0e c0       	rjmp	.+28     	; 0x36d8 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    36bc:	98 01       	movw	r18, r16
    36be:	40 e0       	ldi	r20, 0x00	; 0
    36c0:	50 e0       	ldi	r21, 0x00	; 0
    36c2:	c7 01       	movw	r24, r14
    36c4:	b6 01       	movw	r22, r12
    36c6:	0e 94 c4 1b 	call	0x3788	; 0x3788 <__udivmodsi4>
    36ca:	30 93 fe 01 	sts	0x01FE, r19	; 0x8001fe <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    36ce:	20 93 fd 01 	sts	0x01FD, r18	; 0x8001fd <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    36d2:	02 c0       	rjmp	.+4      	; 0x36d8 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    36d4:	20 e0       	ldi	r18, 0x00	; 0
    36d6:	30 e0       	ldi	r19, 0x00	; 0
    36d8:	c9 01       	movw	r24, r18
    36da:	cd b7       	in	r28, 0x3d	; 61
    36dc:	de b7       	in	r29, 0x3e	; 62
    36de:	e2 e1       	ldi	r30, 0x12	; 18
    36e0:	0c 94 49 1c 	jmp	0x3892	; 0x3892 <__epilogue_restores__>

000036e4 <_ZN16PololuQTRSensorsD1Ev>:
    36e4:	cf 93       	push	r28
    36e6:	df 93       	push	r29
    36e8:	ec 01       	movw	r28, r24
    36ea:	8a 81       	ldd	r24, Y+2	; 0x02
    36ec:	9b 81       	ldd	r25, Y+3	; 0x03
    36ee:	00 97       	sbiw	r24, 0x00	; 0
    36f0:	11 f0       	breq	.+4      	; 0x36f6 <_ZN16PololuQTRSensorsD1Ev+0x12>
    36f2:	0e 94 fc 1c 	call	0x39f8	; 0x39f8 <free>
    36f6:	8e 81       	ldd	r24, Y+6	; 0x06
    36f8:	9f 81       	ldd	r25, Y+7	; 0x07
    36fa:	00 97       	sbiw	r24, 0x00	; 0
    36fc:	11 f0       	breq	.+4      	; 0x3702 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    36fe:	0e 94 fc 1c 	call	0x39f8	; 0x39f8 <free>
    3702:	88 81       	ld	r24, Y
    3704:	99 81       	ldd	r25, Y+1	; 0x01
    3706:	00 97       	sbiw	r24, 0x00	; 0
    3708:	11 f0       	breq	.+4      	; 0x370e <_ZN16PololuQTRSensorsD1Ev+0x2a>
    370a:	0e 94 fc 1c 	call	0x39f8	; 0x39f8 <free>
    370e:	8c 81       	ldd	r24, Y+4	; 0x04
    3710:	9d 81       	ldd	r25, Y+5	; 0x05
    3712:	00 97       	sbiw	r24, 0x00	; 0
    3714:	11 f0       	breq	.+4      	; 0x371a <_ZN16PololuQTRSensorsD1Ev+0x36>
    3716:	0e 94 fc 1c 	call	0x39f8	; 0x39f8 <free>
    371a:	df 91       	pop	r29
    371c:	cf 91       	pop	r28
    371e:	08 95       	ret

00003720 <__udivmodqi4>:
    3720:	99 1b       	sub	r25, r25
    3722:	79 e0       	ldi	r23, 0x09	; 9
    3724:	04 c0       	rjmp	.+8      	; 0x372e <__udivmodqi4_ep>

00003726 <__udivmodqi4_loop>:
    3726:	99 1f       	adc	r25, r25
    3728:	96 17       	cp	r25, r22
    372a:	08 f0       	brcs	.+2      	; 0x372e <__udivmodqi4_ep>
    372c:	96 1b       	sub	r25, r22

0000372e <__udivmodqi4_ep>:
    372e:	88 1f       	adc	r24, r24
    3730:	7a 95       	dec	r23
    3732:	c9 f7       	brne	.-14     	; 0x3726 <__udivmodqi4_loop>
    3734:	80 95       	com	r24
    3736:	08 95       	ret

00003738 <__udivmodhi4>:
    3738:	aa 1b       	sub	r26, r26
    373a:	bb 1b       	sub	r27, r27
    373c:	51 e1       	ldi	r21, 0x11	; 17
    373e:	07 c0       	rjmp	.+14     	; 0x374e <__udivmodhi4_ep>

00003740 <__udivmodhi4_loop>:
    3740:	aa 1f       	adc	r26, r26
    3742:	bb 1f       	adc	r27, r27
    3744:	a6 17       	cp	r26, r22
    3746:	b7 07       	cpc	r27, r23
    3748:	10 f0       	brcs	.+4      	; 0x374e <__udivmodhi4_ep>
    374a:	a6 1b       	sub	r26, r22
    374c:	b7 0b       	sbc	r27, r23

0000374e <__udivmodhi4_ep>:
    374e:	88 1f       	adc	r24, r24
    3750:	99 1f       	adc	r25, r25
    3752:	5a 95       	dec	r21
    3754:	a9 f7       	brne	.-22     	; 0x3740 <__udivmodhi4_loop>
    3756:	80 95       	com	r24
    3758:	90 95       	com	r25
    375a:	bc 01       	movw	r22, r24
    375c:	cd 01       	movw	r24, r26
    375e:	08 95       	ret

00003760 <__divmodhi4>:
    3760:	97 fb       	bst	r25, 7
    3762:	07 2e       	mov	r0, r23
    3764:	16 f4       	brtc	.+4      	; 0x376a <__divmodhi4+0xa>
    3766:	00 94       	com	r0
    3768:	07 d0       	rcall	.+14     	; 0x3778 <__divmodhi4_neg1>
    376a:	77 fd       	sbrc	r23, 7
    376c:	09 d0       	rcall	.+18     	; 0x3780 <__divmodhi4_neg2>
    376e:	0e 94 9c 1b 	call	0x3738	; 0x3738 <__udivmodhi4>
    3772:	07 fc       	sbrc	r0, 7
    3774:	05 d0       	rcall	.+10     	; 0x3780 <__divmodhi4_neg2>
    3776:	3e f4       	brtc	.+14     	; 0x3786 <__divmodhi4_exit>

00003778 <__divmodhi4_neg1>:
    3778:	90 95       	com	r25
    377a:	81 95       	neg	r24
    377c:	9f 4f       	sbci	r25, 0xFF	; 255
    377e:	08 95       	ret

00003780 <__divmodhi4_neg2>:
    3780:	70 95       	com	r23
    3782:	61 95       	neg	r22
    3784:	7f 4f       	sbci	r23, 0xFF	; 255

00003786 <__divmodhi4_exit>:
    3786:	08 95       	ret

00003788 <__udivmodsi4>:
    3788:	a1 e2       	ldi	r26, 0x21	; 33
    378a:	1a 2e       	mov	r1, r26
    378c:	aa 1b       	sub	r26, r26
    378e:	bb 1b       	sub	r27, r27
    3790:	fd 01       	movw	r30, r26
    3792:	0d c0       	rjmp	.+26     	; 0x37ae <__udivmodsi4_ep>

00003794 <__udivmodsi4_loop>:
    3794:	aa 1f       	adc	r26, r26
    3796:	bb 1f       	adc	r27, r27
    3798:	ee 1f       	adc	r30, r30
    379a:	ff 1f       	adc	r31, r31
    379c:	a2 17       	cp	r26, r18
    379e:	b3 07       	cpc	r27, r19
    37a0:	e4 07       	cpc	r30, r20
    37a2:	f5 07       	cpc	r31, r21
    37a4:	20 f0       	brcs	.+8      	; 0x37ae <__udivmodsi4_ep>
    37a6:	a2 1b       	sub	r26, r18
    37a8:	b3 0b       	sbc	r27, r19
    37aa:	e4 0b       	sbc	r30, r20
    37ac:	f5 0b       	sbc	r31, r21

000037ae <__udivmodsi4_ep>:
    37ae:	66 1f       	adc	r22, r22
    37b0:	77 1f       	adc	r23, r23
    37b2:	88 1f       	adc	r24, r24
    37b4:	99 1f       	adc	r25, r25
    37b6:	1a 94       	dec	r1
    37b8:	69 f7       	brne	.-38     	; 0x3794 <__udivmodsi4_loop>
    37ba:	60 95       	com	r22
    37bc:	70 95       	com	r23
    37be:	80 95       	com	r24
    37c0:	90 95       	com	r25
    37c2:	9b 01       	movw	r18, r22
    37c4:	ac 01       	movw	r20, r24
    37c6:	bd 01       	movw	r22, r26
    37c8:	cf 01       	movw	r24, r30
    37ca:	08 95       	ret

000037cc <__divmodsi4>:
    37cc:	05 2e       	mov	r0, r21
    37ce:	97 fb       	bst	r25, 7
    37d0:	1e f4       	brtc	.+6      	; 0x37d8 <__divmodsi4+0xc>
    37d2:	00 94       	com	r0
    37d4:	0e 94 fd 1b 	call	0x37fa	; 0x37fa <__negsi2>
    37d8:	57 fd       	sbrc	r21, 7
    37da:	07 d0       	rcall	.+14     	; 0x37ea <__divmodsi4_neg2>
    37dc:	0e 94 c4 1b 	call	0x3788	; 0x3788 <__udivmodsi4>
    37e0:	07 fc       	sbrc	r0, 7
    37e2:	03 d0       	rcall	.+6      	; 0x37ea <__divmodsi4_neg2>
    37e4:	4e f4       	brtc	.+18     	; 0x37f8 <__divmodsi4_exit>
    37e6:	0c 94 fd 1b 	jmp	0x37fa	; 0x37fa <__negsi2>

000037ea <__divmodsi4_neg2>:
    37ea:	50 95       	com	r21
    37ec:	40 95       	com	r20
    37ee:	30 95       	com	r19
    37f0:	21 95       	neg	r18
    37f2:	3f 4f       	sbci	r19, 0xFF	; 255
    37f4:	4f 4f       	sbci	r20, 0xFF	; 255
    37f6:	5f 4f       	sbci	r21, 0xFF	; 255

000037f8 <__divmodsi4_exit>:
    37f8:	08 95       	ret

000037fa <__negsi2>:
    37fa:	90 95       	com	r25
    37fc:	80 95       	com	r24
    37fe:	70 95       	com	r23
    3800:	61 95       	neg	r22
    3802:	7f 4f       	sbci	r23, 0xFF	; 255
    3804:	8f 4f       	sbci	r24, 0xFF	; 255
    3806:	9f 4f       	sbci	r25, 0xFF	; 255
    3808:	08 95       	ret

0000380a <__tablejump2__>:
    380a:	ee 0f       	add	r30, r30
    380c:	ff 1f       	adc	r31, r31
    380e:	05 90       	lpm	r0, Z+
    3810:	f4 91       	lpm	r31, Z
    3812:	e0 2d       	mov	r30, r0
    3814:	09 94       	ijmp

00003816 <__umulhisi3>:
    3816:	a2 9f       	mul	r26, r18
    3818:	b0 01       	movw	r22, r0
    381a:	b3 9f       	mul	r27, r19
    381c:	c0 01       	movw	r24, r0
    381e:	a3 9f       	mul	r26, r19
    3820:	70 0d       	add	r23, r0
    3822:	81 1d       	adc	r24, r1
    3824:	11 24       	eor	r1, r1
    3826:	91 1d       	adc	r25, r1
    3828:	b2 9f       	mul	r27, r18
    382a:	70 0d       	add	r23, r0
    382c:	81 1d       	adc	r24, r1
    382e:	11 24       	eor	r1, r1
    3830:	91 1d       	adc	r25, r1
    3832:	08 95       	ret

00003834 <__muluhisi3>:
    3834:	0e 94 0b 1c 	call	0x3816	; 0x3816 <__umulhisi3>
    3838:	a5 9f       	mul	r26, r21
    383a:	90 0d       	add	r25, r0
    383c:	b4 9f       	mul	r27, r20
    383e:	90 0d       	add	r25, r0
    3840:	a4 9f       	mul	r26, r20
    3842:	80 0d       	add	r24, r0
    3844:	91 1d       	adc	r25, r1
    3846:	11 24       	eor	r1, r1
    3848:	08 95       	ret

0000384a <__mulshisi3>:
    384a:	b7 ff       	sbrs	r27, 7
    384c:	0c 94 1a 1c 	jmp	0x3834	; 0x3834 <__muluhisi3>

00003850 <__mulohisi3>:
    3850:	0e 94 1a 1c 	call	0x3834	; 0x3834 <__muluhisi3>
    3854:	82 1b       	sub	r24, r18
    3856:	93 0b       	sbc	r25, r19
    3858:	08 95       	ret

0000385a <__prologue_saves__>:
    385a:	2f 92       	push	r2
    385c:	3f 92       	push	r3
    385e:	4f 92       	push	r4
    3860:	5f 92       	push	r5
    3862:	6f 92       	push	r6
    3864:	7f 92       	push	r7
    3866:	8f 92       	push	r8
    3868:	9f 92       	push	r9
    386a:	af 92       	push	r10
    386c:	bf 92       	push	r11
    386e:	cf 92       	push	r12
    3870:	df 92       	push	r13
    3872:	ef 92       	push	r14
    3874:	ff 92       	push	r15
    3876:	0f 93       	push	r16
    3878:	1f 93       	push	r17
    387a:	cf 93       	push	r28
    387c:	df 93       	push	r29
    387e:	cd b7       	in	r28, 0x3d	; 61
    3880:	de b7       	in	r29, 0x3e	; 62
    3882:	ca 1b       	sub	r28, r26
    3884:	db 0b       	sbc	r29, r27
    3886:	0f b6       	in	r0, 0x3f	; 63
    3888:	f8 94       	cli
    388a:	de bf       	out	0x3e, r29	; 62
    388c:	0f be       	out	0x3f, r0	; 63
    388e:	cd bf       	out	0x3d, r28	; 61
    3890:	09 94       	ijmp

00003892 <__epilogue_restores__>:
    3892:	2a 88       	ldd	r2, Y+18	; 0x12
    3894:	39 88       	ldd	r3, Y+17	; 0x11
    3896:	48 88       	ldd	r4, Y+16	; 0x10
    3898:	5f 84       	ldd	r5, Y+15	; 0x0f
    389a:	6e 84       	ldd	r6, Y+14	; 0x0e
    389c:	7d 84       	ldd	r7, Y+13	; 0x0d
    389e:	8c 84       	ldd	r8, Y+12	; 0x0c
    38a0:	9b 84       	ldd	r9, Y+11	; 0x0b
    38a2:	aa 84       	ldd	r10, Y+10	; 0x0a
    38a4:	b9 84       	ldd	r11, Y+9	; 0x09
    38a6:	c8 84       	ldd	r12, Y+8	; 0x08
    38a8:	df 80       	ldd	r13, Y+7	; 0x07
    38aa:	ee 80       	ldd	r14, Y+6	; 0x06
    38ac:	fd 80       	ldd	r15, Y+5	; 0x05
    38ae:	0c 81       	ldd	r16, Y+4	; 0x04
    38b0:	1b 81       	ldd	r17, Y+3	; 0x03
    38b2:	aa 81       	ldd	r26, Y+2	; 0x02
    38b4:	b9 81       	ldd	r27, Y+1	; 0x01
    38b6:	ce 0f       	add	r28, r30
    38b8:	d1 1d       	adc	r29, r1
    38ba:	0f b6       	in	r0, 0x3f	; 63
    38bc:	f8 94       	cli
    38be:	de bf       	out	0x3e, r29	; 62
    38c0:	0f be       	out	0x3f, r0	; 63
    38c2:	cd bf       	out	0x3d, r28	; 61
    38c4:	ed 01       	movw	r28, r26
    38c6:	08 95       	ret

000038c8 <malloc>:
    38c8:	0f 93       	push	r16
    38ca:	1f 93       	push	r17
    38cc:	cf 93       	push	r28
    38ce:	df 93       	push	r29
    38d0:	82 30       	cpi	r24, 0x02	; 2
    38d2:	91 05       	cpc	r25, r1
    38d4:	10 f4       	brcc	.+4      	; 0x38da <malloc+0x12>
    38d6:	82 e0       	ldi	r24, 0x02	; 2
    38d8:	90 e0       	ldi	r25, 0x00	; 0
    38da:	e0 91 21 02 	lds	r30, 0x0221	; 0x800221 <__flp>
    38de:	f0 91 22 02 	lds	r31, 0x0222	; 0x800222 <__flp+0x1>
    38e2:	20 e0       	ldi	r18, 0x00	; 0
    38e4:	30 e0       	ldi	r19, 0x00	; 0
    38e6:	a0 e0       	ldi	r26, 0x00	; 0
    38e8:	b0 e0       	ldi	r27, 0x00	; 0
    38ea:	30 97       	sbiw	r30, 0x00	; 0
    38ec:	19 f1       	breq	.+70     	; 0x3934 <malloc+0x6c>
    38ee:	40 81       	ld	r20, Z
    38f0:	51 81       	ldd	r21, Z+1	; 0x01
    38f2:	02 81       	ldd	r16, Z+2	; 0x02
    38f4:	13 81       	ldd	r17, Z+3	; 0x03
    38f6:	48 17       	cp	r20, r24
    38f8:	59 07       	cpc	r21, r25
    38fa:	c8 f0       	brcs	.+50     	; 0x392e <malloc+0x66>
    38fc:	84 17       	cp	r24, r20
    38fe:	95 07       	cpc	r25, r21
    3900:	69 f4       	brne	.+26     	; 0x391c <malloc+0x54>
    3902:	10 97       	sbiw	r26, 0x00	; 0
    3904:	31 f0       	breq	.+12     	; 0x3912 <malloc+0x4a>
    3906:	12 96       	adiw	r26, 0x02	; 2
    3908:	0c 93       	st	X, r16
    390a:	12 97       	sbiw	r26, 0x02	; 2
    390c:	13 96       	adiw	r26, 0x03	; 3
    390e:	1c 93       	st	X, r17
    3910:	27 c0       	rjmp	.+78     	; 0x3960 <malloc+0x98>
    3912:	00 93 21 02 	sts	0x0221, r16	; 0x800221 <__flp>
    3916:	10 93 22 02 	sts	0x0222, r17	; 0x800222 <__flp+0x1>
    391a:	22 c0       	rjmp	.+68     	; 0x3960 <malloc+0x98>
    391c:	21 15       	cp	r18, r1
    391e:	31 05       	cpc	r19, r1
    3920:	19 f0       	breq	.+6      	; 0x3928 <malloc+0x60>
    3922:	42 17       	cp	r20, r18
    3924:	53 07       	cpc	r21, r19
    3926:	18 f4       	brcc	.+6      	; 0x392e <malloc+0x66>
    3928:	9a 01       	movw	r18, r20
    392a:	bd 01       	movw	r22, r26
    392c:	ef 01       	movw	r28, r30
    392e:	df 01       	movw	r26, r30
    3930:	f8 01       	movw	r30, r16
    3932:	db cf       	rjmp	.-74     	; 0x38ea <malloc+0x22>
    3934:	21 15       	cp	r18, r1
    3936:	31 05       	cpc	r19, r1
    3938:	f9 f0       	breq	.+62     	; 0x3978 <malloc+0xb0>
    393a:	28 1b       	sub	r18, r24
    393c:	39 0b       	sbc	r19, r25
    393e:	24 30       	cpi	r18, 0x04	; 4
    3940:	31 05       	cpc	r19, r1
    3942:	80 f4       	brcc	.+32     	; 0x3964 <malloc+0x9c>
    3944:	8a 81       	ldd	r24, Y+2	; 0x02
    3946:	9b 81       	ldd	r25, Y+3	; 0x03
    3948:	61 15       	cp	r22, r1
    394a:	71 05       	cpc	r23, r1
    394c:	21 f0       	breq	.+8      	; 0x3956 <malloc+0x8e>
    394e:	fb 01       	movw	r30, r22
    3950:	93 83       	std	Z+3, r25	; 0x03
    3952:	82 83       	std	Z+2, r24	; 0x02
    3954:	04 c0       	rjmp	.+8      	; 0x395e <malloc+0x96>
    3956:	90 93 22 02 	sts	0x0222, r25	; 0x800222 <__flp+0x1>
    395a:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <__flp>
    395e:	fe 01       	movw	r30, r28
    3960:	32 96       	adiw	r30, 0x02	; 2
    3962:	44 c0       	rjmp	.+136    	; 0x39ec <malloc+0x124>
    3964:	fe 01       	movw	r30, r28
    3966:	e2 0f       	add	r30, r18
    3968:	f3 1f       	adc	r31, r19
    396a:	81 93       	st	Z+, r24
    396c:	91 93       	st	Z+, r25
    396e:	22 50       	subi	r18, 0x02	; 2
    3970:	31 09       	sbc	r19, r1
    3972:	39 83       	std	Y+1, r19	; 0x01
    3974:	28 83       	st	Y, r18
    3976:	3a c0       	rjmp	.+116    	; 0x39ec <malloc+0x124>
    3978:	20 91 1f 02 	lds	r18, 0x021F	; 0x80021f <__brkval>
    397c:	30 91 20 02 	lds	r19, 0x0220	; 0x800220 <__brkval+0x1>
    3980:	23 2b       	or	r18, r19
    3982:	41 f4       	brne	.+16     	; 0x3994 <malloc+0xcc>
    3984:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__malloc_heap_start>
    3988:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__malloc_heap_start+0x1>
    398c:	30 93 20 02 	sts	0x0220, r19	; 0x800220 <__brkval+0x1>
    3990:	20 93 1f 02 	sts	0x021F, r18	; 0x80021f <__brkval>
    3994:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_end>
    3998:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_end+0x1>
    399c:	21 15       	cp	r18, r1
    399e:	31 05       	cpc	r19, r1
    39a0:	41 f4       	brne	.+16     	; 0x39b2 <malloc+0xea>
    39a2:	2d b7       	in	r18, 0x3d	; 61
    39a4:	3e b7       	in	r19, 0x3e	; 62
    39a6:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <__malloc_margin>
    39aa:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <__malloc_margin+0x1>
    39ae:	24 1b       	sub	r18, r20
    39b0:	35 0b       	sbc	r19, r21
    39b2:	e0 91 1f 02 	lds	r30, 0x021F	; 0x80021f <__brkval>
    39b6:	f0 91 20 02 	lds	r31, 0x0220	; 0x800220 <__brkval+0x1>
    39ba:	e2 17       	cp	r30, r18
    39bc:	f3 07       	cpc	r31, r19
    39be:	a0 f4       	brcc	.+40     	; 0x39e8 <malloc+0x120>
    39c0:	2e 1b       	sub	r18, r30
    39c2:	3f 0b       	sbc	r19, r31
    39c4:	28 17       	cp	r18, r24
    39c6:	39 07       	cpc	r19, r25
    39c8:	78 f0       	brcs	.+30     	; 0x39e8 <malloc+0x120>
    39ca:	ac 01       	movw	r20, r24
    39cc:	4e 5f       	subi	r20, 0xFE	; 254
    39ce:	5f 4f       	sbci	r21, 0xFF	; 255
    39d0:	24 17       	cp	r18, r20
    39d2:	35 07       	cpc	r19, r21
    39d4:	48 f0       	brcs	.+18     	; 0x39e8 <malloc+0x120>
    39d6:	4e 0f       	add	r20, r30
    39d8:	5f 1f       	adc	r21, r31
    39da:	50 93 20 02 	sts	0x0220, r21	; 0x800220 <__brkval+0x1>
    39de:	40 93 1f 02 	sts	0x021F, r20	; 0x80021f <__brkval>
    39e2:	81 93       	st	Z+, r24
    39e4:	91 93       	st	Z+, r25
    39e6:	02 c0       	rjmp	.+4      	; 0x39ec <malloc+0x124>
    39e8:	e0 e0       	ldi	r30, 0x00	; 0
    39ea:	f0 e0       	ldi	r31, 0x00	; 0
    39ec:	cf 01       	movw	r24, r30
    39ee:	df 91       	pop	r29
    39f0:	cf 91       	pop	r28
    39f2:	1f 91       	pop	r17
    39f4:	0f 91       	pop	r16
    39f6:	08 95       	ret

000039f8 <free>:
    39f8:	cf 93       	push	r28
    39fa:	df 93       	push	r29
    39fc:	00 97       	sbiw	r24, 0x00	; 0
    39fe:	09 f4       	brne	.+2      	; 0x3a02 <free+0xa>
    3a00:	81 c0       	rjmp	.+258    	; 0x3b04 <free+0x10c>
    3a02:	fc 01       	movw	r30, r24
    3a04:	32 97       	sbiw	r30, 0x02	; 2
    3a06:	13 82       	std	Z+3, r1	; 0x03
    3a08:	12 82       	std	Z+2, r1	; 0x02
    3a0a:	a0 91 21 02 	lds	r26, 0x0221	; 0x800221 <__flp>
    3a0e:	b0 91 22 02 	lds	r27, 0x0222	; 0x800222 <__flp+0x1>
    3a12:	10 97       	sbiw	r26, 0x00	; 0
    3a14:	81 f4       	brne	.+32     	; 0x3a36 <free+0x3e>
    3a16:	20 81       	ld	r18, Z
    3a18:	31 81       	ldd	r19, Z+1	; 0x01
    3a1a:	82 0f       	add	r24, r18
    3a1c:	93 1f       	adc	r25, r19
    3a1e:	20 91 1f 02 	lds	r18, 0x021F	; 0x80021f <__brkval>
    3a22:	30 91 20 02 	lds	r19, 0x0220	; 0x800220 <__brkval+0x1>
    3a26:	28 17       	cp	r18, r24
    3a28:	39 07       	cpc	r19, r25
    3a2a:	51 f5       	brne	.+84     	; 0x3a80 <free+0x88>
    3a2c:	f0 93 20 02 	sts	0x0220, r31	; 0x800220 <__brkval+0x1>
    3a30:	e0 93 1f 02 	sts	0x021F, r30	; 0x80021f <__brkval>
    3a34:	67 c0       	rjmp	.+206    	; 0x3b04 <free+0x10c>
    3a36:	ed 01       	movw	r28, r26
    3a38:	20 e0       	ldi	r18, 0x00	; 0
    3a3a:	30 e0       	ldi	r19, 0x00	; 0
    3a3c:	ce 17       	cp	r28, r30
    3a3e:	df 07       	cpc	r29, r31
    3a40:	40 f4       	brcc	.+16     	; 0x3a52 <free+0x5a>
    3a42:	4a 81       	ldd	r20, Y+2	; 0x02
    3a44:	5b 81       	ldd	r21, Y+3	; 0x03
    3a46:	9e 01       	movw	r18, r28
    3a48:	41 15       	cp	r20, r1
    3a4a:	51 05       	cpc	r21, r1
    3a4c:	f1 f0       	breq	.+60     	; 0x3a8a <free+0x92>
    3a4e:	ea 01       	movw	r28, r20
    3a50:	f5 cf       	rjmp	.-22     	; 0x3a3c <free+0x44>
    3a52:	d3 83       	std	Z+3, r29	; 0x03
    3a54:	c2 83       	std	Z+2, r28	; 0x02
    3a56:	40 81       	ld	r20, Z
    3a58:	51 81       	ldd	r21, Z+1	; 0x01
    3a5a:	84 0f       	add	r24, r20
    3a5c:	95 1f       	adc	r25, r21
    3a5e:	c8 17       	cp	r28, r24
    3a60:	d9 07       	cpc	r29, r25
    3a62:	59 f4       	brne	.+22     	; 0x3a7a <free+0x82>
    3a64:	88 81       	ld	r24, Y
    3a66:	99 81       	ldd	r25, Y+1	; 0x01
    3a68:	84 0f       	add	r24, r20
    3a6a:	95 1f       	adc	r25, r21
    3a6c:	02 96       	adiw	r24, 0x02	; 2
    3a6e:	91 83       	std	Z+1, r25	; 0x01
    3a70:	80 83       	st	Z, r24
    3a72:	8a 81       	ldd	r24, Y+2	; 0x02
    3a74:	9b 81       	ldd	r25, Y+3	; 0x03
    3a76:	93 83       	std	Z+3, r25	; 0x03
    3a78:	82 83       	std	Z+2, r24	; 0x02
    3a7a:	21 15       	cp	r18, r1
    3a7c:	31 05       	cpc	r19, r1
    3a7e:	29 f4       	brne	.+10     	; 0x3a8a <free+0x92>
    3a80:	f0 93 22 02 	sts	0x0222, r31	; 0x800222 <__flp+0x1>
    3a84:	e0 93 21 02 	sts	0x0221, r30	; 0x800221 <__flp>
    3a88:	3d c0       	rjmp	.+122    	; 0x3b04 <free+0x10c>
    3a8a:	e9 01       	movw	r28, r18
    3a8c:	fb 83       	std	Y+3, r31	; 0x03
    3a8e:	ea 83       	std	Y+2, r30	; 0x02
    3a90:	49 91       	ld	r20, Y+
    3a92:	59 91       	ld	r21, Y+
    3a94:	c4 0f       	add	r28, r20
    3a96:	d5 1f       	adc	r29, r21
    3a98:	ec 17       	cp	r30, r28
    3a9a:	fd 07       	cpc	r31, r29
    3a9c:	61 f4       	brne	.+24     	; 0x3ab6 <free+0xbe>
    3a9e:	80 81       	ld	r24, Z
    3aa0:	91 81       	ldd	r25, Z+1	; 0x01
    3aa2:	84 0f       	add	r24, r20
    3aa4:	95 1f       	adc	r25, r21
    3aa6:	02 96       	adiw	r24, 0x02	; 2
    3aa8:	e9 01       	movw	r28, r18
    3aaa:	99 83       	std	Y+1, r25	; 0x01
    3aac:	88 83       	st	Y, r24
    3aae:	82 81       	ldd	r24, Z+2	; 0x02
    3ab0:	93 81       	ldd	r25, Z+3	; 0x03
    3ab2:	9b 83       	std	Y+3, r25	; 0x03
    3ab4:	8a 83       	std	Y+2, r24	; 0x02
    3ab6:	e0 e0       	ldi	r30, 0x00	; 0
    3ab8:	f0 e0       	ldi	r31, 0x00	; 0
    3aba:	12 96       	adiw	r26, 0x02	; 2
    3abc:	8d 91       	ld	r24, X+
    3abe:	9c 91       	ld	r25, X
    3ac0:	13 97       	sbiw	r26, 0x03	; 3
    3ac2:	00 97       	sbiw	r24, 0x00	; 0
    3ac4:	19 f0       	breq	.+6      	; 0x3acc <free+0xd4>
    3ac6:	fd 01       	movw	r30, r26
    3ac8:	dc 01       	movw	r26, r24
    3aca:	f7 cf       	rjmp	.-18     	; 0x3aba <free+0xc2>
    3acc:	8d 91       	ld	r24, X+
    3ace:	9c 91       	ld	r25, X
    3ad0:	11 97       	sbiw	r26, 0x01	; 1
    3ad2:	9d 01       	movw	r18, r26
    3ad4:	2e 5f       	subi	r18, 0xFE	; 254
    3ad6:	3f 4f       	sbci	r19, 0xFF	; 255
    3ad8:	82 0f       	add	r24, r18
    3ada:	93 1f       	adc	r25, r19
    3adc:	20 91 1f 02 	lds	r18, 0x021F	; 0x80021f <__brkval>
    3ae0:	30 91 20 02 	lds	r19, 0x0220	; 0x800220 <__brkval+0x1>
    3ae4:	28 17       	cp	r18, r24
    3ae6:	39 07       	cpc	r19, r25
    3ae8:	69 f4       	brne	.+26     	; 0x3b04 <free+0x10c>
    3aea:	30 97       	sbiw	r30, 0x00	; 0
    3aec:	29 f4       	brne	.+10     	; 0x3af8 <free+0x100>
    3aee:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <__flp+0x1>
    3af2:	10 92 21 02 	sts	0x0221, r1	; 0x800221 <__flp>
    3af6:	02 c0       	rjmp	.+4      	; 0x3afc <free+0x104>
    3af8:	13 82       	std	Z+3, r1	; 0x03
    3afa:	12 82       	std	Z+2, r1	; 0x02
    3afc:	b0 93 20 02 	sts	0x0220, r27	; 0x800220 <__brkval+0x1>
    3b00:	a0 93 1f 02 	sts	0x021F, r26	; 0x80021f <__brkval>
    3b04:	df 91       	pop	r29
    3b06:	cf 91       	pop	r28
    3b08:	08 95       	ret

00003b0a <strncat>:
    3b0a:	fb 01       	movw	r30, r22
    3b0c:	dc 01       	movw	r26, r24
    3b0e:	0d 90       	ld	r0, X+
    3b10:	00 20       	and	r0, r0
    3b12:	e9 f7       	brne	.-6      	; 0x3b0e <strncat+0x4>
    3b14:	11 97       	sbiw	r26, 0x01	; 1
    3b16:	41 50       	subi	r20, 0x01	; 1
    3b18:	50 40       	sbci	r21, 0x00	; 0
    3b1a:	28 f0       	brcs	.+10     	; 0x3b26 <strncat+0x1c>
    3b1c:	01 90       	ld	r0, Z+
    3b1e:	00 20       	and	r0, r0
    3b20:	0d 92       	st	X+, r0
    3b22:	c9 f7       	brne	.-14     	; 0x3b16 <strncat+0xc>
    3b24:	08 95       	ret
    3b26:	1c 92       	st	X, r1
    3b28:	08 95       	ret

00003b2a <__do_global_dtors>:
    3b2a:	10 e0       	ldi	r17, 0x00	; 0
    3b2c:	c2 e4       	ldi	r28, 0x42	; 66
    3b2e:	d0 e0       	ldi	r29, 0x00	; 0
    3b30:	04 c0       	rjmp	.+8      	; 0x3b3a <__do_global_dtors+0x10>
    3b32:	fe 01       	movw	r30, r28
    3b34:	0e 94 05 1c 	call	0x380a	; 0x380a <__tablejump2__>
    3b38:	21 96       	adiw	r28, 0x01	; 1
    3b3a:	c3 34       	cpi	r28, 0x43	; 67
    3b3c:	d1 07       	cpc	r29, r17
    3b3e:	c9 f7       	brne	.-14     	; 0x3b32 <__do_global_dtors+0x8>
    3b40:	f8 94       	cli

00003b42 <__stop_program>:
    3b42:	ff cf       	rjmp	.-2      	; 0x3b42 <__stop_program>
