
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008c  00800100  00003d84  00003e18  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003d84  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000093  0080018c  0080018c  00003ea4  2**0
                  ALLOC
  3 .stab         00007b48  00000000  00000000  00003ea4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000a086  00000000  00000000  0000b9ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  00015a72  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00015ab4  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 000001c0  00000000  00000000  00015af4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   0000360b  00000000  00000000  00015cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000011e1  00000000  00000000  000192bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0000211d  00000000  00000000  0001a4a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  0000056c  00000000  00000000  0001c5c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000a4a  00000000  00000000  0001cb2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00001699  00000000  00000000  0001d576  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000001d8  00000000  00000000  0001ec0f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 43 00 	jmp	0x86	; 0x86 <__dtors_end>
       4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
       8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
       c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      24:	0c 94 c3 16 	jmp	0x2d86	; 0x2d86 <__vector_9>
      28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      34:	0c 94 5a 12 	jmp	0x24b4	; 0x24b4 <__vector_13>
      38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      48:	0c 94 d2 15 	jmp	0x2ba4	; 0x2ba4 <__vector_18>
      4c:	0c 94 9e 16 	jmp	0x2d3c	; 0x2d3c <__vector_19>
      50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      68:	b9 08       	sbc	r11, r9
      6a:	e7 08       	sbc	r14, r7
      6c:	52 09       	sbc	r21, r2
      6e:	bd 08       	sbc	r11, r13
      70:	cc 08       	sbc	r12, r12
      72:	db 08       	sbc	r13, r11
      74:	bd 08       	sbc	r11, r13
      76:	bd 08       	sbc	r11, r13
      78:	bd 08       	sbc	r11, r13

0000007a <__trampolines_end>:
      7a:	3e 67       	ori	r19, 0x7E	; 126
      7c:	33 32       	cpi	r19, 0x23	; 35
      7e:	3e 3e       	cpi	r19, 0xEE	; 238
      80:	63 33       	cpi	r22, 0x33	; 51
      82:	32 00       	.word	0x0032	; ????

00000084 <__ctors_end>:
      84:	a4 17       	cp	r26, r20

00000086 <__dtors_end>:
      86:	11 24       	eor	r1, r1
      88:	1f be       	out	0x3f, r1	; 63
      8a:	cf ef       	ldi	r28, 0xFF	; 255
      8c:	d8 e0       	ldi	r29, 0x08	; 8
      8e:	de bf       	out	0x3e, r29	; 62
      90:	cd bf       	out	0x3d, r28	; 61

00000092 <__do_copy_data>:
      92:	11 e0       	ldi	r17, 0x01	; 1
      94:	a0 e0       	ldi	r26, 0x00	; 0
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	e4 e8       	ldi	r30, 0x84	; 132
      9a:	fd e3       	ldi	r31, 0x3D	; 61
      9c:	02 c0       	rjmp	.+4      	; 0xa2 <__do_copy_data+0x10>
      9e:	05 90       	lpm	r0, Z+
      a0:	0d 92       	st	X+, r0
      a2:	ac 38       	cpi	r26, 0x8C	; 140
      a4:	b1 07       	cpc	r27, r17
      a6:	d9 f7       	brne	.-10     	; 0x9e <__do_copy_data+0xc>

000000a8 <__do_clear_bss>:
      a8:	22 e0       	ldi	r18, 0x02	; 2
      aa:	ac e8       	ldi	r26, 0x8C	; 140
      ac:	b1 e0       	ldi	r27, 0x01	; 1
      ae:	01 c0       	rjmp	.+2      	; 0xb2 <.do_clear_bss_start>

000000b0 <.do_clear_bss_loop>:
      b0:	1d 92       	st	X+, r1

000000b2 <.do_clear_bss_start>:
      b2:	af 31       	cpi	r26, 0x1F	; 31
      b4:	b2 07       	cpc	r27, r18
      b6:	e1 f7       	brne	.-8      	; 0xb0 <.do_clear_bss_loop>
      b8:	0e 94 17 04 	call	0x82e	; 0x82e <main>
      bc:	0c 94 b5 1e 	jmp	0x3d6a	; 0x3d6a <__do_global_dtors>

000000c0 <__bad_interrupt>:
      c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <filllocationarrays>:


#define START 010
#define STOP 101

void filllocationarrays(Communications *self){
      c4:	cf 93       	push	r28
      c6:	df 93       	push	r29
      c8:	cd b7       	in	r28, 0x3d	; 61
      ca:	de b7       	in	r29, 0x3e	; 62
      cc:	e2 97       	sbiw	r28, 0x32	; 50
      ce:	0f b6       	in	r0, 0x3f	; 63
      d0:	f8 94       	cli
      d2:	de bf       	out	0x3e, r29	; 62
      d4:	0f be       	out	0x3f, r0	; 63
      d6:	cd bf       	out	0x3d, r28	; 61
      d8:	dc 01       	movw	r26, r24
	char arrx[25];
	char arry[25];
	char set;
	int placement=0;

	for (int i=0;i<25;i++){
      da:	20 e0       	ldi	r18, 0x00	; 0
      dc:	30 e0       	ldi	r19, 0x00	; 0
      de:	1a c0       	rjmp	.+52     	; 0x114 <filllocationarrays+0x50>
	arrx[i]=arry[i]=self->Orderary[i]=self->Orderarx[i]=0;
      e0:	ad 01       	movw	r20, r26
      e2:	42 0f       	add	r20, r18
      e4:	53 1f       	adc	r21, r19
      e6:	ca 01       	movw	r24, r20
      e8:	8e 5a       	subi	r24, 0xAE	; 174
      ea:	9f 4f       	sbci	r25, 0xFF	; 255
      ec:	fc 01       	movw	r30, r24
      ee:	10 82       	st	Z, r1
      f0:	fa 01       	movw	r30, r20
      f2:	11 ae       	std	Z+57, r1	; 0x39
      f4:	ea e1       	ldi	r30, 0x1A	; 26
      f6:	f0 e0       	ldi	r31, 0x00	; 0
      f8:	ec 0f       	add	r30, r28
      fa:	fd 1f       	adc	r31, r29
      fc:	e2 0f       	add	r30, r18
      fe:	f3 1f       	adc	r31, r19
     100:	10 82       	st	Z, r1
     102:	e1 e0       	ldi	r30, 0x01	; 1
     104:	f0 e0       	ldi	r31, 0x00	; 0
     106:	ec 0f       	add	r30, r28
     108:	fd 1f       	adc	r31, r29
     10a:	e2 0f       	add	r30, r18
     10c:	f3 1f       	adc	r31, r19
     10e:	10 82       	st	Z, r1
	char arrx[25];
	char arry[25];
	char set;
	int placement=0;

	for (int i=0;i<25;i++){
     110:	2f 5f       	subi	r18, 0xFF	; 255
     112:	3f 4f       	sbci	r19, 0xFF	; 255
     114:	29 31       	cpi	r18, 0x19	; 25
     116:	31 05       	cpc	r19, r1
     118:	1c f3       	brlt	.-58     	; 0xe0 <filllocationarrays+0x1c>
	arrx[i]=arry[i]=self->Orderary[i]=self->Orderarx[i]=0;
}

	if (self->Recieved[1]==1){
     11a:	5c 96       	adiw	r26, 0x1c	; 28
     11c:	8c 91       	ld	r24, X
     11e:	5c 97       	sbiw	r26, 0x1c	; 28
     120:	81 30       	cpi	r24, 0x01	; 1
     122:	29 f4       	brne	.+10     	; 0x12e <filllocationarrays+0x6a>
		arrx[placement]=1;
     124:	89 83       	std	Y+1, r24	; 0x01
		arry[placement]=1;
     126:	8a 8f       	std	Y+26, r24	; 0x1a
		placement++;
     128:	21 e0       	ldi	r18, 0x01	; 1
     12a:	30 e0       	ldi	r19, 0x00	; 0
     12c:	02 c0       	rjmp	.+4      	; 0x132 <filllocationarrays+0x6e>

void filllocationarrays(Communications *self){
	char arrx[25];
	char arry[25];
	char set;
	int placement=0;
     12e:	20 e0       	ldi	r18, 0x00	; 0
     130:	30 e0       	ldi	r19, 0x00	; 0
     132:	40 e0       	ldi	r20, 0x00	; 0
     134:	50 e0       	ldi	r21, 0x00	; 0
     136:	3b c0       	rjmp	.+118    	; 0x1ae <filllocationarrays+0xea>
		arrx[placement]=1;
		arry[placement]=1;
		placement++;
	}
	for (int i=0;i<8;i++){
		set = ((self->Recieved[2] >> i)  & 0x01);
     138:	5d 96       	adiw	r26, 0x1d	; 29
     13a:	8c 91       	ld	r24, X
     13c:	5d 97       	sbiw	r26, 0x1d	; 29
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	04 2e       	mov	r0, r20
     142:	02 c0       	rjmp	.+4      	; 0x148 <filllocationarrays+0x84>
     144:	95 95       	asr	r25
     146:	87 95       	ror	r24
     148:	0a 94       	dec	r0
     14a:	e2 f7       	brpl	.-8      	; 0x144 <filllocationarrays+0x80>
     14c:	81 70       	andi	r24, 0x01	; 1
		if (i<4){
     14e:	44 30       	cpi	r20, 0x04	; 4
     150:	51 05       	cpc	r21, r1
     152:	b4 f4       	brge	.+44     	; 0x180 <filllocationarrays+0xbc>
			if (set == 1){
     154:	81 30       	cpi	r24, 0x01	; 1
     156:	49 f5       	brne	.+82     	; 0x1aa <filllocationarrays+0xe6>
			arrx[placement]=i+1+1;
     158:	e1 e0       	ldi	r30, 0x01	; 1
     15a:	f0 e0       	ldi	r31, 0x00	; 0
     15c:	ec 0f       	add	r30, r28
     15e:	fd 1f       	adc	r31, r29
     160:	e2 0f       	add	r30, r18
     162:	f3 1f       	adc	r31, r19
     164:	82 e0       	ldi	r24, 0x02	; 2
     166:	84 0f       	add	r24, r20
     168:	80 83       	st	Z, r24
			arry[placement]=0+1;
     16a:	ea e1       	ldi	r30, 0x1A	; 26
     16c:	f0 e0       	ldi	r31, 0x00	; 0
     16e:	ec 0f       	add	r30, r28
     170:	fd 1f       	adc	r31, r29
     172:	e2 0f       	add	r30, r18
     174:	f3 1f       	adc	r31, r19
     176:	81 e0       	ldi	r24, 0x01	; 1
     178:	80 83       	st	Z, r24
			placement++;}
     17a:	2f 5f       	subi	r18, 0xFF	; 255
     17c:	3f 4f       	sbci	r19, 0xFF	; 255
     17e:	15 c0       	rjmp	.+42     	; 0x1aa <filllocationarrays+0xe6>
		}else{
			if (set == 1){
     180:	81 30       	cpi	r24, 0x01	; 1
     182:	99 f4       	brne	.+38     	; 0x1aa <filllocationarrays+0xe6>
			arrx[placement]=i-4+1;
     184:	e1 e0       	ldi	r30, 0x01	; 1
     186:	f0 e0       	ldi	r31, 0x00	; 0
     188:	ec 0f       	add	r30, r28
     18a:	fd 1f       	adc	r31, r29
     18c:	e2 0f       	add	r30, r18
     18e:	f3 1f       	adc	r31, r19
     190:	8d ef       	ldi	r24, 0xFD	; 253
     192:	84 0f       	add	r24, r20
     194:	80 83       	st	Z, r24
			arry[placement]=1+1;
     196:	ea e1       	ldi	r30, 0x1A	; 26
     198:	f0 e0       	ldi	r31, 0x00	; 0
     19a:	ec 0f       	add	r30, r28
     19c:	fd 1f       	adc	r31, r29
     19e:	e2 0f       	add	r30, r18
     1a0:	f3 1f       	adc	r31, r19
     1a2:	82 e0       	ldi	r24, 0x02	; 2
     1a4:	80 83       	st	Z, r24
			placement++;}
     1a6:	2f 5f       	subi	r18, 0xFF	; 255
     1a8:	3f 4f       	sbci	r19, 0xFF	; 255
	if (self->Recieved[1]==1){
		arrx[placement]=1;
		arry[placement]=1;
		placement++;
	}
	for (int i=0;i<8;i++){
     1aa:	4f 5f       	subi	r20, 0xFF	; 255
     1ac:	5f 4f       	sbci	r21, 0xFF	; 255
     1ae:	48 30       	cpi	r20, 0x08	; 8
     1b0:	51 05       	cpc	r21, r1
     1b2:	14 f2       	brlt	.-124    	; 0x138 <filllocationarrays+0x74>
     1b4:	40 e0       	ldi	r20, 0x00	; 0
     1b6:	50 e0       	ldi	r21, 0x00	; 0
     1b8:	53 c0       	rjmp	.+166    	; 0x260 <filllocationarrays+0x19c>
			arry[placement]=1+1;
			placement++;}
		}
	}
		for (int i=0;i<8;i++){
			set = ((self->Recieved[3] >> i)  & 0x01);
     1ba:	5e 96       	adiw	r26, 0x1e	; 30
     1bc:	8c 91       	ld	r24, X
     1be:	5e 97       	sbiw	r26, 0x1e	; 30
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	04 2e       	mov	r0, r20
     1c4:	02 c0       	rjmp	.+4      	; 0x1ca <filllocationarrays+0x106>
     1c6:	95 95       	asr	r25
     1c8:	87 95       	ror	r24
     1ca:	0a 94       	dec	r0
     1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <filllocationarrays+0x102>
     1ce:	81 70       	andi	r24, 0x01	; 1
			if (i==0){
     1d0:	41 15       	cp	r20, r1
     1d2:	51 05       	cpc	r21, r1
     1d4:	b9 f4       	brne	.+46     	; 0x204 <filllocationarrays+0x140>
				if (set == 1){
     1d6:	81 30       	cpi	r24, 0x01	; 1
     1d8:	09 f0       	breq	.+2      	; 0x1dc <filllocationarrays+0x118>
     1da:	40 c0       	rjmp	.+128    	; 0x25c <filllocationarrays+0x198>
				arrx[placement]=i+4+1;
     1dc:	e1 e0       	ldi	r30, 0x01	; 1
     1de:	f0 e0       	ldi	r31, 0x00	; 0
     1e0:	ec 0f       	add	r30, r28
     1e2:	fd 1f       	adc	r31, r29
     1e4:	e2 0f       	add	r30, r18
     1e6:	f3 1f       	adc	r31, r19
     1e8:	85 e0       	ldi	r24, 0x05	; 5
     1ea:	84 0f       	add	r24, r20
     1ec:	80 83       	st	Z, r24
				arry[placement]=1+1;
     1ee:	ea e1       	ldi	r30, 0x1A	; 26
     1f0:	f0 e0       	ldi	r31, 0x00	; 0
     1f2:	ec 0f       	add	r30, r28
     1f4:	fd 1f       	adc	r31, r29
     1f6:	e2 0f       	add	r30, r18
     1f8:	f3 1f       	adc	r31, r19
     1fa:	82 e0       	ldi	r24, 0x02	; 2
     1fc:	80 83       	st	Z, r24
				placement++;}
     1fe:	2f 5f       	subi	r18, 0xFF	; 255
     200:	3f 4f       	sbci	r19, 0xFF	; 255
     202:	2c c0       	rjmp	.+88     	; 0x25c <filllocationarrays+0x198>
			}else if(i<6){
     204:	46 30       	cpi	r20, 0x06	; 6
     206:	51 05       	cpc	r21, r1
     208:	a4 f4       	brge	.+40     	; 0x232 <filllocationarrays+0x16e>
				if (set == 1){
     20a:	81 30       	cpi	r24, 0x01	; 1
     20c:	39 f5       	brne	.+78     	; 0x25c <filllocationarrays+0x198>
				arrx[placement]=i-1+1;
     20e:	e1 e0       	ldi	r30, 0x01	; 1
     210:	f0 e0       	ldi	r31, 0x00	; 0
     212:	ec 0f       	add	r30, r28
     214:	fd 1f       	adc	r31, r29
     216:	e2 0f       	add	r30, r18
     218:	f3 1f       	adc	r31, r19
     21a:	40 83       	st	Z, r20
				arry[placement]=2+1;
     21c:	ea e1       	ldi	r30, 0x1A	; 26
     21e:	f0 e0       	ldi	r31, 0x00	; 0
     220:	ec 0f       	add	r30, r28
     222:	fd 1f       	adc	r31, r29
     224:	e2 0f       	add	r30, r18
     226:	f3 1f       	adc	r31, r19
     228:	83 e0       	ldi	r24, 0x03	; 3
     22a:	80 83       	st	Z, r24
				placement++;}
     22c:	2f 5f       	subi	r18, 0xFF	; 255
     22e:	3f 4f       	sbci	r19, 0xFF	; 255
     230:	15 c0       	rjmp	.+42     	; 0x25c <filllocationarrays+0x198>
			}else{
				if (set == 1){
     232:	81 30       	cpi	r24, 0x01	; 1
     234:	99 f4       	brne	.+38     	; 0x25c <filllocationarrays+0x198>
				arrx[placement]=i-6+1;
     236:	e1 e0       	ldi	r30, 0x01	; 1
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	ec 0f       	add	r30, r28
     23c:	fd 1f       	adc	r31, r29
     23e:	e2 0f       	add	r30, r18
     240:	f3 1f       	adc	r31, r19
     242:	8b ef       	ldi	r24, 0xFB	; 251
     244:	84 0f       	add	r24, r20
     246:	80 83       	st	Z, r24
				arry[placement]=3+1;
     248:	ea e1       	ldi	r30, 0x1A	; 26
     24a:	f0 e0       	ldi	r31, 0x00	; 0
     24c:	ec 0f       	add	r30, r28
     24e:	fd 1f       	adc	r31, r29
     250:	e2 0f       	add	r30, r18
     252:	f3 1f       	adc	r31, r19
     254:	84 e0       	ldi	r24, 0x04	; 4
     256:	80 83       	st	Z, r24
				placement++;}
     258:	2f 5f       	subi	r18, 0xFF	; 255
     25a:	3f 4f       	sbci	r19, 0xFF	; 255
			arrx[placement]=i-4+1;
			arry[placement]=1+1;
			placement++;}
		}
	}
		for (int i=0;i<8;i++){
     25c:	4f 5f       	subi	r20, 0xFF	; 255
     25e:	5f 4f       	sbci	r21, 0xFF	; 255
     260:	48 30       	cpi	r20, 0x08	; 8
     262:	51 05       	cpc	r21, r1
     264:	0c f4       	brge	.+2      	; 0x268 <filllocationarrays+0x1a4>
     266:	a9 cf       	rjmp	.-174    	; 0x1ba <filllocationarrays+0xf6>
     268:	40 e0       	ldi	r20, 0x00	; 0
     26a:	50 e0       	ldi	r21, 0x00	; 0
     26c:	3b c0       	rjmp	.+118    	; 0x2e4 <filllocationarrays+0x220>
				arry[placement]=3+1;
				placement++;}
			}
		}
		for (int i=0;i<8;i++){
			set = ((self->Recieved[4] >> i)  & 0x01);
     26e:	5f 96       	adiw	r26, 0x1f	; 31
     270:	8c 91       	ld	r24, X
     272:	5f 97       	sbiw	r26, 0x1f	; 31
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	04 2e       	mov	r0, r20
     278:	02 c0       	rjmp	.+4      	; 0x27e <filllocationarrays+0x1ba>
     27a:	95 95       	asr	r25
     27c:	87 95       	ror	r24
     27e:	0a 94       	dec	r0
     280:	e2 f7       	brpl	.-8      	; 0x27a <filllocationarrays+0x1b6>
     282:	81 70       	andi	r24, 0x01	; 1
			if (i<3){
     284:	43 30       	cpi	r20, 0x03	; 3
     286:	51 05       	cpc	r21, r1
     288:	b4 f4       	brge	.+44     	; 0x2b6 <filllocationarrays+0x1f2>
				if (set == 1){
     28a:	81 30       	cpi	r24, 0x01	; 1
     28c:	49 f5       	brne	.+82     	; 0x2e0 <filllocationarrays+0x21c>
				arrx[placement]=i+2+1;
     28e:	e1 e0       	ldi	r30, 0x01	; 1
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	ec 0f       	add	r30, r28
     294:	fd 1f       	adc	r31, r29
     296:	e2 0f       	add	r30, r18
     298:	f3 1f       	adc	r31, r19
     29a:	83 e0       	ldi	r24, 0x03	; 3
     29c:	84 0f       	add	r24, r20
     29e:	80 83       	st	Z, r24
				arry[placement]=3+1;
     2a0:	ea e1       	ldi	r30, 0x1A	; 26
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	ec 0f       	add	r30, r28
     2a6:	fd 1f       	adc	r31, r29
     2a8:	e2 0f       	add	r30, r18
     2aa:	f3 1f       	adc	r31, r19
     2ac:	84 e0       	ldi	r24, 0x04	; 4
     2ae:	80 83       	st	Z, r24
				placement++;}
     2b0:	2f 5f       	subi	r18, 0xFF	; 255
     2b2:	3f 4f       	sbci	r19, 0xFF	; 255
     2b4:	15 c0       	rjmp	.+42     	; 0x2e0 <filllocationarrays+0x21c>
			}else{
				if (set == 1){
     2b6:	81 30       	cpi	r24, 0x01	; 1
     2b8:	99 f4       	brne	.+38     	; 0x2e0 <filllocationarrays+0x21c>
				arrx[placement]=i-3+1;
     2ba:	e1 e0       	ldi	r30, 0x01	; 1
     2bc:	f0 e0       	ldi	r31, 0x00	; 0
     2be:	ec 0f       	add	r30, r28
     2c0:	fd 1f       	adc	r31, r29
     2c2:	e2 0f       	add	r30, r18
     2c4:	f3 1f       	adc	r31, r19
     2c6:	8e ef       	ldi	r24, 0xFE	; 254
     2c8:	84 0f       	add	r24, r20
     2ca:	80 83       	st	Z, r24
				arry[placement]=4+1;
     2cc:	ea e1       	ldi	r30, 0x1A	; 26
     2ce:	f0 e0       	ldi	r31, 0x00	; 0
     2d0:	ec 0f       	add	r30, r28
     2d2:	fd 1f       	adc	r31, r29
     2d4:	e2 0f       	add	r30, r18
     2d6:	f3 1f       	adc	r31, r19
     2d8:	85 e0       	ldi	r24, 0x05	; 5
     2da:	80 83       	st	Z, r24
				placement++;}
     2dc:	2f 5f       	subi	r18, 0xFF	; 255
     2de:	3f 4f       	sbci	r19, 0xFF	; 255
				arrx[placement]=i-6+1;
				arry[placement]=3+1;
				placement++;}
			}
		}
		for (int i=0;i<8;i++){
     2e0:	4f 5f       	subi	r20, 0xFF	; 255
     2e2:	5f 4f       	sbci	r21, 0xFF	; 255
     2e4:	48 30       	cpi	r20, 0x08	; 8
     2e6:	51 05       	cpc	r21, r1
     2e8:	14 f2       	brlt	.-124    	; 0x26e <filllocationarrays+0x1aa>
     2ea:	20 e0       	ldi	r18, 0x00	; 0
     2ec:	30 e0       	ldi	r19, 0x00	; 0
     2ee:	19 c0       	rjmp	.+50     	; 0x322 <filllocationarrays+0x25e>
				arry[placement]=4+1;
				placement++;}
			}
		}
	for (int i=0;i<25;i++){
		self->Orderarx[i]=arrx[i];
     2f0:	e1 e0       	ldi	r30, 0x01	; 1
     2f2:	f0 e0       	ldi	r31, 0x00	; 0
     2f4:	ec 0f       	add	r30, r28
     2f6:	fd 1f       	adc	r31, r29
     2f8:	e2 0f       	add	r30, r18
     2fa:	f3 1f       	adc	r31, r19
     2fc:	40 81       	ld	r20, Z
     2fe:	cd 01       	movw	r24, r26
     300:	82 0f       	add	r24, r18
     302:	93 1f       	adc	r25, r19
     304:	fc 01       	movw	r30, r24
     306:	ee 5a       	subi	r30, 0xAE	; 174
     308:	ff 4f       	sbci	r31, 0xFF	; 255
     30a:	40 83       	st	Z, r20
		self->Orderary[i]=arry[i];
     30c:	ea e1       	ldi	r30, 0x1A	; 26
     30e:	f0 e0       	ldi	r31, 0x00	; 0
     310:	ec 0f       	add	r30, r28
     312:	fd 1f       	adc	r31, r29
     314:	e2 0f       	add	r30, r18
     316:	f3 1f       	adc	r31, r19
     318:	40 81       	ld	r20, Z
     31a:	fc 01       	movw	r30, r24
     31c:	41 af       	std	Z+57, r20	; 0x39
				arrx[placement]=i-3+1;
				arry[placement]=4+1;
				placement++;}
			}
		}
	for (int i=0;i<25;i++){
     31e:	2f 5f       	subi	r18, 0xFF	; 255
     320:	3f 4f       	sbci	r19, 0xFF	; 255
     322:	29 31       	cpi	r18, 0x19	; 25
     324:	31 05       	cpc	r19, r1
     326:	24 f3       	brlt	.-56     	; 0x2f0 <filllocationarrays+0x22c>
		self->Orderarx[i]=arrx[i];
		self->Orderary[i]=arry[i];
	}
}
     328:	e2 96       	adiw	r28, 0x32	; 50
     32a:	0f b6       	in	r0, 0x3f	; 63
     32c:	f8 94       	cli
     32e:	de bf       	out	0x3e, r29	; 62
     330:	0f be       	out	0x3f, r0	; 63
     332:	cd bf       	out	0x3d, r28	; 61
     334:	df 91       	pop	r29
     336:	cf 91       	pop	r28
     338:	08 95       	ret

0000033a <sendACK>:
			


void sendACK(Communications *self ){
     33a:	cf 93       	push	r28
     33c:	df 93       	push	r29
     33e:	00 d0       	rcall	.+0      	; 0x340 <sendACK+0x6>
     340:	1f 92       	push	r1
     342:	cd b7       	in	r28, 0x3d	; 61
     344:	de b7       	in	r29, 0x3e	; 62
						char tmp[3];
						tmp[0]=START;
     346:	88 e0       	ldi	r24, 0x08	; 8
     348:	89 83       	std	Y+1, r24	; 0x01
						tmp[1]=255;
     34a:	8f ef       	ldi	r24, 0xFF	; 255
     34c:	8a 83       	std	Y+2, r24	; 0x02
						tmp[2]=STOP;
     34e:	85 e6       	ldi	r24, 0x65	; 101
     350:	8b 83       	std	Y+3, r24	; 0x03
						serial_send_blocking(tmp,4);
     352:	64 e0       	ldi	r22, 0x04	; 4
     354:	ce 01       	movw	r24, r28
     356:	01 96       	adiw	r24, 0x01	; 1
     358:	0e 94 9b 16 	call	0x2d36	; 0x2d36 <serial_send_blocking>
}
     35c:	0f 90       	pop	r0
     35e:	0f 90       	pop	r0
     360:	0f 90       	pop	r0
     362:	df 91       	pop	r29
     364:	cf 91       	pop	r28
     366:	08 95       	ret

00000368 <Update>:

void Update(Communications *self){
     368:	cf 92       	push	r12
     36a:	df 92       	push	r13
     36c:	ef 92       	push	r14
     36e:	ff 92       	push	r15
     370:	1f 93       	push	r17
     372:	cf 93       	push	r28
     374:	df 93       	push	r29
     376:	ec 01       	movw	r28, r24
	
	char Flag =0;
	unsigned long timebetweensends = 750;
	static unsigned long timesincelastsend = 0;
	
	if (serial_receive_buffer_full()==1){
     378:	0e 94 48 15 	call	0x2a90	; 0x2a90 <serial_receive_buffer_full>
     37c:	81 30       	cpi	r24, 0x01	; 1
     37e:	09 f0       	breq	.+2      	; 0x382 <Update+0x1a>
     380:	5e c0       	rjmp	.+188    	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
		if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
     382:	8b 8d       	ldd	r24, Y+27	; 0x1b
     384:	88 30       	cpi	r24, 0x08	; 8
     386:	09 f0       	breq	.+2      	; 0x38a <Update+0x22>
     388:	5c c0       	rjmp	.+184    	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
     38a:	e8 81       	ld	r30, Y
     38c:	f0 e0       	ldi	r31, 0x00	; 0
     38e:	31 97       	sbiw	r30, 0x01	; 1
     390:	ec 0f       	add	r30, r28
     392:	fd 1f       	adc	r31, r29
     394:	83 8d       	ldd	r24, Z+27	; 0x1b
     396:	85 36       	cpi	r24, 0x65	; 101
     398:	09 f0       	breq	.+2      	; 0x39c <Update+0x34>
     39a:	55 c0       	rjmp	.+170    	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
			Flag = 1;
			//play_from_program_space(fugue);
			
			sendACK(self); // stops here to send acknowledge
     39c:	ce 01       	movw	r24, r28
     39e:	0e 94 9d 01 	call	0x33a	; 0x33a <sendACK>
			
			if (self->Recieved[5]==254 || self->Recieved[8]==254){    //enter emergency stop
     3a2:	88 a1       	ldd	r24, Y+32	; 0x20
     3a4:	8e 3f       	cpi	r24, 0xFE	; 254
     3a6:	19 f0       	breq	.+6      	; 0x3ae <Update+0x46>
     3a8:	8b a1       	ldd	r24, Y+35	; 0x23
     3aa:	8e 3f       	cpi	r24, 0xFE	; 254
     3ac:	29 f4       	brne	.+10     	; 0x3b8 <Update+0x50>
				//play_from_program_space(fugue);
				self->EmergencyStop=1;
     3ae:	81 e0       	ldi	r24, 0x01	; 1
     3b0:	fe 01       	movw	r30, r28
     3b2:	e5 59       	subi	r30, 0x95	; 149
     3b4:	ff 4f       	sbci	r31, 0xFF	; 255
     3b6:	80 83       	st	Z, r24
			}
			
			if (self->Recieved[8]==250){    // Charging
     3b8:	8b a1       	ldd	r24, Y+35	; 0x23
     3ba:	8a 3f       	cpi	r24, 0xFA	; 250
     3bc:	29 f4       	brne	.+10     	; 0x3c8 <Update+0x60>
				self->EmergencyStop=4;
     3be:	94 e0       	ldi	r25, 0x04	; 4
     3c0:	fe 01       	movw	r30, r28
     3c2:	e5 59       	subi	r30, 0x95	; 149
     3c4:	ff 4f       	sbci	r31, 0xFF	; 255
     3c6:	90 83       	st	Z, r25
			}
			
			if (self->Recieved[8]==245){                            // Enter Spin Mode
     3c8:	85 3f       	cpi	r24, 0xF5	; 245
     3ca:	29 f4       	brne	.+10     	; 0x3d6 <Update+0x6e>
				self->EmergencyStop=2;
     3cc:	92 e0       	ldi	r25, 0x02	; 2
     3ce:	fe 01       	movw	r30, r28
     3d0:	e5 59       	subi	r30, 0x95	; 149
     3d2:	ff 4f       	sbci	r31, 0xFF	; 255
     3d4:	90 83       	st	Z, r25
			}
			if(self->Recieved[8]==230){
     3d6:	86 3e       	cpi	r24, 0xE6	; 230
     3d8:	39 f4       	brne	.+14     	; 0x3e8 <Update+0x80>
				self->locationx = -1;
     3da:	9f ef       	ldi	r25, 0xFF	; 255
     3dc:	fe 01       	movw	r30, r28
     3de:	e2 59       	subi	r30, 0x92	; 146
     3e0:	ff 4f       	sbci	r31, 0xFF	; 255
     3e2:	90 83       	st	Z, r25
				self->locationy = -1;
     3e4:	31 96       	adiw	r30, 0x01	; 1
     3e6:	90 83       	st	Z, r25
				
			}
			if (self->Recieved[8]==240){                            // Enter Manual Mode
     3e8:	80 3f       	cpi	r24, 0xF0	; 240
     3ea:	a9 f4       	brne	.+42     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
				self->EmergencyStop=3;
     3ec:	83 e0       	ldi	r24, 0x03	; 3
     3ee:	fe 01       	movw	r30, r28
     3f0:	e5 59       	subi	r30, 0x95	; 149
     3f2:	ff 4f       	sbci	r31, 0xFF	; 255
     3f4:	80 83       	st	Z, r24
				for (int i = 0; i < 4; i++){
     3f6:	80 e0       	ldi	r24, 0x00	; 0
     3f8:	90 e0       	ldi	r25, 0x00	; 0
     3fa:	0a c0       	rjmp	.+20     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
					self->Direction[i]=self->Recieved[i+9];
     3fc:	fc 01       	movw	r30, r24
     3fe:	39 96       	adiw	r30, 0x09	; 9
     400:	ec 0f       	add	r30, r28
     402:	fd 1f       	adc	r31, r29
     404:	23 8d       	ldd	r18, Z+27	; 0x1b
     406:	fe 01       	movw	r30, r28
     408:	e8 0f       	add	r30, r24
     40a:	f9 1f       	adc	r31, r25
     40c:	25 ab       	std	Z+53, r18	; 0x35
				self->locationy = -1;
				
			}
			if (self->Recieved[8]==240){                            // Enter Manual Mode
				self->EmergencyStop=3;
				for (int i = 0; i < 4; i++){
     40e:	01 96       	adiw	r24, 0x01	; 1
     410:	84 30       	cpi	r24, 0x04	; 4
     412:	91 05       	cpc	r25, r1
     414:	9c f3       	brlt	.-26     	; 0x3fc <Update+0x94>
					self->Direction[i]=self->Recieved[i+9];
				}
			}
			
			if (self->locationx==255 && self->locationy==255){
     416:	fe 01       	movw	r30, r28
     418:	e2 59       	subi	r30, 0x92	; 146
     41a:	ff 4f       	sbci	r31, 0xFF	; 255
     41c:	80 81       	ld	r24, Z
     41e:	8f 3f       	cpi	r24, 0xFF	; 255
     420:	a1 f4       	brne	.+40     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     422:	31 96       	adiw	r30, 0x01	; 1
     424:	80 81       	ld	r24, Z
     426:	8f 3f       	cpi	r24, 0xFF	; 255
     428:	91 f4       	brne	.+36     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
				filllocationarrays(self);
     42a:	ce 01       	movw	r24, r28
     42c:	0e 94 62 00 	call	0xc4	; 0xc4 <filllocationarrays>
				self->flag =1;
     430:	81 e0       	ldi	r24, 0x01	; 1
     432:	fe 01       	movw	r30, r28
     434:	e0 59       	subi	r30, 0x90	; 144
     436:	ff 4f       	sbci	r31, 0xFF	; 255
     438:	80 83       	st	Z, r24
	unsigned long timebetweensends = 750;
	static unsigned long timesincelastsend = 0;
	
	if (serial_receive_buffer_full()==1){
		if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
			Flag = 1;
     43a:	11 e0       	ldi	r17, 0x01	; 1
     43c:	09 c0       	rjmp	.+18     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
}

void Update(Communications *self){
	
	
	char Flag =0;
     43e:	10 e0       	ldi	r17, 0x00	; 0
     440:	07 c0       	rjmp	.+14     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
     442:	10 e0       	ldi	r17, 0x00	; 0
     444:	05 c0       	rjmp	.+10     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
     446:	10 e0       	ldi	r17, 0x00	; 0
     448:	03 c0       	rjmp	.+6      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
	unsigned long timebetweensends = 750;
	static unsigned long timesincelastsend = 0;
	
	if (serial_receive_buffer_full()==1){
		if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
			Flag = 1;
     44a:	11 e0       	ldi	r17, 0x01	; 1
     44c:	01 c0       	rjmp	.+2      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
     44e:	11 e0       	ldi	r17, 0x01	; 1
				filllocationarrays(self);
				self->flag =1;
			}
		}
	}
 if (timesincelastsend+timebetweensends<=get_ms()){
     450:	c0 90 f9 01 	lds	r12, 0x01F9	; 0x8001f9 <timesincelastsend.2232>
     454:	d0 90 fa 01 	lds	r13, 0x01FA	; 0x8001fa <timesincelastsend.2232+0x1>
     458:	e0 90 fb 01 	lds	r14, 0x01FB	; 0x8001fb <timesincelastsend.2232+0x2>
     45c:	f0 90 fc 01 	lds	r15, 0x01FC	; 0x8001fc <timesincelastsend.2232+0x3>
     460:	8e ee       	ldi	r24, 0xEE	; 238
     462:	c8 0e       	add	r12, r24
     464:	82 e0       	ldi	r24, 0x02	; 2
     466:	d8 1e       	adc	r13, r24
     468:	e1 1c       	adc	r14, r1
     46a:	f1 1c       	adc	r15, r1
     46c:	0e 94 43 17 	call	0x2e86	; 0x2e86 <get_ms>
     470:	6c 15       	cp	r22, r12
     472:	7d 05       	cpc	r23, r13
     474:	8e 05       	cpc	r24, r14
     476:	9f 05       	cpc	r25, r15
     478:	c8 f1       	brcs	.+114    	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
	 timesincelastsend=get_ms();
     47a:	0e 94 43 17 	call	0x2e86	; 0x2e86 <get_ms>
     47e:	60 93 f9 01 	sts	0x01F9, r22	; 0x8001f9 <timesincelastsend.2232>
     482:	70 93 fa 01 	sts	0x01FA, r23	; 0x8001fa <timesincelastsend.2232+0x1>
     486:	80 93 fb 01 	sts	0x01FB, r24	; 0x8001fb <timesincelastsend.2232+0x2>
     48a:	90 93 fc 01 	sts	0x01FC, r25	; 0x8001fc <timesincelastsend.2232+0x3>
	 for (char i=0;i<self->val;i++){
     48e:	80 e0       	ldi	r24, 0x00	; 0
     490:	05 c0       	rjmp	.+10     	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
		 self->msgBuffer[i]=i;
     492:	fe 01       	movw	r30, r28
     494:	e8 0f       	add	r30, r24
     496:	f1 1d       	adc	r31, r1
     498:	81 83       	std	Z+1, r24	; 0x01
			}
		}
	}
 if (timesincelastsend+timebetweensends<=get_ms()){
	 timesincelastsend=get_ms();
	 for (char i=0;i<self->val;i++){
     49a:	8f 5f       	subi	r24, 0xFF	; 255
     49c:	68 81       	ld	r22, Y
     49e:	86 17       	cp	r24, r22
     4a0:	c0 f3       	brcs	.-16     	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
		 self->msgBuffer[i]=i;
	 }
	 self->msgBuffer[0]=START;
     4a2:	88 e0       	ldi	r24, 0x08	; 8
     4a4:	89 83       	std	Y+1, r24	; 0x01
	 self->msgBuffer[1]=self->batterylvl;
     4a6:	fe 01       	movw	r30, r28
     4a8:	e4 59       	subi	r30, 0x94	; 148
     4aa:	ff 4f       	sbci	r31, 0xFF	; 255
     4ac:	80 81       	ld	r24, Z
     4ae:	8a 83       	std	Y+2, r24	; 0x02
	 self->msgBuffer[2]=self->magprocess;
     4b0:	31 96       	adiw	r30, 0x01	; 1
     4b2:	80 81       	ld	r24, Z
     4b4:	8b 83       	std	Y+3, r24	; 0x03
	 self->msgBuffer[3]=self->locationx;
     4b6:	31 96       	adiw	r30, 0x01	; 1
     4b8:	80 81       	ld	r24, Z
     4ba:	8c 83       	std	Y+4, r24	; 0x04
	 self->msgBuffer[4]=self->locationy;
     4bc:	31 96       	adiw	r30, 0x01	; 1
     4be:	80 81       	ld	r24, Z
     4c0:	8d 83       	std	Y+5, r24	; 0x05
	 self->msgBuffer[5]=self->EmergencyStop;
     4c2:	34 97       	sbiw	r30, 0x04	; 4
     4c4:	80 81       	ld	r24, Z
     4c6:	8e 83       	std	Y+6, r24	; 0x06
	 self->msgBuffer[self->val-1]=STOP;
     4c8:	e6 2f       	mov	r30, r22
     4ca:	f0 e0       	ldi	r31, 0x00	; 0
     4cc:	31 97       	sbiw	r30, 0x01	; 1
     4ce:	ec 0f       	add	r30, r28
     4d0:	fd 1f       	adc	r31, r29
     4d2:	85 e6       	ldi	r24, 0x65	; 101
     4d4:	81 83       	std	Z+1, r24	; 0x01
	 serial_send(self->msgBuffer, self->val);
     4d6:	ce 01       	movw	r24, r28
     4d8:	01 96       	adiw	r24, 0x01	; 1
     4da:	0e 94 56 16 	call	0x2cac	; 0x2cac <serial_send>

	 //delay_ms(10000); // test
	 if (Flag == 1){
     4de:	11 30       	cpi	r17, 0x01	; 1
     4e0:	29 f4       	brne	.+10     	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
		 serial_receive(self->Recieved,self->val);
     4e2:	68 81       	ld	r22, Y
     4e4:	ce 01       	movw	r24, r28
     4e6:	4b 96       	adiw	r24, 0x1b	; 27
     4e8:	0e 94 cf 15 	call	0x2b9e	; 0x2b9e <serial_receive>
	 }
 }
}
     4ec:	df 91       	pop	r29
     4ee:	cf 91       	pop	r28
     4f0:	1f 91       	pop	r17
     4f2:	ff 90       	pop	r15
     4f4:	ef 90       	pop	r14
     4f6:	df 90       	pop	r13
     4f8:	cf 90       	pop	r12
     4fa:	08 95       	ret

000004fc <fillarrays>:

void fillarrays(Communications *self){
     4fc:	cf 93       	push	r28
     4fe:	df 93       	push	r29
     500:	cd b7       	in	r28, 0x3d	; 61
     502:	de b7       	in	r29, 0x3e	; 62
     504:	60 97       	sbiw	r28, 0x10	; 16
     506:	0f b6       	in	r0, 0x3f	; 63
     508:	f8 94       	cli
     50a:	de bf       	out	0x3e, r29	; 62
     50c:	0f be       	out	0x3f, r0	; 63
     50e:	cd bf       	out	0x3d, r28	; 61
     510:	ac 01       	movw	r20, r24
	//temp
		char arrx[]={2,5,4,2,1,6,1,5};
     512:	88 e0       	ldi	r24, 0x08	; 8
     514:	e8 e2       	ldi	r30, 0x28	; 40
     516:	f1 e0       	ldi	r31, 0x01	; 1
     518:	de 01       	movw	r26, r28
     51a:	11 96       	adiw	r26, 0x01	; 1
     51c:	01 90       	ld	r0, Z+
     51e:	0d 92       	st	X+, r0
     520:	8a 95       	dec	r24
     522:	e1 f7       	brne	.-8      	; 0x51c <fillarrays+0x20>
		char arry[]={0,1,3,5,2,4,1,2};
     524:	88 e0       	ldi	r24, 0x08	; 8
     526:	e0 e3       	ldi	r30, 0x30	; 48
     528:	f1 e0       	ldi	r31, 0x01	; 1
     52a:	de 01       	movw	r26, r28
     52c:	19 96       	adiw	r26, 0x09	; 9
     52e:	01 90       	ld	r0, Z+
     530:	0d 92       	st	X+, r0
     532:	8a 95       	dec	r24
     534:	e1 f7       	brne	.-8      	; 0x52e <fillarrays+0x32>
		for (int i=0;i<8;i++){
     536:	20 e0       	ldi	r18, 0x00	; 0
     538:	30 e0       	ldi	r19, 0x00	; 0
     53a:	19 c0       	rjmp	.+50     	; 0x56e <fillarrays+0x72>
			self->Orderarx[i]=arrx[i];
     53c:	e1 e0       	ldi	r30, 0x01	; 1
     53e:	f0 e0       	ldi	r31, 0x00	; 0
     540:	ec 0f       	add	r30, r28
     542:	fd 1f       	adc	r31, r29
     544:	e2 0f       	add	r30, r18
     546:	f3 1f       	adc	r31, r19
     548:	90 81       	ld	r25, Z
     54a:	da 01       	movw	r26, r20
     54c:	a2 0f       	add	r26, r18
     54e:	b3 1f       	adc	r27, r19
     550:	fd 01       	movw	r30, r26
     552:	ee 5a       	subi	r30, 0xAE	; 174
     554:	ff 4f       	sbci	r31, 0xFF	; 255
     556:	90 83       	st	Z, r25
			self->Orderary[i]=arry[i];
     558:	e9 e0       	ldi	r30, 0x09	; 9
     55a:	f0 e0       	ldi	r31, 0x00	; 0
     55c:	ec 0f       	add	r30, r28
     55e:	fd 1f       	adc	r31, r29
     560:	e2 0f       	add	r30, r18
     562:	f3 1f       	adc	r31, r19
     564:	90 81       	ld	r25, Z
     566:	d9 96       	adiw	r26, 0x39	; 57
     568:	9c 93       	st	X, r25

void fillarrays(Communications *self){
	//temp
		char arrx[]={2,5,4,2,1,6,1,5};
		char arry[]={0,1,3,5,2,4,1,2};
		for (int i=0;i<8;i++){
     56a:	2f 5f       	subi	r18, 0xFF	; 255
     56c:	3f 4f       	sbci	r19, 0xFF	; 255
     56e:	28 30       	cpi	r18, 0x08	; 8
     570:	31 05       	cpc	r19, r1
     572:	24 f3       	brlt	.-56     	; 0x53c <fillarrays+0x40>
			self->Orderarx[i]=arrx[i];
			self->Orderary[i]=arry[i];
		}
}
     574:	60 96       	adiw	r28, 0x10	; 16
     576:	0f b6       	in	r0, 0x3f	; 63
     578:	f8 94       	cli
     57a:	de bf       	out	0x3e, r29	; 62
     57c:	0f be       	out	0x3f, r0	; 63
     57e:	cd bf       	out	0x3d, r28	; 61
     580:	df 91       	pop	r29
     582:	cf 91       	pop	r28
     584:	08 95       	ret

00000586 <Communications_INIT>:

void Communications_INIT(Communications * myCom){
     586:	0f 93       	push	r16
     588:	1f 93       	push	r17
     58a:	cf 93       	push	r28
     58c:	df 93       	push	r29
     58e:	ec 01       	movw	r28, r24
	myCom->val = Max_Bytes;	
     590:	8a e1       	ldi	r24, 0x1A	; 26
     592:	88 83       	st	Y, r24


	//Setup Communications
	serial_set_baud_rate(9600);
     594:	60 e8       	ldi	r22, 0x80	; 128
     596:	75 e2       	ldi	r23, 0x25	; 37
     598:	80 e0       	ldi	r24, 0x00	; 0
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	0e 94 26 16 	call	0x2c4c	; 0x2c4c <serial_set_baud_rate>
	serial_receive(myCom->Recieved,myCom->val);
     5a0:	68 81       	ld	r22, Y
     5a2:	ce 01       	movw	r24, r28
     5a4:	4b 96       	adiw	r24, 0x1b	; 27
     5a6:	0e 94 cf 15 	call	0x2b9e	; 0x2b9e <serial_receive>

	//filling in functions
	myCom->Update		 = Update;
     5aa:	fe 01       	movw	r30, r28
     5ac:	ef 58       	subi	r30, 0x8F	; 143
     5ae:	ff 4f       	sbci	r31, 0xFF	; 255
     5b0:	84 eb       	ldi	r24, 0xB4	; 180
     5b2:	91 e0       	ldi	r25, 0x01	; 1
     5b4:	91 83       	std	Z+1, r25	; 0x01
     5b6:	80 83       	st	Z, r24
		
	//filling in default values
	myCom->EmergencyStop = 0;
     5b8:	36 97       	sbiw	r30, 0x06	; 6
     5ba:	10 82       	st	Z, r1
	myCom->batterylvl	 = batteryPercentage();
     5bc:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
     5c0:	8e 01       	movw	r16, r28
     5c2:	04 59       	subi	r16, 0x94	; 148
     5c4:	1f 4f       	sbci	r17, 0xFF	; 255
     5c6:	0e 94 98 0d 	call	0x1b30	; 0x1b30 <__fixunssfsi>
     5ca:	f8 01       	movw	r30, r16
     5cc:	60 83       	st	Z, r22
	myCom->magprocess	 = 0;
     5ce:	31 96       	adiw	r30, 0x01	; 1
     5d0:	10 82       	st	Z, r1
	myCom->locationx	 = 4;
     5d2:	31 96       	adiw	r30, 0x01	; 1
     5d4:	84 e0       	ldi	r24, 0x04	; 4
     5d6:	80 83       	st	Z, r24
	myCom->locationy	 = 5;
     5d8:	31 96       	adiw	r30, 0x01	; 1
     5da:	85 e0       	ldi	r24, 0x05	; 5
     5dc:	80 83       	st	Z, r24
	
	
	fillarrays(myCom);
     5de:	ce 01       	movw	r24, r28
     5e0:	0e 94 7e 02 	call	0x4fc	; 0x4fc <fillarrays>
}
     5e4:	df 91       	pop	r29
     5e6:	cf 91       	pop	r28
     5e8:	1f 91       	pop	r17
     5ea:	0f 91       	pop	r16
     5ec:	08 95       	ret

000005ee <batteryPercentage>:
     5ee:	cf 92       	push	r12
     5f0:	df 92       	push	r13
     5f2:	ef 92       	push	r14
     5f4:	ff 92       	push	r15
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     5f6:	0e 94 a0 0f 	call	0x1f40	; 0x1f40 <read_battery_millivolts_3pi>
     5fa:	bc 01       	movw	r22, r24
     5fc:	80 e0       	ldi	r24, 0x00	; 0
     5fe:	90 e0       	ldi	r25, 0x00	; 0
     600:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <__floatunsisf>
     604:	6b 01       	movw	r12, r22
     606:	7c 01       	movw	r14, r24
     608:	9b 01       	movw	r18, r22
     60a:	ac 01       	movw	r20, r24
     60c:	0e 94 55 0e 	call	0x1caa	; 0x1caa <__mulsf3>
     610:	9b 01       	movw	r18, r22
     612:	ac 01       	movw	r20, r24
     614:	c7 01       	movw	r24, r14
     616:	b6 01       	movw	r22, r12
     618:	0e 94 55 0e 	call	0x1caa	; 0x1caa <__mulsf3>
     61c:	2c e0       	ldi	r18, 0x0C	; 12
     61e:	39 eb       	ldi	r19, 0xB9	; 185
     620:	4d e2       	ldi	r20, 0x2D	; 45
     622:	50 e3       	ldi	r21, 0x30	; 48
     624:	0e 94 55 0e 	call	0x1caa	; 0x1caa <__mulsf3>
     628:	ff 90       	pop	r15
     62a:	ef 90       	pop	r14
     62c:	df 90       	pop	r13
     62e:	cf 90       	pop	r12
     630:	08 95       	ret

00000632 <updateDisplay>:
     632:	ef 92       	push	r14
     634:	ff 92       	push	r15
     636:	0f 93       	push	r16
     638:	1f 93       	push	r17
     63a:	cf 93       	push	r28
     63c:	7c 01       	movw	r14, r24
     63e:	8b 01       	movw	r16, r22
     640:	c4 2f       	mov	r28, r20
     642:	0e 94 c5 13 	call	0x278a	; 0x278a <clear>
     646:	60 e0       	ldi	r22, 0x00	; 0
     648:	80 e0       	ldi	r24, 0x00	; 0
     64a:	0e 94 4c 14 	call	0x2898	; 0x2898 <lcd_goto_xy>
     64e:	85 e5       	ldi	r24, 0x55	; 85
     650:	91 e0       	ldi	r25, 0x01	; 1
     652:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <print>
     656:	b7 01       	movw	r22, r14
     658:	ff 0c       	add	r15, r15
     65a:	88 0b       	sbc	r24, r24
     65c:	99 0b       	sbc	r25, r25
     65e:	0e 94 29 14 	call	0x2852	; 0x2852 <print_long>
     662:	8a e5       	ldi	r24, 0x5A	; 90
     664:	91 e0       	ldi	r25, 0x01	; 1
     666:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <print>
     66a:	61 e0       	ldi	r22, 0x01	; 1
     66c:	80 e0       	ldi	r24, 0x00	; 0
     66e:	0e 94 4c 14 	call	0x2898	; 0x2898 <lcd_goto_xy>
     672:	8c e5       	ldi	r24, 0x5C	; 92
     674:	91 e0       	ldi	r25, 0x01	; 1
     676:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <print>
     67a:	b8 01       	movw	r22, r16
     67c:	11 0f       	add	r17, r17
     67e:	88 0b       	sbc	r24, r24
     680:	99 0b       	sbc	r25, r25
     682:	0e 94 29 14 	call	0x2852	; 0x2852 <print_long>
     686:	8a e5       	ldi	r24, 0x5A	; 90
     688:	91 e0       	ldi	r25, 0x01	; 1
     68a:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <print>
     68e:	c2 30       	cpi	r28, 0x02	; 2
     690:	a9 f0       	breq	.+42     	; 0x6bc <updateDisplay+0x8a>
     692:	28 f4       	brcc	.+10     	; 0x69e <updateDisplay+0x6c>
     694:	cc 23       	and	r28, r28
     696:	41 f0       	breq	.+16     	; 0x6a8 <updateDisplay+0x76>
     698:	c1 30       	cpi	r28, 0x01	; 1
     69a:	59 f0       	breq	.+22     	; 0x6b2 <updateDisplay+0x80>
     69c:	1d c0       	rjmp	.+58     	; 0x6d8 <updateDisplay+0xa6>
     69e:	c3 30       	cpi	r28, 0x03	; 3
     6a0:	91 f0       	breq	.+36     	; 0x6c6 <updateDisplay+0x94>
     6a2:	c4 30       	cpi	r28, 0x04	; 4
     6a4:	a9 f0       	breq	.+42     	; 0x6d0 <updateDisplay+0x9e>
     6a6:	18 c0       	rjmp	.+48     	; 0x6d8 <updateDisplay+0xa6>
     6a8:	81 e6       	ldi	r24, 0x61	; 97
     6aa:	91 e0       	ldi	r25, 0x01	; 1
     6ac:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <print>
     6b0:	13 c0       	rjmp	.+38     	; 0x6d8 <updateDisplay+0xa6>
     6b2:	83 e6       	ldi	r24, 0x63	; 99
     6b4:	91 e0       	ldi	r25, 0x01	; 1
     6b6:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <print>
     6ba:	0e c0       	rjmp	.+28     	; 0x6d8 <updateDisplay+0xa6>
     6bc:	85 e6       	ldi	r24, 0x65	; 101
     6be:	91 e0       	ldi	r25, 0x01	; 1
     6c0:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <print>
     6c4:	09 c0       	rjmp	.+18     	; 0x6d8 <updateDisplay+0xa6>
     6c6:	87 e6       	ldi	r24, 0x67	; 103
     6c8:	91 e0       	ldi	r25, 0x01	; 1
     6ca:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <print>
     6ce:	04 c0       	rjmp	.+8      	; 0x6d8 <updateDisplay+0xa6>
     6d0:	89 e6       	ldi	r24, 0x69	; 105
     6d2:	91 e0       	ldi	r25, 0x01	; 1
     6d4:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <print>
     6d8:	cf 91       	pop	r28
     6da:	1f 91       	pop	r17
     6dc:	0f 91       	pop	r16
     6de:	ff 90       	pop	r15
     6e0:	ef 90       	pop	r14
     6e2:	08 95       	ret

000006e4 <errorDisplay>:
     6e4:	1f 93       	push	r17
     6e6:	cf 93       	push	r28
     6e8:	df 93       	push	r29
     6ea:	18 2f       	mov	r17, r24
     6ec:	eb 01       	movw	r28, r22
     6ee:	0e 94 c5 13 	call	0x278a	; 0x278a <clear>
     6f2:	60 e0       	ldi	r22, 0x00	; 0
     6f4:	80 e0       	ldi	r24, 0x00	; 0
     6f6:	0e 94 4c 14 	call	0x2898	; 0x2898 <lcd_goto_xy>
     6fa:	8c e5       	ldi	r24, 0x5C	; 92
     6fc:	91 e0       	ldi	r25, 0x01	; 1
     6fe:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <print>
     702:	be 01       	movw	r22, r28
     704:	dd 0f       	add	r29, r29
     706:	88 0b       	sbc	r24, r24
     708:	99 0b       	sbc	r25, r25
     70a:	0e 94 29 14 	call	0x2852	; 0x2852 <print_long>
     70e:	8a e5       	ldi	r24, 0x5A	; 90
     710:	91 e0       	ldi	r25, 0x01	; 1
     712:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <print>
     716:	61 e0       	ldi	r22, 0x01	; 1
     718:	80 e0       	ldi	r24, 0x00	; 0
     71a:	0e 94 4c 14 	call	0x2898	; 0x2898 <lcd_goto_xy>
     71e:	11 30       	cpi	r17, 0x01	; 1
     720:	59 f0       	breq	.+22     	; 0x738 <errorDisplay+0x54>
     722:	28 f0       	brcs	.+10     	; 0x72e <errorDisplay+0x4a>
     724:	12 30       	cpi	r17, 0x02	; 2
     726:	69 f0       	breq	.+26     	; 0x742 <errorDisplay+0x5e>
     728:	13 30       	cpi	r17, 0x03	; 3
     72a:	81 f0       	breq	.+32     	; 0x74c <errorDisplay+0x68>
     72c:	13 c0       	rjmp	.+38     	; 0x754 <errorDisplay+0x70>
     72e:	8b e6       	ldi	r24, 0x6B	; 107
     730:	91 e0       	ldi	r25, 0x01	; 1
     732:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <print>
     736:	0e c0       	rjmp	.+28     	; 0x754 <errorDisplay+0x70>
     738:	84 e7       	ldi	r24, 0x74	; 116
     73a:	91 e0       	ldi	r25, 0x01	; 1
     73c:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <print>
     740:	09 c0       	rjmp	.+18     	; 0x754 <errorDisplay+0x70>
     742:	8c e7       	ldi	r24, 0x7C	; 124
     744:	91 e0       	ldi	r25, 0x01	; 1
     746:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <print>
     74a:	04 c0       	rjmp	.+8      	; 0x754 <errorDisplay+0x70>
     74c:	83 e8       	ldi	r24, 0x83	; 131
     74e:	91 e0       	ldi	r25, 0x01	; 1
     750:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <print>
     754:	df 91       	pop	r29
     756:	cf 91       	pop	r28
     758:	1f 91       	pop	r17
     75a:	08 95       	ret

0000075c <whileBarcode>:

const char welcome[] PROGMEM = ">g32>>c32";

void whileBarcode()
{
	while (lineType() != Barcode)
     75c:	03 c0       	rjmp	.+6      	; 0x764 <whileBarcode+0x8>
	{
		motorControl('S');
     75e:	83 e5       	ldi	r24, 0x53	; 83
     760:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>

const char welcome[] PROGMEM = ">g32>>c32";

void whileBarcode()
{
	while (lineType() != Barcode)
     764:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lineType>
     768:	82 30       	cpi	r24, 0x02	; 2
     76a:	c9 f7       	brne	.-14     	; 0x75e <whileBarcode+0x2>
	{
		motorControl('S');
	}
}
     76c:	08 95       	ret

0000076e <whileLineEnd>:

void whileLineEnd()
{
	while (lineType() != Line_end)
     76e:	03 c0       	rjmp	.+6      	; 0x776 <whileLineEnd+0x8>
	{
		motorControl('S');
     770:	83 e5       	ldi	r24, 0x53	; 83
     772:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
	}
}

void whileLineEnd()
{
	while (lineType() != Line_end)
     776:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lineType>
     77a:	81 30       	cpi	r24, 0x01	; 1
     77c:	c9 f7       	brne	.-14     	; 0x770 <whileLineEnd+0x2>
	{
		motorControl('S');
	}
}
     77e:	08 95       	ret

00000780 <charge_3pi>:
void charge_3pi(Communications *communications)
{
     780:	cf 93       	push	r28
     782:	df 93       	push	r29
     784:	ec 01       	movw	r28, r24
	whileBarcode();
     786:	0e 94 ae 03 	call	0x75c	; 0x75c <whileBarcode>
	updateDisplay(0, batteryPercentage(), mazeSolver);
     78a:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
     78e:	0e 94 91 0d 	call	0x1b22	; 0x1b22 <__fixsfsi>
     792:	41 e0       	ldi	r20, 0x01	; 1
     794:	80 e0       	ldi	r24, 0x00	; 0
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	0e 94 19 03 	call	0x632	; 0x632 <updateDisplay>
	parcours('T', communications);
     79c:	be 01       	movw	r22, r28
     79e:	84 e5       	ldi	r24, 0x54	; 84
     7a0:	0e 94 5e 09 	call	0x12bc	; 0x12bc <parcours>
	updateDisplay(0, batteryPercentage(), chargeMode);
     7a4:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
     7a8:	0e 94 91 0d 	call	0x1b22	; 0x1b22 <__fixsfsi>
     7ac:	43 e0       	ldi	r20, 0x03	; 3
     7ae:	80 e0       	ldi	r24, 0x00	; 0
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	0e 94 19 03 	call	0x632	; 0x632 <updateDisplay>
	warehouse(charging, communications);
     7b6:	be 01       	movw	r22, r28
     7b8:	81 e0       	ldi	r24, 0x01	; 1
     7ba:	0e 94 48 0b 	call	0x1690	; 0x1690 <warehouse>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     7be:	88 e8       	ldi	r24, 0x88	; 136
     7c0:	93 e1       	ldi	r25, 0x13	; 19
     7c2:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <delay_ms>
	delay(5000);								// wacht totdat de robot vol is
	warehouse(charging, communications);
     7c6:	be 01       	movw	r22, r28
     7c8:	81 e0       	ldi	r24, 0x01	; 1
     7ca:	0e 94 48 0b 	call	0x1690	; 0x1690 <warehouse>
	whileBarcode();
     7ce:	0e 94 ae 03 	call	0x75c	; 0x75c <whileBarcode>
	updateDisplay(0, batteryPercentage(), mazeSolver);
     7d2:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
     7d6:	0e 94 91 0d 	call	0x1b22	; 0x1b22 <__fixsfsi>
     7da:	41 e0       	ldi	r20, 0x01	; 1
     7dc:	80 e0       	ldi	r24, 0x00	; 0
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	0e 94 19 03 	call	0x632	; 0x632 <updateDisplay>
	parcours('B', communications);
     7e4:	be 01       	movw	r22, r28
     7e6:	82 e4       	ldi	r24, 0x42	; 66
     7e8:	0e 94 5e 09 	call	0x12bc	; 0x12bc <parcours>
	whileLineEnd();
     7ec:	0e 94 b7 03 	call	0x76e	; 0x76e <whileLineEnd>
	motorControl('L');
     7f0:	8c e4       	ldi	r24, 0x4C	; 76
     7f2:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
}
     7f6:	df 91       	pop	r29
     7f8:	cf 91       	pop	r28
     7fa:	08 95       	ret

000007fc <pickOrder>:

void pickOrder(Communications *communications)
{
     7fc:	cf 93       	push	r28
     7fe:	df 93       	push	r29
     800:	ec 01       	movw	r28, r24
	whileBarcode();
     802:	0e 94 ae 03 	call	0x75c	; 0x75c <whileBarcode>
	parcours('T', communications);
     806:	be 01       	movw	r22, r28
     808:	84 e5       	ldi	r24, 0x54	; 84
     80a:	0e 94 5e 09 	call	0x12bc	; 0x12bc <parcours>
	warehouse(orderPicking, communications); 	
     80e:	be 01       	movw	r22, r28
     810:	80 e0       	ldi	r24, 0x00	; 0
     812:	0e 94 48 0b 	call	0x1690	; 0x1690 <warehouse>
	parcours('B', communications);
     816:	be 01       	movw	r22, r28
     818:	82 e4       	ldi	r24, 0x42	; 66
     81a:	0e 94 5e 09 	call	0x12bc	; 0x12bc <parcours>
	whileLineEnd();
     81e:	0e 94 b7 03 	call	0x76e	; 0x76e <whileLineEnd>
	motorControl('L');
     822:	8c e4       	ldi	r24, 0x4C	; 76
     824:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
}
     828:	df 91       	pop	r29
     82a:	cf 91       	pop	r28
     82c:	08 95       	ret

0000082e <main>:

int main()
{
     82e:	cf 93       	push	r28
     830:	df 93       	push	r29
     832:	cd b7       	in	r28, 0x3d	; 61
     834:	de b7       	in	r29, 0x3e	; 62
     836:	c3 57       	subi	r28, 0x73	; 115
     838:	d1 09       	sbc	r29, r1
     83a:	0f b6       	in	r0, 0x3f	; 63
     83c:	f8 94       	cli
     83e:	de bf       	out	0x3e, r29	; 62
     840:	0f be       	out	0x3f, r0	; 63
     842:	cd bf       	out	0x3d, r28	; 61
	play_from_program_space(welcome);
     844:	8a e7       	ldi	r24, 0x7A	; 122
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	0e 94 b9 12 	call	0x2572	; 0x2572 <play_from_program_space>
	
	Communications communications;
	Communications_INIT(&communications);
     84c:	ce 01       	movw	r24, r28
     84e:	01 96       	adiw	r24, 0x01	; 1
     850:	0e 94 c3 02 	call	0x586	; 0x586 <Communications_INIT>
	
	initialize(&communications);
     854:	ce 01       	movw	r24, r28
     856:	01 96       	adiw	r24, 0x01	; 1
     858:	0e 94 74 04 	call	0x8e8	; 0x8e8 <initialize>
		
	while(1) 
	{
		//updateDisplay(0, batteryPercentage(), homingMode);
		communications.Update(&communications);
     85c:	e4 96       	adiw	r28, 0x34	; 52
     85e:	ee ad       	ldd	r30, Y+62	; 0x3e
     860:	ff ad       	ldd	r31, Y+63	; 0x3f
     862:	e4 97       	sbiw	r28, 0x34	; 52
     864:	ce 01       	movw	r24, r28
     866:	01 96       	adiw	r24, 0x01	; 1
     868:	09 95       	icall
		
		communications.locationx = -1;
     86a:	8f ef       	ldi	r24, 0xFF	; 255
     86c:	e0 96       	adiw	r28, 0x30	; 48
     86e:	8f af       	std	Y+63, r24	; 0x3f
     870:	e0 97       	sbiw	r28, 0x30	; 48
		communications.locationy = -1;
     872:	e1 96       	adiw	r28, 0x31	; 49
     874:	8f af       	std	Y+63, r24	; 0x3f
     876:	e1 97       	sbiw	r28, 0x31	; 49
		
		lcd_goto_xy(0, 0);
     878:	60 e0       	ldi	r22, 0x00	; 0
     87a:	80 e0       	ldi	r24, 0x00	; 0
     87c:	0e 94 4c 14 	call	0x2898	; 0x2898 <lcd_goto_xy>
		
		
		switch (communications.EmergencyStop) {
     880:	ad 96       	adiw	r28, 0x2d	; 45
     882:	8f ad       	ldd	r24, Y+63	; 0x3f
     884:	ad 97       	sbiw	r28, 0x2d	; 45
     886:	82 30       	cpi	r24, 0x02	; 2
     888:	21 f1       	breq	.+72     	; 0x8d2 <main+0xa4>
     88a:	28 f0       	brcs	.+10     	; 0x896 <main+0x68>
     88c:	83 30       	cpi	r24, 0x03	; 3
     88e:	21 f1       	breq	.+72     	; 0x8d8 <main+0xaa>
     890:	84 30       	cpi	r24, 0x04	; 4
     892:	29 f1       	breq	.+74     	; 0x8de <main+0xb0>
     894:	e3 cf       	rjmp	.-58     	; 0x85c <main+0x2e>
				}
				else*/
// 				print_long(communications.locationx);
// 				print_long(communications.locationy);
				
				if (communications.flag==1)
     896:	e2 96       	adiw	r28, 0x32	; 50
     898:	8f ad       	ldd	r24, Y+63	; 0x3f
     89a:	e2 97       	sbiw	r28, 0x32	; 50
     89c:	81 30       	cpi	r24, 0x01	; 1
     89e:	f1 f6       	brne	.-68     	; 0x85c <main+0x2e>
				{
					communications.flag=0;
     8a0:	e2 96       	adiw	r28, 0x32	; 50
     8a2:	1f ae       	std	Y+63, r1	; 0x3f
     8a4:	e2 97       	sbiw	r28, 0x32	; 50
					
					play_from_program_space(welcome);
     8a6:	8a e7       	ldi	r24, 0x7A	; 122
     8a8:	90 e0       	ldi	r25, 0x00	; 0
     8aa:	0e 94 b9 12 	call	0x2572	; 0x2572 <play_from_program_space>
					communications.locationx = 0;
     8ae:	e0 96       	adiw	r28, 0x30	; 48
     8b0:	1f ae       	std	Y+63, r1	; 0x3f
     8b2:	e0 97       	sbiw	r28, 0x30	; 48
					communications.locationy = 0;
     8b4:	e1 96       	adiw	r28, 0x31	; 49
     8b6:	1f ae       	std	Y+63, r1	; 0x3f
     8b8:	e1 97       	sbiw	r28, 0x31	; 49
					pickOrder(&communications);
     8ba:	ce 01       	movw	r24, r28
     8bc:	01 96       	adiw	r24, 0x01	; 1
     8be:	0e 94 fe 03 	call	0x7fc	; 0x7fc <pickOrder>
					communications.locationx = -1;
     8c2:	8f ef       	ldi	r24, 0xFF	; 255
     8c4:	e0 96       	adiw	r28, 0x30	; 48
     8c6:	8f af       	std	Y+63, r24	; 0x3f
     8c8:	e0 97       	sbiw	r28, 0x30	; 48
					communications.locationy = -1;
     8ca:	e1 96       	adiw	r28, 0x31	; 49
     8cc:	8f af       	std	Y+63, r24	; 0x3f
     8ce:	e1 97       	sbiw	r28, 0x31	; 49
     8d0:	c5 cf       	rjmp	.-118    	; 0x85c <main+0x2e>
				}
				break;
				delay(100);
			case 2:
				Spin();
     8d2:	0e 94 64 08 	call	0x10c8	; 0x10c8 <Spin>
				break;
     8d6:	c2 cf       	rjmp	.-124    	; 0x85c <main+0x2e>
			case 3:
				manualControl();
     8d8:	0e 94 2c 07 	call	0xe58	; 0xe58 <manualControl>
				break;
     8dc:	bf cf       	rjmp	.-130    	; 0x85c <main+0x2e>
				
			case 4:
				charge_3pi(&communications);
     8de:	ce 01       	movw	r24, r28
     8e0:	01 96       	adiw	r24, 0x01	; 1
     8e2:	0e 94 c0 03 	call	0x780	; 0x780 <charge_3pi>
				break;
     8e6:	ba cf       	rjmp	.-140    	; 0x85c <main+0x2e>

000008e8 <initialize>:
void inch(){
	set_motors(50,50);
	delay(200);
	set_motors(0,0);
}
void println(int x){
     8e8:	cf 93       	push	r28
     8ea:	df 93       	push	r29
     8ec:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <myComs+0x1>
     8f0:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <myComs>
     8f4:	80 ed       	ldi	r24, 0xD0	; 208
     8f6:	97 e0       	ldi	r25, 0x07	; 7
     8f8:	0e 94 a0 17 	call	0x2f40	; 0x2f40 <pololu_3pi_init>
     8fc:	0d c0       	rjmp	.+26     	; 0x918 <__stack+0x19>
     8fe:	0e 94 c5 13 	call	0x278a	; 0x278a <clear>
     902:	60 e0       	ldi	r22, 0x00	; 0
     904:	80 e0       	ldi	r24, 0x00	; 0
     906:	0e 94 4c 14 	call	0x2898	; 0x2898 <lcd_goto_xy>
     90a:	0e 94 a0 0f 	call	0x1f40	; 0x1f40 <read_battery_millivolts_3pi>
     90e:	bc 01       	movw	r22, r24
     910:	80 e0       	ldi	r24, 0x00	; 0
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	0e 94 29 14 	call	0x2852	; 0x2852 <print_long>
     918:	80 e1       	ldi	r24, 0x10	; 16
     91a:	0e 94 45 15 	call	0x2a8a	; 0x2a8a <button_is_pressed>
     91e:	88 23       	and	r24, r24
     920:	71 f3       	breq	.-36     	; 0x8fe <initialize+0x16>
     922:	80 e1       	ldi	r24, 0x10	; 16
     924:	0e 94 31 15 	call	0x2a62	; 0x2a62 <wait_for_button_release>
     928:	88 ee       	ldi	r24, 0xE8	; 232
     92a:	93 e0       	ldi	r25, 0x03	; 3
     92c:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <delay_ms>
     930:	c0 e0       	ldi	r28, 0x00	; 0
     932:	d0 e0       	ldi	r29, 0x00	; 0
     934:	19 c0       	rjmp	.+50     	; 0x968 <__stack+0x69>
     936:	ce 01       	movw	r24, r28
     938:	44 97       	sbiw	r24, 0x14	; 20
     93a:	88 97       	sbiw	r24, 0x28	; 40
     93c:	38 f0       	brcs	.+14     	; 0x94c <__stack+0x4d>
     93e:	68 ed       	ldi	r22, 0xD8	; 216
     940:	7f ef       	ldi	r23, 0xFF	; 255
     942:	88 e2       	ldi	r24, 0x28	; 40
     944:	90 e0       	ldi	r25, 0x00	; 0
     946:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
     94a:	06 c0       	rjmp	.+12     	; 0x958 <__stack+0x59>
     94c:	68 e2       	ldi	r22, 0x28	; 40
     94e:	70 e0       	ldi	r23, 0x00	; 0
     950:	88 ed       	ldi	r24, 0xD8	; 216
     952:	9f ef       	ldi	r25, 0xFF	; 255
     954:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
     958:	81 e0       	ldi	r24, 0x01	; 1
     95a:	0e 94 5d 17 	call	0x2eba	; 0x2eba <calibrate_line_sensors>
     95e:	84 e1       	ldi	r24, 0x14	; 20
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <delay_ms>
     966:	21 96       	adiw	r28, 0x01	; 1
     968:	c0 35       	cpi	r28, 0x50	; 80
     96a:	d1 05       	cpc	r29, r1
     96c:	20 f3       	brcs	.-56     	; 0x936 <__stack+0x37>
     96e:	60 e0       	ldi	r22, 0x00	; 0
     970:	70 e0       	ldi	r23, 0x00	; 0
     972:	80 e0       	ldi	r24, 0x00	; 0
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
     97a:	80 e1       	ldi	r24, 0x10	; 16
     97c:	0e 94 45 15 	call	0x2a8a	; 0x2a8a <button_is_pressed>
     980:	88 23       	and	r24, r24
     982:	d9 f3       	breq	.-10     	; 0x97a <__stack+0x7b>
     984:	80 e1       	ldi	r24, 0x10	; 16
     986:	0e 94 31 15 	call	0x2a62	; 0x2a62 <wait_for_button_release>
     98a:	0e 94 c5 13 	call	0x278a	; 0x278a <clear>
     98e:	df 91       	pop	r29
     990:	cf 91       	pop	r28
     992:	08 95       	ret

00000994 <inch>:
     994:	62 e3       	ldi	r22, 0x32	; 50
     996:	70 e0       	ldi	r23, 0x00	; 0
     998:	82 e3       	ldi	r24, 0x32	; 50
     99a:	90 e0       	ldi	r25, 0x00	; 0
     99c:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
     9a0:	88 ec       	ldi	r24, 0xC8	; 200
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <delay_ms>
     9a8:	60 e0       	ldi	r22, 0x00	; 0
     9aa:	70 e0       	ldi	r23, 0x00	; 0
     9ac:	80 e0       	ldi	r24, 0x00	; 0
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
     9b4:	08 95       	ret

000009b6 <wait>:
	lcd_goto_xy(0,0);
	print_long(x);	*/
}

void wait(){
	set_motors(0,0);
     9b6:	60 e0       	ldi	r22, 0x00	; 0
     9b8:	70 e0       	ldi	r23, 0x00	; 0
     9ba:	80 e0       	ldi	r24, 0x00	; 0
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
						
	while(!button_is_pressed(BUTTON_B)){}
     9c2:	80 e1       	ldi	r24, 0x10	; 16
     9c4:	0e 94 45 15 	call	0x2a8a	; 0x2a8a <button_is_pressed>
     9c8:	88 23       	and	r24, r24
     9ca:	d9 f3       	breq	.-10     	; 0x9c2 <wait+0xc>
	wait_for_button_release(BUTTON_B);
     9cc:	80 e1       	ldi	r24, 0x10	; 16
     9ce:	0e 94 31 15 	call	0x2a62	; 0x2a62 <wait_for_button_release>
     9d2:	08 95       	ret

000009d4 <lineType>:
}

char lineType(){																																	// function that returns the type of junction it detects
	while(1){																																		// >= 500 = black line		<=500 = white
		read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     9d4:	61 e0       	ldi	r22, 0x01	; 1
     9d6:	81 e1       	ldi	r24, 0x11	; 17
     9d8:	92 e0       	ldi	r25, 0x02	; 2
     9da:	0e 94 63 17 	call	0x2ec6	; 0x2ec6 <read_line_sensors_calibrated>

			if (sensors[0] >= Refrence_value && sensors[4] >= Refrence_value){																									//Checks if its a X junction or a T junction
     9de:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <sensors>
     9e2:	90 91 12 02 	lds	r25, 0x0212	; 0x800212 <sensors+0x1>
     9e6:	80 39       	cpi	r24, 0x90	; 144
     9e8:	21 e0       	ldi	r18, 0x01	; 1
     9ea:	92 07       	cpc	r25, r18
     9ec:	08 f4       	brcc	.+2      	; 0x9f0 <lineType+0x1c>
     9ee:	67 c0       	rjmp	.+206    	; 0xabe <lineType+0xea>
     9f0:	20 91 19 02 	lds	r18, 0x0219	; 0x800219 <sensors+0x8>
     9f4:	30 91 1a 02 	lds	r19, 0x021A	; 0x80021a <sensors+0x9>
     9f8:	20 39       	cpi	r18, 0x90	; 144
     9fa:	31 40       	sbci	r19, 0x01	; 1
     9fc:	08 f4       	brcc	.+2      	; 0xa00 <lineType+0x2c>
     9fe:	5f c0       	rjmp	.+190    	; 0xabe <lineType+0xea>
					inch();
     a00:	0e 94 ca 04 	call	0x994	; 0x994 <inch>
					read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     a04:	61 e0       	ldi	r22, 0x01	; 1
     a06:	81 e1       	ldi	r24, 0x11	; 17
     a08:	92 e0       	ldi	r25, 0x02	; 2
     a0a:	0e 94 63 17 	call	0x2ec6	; 0x2ec6 <read_line_sensors_calibrated>
					if (sensors[0] >=Refrence_value && sensors[1] >=Refrence_value && sensors[3] >= Refrence_value && sensors[4] >=Refrence_value){
     a0e:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <sensors>
     a12:	90 91 12 02 	lds	r25, 0x0212	; 0x800212 <sensors+0x1>
     a16:	80 39       	cpi	r24, 0x90	; 144
     a18:	91 40       	sbci	r25, 0x01	; 1
     a1a:	b8 f1       	brcs	.+110    	; 0xa8a <lineType+0xb6>
     a1c:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     a20:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     a24:	80 39       	cpi	r24, 0x90	; 144
     a26:	91 40       	sbci	r25, 0x01	; 1
     a28:	80 f1       	brcs	.+96     	; 0xa8a <lineType+0xb6>
     a2a:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     a2e:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     a32:	80 39       	cpi	r24, 0x90	; 144
     a34:	91 40       	sbci	r25, 0x01	; 1
     a36:	48 f1       	brcs	.+82     	; 0xa8a <lineType+0xb6>
     a38:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x8>
     a3c:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x9>
     a40:	80 39       	cpi	r24, 0x90	; 144
     a42:	91 40       	sbci	r25, 0x01	; 1
     a44:	10 f1       	brcs	.+68     	; 0xa8a <lineType+0xb6>
						clear();
     a46:	0e 94 c5 13 	call	0x278a	; 0x278a <clear>
						while(sensors[0] >= 400 || sensors[4] >=400)
     a4a:	0b c0       	rjmp	.+22     	; 0xa62 <lineType+0x8e>
						{
							read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     a4c:	61 e0       	ldi	r22, 0x01	; 1
     a4e:	81 e1       	ldi	r24, 0x11	; 17
     a50:	92 e0       	ldi	r25, 0x02	; 2
     a52:	0e 94 63 17 	call	0x2ec6	; 0x2ec6 <read_line_sensors_calibrated>
							set_motors(75,75);
     a56:	6b e4       	ldi	r22, 0x4B	; 75
     a58:	70 e0       	ldi	r23, 0x00	; 0
     a5a:	8b e4       	ldi	r24, 0x4B	; 75
     a5c:	90 e0       	ldi	r25, 0x00	; 0
     a5e:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
			if (sensors[0] >= Refrence_value && sensors[4] >= Refrence_value){																									//Checks if its a X junction or a T junction
					inch();
					read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
					if (sensors[0] >=Refrence_value && sensors[1] >=Refrence_value && sensors[3] >= Refrence_value && sensors[4] >=Refrence_value){
						clear();
						while(sensors[0] >= 400 || sensors[4] >=400)
     a62:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <sensors>
     a66:	90 91 12 02 	lds	r25, 0x0212	; 0x800212 <sensors+0x1>
     a6a:	80 39       	cpi	r24, 0x90	; 144
     a6c:	91 40       	sbci	r25, 0x01	; 1
     a6e:	70 f7       	brcc	.-36     	; 0xa4c <lineType+0x78>
     a70:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x8>
     a74:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x9>
     a78:	80 39       	cpi	r24, 0x90	; 144
     a7a:	91 40       	sbci	r25, 0x01	; 1
     a7c:	38 f7       	brcc	.-50     	; 0xa4c <lineType+0x78>
						{
							read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
							set_motors(75,75);
						}
						inch();
     a7e:	0e 94 ca 04 	call	0x994	; 0x994 <inch>
						wait();
     a82:	0e 94 db 04 	call	0x9b6	; 0x9b6 <wait>
						return Barcode;
     a86:	82 e0       	ldi	r24, 0x02	; 2
     a88:	08 95       	ret
					}
					else if (sensors[2] >=Refrence_value || (sensors[1] >= Refrence_value || sensors[3] >= Refrence_value)){
     a8a:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     a8e:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     a92:	80 39       	cpi	r24, 0x90	; 144
     a94:	91 40       	sbci	r25, 0x01	; 1
     a96:	08 f0       	brcs	.+2      	; 0xa9a <lineType+0xc6>
     a98:	79 c0       	rjmp	.+242    	; 0xb8c <lineType+0x1b8>
     a9a:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     a9e:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     aa2:	80 39       	cpi	r24, 0x90	; 144
     aa4:	91 40       	sbci	r25, 0x01	; 1
     aa6:	08 f0       	brcs	.+2      	; 0xaaa <lineType+0xd6>
     aa8:	73 c0       	rjmp	.+230    	; 0xb90 <lineType+0x1bc>
     aaa:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     aae:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     ab2:	80 39       	cpi	r24, 0x90	; 144
     ab4:	91 40       	sbci	r25, 0x01	; 1
     ab6:	08 f4       	brcc	.+2      	; 0xaba <lineType+0xe6>
     ab8:	6d c0       	rjmp	.+218    	; 0xb94 <lineType+0x1c0>
						println(X_junction);
						return X_junction;
     aba:	88 e0       	ldi	r24, 0x08	; 8
     abc:	08 95       	ret
						println(T_junction);
						return T_junction;
					}
				}
							
		else if (sensors[0] >=Refrence_value && sensors[1] >= Refrence_value && sensors[4] <= Refrence_value ){																							//Checks if its a left corner or a straight with left corner
     abe:	80 39       	cpi	r24, 0x90	; 144
     ac0:	61 e0       	ldi	r22, 0x01	; 1
     ac2:	96 07       	cpc	r25, r22
     ac4:	38 f1       	brcs	.+78     	; 0xb14 <lineType+0x140>
     ac6:	20 91 13 02 	lds	r18, 0x0213	; 0x800213 <sensors+0x2>
     aca:	30 91 14 02 	lds	r19, 0x0214	; 0x800214 <sensors+0x3>
     ace:	20 39       	cpi	r18, 0x90	; 144
     ad0:	31 40       	sbci	r19, 0x01	; 1
     ad2:	00 f1       	brcs	.+64     	; 0xb14 <lineType+0x140>
     ad4:	20 91 19 02 	lds	r18, 0x0219	; 0x800219 <sensors+0x8>
     ad8:	30 91 1a 02 	lds	r19, 0x021A	; 0x80021a <sensors+0x9>
     adc:	21 39       	cpi	r18, 0x91	; 145
     ade:	31 40       	sbci	r19, 0x01	; 1
     ae0:	c8 f4       	brcc	.+50     	; 0xb14 <lineType+0x140>
			inch();
     ae2:	0e 94 ca 04 	call	0x994	; 0x994 <inch>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     ae6:	61 e0       	ldi	r22, 0x01	; 1
     ae8:	81 e1       	ldi	r24, 0x11	; 17
     aea:	92 e0       	ldi	r25, 0x02	; 2
     aec:	0e 94 63 17 	call	0x2ec6	; 0x2ec6 <read_line_sensors_calibrated>
			
			if (sensors[2] >= Refrence_value || sensors[3] >=Refrence_value){
     af0:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     af4:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     af8:	80 39       	cpi	r24, 0x90	; 144
     afa:	91 40       	sbci	r25, 0x01	; 1
     afc:	08 f0       	brcs	.+2      	; 0xb00 <lineType+0x12c>
     afe:	4c c0       	rjmp	.+152    	; 0xb98 <lineType+0x1c4>
     b00:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     b04:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     b08:	80 39       	cpi	r24, 0x90	; 144
     b0a:	91 40       	sbci	r25, 0x01	; 1
     b0c:	08 f4       	brcc	.+2      	; 0xb10 <lineType+0x13c>
     b0e:	46 c0       	rjmp	.+140    	; 0xb9c <lineType+0x1c8>
				println(Straight_left_junction);
				return Straight_left_junction;
     b10:	86 e0       	ldi	r24, 0x06	; 6
     b12:	08 95       	ret
				return Left_corner;
			}
		}
		
		
		else if (sensors[3] >=Refrence_value && sensors[4] >= Refrence_value && sensors[0] <= Refrence_value){																							//Checks if its a right corner or a straight with right corner
     b14:	20 91 17 02 	lds	r18, 0x0217	; 0x800217 <sensors+0x6>
     b18:	30 91 18 02 	lds	r19, 0x0218	; 0x800218 <sensors+0x7>
     b1c:	20 39       	cpi	r18, 0x90	; 144
     b1e:	61 e0       	ldi	r22, 0x01	; 1
     b20:	36 07       	cpc	r19, r22
     b22:	08 f1       	brcs	.+66     	; 0xb66 <lineType+0x192>
     b24:	40 91 19 02 	lds	r20, 0x0219	; 0x800219 <sensors+0x8>
     b28:	50 91 1a 02 	lds	r21, 0x021A	; 0x80021a <sensors+0x9>
     b2c:	40 39       	cpi	r20, 0x90	; 144
     b2e:	51 40       	sbci	r21, 0x01	; 1
     b30:	d0 f0       	brcs	.+52     	; 0xb66 <lineType+0x192>
     b32:	81 39       	cpi	r24, 0x91	; 145
     b34:	91 40       	sbci	r25, 0x01	; 1
     b36:	b8 f4       	brcc	.+46     	; 0xb66 <lineType+0x192>
			inch();
     b38:	0e 94 ca 04 	call	0x994	; 0x994 <inch>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     b3c:	61 e0       	ldi	r22, 0x01	; 1
     b3e:	81 e1       	ldi	r24, 0x11	; 17
     b40:	92 e0       	ldi	r25, 0x02	; 2
     b42:	0e 94 63 17 	call	0x2ec6	; 0x2ec6 <read_line_sensors_calibrated>
			
			if (sensors[2] >= Refrence_value || sensors[1] >=Refrence_value){
     b46:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     b4a:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     b4e:	80 39       	cpi	r24, 0x90	; 144
     b50:	91 40       	sbci	r25, 0x01	; 1
     b52:	30 f5       	brcc	.+76     	; 0xba0 <lineType+0x1cc>
     b54:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     b58:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     b5c:	80 39       	cpi	r24, 0x90	; 144
     b5e:	91 40       	sbci	r25, 0x01	; 1
     b60:	08 f1       	brcs	.+66     	; 0xba4 <lineType+0x1d0>
				println(Straight_right_junction);
				return Straight_right_junction;
     b62:	85 e0       	ldi	r24, 0x05	; 5
     b64:	08 95       	ret
				println(Straight_left_junction);
				return Right_corner;
			}
		}
		
				else if(sensors[2] <= End_Line_Value && sensors[1] <=End_Line_Value && sensors[3] <=End_Line_Value){
     b66:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     b6a:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     b6e:	89 3c       	cpi	r24, 0xC9	; 201
     b70:	91 05       	cpc	r25, r1
     b72:	d0 f4       	brcc	.+52     	; 0xba8 <lineType+0x1d4>
     b74:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     b78:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     b7c:	89 3c       	cpi	r24, 0xC9	; 201
     b7e:	91 05       	cpc	r25, r1
     b80:	a8 f4       	brcc	.+42     	; 0xbac <lineType+0x1d8>
     b82:	29 3c       	cpi	r18, 0xC9	; 201
     b84:	31 05       	cpc	r19, r1
     b86:	a0 f0       	brcs	.+40     	; 0xbb0 <lineType+0x1dc>
			}
			else{
				println(Straight);
				return Straight;
			}				*/																					// check if its straight without any corners
			return Straight;
     b88:	80 e0       	ldi	r24, 0x00	; 0
     b8a:	08 95       	ret
						wait();
						return Barcode;
					}
					else if (sensors[2] >=Refrence_value || (sensors[1] >= Refrence_value || sensors[3] >= Refrence_value)){
						println(X_junction);
						return X_junction;
     b8c:	88 e0       	ldi	r24, 0x08	; 8
     b8e:	08 95       	ret
     b90:	88 e0       	ldi	r24, 0x08	; 8
     b92:	08 95       	ret
					}
					else {
						println(T_junction);
						return T_junction;
     b94:	87 e0       	ldi	r24, 0x07	; 7
     b96:	08 95       	ret
			inch();
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= Refrence_value || sensors[3] >=Refrence_value){
				println(Straight_left_junction);
				return Straight_left_junction;
     b98:	86 e0       	ldi	r24, 0x06	; 6
     b9a:	08 95       	ret
			}
			else{
				println(Left_corner);
				return Left_corner;
     b9c:	83 e0       	ldi	r24, 0x03	; 3
     b9e:	08 95       	ret
			inch();
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= Refrence_value || sensors[1] >=Refrence_value){
				println(Straight_right_junction);
				return Straight_right_junction;
     ba0:	85 e0       	ldi	r24, 0x05	; 5
     ba2:	08 95       	ret
			}
			else{
				println(Straight_left_junction);
				return Right_corner;
     ba4:	84 e0       	ldi	r24, 0x04	; 4
     ba6:	08 95       	ret
			}
			else{
				println(Straight);
				return Straight;
			}				*/																					// check if its straight without any corners
			return Straight;
     ba8:	80 e0       	ldi	r24, 0x00	; 0
     baa:	08 95       	ret
     bac:	80 e0       	ldi	r24, 0x00	; 0
     bae:	08 95       	ret
			}
		}
		
				else if(sensors[2] <= End_Line_Value && sensors[1] <=End_Line_Value && sensors[3] <=End_Line_Value){
					println(Line_end);																													// check if the line ends
					return Line_end;
     bb0:	81 e0       	ldi	r24, 0x01	; 1
			return Straight;
		}
		
	
	}
}
     bb2:	08 95       	ret

00000bb4 <motorControl>:

void motorControl(char x){													// function that controlls the motor movement and the turns
     bb4:	8f 92       	push	r8
     bb6:	9f 92       	push	r9
     bb8:	af 92       	push	r10
     bba:	bf 92       	push	r11
     bbc:	cf 92       	push	r12
     bbe:	df 92       	push	r13
     bc0:	ef 92       	push	r14
     bc2:	ff 92       	push	r15
     bc4:	0f 93       	push	r16
     bc6:	1f 93       	push	r17
     bc8:	cf 93       	push	r28
     bca:	df 93       	push	r29
     bcc:	c8 2f       	mov	r28, r24

		


	myComs->Update(myComs);
     bce:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <myComs>
     bd2:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <myComs+0x1>
     bd6:	fc 01       	movw	r30, r24
     bd8:	ef 58       	subi	r30, 0x8F	; 143
     bda:	ff 4f       	sbci	r31, 0xFF	; 255
     bdc:	01 90       	ld	r0, Z+
     bde:	f0 81       	ld	r31, Z
     be0:	e0 2d       	mov	r30, r0
     be2:	09 95       	icall
	unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     be4:	61 e0       	ldi	r22, 0x01	; 1
     be6:	81 e1       	ldi	r24, 0x11	; 17
     be8:	92 e0       	ldi	r25, 0x02	; 2
     bea:	0e 94 6a 17 	call	0x2ed4	; 0x2ed4 <read_line>
     bee:	8c 01       	movw	r16, r24
	read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     bf0:	61 e0       	ldi	r22, 0x01	; 1
     bf2:	81 e1       	ldi	r24, 0x11	; 17
     bf4:	92 e0       	ldi	r25, 0x02	; 2
     bf6:	0e 94 63 17 	call	0x2ec6	; 0x2ec6 <read_line_sensors_calibrated>

	while (analog_read(5) <= 200) {
     bfa:	06 c0       	rjmp	.+12     	; 0xc08 <motorControl+0x54>
		set_motors(0, 0);
     bfc:	60 e0       	ldi	r22, 0x00	; 0
     bfe:	70 e0       	ldi	r23, 0x00	; 0
     c00:	80 e0       	ldi	r24, 0x00	; 0
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>

	myComs->Update(myComs);
	unsigned int position = read_line(sensors,IR_EMITTERS_ON);
	read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);

	while (analog_read(5) <= 200) {
     c08:	85 e0       	ldi	r24, 0x05	; 5
     c0a:	0e 94 07 0f 	call	0x1e0e	; 0x1e0e <analog_read>
     c0e:	89 3c       	cpi	r24, 0xC9	; 201
     c10:	91 05       	cpc	r25, r1
     c12:	a0 f3       	brcs	.-24     	; 0xbfc <motorControl+0x48>
		set_motors(0, 0);
	}
	
	if(myComs->EmergencyStop == 1)		{													//Emergency Brake
     c14:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     c18:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     c1c:	e5 59       	subi	r30, 0x95	; 149
     c1e:	ff 4f       	sbci	r31, 0xFF	; 255
     c20:	80 81       	ld	r24, Z
     c22:	81 30       	cpi	r24, 0x01	; 1
     c24:	39 f4       	brne	.+14     	; 0xc34 <motorControl+0x80>
		set_motors(0,0);
     c26:	60 e0       	ldi	r22, 0x00	; 0
     c28:	70 e0       	ldi	r23, 0x00	; 0
     c2a:	80 e0       	ldi	r24, 0x00	; 0
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
     c32:	05 c1       	rjmp	.+522    	; 0xe3e <motorControl+0x28a>
	}else if(x == 'L'){														//Turn Left
     c34:	cc 34       	cpi	r28, 0x4C	; 76
     c36:	39 f5       	brne	.+78     	; 0xc86 <motorControl+0xd2>
		set_motors(-turn_value,turn_value);
     c38:	6c e3       	ldi	r22, 0x3C	; 60
     c3a:	70 e0       	ldi	r23, 0x00	; 0
     c3c:	84 ec       	ldi	r24, 0xC4	; 196
     c3e:	9f ef       	ldi	r25, 0xFF	; 255
     c40:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
		
		while (sensors[2] >=Refrence_value)
     c44:	05 c0       	rjmp	.+10     	; 0xc50 <motorControl+0x9c>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     c46:	61 e0       	ldi	r22, 0x01	; 1
     c48:	81 e1       	ldi	r24, 0x11	; 17
     c4a:	92 e0       	ldi	r25, 0x02	; 2
     c4c:	0e 94 63 17 	call	0x2ec6	; 0x2ec6 <read_line_sensors_calibrated>
	if(myComs->EmergencyStop == 1)		{													//Emergency Brake
		set_motors(0,0);
	}else if(x == 'L'){														//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] >=Refrence_value)
     c50:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     c54:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     c58:	80 39       	cpi	r24, 0x90	; 144
     c5a:	91 40       	sbci	r25, 0x01	; 1
     c5c:	a0 f7       	brcc	.-24     	; 0xc46 <motorControl+0x92>
     c5e:	05 c0       	rjmp	.+10     	; 0xc6a <motorControl+0xb6>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     c60:	61 e0       	ldi	r22, 0x01	; 1
     c62:	81 e1       	ldi	r24, 0x11	; 17
     c64:	92 e0       	ldi	r25, 0x02	; 2
     c66:	0e 94 63 17 	call	0x2ec6	; 0x2ec6 <read_line_sensors_calibrated>
	}else if(x == 'L'){														//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] >=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
     c6a:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     c6e:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     c72:	81 39       	cpi	r24, 0x91	; 145
     c74:	91 40       	sbci	r25, 0x01	; 1
     c76:	a0 f3       	brcs	.-24     	; 0xc60 <motorControl+0xac>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		set_motors(0,0);
     c78:	60 e0       	ldi	r22, 0x00	; 0
     c7a:	70 e0       	ldi	r23, 0x00	; 0
     c7c:	80 e0       	ldi	r24, 0x00	; 0
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
     c84:	dc c0       	rjmp	.+440    	; 0xe3e <motorControl+0x28a>
	}
	
	
	else if(x == 'R'){														//Turn Right
     c86:	c2 35       	cpi	r28, 0x52	; 82
     c88:	39 f5       	brne	.+78     	; 0xcd8 <motorControl+0x124>
		set_motors(turn_value,-turn_value);
     c8a:	64 ec       	ldi	r22, 0xC4	; 196
     c8c:	7f ef       	ldi	r23, 0xFF	; 255
     c8e:	8c e3       	ldi	r24, 0x3C	; 60
     c90:	90 e0       	ldi	r25, 0x00	; 0
     c92:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
		
		while (sensors[2] >=Refrence_value)
     c96:	05 c0       	rjmp	.+10     	; 0xca2 <motorControl+0xee>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     c98:	61 e0       	ldi	r22, 0x01	; 1
     c9a:	81 e1       	ldi	r24, 0x11	; 17
     c9c:	92 e0       	ldi	r25, 0x02	; 2
     c9e:	0e 94 63 17 	call	0x2ec6	; 0x2ec6 <read_line_sensors_calibrated>
	
	
	else if(x == 'R'){														//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] >=Refrence_value)
     ca2:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     ca6:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     caa:	80 39       	cpi	r24, 0x90	; 144
     cac:	91 40       	sbci	r25, 0x01	; 1
     cae:	a0 f7       	brcc	.-24     	; 0xc98 <motorControl+0xe4>
     cb0:	05 c0       	rjmp	.+10     	; 0xcbc <motorControl+0x108>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     cb2:	61 e0       	ldi	r22, 0x01	; 1
     cb4:	81 e1       	ldi	r24, 0x11	; 17
     cb6:	92 e0       	ldi	r25, 0x02	; 2
     cb8:	0e 94 63 17 	call	0x2ec6	; 0x2ec6 <read_line_sensors_calibrated>
	else if(x == 'R'){														//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] >=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
     cbc:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     cc0:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     cc4:	81 39       	cpi	r24, 0x91	; 145
     cc6:	91 40       	sbci	r25, 0x01	; 1
     cc8:	a0 f3       	brcs	.-24     	; 0xcb2 <motorControl+0xfe>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		set_motors(0,0);
     cca:	60 e0       	ldi	r22, 0x00	; 0
     ccc:	70 e0       	ldi	r23, 0x00	; 0
     cce:	80 e0       	ldi	r24, 0x00	; 0
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
     cd6:	b3 c0       	rjmp	.+358    	; 0xe3e <motorControl+0x28a>
	}
		
			
	else if(x == 'S'){												//drive straight and adjusts the robot so it follows the line
     cd8:	c3 35       	cpi	r28, 0x53	; 83
     cda:	09 f0       	breq	.+2      	; 0xcde <motorControl+0x12a>
     cdc:	66 c0       	rjmp	.+204    	; 0xdaa <motorControl+0x1f6>
		// are not interested in the individual sensor readings.
		// The "proportional" term should be 0 when we are on the line.
		int proportional = ((int)position) - 2000;
     cde:	c8 01       	movw	r24, r16
     ce0:	80 5d       	subi	r24, 0xD0	; 208
     ce2:	97 40       	sbci	r25, 0x07	; 7

		// Compute the derivative (change) and integral (sum) of the
		// position.
		int derivative = proportional - last_proportional;
     ce4:	20 91 0d 02 	lds	r18, 0x020D	; 0x80020d <last_proportional>
     ce8:	30 91 0e 02 	lds	r19, 0x020E	; 0x80020e <last_proportional+0x1>
     cec:	ec 01       	movw	r28, r24
     cee:	c2 1b       	sub	r28, r18
     cf0:	d3 0b       	sbc	r29, r19
		integral = integral + proportional;
     cf2:	60 91 0f 02 	lds	r22, 0x020F	; 0x80020f <integral>
     cf6:	70 91 10 02 	lds	r23, 0x0210	; 0x800210 <integral+0x1>
     cfa:	fc 01       	movw	r30, r24
     cfc:	e6 0f       	add	r30, r22
     cfe:	f7 1f       	adc	r31, r23
     d00:	f0 93 10 02 	sts	0x0210, r31	; 0x800210 <integral+0x1>
     d04:	e0 93 0f 02 	sts	0x020F, r30	; 0x80020f <integral>

		// Remember the last position.
		 last_proportional = proportional;
     d08:	90 93 0e 02 	sts	0x020E, r25	; 0x80020e <last_proportional+0x1>
     d0c:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <last_proportional>
 
 
		int power_difference = proportional/10 + integral/40000 + derivative*0.50;						// derivative == stuur snelheid
     d10:	6a e0       	ldi	r22, 0x0A	; 10
     d12:	70 e0       	ldi	r23, 0x00	; 0
     d14:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <__divmodhi4>
     d18:	6b 01       	movw	r12, r22
     d1a:	bf 01       	movw	r22, r30
     d1c:	ff 0f       	add	r31, r31
     d1e:	88 0b       	sbc	r24, r24
     d20:	99 0b       	sbc	r25, r25
     d22:	20 e4       	ldi	r18, 0x40	; 64
     d24:	3c e9       	ldi	r19, 0x9C	; 156
     d26:	40 e0       	ldi	r20, 0x00	; 0
     d28:	50 e0       	ldi	r21, 0x00	; 0
     d2a:	0e 94 06 1d 	call	0x3a0c	; 0x3a0c <__divmodsi4>
     d2e:	0d 2c       	mov	r0, r13
     d30:	00 0c       	add	r0, r0
     d32:	ee 08       	sbc	r14, r14
     d34:	ff 08       	sbc	r15, r15
     d36:	c2 0e       	add	r12, r18
     d38:	d3 1e       	adc	r13, r19
     d3a:	e4 1e       	adc	r14, r20
     d3c:	f5 1e       	adc	r15, r21
     d3e:	be 01       	movw	r22, r28
     d40:	dd 0f       	add	r29, r29
     d42:	88 0b       	sbc	r24, r24
     d44:	99 0b       	sbc	r25, r25
     d46:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <__floatsisf>
     d4a:	20 e0       	ldi	r18, 0x00	; 0
     d4c:	30 e0       	ldi	r19, 0x00	; 0
     d4e:	40 e0       	ldi	r20, 0x00	; 0
     d50:	5f e3       	ldi	r21, 0x3F	; 63
     d52:	0e 94 55 0e 	call	0x1caa	; 0x1caa <__mulsf3>
     d56:	4b 01       	movw	r8, r22
     d58:	5c 01       	movw	r10, r24
     d5a:	c7 01       	movw	r24, r14
     d5c:	b6 01       	movw	r22, r12
     d5e:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <__floatsisf>
     d62:	a5 01       	movw	r20, r10
     d64:	94 01       	movw	r18, r8
     d66:	0e 94 b3 0c 	call	0x1966	; 0x1966 <__addsf3>
     d6a:	0e 94 91 0d 	call	0x1b22	; 0x1b22 <__fixsfsi>
     d6e:	cb 01       	movw	r24, r22

		// Compute the actual motor settings.  We never set either motor
		// to a negative value.
		const int max = 70;
		if(power_difference > max)
     d70:	67 34       	cpi	r22, 0x47	; 71
     d72:	71 05       	cpc	r23, r1
     d74:	14 f0       	brlt	.+4      	; 0xd7a <motorControl+0x1c6>
			power_difference = max;
     d76:	86 e4       	ldi	r24, 0x46	; 70
     d78:	90 e0       	ldi	r25, 0x00	; 0
		if(power_difference < -max)
     d7a:	8a 3b       	cpi	r24, 0xBA	; 186
     d7c:	2f ef       	ldi	r18, 0xFF	; 255
     d7e:	92 07       	cpc	r25, r18
     d80:	14 f4       	brge	.+4      	; 0xd86 <motorControl+0x1d2>
			power_difference = -max;
     d82:	8a eb       	ldi	r24, 0xBA	; 186
     d84:	9f ef       	ldi	r25, 0xFF	; 255

		if(power_difference < 0)
     d86:	99 23       	and	r25, r25
     d88:	3c f4       	brge	.+14     	; 0xd98 <motorControl+0x1e4>
			set_motors(max+power_difference, max);
     d8a:	66 e4       	ldi	r22, 0x46	; 70
     d8c:	70 e0       	ldi	r23, 0x00	; 0
     d8e:	8a 5b       	subi	r24, 0xBA	; 186
     d90:	9f 4f       	sbci	r25, 0xFF	; 255
     d92:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
     d96:	53 c0       	rjmp	.+166    	; 0xe3e <motorControl+0x28a>
		else
			set_motors(max, max-power_difference);
     d98:	66 e4       	ldi	r22, 0x46	; 70
     d9a:	70 e0       	ldi	r23, 0x00	; 0
     d9c:	68 1b       	sub	r22, r24
     d9e:	79 0b       	sbc	r23, r25
     da0:	86 e4       	ldi	r24, 0x46	; 70
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
     da8:	4a c0       	rjmp	.+148    	; 0xe3e <motorControl+0x28a>
		
	}
	
	
	else if(x == 'B'){														//Reverse while following the line
     daa:	c2 34       	cpi	r28, 0x42	; 66
     dac:	09 f5       	brne	.+66     	; 0xdf0 <motorControl+0x23c>
		set_motors(-50,-50);
     dae:	6e ec       	ldi	r22, 0xCE	; 206
     db0:	7f ef       	ldi	r23, 0xFF	; 255
     db2:	8e ec       	ldi	r24, 0xCE	; 206
     db4:	9f ef       	ldi	r25, 0xFF	; 255
     db6:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
		
		if (sensors[3] >=Refrence_value)
     dba:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     dbe:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     dc2:	80 39       	cpi	r24, 0x90	; 144
     dc4:	91 40       	sbci	r25, 0x01	; 1
     dc6:	30 f0       	brcs	.+12     	; 0xdd4 <motorControl+0x220>
			set_motors(-50,-55);
     dc8:	69 ec       	ldi	r22, 0xC9	; 201
     dca:	7f ef       	ldi	r23, 0xFF	; 255
     dcc:	8e ec       	ldi	r24, 0xCE	; 206
     dce:	9f ef       	ldi	r25, 0xFF	; 255
     dd0:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
		if (sensors[1] >=Refrence_value)
     dd4:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     dd8:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     ddc:	80 39       	cpi	r24, 0x90	; 144
     dde:	91 40       	sbci	r25, 0x01	; 1
     de0:	70 f1       	brcs	.+92     	; 0xe3e <motorControl+0x28a>
			set_motors(-55,-50);
     de2:	6e ec       	ldi	r22, 0xCE	; 206
     de4:	7f ef       	ldi	r23, 0xFF	; 255
     de6:	89 ec       	ldi	r24, 0xC9	; 201
     de8:	9f ef       	ldi	r25, 0xFF	; 255
     dea:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
     dee:	27 c0       	rjmp	.+78     	; 0xe3e <motorControl+0x28a>
	}
	
	
	else if(x == 'T'){														// Turn around
     df0:	c4 35       	cpi	r28, 0x54	; 84
     df2:	a1 f4       	brne	.+40     	; 0xe1c <motorControl+0x268>
		set_motors(-turn_value,turn_value);
     df4:	6c e3       	ldi	r22, 0x3C	; 60
     df6:	70 e0       	ldi	r23, 0x00	; 0
     df8:	84 ec       	ldi	r24, 0xC4	; 196
     dfa:	9f ef       	ldi	r25, 0xFF	; 255
     dfc:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
		
		while (sensors[2] <=Refrence_value)
     e00:	05 c0       	rjmp	.+10     	; 0xe0c <motorControl+0x258>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     e02:	61 e0       	ldi	r22, 0x01	; 1
     e04:	81 e1       	ldi	r24, 0x11	; 17
     e06:	92 e0       	ldi	r25, 0x02	; 2
     e08:	0e 94 63 17 	call	0x2ec6	; 0x2ec6 <read_line_sensors_calibrated>
	
	
	else if(x == 'T'){														// Turn around
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] <=Refrence_value)
     e0c:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     e10:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     e14:	81 39       	cpi	r24, 0x91	; 145
     e16:	91 40       	sbci	r25, 0x01	; 1
     e18:	a0 f3       	brcs	.-24     	; 0xe02 <motorControl+0x24e>
     e1a:	11 c0       	rjmp	.+34     	; 0xe3e <motorControl+0x28a>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'P')														//Robot stops on a slow pace
     e1c:	c0 35       	cpi	r28, 0x50	; 80
     e1e:	79 f4       	brne	.+30     	; 0xe3e <motorControl+0x28a>
     e20:	0a c0       	rjmp	.+20     	; 0xe36 <motorControl+0x282>
		for( int i=50;i>=0;i-=3)
		{
			set_motors(i,i);
     e22:	be 01       	movw	r22, r28
     e24:	ce 01       	movw	r24, r28
     e26:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
     e2a:	84 e0       	ldi	r24, 0x04	; 4
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <delay_ms>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'P')														//Robot stops on a slow pace
		for( int i=50;i>=0;i-=3)
     e32:	23 97       	sbiw	r28, 0x03	; 3
     e34:	02 c0       	rjmp	.+4      	; 0xe3a <motorControl+0x286>
     e36:	c2 e3       	ldi	r28, 0x32	; 50
     e38:	d0 e0       	ldi	r29, 0x00	; 0
     e3a:	dd 23       	and	r29, r29
     e3c:	94 f7       	brge	.-28     	; 0xe22 <motorControl+0x26e>
			set_motors(i,i);
			delay(4);
		}
		
		
}
     e3e:	df 91       	pop	r29
     e40:	cf 91       	pop	r28
     e42:	1f 91       	pop	r17
     e44:	0f 91       	pop	r16
     e46:	ff 90       	pop	r15
     e48:	ef 90       	pop	r14
     e4a:	df 90       	pop	r13
     e4c:	cf 90       	pop	r12
     e4e:	bf 90       	pop	r11
     e50:	af 90       	pop	r10
     e52:	9f 90       	pop	r9
     e54:	8f 90       	pop	r8
     e56:	08 95       	ret

00000e58 <manualControl>:

void manualControl(){
static int speed = 0;
static unsigned int counter = 0;

updateDisplay(0,batteryPercentage(),manual);
     e58:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
     e5c:	0e 94 91 0d 	call	0x1b22	; 0x1b22 <__fixsfsi>
     e60:	40 e0       	ldi	r20, 0x00	; 0
     e62:	80 e0       	ldi	r24, 0x00	; 0
     e64:	90 e0       	ldi	r25, 0x00	; 0
     e66:	0e 94 19 03 	call	0x632	; 0x632 <updateDisplay>
	myComs->Update(myComs);
     e6a:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <myComs>
     e6e:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <myComs+0x1>
     e72:	fc 01       	movw	r30, r24
     e74:	ef 58       	subi	r30, 0x8F	; 143
     e76:	ff 4f       	sbci	r31, 0xFF	; 255
     e78:	01 90       	ld	r0, Z+
     e7a:	f0 81       	ld	r31, Z
     e7c:	e0 2d       	mov	r30, r0
     e7e:	09 95       	icall
	if(myComs->Direction[0] == 1){
     e80:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     e84:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     e88:	85 a9       	ldd	r24, Z+53	; 0x35
     e8a:	81 30       	cpi	r24, 0x01	; 1
     e8c:	d9 f5       	brne	.+118    	; 0xf04 <manualControl+0xac>
		set_motors(speed,speed);
     e8e:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     e92:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     e96:	bc 01       	movw	r22, r24
     e98:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
		if(counter % 20 == 0)
     e9c:	40 91 fd 01 	lds	r20, 0x01FD	; 0x8001fd <counter.2284>
     ea0:	50 91 fe 01 	lds	r21, 0x01FE	; 0x8001fe <counter.2284+0x1>
     ea4:	9a 01       	movw	r18, r20
     ea6:	ad ec       	ldi	r26, 0xCD	; 205
     ea8:	bc ec       	ldi	r27, 0xCC	; 204
     eaa:	0e 94 2b 1d 	call	0x3a56	; 0x3a56 <__umulhisi3>
     eae:	92 95       	swap	r25
     eb0:	82 95       	swap	r24
     eb2:	8f 70       	andi	r24, 0x0F	; 15
     eb4:	89 27       	eor	r24, r25
     eb6:	9f 70       	andi	r25, 0x0F	; 15
     eb8:	89 27       	eor	r24, r25
     eba:	64 e1       	ldi	r22, 0x14	; 20
     ebc:	68 9f       	mul	r22, r24
     ebe:	90 01       	movw	r18, r0
     ec0:	69 9f       	mul	r22, r25
     ec2:	30 0d       	add	r19, r0
     ec4:	11 24       	eor	r1, r1
     ec6:	42 17       	cp	r20, r18
     ec8:	53 07       	cpc	r21, r19
     eca:	49 f4       	brne	.+18     	; 0xede <manualControl+0x86>
		{
			speed++;
     ecc:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     ed0:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     ed4:	01 96       	adiw	r24, 0x01	; 1
     ed6:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2283+0x1>
     eda:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2283>
		}
		if(speed > 25)
     ede:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     ee2:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     ee6:	4a 97       	sbiw	r24, 0x1a	; 26
     ee8:	34 f0       	brlt	.+12     	; 0xef6 <manualControl+0x9e>
		{
			speed = 25;
     eea:	89 e1       	ldi	r24, 0x19	; 25
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2283+0x1>
     ef2:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2283>
		}
		counter++;
     ef6:	4f 5f       	subi	r20, 0xFF	; 255
     ef8:	5f 4f       	sbci	r21, 0xFF	; 255
     efa:	50 93 fe 01 	sts	0x01FE, r21	; 0x8001fe <counter.2284+0x1>
     efe:	40 93 fd 01 	sts	0x01FD, r20	; 0x8001fd <counter.2284>
     f02:	ba c0       	rjmp	.+372    	; 0x1078 <manualControl+0x220>
	}
	else if(myComs->Direction[0] == 0 && myComs->Direction[2] == 0)
     f04:	81 11       	cpse	r24, r1
     f06:	3d c0       	rjmp	.+122    	; 0xf82 <manualControl+0x12a>
     f08:	97 a9       	ldd	r25, Z+55	; 0x37
     f0a:	91 11       	cpse	r25, r1
     f0c:	3a c0       	rjmp	.+116    	; 0xf82 <manualControl+0x12a>
	{
		set_motors(speed,speed);
     f0e:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     f12:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     f16:	bc 01       	movw	r22, r24
     f18:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
		if(counter % 20 == 0)
     f1c:	40 91 fd 01 	lds	r20, 0x01FD	; 0x8001fd <counter.2284>
     f20:	50 91 fe 01 	lds	r21, 0x01FE	; 0x8001fe <counter.2284+0x1>
     f24:	9a 01       	movw	r18, r20
     f26:	ad ec       	ldi	r26, 0xCD	; 205
     f28:	bc ec       	ldi	r27, 0xCC	; 204
     f2a:	0e 94 2b 1d 	call	0x3a56	; 0x3a56 <__umulhisi3>
     f2e:	92 95       	swap	r25
     f30:	82 95       	swap	r24
     f32:	8f 70       	andi	r24, 0x0F	; 15
     f34:	89 27       	eor	r24, r25
     f36:	9f 70       	andi	r25, 0x0F	; 15
     f38:	89 27       	eor	r24, r25
     f3a:	64 e1       	ldi	r22, 0x14	; 20
     f3c:	68 9f       	mul	r22, r24
     f3e:	90 01       	movw	r18, r0
     f40:	69 9f       	mul	r22, r25
     f42:	30 0d       	add	r19, r0
     f44:	11 24       	eor	r1, r1
     f46:	42 17       	cp	r20, r18
     f48:	53 07       	cpc	r21, r19
     f4a:	49 f4       	brne	.+18     	; 0xf5e <manualControl+0x106>
		{
			speed--;
     f4c:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     f50:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     f54:	01 97       	sbiw	r24, 0x01	; 1
     f56:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2283+0x1>
     f5a:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2283>
		}
		if(speed < 1)
     f5e:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     f62:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     f66:	18 16       	cp	r1, r24
     f68:	19 06       	cpc	r1, r25
     f6a:	24 f0       	brlt	.+8      	; 0xf74 <manualControl+0x11c>
		{
			speed = 0;
     f6c:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <speed.2283+0x1>
     f70:	10 92 ff 01 	sts	0x01FF, r1	; 0x8001ff <speed.2283>
		}
		counter++;
     f74:	4f 5f       	subi	r20, 0xFF	; 255
     f76:	5f 4f       	sbci	r21, 0xFF	; 255
     f78:	50 93 fe 01 	sts	0x01FE, r21	; 0x8001fe <counter.2284+0x1>
     f7c:	40 93 fd 01 	sts	0x01FD, r20	; 0x8001fd <counter.2284>
     f80:	7b c0       	rjmp	.+246    	; 0x1078 <manualControl+0x220>
	}
	
	else if(myComs->Direction[2] == 1){
     f82:	97 a9       	ldd	r25, Z+55	; 0x37
     f84:	91 30       	cpi	r25, 0x01	; 1
     f86:	e1 f5       	brne	.+120    	; 0x1000 <manualControl+0x1a8>
		set_motors(speed,speed);
     f88:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     f8c:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     f90:	bc 01       	movw	r22, r24
     f92:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
		if(counter % 20 == 0)
     f96:	40 91 fd 01 	lds	r20, 0x01FD	; 0x8001fd <counter.2284>
     f9a:	50 91 fe 01 	lds	r21, 0x01FE	; 0x8001fe <counter.2284+0x1>
     f9e:	9a 01       	movw	r18, r20
     fa0:	ad ec       	ldi	r26, 0xCD	; 205
     fa2:	bc ec       	ldi	r27, 0xCC	; 204
     fa4:	0e 94 2b 1d 	call	0x3a56	; 0x3a56 <__umulhisi3>
     fa8:	92 95       	swap	r25
     faa:	82 95       	swap	r24
     fac:	8f 70       	andi	r24, 0x0F	; 15
     fae:	89 27       	eor	r24, r25
     fb0:	9f 70       	andi	r25, 0x0F	; 15
     fb2:	89 27       	eor	r24, r25
     fb4:	64 e1       	ldi	r22, 0x14	; 20
     fb6:	68 9f       	mul	r22, r24
     fb8:	90 01       	movw	r18, r0
     fba:	69 9f       	mul	r22, r25
     fbc:	30 0d       	add	r19, r0
     fbe:	11 24       	eor	r1, r1
     fc0:	42 17       	cp	r20, r18
     fc2:	53 07       	cpc	r21, r19
     fc4:	49 f4       	brne	.+18     	; 0xfd8 <manualControl+0x180>
		{
			speed--;
     fc6:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     fca:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     fce:	01 97       	sbiw	r24, 0x01	; 1
     fd0:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2283+0x1>
     fd4:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2283>
		}
		if(speed < -25)
     fd8:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     fdc:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     fe0:	87 3e       	cpi	r24, 0xE7	; 231
     fe2:	9f 4f       	sbci	r25, 0xFF	; 255
     fe4:	34 f4       	brge	.+12     	; 0xff2 <manualControl+0x19a>
		{
			speed = -25;
     fe6:	87 ee       	ldi	r24, 0xE7	; 231
     fe8:	9f ef       	ldi	r25, 0xFF	; 255
     fea:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2283+0x1>
     fee:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2283>
		}
		counter++;
     ff2:	4f 5f       	subi	r20, 0xFF	; 255
     ff4:	5f 4f       	sbci	r21, 0xFF	; 255
     ff6:	50 93 fe 01 	sts	0x01FE, r21	; 0x8001fe <counter.2284+0x1>
     ffa:	40 93 fd 01 	sts	0x01FD, r20	; 0x8001fd <counter.2284>
     ffe:	3c c0       	rjmp	.+120    	; 0x1078 <manualControl+0x220>
	}
	else if(myComs->Direction[0] == 1 && myComs->Direction[2] == 0)
    1000:	81 30       	cpi	r24, 0x01	; 1
    1002:	d1 f5       	brne	.+116    	; 0x1078 <manualControl+0x220>
    1004:	91 11       	cpse	r25, r1
    1006:	38 c0       	rjmp	.+112    	; 0x1078 <manualControl+0x220>
	{
		set_motors(speed,speed);
    1008:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
    100c:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
    1010:	bc 01       	movw	r22, r24
    1012:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
		if(counter % 20 == 0)
    1016:	40 91 fd 01 	lds	r20, 0x01FD	; 0x8001fd <counter.2284>
    101a:	50 91 fe 01 	lds	r21, 0x01FE	; 0x8001fe <counter.2284+0x1>
    101e:	9a 01       	movw	r18, r20
    1020:	ad ec       	ldi	r26, 0xCD	; 205
    1022:	bc ec       	ldi	r27, 0xCC	; 204
    1024:	0e 94 2b 1d 	call	0x3a56	; 0x3a56 <__umulhisi3>
    1028:	92 95       	swap	r25
    102a:	82 95       	swap	r24
    102c:	8f 70       	andi	r24, 0x0F	; 15
    102e:	89 27       	eor	r24, r25
    1030:	9f 70       	andi	r25, 0x0F	; 15
    1032:	89 27       	eor	r24, r25
    1034:	64 e1       	ldi	r22, 0x14	; 20
    1036:	68 9f       	mul	r22, r24
    1038:	90 01       	movw	r18, r0
    103a:	69 9f       	mul	r22, r25
    103c:	30 0d       	add	r19, r0
    103e:	11 24       	eor	r1, r1
    1040:	42 17       	cp	r20, r18
    1042:	53 07       	cpc	r21, r19
    1044:	49 f4       	brne	.+18     	; 0x1058 <manualControl+0x200>
		{
			speed++;
    1046:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
    104a:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
    104e:	01 96       	adiw	r24, 0x01	; 1
    1050:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2283+0x1>
    1054:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2283>
		}
		if(speed > -1)
    1058:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
    105c:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
    1060:	99 23       	and	r25, r25
    1062:	24 f0       	brlt	.+8      	; 0x106c <manualControl+0x214>
		{
			speed = 0;
    1064:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <speed.2283+0x1>
    1068:	10 92 ff 01 	sts	0x01FF, r1	; 0x8001ff <speed.2283>
		}
		counter++;
    106c:	4f 5f       	subi	r20, 0xFF	; 255
    106e:	5f 4f       	sbci	r21, 0xFF	; 255
    1070:	50 93 fe 01 	sts	0x01FE, r21	; 0x8001fe <counter.2284+0x1>
    1074:	40 93 fd 01 	sts	0x01FD, r20	; 0x8001fd <counter.2284>
	}
	
	if(myComs->Direction[1] == 1){
    1078:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
    107c:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
    1080:	86 a9       	ldd	r24, Z+54	; 0x36
    1082:	81 30       	cpi	r24, 0x01	; 1
    1084:	61 f4       	brne	.+24     	; 0x109e <manualControl+0x246>
		set_motors(speed/2,speed);
    1086:	60 91 ff 01 	lds	r22, 0x01FF	; 0x8001ff <speed.2283>
    108a:	70 91 00 02 	lds	r23, 0x0200	; 0x800200 <speed.2283+0x1>
    108e:	cb 01       	movw	r24, r22
    1090:	77 23       	and	r23, r23
    1092:	0c f4       	brge	.+2      	; 0x1096 <manualControl+0x23e>
    1094:	01 96       	adiw	r24, 0x01	; 1
    1096:	95 95       	asr	r25
    1098:	87 95       	ror	r24
    109a:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
	}
	
	if(myComs->Direction[3] == 1){
    109e:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
    10a2:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
    10a6:	80 ad       	ldd	r24, Z+56	; 0x38
    10a8:	81 30       	cpi	r24, 0x01	; 1
    10aa:	69 f4       	brne	.+26     	; 0x10c6 <manualControl+0x26e>
		set_motors(speed,speed/2);
    10ac:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
    10b0:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
    10b4:	bc 01       	movw	r22, r24
    10b6:	99 23       	and	r25, r25
    10b8:	14 f4       	brge	.+4      	; 0x10be <manualControl+0x266>
    10ba:	6f 5f       	subi	r22, 0xFF	; 255
    10bc:	7f 4f       	sbci	r23, 0xFF	; 255
    10be:	75 95       	asr	r23
    10c0:	67 95       	ror	r22
    10c2:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
    10c6:	08 95       	ret

000010c8 <Spin>:
	}
}

void Spin(){
    10c8:	cf 93       	push	r28
    10ca:	df 93       	push	r29
	errorDisplay(slipped,0);
    10cc:	60 e0       	ldi	r22, 0x00	; 0
    10ce:	70 e0       	ldi	r23, 0x00	; 0
    10d0:	80 e0       	ldi	r24, 0x00	; 0
    10d2:	0e 94 72 03 	call	0x6e4	; 0x6e4 <errorDisplay>
	for(int i = 0;i<=255;i++){
    10d6:	c0 e0       	ldi	r28, 0x00	; 0
    10d8:	d0 e0       	ldi	r29, 0x00	; 0
    10da:	0c c0       	rjmp	.+24     	; 0x10f4 <Spin+0x2c>
		set_motors(i,0-i);
    10dc:	66 27       	eor	r22, r22
    10de:	77 27       	eor	r23, r23
    10e0:	6c 1b       	sub	r22, r28
    10e2:	7d 0b       	sbc	r23, r29
    10e4:	ce 01       	movw	r24, r28
    10e6:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>
    10ea:	82 e0       	ldi	r24, 0x02	; 2
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <delay_ms>
	}
}

void Spin(){
	errorDisplay(slipped,0);
	for(int i = 0;i<=255;i++){
    10f2:	21 96       	adiw	r28, 0x01	; 1
    10f4:	cf 3f       	cpi	r28, 0xFF	; 255
    10f6:	d1 05       	cpc	r29, r1
    10f8:	89 f3       	breq	.-30     	; 0x10dc <Spin+0x14>
    10fa:	84 f3       	brlt	.-32     	; 0x10dc <Spin+0x14>
    10fc:	c0 e0       	ldi	r28, 0x00	; 0
    10fe:	d0 e0       	ldi	r29, 0x00	; 0
    1100:	10 c0       	rjmp	.+32     	; 0x1122 <Spin+0x5a>
		set_motors(i,0-i);
		delay(2);
	}
	int count = 0;
	while(myComs->EmergencyStop == 2){
		count++;
    1102:	21 96       	adiw	r28, 0x01	; 1
		if(count % 10000 == 0)
    1104:	ce 01       	movw	r24, r28
    1106:	60 e1       	ldi	r22, 0x10	; 16
    1108:	77 e2       	ldi	r23, 0x27	; 39
    110a:	0e 94 d0 1c 	call	0x39a0	; 0x39a0 <__divmodhi4>
    110e:	89 2b       	or	r24, r25
    1110:	41 f4       	brne	.+16     	; 0x1122 <Spin+0x5a>
		{
			myComs->Update(myComs);
    1112:	f9 01       	movw	r30, r18
    1114:	ef 58       	subi	r30, 0x8F	; 143
    1116:	ff 4f       	sbci	r31, 0xFF	; 255
    1118:	01 90       	ld	r0, Z+
    111a:	f0 81       	ld	r31, Z
    111c:	e0 2d       	mov	r30, r0
    111e:	c9 01       	movw	r24, r18
    1120:	09 95       	icall
	for(int i = 0;i<=255;i++){
		set_motors(i,0-i);
		delay(2);
	}
	int count = 0;
	while(myComs->EmergencyStop == 2){
    1122:	20 91 08 02 	lds	r18, 0x0208	; 0x800208 <myComs>
    1126:	30 91 09 02 	lds	r19, 0x0209	; 0x800209 <myComs+0x1>
    112a:	f9 01       	movw	r30, r18
    112c:	e5 59       	subi	r30, 0x95	; 149
    112e:	ff 4f       	sbci	r31, 0xFF	; 255
    1130:	80 81       	ld	r24, Z
    1132:	82 30       	cpi	r24, 0x02	; 2
    1134:	31 f3       	breq	.-52     	; 0x1102 <Spin+0x3a>
		


	}
	
	set_motors(0,0);
    1136:	60 e0       	ldi	r22, 0x00	; 0
    1138:	70 e0       	ldi	r23, 0x00	; 0
    113a:	80 e0       	ldi	r24, 0x00	; 0
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	0e 94 02 15 	call	0x2a04	; 0x2a04 <set_motors>

	
    1142:	df 91       	pop	r29
    1144:	cf 91       	pop	r28
    1146:	08 95       	ret

00001148 <parcoursSearch>:
			}
			motorControl(richting);
		}
	}
	return 0;
}
    1148:	0f 93       	push	r16
    114a:	1f 93       	push	r17
    114c:	cf 93       	push	r28
    114e:	df 93       	push	r29
    1150:	00 d0       	rcall	.+0      	; 0x1152 <parcoursSearch+0xa>
    1152:	cd b7       	in	r28, 0x3d	; 61
    1154:	de b7       	in	r29, 0x3e	; 62
    1156:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lineType>
    115a:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <situatie>
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	89 30       	cpi	r24, 0x09	; 9
    1162:	91 05       	cpc	r25, r1
    1164:	08 f0       	brcs	.+2      	; 0x1168 <parcoursSearch+0x20>
    1166:	41 c0       	rjmp	.+130    	; 0x11ea <parcoursSearch+0xa2>
    1168:	fc 01       	movw	r30, r24
    116a:	ec 5c       	subi	r30, 0xCC	; 204
    116c:	ff 4f       	sbci	r31, 0xFF	; 255
    116e:	0c 94 25 1d 	jmp	0x3a4a	; 0x3a4a <__tablejump2__>
    1172:	83 e5       	ldi	r24, 0x53	; 83
    1174:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1178:	38 c0       	rjmp	.+112    	; 0x11ea <parcoursSearch+0xa2>
    117a:	8c e4       	ldi	r24, 0x4C	; 76
    117c:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1180:	8c e4       	ldi	r24, 0x4C	; 76
    1182:	89 83       	std	Y+1, r24	; 0x01
    1184:	41 e0       	ldi	r20, 0x01	; 1
    1186:	50 e0       	ldi	r21, 0x00	; 0
    1188:	be 01       	movw	r22, r28
    118a:	6f 5f       	subi	r22, 0xFF	; 255
    118c:	7f 4f       	sbci	r23, 0xFF	; 255
    118e:	84 e1       	ldi	r24, 0x14	; 20
    1190:	91 e0       	ldi	r25, 0x01	; 1
    1192:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <strncat>
    1196:	29 c0       	rjmp	.+82     	; 0x11ea <parcoursSearch+0xa2>
    1198:	82 e5       	ldi	r24, 0x52	; 82
    119a:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    119e:	82 e5       	ldi	r24, 0x52	; 82
    11a0:	89 83       	std	Y+1, r24	; 0x01
    11a2:	41 e0       	ldi	r20, 0x01	; 1
    11a4:	50 e0       	ldi	r21, 0x00	; 0
    11a6:	be 01       	movw	r22, r28
    11a8:	6f 5f       	subi	r22, 0xFF	; 255
    11aa:	7f 4f       	sbci	r23, 0xFF	; 255
    11ac:	84 e1       	ldi	r24, 0x14	; 20
    11ae:	91 e0       	ldi	r25, 0x01	; 1
    11b0:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <strncat>
    11b4:	1a c0       	rjmp	.+52     	; 0x11ea <parcoursSearch+0xa2>
    11b6:	83 e5       	ldi	r24, 0x53	; 83
    11b8:	89 83       	std	Y+1, r24	; 0x01
    11ba:	41 e0       	ldi	r20, 0x01	; 1
    11bc:	50 e0       	ldi	r21, 0x00	; 0
    11be:	be 01       	movw	r22, r28
    11c0:	6f 5f       	subi	r22, 0xFF	; 255
    11c2:	7f 4f       	sbci	r23, 0xFF	; 255
    11c4:	84 e1       	ldi	r24, 0x14	; 20
    11c6:	91 e0       	ldi	r25, 0x01	; 1
    11c8:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <strncat>
    11cc:	0e c0       	rjmp	.+28     	; 0x11ea <parcoursSearch+0xa2>
    11ce:	84 e5       	ldi	r24, 0x54	; 84
    11d0:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    11d4:	84 e5       	ldi	r24, 0x54	; 84
    11d6:	89 83       	std	Y+1, r24	; 0x01
    11d8:	41 e0       	ldi	r20, 0x01	; 1
    11da:	50 e0       	ldi	r21, 0x00	; 0
    11dc:	be 01       	movw	r22, r28
    11de:	6f 5f       	subi	r22, 0xFF	; 255
    11e0:	7f 4f       	sbci	r23, 0xFF	; 255
    11e2:	84 e1       	ldi	r24, 0x14	; 20
    11e4:	91 e0       	ldi	r25, 0x01	; 1
    11e6:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <strncat>
    11ea:	0e 94 c5 13 	call	0x278a	; 0x278a <clear>
    11ee:	60 e0       	ldi	r22, 0x00	; 0
    11f0:	80 e0       	ldi	r24, 0x00	; 0
    11f2:	0e 94 4c 14 	call	0x2898	; 0x2898 <lcd_goto_xy>
    11f6:	00 e0       	ldi	r16, 0x00	; 0
    11f8:	10 e0       	ldi	r17, 0x00	; 0
    11fa:	08 c0       	rjmp	.+16     	; 0x120c <parcoursSearch+0xc4>
    11fc:	f8 01       	movw	r30, r16
    11fe:	ec 5e       	subi	r30, 0xEC	; 236
    1200:	fe 4f       	sbci	r31, 0xFE	; 254
    1202:	80 81       	ld	r24, Z
    1204:	0e 94 55 13 	call	0x26aa	; 0x26aa <print_character>
    1208:	0f 5f       	subi	r16, 0xFF	; 255
    120a:	1f 4f       	sbci	r17, 0xFF	; 255
    120c:	e4 e1       	ldi	r30, 0x14	; 20
    120e:	f1 e0       	ldi	r31, 0x01	; 1
    1210:	01 90       	ld	r0, Z+
    1212:	00 20       	and	r0, r0
    1214:	e9 f7       	brne	.-6      	; 0x1210 <parcoursSearch+0xc8>
    1216:	31 97       	sbiw	r30, 0x01	; 1
    1218:	e4 51       	subi	r30, 0x14	; 20
    121a:	f1 40       	sbci	r31, 0x01	; 1
    121c:	e0 17       	cp	r30, r16
    121e:	f1 07       	cpc	r31, r17
    1220:	68 f7       	brcc	.-38     	; 0x11fc <parcoursSearch+0xb4>
    1222:	df 01       	movw	r26, r30
    1224:	ae 5e       	subi	r26, 0xEE	; 238
    1226:	be 4f       	sbci	r27, 0xFE	; 254
    1228:	8c 91       	ld	r24, X
    122a:	84 35       	cpi	r24, 0x54	; 84
    122c:	09 f0       	breq	.+2      	; 0x1230 <parcoursSearch+0xe8>
    122e:	93 cf       	rjmp	.-218    	; 0x1156 <parcoursSearch+0xe>
    1230:	df 01       	movw	r26, r30
    1232:	af 5e       	subi	r26, 0xEF	; 239
    1234:	be 4f       	sbci	r27, 0xFE	; 254
    1236:	8c 91       	ld	r24, X
    1238:	ed 5e       	subi	r30, 0xED	; 237
    123a:	fe 4f       	sbci	r31, 0xFE	; 254
    123c:	90 81       	ld	r25, Z
    123e:	8c 34       	cpi	r24, 0x4C	; 76
    1240:	29 f4       	brne	.+10     	; 0x124c <parcoursSearch+0x104>
    1242:	9c 34       	cpi	r25, 0x4C	; 76
    1244:	19 f4       	brne	.+6      	; 0x124c <parcoursSearch+0x104>
    1246:	83 e5       	ldi	r24, 0x53	; 83
    1248:	8a 83       	std	Y+2, r24	; 0x02
    124a:	1b c0       	rjmp	.+54     	; 0x1282 <parcoursSearch+0x13a>
    124c:	83 35       	cpi	r24, 0x53	; 83
    124e:	29 f4       	brne	.+10     	; 0x125a <parcoursSearch+0x112>
    1250:	9c 34       	cpi	r25, 0x4C	; 76
    1252:	19 f4       	brne	.+6      	; 0x125a <parcoursSearch+0x112>
    1254:	82 e5       	ldi	r24, 0x52	; 82
    1256:	8a 83       	std	Y+2, r24	; 0x02
    1258:	14 c0       	rjmp	.+40     	; 0x1282 <parcoursSearch+0x13a>
    125a:	82 35       	cpi	r24, 0x52	; 82
    125c:	29 f4       	brne	.+10     	; 0x1268 <parcoursSearch+0x120>
    125e:	9c 34       	cpi	r25, 0x4C	; 76
    1260:	19 f4       	brne	.+6      	; 0x1268 <parcoursSearch+0x120>
    1262:	84 e5       	ldi	r24, 0x54	; 84
    1264:	8a 83       	std	Y+2, r24	; 0x02
    1266:	0d c0       	rjmp	.+26     	; 0x1282 <parcoursSearch+0x13a>
    1268:	8c 34       	cpi	r24, 0x4C	; 76
    126a:	29 f4       	brne	.+10     	; 0x1276 <parcoursSearch+0x12e>
    126c:	92 35       	cpi	r25, 0x52	; 82
    126e:	19 f4       	brne	.+6      	; 0x1276 <parcoursSearch+0x12e>
    1270:	84 e5       	ldi	r24, 0x54	; 84
    1272:	8a 83       	std	Y+2, r24	; 0x02
    1274:	06 c0       	rjmp	.+12     	; 0x1282 <parcoursSearch+0x13a>
    1276:	8c 34       	cpi	r24, 0x4C	; 76
    1278:	21 f4       	brne	.+8      	; 0x1282 <parcoursSearch+0x13a>
    127a:	93 35       	cpi	r25, 0x53	; 83
    127c:	11 f4       	brne	.+4      	; 0x1282 <parcoursSearch+0x13a>
    127e:	82 e5       	ldi	r24, 0x52	; 82
    1280:	8a 83       	std	Y+2, r24	; 0x02
    1282:	e4 e1       	ldi	r30, 0x14	; 20
    1284:	f1 e0       	ldi	r31, 0x01	; 1
    1286:	01 90       	ld	r0, Z+
    1288:	00 20       	and	r0, r0
    128a:	e9 f7       	brne	.-6      	; 0x1286 <parcoursSearch+0x13e>
    128c:	34 97       	sbiw	r30, 0x04	; 4
    128e:	10 82       	st	Z, r1
    1290:	41 e0       	ldi	r20, 0x01	; 1
    1292:	50 e0       	ldi	r21, 0x00	; 0
    1294:	be 01       	movw	r22, r28
    1296:	6e 5f       	subi	r22, 0xFE	; 254
    1298:	7f 4f       	sbci	r23, 0xFF	; 255
    129a:	84 e1       	ldi	r24, 0x14	; 20
    129c:	91 e0       	ldi	r25, 0x01	; 1
    129e:	0e 94 a5 1e 	call	0x3d4a	; 0x3d4a <strncat>
    12a2:	59 cf       	rjmp	.-334    	; 0x1156 <parcoursSearch+0xe>
    12a4:	80 e5       	ldi	r24, 0x50	; 80
    12a6:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    12aa:	80 e0       	ldi	r24, 0x00	; 0
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	0f 90       	pop	r0
    12b0:	0f 90       	pop	r0
    12b2:	df 91       	pop	r29
    12b4:	cf 91       	pop	r28
    12b6:	1f 91       	pop	r17
    12b8:	0f 91       	pop	r16
    12ba:	08 95       	ret

000012bc <parcours>:

int parcours(char way, Communications *communications) 
{
    12bc:	cf 93       	push	r28
    12be:	df 93       	push	r29
    12c0:	00 d0       	rcall	.+0      	; 0x12c2 <parcours+0x6>
    12c2:	cd b7       	in	r28, 0x3d	; 61
    12c4:	de b7       	in	r29, 0x3e	; 62
    12c6:	7a 83       	std	Y+2, r23	; 0x02
    12c8:	69 83       	std	Y+1, r22	; 0x01
	updateDisplay(0, batteryPercentage(), mazeSolver);
    12ca:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
    12ce:	0e 94 91 0d 	call	0x1b22	; 0x1b22 <__fixsfsi>
    12d2:	41 e0       	ldi	r20, 0x01	; 1
    12d4:	80 e0       	ldi	r24, 0x00	; 0
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	0e 94 19 03 	call	0x632	; 0x632 <updateDisplay>
	if (route[0] == '_'){
    12dc:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <route>
    12e0:	8f 35       	cpi	r24, 0x5F	; 95
    12e2:	61 f4       	brne	.+24     	; 0x12fc <parcours+0x40>
		memset(route,0,sizeof route);
    12e4:	84 e1       	ldi	r24, 0x14	; 20
    12e6:	e4 e1       	ldi	r30, 0x14	; 20
    12e8:	f1 e0       	ldi	r31, 0x01	; 1
    12ea:	df 01       	movw	r26, r30
    12ec:	1d 92       	st	X+, r1
    12ee:	8a 95       	dec	r24
    12f0:	e9 f7       	brne	.-6      	; 0x12ec <parcours+0x30>
		parcoursSearch(&communications);
    12f2:	ce 01       	movw	r24, r28
    12f4:	01 96       	adiw	r24, 0x01	; 1
    12f6:	0e 94 a4 08 	call	0x1148	; 0x1148 <parcoursSearch>
    12fa:	04 c0       	rjmp	.+8      	; 0x1304 <parcours+0x48>
	} 
	else 
	{
	//	parcoursRun(way, communications);
		parcoursSearch(&communications);
    12fc:	ce 01       	movw	r24, r28
    12fe:	01 96       	adiw	r24, 0x01	; 1
    1300:	0e 94 a4 08 	call	0x1148	; 0x1148 <parcoursSearch>
	} 
	return 0;
    1304:	80 e0       	ldi	r24, 0x00	; 0
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	0f 90       	pop	r0
    130a:	0f 90       	pop	r0
    130c:	df 91       	pop	r29
    130e:	cf 91       	pop	r28
    1310:	08 95       	ret

00001312 <swap>:
    1312:	fc 01       	movw	r30, r24
    1314:	20 81       	ld	r18, Z
    1316:	fb 01       	movw	r30, r22
    1318:	30 81       	ld	r19, Z
    131a:	fc 01       	movw	r30, r24
    131c:	30 83       	st	Z, r19
    131e:	fb 01       	movw	r30, r22
    1320:	20 83       	st	Z, r18
    1322:	08 95       	ret

00001324 <bubbleSort>:
    1324:	8f 92       	push	r8
    1326:	9f 92       	push	r9
    1328:	af 92       	push	r10
    132a:	bf 92       	push	r11
    132c:	cf 92       	push	r12
    132e:	df 92       	push	r13
    1330:	ef 92       	push	r14
    1332:	ff 92       	push	r15
    1334:	0f 93       	push	r16
    1336:	1f 93       	push	r17
    1338:	cf 93       	push	r28
    133a:	df 93       	push	r29
    133c:	8c 01       	movw	r16, r24
    133e:	5b 01       	movw	r10, r22
    1340:	6a 01       	movw	r12, r20
    1342:	e1 2c       	mov	r14, r1
    1344:	f1 2c       	mov	r15, r1
    1346:	28 c0       	rjmp	.+80     	; 0x1398 <bubbleSort+0x74>
    1348:	f8 01       	movw	r30, r16
    134a:	ec 0f       	add	r30, r28
    134c:	fd 1f       	adc	r31, r29
    134e:	90 81       	ld	r25, Z
    1350:	4e 01       	movw	r8, r28
    1352:	8f ef       	ldi	r24, 0xFF	; 255
    1354:	88 1a       	sub	r8, r24
    1356:	98 0a       	sbc	r9, r24
    1358:	d8 01       	movw	r26, r16
    135a:	a8 0d       	add	r26, r8
    135c:	b9 1d       	adc	r27, r9
    135e:	8c 91       	ld	r24, X
    1360:	89 17       	cp	r24, r25
    1362:	60 f4       	brcc	.+24     	; 0x137c <bubbleSort+0x58>
    1364:	bd 01       	movw	r22, r26
    1366:	cf 01       	movw	r24, r30
    1368:	0e 94 89 09 	call	0x1312	; 0x1312 <swap>
    136c:	b5 01       	movw	r22, r10
    136e:	68 0d       	add	r22, r8
    1370:	79 1d       	adc	r23, r9
    1372:	c5 01       	movw	r24, r10
    1374:	8c 0f       	add	r24, r28
    1376:	9d 1f       	adc	r25, r29
    1378:	0e 94 89 09 	call	0x1312	; 0x1312 <swap>
    137c:	21 96       	adiw	r28, 0x01	; 1
    137e:	02 c0       	rjmp	.+4      	; 0x1384 <bubbleSort+0x60>
    1380:	c0 e0       	ldi	r28, 0x00	; 0
    1382:	d0 e0       	ldi	r29, 0x00	; 0
    1384:	c6 01       	movw	r24, r12
    1386:	8e 19       	sub	r24, r14
    1388:	9f 09       	sbc	r25, r15
    138a:	01 97       	sbiw	r24, 0x01	; 1
    138c:	c8 17       	cp	r28, r24
    138e:	d9 07       	cpc	r29, r25
    1390:	dc f2       	brlt	.-74     	; 0x1348 <bubbleSort+0x24>
    1392:	8f ef       	ldi	r24, 0xFF	; 255
    1394:	e8 1a       	sub	r14, r24
    1396:	f8 0a       	sbc	r15, r24
    1398:	c6 01       	movw	r24, r12
    139a:	01 97       	sbiw	r24, 0x01	; 1
    139c:	e8 16       	cp	r14, r24
    139e:	f9 06       	cpc	r15, r25
    13a0:	7c f3       	brlt	.-34     	; 0x1380 <bubbleSort+0x5c>
    13a2:	df 91       	pop	r29
    13a4:	cf 91       	pop	r28
    13a6:	1f 91       	pop	r17
    13a8:	0f 91       	pop	r16
    13aa:	ff 90       	pop	r15
    13ac:	ef 90       	pop	r14
    13ae:	df 90       	pop	r13
    13b0:	cf 90       	pop	r12
    13b2:	bf 90       	pop	r11
    13b4:	af 90       	pop	r10
    13b6:	9f 90       	pop	r9
    13b8:	8f 90       	pop	r8
    13ba:	08 95       	ret

000013bc <drive>:
    13bc:	cf 92       	push	r12
    13be:	df 92       	push	r13
    13c0:	ef 92       	push	r14
    13c2:	ff 92       	push	r15
    13c4:	0f 93       	push	r16
    13c6:	1f 93       	push	r17
    13c8:	cf 93       	push	r28
    13ca:	df 93       	push	r29
    13cc:	6c 01       	movw	r12, r24
    13ce:	7a 01       	movw	r14, r20
    13d0:	83 e5       	ldi	r24, 0x53	; 83
    13d2:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    13d6:	00 e0       	ldi	r16, 0x00	; 0
    13d8:	10 e0       	ldi	r17, 0x00	; 0
    13da:	c1 e0       	ldi	r28, 0x01	; 1
    13dc:	d0 e0       	ldi	r29, 0x00	; 0
    13de:	22 c0       	rjmp	.+68     	; 0x1424 <drive+0x68>
    13e0:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lineType>
    13e4:	81 30       	cpi	r24, 0x01	; 1
    13e6:	49 f0       	breq	.+18     	; 0x13fa <drive+0x3e>
    13e8:	20 f0       	brcs	.+8      	; 0x13f2 <drive+0x36>
    13ea:	83 50       	subi	r24, 0x03	; 3
    13ec:	86 30       	cpi	r24, 0x06	; 6
    13ee:	d0 f4       	brcc	.+52     	; 0x1424 <drive+0x68>
    13f0:	04 c0       	rjmp	.+8      	; 0x13fa <drive+0x3e>
    13f2:	83 e5       	ldi	r24, 0x53	; 83
    13f4:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    13f8:	15 c0       	rjmp	.+42     	; 0x1424 <drive+0x68>
    13fa:	0f 5f       	subi	r16, 0xFF	; 255
    13fc:	1f 4f       	sbci	r17, 0xFF	; 255
    13fe:	83 e5       	ldi	r24, 0x53	; 83
    1400:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1404:	0c 15       	cp	r16, r12
    1406:	1d 05       	cpc	r17, r13
    1408:	29 f4       	brne	.+10     	; 0x1414 <drive+0x58>
    140a:	80 e5       	ldi	r24, 0x50	; 80
    140c:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1410:	c0 e0       	ldi	r28, 0x00	; 0
    1412:	d0 e0       	ldi	r29, 0x00	; 0
    1414:	f7 01       	movw	r30, r14
    1416:	ef 58       	subi	r30, 0x8F	; 143
    1418:	ff 4f       	sbci	r31, 0xFF	; 255
    141a:	01 90       	ld	r0, Z+
    141c:	f0 81       	ld	r31, Z
    141e:	e0 2d       	mov	r30, r0
    1420:	c7 01       	movw	r24, r14
    1422:	09 95       	icall
    1424:	20 97       	sbiw	r28, 0x00	; 0
    1426:	e1 f6       	brne	.-72     	; 0x13e0 <drive+0x24>
    1428:	df 91       	pop	r29
    142a:	cf 91       	pop	r28
    142c:	1f 91       	pop	r17
    142e:	0f 91       	pop	r16
    1430:	ff 90       	pop	r15
    1432:	ef 90       	pop	r14
    1434:	df 90       	pop	r13
    1436:	cf 90       	pop	r12
    1438:	08 95       	ret

0000143a <waitForTurn>:
    143a:	cf 93       	push	r28
    143c:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lineType>
    1440:	c8 2f       	mov	r28, r24
    1442:	8f e0       	ldi	r24, 0x0F	; 15
    1444:	90 e0       	ldi	r25, 0x00	; 0
    1446:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <delay_ms>
    144a:	03 c0       	rjmp	.+6      	; 0x1452 <waitForTurn+0x18>
    144c:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lineType>
    1450:	c8 2f       	mov	r28, r24
    1452:	c1 11       	cpse	r28, r1
    1454:	fb cf       	rjmp	.-10     	; 0x144c <waitForTurn+0x12>
    1456:	8e e4       	ldi	r24, 0x4E	; 78
    1458:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    145c:	cf 91       	pop	r28
    145e:	08 95       	ret

00001460 <turnRobot>:
    1460:	ef 92       	push	r14
    1462:	ff 92       	push	r15
    1464:	0f 93       	push	r16
    1466:	1f 93       	push	r17
    1468:	cf 93       	push	r28
    146a:	c8 2f       	mov	r28, r24
    146c:	8b 01       	movw	r16, r22
    146e:	ee 24       	eor	r14, r14
    1470:	e3 94       	inc	r14
    1472:	f1 2c       	mov	r15, r1
    1474:	a6 c0       	rjmp	.+332    	; 0x15c2 <turnRobot+0x162>
    1476:	f8 01       	movw	r30, r16
    1478:	84 81       	ldd	r24, Z+4	; 0x04
    147a:	8e 34       	cpi	r24, 0x4E	; 78
    147c:	59 f0       	breq	.+22     	; 0x1494 <turnRobot+0x34>
    147e:	18 f4       	brcc	.+6      	; 0x1486 <turnRobot+0x26>
    1480:	85 34       	cpi	r24, 0x45	; 69
    1482:	69 f1       	breq	.+90     	; 0x14de <turnRobot+0x7e>
    1484:	98 c0       	rjmp	.+304    	; 0x15b6 <turnRobot+0x156>
    1486:	83 35       	cpi	r24, 0x53	; 83
    1488:	09 f4       	brne	.+2      	; 0x148c <turnRobot+0x2c>
    148a:	4e c0       	rjmp	.+156    	; 0x1528 <turnRobot+0xc8>
    148c:	87 35       	cpi	r24, 0x57	; 87
    148e:	09 f4       	brne	.+2      	; 0x1492 <turnRobot+0x32>
    1490:	6f c0       	rjmp	.+222    	; 0x1570 <turnRobot+0x110>
    1492:	91 c0       	rjmp	.+290    	; 0x15b6 <turnRobot+0x156>
    1494:	c5 34       	cpi	r28, 0x45	; 69
    1496:	49 f4       	brne	.+18     	; 0x14aa <turnRobot+0x4a>
    1498:	82 e5       	ldi	r24, 0x52	; 82
    149a:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    149e:	0e 94 1d 0a 	call	0x143a	; 0x143a <waitForTurn>
    14a2:	85 e4       	ldi	r24, 0x45	; 69
    14a4:	f8 01       	movw	r30, r16
    14a6:	84 83       	std	Z+4, r24	; 0x04
    14a8:	86 c0       	rjmp	.+268    	; 0x15b6 <turnRobot+0x156>
    14aa:	c7 35       	cpi	r28, 0x57	; 87
    14ac:	49 f4       	brne	.+18     	; 0x14c0 <turnRobot+0x60>
    14ae:	8c e4       	ldi	r24, 0x4C	; 76
    14b0:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    14b4:	0e 94 1d 0a 	call	0x143a	; 0x143a <waitForTurn>
    14b8:	87 e5       	ldi	r24, 0x57	; 87
    14ba:	f8 01       	movw	r30, r16
    14bc:	84 83       	std	Z+4, r24	; 0x04
    14be:	7b c0       	rjmp	.+246    	; 0x15b6 <turnRobot+0x156>
    14c0:	c3 35       	cpi	r28, 0x53	; 83
    14c2:	09 f0       	breq	.+2      	; 0x14c6 <turnRobot+0x66>
    14c4:	78 c0       	rjmp	.+240    	; 0x15b6 <turnRobot+0x156>
    14c6:	8c e4       	ldi	r24, 0x4C	; 76
    14c8:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    14cc:	8c e4       	ldi	r24, 0x4C	; 76
    14ce:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    14d2:	0e 94 1d 0a 	call	0x143a	; 0x143a <waitForTurn>
    14d6:	83 e5       	ldi	r24, 0x53	; 83
    14d8:	f8 01       	movw	r30, r16
    14da:	84 83       	std	Z+4, r24	; 0x04
    14dc:	6c c0       	rjmp	.+216    	; 0x15b6 <turnRobot+0x156>
    14de:	c3 35       	cpi	r28, 0x53	; 83
    14e0:	49 f4       	brne	.+18     	; 0x14f4 <turnRobot+0x94>
    14e2:	82 e5       	ldi	r24, 0x52	; 82
    14e4:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    14e8:	0e 94 1d 0a 	call	0x143a	; 0x143a <waitForTurn>
    14ec:	83 e5       	ldi	r24, 0x53	; 83
    14ee:	f8 01       	movw	r30, r16
    14f0:	84 83       	std	Z+4, r24	; 0x04
    14f2:	61 c0       	rjmp	.+194    	; 0x15b6 <turnRobot+0x156>
    14f4:	c7 35       	cpi	r28, 0x57	; 87
    14f6:	49 f4       	brne	.+18     	; 0x150a <turnRobot+0xaa>
    14f8:	8c e4       	ldi	r24, 0x4C	; 76
    14fa:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    14fe:	0e 94 1d 0a 	call	0x143a	; 0x143a <waitForTurn>
    1502:	87 e5       	ldi	r24, 0x57	; 87
    1504:	f8 01       	movw	r30, r16
    1506:	84 83       	std	Z+4, r24	; 0x04
    1508:	56 c0       	rjmp	.+172    	; 0x15b6 <turnRobot+0x156>
    150a:	c3 35       	cpi	r28, 0x53	; 83
    150c:	09 f0       	breq	.+2      	; 0x1510 <turnRobot+0xb0>
    150e:	53 c0       	rjmp	.+166    	; 0x15b6 <turnRobot+0x156>
    1510:	8c e4       	ldi	r24, 0x4C	; 76
    1512:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1516:	8c e4       	ldi	r24, 0x4C	; 76
    1518:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    151c:	0e 94 1d 0a 	call	0x143a	; 0x143a <waitForTurn>
    1520:	83 e5       	ldi	r24, 0x53	; 83
    1522:	f8 01       	movw	r30, r16
    1524:	84 83       	std	Z+4, r24	; 0x04
    1526:	47 c0       	rjmp	.+142    	; 0x15b6 <turnRobot+0x156>
    1528:	c7 35       	cpi	r28, 0x57	; 87
    152a:	49 f4       	brne	.+18     	; 0x153e <turnRobot+0xde>
    152c:	82 e5       	ldi	r24, 0x52	; 82
    152e:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1532:	0e 94 1d 0a 	call	0x143a	; 0x143a <waitForTurn>
    1536:	87 e5       	ldi	r24, 0x57	; 87
    1538:	f8 01       	movw	r30, r16
    153a:	84 83       	std	Z+4, r24	; 0x04
    153c:	3c c0       	rjmp	.+120    	; 0x15b6 <turnRobot+0x156>
    153e:	c5 34       	cpi	r28, 0x45	; 69
    1540:	49 f4       	brne	.+18     	; 0x1554 <turnRobot+0xf4>
    1542:	8c e4       	ldi	r24, 0x4C	; 76
    1544:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1548:	0e 94 1d 0a 	call	0x143a	; 0x143a <waitForTurn>
    154c:	85 e4       	ldi	r24, 0x45	; 69
    154e:	f8 01       	movw	r30, r16
    1550:	84 83       	std	Z+4, r24	; 0x04
    1552:	31 c0       	rjmp	.+98     	; 0x15b6 <turnRobot+0x156>
    1554:	ce 34       	cpi	r28, 0x4E	; 78
    1556:	79 f5       	brne	.+94     	; 0x15b6 <turnRobot+0x156>
    1558:	8c e4       	ldi	r24, 0x4C	; 76
    155a:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    155e:	8c e4       	ldi	r24, 0x4C	; 76
    1560:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1564:	0e 94 1d 0a 	call	0x143a	; 0x143a <waitForTurn>
    1568:	8e e4       	ldi	r24, 0x4E	; 78
    156a:	f8 01       	movw	r30, r16
    156c:	84 83       	std	Z+4, r24	; 0x04
    156e:	23 c0       	rjmp	.+70     	; 0x15b6 <turnRobot+0x156>
    1570:	ce 34       	cpi	r28, 0x4E	; 78
    1572:	49 f4       	brne	.+18     	; 0x1586 <turnRobot+0x126>
    1574:	82 e5       	ldi	r24, 0x52	; 82
    1576:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    157a:	0e 94 1d 0a 	call	0x143a	; 0x143a <waitForTurn>
    157e:	8e e4       	ldi	r24, 0x4E	; 78
    1580:	f8 01       	movw	r30, r16
    1582:	84 83       	std	Z+4, r24	; 0x04
    1584:	18 c0       	rjmp	.+48     	; 0x15b6 <turnRobot+0x156>
    1586:	c3 35       	cpi	r28, 0x53	; 83
    1588:	49 f4       	brne	.+18     	; 0x159c <turnRobot+0x13c>
    158a:	8c e4       	ldi	r24, 0x4C	; 76
    158c:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1590:	0e 94 1d 0a 	call	0x143a	; 0x143a <waitForTurn>
    1594:	83 e5       	ldi	r24, 0x53	; 83
    1596:	f8 01       	movw	r30, r16
    1598:	84 83       	std	Z+4, r24	; 0x04
    159a:	0d c0       	rjmp	.+26     	; 0x15b6 <turnRobot+0x156>
    159c:	c5 34       	cpi	r28, 0x45	; 69
    159e:	59 f4       	brne	.+22     	; 0x15b6 <turnRobot+0x156>
    15a0:	8c e4       	ldi	r24, 0x4C	; 76
    15a2:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    15a6:	8c e4       	ldi	r24, 0x4C	; 76
    15a8:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    15ac:	0e 94 1d 0a 	call	0x143a	; 0x143a <waitForTurn>
    15b0:	85 e4       	ldi	r24, 0x45	; 69
    15b2:	f8 01       	movw	r30, r16
    15b4:	84 83       	std	Z+4, r24	; 0x04
    15b6:	f8 01       	movw	r30, r16
    15b8:	84 81       	ldd	r24, Z+4	; 0x04
    15ba:	c8 13       	cpse	r28, r24
    15bc:	02 c0       	rjmp	.+4      	; 0x15c2 <turnRobot+0x162>
    15be:	e1 2c       	mov	r14, r1
    15c0:	f1 2c       	mov	r15, r1
    15c2:	f1 e0       	ldi	r31, 0x01	; 1
    15c4:	ef 16       	cp	r14, r31
    15c6:	f1 04       	cpc	r15, r1
    15c8:	09 f4       	brne	.+2      	; 0x15cc <turnRobot+0x16c>
    15ca:	55 cf       	rjmp	.-342    	; 0x1476 <turnRobot+0x16>
    15cc:	cf 91       	pop	r28
    15ce:	1f 91       	pop	r17
    15d0:	0f 91       	pop	r16
    15d2:	ff 90       	pop	r15
    15d4:	ef 90       	pop	r14
    15d6:	08 95       	ret

000015d8 <moveX>:
    15d8:	ef 92       	push	r14
    15da:	ff 92       	push	r15
    15dc:	0f 93       	push	r16
    15de:	1f 93       	push	r17
    15e0:	cf 93       	push	r28
    15e2:	df 93       	push	r29
    15e4:	fb 01       	movw	r30, r22
    15e6:	20 81       	ld	r18, Z
    15e8:	31 81       	ldd	r19, Z+1	; 0x01
    15ea:	28 17       	cp	r18, r24
    15ec:	39 07       	cpc	r19, r25
    15ee:	d9 f0       	breq	.+54     	; 0x1626 <moveX+0x4e>
    15f0:	7a 01       	movw	r14, r20
    15f2:	eb 01       	movw	r28, r22
    15f4:	8c 01       	movw	r16, r24
    15f6:	28 17       	cp	r18, r24
    15f8:	39 07       	cpc	r19, r25
    15fa:	54 f4       	brge	.+20     	; 0x1610 <moveX+0x38>
    15fc:	87 e5       	ldi	r24, 0x57	; 87
    15fe:	0e 94 30 0a 	call	0x1460	; 0x1460 <turnRobot>
    1602:	88 81       	ld	r24, Y
    1604:	99 81       	ldd	r25, Y+1	; 0x01
    1606:	98 01       	movw	r18, r16
    1608:	28 1b       	sub	r18, r24
    160a:	39 0b       	sbc	r19, r25
    160c:	c9 01       	movw	r24, r18
    160e:	07 c0       	rjmp	.+14     	; 0x161e <moveX+0x46>
    1610:	85 e4       	ldi	r24, 0x45	; 69
    1612:	0e 94 30 0a 	call	0x1460	; 0x1460 <turnRobot>
    1616:	88 81       	ld	r24, Y
    1618:	99 81       	ldd	r25, Y+1	; 0x01
    161a:	80 1b       	sub	r24, r16
    161c:	91 0b       	sbc	r25, r17
    161e:	a7 01       	movw	r20, r14
    1620:	be 01       	movw	r22, r28
    1622:	0e 94 de 09 	call	0x13bc	; 0x13bc <drive>
    1626:	df 91       	pop	r29
    1628:	cf 91       	pop	r28
    162a:	1f 91       	pop	r17
    162c:	0f 91       	pop	r16
    162e:	ff 90       	pop	r15
    1630:	ef 90       	pop	r14
    1632:	08 95       	ret

00001634 <moveY>:
    1634:	ef 92       	push	r14
    1636:	ff 92       	push	r15
    1638:	0f 93       	push	r16
    163a:	1f 93       	push	r17
    163c:	cf 93       	push	r28
    163e:	df 93       	push	r29
    1640:	fb 01       	movw	r30, r22
    1642:	22 81       	ldd	r18, Z+2	; 0x02
    1644:	33 81       	ldd	r19, Z+3	; 0x03
    1646:	28 17       	cp	r18, r24
    1648:	39 07       	cpc	r19, r25
    164a:	d9 f0       	breq	.+54     	; 0x1682 <moveY+0x4e>
    164c:	7a 01       	movw	r14, r20
    164e:	eb 01       	movw	r28, r22
    1650:	8c 01       	movw	r16, r24
    1652:	28 17       	cp	r18, r24
    1654:	39 07       	cpc	r19, r25
    1656:	54 f4       	brge	.+20     	; 0x166c <moveY+0x38>
    1658:	8e e4       	ldi	r24, 0x4E	; 78
    165a:	0e 94 30 0a 	call	0x1460	; 0x1460 <turnRobot>
    165e:	8a 81       	ldd	r24, Y+2	; 0x02
    1660:	9b 81       	ldd	r25, Y+3	; 0x03
    1662:	98 01       	movw	r18, r16
    1664:	28 1b       	sub	r18, r24
    1666:	39 0b       	sbc	r19, r25
    1668:	c9 01       	movw	r24, r18
    166a:	07 c0       	rjmp	.+14     	; 0x167a <moveY+0x46>
    166c:	83 e5       	ldi	r24, 0x53	; 83
    166e:	0e 94 30 0a 	call	0x1460	; 0x1460 <turnRobot>
    1672:	8a 81       	ldd	r24, Y+2	; 0x02
    1674:	9b 81       	ldd	r25, Y+3	; 0x03
    1676:	80 1b       	sub	r24, r16
    1678:	91 0b       	sbc	r25, r17
    167a:	a7 01       	movw	r20, r14
    167c:	be 01       	movw	r22, r28
    167e:	0e 94 de 09 	call	0x13bc	; 0x13bc <drive>
    1682:	df 91       	pop	r29
    1684:	cf 91       	pop	r28
    1686:	1f 91       	pop	r17
    1688:	0f 91       	pop	r16
    168a:	ff 90       	pop	r15
    168c:	ef 90       	pop	r14
    168e:	08 95       	ret

00001690 <warehouse>:
    1690:	2f 92       	push	r2
    1692:	3f 92       	push	r3
    1694:	4f 92       	push	r4
    1696:	5f 92       	push	r5
    1698:	6f 92       	push	r6
    169a:	7f 92       	push	r7
    169c:	8f 92       	push	r8
    169e:	9f 92       	push	r9
    16a0:	af 92       	push	r10
    16a2:	bf 92       	push	r11
    16a4:	cf 92       	push	r12
    16a6:	df 92       	push	r13
    16a8:	ef 92       	push	r14
    16aa:	ff 92       	push	r15
    16ac:	0f 93       	push	r16
    16ae:	1f 93       	push	r17
    16b0:	cf 93       	push	r28
    16b2:	df 93       	push	r29
    16b4:	cd b7       	in	r28, 0x3d	; 61
    16b6:	de b7       	in	r29, 0x3e	; 62
    16b8:	e7 97       	sbiw	r28, 0x37	; 55
    16ba:	0f b6       	in	r0, 0x3f	; 63
    16bc:	f8 94       	cli
    16be:	de bf       	out	0x3e, r29	; 62
    16c0:	0f be       	out	0x3f, r0	; 63
    16c2:	cd bf       	out	0x3d, r28	; 61
    16c4:	f8 2e       	mov	r15, r24
    16c6:	8b 01       	movw	r16, r22
    16c8:	87 e5       	ldi	r24, 0x57	; 87
    16ca:	8d 83       	std	Y+5, r24	; 0x05
    16cc:	1a 82       	std	Y+2, r1	; 0x02
    16ce:	19 82       	std	Y+1, r1	; 0x01
    16d0:	81 e0       	ldi	r24, 0x01	; 1
    16d2:	90 e0       	ldi	r25, 0x00	; 0
    16d4:	9c 83       	std	Y+4, r25	; 0x04
    16d6:	8b 83       	std	Y+3, r24	; 0x03
    16d8:	fb 01       	movw	r30, r22
    16da:	e2 59       	subi	r30, 0x92	; 146
    16dc:	ff 4f       	sbci	r31, 0xFF	; 255
    16de:	10 82       	st	Z, r1
    16e0:	31 96       	adiw	r30, 0x01	; 1
    16e2:	80 83       	st	Z, r24
    16e4:	80 e0       	ldi	r24, 0x00	; 0
    16e6:	90 e0       	ldi	r25, 0x00	; 0
    16e8:	c1 2c       	mov	r12, r1
    16ea:	d1 2c       	mov	r13, r1
    16ec:	0c c0       	rjmp	.+24     	; 0x1706 <warehouse+0x76>
    16ee:	f8 01       	movw	r30, r16
    16f0:	e8 0f       	add	r30, r24
    16f2:	f9 1f       	adc	r31, r25
    16f4:	ee 5a       	subi	r30, 0xAE	; 174
    16f6:	ff 4f       	sbci	r31, 0xFF	; 255
    16f8:	20 81       	ld	r18, Z
    16fa:	22 23       	and	r18, r18
    16fc:	19 f0       	breq	.+6      	; 0x1704 <warehouse+0x74>
    16fe:	2f ef       	ldi	r18, 0xFF	; 255
    1700:	c2 1a       	sub	r12, r18
    1702:	d2 0a       	sbc	r13, r18
    1704:	01 96       	adiw	r24, 0x01	; 1
    1706:	89 31       	cpi	r24, 0x19	; 25
    1708:	91 05       	cpc	r25, r1
    170a:	8c f3       	brlt	.-30     	; 0x16ee <warehouse+0x5e>
    170c:	80 e0       	ldi	r24, 0x00	; 0
    170e:	90 e0       	ldi	r25, 0x00	; 0
    1710:	18 c0       	rjmp	.+48     	; 0x1742 <warehouse+0xb2>
    1712:	d8 01       	movw	r26, r16
    1714:	a8 0f       	add	r26, r24
    1716:	b9 1f       	adc	r27, r25
    1718:	fd 01       	movw	r30, r26
    171a:	ee 5a       	subi	r30, 0xAE	; 174
    171c:	ff 4f       	sbci	r31, 0xFF	; 255
    171e:	20 81       	ld	r18, Z
    1720:	e6 e0       	ldi	r30, 0x06	; 6
    1722:	f0 e0       	ldi	r31, 0x00	; 0
    1724:	ec 0f       	add	r30, r28
    1726:	fd 1f       	adc	r31, r29
    1728:	e8 0f       	add	r30, r24
    172a:	f9 1f       	adc	r31, r25
    172c:	20 83       	st	Z, r18
    172e:	d9 96       	adiw	r26, 0x39	; 57
    1730:	2c 91       	ld	r18, X
    1732:	ef e1       	ldi	r30, 0x1F	; 31
    1734:	f0 e0       	ldi	r31, 0x00	; 0
    1736:	ec 0f       	add	r30, r28
    1738:	fd 1f       	adc	r31, r29
    173a:	e8 0f       	add	r30, r24
    173c:	f9 1f       	adc	r31, r25
    173e:	20 83       	st	Z, r18
    1740:	01 96       	adiw	r24, 0x01	; 1
    1742:	8c 15       	cp	r24, r12
    1744:	9d 05       	cpc	r25, r13
    1746:	2c f3       	brlt	.-54     	; 0x1712 <warehouse+0x82>
    1748:	a6 01       	movw	r20, r12
    174a:	be 01       	movw	r22, r28
    174c:	61 5e       	subi	r22, 0xE1	; 225
    174e:	7f 4f       	sbci	r23, 0xFF	; 255
    1750:	ce 01       	movw	r24, r28
    1752:	06 96       	adiw	r24, 0x06	; 6
    1754:	0e 94 92 09 	call	0x1324	; 0x1324 <bubbleSort>
    1758:	ff 20       	and	r15, r15
    175a:	09 f4       	brne	.+2      	; 0x175e <warehouse+0xce>
    175c:	8f c0       	rjmp	.+286    	; 0x187c <warehouse+0x1ec>
    175e:	a5 c0       	rjmp	.+330    	; 0x18aa <warehouse+0x21a>
    1760:	b1 01       	movw	r22, r2
    1762:	03 2c       	mov	r0, r3
    1764:	00 0c       	add	r0, r0
    1766:	88 0b       	sbc	r24, r24
    1768:	99 0b       	sbc	r25, r25
    176a:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <__floatsisf>
    176e:	2b 01       	movw	r4, r22
    1770:	3c 01       	movw	r6, r24
    1772:	b6 01       	movw	r22, r12
    1774:	0d 2c       	mov	r0, r13
    1776:	00 0c       	add	r0, r0
    1778:	88 0b       	sbc	r24, r24
    177a:	99 0b       	sbc	r25, r25
    177c:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <__floatsisf>
    1780:	4b 01       	movw	r8, r22
    1782:	5c 01       	movw	r10, r24
    1784:	0f 2e       	mov	r0, r31
    1786:	f6 e0       	ldi	r31, 0x06	; 6
    1788:	ef 2e       	mov	r14, r31
    178a:	f1 2c       	mov	r15, r1
    178c:	f0 2d       	mov	r31, r0
    178e:	ec 0e       	add	r14, r28
    1790:	fd 1e       	adc	r15, r29
    1792:	e2 0c       	add	r14, r2
    1794:	f3 1c       	adc	r15, r3
    1796:	f7 01       	movw	r30, r14
    1798:	80 81       	ld	r24, Z
    179a:	a8 01       	movw	r20, r16
    179c:	be 01       	movw	r22, r28
    179e:	6f 5f       	subi	r22, 0xFF	; 255
    17a0:	7f 4f       	sbci	r23, 0xFF	; 255
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	0e 94 ec 0a 	call	0x15d8	; 0x15d8 <moveX>
    17a8:	f7 01       	movw	r30, r14
    17aa:	80 81       	ld	r24, Z
    17ac:	28 2f       	mov	r18, r24
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	3a 83       	std	Y+2, r19	; 0x02
    17b2:	29 83       	std	Y+1, r18	; 0x01
    17b4:	f8 01       	movw	r30, r16
    17b6:	e2 59       	subi	r30, 0x92	; 146
    17b8:	ff 4f       	sbci	r31, 0xFF	; 255
    17ba:	80 83       	st	Z, r24
    17bc:	0f 2e       	mov	r0, r31
    17be:	ff e1       	ldi	r31, 0x1F	; 31
    17c0:	ef 2e       	mov	r14, r31
    17c2:	f1 2c       	mov	r15, r1
    17c4:	f0 2d       	mov	r31, r0
    17c6:	ec 0e       	add	r14, r28
    17c8:	fd 1e       	adc	r15, r29
    17ca:	e2 0c       	add	r14, r2
    17cc:	f3 1c       	adc	r15, r3
    17ce:	f7 01       	movw	r30, r14
    17d0:	80 81       	ld	r24, Z
    17d2:	a8 01       	movw	r20, r16
    17d4:	be 01       	movw	r22, r28
    17d6:	6f 5f       	subi	r22, 0xFF	; 255
    17d8:	7f 4f       	sbci	r23, 0xFF	; 255
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	0e 94 1a 0b 	call	0x1634	; 0x1634 <moveY>
    17e0:	f7 01       	movw	r30, r14
    17e2:	80 81       	ld	r24, Z
    17e4:	28 2f       	mov	r18, r24
    17e6:	30 e0       	ldi	r19, 0x00	; 0
    17e8:	3c 83       	std	Y+4, r19	; 0x04
    17ea:	2b 83       	std	Y+3, r18	; 0x03
    17ec:	f8 01       	movw	r30, r16
    17ee:	e1 59       	subi	r30, 0x91	; 145
    17f0:	ff 4f       	sbci	r31, 0xFF	; 255
    17f2:	80 83       	st	Z, r24
    17f4:	88 ee       	ldi	r24, 0xE8	; 232
    17f6:	93 e0       	ldi	r25, 0x03	; 3
    17f8:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <delay_ms>
    17fc:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
    1800:	78 01       	movw	r14, r16
    1802:	fc e6       	ldi	r31, 0x6C	; 108
    1804:	ef 0e       	add	r14, r31
    1806:	f1 1c       	adc	r15, r1
    1808:	0e 94 98 0d 	call	0x1b30	; 0x1b30 <__fixunssfsi>
    180c:	f7 01       	movw	r30, r14
    180e:	60 83       	st	Z, r22
    1810:	20 e0       	ldi	r18, 0x00	; 0
    1812:	30 e0       	ldi	r19, 0x00	; 0
    1814:	40 e8       	ldi	r20, 0x80	; 128
    1816:	5f e3       	ldi	r21, 0x3F	; 63
    1818:	c3 01       	movw	r24, r6
    181a:	b2 01       	movw	r22, r4
    181c:	0e 94 b3 0c 	call	0x1966	; 0x1966 <__addsf3>
    1820:	a5 01       	movw	r20, r10
    1822:	94 01       	movw	r18, r8
    1824:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <__divsf3>
    1828:	20 e0       	ldi	r18, 0x00	; 0
    182a:	30 e0       	ldi	r19, 0x00	; 0
    182c:	48 ec       	ldi	r20, 0xC8	; 200
    182e:	52 e4       	ldi	r21, 0x42	; 66
    1830:	0e 94 55 0e 	call	0x1caa	; 0x1caa <__mulsf3>
    1834:	4b 01       	movw	r8, r22
    1836:	5c 01       	movw	r10, r24
    1838:	78 01       	movw	r14, r16
    183a:	fd e6       	ldi	r31, 0x6D	; 109
    183c:	ef 0e       	add	r14, r31
    183e:	f1 1c       	adc	r15, r1
    1840:	0e 94 98 0d 	call	0x1b30	; 0x1b30 <__fixunssfsi>
    1844:	f7 01       	movw	r30, r14
    1846:	60 83       	st	Z, r22
    1848:	34 96       	adiw	r30, 0x04	; 4
    184a:	01 90       	ld	r0, Z+
    184c:	f0 81       	ld	r31, Z
    184e:	e0 2d       	mov	r30, r0
    1850:	c8 01       	movw	r24, r16
    1852:	09 95       	icall
    1854:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
    1858:	0e 94 91 0d 	call	0x1b22	; 0x1b22 <__fixsfsi>
    185c:	2b 01       	movw	r4, r22
    185e:	3c 01       	movw	r6, r24
    1860:	c5 01       	movw	r24, r10
    1862:	b4 01       	movw	r22, r8
    1864:	0e 94 91 0d 	call	0x1b22	; 0x1b22 <__fixsfsi>
    1868:	dc 01       	movw	r26, r24
    186a:	cb 01       	movw	r24, r22
    186c:	42 e0       	ldi	r20, 0x02	; 2
    186e:	b2 01       	movw	r22, r4
    1870:	0e 94 19 03 	call	0x632	; 0x632 <updateDisplay>
    1874:	ff ef       	ldi	r31, 0xFF	; 255
    1876:	2f 1a       	sub	r2, r31
    1878:	3f 0a       	sbc	r3, r31
    187a:	02 c0       	rjmp	.+4      	; 0x1880 <warehouse+0x1f0>
    187c:	21 2c       	mov	r2, r1
    187e:	31 2c       	mov	r3, r1
    1880:	2c 14       	cp	r2, r12
    1882:	3d 04       	cpc	r3, r13
    1884:	0c f4       	brge	.+2      	; 0x1888 <warehouse+0x1f8>
    1886:	6c cf       	rjmp	.-296    	; 0x1760 <warehouse+0xd0>
    1888:	a8 01       	movw	r20, r16
    188a:	be 01       	movw	r22, r28
    188c:	6f 5f       	subi	r22, 0xFF	; 255
    188e:	7f 4f       	sbci	r23, 0xFF	; 255
    1890:	81 e0       	ldi	r24, 0x01	; 1
    1892:	90 e0       	ldi	r25, 0x00	; 0
    1894:	0e 94 1a 0b 	call	0x1634	; 0x1634 <moveY>
    1898:	a8 01       	movw	r20, r16
    189a:	be 01       	movw	r22, r28
    189c:	6f 5f       	subi	r22, 0xFF	; 255
    189e:	7f 4f       	sbci	r23, 0xFF	; 255
    18a0:	81 e0       	ldi	r24, 0x01	; 1
    18a2:	90 e0       	ldi	r25, 0x00	; 0
    18a4:	0e 94 ec 0a 	call	0x15d8	; 0x15d8 <moveX>
    18a8:	44 c0       	rjmp	.+136    	; 0x1932 <warehouse+0x2a2>
    18aa:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <charged.2338>
    18ae:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <charged.2338+0x1>
    18b2:	89 2b       	or	r24, r25
    18b4:	29 f5       	brne	.+74     	; 0x1900 <warehouse+0x270>
    18b6:	a8 01       	movw	r20, r16
    18b8:	be 01       	movw	r22, r28
    18ba:	6f 5f       	subi	r22, 0xFF	; 255
    18bc:	7f 4f       	sbci	r23, 0xFF	; 255
    18be:	81 e0       	ldi	r24, 0x01	; 1
    18c0:	90 e0       	ldi	r25, 0x00	; 0
    18c2:	0e 94 de 09 	call	0x13bc	; 0x13bc <drive>
    18c6:	82 e5       	ldi	r24, 0x52	; 82
    18c8:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    18cc:	a8 01       	movw	r20, r16
    18ce:	be 01       	movw	r22, r28
    18d0:	6f 5f       	subi	r22, 0xFF	; 255
    18d2:	7f 4f       	sbci	r23, 0xFF	; 255
    18d4:	83 e0       	ldi	r24, 0x03	; 3
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	0e 94 de 09 	call	0x13bc	; 0x13bc <drive>
    18dc:	82 e5       	ldi	r24, 0x52	; 82
    18de:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    18e2:	a8 01       	movw	r20, r16
    18e4:	be 01       	movw	r22, r28
    18e6:	6f 5f       	subi	r22, 0xFF	; 255
    18e8:	7f 4f       	sbci	r23, 0xFF	; 255
    18ea:	81 e0       	ldi	r24, 0x01	; 1
    18ec:	90 e0       	ldi	r25, 0x00	; 0
    18ee:	0e 94 de 09 	call	0x13bc	; 0x13bc <drive>
    18f2:	81 e0       	ldi	r24, 0x01	; 1
    18f4:	90 e0       	ldi	r25, 0x00	; 0
    18f6:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <charged.2338+0x1>
    18fa:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <charged.2338>
    18fe:	19 c0       	rjmp	.+50     	; 0x1932 <warehouse+0x2a2>
    1900:	84 e5       	ldi	r24, 0x54	; 84
    1902:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1906:	a8 01       	movw	r20, r16
    1908:	be 01       	movw	r22, r28
    190a:	6f 5f       	subi	r22, 0xFF	; 255
    190c:	7f 4f       	sbci	r23, 0xFF	; 255
    190e:	81 e0       	ldi	r24, 0x01	; 1
    1910:	90 e0       	ldi	r25, 0x00	; 0
    1912:	0e 94 de 09 	call	0x13bc	; 0x13bc <drive>
    1916:	8c e4       	ldi	r24, 0x4C	; 76
    1918:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    191c:	a8 01       	movw	r20, r16
    191e:	be 01       	movw	r22, r28
    1920:	6f 5f       	subi	r22, 0xFF	; 255
    1922:	7f 4f       	sbci	r23, 0xFF	; 255
    1924:	83 e0       	ldi	r24, 0x03	; 3
    1926:	90 e0       	ldi	r25, 0x00	; 0
    1928:	0e 94 de 09 	call	0x13bc	; 0x13bc <drive>
    192c:	8c e4       	ldi	r24, 0x4C	; 76
    192e:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1932:	e7 96       	adiw	r28, 0x37	; 55
    1934:	0f b6       	in	r0, 0x3f	; 63
    1936:	f8 94       	cli
    1938:	de bf       	out	0x3e, r29	; 62
    193a:	0f be       	out	0x3f, r0	; 63
    193c:	cd bf       	out	0x3d, r28	; 61
    193e:	df 91       	pop	r29
    1940:	cf 91       	pop	r28
    1942:	1f 91       	pop	r17
    1944:	0f 91       	pop	r16
    1946:	ff 90       	pop	r15
    1948:	ef 90       	pop	r14
    194a:	df 90       	pop	r13
    194c:	cf 90       	pop	r12
    194e:	bf 90       	pop	r11
    1950:	af 90       	pop	r10
    1952:	9f 90       	pop	r9
    1954:	8f 90       	pop	r8
    1956:	7f 90       	pop	r7
    1958:	6f 90       	pop	r6
    195a:	5f 90       	pop	r5
    195c:	4f 90       	pop	r4
    195e:	3f 90       	pop	r3
    1960:	2f 90       	pop	r2
    1962:	08 95       	ret

00001964 <__subsf3>:
    1964:	50 58       	subi	r21, 0x80	; 128

00001966 <__addsf3>:
    1966:	bb 27       	eor	r27, r27
    1968:	aa 27       	eor	r26, r26
    196a:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__addsf3x>
    196e:	0c 94 1b 0e 	jmp	0x1c36	; 0x1c36 <__fp_round>
    1972:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <__fp_pscA>
    1976:	38 f0       	brcs	.+14     	; 0x1986 <__addsf3+0x20>
    1978:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <__fp_pscB>
    197c:	20 f0       	brcs	.+8      	; 0x1986 <__addsf3+0x20>
    197e:	39 f4       	brne	.+14     	; 0x198e <__addsf3+0x28>
    1980:	9f 3f       	cpi	r25, 0xFF	; 255
    1982:	19 f4       	brne	.+6      	; 0x198a <__addsf3+0x24>
    1984:	26 f4       	brtc	.+8      	; 0x198e <__addsf3+0x28>
    1986:	0c 94 0a 0e 	jmp	0x1c14	; 0x1c14 <__fp_nan>
    198a:	0e f4       	brtc	.+2      	; 0x198e <__addsf3+0x28>
    198c:	e0 95       	com	r30
    198e:	e7 fb       	bst	r30, 7
    1990:	0c 94 04 0e 	jmp	0x1c08	; 0x1c08 <__fp_inf>

00001994 <__addsf3x>:
    1994:	e9 2f       	mov	r30, r25
    1996:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <__fp_split3>
    199a:	58 f3       	brcs	.-42     	; 0x1972 <__addsf3+0xc>
    199c:	ba 17       	cp	r27, r26
    199e:	62 07       	cpc	r22, r18
    19a0:	73 07       	cpc	r23, r19
    19a2:	84 07       	cpc	r24, r20
    19a4:	95 07       	cpc	r25, r21
    19a6:	20 f0       	brcs	.+8      	; 0x19b0 <__addsf3x+0x1c>
    19a8:	79 f4       	brne	.+30     	; 0x19c8 <__addsf3x+0x34>
    19aa:	a6 f5       	brtc	.+104    	; 0x1a14 <__addsf3x+0x80>
    19ac:	0c 94 4e 0e 	jmp	0x1c9c	; 0x1c9c <__fp_zero>
    19b0:	0e f4       	brtc	.+2      	; 0x19b4 <__addsf3x+0x20>
    19b2:	e0 95       	com	r30
    19b4:	0b 2e       	mov	r0, r27
    19b6:	ba 2f       	mov	r27, r26
    19b8:	a0 2d       	mov	r26, r0
    19ba:	0b 01       	movw	r0, r22
    19bc:	b9 01       	movw	r22, r18
    19be:	90 01       	movw	r18, r0
    19c0:	0c 01       	movw	r0, r24
    19c2:	ca 01       	movw	r24, r20
    19c4:	a0 01       	movw	r20, r0
    19c6:	11 24       	eor	r1, r1
    19c8:	ff 27       	eor	r31, r31
    19ca:	59 1b       	sub	r21, r25
    19cc:	99 f0       	breq	.+38     	; 0x19f4 <__addsf3x+0x60>
    19ce:	59 3f       	cpi	r21, 0xF9	; 249
    19d0:	50 f4       	brcc	.+20     	; 0x19e6 <__addsf3x+0x52>
    19d2:	50 3e       	cpi	r21, 0xE0	; 224
    19d4:	68 f1       	brcs	.+90     	; 0x1a30 <__addsf3x+0x9c>
    19d6:	1a 16       	cp	r1, r26
    19d8:	f0 40       	sbci	r31, 0x00	; 0
    19da:	a2 2f       	mov	r26, r18
    19dc:	23 2f       	mov	r18, r19
    19de:	34 2f       	mov	r19, r20
    19e0:	44 27       	eor	r20, r20
    19e2:	58 5f       	subi	r21, 0xF8	; 248
    19e4:	f3 cf       	rjmp	.-26     	; 0x19cc <__addsf3x+0x38>
    19e6:	46 95       	lsr	r20
    19e8:	37 95       	ror	r19
    19ea:	27 95       	ror	r18
    19ec:	a7 95       	ror	r26
    19ee:	f0 40       	sbci	r31, 0x00	; 0
    19f0:	53 95       	inc	r21
    19f2:	c9 f7       	brne	.-14     	; 0x19e6 <__addsf3x+0x52>
    19f4:	7e f4       	brtc	.+30     	; 0x1a14 <__addsf3x+0x80>
    19f6:	1f 16       	cp	r1, r31
    19f8:	ba 0b       	sbc	r27, r26
    19fa:	62 0b       	sbc	r22, r18
    19fc:	73 0b       	sbc	r23, r19
    19fe:	84 0b       	sbc	r24, r20
    1a00:	ba f0       	brmi	.+46     	; 0x1a30 <__addsf3x+0x9c>
    1a02:	91 50       	subi	r25, 0x01	; 1
    1a04:	a1 f0       	breq	.+40     	; 0x1a2e <__addsf3x+0x9a>
    1a06:	ff 0f       	add	r31, r31
    1a08:	bb 1f       	adc	r27, r27
    1a0a:	66 1f       	adc	r22, r22
    1a0c:	77 1f       	adc	r23, r23
    1a0e:	88 1f       	adc	r24, r24
    1a10:	c2 f7       	brpl	.-16     	; 0x1a02 <__addsf3x+0x6e>
    1a12:	0e c0       	rjmp	.+28     	; 0x1a30 <__addsf3x+0x9c>
    1a14:	ba 0f       	add	r27, r26
    1a16:	62 1f       	adc	r22, r18
    1a18:	73 1f       	adc	r23, r19
    1a1a:	84 1f       	adc	r24, r20
    1a1c:	48 f4       	brcc	.+18     	; 0x1a30 <__addsf3x+0x9c>
    1a1e:	87 95       	ror	r24
    1a20:	77 95       	ror	r23
    1a22:	67 95       	ror	r22
    1a24:	b7 95       	ror	r27
    1a26:	f7 95       	ror	r31
    1a28:	9e 3f       	cpi	r25, 0xFE	; 254
    1a2a:	08 f0       	brcs	.+2      	; 0x1a2e <__addsf3x+0x9a>
    1a2c:	b0 cf       	rjmp	.-160    	; 0x198e <__addsf3+0x28>
    1a2e:	93 95       	inc	r25
    1a30:	88 0f       	add	r24, r24
    1a32:	08 f0       	brcs	.+2      	; 0x1a36 <__addsf3x+0xa2>
    1a34:	99 27       	eor	r25, r25
    1a36:	ee 0f       	add	r30, r30
    1a38:	97 95       	ror	r25
    1a3a:	87 95       	ror	r24
    1a3c:	08 95       	ret

00001a3e <__divsf3>:
    1a3e:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__divsf3x>
    1a42:	0c 94 1b 0e 	jmp	0x1c36	; 0x1c36 <__fp_round>
    1a46:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <__fp_pscB>
    1a4a:	58 f0       	brcs	.+22     	; 0x1a62 <__divsf3+0x24>
    1a4c:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <__fp_pscA>
    1a50:	40 f0       	brcs	.+16     	; 0x1a62 <__divsf3+0x24>
    1a52:	29 f4       	brne	.+10     	; 0x1a5e <__divsf3+0x20>
    1a54:	5f 3f       	cpi	r21, 0xFF	; 255
    1a56:	29 f0       	breq	.+10     	; 0x1a62 <__divsf3+0x24>
    1a58:	0c 94 04 0e 	jmp	0x1c08	; 0x1c08 <__fp_inf>
    1a5c:	51 11       	cpse	r21, r1
    1a5e:	0c 94 4f 0e 	jmp	0x1c9e	; 0x1c9e <__fp_szero>
    1a62:	0c 94 0a 0e 	jmp	0x1c14	; 0x1c14 <__fp_nan>

00001a66 <__divsf3x>:
    1a66:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <__fp_split3>
    1a6a:	68 f3       	brcs	.-38     	; 0x1a46 <__divsf3+0x8>

00001a6c <__divsf3_pse>:
    1a6c:	99 23       	and	r25, r25
    1a6e:	b1 f3       	breq	.-20     	; 0x1a5c <__divsf3+0x1e>
    1a70:	55 23       	and	r21, r21
    1a72:	91 f3       	breq	.-28     	; 0x1a58 <__divsf3+0x1a>
    1a74:	95 1b       	sub	r25, r21
    1a76:	55 0b       	sbc	r21, r21
    1a78:	bb 27       	eor	r27, r27
    1a7a:	aa 27       	eor	r26, r26
    1a7c:	62 17       	cp	r22, r18
    1a7e:	73 07       	cpc	r23, r19
    1a80:	84 07       	cpc	r24, r20
    1a82:	38 f0       	brcs	.+14     	; 0x1a92 <__divsf3_pse+0x26>
    1a84:	9f 5f       	subi	r25, 0xFF	; 255
    1a86:	5f 4f       	sbci	r21, 0xFF	; 255
    1a88:	22 0f       	add	r18, r18
    1a8a:	33 1f       	adc	r19, r19
    1a8c:	44 1f       	adc	r20, r20
    1a8e:	aa 1f       	adc	r26, r26
    1a90:	a9 f3       	breq	.-22     	; 0x1a7c <__divsf3_pse+0x10>
    1a92:	35 d0       	rcall	.+106    	; 0x1afe <__divsf3_pse+0x92>
    1a94:	0e 2e       	mov	r0, r30
    1a96:	3a f0       	brmi	.+14     	; 0x1aa6 <__divsf3_pse+0x3a>
    1a98:	e0 e8       	ldi	r30, 0x80	; 128
    1a9a:	32 d0       	rcall	.+100    	; 0x1b00 <__divsf3_pse+0x94>
    1a9c:	91 50       	subi	r25, 0x01	; 1
    1a9e:	50 40       	sbci	r21, 0x00	; 0
    1aa0:	e6 95       	lsr	r30
    1aa2:	00 1c       	adc	r0, r0
    1aa4:	ca f7       	brpl	.-14     	; 0x1a98 <__divsf3_pse+0x2c>
    1aa6:	2b d0       	rcall	.+86     	; 0x1afe <__divsf3_pse+0x92>
    1aa8:	fe 2f       	mov	r31, r30
    1aaa:	29 d0       	rcall	.+82     	; 0x1afe <__divsf3_pse+0x92>
    1aac:	66 0f       	add	r22, r22
    1aae:	77 1f       	adc	r23, r23
    1ab0:	88 1f       	adc	r24, r24
    1ab2:	bb 1f       	adc	r27, r27
    1ab4:	26 17       	cp	r18, r22
    1ab6:	37 07       	cpc	r19, r23
    1ab8:	48 07       	cpc	r20, r24
    1aba:	ab 07       	cpc	r26, r27
    1abc:	b0 e8       	ldi	r27, 0x80	; 128
    1abe:	09 f0       	breq	.+2      	; 0x1ac2 <__divsf3_pse+0x56>
    1ac0:	bb 0b       	sbc	r27, r27
    1ac2:	80 2d       	mov	r24, r0
    1ac4:	bf 01       	movw	r22, r30
    1ac6:	ff 27       	eor	r31, r31
    1ac8:	93 58       	subi	r25, 0x83	; 131
    1aca:	5f 4f       	sbci	r21, 0xFF	; 255
    1acc:	3a f0       	brmi	.+14     	; 0x1adc <__divsf3_pse+0x70>
    1ace:	9e 3f       	cpi	r25, 0xFE	; 254
    1ad0:	51 05       	cpc	r21, r1
    1ad2:	78 f0       	brcs	.+30     	; 0x1af2 <__divsf3_pse+0x86>
    1ad4:	0c 94 04 0e 	jmp	0x1c08	; 0x1c08 <__fp_inf>
    1ad8:	0c 94 4f 0e 	jmp	0x1c9e	; 0x1c9e <__fp_szero>
    1adc:	5f 3f       	cpi	r21, 0xFF	; 255
    1ade:	e4 f3       	brlt	.-8      	; 0x1ad8 <__divsf3_pse+0x6c>
    1ae0:	98 3e       	cpi	r25, 0xE8	; 232
    1ae2:	d4 f3       	brlt	.-12     	; 0x1ad8 <__divsf3_pse+0x6c>
    1ae4:	86 95       	lsr	r24
    1ae6:	77 95       	ror	r23
    1ae8:	67 95       	ror	r22
    1aea:	b7 95       	ror	r27
    1aec:	f7 95       	ror	r31
    1aee:	9f 5f       	subi	r25, 0xFF	; 255
    1af0:	c9 f7       	brne	.-14     	; 0x1ae4 <__divsf3_pse+0x78>
    1af2:	88 0f       	add	r24, r24
    1af4:	91 1d       	adc	r25, r1
    1af6:	96 95       	lsr	r25
    1af8:	87 95       	ror	r24
    1afa:	97 f9       	bld	r25, 7
    1afc:	08 95       	ret
    1afe:	e1 e0       	ldi	r30, 0x01	; 1
    1b00:	66 0f       	add	r22, r22
    1b02:	77 1f       	adc	r23, r23
    1b04:	88 1f       	adc	r24, r24
    1b06:	bb 1f       	adc	r27, r27
    1b08:	62 17       	cp	r22, r18
    1b0a:	73 07       	cpc	r23, r19
    1b0c:	84 07       	cpc	r24, r20
    1b0e:	ba 07       	cpc	r27, r26
    1b10:	20 f0       	brcs	.+8      	; 0x1b1a <__divsf3_pse+0xae>
    1b12:	62 1b       	sub	r22, r18
    1b14:	73 0b       	sbc	r23, r19
    1b16:	84 0b       	sbc	r24, r20
    1b18:	ba 0b       	sbc	r27, r26
    1b1a:	ee 1f       	adc	r30, r30
    1b1c:	88 f7       	brcc	.-30     	; 0x1b00 <__divsf3_pse+0x94>
    1b1e:	e0 95       	com	r30
    1b20:	08 95       	ret

00001b22 <__fixsfsi>:
    1b22:	0e 94 98 0d 	call	0x1b30	; 0x1b30 <__fixunssfsi>
    1b26:	68 94       	set
    1b28:	b1 11       	cpse	r27, r1
    1b2a:	0c 94 4f 0e 	jmp	0x1c9e	; 0x1c9e <__fp_szero>
    1b2e:	08 95       	ret

00001b30 <__fixunssfsi>:
    1b30:	0e 94 34 0e 	call	0x1c68	; 0x1c68 <__fp_splitA>
    1b34:	88 f0       	brcs	.+34     	; 0x1b58 <__fixunssfsi+0x28>
    1b36:	9f 57       	subi	r25, 0x7F	; 127
    1b38:	98 f0       	brcs	.+38     	; 0x1b60 <__fixunssfsi+0x30>
    1b3a:	b9 2f       	mov	r27, r25
    1b3c:	99 27       	eor	r25, r25
    1b3e:	b7 51       	subi	r27, 0x17	; 23
    1b40:	b0 f0       	brcs	.+44     	; 0x1b6e <__fixunssfsi+0x3e>
    1b42:	e1 f0       	breq	.+56     	; 0x1b7c <__fixunssfsi+0x4c>
    1b44:	66 0f       	add	r22, r22
    1b46:	77 1f       	adc	r23, r23
    1b48:	88 1f       	adc	r24, r24
    1b4a:	99 1f       	adc	r25, r25
    1b4c:	1a f0       	brmi	.+6      	; 0x1b54 <__fixunssfsi+0x24>
    1b4e:	ba 95       	dec	r27
    1b50:	c9 f7       	brne	.-14     	; 0x1b44 <__fixunssfsi+0x14>
    1b52:	14 c0       	rjmp	.+40     	; 0x1b7c <__fixunssfsi+0x4c>
    1b54:	b1 30       	cpi	r27, 0x01	; 1
    1b56:	91 f0       	breq	.+36     	; 0x1b7c <__fixunssfsi+0x4c>
    1b58:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <__fp_zero>
    1b5c:	b1 e0       	ldi	r27, 0x01	; 1
    1b5e:	08 95       	ret
    1b60:	0c 94 4e 0e 	jmp	0x1c9c	; 0x1c9c <__fp_zero>
    1b64:	67 2f       	mov	r22, r23
    1b66:	78 2f       	mov	r23, r24
    1b68:	88 27       	eor	r24, r24
    1b6a:	b8 5f       	subi	r27, 0xF8	; 248
    1b6c:	39 f0       	breq	.+14     	; 0x1b7c <__fixunssfsi+0x4c>
    1b6e:	b9 3f       	cpi	r27, 0xF9	; 249
    1b70:	cc f3       	brlt	.-14     	; 0x1b64 <__fixunssfsi+0x34>
    1b72:	86 95       	lsr	r24
    1b74:	77 95       	ror	r23
    1b76:	67 95       	ror	r22
    1b78:	b3 95       	inc	r27
    1b7a:	d9 f7       	brne	.-10     	; 0x1b72 <__fixunssfsi+0x42>
    1b7c:	3e f4       	brtc	.+14     	; 0x1b8c <__fixunssfsi+0x5c>
    1b7e:	90 95       	com	r25
    1b80:	80 95       	com	r24
    1b82:	70 95       	com	r23
    1b84:	61 95       	neg	r22
    1b86:	7f 4f       	sbci	r23, 0xFF	; 255
    1b88:	8f 4f       	sbci	r24, 0xFF	; 255
    1b8a:	9f 4f       	sbci	r25, 0xFF	; 255
    1b8c:	08 95       	ret

00001b8e <__floatunsisf>:
    1b8e:	e8 94       	clt
    1b90:	09 c0       	rjmp	.+18     	; 0x1ba4 <__floatsisf+0x12>

00001b92 <__floatsisf>:
    1b92:	97 fb       	bst	r25, 7
    1b94:	3e f4       	brtc	.+14     	; 0x1ba4 <__floatsisf+0x12>
    1b96:	90 95       	com	r25
    1b98:	80 95       	com	r24
    1b9a:	70 95       	com	r23
    1b9c:	61 95       	neg	r22
    1b9e:	7f 4f       	sbci	r23, 0xFF	; 255
    1ba0:	8f 4f       	sbci	r24, 0xFF	; 255
    1ba2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ba4:	99 23       	and	r25, r25
    1ba6:	a9 f0       	breq	.+42     	; 0x1bd2 <__floatsisf+0x40>
    1ba8:	f9 2f       	mov	r31, r25
    1baa:	96 e9       	ldi	r25, 0x96	; 150
    1bac:	bb 27       	eor	r27, r27
    1bae:	93 95       	inc	r25
    1bb0:	f6 95       	lsr	r31
    1bb2:	87 95       	ror	r24
    1bb4:	77 95       	ror	r23
    1bb6:	67 95       	ror	r22
    1bb8:	b7 95       	ror	r27
    1bba:	f1 11       	cpse	r31, r1
    1bbc:	f8 cf       	rjmp	.-16     	; 0x1bae <__floatsisf+0x1c>
    1bbe:	fa f4       	brpl	.+62     	; 0x1bfe <__floatsisf+0x6c>
    1bc0:	bb 0f       	add	r27, r27
    1bc2:	11 f4       	brne	.+4      	; 0x1bc8 <__floatsisf+0x36>
    1bc4:	60 ff       	sbrs	r22, 0
    1bc6:	1b c0       	rjmp	.+54     	; 0x1bfe <__floatsisf+0x6c>
    1bc8:	6f 5f       	subi	r22, 0xFF	; 255
    1bca:	7f 4f       	sbci	r23, 0xFF	; 255
    1bcc:	8f 4f       	sbci	r24, 0xFF	; 255
    1bce:	9f 4f       	sbci	r25, 0xFF	; 255
    1bd0:	16 c0       	rjmp	.+44     	; 0x1bfe <__floatsisf+0x6c>
    1bd2:	88 23       	and	r24, r24
    1bd4:	11 f0       	breq	.+4      	; 0x1bda <__floatsisf+0x48>
    1bd6:	96 e9       	ldi	r25, 0x96	; 150
    1bd8:	11 c0       	rjmp	.+34     	; 0x1bfc <__floatsisf+0x6a>
    1bda:	77 23       	and	r23, r23
    1bdc:	21 f0       	breq	.+8      	; 0x1be6 <__floatsisf+0x54>
    1bde:	9e e8       	ldi	r25, 0x8E	; 142
    1be0:	87 2f       	mov	r24, r23
    1be2:	76 2f       	mov	r23, r22
    1be4:	05 c0       	rjmp	.+10     	; 0x1bf0 <__floatsisf+0x5e>
    1be6:	66 23       	and	r22, r22
    1be8:	71 f0       	breq	.+28     	; 0x1c06 <__floatsisf+0x74>
    1bea:	96 e8       	ldi	r25, 0x86	; 134
    1bec:	86 2f       	mov	r24, r22
    1bee:	70 e0       	ldi	r23, 0x00	; 0
    1bf0:	60 e0       	ldi	r22, 0x00	; 0
    1bf2:	2a f0       	brmi	.+10     	; 0x1bfe <__floatsisf+0x6c>
    1bf4:	9a 95       	dec	r25
    1bf6:	66 0f       	add	r22, r22
    1bf8:	77 1f       	adc	r23, r23
    1bfa:	88 1f       	adc	r24, r24
    1bfc:	da f7       	brpl	.-10     	; 0x1bf4 <__floatsisf+0x62>
    1bfe:	88 0f       	add	r24, r24
    1c00:	96 95       	lsr	r25
    1c02:	87 95       	ror	r24
    1c04:	97 f9       	bld	r25, 7
    1c06:	08 95       	ret

00001c08 <__fp_inf>:
    1c08:	97 f9       	bld	r25, 7
    1c0a:	9f 67       	ori	r25, 0x7F	; 127
    1c0c:	80 e8       	ldi	r24, 0x80	; 128
    1c0e:	70 e0       	ldi	r23, 0x00	; 0
    1c10:	60 e0       	ldi	r22, 0x00	; 0
    1c12:	08 95       	ret

00001c14 <__fp_nan>:
    1c14:	9f ef       	ldi	r25, 0xFF	; 255
    1c16:	80 ec       	ldi	r24, 0xC0	; 192
    1c18:	08 95       	ret

00001c1a <__fp_pscA>:
    1c1a:	00 24       	eor	r0, r0
    1c1c:	0a 94       	dec	r0
    1c1e:	16 16       	cp	r1, r22
    1c20:	17 06       	cpc	r1, r23
    1c22:	18 06       	cpc	r1, r24
    1c24:	09 06       	cpc	r0, r25
    1c26:	08 95       	ret

00001c28 <__fp_pscB>:
    1c28:	00 24       	eor	r0, r0
    1c2a:	0a 94       	dec	r0
    1c2c:	12 16       	cp	r1, r18
    1c2e:	13 06       	cpc	r1, r19
    1c30:	14 06       	cpc	r1, r20
    1c32:	05 06       	cpc	r0, r21
    1c34:	08 95       	ret

00001c36 <__fp_round>:
    1c36:	09 2e       	mov	r0, r25
    1c38:	03 94       	inc	r0
    1c3a:	00 0c       	add	r0, r0
    1c3c:	11 f4       	brne	.+4      	; 0x1c42 <__fp_round+0xc>
    1c3e:	88 23       	and	r24, r24
    1c40:	52 f0       	brmi	.+20     	; 0x1c56 <__fp_round+0x20>
    1c42:	bb 0f       	add	r27, r27
    1c44:	40 f4       	brcc	.+16     	; 0x1c56 <__fp_round+0x20>
    1c46:	bf 2b       	or	r27, r31
    1c48:	11 f4       	brne	.+4      	; 0x1c4e <__fp_round+0x18>
    1c4a:	60 ff       	sbrs	r22, 0
    1c4c:	04 c0       	rjmp	.+8      	; 0x1c56 <__fp_round+0x20>
    1c4e:	6f 5f       	subi	r22, 0xFF	; 255
    1c50:	7f 4f       	sbci	r23, 0xFF	; 255
    1c52:	8f 4f       	sbci	r24, 0xFF	; 255
    1c54:	9f 4f       	sbci	r25, 0xFF	; 255
    1c56:	08 95       	ret

00001c58 <__fp_split3>:
    1c58:	57 fd       	sbrc	r21, 7
    1c5a:	90 58       	subi	r25, 0x80	; 128
    1c5c:	44 0f       	add	r20, r20
    1c5e:	55 1f       	adc	r21, r21
    1c60:	59 f0       	breq	.+22     	; 0x1c78 <__fp_splitA+0x10>
    1c62:	5f 3f       	cpi	r21, 0xFF	; 255
    1c64:	71 f0       	breq	.+28     	; 0x1c82 <__fp_splitA+0x1a>
    1c66:	47 95       	ror	r20

00001c68 <__fp_splitA>:
    1c68:	88 0f       	add	r24, r24
    1c6a:	97 fb       	bst	r25, 7
    1c6c:	99 1f       	adc	r25, r25
    1c6e:	61 f0       	breq	.+24     	; 0x1c88 <__fp_splitA+0x20>
    1c70:	9f 3f       	cpi	r25, 0xFF	; 255
    1c72:	79 f0       	breq	.+30     	; 0x1c92 <__fp_splitA+0x2a>
    1c74:	87 95       	ror	r24
    1c76:	08 95       	ret
    1c78:	12 16       	cp	r1, r18
    1c7a:	13 06       	cpc	r1, r19
    1c7c:	14 06       	cpc	r1, r20
    1c7e:	55 1f       	adc	r21, r21
    1c80:	f2 cf       	rjmp	.-28     	; 0x1c66 <__fp_split3+0xe>
    1c82:	46 95       	lsr	r20
    1c84:	f1 df       	rcall	.-30     	; 0x1c68 <__fp_splitA>
    1c86:	08 c0       	rjmp	.+16     	; 0x1c98 <__fp_splitA+0x30>
    1c88:	16 16       	cp	r1, r22
    1c8a:	17 06       	cpc	r1, r23
    1c8c:	18 06       	cpc	r1, r24
    1c8e:	99 1f       	adc	r25, r25
    1c90:	f1 cf       	rjmp	.-30     	; 0x1c74 <__fp_splitA+0xc>
    1c92:	86 95       	lsr	r24
    1c94:	71 05       	cpc	r23, r1
    1c96:	61 05       	cpc	r22, r1
    1c98:	08 94       	sec
    1c9a:	08 95       	ret

00001c9c <__fp_zero>:
    1c9c:	e8 94       	clt

00001c9e <__fp_szero>:
    1c9e:	bb 27       	eor	r27, r27
    1ca0:	66 27       	eor	r22, r22
    1ca2:	77 27       	eor	r23, r23
    1ca4:	cb 01       	movw	r24, r22
    1ca6:	97 f9       	bld	r25, 7
    1ca8:	08 95       	ret

00001caa <__mulsf3>:
    1caa:	0e 94 68 0e 	call	0x1cd0	; 0x1cd0 <__mulsf3x>
    1cae:	0c 94 1b 0e 	jmp	0x1c36	; 0x1c36 <__fp_round>
    1cb2:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <__fp_pscA>
    1cb6:	38 f0       	brcs	.+14     	; 0x1cc6 <__mulsf3+0x1c>
    1cb8:	0e 94 14 0e 	call	0x1c28	; 0x1c28 <__fp_pscB>
    1cbc:	20 f0       	brcs	.+8      	; 0x1cc6 <__mulsf3+0x1c>
    1cbe:	95 23       	and	r25, r21
    1cc0:	11 f0       	breq	.+4      	; 0x1cc6 <__mulsf3+0x1c>
    1cc2:	0c 94 04 0e 	jmp	0x1c08	; 0x1c08 <__fp_inf>
    1cc6:	0c 94 0a 0e 	jmp	0x1c14	; 0x1c14 <__fp_nan>
    1cca:	11 24       	eor	r1, r1
    1ccc:	0c 94 4f 0e 	jmp	0x1c9e	; 0x1c9e <__fp_szero>

00001cd0 <__mulsf3x>:
    1cd0:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <__fp_split3>
    1cd4:	70 f3       	brcs	.-36     	; 0x1cb2 <__mulsf3+0x8>

00001cd6 <__mulsf3_pse>:
    1cd6:	95 9f       	mul	r25, r21
    1cd8:	c1 f3       	breq	.-16     	; 0x1cca <__mulsf3+0x20>
    1cda:	95 0f       	add	r25, r21
    1cdc:	50 e0       	ldi	r21, 0x00	; 0
    1cde:	55 1f       	adc	r21, r21
    1ce0:	62 9f       	mul	r22, r18
    1ce2:	f0 01       	movw	r30, r0
    1ce4:	72 9f       	mul	r23, r18
    1ce6:	bb 27       	eor	r27, r27
    1ce8:	f0 0d       	add	r31, r0
    1cea:	b1 1d       	adc	r27, r1
    1cec:	63 9f       	mul	r22, r19
    1cee:	aa 27       	eor	r26, r26
    1cf0:	f0 0d       	add	r31, r0
    1cf2:	b1 1d       	adc	r27, r1
    1cf4:	aa 1f       	adc	r26, r26
    1cf6:	64 9f       	mul	r22, r20
    1cf8:	66 27       	eor	r22, r22
    1cfa:	b0 0d       	add	r27, r0
    1cfc:	a1 1d       	adc	r26, r1
    1cfe:	66 1f       	adc	r22, r22
    1d00:	82 9f       	mul	r24, r18
    1d02:	22 27       	eor	r18, r18
    1d04:	b0 0d       	add	r27, r0
    1d06:	a1 1d       	adc	r26, r1
    1d08:	62 1f       	adc	r22, r18
    1d0a:	73 9f       	mul	r23, r19
    1d0c:	b0 0d       	add	r27, r0
    1d0e:	a1 1d       	adc	r26, r1
    1d10:	62 1f       	adc	r22, r18
    1d12:	83 9f       	mul	r24, r19
    1d14:	a0 0d       	add	r26, r0
    1d16:	61 1d       	adc	r22, r1
    1d18:	22 1f       	adc	r18, r18
    1d1a:	74 9f       	mul	r23, r20
    1d1c:	33 27       	eor	r19, r19
    1d1e:	a0 0d       	add	r26, r0
    1d20:	61 1d       	adc	r22, r1
    1d22:	23 1f       	adc	r18, r19
    1d24:	84 9f       	mul	r24, r20
    1d26:	60 0d       	add	r22, r0
    1d28:	21 1d       	adc	r18, r1
    1d2a:	82 2f       	mov	r24, r18
    1d2c:	76 2f       	mov	r23, r22
    1d2e:	6a 2f       	mov	r22, r26
    1d30:	11 24       	eor	r1, r1
    1d32:	9f 57       	subi	r25, 0x7F	; 127
    1d34:	50 40       	sbci	r21, 0x00	; 0
    1d36:	9a f0       	brmi	.+38     	; 0x1d5e <__mulsf3_pse+0x88>
    1d38:	f1 f0       	breq	.+60     	; 0x1d76 <__mulsf3_pse+0xa0>
    1d3a:	88 23       	and	r24, r24
    1d3c:	4a f0       	brmi	.+18     	; 0x1d50 <__mulsf3_pse+0x7a>
    1d3e:	ee 0f       	add	r30, r30
    1d40:	ff 1f       	adc	r31, r31
    1d42:	bb 1f       	adc	r27, r27
    1d44:	66 1f       	adc	r22, r22
    1d46:	77 1f       	adc	r23, r23
    1d48:	88 1f       	adc	r24, r24
    1d4a:	91 50       	subi	r25, 0x01	; 1
    1d4c:	50 40       	sbci	r21, 0x00	; 0
    1d4e:	a9 f7       	brne	.-22     	; 0x1d3a <__mulsf3_pse+0x64>
    1d50:	9e 3f       	cpi	r25, 0xFE	; 254
    1d52:	51 05       	cpc	r21, r1
    1d54:	80 f0       	brcs	.+32     	; 0x1d76 <__mulsf3_pse+0xa0>
    1d56:	0c 94 04 0e 	jmp	0x1c08	; 0x1c08 <__fp_inf>
    1d5a:	0c 94 4f 0e 	jmp	0x1c9e	; 0x1c9e <__fp_szero>
    1d5e:	5f 3f       	cpi	r21, 0xFF	; 255
    1d60:	e4 f3       	brlt	.-8      	; 0x1d5a <__mulsf3_pse+0x84>
    1d62:	98 3e       	cpi	r25, 0xE8	; 232
    1d64:	d4 f3       	brlt	.-12     	; 0x1d5a <__mulsf3_pse+0x84>
    1d66:	86 95       	lsr	r24
    1d68:	77 95       	ror	r23
    1d6a:	67 95       	ror	r22
    1d6c:	b7 95       	ror	r27
    1d6e:	f7 95       	ror	r31
    1d70:	e7 95       	ror	r30
    1d72:	9f 5f       	subi	r25, 0xFF	; 255
    1d74:	c1 f7       	brne	.-16     	; 0x1d66 <__mulsf3_pse+0x90>
    1d76:	fe 2b       	or	r31, r30
    1d78:	88 0f       	add	r24, r24
    1d7a:	91 1d       	adc	r25, r1
    1d7c:	96 95       	lsr	r25
    1d7e:	87 95       	ror	r24
    1d80:	97 f9       	bld	r25, 7
    1d82:	08 95       	ret

00001d84 <_ZN15OrangutanAnalog7setModeEh.part.0>:
    1d84:	ec e7       	ldi	r30, 0x7C	; 124
    1d86:	f0 e0       	ldi	r31, 0x00	; 0
    1d88:	80 81       	ld	r24, Z
    1d8a:	8f 7d       	andi	r24, 0xDF	; 223
    1d8c:	80 83       	st	Z, r24
    1d8e:	08 95       	ret

00001d90 <_ZN15OrangutanAnalog7setModeEh>:
    1d90:	81 11       	cpse	r24, r1
    1d92:	03 c0       	rjmp	.+6      	; 0x1d9a <_ZN15OrangutanAnalog7setModeEh+0xa>
    1d94:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <_ZN15OrangutanAnalog7setModeEh.part.0>
    1d98:	08 95       	ret
    1d9a:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1d9e:	80 62       	ori	r24, 0x20	; 32
    1da0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1da4:	08 95       	ret

00001da6 <_ZN15OrangutanAnalog7getModeEv>:
    1da6:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1daa:	85 fb       	bst	r24, 5
    1dac:	88 27       	eor	r24, r24
    1dae:	80 f9       	bld	r24, 0
    1db0:	08 95       	ret

00001db2 <_ZN15OrangutanAnalog16conversionResultEv>:
    1db2:	0e 94 d3 0e 	call	0x1da6	; 0x1da6 <_ZN15OrangutanAnalog7getModeEv>
    1db6:	88 23       	and	r24, r24
    1db8:	21 f0       	breq	.+8      	; 0x1dc2 <_ZN15OrangutanAnalog16conversionResultEv+0x10>
    1dba:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1dbe:	90 e0       	ldi	r25, 0x00	; 0
    1dc0:	08 95       	ret
    1dc2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    1dc6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1dca:	08 95       	ret

00001dcc <_ZN15OrangutanAnalog15startConversionEhh>:
    1dcc:	80 32       	cpi	r24, 0x20	; 32
    1dce:	a0 f4       	brcc	.+40     	; 0x1df8 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
    1dd0:	97 e8       	ldi	r25, 0x87	; 135
    1dd2:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1dd6:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1dda:	66 23       	and	r22, r22
    1ddc:	11 f0       	breq	.+4      	; 0x1de2 <_ZN15OrangutanAnalog15startConversionEhh+0x16>
    1dde:	90 6c       	ori	r25, 0xC0	; 192
    1de0:	02 c0       	rjmp	.+4      	; 0x1de6 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
    1de2:	9f 77       	andi	r25, 0x7F	; 127
    1de4:	90 64       	ori	r25, 0x40	; 64
    1de6:	90 7e       	andi	r25, 0xE0	; 224
    1de8:	98 2b       	or	r25, r24
    1dea:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1dee:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1df2:	80 64       	ori	r24, 0x40	; 64
    1df4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1df8:	08 95       	ret

00001dfa <_ZN15OrangutanAnalog4readEh>:
    1dfa:	60 e0       	ldi	r22, 0x00	; 0
    1dfc:	0e 94 e6 0e 	call	0x1dcc	; 0x1dcc <_ZN15OrangutanAnalog15startConversionEhh>
    1e00:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1e04:	86 fd       	sbrc	r24, 6
    1e06:	fc cf       	rjmp	.-8      	; 0x1e00 <_ZN15OrangutanAnalog4readEh+0x6>
    1e08:	0e 94 d9 0e 	call	0x1db2	; 0x1db2 <_ZN15OrangutanAnalog16conversionResultEv>
    1e0c:	08 95       	ret

00001e0e <analog_read>:
    1e0e:	0e 94 fd 0e 	call	0x1dfa	; 0x1dfa <_ZN15OrangutanAnalog4readEh>
    1e12:	08 95       	ret

00001e14 <_ZN15OrangutanAnalog11readAverageEhj>:
    1e14:	a0 e0       	ldi	r26, 0x00	; 0
    1e16:	b0 e0       	ldi	r27, 0x00	; 0
    1e18:	e0 e1       	ldi	r30, 0x10	; 16
    1e1a:	ff e0       	ldi	r31, 0x0F	; 15
    1e1c:	0c 94 57 1d 	jmp	0x3aae	; 0x3aae <__prologue_saves__+0x14>
    1e20:	eb 01       	movw	r28, r22
    1e22:	60 e0       	ldi	r22, 0x00	; 0
    1e24:	0e 94 e6 0e 	call	0x1dcc	; 0x1dcc <_ZN15OrangutanAnalog15startConversionEhh>
    1e28:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1e2c:	86 fd       	sbrc	r24, 6
    1e2e:	fc cf       	rjmp	.-8      	; 0x1e28 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
    1e30:	8e 01       	movw	r16, r28
    1e32:	c1 2c       	mov	r12, r1
    1e34:	d1 2c       	mov	r13, r1
    1e36:	76 01       	movw	r14, r12
    1e38:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1e3c:	80 64       	ori	r24, 0x40	; 64
    1e3e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1e42:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1e46:	86 fd       	sbrc	r24, 6
    1e48:	fc cf       	rjmp	.-8      	; 0x1e42 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
    1e4a:	0e 94 d9 0e 	call	0x1db2	; 0x1db2 <_ZN15OrangutanAnalog16conversionResultEv>
    1e4e:	c8 0e       	add	r12, r24
    1e50:	d9 1e       	adc	r13, r25
    1e52:	e1 1c       	adc	r14, r1
    1e54:	f1 1c       	adc	r15, r1
    1e56:	01 50       	subi	r16, 0x01	; 1
    1e58:	11 09       	sbc	r17, r1
    1e5a:	01 15       	cp	r16, r1
    1e5c:	11 05       	cpc	r17, r1
    1e5e:	61 f7       	brne	.-40     	; 0x1e38 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
    1e60:	ce 01       	movw	r24, r28
    1e62:	96 95       	lsr	r25
    1e64:	87 95       	ror	r24
    1e66:	c0 34       	cpi	r28, 0x40	; 64
    1e68:	d1 05       	cpc	r29, r1
    1e6a:	38 f4       	brcc	.+14     	; 0x1e7a <_ZN15OrangutanAnalog11readAverageEhj+0x66>
    1e6c:	8c 0d       	add	r24, r12
    1e6e:	9d 1d       	adc	r25, r13
    1e70:	be 01       	movw	r22, r28
    1e72:	0e 94 bc 1c 	call	0x3978	; 0x3978 <__udivmodhi4>
    1e76:	cb 01       	movw	r24, r22
    1e78:	0e c0       	rjmp	.+28     	; 0x1e96 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
    1e7a:	a7 01       	movw	r20, r14
    1e7c:	96 01       	movw	r18, r12
    1e7e:	28 0f       	add	r18, r24
    1e80:	39 1f       	adc	r19, r25
    1e82:	41 1d       	adc	r20, r1
    1e84:	51 1d       	adc	r21, r1
    1e86:	ca 01       	movw	r24, r20
    1e88:	b9 01       	movw	r22, r18
    1e8a:	9e 01       	movw	r18, r28
    1e8c:	40 e0       	ldi	r20, 0x00	; 0
    1e8e:	50 e0       	ldi	r21, 0x00	; 0
    1e90:	0e 94 e4 1c 	call	0x39c8	; 0x39c8 <__udivmodsi4>
    1e94:	c9 01       	movw	r24, r18
    1e96:	cd b7       	in	r28, 0x3d	; 61
    1e98:	de b7       	in	r29, 0x3e	; 62
    1e9a:	e8 e0       	ldi	r30, 0x08	; 8
    1e9c:	0c 94 73 1d 	jmp	0x3ae6	; 0x3ae6 <__epilogue_restores__+0x14>

00001ea0 <_ZN15OrangutanAnalog12toMillivoltsEj>:
    1ea0:	cf 92       	push	r12
    1ea2:	df 92       	push	r13
    1ea4:	ef 92       	push	r14
    1ea6:	ff 92       	push	r15
    1ea8:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1eac:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1eb0:	9c 01       	movw	r18, r24
    1eb2:	0e 94 2b 1d 	call	0x3a56	; 0x3a56 <__umulhisi3>
    1eb6:	6b 01       	movw	r12, r22
    1eb8:	7c 01       	movw	r14, r24
    1eba:	0e 94 d3 0e 	call	0x1da6	; 0x1da6 <_ZN15OrangutanAnalog7getModeEv>
    1ebe:	88 23       	and	r24, r24
    1ec0:	59 f0       	breq	.+22     	; 0x1ed8 <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
    1ec2:	c7 01       	movw	r24, r14
    1ec4:	b6 01       	movw	r22, r12
    1ec6:	61 58       	subi	r22, 0x81	; 129
    1ec8:	7f 4f       	sbci	r23, 0xFF	; 255
    1eca:	8f 4f       	sbci	r24, 0xFF	; 255
    1ecc:	9f 4f       	sbci	r25, 0xFF	; 255
    1ece:	2f ef       	ldi	r18, 0xFF	; 255
    1ed0:	30 e0       	ldi	r19, 0x00	; 0
    1ed2:	40 e0       	ldi	r20, 0x00	; 0
    1ed4:	50 e0       	ldi	r21, 0x00	; 0
    1ed6:	0a c0       	rjmp	.+20     	; 0x1eec <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
    1ed8:	c7 01       	movw	r24, r14
    1eda:	b6 01       	movw	r22, r12
    1edc:	61 50       	subi	r22, 0x01	; 1
    1ede:	7e 4f       	sbci	r23, 0xFE	; 254
    1ee0:	8f 4f       	sbci	r24, 0xFF	; 255
    1ee2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ee4:	2f ef       	ldi	r18, 0xFF	; 255
    1ee6:	33 e0       	ldi	r19, 0x03	; 3
    1ee8:	40 e0       	ldi	r20, 0x00	; 0
    1eea:	50 e0       	ldi	r21, 0x00	; 0
    1eec:	0e 94 e4 1c 	call	0x39c8	; 0x39c8 <__udivmodsi4>
    1ef0:	c9 01       	movw	r24, r18
    1ef2:	ff 90       	pop	r15
    1ef4:	ef 90       	pop	r14
    1ef6:	df 90       	pop	r13
    1ef8:	cf 90       	pop	r12
    1efa:	08 95       	ret

00001efc <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
    1efc:	0e 94 0a 0f 	call	0x1e14	; 0x1e14 <_ZN15OrangutanAnalog11readAverageEhj>
    1f00:	0e 94 50 0f 	call	0x1ea0	; 0x1ea0 <_ZN15OrangutanAnalog12toMillivoltsEj>
    1f04:	08 95       	ret

00001f06 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
    1f06:	1f 93       	push	r17
    1f08:	cf 93       	push	r28
    1f0a:	df 93       	push	r29
    1f0c:	0e 94 d3 0e 	call	0x1da6	; 0x1da6 <_ZN15OrangutanAnalog7getModeEv>
    1f10:	18 2f       	mov	r17, r24
    1f12:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <_ZN15OrangutanAnalog7setModeEh.part.0>
    1f16:	6a e0       	ldi	r22, 0x0A	; 10
    1f18:	70 e0       	ldi	r23, 0x00	; 0
    1f1a:	86 e0       	ldi	r24, 0x06	; 6
    1f1c:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
    1f20:	ec 01       	movw	r28, r24
    1f22:	81 2f       	mov	r24, r17
    1f24:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <_ZN15OrangutanAnalog7setModeEh>
    1f28:	ce 01       	movw	r24, r28
    1f2a:	88 0f       	add	r24, r24
    1f2c:	99 1f       	adc	r25, r25
    1f2e:	8c 0f       	add	r24, r28
    1f30:	9d 1f       	adc	r25, r29
    1f32:	01 96       	adiw	r24, 0x01	; 1
    1f34:	96 95       	lsr	r25
    1f36:	87 95       	ror	r24
    1f38:	df 91       	pop	r29
    1f3a:	cf 91       	pop	r28
    1f3c:	1f 91       	pop	r17
    1f3e:	08 95       	ret

00001f40 <read_battery_millivolts_3pi>:
    1f40:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
    1f44:	08 95       	ret

00001f46 <_ZL16currentCharacterv>:
    1f46:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <_ZL17use_program_space>
    1f4a:	e0 91 8c 01 	lds	r30, 0x018C	; 0x80018c <__data_end>
    1f4e:	f0 91 8d 01 	lds	r31, 0x018D	; 0x80018d <__data_end+0x1>
    1f52:	99 23       	and	r25, r25
    1f54:	11 f0       	breq	.+4      	; 0x1f5a <_ZL16currentCharacterv+0x14>
    1f56:	84 91       	lpm	r24, Z
    1f58:	01 c0       	rjmp	.+2      	; 0x1f5c <_ZL16currentCharacterv+0x16>
    1f5a:	80 81       	ld	r24, Z
    1f5c:	2f eb       	ldi	r18, 0xBF	; 191
    1f5e:	28 0f       	add	r18, r24
    1f60:	2a 31       	cpi	r18, 0x1A	; 26
    1f62:	10 f4       	brcc	.+4      	; 0x1f68 <_ZL16currentCharacterv+0x22>
    1f64:	80 5e       	subi	r24, 0xE0	; 224
    1f66:	08 95       	ret
    1f68:	80 32       	cpi	r24, 0x20	; 32
    1f6a:	49 f4       	brne	.+18     	; 0x1f7e <_ZL16currentCharacterv+0x38>
    1f6c:	9f 01       	movw	r18, r30
    1f6e:	2f 5f       	subi	r18, 0xFF	; 255
    1f70:	3f 4f       	sbci	r19, 0xFF	; 255
    1f72:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    1f76:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    1f7a:	ef 2b       	or	r30, r31
    1f7c:	31 f7       	brne	.-52     	; 0x1f4a <_ZL16currentCharacterv+0x4>
    1f7e:	08 95       	ret

00001f80 <_ZL9getNumberv>:
    1f80:	1f 93       	push	r17
    1f82:	cf 93       	push	r28
    1f84:	df 93       	push	r29
    1f86:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <_ZL16currentCharacterv>
    1f8a:	c0 e0       	ldi	r28, 0x00	; 0
    1f8c:	d0 e0       	ldi	r29, 0x00	; 0
    1f8e:	1a e0       	ldi	r17, 0x0A	; 10
    1f90:	90 ed       	ldi	r25, 0xD0	; 208
    1f92:	98 0f       	add	r25, r24
    1f94:	9a 30       	cpi	r25, 0x0A	; 10
    1f96:	b8 f4       	brcc	.+46     	; 0x1fc6 <_ZL9getNumberv+0x46>
    1f98:	9e 01       	movw	r18, r28
    1f9a:	12 9f       	mul	r17, r18
    1f9c:	e0 01       	movw	r28, r0
    1f9e:	13 9f       	mul	r17, r19
    1fa0:	d0 0d       	add	r29, r0
    1fa2:	11 24       	eor	r1, r1
    1fa4:	c8 0f       	add	r28, r24
    1fa6:	d1 1d       	adc	r29, r1
    1fa8:	87 fd       	sbrc	r24, 7
    1faa:	da 95       	dec	r29
    1fac:	e0 97       	sbiw	r28, 0x30	; 48
    1fae:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <__data_end>
    1fb2:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <__data_end+0x1>
    1fb6:	01 96       	adiw	r24, 0x01	; 1
    1fb8:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <__data_end+0x1>
    1fbc:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <__data_end>
    1fc0:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <_ZL16currentCharacterv>
    1fc4:	e5 cf       	rjmp	.-54     	; 0x1f90 <_ZL9getNumberv+0x10>
    1fc6:	ce 01       	movw	r24, r28
    1fc8:	df 91       	pop	r29
    1fca:	cf 91       	pop	r28
    1fcc:	1f 91       	pop	r17
    1fce:	08 95       	ret

00001fd0 <_ZN15OrangutanBuzzer5init2Ev>:
    1fd0:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1fd4:	83 e2       	ldi	r24, 0x23	; 35
    1fd6:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    1fda:	81 e1       	ldi	r24, 0x11	; 17
    1fdc:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1fe0:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7f8082>
    1fe4:	80 e1       	ldi	r24, 0x10	; 16
    1fe6:	97 e2       	ldi	r25, 0x27	; 39
    1fe8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    1fec:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1ff0:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    1ff4:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    1ff8:	22 9a       	sbi	0x04, 2	; 4
    1ffa:	78 94       	sei
    1ffc:	08 95       	ret

00001ffe <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
    1ffe:	8f 92       	push	r8
    2000:	9f 92       	push	r9
    2002:	af 92       	push	r10
    2004:	bf 92       	push	r11
    2006:	df 92       	push	r13
    2008:	ef 92       	push	r14
    200a:	ff 92       	push	r15
    200c:	0f 93       	push	r16
    200e:	1f 93       	push	r17
    2010:	cf 93       	push	r28
    2012:	df 93       	push	r29
    2014:	5c 01       	movw	r10, r24
    2016:	8b 01       	movw	r16, r22
    2018:	d4 2e       	mov	r13, r20
    201a:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <buzzerInitialized>
    201e:	81 11       	cpse	r24, r1
    2020:	05 c0       	rjmp	.+10     	; 0x202c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
    2022:	81 e0       	ldi	r24, 0x01	; 1
    2024:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <buzzerInitialized>
    2028:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <_ZN15OrangutanBuzzer5init2Ev>
    202c:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <buzzerFinished>
    2030:	b7 fe       	sbrs	r11, 7
    2032:	05 c0       	rjmp	.+10     	; 0x203e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
    2034:	e8 94       	clt
    2036:	b7 f8       	bld	r11, 7
    2038:	2a e0       	ldi	r18, 0x0A	; 10
    203a:	f2 2e       	mov	r15, r18
    203c:	02 c0       	rjmp	.+4      	; 0x2042 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
    203e:	ff 24       	eor	r15, r15
    2040:	f3 94       	inc	r15
    2042:	e0 90 81 00 	lds	r14, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    2046:	2e 2d       	mov	r18, r14
    2048:	28 7f       	andi	r18, 0xF8	; 248
    204a:	e2 2e       	mov	r14, r18
    204c:	48 ec       	ldi	r20, 0xC8	; 200
    204e:	f4 9e       	mul	r15, r20
    2050:	c0 01       	movw	r24, r0
    2052:	11 24       	eor	r1, r1
    2054:	8a 15       	cp	r24, r10
    2056:	9b 05       	cpc	r25, r11
    2058:	e0 f4       	brcc	.+56     	; 0x2092 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
    205a:	e5 01       	movw	r28, r10
    205c:	51 e1       	ldi	r21, 0x11	; 17
    205e:	a5 16       	cp	r10, r21
    2060:	57 e2       	ldi	r21, 0x27	; 39
    2062:	b5 06       	cpc	r11, r21
    2064:	10 f0       	brcs	.+4      	; 0x206a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
    2066:	c0 e1       	ldi	r28, 0x10	; 16
    2068:	d7 e2       	ldi	r29, 0x27	; 39
    206a:	be 01       	movw	r22, r28
    206c:	76 95       	lsr	r23
    206e:	67 95       	ror	r22
    2070:	80 e0       	ldi	r24, 0x00	; 0
    2072:	90 e0       	ldi	r25, 0x00	; 0
    2074:	60 58       	subi	r22, 0x80	; 128
    2076:	79 46       	sbci	r23, 0x69	; 105
    2078:	87 46       	sbci	r24, 0x67	; 103
    207a:	9f 4f       	sbci	r25, 0xFF	; 255
    207c:	4e 01       	movw	r8, r28
    207e:	a1 2c       	mov	r10, r1
    2080:	b1 2c       	mov	r11, r1
    2082:	a5 01       	movw	r20, r10
    2084:	94 01       	movw	r18, r8
    2086:	0e 94 e4 1c 	call	0x39c8	; 0x39c8 <__udivmodsi4>
    208a:	59 01       	movw	r10, r18
    208c:	8e 2d       	mov	r24, r14
    208e:	81 60       	ori	r24, 0x01	; 1
    2090:	24 c0       	rjmp	.+72     	; 0x20da <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
    2092:	c8 e2       	ldi	r28, 0x28	; 40
    2094:	fc 9e       	mul	r15, r28
    2096:	c0 2d       	mov	r28, r0
    2098:	11 24       	eor	r1, r1
    209a:	d0 e0       	ldi	r29, 0x00	; 0
    209c:	ca 15       	cp	r28, r10
    209e:	db 05       	cpc	r29, r11
    20a0:	08 f4       	brcc	.+2      	; 0x20a4 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
    20a2:	e5 01       	movw	r28, r10
    20a4:	be 01       	movw	r22, r28
    20a6:	76 95       	lsr	r23
    20a8:	67 95       	ror	r22
    20aa:	9e 01       	movw	r18, r28
    20ac:	40 e0       	ldi	r20, 0x00	; 0
    20ae:	50 e0       	ldi	r21, 0x00	; 0
    20b0:	8a e0       	ldi	r24, 0x0A	; 10
    20b2:	f8 12       	cpse	r15, r24
    20b4:	07 c0       	rjmp	.+14     	; 0x20c4 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
    20b6:	80 e0       	ldi	r24, 0x00	; 0
    20b8:	90 e0       	ldi	r25, 0x00	; 0
    20ba:	60 5e       	subi	r22, 0xE0	; 224
    20bc:	73 44       	sbci	r23, 0x43	; 67
    20be:	81 44       	sbci	r24, 0x41	; 65
    20c0:	9f 4f       	sbci	r25, 0xFF	; 255
    20c2:	06 c0       	rjmp	.+12     	; 0x20d0 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
    20c4:	80 e0       	ldi	r24, 0x00	; 0
    20c6:	90 e0       	ldi	r25, 0x00	; 0
    20c8:	60 53       	subi	r22, 0x30	; 48
    20ca:	7d 4e       	sbci	r23, 0xED	; 237
    20cc:	8c 4e       	sbci	r24, 0xEC	; 236
    20ce:	9f 4f       	sbci	r25, 0xFF	; 255
    20d0:	0e 94 e4 1c 	call	0x39c8	; 0x39c8 <__udivmodsi4>
    20d4:	59 01       	movw	r10, r18
    20d6:	8e 2d       	mov	r24, r14
    20d8:	82 60       	ori	r24, 0x02	; 2
    20da:	88 2e       	mov	r8, r24
    20dc:	2a e0       	ldi	r18, 0x0A	; 10
    20de:	f2 12       	cpse	r15, r18
    20e0:	07 c0       	rjmp	.+14     	; 0x20f0 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
    20e2:	ce 01       	movw	r24, r28
    20e4:	05 96       	adiw	r24, 0x05	; 5
    20e6:	6a e0       	ldi	r22, 0x0A	; 10
    20e8:	70 e0       	ldi	r23, 0x00	; 0
    20ea:	0e 94 bc 1c 	call	0x3978	; 0x3978 <__udivmodhi4>
    20ee:	eb 01       	movw	r28, r22
    20f0:	c8 3e       	cpi	r28, 0xE8	; 232
    20f2:	43 e0       	ldi	r20, 0x03	; 3
    20f4:	d4 07       	cpc	r29, r20
    20f6:	59 f0       	breq	.+22     	; 0x210e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
    20f8:	98 01       	movw	r18, r16
    20fa:	de 01       	movw	r26, r28
    20fc:	0e 94 2b 1d 	call	0x3a56	; 0x3a56 <__umulhisi3>
    2100:	28 ee       	ldi	r18, 0xE8	; 232
    2102:	33 e0       	ldi	r19, 0x03	; 3
    2104:	40 e0       	ldi	r20, 0x00	; 0
    2106:	50 e0       	ldi	r21, 0x00	; 0
    2108:	0e 94 06 1d 	call	0x3a0c	; 0x3a0c <__divmodsi4>
    210c:	89 01       	movw	r16, r18
    210e:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    2112:	80 92 81 00 	sts	0x0081, r8	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    2116:	b0 92 89 00 	sts	0x0089, r11	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    211a:	a0 92 88 00 	sts	0x0088, r10	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    211e:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    2122:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    2126:	4d 2d       	mov	r20, r13
    2128:	40 31       	cpi	r20, 0x10	; 16
    212a:	08 f0       	brcs	.+2      	; 0x212e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
    212c:	4f e0       	ldi	r20, 0x0F	; 15
    212e:	80 e1       	ldi	r24, 0x10	; 16
    2130:	90 e0       	ldi	r25, 0x00	; 0
    2132:	84 1b       	sub	r24, r20
    2134:	91 09       	sbc	r25, r1
    2136:	a9 01       	movw	r20, r18
    2138:	02 c0       	rjmp	.+4      	; 0x213e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
    213a:	56 95       	lsr	r21
    213c:	47 95       	ror	r20
    213e:	8a 95       	dec	r24
    2140:	e2 f7       	brpl	.-8      	; 0x213a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
    2142:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    2146:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    214a:	10 93 94 01 	sts	0x0194, r17	; 0x800194 <_ZL13buzzerTimeout+0x1>
    214e:	00 93 93 01 	sts	0x0193, r16	; 0x800193 <_ZL13buzzerTimeout>
    2152:	86 b3       	in	r24, 0x16	; 22
    2154:	8f ef       	ldi	r24, 0xFF	; 255
    2156:	86 bb       	out	0x16, r24	; 22
    2158:	81 e0       	ldi	r24, 0x01	; 1
    215a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    215e:	df 91       	pop	r29
    2160:	cf 91       	pop	r28
    2162:	1f 91       	pop	r17
    2164:	0f 91       	pop	r16
    2166:	ff 90       	pop	r15
    2168:	ef 90       	pop	r14
    216a:	df 90       	pop	r13
    216c:	bf 90       	pop	r11
    216e:	af 90       	pop	r10
    2170:	9f 90       	pop	r9
    2172:	8f 90       	pop	r8
    2174:	08 95       	ret

00002176 <_ZN15OrangutanBuzzer8playNoteEhjh>:
    2176:	cf 93       	push	r28
    2178:	df 93       	push	r29
    217a:	eb 01       	movw	r28, r22
    217c:	8f 3f       	cpi	r24, 0xFF	; 255
    217e:	11 f0       	breq	.+4      	; 0x2184 <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
    2180:	41 11       	cpse	r20, r1
    2182:	05 c0       	rjmp	.+10     	; 0x218e <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
    2184:	40 e0       	ldi	r20, 0x00	; 0
    2186:	be 01       	movw	r22, r28
    2188:	88 ee       	ldi	r24, 0xE8	; 232
    218a:	93 e0       	ldi	r25, 0x03	; 3
    218c:	43 c0       	rjmp	.+134    	; 0x2214 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
    218e:	81 31       	cpi	r24, 0x11	; 17
    2190:	30 f0       	brcs	.+12     	; 0x219e <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
    2192:	50 ef       	ldi	r21, 0xF0	; 240
    2194:	58 0f       	add	r21, r24
    2196:	50 36       	cpi	r21, 0x60	; 96
    2198:	18 f0       	brcs	.+6      	; 0x21a0 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    219a:	5f e5       	ldi	r21, 0x5F	; 95
    219c:	01 c0       	rjmp	.+2      	; 0x21a0 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    219e:	50 e0       	ldi	r21, 0x00	; 0
    21a0:	85 2f       	mov	r24, r21
    21a2:	6c e0       	ldi	r22, 0x0C	; 12
    21a4:	0e 94 b0 1c 	call	0x3960	; 0x3960 <__udivmodqi4>
    21a8:	68 2f       	mov	r22, r24
    21aa:	74 ef       	ldi	r23, 0xF4	; 244
    21ac:	76 03       	mulsu	r23, r22
    21ae:	90 01       	movw	r18, r0
    21b0:	11 24       	eor	r1, r1
    21b2:	25 0f       	add	r18, r21
    21b4:	31 1d       	adc	r19, r1
    21b6:	2c 30       	cpi	r18, 0x0C	; 12
    21b8:	31 05       	cpc	r19, r1
    21ba:	40 f4       	brcc	.+16     	; 0x21cc <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
    21bc:	f9 01       	movw	r30, r18
    21be:	ee 0f       	add	r30, r30
    21c0:	ff 1f       	adc	r31, r31
    21c2:	e8 5c       	subi	r30, 0xC8	; 200
    21c4:	fe 4f       	sbci	r31, 0xFE	; 254
    21c6:	20 81       	ld	r18, Z
    21c8:	31 81       	ldd	r19, Z+1	; 0x01
    21ca:	02 c0       	rjmp	.+4      	; 0x21d0 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
    21cc:	20 e0       	ldi	r18, 0x00	; 0
    21ce:	30 e0       	ldi	r19, 0x00	; 0
    21d0:	87 30       	cpi	r24, 0x07	; 7
    21d2:	81 f0       	breq	.+32     	; 0x21f4 <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
    21d4:	08 2e       	mov	r0, r24
    21d6:	02 c0       	rjmp	.+4      	; 0x21dc <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
    21d8:	22 0f       	add	r18, r18
    21da:	33 1f       	adc	r19, r19
    21dc:	0a 94       	dec	r0
    21de:	e2 f7       	brpl	.-8      	; 0x21d8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
    21e0:	82 30       	cpi	r24, 0x02	; 2
    21e2:	28 f0       	brcs	.+10     	; 0x21ee <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
    21e4:	c9 01       	movw	r24, r18
    21e6:	05 96       	adiw	r24, 0x05	; 5
    21e8:	6a e0       	ldi	r22, 0x0A	; 10
    21ea:	70 e0       	ldi	r23, 0x00	; 0
    21ec:	0c c0       	rjmp	.+24     	; 0x2206 <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
    21ee:	c9 01       	movw	r24, r18
    21f0:	90 58       	subi	r25, 0x80	; 128
    21f2:	0c c0       	rjmp	.+24     	; 0x220c <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
    21f4:	c9 01       	movw	r24, r18
    21f6:	36 e0       	ldi	r19, 0x06	; 6
    21f8:	88 0f       	add	r24, r24
    21fa:	99 1f       	adc	r25, r25
    21fc:	3a 95       	dec	r19
    21fe:	e1 f7       	brne	.-8      	; 0x21f8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
    2200:	02 96       	adiw	r24, 0x02	; 2
    2202:	65 e0       	ldi	r22, 0x05	; 5
    2204:	70 e0       	ldi	r23, 0x00	; 0
    2206:	0e 94 bc 1c 	call	0x3978	; 0x3978 <__udivmodhi4>
    220a:	cb 01       	movw	r24, r22
    220c:	40 31       	cpi	r20, 0x10	; 16
    220e:	08 f0       	brcs	.+2      	; 0x2212 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
    2210:	4f e0       	ldi	r20, 0x0F	; 15
    2212:	be 01       	movw	r22, r28
    2214:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    2218:	df 91       	pop	r29
    221a:	cf 91       	pop	r28
    221c:	08 95       	ret

0000221e <_ZL8nextNotev>:
    221e:	a2 e0       	ldi	r26, 0x02	; 2
    2220:	b0 e0       	ldi	r27, 0x00	; 0
    2222:	e5 e1       	ldi	r30, 0x15	; 21
    2224:	f1 e1       	ldi	r31, 0x11	; 17
    2226:	0c 94 4f 1d 	jmp	0x3a9e	; 0x3a9e <__prologue_saves__+0x4>
    222a:	90 90 0a 01 	lds	r9, 0x010A	; 0x80010a <_ZL6octave>
    222e:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <_ZL8staccato>
    2232:	88 23       	and	r24, r24
    2234:	21 f0       	breq	.+8      	; 0x223e <_ZL8nextNotev+0x20>
    2236:	60 91 8f 01 	lds	r22, 0x018F	; 0x80018f <_ZL22staccato_rest_duration>
    223a:	61 11       	cpse	r22, r1
    223c:	17 c0       	rjmp	.+46     	; 0x226c <_ZL8nextNotev+0x4e>
    223e:	77 24       	eor	r7, r7
    2240:	73 94       	inc	r7
    2242:	b0 ec       	ldi	r27, 0xC0	; 192
    2244:	ab 2e       	mov	r10, r27
    2246:	bd e5       	ldi	r27, 0x5D	; 93
    2248:	bb 2e       	mov	r11, r27
    224a:	1a e0       	ldi	r17, 0x0A	; 10
    224c:	61 2e       	mov	r6, r17
    224e:	04 e0       	ldi	r16, 0x04	; 4
    2250:	80 2e       	mov	r8, r16
    2252:	80 ed       	ldi	r24, 0xD0	; 208
    2254:	c8 2e       	mov	r12, r24
    2256:	87 e0       	ldi	r24, 0x07	; 7
    2258:	d8 2e       	mov	r13, r24
    225a:	94 e0       	ldi	r25, 0x04	; 4
    225c:	e9 2e       	mov	r14, r25
    225e:	f1 2c       	mov	r15, r1
    2260:	04 ef       	ldi	r16, 0xF4	; 244
    2262:	11 e0       	ldi	r17, 0x01	; 1
    2264:	2f e0       	ldi	r18, 0x0F	; 15
    2266:	42 2e       	mov	r4, r18
    2268:	51 2c       	mov	r5, r1
    226a:	15 c0       	rjmp	.+42     	; 0x2296 <_ZL8nextNotev+0x78>
    226c:	70 e0       	ldi	r23, 0x00	; 0
    226e:	40 e0       	ldi	r20, 0x00	; 0
    2270:	88 ee       	ldi	r24, 0xE8	; 232
    2272:	93 e0       	ldi	r25, 0x03	; 3
    2274:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    2278:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <_ZL22staccato_rest_duration>
    227c:	17 c1       	rjmp	.+558    	; 0x24ac <_ZL8nextNotev+0x28e>
    227e:	86 36       	cpi	r24, 0x66	; 102
    2280:	d4 f5       	brge	.+116    	; 0x22f6 <_ZL8nextNotev+0xd8>
    2282:	81 36       	cpi	r24, 0x61	; 97
    2284:	09 f4       	brne	.+2      	; 0x2288 <_ZL8nextNotev+0x6a>
    2286:	a9 c0       	rjmp	.+338    	; 0x23da <_ZL8nextNotev+0x1bc>
    2288:	7c f5       	brge	.+94     	; 0x22e8 <_ZL8nextNotev+0xca>
    228a:	8c 33       	cpi	r24, 0x3C	; 60
    228c:	09 f4       	brne	.+2      	; 0x2290 <_ZL8nextNotev+0x72>
    228e:	60 c0       	rjmp	.+192    	; 0x2350 <_ZL8nextNotev+0x132>
    2290:	8e 33       	cpi	r24, 0x3E	; 62
    2292:	81 f4       	brne	.+32     	; 0x22b4 <_ZL8nextNotev+0x96>
    2294:	93 94       	inc	r9
    2296:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <_ZL16currentCharacterv>
    229a:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <__data_end>
    229e:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <__data_end+0x1>
    22a2:	2f 5f       	subi	r18, 0xFF	; 255
    22a4:	3f 4f       	sbci	r19, 0xFF	; 255
    22a6:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    22aa:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    22ae:	85 36       	cpi	r24, 0x65	; 101
    22b0:	31 f7       	brne	.-52     	; 0x227e <_ZL8nextNotev+0x60>
    22b2:	52 c0       	rjmp	.+164    	; 0x2358 <_ZL8nextNotev+0x13a>
    22b4:	81 32       	cpi	r24, 0x21	; 33
    22b6:	09 f0       	breq	.+2      	; 0x22ba <_ZL8nextNotev+0x9c>
    22b8:	8b c0       	rjmp	.+278    	; 0x23d0 <_ZL8nextNotev+0x1b2>
    22ba:	80 92 0a 01 	sts	0x010A, r8	; 0x80010a <_ZL6octave>
    22be:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <_ZL19whole_note_duration+0x1>
    22c2:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <_ZL19whole_note_duration>
    22c6:	f0 92 07 01 	sts	0x0107, r15	; 0x800107 <_ZL9note_type+0x1>
    22ca:	e0 92 06 01 	sts	0x0106, r14	; 0x800106 <_ZL9note_type>
    22ce:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <_ZL8duration+0x1>
    22d2:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <_ZL8duration>
    22d6:	50 92 03 01 	sts	0x0103, r5	; 0x800103 <_ZL6volume+0x1>
    22da:	40 92 02 01 	sts	0x0102, r4	; 0x800102 <_ZL6volume>
    22de:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <_ZL8staccato>
    22e2:	a4 e0       	ldi	r26, 0x04	; 4
    22e4:	9a 2e       	mov	r9, r26
    22e6:	d7 cf       	rjmp	.-82     	; 0x2296 <_ZL8nextNotev+0x78>
    22e8:	83 36       	cpi	r24, 0x63	; 99
    22ea:	a1 f1       	breq	.+104    	; 0x2354 <_ZL8nextNotev+0x136>
    22ec:	0c f4       	brge	.+2      	; 0x22f0 <_ZL8nextNotev+0xd2>
    22ee:	78 c0       	rjmp	.+240    	; 0x23e0 <_ZL8nextNotev+0x1c2>
    22f0:	10 e0       	ldi	r17, 0x00	; 0
    22f2:	82 e0       	ldi	r24, 0x02	; 2
    22f4:	77 c0       	rjmp	.+238    	; 0x23e4 <_ZL8nextNotev+0x1c6>
    22f6:	8d 36       	cpi	r24, 0x6D	; 109
    22f8:	c1 f1       	breq	.+112    	; 0x236a <_ZL8nextNotev+0x14c>
    22fa:	94 f4       	brge	.+36     	; 0x2320 <_ZL8nextNotev+0x102>
    22fc:	87 36       	cpi	r24, 0x67	; 103
    22fe:	91 f1       	breq	.+100    	; 0x2364 <_ZL8nextNotev+0x146>
    2300:	74 f1       	brlt	.+92     	; 0x235e <_ZL8nextNotev+0x140>
    2302:	8c 36       	cpi	r24, 0x6C	; 108
    2304:	09 f0       	breq	.+2      	; 0x2308 <_ZL8nextNotev+0xea>
    2306:	64 c0       	rjmp	.+200    	; 0x23d0 <_ZL8nextNotev+0x1b2>
    2308:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <_ZL9getNumberv>
    230c:	bc 01       	movw	r22, r24
    230e:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_ZL9note_type+0x1>
    2312:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_ZL9note_type>
    2316:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    231a:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    231e:	51 c0       	rjmp	.+162    	; 0x23c2 <_ZL8nextNotev+0x1a4>
    2320:	82 37       	cpi	r24, 0x72	; 114
    2322:	c9 f1       	breq	.+114    	; 0x2396 <_ZL8nextNotev+0x178>
    2324:	4c f4       	brge	.+18     	; 0x2338 <_ZL8nextNotev+0x11a>
    2326:	8f 36       	cpi	r24, 0x6F	; 111
    2328:	09 f0       	breq	.+2      	; 0x232c <_ZL8nextNotev+0x10e>
    232a:	52 c0       	rjmp	.+164    	; 0x23d0 <_ZL8nextNotev+0x1b2>
    232c:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <_ZL9getNumberv>
    2330:	98 2e       	mov	r9, r24
    2332:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_ZL6octave>
    2336:	af cf       	rjmp	.-162    	; 0x2296 <_ZL8nextNotev+0x78>
    2338:	84 37       	cpi	r24, 0x74	; 116
    233a:	81 f1       	breq	.+96     	; 0x239c <_ZL8nextNotev+0x17e>
    233c:	86 37       	cpi	r24, 0x76	; 118
    233e:	09 f0       	breq	.+2      	; 0x2342 <_ZL8nextNotev+0x124>
    2340:	47 c0       	rjmp	.+142    	; 0x23d0 <_ZL8nextNotev+0x1b2>
    2342:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <_ZL9getNumberv>
    2346:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_ZL6volume+0x1>
    234a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_ZL6volume>
    234e:	a3 cf       	rjmp	.-186    	; 0x2296 <_ZL8nextNotev+0x78>
    2350:	9a 94       	dec	r9
    2352:	a1 cf       	rjmp	.-190    	; 0x2296 <_ZL8nextNotev+0x78>
    2354:	10 e0       	ldi	r17, 0x00	; 0
    2356:	20 c0       	rjmp	.+64     	; 0x2398 <_ZL8nextNotev+0x17a>
    2358:	10 e0       	ldi	r17, 0x00	; 0
    235a:	84 e0       	ldi	r24, 0x04	; 4
    235c:	43 c0       	rjmp	.+134    	; 0x23e4 <_ZL8nextNotev+0x1c6>
    235e:	10 e0       	ldi	r17, 0x00	; 0
    2360:	85 e0       	ldi	r24, 0x05	; 5
    2362:	40 c0       	rjmp	.+128    	; 0x23e4 <_ZL8nextNotev+0x1c6>
    2364:	10 e0       	ldi	r17, 0x00	; 0
    2366:	87 e0       	ldi	r24, 0x07	; 7
    2368:	3d c0       	rjmp	.+122    	; 0x23e4 <_ZL8nextNotev+0x1c6>
    236a:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <_ZL16currentCharacterv>
    236e:	8c 36       	cpi	r24, 0x6C	; 108
    2370:	19 f4       	brne	.+6      	; 0x2378 <_ZL8nextNotev+0x15a>
    2372:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <_ZL8staccato>
    2376:	04 c0       	rjmp	.+8      	; 0x2380 <_ZL8nextNotev+0x162>
    2378:	70 92 90 01 	sts	0x0190, r7	; 0x800190 <_ZL8staccato>
    237c:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <_ZL22staccato_rest_duration>
    2380:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <__data_end>
    2384:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <__data_end+0x1>
    2388:	2f 5f       	subi	r18, 0xFF	; 255
    238a:	3f 4f       	sbci	r19, 0xFF	; 255
    238c:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    2390:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    2394:	80 cf       	rjmp	.-256    	; 0x2296 <_ZL8nextNotev+0x78>
    2396:	11 e0       	ldi	r17, 0x01	; 1
    2398:	80 e0       	ldi	r24, 0x00	; 0
    239a:	24 c0       	rjmp	.+72     	; 0x23e4 <_ZL8nextNotev+0x1c6>
    239c:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <_ZL9getNumberv>
    23a0:	bc 01       	movw	r22, r24
    23a2:	c5 01       	movw	r24, r10
    23a4:	0e 94 bc 1c 	call	0x3978	; 0x3978 <__udivmodhi4>
    23a8:	66 9e       	mul	r6, r22
    23aa:	c0 01       	movw	r24, r0
    23ac:	67 9e       	mul	r6, r23
    23ae:	90 0d       	add	r25, r0
    23b0:	11 24       	eor	r1, r1
    23b2:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_ZL19whole_note_duration+0x1>
    23b6:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_ZL19whole_note_duration>
    23ba:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <_ZL9note_type>
    23be:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <_ZL9note_type+0x1>
    23c2:	0e 94 bc 1c 	call	0x3978	; 0x3978 <__udivmodhi4>
    23c6:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_ZL8duration+0x1>
    23ca:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_ZL8duration>
    23ce:	63 cf       	rjmp	.-314    	; 0x2296 <_ZL8nextNotev+0x78>
    23d0:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <__data_end+0x1>
    23d4:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <__data_end>
    23d8:	69 c0       	rjmp	.+210    	; 0x24ac <_ZL8nextNotev+0x28e>
    23da:	10 e0       	ldi	r17, 0x00	; 0
    23dc:	89 e0       	ldi	r24, 0x09	; 9
    23de:	02 c0       	rjmp	.+4      	; 0x23e4 <_ZL8nextNotev+0x1c6>
    23e0:	10 e0       	ldi	r17, 0x00	; 0
    23e2:	8b e0       	ldi	r24, 0x0B	; 11
    23e4:	08 2f       	mov	r16, r24
    23e6:	9c e0       	ldi	r25, 0x0C	; 12
    23e8:	99 9e       	mul	r9, r25
    23ea:	00 0d       	add	r16, r0
    23ec:	11 24       	eor	r1, r1
    23ee:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <_ZL16currentCharacterv>
    23f2:	98 2f       	mov	r25, r24
    23f4:	97 7f       	andi	r25, 0xF7	; 247
    23f6:	93 32       	cpi	r25, 0x23	; 35
    23f8:	61 f4       	brne	.+24     	; 0x2412 <_ZL8nextNotev+0x1f4>
    23fa:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <__data_end>
    23fe:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <__data_end+0x1>
    2402:	2f 5f       	subi	r18, 0xFF	; 255
    2404:	3f 4f       	sbci	r19, 0xFF	; 255
    2406:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    240a:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    240e:	0f 5f       	subi	r16, 0xFF	; 255
    2410:	ee cf       	rjmp	.-36     	; 0x23ee <_ZL8nextNotev+0x1d0>
    2412:	8d 32       	cpi	r24, 0x2D	; 45
    2414:	71 f4       	brne	.+28     	; 0x2432 <_ZL8nextNotev+0x214>
    2416:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <__data_end>
    241a:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <__data_end+0x1>
    241e:	2f 5f       	subi	r18, 0xFF	; 255
    2420:	3f 4f       	sbci	r19, 0xFF	; 255
    2422:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    2426:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    242a:	01 50       	subi	r16, 0x01	; 1
    242c:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <_ZL16currentCharacterv>
    2430:	f0 cf       	rjmp	.-32     	; 0x2412 <_ZL8nextNotev+0x1f4>
    2432:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <_ZL8duration>
    2436:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <_ZL8duration+0x1>
    243a:	81 53       	subi	r24, 0x31	; 49
    243c:	88 30       	cpi	r24, 0x08	; 8
    243e:	50 f4       	brcc	.+20     	; 0x2454 <_ZL8nextNotev+0x236>
    2440:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    2444:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    2448:	0e 94 c0 0f 	call	0x1f80	; 0x1f80 <_ZL9getNumberv>
    244c:	bc 01       	movw	r22, r24
    244e:	c7 01       	movw	r24, r14
    2450:	0e 94 bc 1c 	call	0x3978	; 0x3978 <__udivmodhi4>
    2454:	7b 01       	movw	r14, r22
    2456:	f6 94       	lsr	r15
    2458:	e7 94       	ror	r14
    245a:	69 83       	std	Y+1, r22	; 0x01
    245c:	7a 83       	std	Y+2, r23	; 0x02
    245e:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <_ZL16currentCharacterv>
    2462:	69 81       	ldd	r22, Y+1	; 0x01
    2464:	7a 81       	ldd	r23, Y+2	; 0x02
    2466:	8e 32       	cpi	r24, 0x2E	; 46
    2468:	69 f4       	brne	.+26     	; 0x2484 <_ZL8nextNotev+0x266>
    246a:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <__data_end>
    246e:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <__data_end+0x1>
    2472:	2f 5f       	subi	r18, 0xFF	; 255
    2474:	3f 4f       	sbci	r19, 0xFF	; 255
    2476:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    247a:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    247e:	6e 0d       	add	r22, r14
    2480:	7f 1d       	adc	r23, r15
    2482:	e9 cf       	rjmp	.-46     	; 0x2456 <_ZL8nextNotev+0x238>
    2484:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <_ZL8staccato>
    2488:	88 23       	and	r24, r24
    248a:	39 f0       	breq	.+14     	; 0x249a <_ZL8nextNotev+0x27c>
    248c:	9b 01       	movw	r18, r22
    248e:	36 95       	lsr	r19
    2490:	27 95       	ror	r18
    2492:	20 93 8f 01 	sts	0x018F, r18	; 0x80018f <_ZL22staccato_rest_duration>
    2496:	62 1b       	sub	r22, r18
    2498:	71 09       	sbc	r23, r1
    249a:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <_ZL6volume>
    249e:	11 23       	and	r17, r17
    24a0:	11 f0       	breq	.+4      	; 0x24a6 <_ZL8nextNotev+0x288>
    24a2:	8f ef       	ldi	r24, 0xFF	; 255
    24a4:	01 c0       	rjmp	.+2      	; 0x24a8 <_ZL8nextNotev+0x28a>
    24a6:	80 2f       	mov	r24, r16
    24a8:	0e 94 bb 10 	call	0x2176	; 0x2176 <_ZN15OrangutanBuzzer8playNoteEhjh>
    24ac:	22 96       	adiw	r28, 0x02	; 2
    24ae:	e0 e1       	ldi	r30, 0x10	; 16
    24b0:	0c 94 6b 1d 	jmp	0x3ad6	; 0x3ad6 <__epilogue_restores__+0x4>

000024b4 <__vector_13>:
    24b4:	1f 92       	push	r1
    24b6:	0f 92       	push	r0
    24b8:	0f b6       	in	r0, 0x3f	; 63
    24ba:	0f 92       	push	r0
    24bc:	11 24       	eor	r1, r1
    24be:	2f 93       	push	r18
    24c0:	3f 93       	push	r19
    24c2:	4f 93       	push	r20
    24c4:	5f 93       	push	r21
    24c6:	6f 93       	push	r22
    24c8:	7f 93       	push	r23
    24ca:	8f 93       	push	r24
    24cc:	9f 93       	push	r25
    24ce:	af 93       	push	r26
    24d0:	bf 93       	push	r27
    24d2:	ef 93       	push	r30
    24d4:	ff 93       	push	r31
    24d6:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <_ZL13buzzerTimeout>
    24da:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <_ZL13buzzerTimeout+0x1>
    24de:	9c 01       	movw	r18, r24
    24e0:	21 50       	subi	r18, 0x01	; 1
    24e2:	31 09       	sbc	r19, r1
    24e4:	30 93 94 01 	sts	0x0194, r19	; 0x800194 <_ZL13buzzerTimeout+0x1>
    24e8:	20 93 93 01 	sts	0x0193, r18	; 0x800193 <_ZL13buzzerTimeout>
    24ec:	89 2b       	or	r24, r25
    24ee:	11 f5       	brne	.+68     	; 0x2534 <__vector_13+0x80>
    24f0:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    24f4:	78 94       	sei
    24f6:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    24fa:	88 7f       	andi	r24, 0xF8	; 248
    24fc:	81 60       	ori	r24, 0x01	; 1
    24fe:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    2502:	80 e1       	ldi	r24, 0x10	; 16
    2504:	97 e2       	ldi	r25, 0x27	; 39
    2506:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    250a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    250e:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    2512:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    2516:	81 e0       	ldi	r24, 0x01	; 1
    2518:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <buzzerFinished>
    251c:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <__data_end>
    2520:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <__data_end+0x1>
    2524:	89 2b       	or	r24, r25
    2526:	31 f0       	breq	.+12     	; 0x2534 <__vector_13+0x80>
    2528:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <_ZL17play_mode_setting>
    252c:	81 11       	cpse	r24, r1
    252e:	02 c0       	rjmp	.+4      	; 0x2534 <__vector_13+0x80>
    2530:	0e 94 0f 11 	call	0x221e	; 0x221e <_ZL8nextNotev>
    2534:	ff 91       	pop	r31
    2536:	ef 91       	pop	r30
    2538:	bf 91       	pop	r27
    253a:	af 91       	pop	r26
    253c:	9f 91       	pop	r25
    253e:	8f 91       	pop	r24
    2540:	7f 91       	pop	r23
    2542:	6f 91       	pop	r22
    2544:	5f 91       	pop	r21
    2546:	4f 91       	pop	r20
    2548:	3f 91       	pop	r19
    254a:	2f 91       	pop	r18
    254c:	0f 90       	pop	r0
    254e:	0f be       	out	0x3f, r0	; 63
    2550:	0f 90       	pop	r0
    2552:	1f 90       	pop	r1
    2554:	18 95       	reti

00002556 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    2556:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    255a:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <__data_end+0x1>
    255e:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <__data_end>
    2562:	81 e0       	ldi	r24, 0x01	; 1
    2564:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <_ZL17use_program_space>
    2568:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <_ZL22staccato_rest_duration>
    256c:	0e 94 0f 11 	call	0x221e	; 0x221e <_ZL8nextNotev>
    2570:	08 95       	ret

00002572 <play_from_program_space>:
    2572:	0e 94 ab 12 	call	0x2556	; 0x2556 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    2576:	08 95       	ret

00002578 <delay_us.constprop.0>:
    2578:	81 e0       	ldi	r24, 0x01	; 1
    257a:	90 e0       	ldi	r25, 0x00	; 0
    257c:	6f 93       	push	r22
    257e:	64 e0       	ldi	r22, 0x04	; 4
    2580:	6a 95       	dec	r22
    2582:	f1 f7       	brne	.-4      	; 0x2580 <delay_us.constprop.0+0x8>
    2584:	6f 91       	pop	r22
    2586:	01 97       	sbiw	r24, 0x01	; 1
    2588:	c9 f7       	brne	.-14     	; 0x257c <delay_us.constprop.0+0x4>
    258a:	08 95       	ret

0000258c <_ZN12OrangutanLCD8busyWaitEv>:
    258c:	0f 93       	push	r16
    258e:	1f 93       	push	r17
    2590:	cf 93       	push	r28
    2592:	df 93       	push	r29
    2594:	1a b1       	in	r17, 0x0a	; 10
    2596:	57 98       	cbi	0x0a, 7	; 10
    2598:	5a 98       	cbi	0x0b, 2	; 11
    259a:	28 9a       	sbi	0x05, 0	; 5
    259c:	c0 e0       	ldi	r28, 0x00	; 0
    259e:	d0 e0       	ldi	r29, 0x00	; 0
    25a0:	0e 94 bc 12 	call	0x2578	; 0x2578 <delay_us.constprop.0>
    25a4:	5c 9a       	sbi	0x0b, 4	; 11
    25a6:	0e 94 bc 12 	call	0x2578	; 0x2578 <delay_us.constprop.0>
    25aa:	09 b1       	in	r16, 0x09	; 9
    25ac:	5c 98       	cbi	0x0b, 4	; 11
    25ae:	0e 94 bc 12 	call	0x2578	; 0x2578 <delay_us.constprop.0>
    25b2:	5c 9a       	sbi	0x0b, 4	; 11
    25b4:	0e 94 bc 12 	call	0x2578	; 0x2578 <delay_us.constprop.0>
    25b8:	5c 98       	cbi	0x0b, 4	; 11
    25ba:	24 96       	adiw	r28, 0x04	; 4
    25bc:	07 ff       	sbrs	r16, 7
    25be:	10 c0       	rjmp	.+32     	; 0x25e0 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    25c0:	ae 01       	movw	r20, r28
    25c2:	60 e0       	ldi	r22, 0x00	; 0
    25c4:	70 e0       	ldi	r23, 0x00	; 0
    25c6:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <lcdTimeout>
    25ca:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <lcdTimeout+0x1>
    25ce:	a0 91 97 01 	lds	r26, 0x0197	; 0x800197 <lcdTimeout+0x2>
    25d2:	b0 91 98 01 	lds	r27, 0x0198	; 0x800198 <lcdTimeout+0x3>
    25d6:	48 17       	cp	r20, r24
    25d8:	59 07       	cpc	r21, r25
    25da:	6a 07       	cpc	r22, r26
    25dc:	7b 07       	cpc	r23, r27
    25de:	00 f3       	brcs	.-64     	; 0x25a0 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    25e0:	1a b9       	out	0x0a, r17	; 10
    25e2:	df 91       	pop	r29
    25e4:	cf 91       	pop	r28
    25e6:	1f 91       	pop	r17
    25e8:	0f 91       	pop	r16
    25ea:	08 95       	ret

000025ec <_ZN12OrangutanLCD8sendDataEh>:
    25ec:	95 b1       	in	r25, 0x05	; 5
    25ee:	28 2f       	mov	r18, r24
    25f0:	21 70       	andi	r18, 0x01	; 1
    25f2:	30 e0       	ldi	r19, 0x00	; 0
    25f4:	22 0f       	add	r18, r18
    25f6:	33 1f       	adc	r19, r19
    25f8:	48 2f       	mov	r20, r24
    25fa:	46 70       	andi	r20, 0x06	; 6
    25fc:	68 e0       	ldi	r22, 0x08	; 8
    25fe:	46 9f       	mul	r20, r22
    2600:	a0 01       	movw	r20, r0
    2602:	11 24       	eor	r1, r1
    2604:	24 2b       	or	r18, r20
    2606:	9d 7c       	andi	r25, 0xCD	; 205
    2608:	29 2b       	or	r18, r25
    260a:	25 b9       	out	0x05, r18	; 5
    260c:	9b b1       	in	r25, 0x0b	; 11
    260e:	88 70       	andi	r24, 0x08	; 8
    2610:	82 95       	swap	r24
    2612:	80 7f       	andi	r24, 0xF0	; 240
    2614:	9f 77       	andi	r25, 0x7F	; 127
    2616:	89 2b       	or	r24, r25
    2618:	8b b9       	out	0x0b, r24	; 11
    261a:	5c 9a       	sbi	0x0b, 4	; 11
    261c:	0e 94 bc 12 	call	0x2578	; 0x2578 <delay_us.constprop.0>
    2620:	5c 98       	cbi	0x0b, 4	; 11
    2622:	0e 94 bc 12 	call	0x2578	; 0x2578 <delay_us.constprop.0>
    2626:	08 95       	ret

00002628 <_ZN12OrangutanLCD4sendEhhh>:
    2628:	a0 e0       	ldi	r26, 0x00	; 0
    262a:	b0 e0       	ldi	r27, 0x00	; 0
    262c:	ea e1       	ldi	r30, 0x1A	; 26
    262e:	f3 e1       	ldi	r31, 0x13	; 19
    2630:	0c 94 58 1d 	jmp	0x3ab0	; 0x3ab0 <__prologue_saves__+0x16>
    2634:	c8 2f       	mov	r28, r24
    2636:	d6 2e       	mov	r13, r22
    2638:	e4 2e       	mov	r14, r20
    263a:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <_ZZN12OrangutanLCD4initEvE11initialized>
    263e:	81 11       	cpse	r24, r1
    2640:	05 c0       	rjmp	.+10     	; 0x264c <_ZN12OrangutanLCD4sendEhhh+0x24>
    2642:	81 e0       	ldi	r24, 0x01	; 1
    2644:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <_ZZN12OrangutanLCD4initEvE11initialized>
    2648:	0e 94 5d 13 	call	0x26ba	; 0x26ba <_ZN12OrangutanLCD5init2Ev>
    264c:	0e 94 c6 12 	call	0x258c	; 0x258c <_ZN12OrangutanLCD8busyWaitEv>
    2650:	14 b1       	in	r17, 0x04	; 4
    2652:	d5 b1       	in	r29, 0x05	; 5
    2654:	fa b0       	in	r15, 0x0a	; 10
    2656:	0b b1       	in	r16, 0x0b	; 11
    2658:	28 98       	cbi	0x05, 0	; 5
    265a:	dd 20       	and	r13, r13
    265c:	11 f0       	breq	.+4      	; 0x2662 <_ZN12OrangutanLCD4sendEhhh+0x3a>
    265e:	5a 9a       	sbi	0x0b, 2	; 11
    2660:	01 c0       	rjmp	.+2      	; 0x2664 <_ZN12OrangutanLCD4sendEhhh+0x3c>
    2662:	5a 98       	cbi	0x0b, 2	; 11
    2664:	94 b1       	in	r25, 0x04	; 4
    2666:	92 63       	ori	r25, 0x32	; 50
    2668:	94 b9       	out	0x04, r25	; 4
    266a:	57 9a       	sbi	0x0a, 7	; 10
    266c:	81 e0       	ldi	r24, 0x01	; 1
    266e:	e8 16       	cp	r14, r24
    2670:	29 f0       	breq	.+10     	; 0x267c <_ZN12OrangutanLCD4sendEhhh+0x54>
    2672:	8c 2f       	mov	r24, r28
    2674:	82 95       	swap	r24
    2676:	8f 70       	andi	r24, 0x0F	; 15
    2678:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN12OrangutanLCD8sendDataEh>
    267c:	8c 2f       	mov	r24, r28
    267e:	8f 70       	andi	r24, 0x0F	; 15
    2680:	0e 94 f6 12 	call	0x25ec	; 0x25ec <_ZN12OrangutanLCD8sendDataEh>
    2684:	fa b8       	out	0x0a, r15	; 10
    2686:	0b b9       	out	0x0b, r16	; 11
    2688:	14 b9       	out	0x04, r17	; 4
    268a:	d5 b9       	out	0x05, r29	; 5
    268c:	cd b7       	in	r28, 0x3d	; 61
    268e:	de b7       	in	r29, 0x3e	; 62
    2690:	e7 e0       	ldi	r30, 0x07	; 7
    2692:	0c 94 74 1d 	jmp	0x3ae8	; 0x3ae8 <__epilogue_restores__+0x16>

00002696 <_ZN12OrangutanLCD8send_cmdEh>:
    2696:	42 e0       	ldi	r20, 0x02	; 2
    2698:	60 e0       	ldi	r22, 0x00	; 0
    269a:	0e 94 14 13 	call	0x2628	; 0x2628 <_ZN12OrangutanLCD4sendEhhh>
    269e:	08 95       	ret

000026a0 <_ZN12OrangutanLCD9send_dataEh>:
    26a0:	42 e0       	ldi	r20, 0x02	; 2
    26a2:	61 e0       	ldi	r22, 0x01	; 1
    26a4:	0e 94 14 13 	call	0x2628	; 0x2628 <_ZN12OrangutanLCD4sendEhhh>
    26a8:	08 95       	ret

000026aa <print_character>:
    26aa:	0e 94 50 13 	call	0x26a0	; 0x26a0 <_ZN12OrangutanLCD9send_dataEh>
    26ae:	08 95       	ret

000026b0 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    26b0:	41 e0       	ldi	r20, 0x01	; 1
    26b2:	60 e0       	ldi	r22, 0x00	; 0
    26b4:	0e 94 14 13 	call	0x2628	; 0x2628 <_ZN12OrangutanLCD4sendEhhh>
    26b8:	08 95       	ret

000026ba <_ZN12OrangutanLCD5init2Ev>:
    26ba:	80 e1       	ldi	r24, 0x10	; 16
    26bc:	97 e2       	ldi	r25, 0x27	; 39
    26be:	a0 e0       	ldi	r26, 0x00	; 0
    26c0:	b0 e0       	ldi	r27, 0x00	; 0
    26c2:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <lcdTimeout>
    26c6:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <lcdTimeout+0x1>
    26ca:	a0 93 97 01 	sts	0x0197, r26	; 0x800197 <lcdTimeout+0x2>
    26ce:	b0 93 98 01 	sts	0x0198, r27	; 0x800198 <lcdTimeout+0x3>
    26d2:	52 9a       	sbi	0x0a, 2	; 10
    26d4:	20 9a       	sbi	0x04, 0	; 4
    26d6:	54 9a       	sbi	0x0a, 4	; 10
    26d8:	8e e1       	ldi	r24, 0x1E	; 30
    26da:	90 e0       	ldi	r25, 0x00	; 0
    26dc:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <delay_ms>
    26e0:	83 e0       	ldi	r24, 0x03	; 3
    26e2:	0e 94 58 13 	call	0x26b0	; 0x26b0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    26e6:	86 e0       	ldi	r24, 0x06	; 6
    26e8:	90 e0       	ldi	r25, 0x00	; 0
    26ea:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <delay_ms>
    26ee:	83 e0       	ldi	r24, 0x03	; 3
    26f0:	0e 94 58 13 	call	0x26b0	; 0x26b0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    26f4:	82 e0       	ldi	r24, 0x02	; 2
    26f6:	90 e0       	ldi	r25, 0x00	; 0
    26f8:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <delay_ms>
    26fc:	83 e0       	ldi	r24, 0x03	; 3
    26fe:	0e 94 58 13 	call	0x26b0	; 0x26b0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    2702:	82 e0       	ldi	r24, 0x02	; 2
    2704:	90 e0       	ldi	r25, 0x00	; 0
    2706:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <delay_ms>
    270a:	82 e0       	ldi	r24, 0x02	; 2
    270c:	0e 94 58 13 	call	0x26b0	; 0x26b0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    2710:	82 e0       	ldi	r24, 0x02	; 2
    2712:	90 e0       	ldi	r25, 0x00	; 0
    2714:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <delay_ms>
    2718:	88 e2       	ldi	r24, 0x28	; 40
    271a:	0e 94 4b 13 	call	0x2696	; 0x2696 <_ZN12OrangutanLCD8send_cmdEh>
    271e:	88 e0       	ldi	r24, 0x08	; 8
    2720:	0e 94 4b 13 	call	0x2696	; 0x2696 <_ZN12OrangutanLCD8send_cmdEh>
    2724:	81 e0       	ldi	r24, 0x01	; 1
    2726:	0e 94 4b 13 	call	0x2696	; 0x2696 <_ZN12OrangutanLCD8send_cmdEh>
    272a:	86 e0       	ldi	r24, 0x06	; 6
    272c:	0e 94 4b 13 	call	0x2696	; 0x2696 <_ZN12OrangutanLCD8send_cmdEh>
    2730:	8c e0       	ldi	r24, 0x0C	; 12
    2732:	0e 94 4b 13 	call	0x2696	; 0x2696 <_ZN12OrangutanLCD8send_cmdEh>
    2736:	08 95       	ret

00002738 <_ZN12OrangutanLCD5clearEv>:
    2738:	81 e0       	ldi	r24, 0x01	; 1
    273a:	0e 94 4b 13 	call	0x2696	; 0x2696 <_ZN12OrangutanLCD8send_cmdEh>
    273e:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <printf_chars>
    2742:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <printf_chars+0x1>
    2746:	89 2b       	or	r24, r25
    2748:	f9 f0       	breq	.+62     	; 0x2788 <_ZN12OrangutanLCD5clearEv+0x50>
    274a:	60 e0       	ldi	r22, 0x00	; 0
    274c:	a0 e2       	ldi	r26, 0x20	; 32
    274e:	26 2f       	mov	r18, r22
    2750:	30 e0       	ldi	r19, 0x00	; 0
    2752:	70 91 0c 01 	lds	r23, 0x010C	; 0x80010c <numLCDCols>
    2756:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <numLCDRows>
    275a:	90 e0       	ldi	r25, 0x00	; 0
    275c:	01 97       	sbiw	r24, 0x01	; 1
    275e:	78 9f       	mul	r23, r24
    2760:	a0 01       	movw	r20, r0
    2762:	79 9f       	mul	r23, r25
    2764:	50 0d       	add	r21, r0
    2766:	11 24       	eor	r1, r1
    2768:	24 17       	cp	r18, r20
    276a:	35 07       	cpc	r19, r21
    276c:	4c f4       	brge	.+18     	; 0x2780 <_ZN12OrangutanLCD5clearEv+0x48>
    276e:	e0 91 9b 01 	lds	r30, 0x019B	; 0x80019b <printf_chars>
    2772:	f0 91 9c 01 	lds	r31, 0x019C	; 0x80019c <printf_chars+0x1>
    2776:	e2 0f       	add	r30, r18
    2778:	f3 1f       	adc	r31, r19
    277a:	a0 83       	st	Z, r26
    277c:	6f 5f       	subi	r22, 0xFF	; 255
    277e:	e7 cf       	rjmp	.-50     	; 0x274e <_ZN12OrangutanLCD5clearEv+0x16>
    2780:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <col>
    2784:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <row>
    2788:	08 95       	ret

0000278a <clear>:
    278a:	0e 94 9c 13 	call	0x2738	; 0x2738 <_ZN12OrangutanLCD5clearEv>
    278e:	08 95       	ret

00002790 <_ZN12OrangutanLCD5printEPKc>:
    2790:	cf 93       	push	r28
    2792:	df 93       	push	r29
    2794:	ec 01       	movw	r28, r24
    2796:	89 91       	ld	r24, Y+
    2798:	88 23       	and	r24, r24
    279a:	19 f0       	breq	.+6      	; 0x27a2 <_ZN12OrangutanLCD5printEPKc+0x12>
    279c:	0e 94 50 13 	call	0x26a0	; 0x26a0 <_ZN12OrangutanLCD9send_dataEh>
    27a0:	fa cf       	rjmp	.-12     	; 0x2796 <_ZN12OrangutanLCD5printEPKc+0x6>
    27a2:	df 91       	pop	r29
    27a4:	cf 91       	pop	r28
    27a6:	08 95       	ret

000027a8 <print>:
    27a8:	0e 94 c8 13 	call	0x2790	; 0x2790 <_ZN12OrangutanLCD5printEPKc>
    27ac:	08 95       	ret

000027ae <_ZN12OrangutanLCD5printEm>:
    27ae:	aa e0       	ldi	r26, 0x0A	; 10
    27b0:	b0 e0       	ldi	r27, 0x00	; 0
    27b2:	ed ed       	ldi	r30, 0xDD	; 221
    27b4:	f3 e1       	ldi	r31, 0x13	; 19
    27b6:	0c 94 57 1d 	jmp	0x3aae	; 0x3aae <__prologue_saves__+0x14>
    27ba:	1a e0       	ldi	r17, 0x0A	; 10
    27bc:	5a e0       	ldi	r21, 0x0A	; 10
    27be:	c5 2e       	mov	r12, r21
    27c0:	d1 2c       	mov	r13, r1
    27c2:	e1 2c       	mov	r14, r1
    27c4:	f1 2c       	mov	r15, r1
    27c6:	06 2f       	mov	r16, r22
    27c8:	a7 01       	movw	r20, r14
    27ca:	96 01       	movw	r18, r12
    27cc:	0e 94 e4 1c 	call	0x39c8	; 0x39c8 <__udivmodsi4>
    27d0:	ca 01       	movw	r24, r20
    27d2:	b9 01       	movw	r22, r18
    27d4:	11 50       	subi	r17, 0x01	; 1
    27d6:	e1 e0       	ldi	r30, 0x01	; 1
    27d8:	f0 e0       	ldi	r31, 0x00	; 0
    27da:	ec 0f       	add	r30, r28
    27dc:	fd 1f       	adc	r31, r29
    27de:	e1 0f       	add	r30, r17
    27e0:	f1 1d       	adc	r31, r1
    27e2:	00 5d       	subi	r16, 0xD0	; 208
    27e4:	2a e0       	ldi	r18, 0x0A	; 10
    27e6:	62 9f       	mul	r22, r18
    27e8:	00 19       	sub	r16, r0
    27ea:	11 24       	eor	r1, r1
    27ec:	00 83       	st	Z, r16
    27ee:	61 15       	cp	r22, r1
    27f0:	71 05       	cpc	r23, r1
    27f2:	81 05       	cpc	r24, r1
    27f4:	91 05       	cpc	r25, r1
    27f6:	39 f7       	brne	.-50     	; 0x27c6 <_ZN12OrangutanLCD5printEm+0x18>
    27f8:	1a 30       	cpi	r17, 0x0A	; 10
    27fa:	58 f4       	brcc	.+22     	; 0x2812 <_ZN12OrangutanLCD5printEm+0x64>
    27fc:	e1 e0       	ldi	r30, 0x01	; 1
    27fe:	f0 e0       	ldi	r31, 0x00	; 0
    2800:	ec 0f       	add	r30, r28
    2802:	fd 1f       	adc	r31, r29
    2804:	e1 0f       	add	r30, r17
    2806:	f1 1d       	adc	r31, r1
    2808:	80 81       	ld	r24, Z
    280a:	0e 94 50 13 	call	0x26a0	; 0x26a0 <_ZN12OrangutanLCD9send_dataEh>
    280e:	1f 5f       	subi	r17, 0xFF	; 255
    2810:	f3 cf       	rjmp	.-26     	; 0x27f8 <_ZN12OrangutanLCD5printEm+0x4a>
    2812:	2a 96       	adiw	r28, 0x0a	; 10
    2814:	e8 e0       	ldi	r30, 0x08	; 8
    2816:	0c 94 73 1d 	jmp	0x3ae6	; 0x3ae6 <__epilogue_restores__+0x14>

0000281a <_ZN12OrangutanLCD5printEl>:
    281a:	cf 92       	push	r12
    281c:	df 92       	push	r13
    281e:	ef 92       	push	r14
    2820:	ff 92       	push	r15
    2822:	6b 01       	movw	r12, r22
    2824:	7c 01       	movw	r14, r24
    2826:	97 ff       	sbrs	r25, 7
    2828:	0b c0       	rjmp	.+22     	; 0x2840 <_ZN12OrangutanLCD5printEl+0x26>
    282a:	f0 94       	com	r15
    282c:	e0 94       	com	r14
    282e:	d0 94       	com	r13
    2830:	c0 94       	com	r12
    2832:	c1 1c       	adc	r12, r1
    2834:	d1 1c       	adc	r13, r1
    2836:	e1 1c       	adc	r14, r1
    2838:	f1 1c       	adc	r15, r1
    283a:	8d e2       	ldi	r24, 0x2D	; 45
    283c:	0e 94 50 13 	call	0x26a0	; 0x26a0 <_ZN12OrangutanLCD9send_dataEh>
    2840:	c7 01       	movw	r24, r14
    2842:	b6 01       	movw	r22, r12
    2844:	0e 94 d7 13 	call	0x27ae	; 0x27ae <_ZN12OrangutanLCD5printEm>
    2848:	ff 90       	pop	r15
    284a:	ef 90       	pop	r14
    284c:	df 90       	pop	r13
    284e:	cf 90       	pop	r12
    2850:	08 95       	ret

00002852 <print_long>:
    2852:	0e 94 0d 14 	call	0x281a	; 0x281a <_ZN12OrangutanLCD5printEl>
    2856:	08 95       	ret

00002858 <_ZN12OrangutanLCD6gotoXYEhh>:
    2858:	a5 e0       	ldi	r26, 0x05	; 5
    285a:	b0 e0       	ldi	r27, 0x00	; 0
    285c:	e2 e3       	ldi	r30, 0x32	; 50
    285e:	f4 e1       	ldi	r31, 0x14	; 20
    2860:	0c 94 5c 1d 	jmp	0x3ab8	; 0x3ab8 <__prologue_saves__+0x1e>
    2864:	18 2f       	mov	r17, r24
    2866:	80 e8       	ldi	r24, 0x80	; 128
    2868:	89 83       	std	Y+1, r24	; 0x01
    286a:	80 ec       	ldi	r24, 0xC0	; 192
    286c:	8a 83       	std	Y+2, r24	; 0x02
    286e:	84 e9       	ldi	r24, 0x94	; 148
    2870:	8b 83       	std	Y+3, r24	; 0x03
    2872:	84 ed       	ldi	r24, 0xD4	; 212
    2874:	8c 83       	std	Y+4, r24	; 0x04
    2876:	fe 01       	movw	r30, r28
    2878:	e6 0f       	add	r30, r22
    287a:	f1 1d       	adc	r31, r1
    287c:	81 81       	ldd	r24, Z+1	; 0x01
    287e:	81 0f       	add	r24, r17
    2880:	6d 83       	std	Y+5, r22	; 0x05
    2882:	0e 94 4b 13 	call	0x2696	; 0x2696 <_ZN12OrangutanLCD8send_cmdEh>
    2886:	10 93 99 01 	sts	0x0199, r17	; 0x800199 <col>
    288a:	6d 81       	ldd	r22, Y+5	; 0x05
    288c:	60 93 9a 01 	sts	0x019A, r22	; 0x80019a <row>
    2890:	25 96       	adiw	r28, 0x05	; 5
    2892:	e3 e0       	ldi	r30, 0x03	; 3
    2894:	0c 94 78 1d 	jmp	0x3af0	; 0x3af0 <__epilogue_restores__+0x1e>

00002898 <lcd_goto_xy>:
    2898:	0e 94 2c 14 	call	0x2858	; 0x2858 <_ZN12OrangutanLCD6gotoXYEhh>
    289c:	08 95       	ret

0000289e <_ZN16OrangutanDigital9setOutputEhh>:
    289e:	88 30       	cpi	r24, 0x08	; 8
    28a0:	58 f4       	brcc	.+22     	; 0x28b8 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    28a2:	91 e0       	ldi	r25, 0x01	; 1
    28a4:	01 c0       	rjmp	.+2      	; 0x28a8 <_ZN16OrangutanDigital9setOutputEhh+0xa>
    28a6:	99 0f       	add	r25, r25
    28a8:	8a 95       	dec	r24
    28aa:	ea f7       	brpl	.-6      	; 0x28a6 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    28ac:	89 2f       	mov	r24, r25
    28ae:	aa e2       	ldi	r26, 0x2A	; 42
    28b0:	b0 e0       	ldi	r27, 0x00	; 0
    28b2:	eb e2       	ldi	r30, 0x2B	; 43
    28b4:	f0 e0       	ldi	r31, 0x00	; 0
    28b6:	21 c0       	rjmp	.+66     	; 0x28fa <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    28b8:	8e 30       	cpi	r24, 0x0E	; 14
    28ba:	60 f4       	brcc	.+24     	; 0x28d4 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    28bc:	98 ef       	ldi	r25, 0xF8	; 248
    28be:	98 0f       	add	r25, r24
    28c0:	81 e0       	ldi	r24, 0x01	; 1
    28c2:	01 c0       	rjmp	.+2      	; 0x28c6 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    28c4:	88 0f       	add	r24, r24
    28c6:	9a 95       	dec	r25
    28c8:	ea f7       	brpl	.-6      	; 0x28c4 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    28ca:	a4 e2       	ldi	r26, 0x24	; 36
    28cc:	b0 e0       	ldi	r27, 0x00	; 0
    28ce:	e5 e2       	ldi	r30, 0x25	; 37
    28d0:	f0 e0       	ldi	r31, 0x00	; 0
    28d2:	13 c0       	rjmp	.+38     	; 0x28fa <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    28d4:	85 31       	cpi	r24, 0x15	; 21
    28d6:	60 f4       	brcc	.+24     	; 0x28f0 <_ZN16OrangutanDigital9setOutputEhh+0x52>
    28d8:	92 ef       	ldi	r25, 0xF2	; 242
    28da:	98 0f       	add	r25, r24
    28dc:	81 e0       	ldi	r24, 0x01	; 1
    28de:	01 c0       	rjmp	.+2      	; 0x28e2 <_ZN16OrangutanDigital9setOutputEhh+0x44>
    28e0:	88 0f       	add	r24, r24
    28e2:	9a 95       	dec	r25
    28e4:	ea f7       	brpl	.-6      	; 0x28e0 <_ZN16OrangutanDigital9setOutputEhh+0x42>
    28e6:	a7 e2       	ldi	r26, 0x27	; 39
    28e8:	b0 e0       	ldi	r27, 0x00	; 0
    28ea:	e8 e2       	ldi	r30, 0x28	; 40
    28ec:	f0 e0       	ldi	r31, 0x00	; 0
    28ee:	05 c0       	rjmp	.+10     	; 0x28fa <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    28f0:	80 e0       	ldi	r24, 0x00	; 0
    28f2:	a0 e0       	ldi	r26, 0x00	; 0
    28f4:	b0 e0       	ldi	r27, 0x00	; 0
    28f6:	e0 e0       	ldi	r30, 0x00	; 0
    28f8:	f0 e0       	ldi	r31, 0x00	; 0
    28fa:	6f 3f       	cpi	r22, 0xFF	; 255
    28fc:	19 f4       	brne	.+6      	; 0x2904 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    28fe:	90 81       	ld	r25, Z
    2900:	98 27       	eor	r25, r24
    2902:	09 c0       	rjmp	.+18     	; 0x2916 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    2904:	66 23       	and	r22, r22
    2906:	19 f0       	breq	.+6      	; 0x290e <_ZN16OrangutanDigital9setOutputEhh+0x70>
    2908:	90 81       	ld	r25, Z
    290a:	98 2b       	or	r25, r24
    290c:	04 c0       	rjmp	.+8      	; 0x2916 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    290e:	20 81       	ld	r18, Z
    2910:	98 2f       	mov	r25, r24
    2912:	90 95       	com	r25
    2914:	92 23       	and	r25, r18
    2916:	90 83       	st	Z, r25
    2918:	9c 91       	ld	r25, X
    291a:	98 2b       	or	r25, r24
    291c:	9c 93       	st	X, r25
    291e:	08 95       	ret

00002920 <_ZN15OrangutanMotors5init2Ev>:
    2920:	83 ef       	ldi	r24, 0xF3	; 243
    2922:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2926:	84 bd       	out	0x24, r24	; 36
    2928:	82 e0       	ldi	r24, 0x02	; 2
    292a:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    292e:	85 bd       	out	0x25, r24	; 37
    2930:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    2934:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    2938:	18 bc       	out	0x28, r1	; 40
    293a:	17 bc       	out	0x27, r1	; 39
    293c:	60 e0       	ldi	r22, 0x00	; 0
    293e:	86 e0       	ldi	r24, 0x06	; 6
    2940:	0e 94 4f 14 	call	0x289e	; 0x289e <_ZN16OrangutanDigital9setOutputEhh>
    2944:	60 e0       	ldi	r22, 0x00	; 0
    2946:	85 e0       	ldi	r24, 0x05	; 5
    2948:	0e 94 4f 14 	call	0x289e	; 0x289e <_ZN16OrangutanDigital9setOutputEhh>
    294c:	60 e0       	ldi	r22, 0x00	; 0
    294e:	8b e0       	ldi	r24, 0x0B	; 11
    2950:	0e 94 4f 14 	call	0x289e	; 0x289e <_ZN16OrangutanDigital9setOutputEhh>
    2954:	60 e0       	ldi	r22, 0x00	; 0
    2956:	83 e0       	ldi	r24, 0x03	; 3
    2958:	0e 94 4f 14 	call	0x289e	; 0x289e <_ZN16OrangutanDigital9setOutputEhh>
    295c:	08 95       	ret

0000295e <_ZN15OrangutanMotors4initEv>:
    295e:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <_ZZN15OrangutanMotors4initEvE11initialized>
    2962:	81 11       	cpse	r24, r1
    2964:	05 c0       	rjmp	.+10     	; 0x2970 <_ZN15OrangutanMotors4initEv+0x12>
    2966:	81 e0       	ldi	r24, 0x01	; 1
    2968:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <_ZZN15OrangutanMotors4initEvE11initialized>
    296c:	0e 94 90 14 	call	0x2920	; 0x2920 <_ZN15OrangutanMotors5init2Ev>
    2970:	08 95       	ret

00002972 <_ZN15OrangutanMotors10setM1SpeedEi>:
    2972:	cf 93       	push	r28
    2974:	df 93       	push	r29
    2976:	ec 01       	movw	r28, r24
    2978:	0e 94 af 14 	call	0x295e	; 0x295e <_ZN15OrangutanMotors4initEv>
    297c:	d7 ff       	sbrs	r29, 7
    297e:	05 c0       	rjmp	.+10     	; 0x298a <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    2980:	d1 95       	neg	r29
    2982:	c1 95       	neg	r28
    2984:	d1 09       	sbc	r29, r1
    2986:	81 e0       	ldi	r24, 0x01	; 1
    2988:	01 c0       	rjmp	.+2      	; 0x298c <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    298a:	80 e0       	ldi	r24, 0x00	; 0
    298c:	cf 3f       	cpi	r28, 0xFF	; 255
    298e:	d1 05       	cpc	r29, r1
    2990:	19 f0       	breq	.+6      	; 0x2998 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    2992:	14 f0       	brlt	.+4      	; 0x2998 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    2994:	cf ef       	ldi	r28, 0xFF	; 255
    2996:	d0 e0       	ldi	r29, 0x00	; 0
    2998:	88 23       	and	r24, r24
    299a:	19 f0       	breq	.+6      	; 0x29a2 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    299c:	18 bc       	out	0x28, r1	; 40
    299e:	c7 bd       	out	0x27, r28	; 39
    29a0:	02 c0       	rjmp	.+4      	; 0x29a6 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    29a2:	c8 bd       	out	0x28, r28	; 40
    29a4:	17 bc       	out	0x27, r1	; 39
    29a6:	df 91       	pop	r29
    29a8:	cf 91       	pop	r28
    29aa:	08 95       	ret

000029ac <_ZN15OrangutanMotors10setM2SpeedEi>:
    29ac:	cf 93       	push	r28
    29ae:	df 93       	push	r29
    29b0:	ec 01       	movw	r28, r24
    29b2:	0e 94 af 14 	call	0x295e	; 0x295e <_ZN15OrangutanMotors4initEv>
    29b6:	d7 ff       	sbrs	r29, 7
    29b8:	05 c0       	rjmp	.+10     	; 0x29c4 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    29ba:	d1 95       	neg	r29
    29bc:	c1 95       	neg	r28
    29be:	d1 09       	sbc	r29, r1
    29c0:	81 e0       	ldi	r24, 0x01	; 1
    29c2:	01 c0       	rjmp	.+2      	; 0x29c6 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    29c4:	80 e0       	ldi	r24, 0x00	; 0
    29c6:	cf 3f       	cpi	r28, 0xFF	; 255
    29c8:	d1 05       	cpc	r29, r1
    29ca:	19 f0       	breq	.+6      	; 0x29d2 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    29cc:	14 f0       	brlt	.+4      	; 0x29d2 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    29ce:	cf ef       	ldi	r28, 0xFF	; 255
    29d0:	d0 e0       	ldi	r29, 0x00	; 0
    29d2:	88 23       	and	r24, r24
    29d4:	29 f0       	breq	.+10     	; 0x29e0 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    29d6:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    29da:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    29de:	04 c0       	rjmp	.+8      	; 0x29e8 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    29e0:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    29e4:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    29e8:	df 91       	pop	r29
    29ea:	cf 91       	pop	r28
    29ec:	08 95       	ret

000029ee <_ZN15OrangutanMotors9setSpeedsEii>:
    29ee:	cf 93       	push	r28
    29f0:	df 93       	push	r29
    29f2:	eb 01       	movw	r28, r22
    29f4:	0e 94 b9 14 	call	0x2972	; 0x2972 <_ZN15OrangutanMotors10setM1SpeedEi>
    29f8:	ce 01       	movw	r24, r28
    29fa:	0e 94 d6 14 	call	0x29ac	; 0x29ac <_ZN15OrangutanMotors10setM2SpeedEi>
    29fe:	df 91       	pop	r29
    2a00:	cf 91       	pop	r28
    2a02:	08 95       	ret

00002a04 <set_motors>:
    2a04:	0e 94 f7 14 	call	0x29ee	; 0x29ee <_ZN15OrangutanMotors9setSpeedsEii>
    2a08:	08 95       	ret

00002a0a <_ZN20OrangutanPushbuttons5init2Ev>:
    2a0a:	84 b1       	in	r24, 0x04	; 4
    2a0c:	8d 7c       	andi	r24, 0xCD	; 205
    2a0e:	84 b9       	out	0x04, r24	; 4
    2a10:	85 b1       	in	r24, 0x05	; 5
    2a12:	82 63       	ori	r24, 0x32	; 50
    2a14:	85 b9       	out	0x05, r24	; 5
    2a16:	85 e0       	ldi	r24, 0x05	; 5
    2a18:	90 e0       	ldi	r25, 0x00	; 0
    2a1a:	6f 93       	push	r22
    2a1c:	64 e0       	ldi	r22, 0x04	; 4
    2a1e:	6a 95       	dec	r22
    2a20:	f1 f7       	brne	.-4      	; 0x2a1e <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    2a22:	6f 91       	pop	r22
    2a24:	01 97       	sbiw	r24, 0x01	; 1
    2a26:	c9 f7       	brne	.-14     	; 0x2a1a <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    2a28:	08 95       	ret

00002a2a <_ZN20OrangutanPushbuttons4initEv>:
    2a2a:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    2a2e:	81 11       	cpse	r24, r1
    2a30:	05 c0       	rjmp	.+10     	; 0x2a3c <_ZN20OrangutanPushbuttons4initEv+0x12>
    2a32:	81 e0       	ldi	r24, 0x01	; 1
    2a34:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    2a38:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <_ZN20OrangutanPushbuttons5init2Ev>
    2a3c:	08 95       	ret

00002a3e <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    2a3e:	cf 93       	push	r28
    2a40:	c8 2f       	mov	r28, r24
    2a42:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <_ZN20OrangutanPushbuttons4initEv>
    2a46:	83 b1       	in	r24, 0x03	; 3
    2a48:	8c 23       	and	r24, r28
    2a4a:	e9 f3       	breq	.-6      	; 0x2a46 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    2a4c:	8a e0       	ldi	r24, 0x0A	; 10
    2a4e:	90 e0       	ldi	r25, 0x00	; 0
    2a50:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <delay_ms>
    2a54:	83 b1       	in	r24, 0x03	; 3
    2a56:	8c 23       	and	r24, r28
    2a58:	b1 f3       	breq	.-20     	; 0x2a46 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    2a5a:	83 b1       	in	r24, 0x03	; 3
    2a5c:	8c 23       	and	r24, r28
    2a5e:	cf 91       	pop	r28
    2a60:	08 95       	ret

00002a62 <wait_for_button_release>:
    2a62:	0e 94 1f 15 	call	0x2a3e	; 0x2a3e <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    2a66:	08 95       	ret

00002a68 <_ZN20OrangutanPushbuttons9isPressedEh>:
    2a68:	a1 e0       	ldi	r26, 0x01	; 1
    2a6a:	b0 e0       	ldi	r27, 0x00	; 0
    2a6c:	ea e3       	ldi	r30, 0x3A	; 58
    2a6e:	f5 e1       	ldi	r31, 0x15	; 21
    2a70:	0c 94 5d 1d 	jmp	0x3aba	; 0x3aba <__prologue_saves__+0x20>
    2a74:	89 83       	std	Y+1, r24	; 0x01
    2a76:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <_ZN20OrangutanPushbuttons4initEv>
    2a7a:	93 b1       	in	r25, 0x03	; 3
    2a7c:	90 95       	com	r25
    2a7e:	89 81       	ldd	r24, Y+1	; 0x01
    2a80:	89 23       	and	r24, r25
    2a82:	21 96       	adiw	r28, 0x01	; 1
    2a84:	e2 e0       	ldi	r30, 0x02	; 2
    2a86:	0c 94 79 1d 	jmp	0x3af2	; 0x3af2 <__epilogue_restores__+0x20>

00002a8a <button_is_pressed>:
    2a8a:	0e 94 34 15 	call	0x2a68	; 0x2a68 <_ZN20OrangutanPushbuttons9isPressedEh>
    2a8e:	08 95       	ret

00002a90 <serial_receive_buffer_full>:
    2a90:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <_ZN15OrangutanSerial5portsE+0x2>
    2a94:	81 e0       	ldi	r24, 0x01	; 1
    2a96:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <_ZN15OrangutanSerial5portsE+0x4>
    2a9a:	29 13       	cpse	r18, r25
    2a9c:	80 e0       	ldi	r24, 0x00	; 0
    2a9e:	08 95       	ret

00002aa0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
    2aa0:	28 2f       	mov	r18, r24
    2aa2:	30 e0       	ldi	r19, 0x00	; 0
    2aa4:	9a e0       	ldi	r25, 0x0A	; 10
    2aa6:	89 9f       	mul	r24, r25
    2aa8:	f0 01       	movw	r30, r0
    2aaa:	11 24       	eor	r1, r1
    2aac:	e3 56       	subi	r30, 0x63	; 99
    2aae:	fe 4f       	sbci	r31, 0xFE	; 254
    2ab0:	80 85       	ldd	r24, Z+8	; 0x08
    2ab2:	91 85       	ldd	r25, Z+9	; 0x09
    2ab4:	00 97       	sbiw	r24, 0x00	; 0
    2ab6:	21 f0       	breq	.+8      	; 0x2ac0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    2ab8:	52 81       	ldd	r21, Z+2	; 0x02
    2aba:	44 81       	ldd	r20, Z+4	; 0x04
    2abc:	54 17       	cp	r21, r20
    2abe:	80 f0       	brcs	.+32     	; 0x2ae0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x40>
    2ac0:	8a e0       	ldi	r24, 0x0A	; 10
    2ac2:	82 9f       	mul	r24, r18
    2ac4:	f0 01       	movw	r30, r0
    2ac6:	83 9f       	mul	r24, r19
    2ac8:	f0 0d       	add	r31, r0
    2aca:	11 24       	eor	r1, r1
    2acc:	e3 56       	subi	r30, 0x63	; 99
    2ace:	fe 4f       	sbci	r31, 0xFE	; 254
    2ad0:	92 81       	ldd	r25, Z+2	; 0x02
    2ad2:	84 81       	ldd	r24, Z+4	; 0x04
    2ad4:	98 13       	cpse	r25, r24
    2ad6:	0e c0       	rjmp	.+28     	; 0x2af4 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x54>
    2ad8:	85 81       	ldd	r24, Z+5	; 0x05
    2ada:	81 11       	cpse	r24, r1
    2adc:	0a c0       	rjmp	.+20     	; 0x2af2 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
    2ade:	08 95       	ret
    2ae0:	42 81       	ldd	r20, Z+2	; 0x02
    2ae2:	dc 01       	movw	r26, r24
    2ae4:	a4 0f       	add	r26, r20
    2ae6:	b1 1d       	adc	r27, r1
    2ae8:	6c 93       	st	X, r22
    2aea:	82 81       	ldd	r24, Z+2	; 0x02
    2aec:	8f 5f       	subi	r24, 0xFF	; 255
    2aee:	82 83       	std	Z+2, r24	; 0x02
    2af0:	e7 cf       	rjmp	.-50     	; 0x2ac0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    2af2:	12 82       	std	Z+2, r1	; 0x02
    2af4:	08 95       	ret

00002af6 <_ZN15OrangutanSerial15serial_rx_checkEh>:
    2af6:	cf 93       	push	r28
    2af8:	df 93       	push	r29
    2afa:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2afe:	9f 77       	andi	r25, 0x7F	; 127
    2b00:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b04:	c8 2f       	mov	r28, r24
    2b06:	d0 e0       	ldi	r29, 0x00	; 0
    2b08:	9a e0       	ldi	r25, 0x0A	; 10
    2b0a:	89 9f       	mul	r24, r25
    2b0c:	f0 01       	movw	r30, r0
    2b0e:	11 24       	eor	r1, r1
    2b10:	e3 56       	subi	r30, 0x63	; 99
    2b12:	fe 4f       	sbci	r31, 0xFE	; 254
    2b14:	20 85       	ldd	r18, Z+8	; 0x08
    2b16:	31 85       	ldd	r19, Z+9	; 0x09
    2b18:	23 2b       	or	r18, r19
    2b1a:	41 f0       	breq	.+16     	; 0x2b2c <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2b1c:	22 81       	ldd	r18, Z+2	; 0x02
    2b1e:	94 81       	ldd	r25, Z+4	; 0x04
    2b20:	29 17       	cp	r18, r25
    2b22:	20 f4       	brcc	.+8      	; 0x2b2c <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2b24:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2b28:	97 fd       	sbrc	r25, 7
    2b2a:	11 c0       	rjmp	.+34     	; 0x2b4e <_ZN15OrangutanSerial15serial_rx_checkEh+0x58>
    2b2c:	8a e0       	ldi	r24, 0x0A	; 10
    2b2e:	8c 9f       	mul	r24, r28
    2b30:	f0 01       	movw	r30, r0
    2b32:	8d 9f       	mul	r24, r29
    2b34:	f0 0d       	add	r31, r0
    2b36:	11 24       	eor	r1, r1
    2b38:	e3 56       	subi	r30, 0x63	; 99
    2b3a:	fe 4f       	sbci	r31, 0xFE	; 254
    2b3c:	80 81       	ld	r24, Z
    2b3e:	81 11       	cpse	r24, r1
    2b40:	0b c0       	rjmp	.+22     	; 0x2b58 <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    2b42:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b46:	80 68       	ori	r24, 0x80	; 128
    2b48:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b4c:	05 c0       	rjmp	.+10     	; 0x2b58 <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    2b4e:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2b52:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    2b56:	ea cf       	rjmp	.-44     	; 0x2b2c <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2b58:	df 91       	pop	r29
    2b5a:	cf 91       	pop	r28
    2b5c:	08 95       	ret

00002b5e <_ZN15OrangutanSerial14receive_inlineEhPchh>:
    2b5e:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b62:	9f 77       	andi	r25, 0x7F	; 127
    2b64:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b68:	9a e0       	ldi	r25, 0x0A	; 10
    2b6a:	89 9f       	mul	r24, r25
    2b6c:	f0 01       	movw	r30, r0
    2b6e:	11 24       	eor	r1, r1
    2b70:	e3 56       	subi	r30, 0x63	; 99
    2b72:	fe 4f       	sbci	r31, 0xFE	; 254
    2b74:	71 87       	std	Z+9, r23	; 0x09
    2b76:	60 87       	std	Z+8, r22	; 0x08
    2b78:	12 82       	std	Z+2, r1	; 0x02
    2b7a:	44 83       	std	Z+4, r20	; 0x04
    2b7c:	25 83       	std	Z+5, r18	; 0x05
    2b7e:	80 81       	ld	r24, Z
    2b80:	81 11       	cpse	r24, r1
    2b82:	05 c0       	rjmp	.+10     	; 0x2b8e <_ZN15OrangutanSerial14receive_inlineEhPchh+0x30>
    2b84:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b88:	80 68       	ori	r24, 0x80	; 128
    2b8a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b8e:	08 95       	ret

00002b90 <_ZN15OrangutanSerial7receiveEPch>:
    2b90:	46 2f       	mov	r20, r22
    2b92:	20 e0       	ldi	r18, 0x00	; 0
    2b94:	bc 01       	movw	r22, r24
    2b96:	80 e0       	ldi	r24, 0x00	; 0
    2b98:	0e 94 af 15 	call	0x2b5e	; 0x2b5e <_ZN15OrangutanSerial14receive_inlineEhPchh>
    2b9c:	08 95       	ret

00002b9e <serial_receive>:
    2b9e:	0e 94 c8 15 	call	0x2b90	; 0x2b90 <_ZN15OrangutanSerial7receiveEPch>
    2ba2:	08 95       	ret

00002ba4 <__vector_18>:
    2ba4:	1f 92       	push	r1
    2ba6:	0f 92       	push	r0
    2ba8:	0f b6       	in	r0, 0x3f	; 63
    2baa:	0f 92       	push	r0
    2bac:	11 24       	eor	r1, r1
    2bae:	2f 93       	push	r18
    2bb0:	3f 93       	push	r19
    2bb2:	4f 93       	push	r20
    2bb4:	5f 93       	push	r21
    2bb6:	6f 93       	push	r22
    2bb8:	7f 93       	push	r23
    2bba:	8f 93       	push	r24
    2bbc:	9f 93       	push	r25
    2bbe:	af 93       	push	r26
    2bc0:	bf 93       	push	r27
    2bc2:	ef 93       	push	r30
    2bc4:	ff 93       	push	r31
    2bc6:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2bca:	80 e0       	ldi	r24, 0x00	; 0
    2bcc:	0e 94 50 15 	call	0x2aa0	; 0x2aa0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    2bd0:	ff 91       	pop	r31
    2bd2:	ef 91       	pop	r30
    2bd4:	bf 91       	pop	r27
    2bd6:	af 91       	pop	r26
    2bd8:	9f 91       	pop	r25
    2bda:	8f 91       	pop	r24
    2bdc:	7f 91       	pop	r23
    2bde:	6f 91       	pop	r22
    2be0:	5f 91       	pop	r21
    2be2:	4f 91       	pop	r20
    2be4:	3f 91       	pop	r19
    2be6:	2f 91       	pop	r18
    2be8:	0f 90       	pop	r0
    2bea:	0f be       	out	0x3f, r0	; 63
    2bec:	0f 90       	pop	r0
    2bee:	1f 90       	pop	r1
    2bf0:	18 95       	reti

00002bf2 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    2bf2:	9a e0       	ldi	r25, 0x0A	; 10
    2bf4:	89 9f       	mul	r24, r25
    2bf6:	f0 01       	movw	r30, r0
    2bf8:	11 24       	eor	r1, r1
    2bfa:	e3 56       	subi	r30, 0x63	; 99
    2bfc:	fe 4f       	sbci	r31, 0xFE	; 254
    2bfe:	86 81       	ldd	r24, Z+6	; 0x06
    2c00:	97 81       	ldd	r25, Z+7	; 0x07
    2c02:	89 2b       	or	r24, r25
    2c04:	59 f0       	breq	.+22     	; 0x2c1c <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2c06:	91 81       	ldd	r25, Z+1	; 0x01
    2c08:	83 81       	ldd	r24, Z+3	; 0x03
    2c0a:	98 17       	cp	r25, r24
    2c0c:	38 f4       	brcc	.+14     	; 0x2c1c <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2c0e:	80 81       	ld	r24, Z
    2c10:	81 11       	cpse	r24, r1
    2c12:	04 c0       	rjmp	.+8      	; 0x2c1c <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2c14:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2c18:	80 62       	ori	r24, 0x20	; 32
    2c1a:	03 c0       	rjmp	.+6      	; 0x2c22 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x30>
    2c1c:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2c20:	8f 7d       	andi	r24, 0xDF	; 223
    2c22:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2c26:	08 95       	ret

00002c28 <_ZN15OrangutanSerial15initUART_inlineEh>:
    2c28:	9a e0       	ldi	r25, 0x0A	; 10
    2c2a:	89 9f       	mul	r24, r25
    2c2c:	f0 01       	movw	r30, r0
    2c2e:	11 24       	eor	r1, r1
    2c30:	e3 56       	subi	r30, 0x63	; 99
    2c32:	fe 4f       	sbci	r31, 0xFE	; 254
    2c34:	90 81       	ld	r25, Z
    2c36:	91 11       	cpse	r25, r1
    2c38:	02 c0       	rjmp	.+4      	; 0x2c3e <_ZN15OrangutanSerial15initUART_inlineEh+0x16>
    2c3a:	98 e9       	ldi	r25, 0x98	; 152
    2c3c:	01 c0       	rjmp	.+2      	; 0x2c40 <_ZN15OrangutanSerial15initUART_inlineEh+0x18>
    2c3e:	98 e1       	ldi	r25, 0x18	; 24
    2c40:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2c44:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2c48:	78 94       	sei
    2c4a:	08 95       	ret

00002c4c <serial_set_baud_rate>:
    2c4c:	cf 92       	push	r12
    2c4e:	df 92       	push	r13
    2c50:	ef 92       	push	r14
    2c52:	ff 92       	push	r15
    2c54:	6b 01       	movw	r12, r22
    2c56:	7c 01       	movw	r14, r24
    2c58:	80 e0       	ldi	r24, 0x00	; 0
    2c5a:	0e 94 14 16 	call	0x2c28	; 0x2c28 <_ZN15OrangutanSerial15initUART_inlineEh>
    2c5e:	a8 ef       	ldi	r26, 0xF8	; 248
    2c60:	bf ef       	ldi	r27, 0xFF	; 255
    2c62:	a7 01       	movw	r20, r14
    2c64:	96 01       	movw	r18, r12
    2c66:	0e 94 48 1d 	call	0x3a90	; 0x3a90 <__mulohisi3>
    2c6a:	73 5d       	subi	r23, 0xD3	; 211
    2c6c:	8e 4c       	sbci	r24, 0xCE	; 206
    2c6e:	9e 4f       	sbci	r25, 0xFE	; 254
    2c70:	e4 e0       	ldi	r30, 0x04	; 4
    2c72:	22 0f       	add	r18, r18
    2c74:	33 1f       	adc	r19, r19
    2c76:	44 1f       	adc	r20, r20
    2c78:	55 1f       	adc	r21, r21
    2c7a:	ea 95       	dec	r30
    2c7c:	d1 f7       	brne	.-12     	; 0x2c72 <serial_set_baud_rate+0x26>
    2c7e:	0e 94 e4 1c 	call	0x39c8	; 0x39c8 <__udivmodsi4>
    2c82:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
    2c86:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
    2c8a:	ff 90       	pop	r15
    2c8c:	ef 90       	pop	r14
    2c8e:	df 90       	pop	r13
    2c90:	cf 90       	pop	r12
    2c92:	08 95       	ret

00002c94 <_ZN15OrangutanSerial4sendEPch>:
    2c94:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <_ZN15OrangutanSerial5portsE+0x7>
    2c98:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <_ZN15OrangutanSerial5portsE+0x6>
    2c9c:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <_ZN15OrangutanSerial5portsE+0x1>
    2ca0:	60 93 a0 01 	sts	0x01A0, r22	; 0x8001a0 <_ZN15OrangutanSerial5portsE+0x3>
    2ca4:	80 e0       	ldi	r24, 0x00	; 0
    2ca6:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2caa:	08 95       	ret

00002cac <serial_send>:
    2cac:	0e 94 4a 16 	call	0x2c94	; 0x2c94 <_ZN15OrangutanSerial4sendEPch>
    2cb0:	08 95       	ret

00002cb2 <_ZN15OrangutanSerial11uart_tx_isrEh>:
    2cb2:	9a e0       	ldi	r25, 0x0A	; 10
    2cb4:	89 9f       	mul	r24, r25
    2cb6:	f0 01       	movw	r30, r0
    2cb8:	11 24       	eor	r1, r1
    2cba:	e3 56       	subi	r30, 0x63	; 99
    2cbc:	fe 4f       	sbci	r31, 0xFE	; 254
    2cbe:	26 81       	ldd	r18, Z+6	; 0x06
    2cc0:	37 81       	ldd	r19, Z+7	; 0x07
    2cc2:	21 15       	cp	r18, r1
    2cc4:	31 05       	cpc	r19, r1
    2cc6:	41 f0       	breq	.+16     	; 0x2cd8 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2cc8:	41 81       	ldd	r20, Z+1	; 0x01
    2cca:	93 81       	ldd	r25, Z+3	; 0x03
    2ccc:	49 17       	cp	r20, r25
    2cce:	20 f4       	brcc	.+8      	; 0x2cd8 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2cd0:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2cd4:	95 fd       	sbrc	r25, 5
    2cd6:	03 c0       	rjmp	.+6      	; 0x2cde <_ZN15OrangutanSerial11uart_tx_isrEh+0x2c>
    2cd8:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2cdc:	08 95       	ret
    2cde:	91 81       	ldd	r25, Z+1	; 0x01
    2ce0:	d9 01       	movw	r26, r18
    2ce2:	a9 0f       	add	r26, r25
    2ce4:	b1 1d       	adc	r27, r1
    2ce6:	9c 91       	ld	r25, X
    2ce8:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2cec:	91 81       	ldd	r25, Z+1	; 0x01
    2cee:	9f 5f       	subi	r25, 0xFF	; 255
    2cf0:	91 83       	std	Z+1, r25	; 0x01
    2cf2:	f2 cf       	rjmp	.-28     	; 0x2cd8 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>

00002cf4 <_ZN15OrangutanSerial5checkEv>:
    2cf4:	e1 ec       	ldi	r30, 0xC1	; 193
    2cf6:	f0 e0       	ldi	r31, 0x00	; 0
    2cf8:	80 81       	ld	r24, Z
    2cfa:	8f 7d       	andi	r24, 0xDF	; 223
    2cfc:	80 83       	st	Z, r24
    2cfe:	80 e0       	ldi	r24, 0x00	; 0
    2d00:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <_ZN15OrangutanSerial11uart_tx_isrEh>
    2d04:	80 e0       	ldi	r24, 0x00	; 0
    2d06:	0e 94 7b 15 	call	0x2af6	; 0x2af6 <_ZN15OrangutanSerial15serial_rx_checkEh>
    2d0a:	08 95       	ret

00002d0c <_ZN15OrangutanSerial12sendBlockingEPch>:
    2d0c:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <_ZN15OrangutanSerial5portsE+0x7>
    2d10:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <_ZN15OrangutanSerial5portsE+0x6>
    2d14:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <_ZN15OrangutanSerial5portsE+0x1>
    2d18:	60 93 a0 01 	sts	0x01A0, r22	; 0x8001a0 <_ZN15OrangutanSerial5portsE+0x3>
    2d1c:	80 e0       	ldi	r24, 0x00	; 0
    2d1e:	0e 94 f9 15 	call	0x2bf2	; 0x2bf2 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2d22:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <_ZN15OrangutanSerial5portsE+0x1>
    2d26:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <_ZN15OrangutanSerial5portsE+0x3>
    2d2a:	98 17       	cp	r25, r24
    2d2c:	19 f0       	breq	.+6      	; 0x2d34 <_ZN15OrangutanSerial12sendBlockingEPch+0x28>
    2d2e:	0e 94 7a 16 	call	0x2cf4	; 0x2cf4 <_ZN15OrangutanSerial5checkEv>
    2d32:	f7 cf       	rjmp	.-18     	; 0x2d22 <_ZN15OrangutanSerial12sendBlockingEPch+0x16>
    2d34:	08 95       	ret

00002d36 <serial_send_blocking>:
    2d36:	0e 94 86 16 	call	0x2d0c	; 0x2d0c <_ZN15OrangutanSerial12sendBlockingEPch>
    2d3a:	08 95       	ret

00002d3c <__vector_19>:
    2d3c:	1f 92       	push	r1
    2d3e:	0f 92       	push	r0
    2d40:	0f b6       	in	r0, 0x3f	; 63
    2d42:	0f 92       	push	r0
    2d44:	11 24       	eor	r1, r1
    2d46:	2f 93       	push	r18
    2d48:	3f 93       	push	r19
    2d4a:	4f 93       	push	r20
    2d4c:	5f 93       	push	r21
    2d4e:	6f 93       	push	r22
    2d50:	7f 93       	push	r23
    2d52:	8f 93       	push	r24
    2d54:	9f 93       	push	r25
    2d56:	af 93       	push	r26
    2d58:	bf 93       	push	r27
    2d5a:	ef 93       	push	r30
    2d5c:	ff 93       	push	r31
    2d5e:	80 e0       	ldi	r24, 0x00	; 0
    2d60:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <_ZN15OrangutanSerial11uart_tx_isrEh>
    2d64:	ff 91       	pop	r31
    2d66:	ef 91       	pop	r30
    2d68:	bf 91       	pop	r27
    2d6a:	af 91       	pop	r26
    2d6c:	9f 91       	pop	r25
    2d6e:	8f 91       	pop	r24
    2d70:	7f 91       	pop	r23
    2d72:	6f 91       	pop	r22
    2d74:	5f 91       	pop	r21
    2d76:	4f 91       	pop	r20
    2d78:	3f 91       	pop	r19
    2d7a:	2f 91       	pop	r18
    2d7c:	0f 90       	pop	r0
    2d7e:	0f be       	out	0x3f, r0	; 63
    2d80:	0f 90       	pop	r0
    2d82:	1f 90       	pop	r1
    2d84:	18 95       	reti

00002d86 <__vector_9>:
    2d86:	2f 92       	push	r2
    2d88:	8f 93       	push	r24
    2d8a:	9f 93       	push	r25
    2d8c:	2f b6       	in	r2, 0x3f	; 63
    2d8e:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <tickCount+0x1>
    2d92:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <tickCount+0x2>
    2d96:	01 96       	adiw	r24, 0x01	; 1
    2d98:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <tickCount+0x1>
    2d9c:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <tickCount+0x2>
    2da0:	90 e0       	ldi	r25, 0x00	; 0
    2da2:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <tickCount+0x3>
    2da6:	89 1f       	adc	r24, r25
    2da8:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <tickCount+0x3>
    2dac:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <us_over_10+0x1>
    2db0:	9c 5f       	subi	r25, 0xFC	; 252
    2db2:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <us_over_10+0x1>
    2db6:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <us_over_10>
    2dba:	80 51       	subi	r24, 0x10	; 16
    2dbc:	97 42       	sbci	r25, 0x27	; 39
    2dbe:	c0 f0       	brcs	.+48     	; 0x2df0 <end>
    2dc0:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <us_over_10+0x1>
    2dc4:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <us_over_10>
    2dc8:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <msCounter>
    2dcc:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <msCounter+0x1>
    2dd0:	01 96       	adiw	r24, 0x01	; 1
    2dd2:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <msCounter>
    2dd6:	90 93 aa 01 	sts	0x01AA, r25	; 0x8001aa <msCounter+0x1>
    2dda:	90 e0       	ldi	r25, 0x00	; 0
    2ddc:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <msCounter+0x2>
    2de0:	89 1f       	adc	r24, r25
    2de2:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <msCounter+0x2>
    2de6:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <msCounter+0x3>
    2dea:	89 1f       	adc	r24, r25
    2dec:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <msCounter+0x3>

00002df0 <end>:
    2df0:	2f be       	out	0x3f, r2	; 63
    2df2:	9f 91       	pop	r25
    2df4:	8f 91       	pop	r24
    2df6:	2f 90       	pop	r2
    2df8:	18 95       	reti

00002dfa <_ZN13OrangutanTime17delayMillisecondsEj>:
    2dfa:	28 ee       	ldi	r18, 0xE8	; 232
    2dfc:	33 e0       	ldi	r19, 0x03	; 3
    2dfe:	01 97       	sbiw	r24, 0x01	; 1
    2e00:	48 f0       	brcs	.+18     	; 0x2e14 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    2e02:	f9 01       	movw	r30, r18
    2e04:	6f 93       	push	r22
    2e06:	64 e0       	ldi	r22, 0x04	; 4
    2e08:	6a 95       	dec	r22
    2e0a:	f1 f7       	brne	.-4      	; 0x2e08 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    2e0c:	6f 91       	pop	r22
    2e0e:	31 97       	sbiw	r30, 0x01	; 1
    2e10:	c9 f7       	brne	.-14     	; 0x2e04 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    2e12:	f5 cf       	rjmp	.-22     	; 0x2dfe <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    2e14:	08 95       	ret

00002e16 <delay_ms>:
    2e16:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <_ZN13OrangutanTime17delayMillisecondsEj>
    2e1a:	08 95       	ret

00002e1c <_ZN13OrangutanTime5init2Ev>:
    2e1c:	e0 e7       	ldi	r30, 0x70	; 112
    2e1e:	f0 e0       	ldi	r31, 0x00	; 0
    2e20:	80 81       	ld	r24, Z
    2e22:	8e 7f       	andi	r24, 0xFE	; 254
    2e24:	80 83       	st	Z, r24
    2e26:	a0 eb       	ldi	r26, 0xB0	; 176
    2e28:	b0 e0       	ldi	r27, 0x00	; 0
    2e2a:	8c 91       	ld	r24, X
    2e2c:	83 60       	ori	r24, 0x03	; 3
    2e2e:	8c 93       	st	X, r24
    2e30:	a1 eb       	ldi	r26, 0xB1	; 177
    2e32:	b0 e0       	ldi	r27, 0x00	; 0
    2e34:	8c 91       	ld	r24, X
    2e36:	80 7f       	andi	r24, 0xF0	; 240
    2e38:	8c 93       	st	X, r24
    2e3a:	8c 91       	ld	r24, X
    2e3c:	82 60       	ori	r24, 0x02	; 2
    2e3e:	8c 93       	st	X, r24
    2e40:	b8 9a       	sbi	0x17, 0	; 23
    2e42:	80 81       	ld	r24, Z
    2e44:	81 60       	ori	r24, 0x01	; 1
    2e46:	80 83       	st	Z, r24
    2e48:	78 94       	sei
    2e4a:	08 95       	ret

00002e4c <_ZN13OrangutanTime4initEv>:
    2e4c:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <_ZZN13OrangutanTime4initEvE11initialized>
    2e50:	81 11       	cpse	r24, r1
    2e52:	05 c0       	rjmp	.+10     	; 0x2e5e <_ZN13OrangutanTime4initEv+0x12>
    2e54:	81 e0       	ldi	r24, 0x01	; 1
    2e56:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <_ZZN13OrangutanTime4initEvE11initialized>
    2e5a:	0e 94 0e 17 	call	0x2e1c	; 0x2e1c <_ZN13OrangutanTime5init2Ev>
    2e5e:	08 95       	ret

00002e60 <_ZN13OrangutanTime2msEv>:
    2e60:	0e 94 26 17 	call	0x2e4c	; 0x2e4c <_ZN13OrangutanTime4initEv>
    2e64:	e0 e7       	ldi	r30, 0x70	; 112
    2e66:	f0 e0       	ldi	r31, 0x00	; 0
    2e68:	80 81       	ld	r24, Z
    2e6a:	8e 7f       	andi	r24, 0xFE	; 254
    2e6c:	80 83       	st	Z, r24
    2e6e:	60 91 a9 01 	lds	r22, 0x01A9	; 0x8001a9 <msCounter>
    2e72:	70 91 aa 01 	lds	r23, 0x01AA	; 0x8001aa <msCounter+0x1>
    2e76:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <msCounter+0x2>
    2e7a:	90 91 ac 01 	lds	r25, 0x01AC	; 0x8001ac <msCounter+0x3>
    2e7e:	20 81       	ld	r18, Z
    2e80:	21 60       	ori	r18, 0x01	; 1
    2e82:	20 83       	st	Z, r18
    2e84:	08 95       	ret

00002e86 <get_ms>:
    2e86:	0e 94 30 17 	call	0x2e60	; 0x2e60 <_ZN13OrangutanTime2msEv>
    2e8a:	08 95       	ret

00002e8c <_ZN13OrangutanTime5resetEv>:
    2e8c:	0e 94 26 17 	call	0x2e4c	; 0x2e4c <_ZN13OrangutanTime4initEv>
    2e90:	e0 e7       	ldi	r30, 0x70	; 112
    2e92:	f0 e0       	ldi	r31, 0x00	; 0
    2e94:	80 81       	ld	r24, Z
    2e96:	8e 7f       	andi	r24, 0xFE	; 254
    2e98:	80 83       	st	Z, r24
    2e9a:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <msCounter>
    2e9e:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <msCounter+0x1>
    2ea2:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <msCounter+0x2>
    2ea6:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <msCounter+0x3>
    2eaa:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <us_over_10+0x1>
    2eae:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <us_over_10>
    2eb2:	80 81       	ld	r24, Z
    2eb4:	81 60       	ori	r24, 0x01	; 1
    2eb6:	80 83       	st	Z, r24
    2eb8:	08 95       	ret

00002eba <calibrate_line_sensors>:
    2eba:	68 2f       	mov	r22, r24
    2ebc:	81 eb       	ldi	r24, 0xB1	; 177
    2ebe:	91 e0       	ldi	r25, 0x01	; 1
    2ec0:	0e 94 4c 1b 	call	0x3698	; 0x3698 <_ZN16PololuQTRSensors9calibrateEh>
    2ec4:	08 95       	ret

00002ec6 <read_line_sensors_calibrated>:
    2ec6:	46 2f       	mov	r20, r22
    2ec8:	bc 01       	movw	r22, r24
    2eca:	81 eb       	ldi	r24, 0xB1	; 177
    2ecc:	91 e0       	ldi	r25, 0x01	; 1
    2ece:	0e 94 70 1b 	call	0x36e0	; 0x36e0 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    2ed2:	08 95       	ret

00002ed4 <read_line>:
    2ed4:	46 2f       	mov	r20, r22
    2ed6:	20 e0       	ldi	r18, 0x00	; 0
    2ed8:	bc 01       	movw	r22, r24
    2eda:	81 eb       	ldi	r24, 0xB1	; 177
    2edc:	91 e0       	ldi	r25, 0x01	; 1
    2ede:	0e 94 1d 1c 	call	0x383a	; 0x383a <_ZN16PololuQTRSensors8readLineEPjhh>
    2ee2:	08 95       	ret

00002ee4 <_ZN9Pololu3pi4initEjh>:
    2ee4:	0f 93       	push	r16
    2ee6:	cf 93       	push	r28
    2ee8:	df 93       	push	r29
    2eea:	00 d0       	rcall	.+0      	; 0x2eec <_ZN9Pololu3pi4initEjh+0x8>
    2eec:	00 d0       	rcall	.+0      	; 0x2eee <_ZN9Pololu3pi4initEjh+0xa>
    2eee:	1f 92       	push	r1
    2ef0:	cd b7       	in	r28, 0x3d	; 61
    2ef2:	de b7       	in	r29, 0x3e	; 62
    2ef4:	9c 01       	movw	r18, r24
    2ef6:	85 e0       	ldi	r24, 0x05	; 5
    2ef8:	e0 e5       	ldi	r30, 0x50	; 80
    2efa:	f1 e0       	ldi	r31, 0x01	; 1
    2efc:	de 01       	movw	r26, r28
    2efe:	11 96       	adiw	r26, 0x01	; 1
    2f00:	01 90       	ld	r0, Z+
    2f02:	0d 92       	st	X+, r0
    2f04:	8a 95       	dec	r24
    2f06:	e1 f7       	brne	.-8      	; 0x2f00 <_ZN9Pololu3pi4initEjh+0x1c>
    2f08:	66 23       	and	r22, r22
    2f0a:	11 f0       	breq	.+4      	; 0x2f10 <_ZN9Pololu3pi4initEjh+0x2c>
    2f0c:	0f ef       	ldi	r16, 0xFF	; 255
    2f0e:	01 c0       	rjmp	.+2      	; 0x2f12 <_ZN9Pololu3pi4initEjh+0x2e>
    2f10:	03 e1       	ldi	r16, 0x13	; 19
    2f12:	45 e0       	ldi	r20, 0x05	; 5
    2f14:	be 01       	movw	r22, r28
    2f16:	6f 5f       	subi	r22, 0xFF	; 255
    2f18:	7f 4f       	sbci	r23, 0xFF	; 255
    2f1a:	81 eb       	ldi	r24, 0xB1	; 177
    2f1c:	91 e0       	ldi	r25, 0x01	; 1
    2f1e:	0e 94 44 18 	call	0x3088	; 0x3088 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    2f22:	81 eb       	ldi	r24, 0xB1	; 177
    2f24:	91 e0       	ldi	r25, 0x01	; 1
    2f26:	0e 94 1b 18 	call	0x3036	; 0x3036 <_ZN16PololuQTRSensors11emittersOffEv>
    2f2a:	0e 94 46 17 	call	0x2e8c	; 0x2e8c <_ZN13OrangutanTime5resetEv>
    2f2e:	0f 90       	pop	r0
    2f30:	0f 90       	pop	r0
    2f32:	0f 90       	pop	r0
    2f34:	0f 90       	pop	r0
    2f36:	0f 90       	pop	r0
    2f38:	df 91       	pop	r29
    2f3a:	cf 91       	pop	r28
    2f3c:	0f 91       	pop	r16
    2f3e:	08 95       	ret

00002f40 <pololu_3pi_init>:
    2f40:	60 e0       	ldi	r22, 0x00	; 0
    2f42:	0e 94 72 17 	call	0x2ee4	; 0x2ee4 <_ZN9Pololu3pi4initEjh>
    2f46:	08 95       	ret

00002f48 <_GLOBAL__sub_D_pololu_3pi_init>:
    2f48:	81 eb       	ldi	r24, 0xB1	; 177
    2f4a:	91 e0       	ldi	r25, 0x01	; 1
    2f4c:	0e 94 92 1c 	call	0x3924	; 0x3924 <_ZN16PololuQTRSensorsD1Ev>
    2f50:	08 95       	ret

00002f52 <delay_us>:
    2f52:	6f 93       	push	r22
    2f54:	64 e0       	ldi	r22, 0x04	; 4
    2f56:	6a 95       	dec	r22
    2f58:	f1 f7       	brne	.-4      	; 0x2f56 <delay_us+0x4>
    2f5a:	6f 91       	pop	r22
    2f5c:	01 97       	sbiw	r24, 0x01	; 1
    2f5e:	c9 f7       	brne	.-14     	; 0x2f52 <delay_us>
    2f60:	08 95       	ret

00002f62 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    2f62:	fc 01       	movw	r30, r24
    2f64:	11 82       	std	Z+1, r1	; 0x01
    2f66:	10 82       	st	Z, r1
    2f68:	13 82       	std	Z+3, r1	; 0x03
    2f6a:	12 82       	std	Z+2, r1	; 0x02
    2f6c:	15 82       	std	Z+5, r1	; 0x05
    2f6e:	14 82       	std	Z+4, r1	; 0x04
    2f70:	16 82       	std	Z+6, r1	; 0x06
    2f72:	68 30       	cpi	r22, 0x08	; 8
    2f74:	68 f4       	brcc	.+26     	; 0x2f90 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    2f76:	89 e2       	ldi	r24, 0x29	; 41
    2f78:	90 e0       	ldi	r25, 0x00	; 0
    2f7a:	91 83       	std	Z+1, r25	; 0x01
    2f7c:	80 83       	st	Z, r24
    2f7e:	8b e2       	ldi	r24, 0x2B	; 43
    2f80:	90 e0       	ldi	r25, 0x00	; 0
    2f82:	93 83       	std	Z+3, r25	; 0x03
    2f84:	82 83       	std	Z+2, r24	; 0x02
    2f86:	8a e2       	ldi	r24, 0x2A	; 42
    2f88:	90 e0       	ldi	r25, 0x00	; 0
    2f8a:	95 83       	std	Z+5, r25	; 0x05
    2f8c:	84 83       	std	Z+4, r24	; 0x04
    2f8e:	1f c0       	rjmp	.+62     	; 0x2fce <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2f90:	6e 30       	cpi	r22, 0x0E	; 14
    2f92:	70 f4       	brcc	.+28     	; 0x2fb0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    2f94:	83 e2       	ldi	r24, 0x23	; 35
    2f96:	90 e0       	ldi	r25, 0x00	; 0
    2f98:	91 83       	std	Z+1, r25	; 0x01
    2f9a:	80 83       	st	Z, r24
    2f9c:	85 e2       	ldi	r24, 0x25	; 37
    2f9e:	90 e0       	ldi	r25, 0x00	; 0
    2fa0:	93 83       	std	Z+3, r25	; 0x03
    2fa2:	82 83       	std	Z+2, r24	; 0x02
    2fa4:	84 e2       	ldi	r24, 0x24	; 36
    2fa6:	90 e0       	ldi	r25, 0x00	; 0
    2fa8:	95 83       	std	Z+5, r25	; 0x05
    2faa:	84 83       	std	Z+4, r24	; 0x04
    2fac:	68 50       	subi	r22, 0x08	; 8
    2fae:	0f c0       	rjmp	.+30     	; 0x2fce <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2fb0:	65 31       	cpi	r22, 0x15	; 21
    2fb2:	98 f4       	brcc	.+38     	; 0x2fda <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    2fb4:	86 e2       	ldi	r24, 0x26	; 38
    2fb6:	90 e0       	ldi	r25, 0x00	; 0
    2fb8:	91 83       	std	Z+1, r25	; 0x01
    2fba:	80 83       	st	Z, r24
    2fbc:	88 e2       	ldi	r24, 0x28	; 40
    2fbe:	90 e0       	ldi	r25, 0x00	; 0
    2fc0:	93 83       	std	Z+3, r25	; 0x03
    2fc2:	82 83       	std	Z+2, r24	; 0x02
    2fc4:	87 e2       	ldi	r24, 0x27	; 39
    2fc6:	90 e0       	ldi	r25, 0x00	; 0
    2fc8:	95 83       	std	Z+5, r25	; 0x05
    2fca:	84 83       	std	Z+4, r24	; 0x04
    2fcc:	6e 50       	subi	r22, 0x0E	; 14
    2fce:	81 e0       	ldi	r24, 0x01	; 1
    2fd0:	01 c0       	rjmp	.+2      	; 0x2fd4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    2fd2:	88 0f       	add	r24, r24
    2fd4:	6a 95       	dec	r22
    2fd6:	ea f7       	brpl	.-6      	; 0x2fd2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    2fd8:	86 83       	std	Z+6, r24	; 0x06
    2fda:	08 95       	ret

00002fdc <_ZN16PololuQTRSensors4initEhhh>:
    2fdc:	a7 e0       	ldi	r26, 0x07	; 7
    2fde:	b0 e0       	ldi	r27, 0x00	; 0
    2fe0:	e4 ef       	ldi	r30, 0xF4	; 244
    2fe2:	f7 e1       	ldi	r31, 0x17	; 23
    2fe4:	0c 94 5b 1d 	jmp	0x3ab6	; 0x3ab6 <__prologue_saves__+0x1c>
    2fe8:	8c 01       	movw	r16, r24
    2fea:	fc 01       	movw	r30, r24
    2fec:	11 82       	std	Z+1, r1	; 0x01
    2fee:	10 82       	st	Z, r1
    2ff0:	13 82       	std	Z+3, r1	; 0x03
    2ff2:	12 82       	std	Z+2, r1	; 0x02
    2ff4:	15 82       	std	Z+5, r1	; 0x05
    2ff6:	14 82       	std	Z+4, r1	; 0x04
    2ff8:	17 82       	std	Z+7, r1	; 0x07
    2ffa:	16 82       	std	Z+6, r1	; 0x06
    2ffc:	61 31       	cpi	r22, 0x11	; 17
    2ffe:	18 f0       	brcs	.+6      	; 0x3006 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    3000:	80 e1       	ldi	r24, 0x10	; 16
    3002:	80 87       	std	Z+8, r24	; 0x08
    3004:	02 c0       	rjmp	.+4      	; 0x300a <_ZN16PololuQTRSensors4initEhhh+0x2e>
    3006:	fc 01       	movw	r30, r24
    3008:	60 87       	std	Z+8, r22	; 0x08
    300a:	f8 01       	movw	r30, r16
    300c:	20 8b       	std	Z+16, r18	; 0x10
    300e:	64 2f       	mov	r22, r20
    3010:	ce 01       	movw	r24, r28
    3012:	01 96       	adiw	r24, 0x01	; 1
    3014:	0e 94 b1 17 	call	0x2f62	; 0x2f62 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    3018:	8f 81       	ldd	r24, Y+7	; 0x07
    301a:	f8 01       	movw	r30, r16
    301c:	81 87       	std	Z+9, r24	; 0x09
    301e:	8b 81       	ldd	r24, Y+3	; 0x03
    3020:	9c 81       	ldd	r25, Y+4	; 0x04
    3022:	93 87       	std	Z+11, r25	; 0x0b
    3024:	82 87       	std	Z+10, r24	; 0x0a
    3026:	8d 81       	ldd	r24, Y+5	; 0x05
    3028:	9e 81       	ldd	r25, Y+6	; 0x06
    302a:	95 87       	std	Z+13, r25	; 0x0d
    302c:	84 87       	std	Z+12, r24	; 0x0c
    302e:	27 96       	adiw	r28, 0x07	; 7
    3030:	e4 e0       	ldi	r30, 0x04	; 4
    3032:	0c 94 77 1d 	jmp	0x3aee	; 0x3aee <__epilogue_restores__+0x1c>

00003036 <_ZN16PololuQTRSensors11emittersOffEv>:
    3036:	fc 01       	movw	r30, r24
    3038:	a4 85       	ldd	r26, Z+12	; 0x0c
    303a:	b5 85       	ldd	r27, Z+13	; 0x0d
    303c:	10 97       	sbiw	r26, 0x00	; 0
    303e:	79 f0       	breq	.+30     	; 0x305e <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    3040:	8c 91       	ld	r24, X
    3042:	91 85       	ldd	r25, Z+9	; 0x09
    3044:	89 2b       	or	r24, r25
    3046:	8c 93       	st	X, r24
    3048:	a2 85       	ldd	r26, Z+10	; 0x0a
    304a:	b3 85       	ldd	r27, Z+11	; 0x0b
    304c:	9c 91       	ld	r25, X
    304e:	81 85       	ldd	r24, Z+9	; 0x09
    3050:	80 95       	com	r24
    3052:	89 23       	and	r24, r25
    3054:	8c 93       	st	X, r24
    3056:	88 ec       	ldi	r24, 0xC8	; 200
    3058:	90 e0       	ldi	r25, 0x00	; 0
    305a:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <delay_us>
    305e:	08 95       	ret

00003060 <_ZN16PololuQTRSensors10emittersOnEv>:
    3060:	fc 01       	movw	r30, r24
    3062:	a4 85       	ldd	r26, Z+12	; 0x0c
    3064:	b5 85       	ldd	r27, Z+13	; 0x0d
    3066:	10 97       	sbiw	r26, 0x00	; 0
    3068:	71 f0       	breq	.+28     	; 0x3086 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    306a:	8c 91       	ld	r24, X
    306c:	91 85       	ldd	r25, Z+9	; 0x09
    306e:	89 2b       	or	r24, r25
    3070:	8c 93       	st	X, r24
    3072:	a2 85       	ldd	r26, Z+10	; 0x0a
    3074:	b3 85       	ldd	r27, Z+11	; 0x0b
    3076:	8c 91       	ld	r24, X
    3078:	91 85       	ldd	r25, Z+9	; 0x09
    307a:	89 2b       	or	r24, r25
    307c:	8c 93       	st	X, r24
    307e:	88 ec       	ldi	r24, 0xC8	; 200
    3080:	90 e0       	ldi	r25, 0x00	; 0
    3082:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <delay_us>
    3086:	08 95       	ret

00003088 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    3088:	a7 e0       	ldi	r26, 0x07	; 7
    308a:	b0 e0       	ldi	r27, 0x00	; 0
    308c:	ea e4       	ldi	r30, 0x4A	; 74
    308e:	f8 e1       	ldi	r31, 0x18	; 24
    3090:	0c 94 50 1d 	jmp	0x3aa0	; 0x3aa0 <__prologue_saves__+0x6>
    3094:	7c 01       	movw	r14, r24
    3096:	4b 01       	movw	r8, r22
    3098:	64 2f       	mov	r22, r20
    309a:	39 01       	movw	r6, r18
    309c:	40 2f       	mov	r20, r16
    309e:	20 e0       	ldi	r18, 0x00	; 0
    30a0:	0e 94 ee 17 	call	0x2fdc	; 0x2fdc <_ZN16PololuQTRSensors4initEhhh>
    30a4:	87 01       	movw	r16, r14
    30a6:	0f 5b       	subi	r16, 0xBF	; 191
    30a8:	1f 4f       	sbci	r17, 0xFF	; 255
    30aa:	f8 01       	movw	r30, r16
    30ac:	10 82       	st	Z, r1
    30ae:	67 01       	movw	r12, r14
    30b0:	f2 e4       	ldi	r31, 0x42	; 66
    30b2:	cf 0e       	add	r12, r31
    30b4:	d1 1c       	adc	r13, r1
    30b6:	f6 01       	movw	r30, r12
    30b8:	10 82       	st	Z, r1
    30ba:	57 01       	movw	r10, r14
    30bc:	f3 e4       	ldi	r31, 0x43	; 67
    30be:	af 0e       	add	r10, r31
    30c0:	b1 1c       	adc	r11, r1
    30c2:	f5 01       	movw	r30, r10
    30c4:	10 82       	st	Z, r1
    30c6:	f7 01       	movw	r30, r14
    30c8:	77 86       	std	Z+15, r7	; 0x0f
    30ca:	66 86       	std	Z+14, r6	; 0x0e
    30cc:	51 2c       	mov	r5, r1
    30ce:	f7 01       	movw	r30, r14
    30d0:	80 85       	ldd	r24, Z+8	; 0x08
    30d2:	58 16       	cp	r5, r24
    30d4:	50 f5       	brcc	.+84     	; 0x312a <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    30d6:	65 2c       	mov	r6, r5
    30d8:	71 2c       	mov	r7, r1
    30da:	f4 01       	movw	r30, r8
    30dc:	e6 0d       	add	r30, r6
    30de:	f7 1d       	adc	r31, r7
    30e0:	60 81       	ld	r22, Z
    30e2:	ce 01       	movw	r24, r28
    30e4:	01 96       	adiw	r24, 0x01	; 1
    30e6:	0e 94 b1 17 	call	0x2f62	; 0x2f62 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    30ea:	2f 81       	ldd	r18, Y+7	; 0x07
    30ec:	f7 01       	movw	r30, r14
    30ee:	e6 0d       	add	r30, r6
    30f0:	f7 1d       	adc	r31, r7
    30f2:	21 8b       	std	Z+17, r18	; 0x11
    30f4:	89 81       	ldd	r24, Y+1	; 0x01
    30f6:	9a 81       	ldd	r25, Y+2	; 0x02
    30f8:	f3 01       	movw	r30, r6
    30fa:	ee 0f       	add	r30, r30
    30fc:	ff 1f       	adc	r31, r31
    30fe:	ee 0d       	add	r30, r14
    3100:	ff 1d       	adc	r31, r15
    3102:	92 a3       	std	Z+34, r25	; 0x22
    3104:	81 a3       	std	Z+33, r24	; 0x21
    3106:	83 32       	cpi	r24, 0x23	; 35
    3108:	91 05       	cpc	r25, r1
    310a:	11 f4       	brne	.+4      	; 0x3110 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    310c:	f8 01       	movw	r30, r16
    310e:	08 c0       	rjmp	.+16     	; 0x3120 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    3110:	86 32       	cpi	r24, 0x26	; 38
    3112:	91 05       	cpc	r25, r1
    3114:	11 f4       	brne	.+4      	; 0x311a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    3116:	f6 01       	movw	r30, r12
    3118:	03 c0       	rjmp	.+6      	; 0x3120 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    311a:	89 97       	sbiw	r24, 0x29	; 41
    311c:	21 f4       	brne	.+8      	; 0x3126 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    311e:	f5 01       	movw	r30, r10
    3120:	80 81       	ld	r24, Z
    3122:	82 2b       	or	r24, r18
    3124:	80 83       	st	Z, r24
    3126:	53 94       	inc	r5
    3128:	d2 cf       	rjmp	.-92     	; 0x30ce <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    312a:	27 96       	adiw	r28, 0x07	; 7
    312c:	ef e0       	ldi	r30, 0x0F	; 15
    312e:	0c 94 6c 1d 	jmp	0x3ad8	; 0x3ad8 <__epilogue_restores__+0x6>

00003132 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    3132:	a0 e0       	ldi	r26, 0x00	; 0
    3134:	b0 e0       	ldi	r27, 0x00	; 0
    3136:	ef e9       	ldi	r30, 0x9F	; 159
    3138:	f8 e1       	ldi	r31, 0x18	; 24
    313a:	0c 94 52 1d 	jmp	0x3aa4	; 0x3aa4 <__prologue_saves__+0xa>
    313e:	ec 01       	movw	r28, r24
    3140:	5b 01       	movw	r10, r22
    3142:	6c 01       	movw	r12, r24
    3144:	81 e4       	ldi	r24, 0x41	; 65
    3146:	c8 0e       	add	r12, r24
    3148:	d1 1c       	adc	r13, r1
    314a:	f6 01       	movw	r30, r12
    314c:	80 80       	ld	r8, Z
    314e:	7e 01       	movw	r14, r28
    3150:	f2 e4       	ldi	r31, 0x42	; 66
    3152:	ef 0e       	add	r14, r31
    3154:	f1 1c       	adc	r15, r1
    3156:	f7 01       	movw	r30, r14
    3158:	70 80       	ld	r7, Z
    315a:	8e 01       	movw	r16, r28
    315c:	0d 5b       	subi	r16, 0xBD	; 189
    315e:	1f 4f       	sbci	r17, 0xFF	; 255
    3160:	f8 01       	movw	r30, r16
    3162:	90 80       	ld	r9, Z
    3164:	80 e0       	ldi	r24, 0x00	; 0
    3166:	98 85       	ldd	r25, Y+8	; 0x08
    3168:	89 17       	cp	r24, r25
    316a:	48 f4       	brcc	.+18     	; 0x317e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    316c:	f5 01       	movw	r30, r10
    316e:	e8 0f       	add	r30, r24
    3170:	f1 1d       	adc	r31, r1
    3172:	e8 0f       	add	r30, r24
    3174:	f1 1d       	adc	r31, r1
    3176:	11 82       	std	Z+1, r1	; 0x01
    3178:	10 82       	st	Z, r1
    317a:	8f 5f       	subi	r24, 0xFF	; 255
    317c:	f4 cf       	rjmp	.-24     	; 0x3166 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    317e:	84 b1       	in	r24, 0x04	; 4
    3180:	f6 01       	movw	r30, r12
    3182:	90 81       	ld	r25, Z
    3184:	89 2b       	or	r24, r25
    3186:	84 b9       	out	0x04, r24	; 4
    3188:	87 b1       	in	r24, 0x07	; 7
    318a:	f7 01       	movw	r30, r14
    318c:	90 81       	ld	r25, Z
    318e:	89 2b       	or	r24, r25
    3190:	87 b9       	out	0x07, r24	; 7
    3192:	8a b1       	in	r24, 0x0a	; 10
    3194:	f8 01       	movw	r30, r16
    3196:	90 81       	ld	r25, Z
    3198:	89 2b       	or	r24, r25
    319a:	8a b9       	out	0x0a, r24	; 10
    319c:	85 b1       	in	r24, 0x05	; 5
    319e:	f6 01       	movw	r30, r12
    31a0:	90 81       	ld	r25, Z
    31a2:	89 2b       	or	r24, r25
    31a4:	85 b9       	out	0x05, r24	; 5
    31a6:	88 b1       	in	r24, 0x08	; 8
    31a8:	f7 01       	movw	r30, r14
    31aa:	90 81       	ld	r25, Z
    31ac:	89 2b       	or	r24, r25
    31ae:	88 b9       	out	0x08, r24	; 8
    31b0:	8b b1       	in	r24, 0x0b	; 11
    31b2:	f8 01       	movw	r30, r16
    31b4:	90 81       	ld	r25, Z
    31b6:	89 2b       	or	r24, r25
    31b8:	8b b9       	out	0x0b, r24	; 11
    31ba:	8a e0       	ldi	r24, 0x0A	; 10
    31bc:	90 e0       	ldi	r25, 0x00	; 0
    31be:	0e 94 a9 17 	call	0x2f52	; 0x2f52 <delay_us>
    31c2:	94 b1       	in	r25, 0x04	; 4
    31c4:	f6 01       	movw	r30, r12
    31c6:	80 81       	ld	r24, Z
    31c8:	80 95       	com	r24
    31ca:	89 23       	and	r24, r25
    31cc:	84 b9       	out	0x04, r24	; 4
    31ce:	97 b1       	in	r25, 0x07	; 7
    31d0:	f7 01       	movw	r30, r14
    31d2:	80 81       	ld	r24, Z
    31d4:	80 95       	com	r24
    31d6:	89 23       	and	r24, r25
    31d8:	87 b9       	out	0x07, r24	; 7
    31da:	9a b1       	in	r25, 0x0a	; 10
    31dc:	f8 01       	movw	r30, r16
    31de:	80 81       	ld	r24, Z
    31e0:	80 95       	com	r24
    31e2:	89 23       	and	r24, r25
    31e4:	8a b9       	out	0x0a, r24	; 10
    31e6:	95 b1       	in	r25, 0x05	; 5
    31e8:	f6 01       	movw	r30, r12
    31ea:	80 81       	ld	r24, Z
    31ec:	80 95       	com	r24
    31ee:	89 23       	and	r24, r25
    31f0:	85 b9       	out	0x05, r24	; 5
    31f2:	98 b1       	in	r25, 0x08	; 8
    31f4:	f7 01       	movw	r30, r14
    31f6:	80 81       	ld	r24, Z
    31f8:	80 95       	com	r24
    31fa:	89 23       	and	r24, r25
    31fc:	88 b9       	out	0x08, r24	; 8
    31fe:	9b b1       	in	r25, 0x0b	; 11
    3200:	f8 01       	movw	r30, r16
    3202:	80 81       	ld	r24, Z
    3204:	80 95       	com	r24
    3206:	89 23       	and	r24, r25
    3208:	8b b9       	out	0x0b, r24	; 11
    320a:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    320e:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    3212:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    3216:	83 60       	ori	r24, 0x03	; 3
    3218:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    321c:	82 e0       	ldi	r24, 0x02	; 2
    321e:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    3222:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    3226:	80 e0       	ldi	r24, 0x00	; 0
    3228:	90 e0       	ldi	r25, 0x00	; 0
    322a:	2e 85       	ldd	r18, Y+14	; 0x0e
    322c:	3f 85       	ldd	r19, Y+15	; 0x0f
    322e:	82 17       	cp	r24, r18
    3230:	93 07       	cpc	r25, r19
    3232:	20 f5       	brcc	.+72     	; 0x327c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    3234:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    3238:	2c 2d       	mov	r18, r12
    323a:	24 1b       	sub	r18, r20
    323c:	82 0f       	add	r24, r18
    323e:	91 1d       	adc	r25, r1
    3240:	03 b1       	in	r16, 0x03	; 3
    3242:	08 11       	cpse	r16, r8
    3244:	32 c0       	rjmp	.+100    	; 0x32aa <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    3246:	f6 b0       	in	r15, 0x06	; 6
    3248:	f7 10       	cpse	r15, r7
    324a:	2f c0       	rjmp	.+94     	; 0x32aa <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    324c:	29 b1       	in	r18, 0x09	; 9
    324e:	29 11       	cpse	r18, r9
    3250:	2c c0       	rjmp	.+88     	; 0x32aa <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    3252:	10 c0       	rjmp	.+32     	; 0x3274 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    3254:	21 2f       	mov	r18, r17
    3256:	30 e0       	ldi	r19, 0x00	; 0
    3258:	a9 01       	movw	r20, r18
    325a:	44 0f       	add	r20, r20
    325c:	55 1f       	adc	r21, r21
    325e:	f5 01       	movw	r30, r10
    3260:	e4 0f       	add	r30, r20
    3262:	f5 1f       	adc	r31, r21
    3264:	60 81       	ld	r22, Z
    3266:	71 81       	ldd	r23, Z+1	; 0x01
    3268:	67 2b       	or	r22, r23
    326a:	21 f1       	breq	.+72     	; 0x32b4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    326c:	1f 5f       	subi	r17, 0xFF	; 255
    326e:	28 85       	ldd	r18, Y+8	; 0x08
    3270:	12 17       	cp	r17, r18
    3272:	80 f3       	brcs	.-32     	; 0x3254 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    3274:	7f 2c       	mov	r7, r15
    3276:	80 2e       	mov	r8, r16
    3278:	4c 2d       	mov	r20, r12
    327a:	d7 cf       	rjmp	.-82     	; 0x322a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    327c:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    3280:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    3284:	20 e0       	ldi	r18, 0x00	; 0
    3286:	88 85       	ldd	r24, Y+8	; 0x08
    3288:	28 17       	cp	r18, r24
    328a:	30 f5       	brcc	.+76     	; 0x32d8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    328c:	f5 01       	movw	r30, r10
    328e:	e2 0f       	add	r30, r18
    3290:	f1 1d       	adc	r31, r1
    3292:	e2 0f       	add	r30, r18
    3294:	f1 1d       	adc	r31, r1
    3296:	80 81       	ld	r24, Z
    3298:	91 81       	ldd	r25, Z+1	; 0x01
    329a:	89 2b       	or	r24, r25
    329c:	21 f4       	brne	.+8      	; 0x32a6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    329e:	8e 85       	ldd	r24, Y+14	; 0x0e
    32a0:	9f 85       	ldd	r25, Y+15	; 0x0f
    32a2:	91 83       	std	Z+1, r25	; 0x01
    32a4:	80 83       	st	Z, r24
    32a6:	2f 5f       	subi	r18, 0xFF	; 255
    32a8:	ee cf       	rjmp	.-36     	; 0x3286 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    32aa:	03 b1       	in	r16, 0x03	; 3
    32ac:	f6 b0       	in	r15, 0x06	; 6
    32ae:	99 b0       	in	r9, 0x09	; 9
    32b0:	10 e0       	ldi	r17, 0x00	; 0
    32b2:	dd cf       	rjmp	.-70     	; 0x326e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    32b4:	de 01       	movw	r26, r28
    32b6:	a4 0f       	add	r26, r20
    32b8:	b5 1f       	adc	r27, r21
    32ba:	91 96       	adiw	r26, 0x21	; 33
    32bc:	0d 90       	ld	r0, X+
    32be:	bc 91       	ld	r27, X
    32c0:	a0 2d       	mov	r26, r0
    32c2:	4c 91       	ld	r20, X
    32c4:	de 01       	movw	r26, r28
    32c6:	a2 0f       	add	r26, r18
    32c8:	b3 1f       	adc	r27, r19
    32ca:	51 96       	adiw	r26, 0x11	; 17
    32cc:	2c 91       	ld	r18, X
    32ce:	42 23       	and	r20, r18
    32d0:	69 f6       	brne	.-102    	; 0x326c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    32d2:	91 83       	std	Z+1, r25	; 0x01
    32d4:	80 83       	st	Z, r24
    32d6:	ca cf       	rjmp	.-108    	; 0x326c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    32d8:	cd b7       	in	r28, 0x3d	; 61
    32da:	de b7       	in	r29, 0x3e	; 62
    32dc:	ed e0       	ldi	r30, 0x0D	; 13
    32de:	0c 94 6e 1d 	jmp	0x3adc	; 0x3adc <__epilogue_restores__+0xa>

000032e2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    32e2:	ef 92       	push	r14
    32e4:	ff 92       	push	r15
    32e6:	0f 93       	push	r16
    32e8:	1f 93       	push	r17
    32ea:	cf 93       	push	r28
    32ec:	df 93       	push	r29
    32ee:	fc 01       	movw	r30, r24
    32f0:	9b 01       	movw	r18, r22
    32f2:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    32f6:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    32fa:	47 b1       	in	r20, 0x07	; 7
    32fc:	18 b1       	in	r17, 0x08	; 8
    32fe:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3302:	86 fd       	sbrc	r24, 6
    3304:	fc cf       	rjmp	.-8      	; 0x32fe <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    3306:	80 e0       	ldi	r24, 0x00	; 0
    3308:	90 85       	ldd	r25, Z+8	; 0x08
    330a:	89 17       	cp	r24, r25
    330c:	48 f4       	brcc	.+18     	; 0x3320 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    330e:	d9 01       	movw	r26, r18
    3310:	a8 0f       	add	r26, r24
    3312:	b1 1d       	adc	r27, r1
    3314:	a8 0f       	add	r26, r24
    3316:	b1 1d       	adc	r27, r1
    3318:	1d 92       	st	X+, r1
    331a:	1c 92       	st	X, r1
    331c:	8f 5f       	subi	r24, 0xFF	; 255
    331e:	f4 cf       	rjmp	.-24     	; 0x3308 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    3320:	97 b1       	in	r25, 0x07	; 7
    3322:	82 a1       	ldd	r24, Z+34	; 0x22
    3324:	80 95       	com	r24
    3326:	89 23       	and	r24, r25
    3328:	87 b9       	out	0x07, r24	; 7
    332a:	98 b1       	in	r25, 0x08	; 8
    332c:	82 a1       	ldd	r24, Z+34	; 0x22
    332e:	80 95       	com	r24
    3330:	89 23       	and	r24, r25
    3332:	88 b9       	out	0x08, r24	; 8
    3334:	87 e8       	ldi	r24, 0x87	; 135
    3336:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    333a:	e1 2c       	mov	r14, r1
    333c:	81 a1       	ldd	r24, Z+33	; 0x21
    333e:	e8 16       	cp	r14, r24
    3340:	10 f0       	brcs	.+4      	; 0x3346 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    3342:	e1 2c       	mov	r14, r1
    3344:	29 c0       	rjmp	.+82     	; 0x3398 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    3346:	50 e0       	ldi	r21, 0x00	; 0
    3348:	80 85       	ldd	r24, Z+8	; 0x08
    334a:	58 17       	cp	r21, r24
    334c:	18 f5       	brcc	.+70     	; 0x3394 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    334e:	a5 2f       	mov	r26, r21
    3350:	b0 e0       	ldi	r27, 0x00	; 0
    3352:	ef 01       	movw	r28, r30
    3354:	ca 0f       	add	r28, r26
    3356:	db 1f       	adc	r29, r27
    3358:	89 89       	ldd	r24, Y+17	; 0x11
    335a:	80 64       	ori	r24, 0x40	; 64
    335c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    3360:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3364:	80 64       	ori	r24, 0x40	; 64
    3366:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    336a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    336e:	86 fd       	sbrc	r24, 6
    3370:	fc cf       	rjmp	.-8      	; 0x336a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    3372:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    3376:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    337a:	aa 0f       	add	r26, r26
    337c:	bb 1f       	adc	r27, r27
    337e:	a2 0f       	add	r26, r18
    3380:	b3 1f       	adc	r27, r19
    3382:	8d 91       	ld	r24, X+
    3384:	9c 91       	ld	r25, X
    3386:	11 97       	sbiw	r26, 0x01	; 1
    3388:	86 0f       	add	r24, r22
    338a:	97 1f       	adc	r25, r23
    338c:	8d 93       	st	X+, r24
    338e:	9c 93       	st	X, r25
    3390:	5f 5f       	subi	r21, 0xFF	; 255
    3392:	da cf       	rjmp	.-76     	; 0x3348 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    3394:	e3 94       	inc	r14
    3396:	d2 cf       	rjmp	.-92     	; 0x333c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    3398:	80 85       	ldd	r24, Z+8	; 0x08
    339a:	e8 16       	cp	r14, r24
    339c:	a0 f4       	brcc	.+40     	; 0x33c6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    339e:	e9 01       	movw	r28, r18
    33a0:	ce 0d       	add	r28, r14
    33a2:	d1 1d       	adc	r29, r1
    33a4:	ce 0d       	add	r28, r14
    33a6:	d1 1d       	adc	r29, r1
    33a8:	61 a1       	ldd	r22, Z+33	; 0x21
    33aa:	70 e0       	ldi	r23, 0x00	; 0
    33ac:	cb 01       	movw	r24, r22
    33ae:	95 95       	asr	r25
    33b0:	87 95       	ror	r24
    33b2:	a8 81       	ld	r26, Y
    33b4:	b9 81       	ldd	r27, Y+1	; 0x01
    33b6:	8a 0f       	add	r24, r26
    33b8:	9b 1f       	adc	r25, r27
    33ba:	0e 94 bc 1c 	call	0x3978	; 0x3978 <__udivmodhi4>
    33be:	79 83       	std	Y+1, r23	; 0x01
    33c0:	68 83       	st	Y, r22
    33c2:	e3 94       	inc	r14
    33c4:	e9 cf       	rjmp	.-46     	; 0x3398 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    33c6:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    33ca:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    33ce:	18 b9       	out	0x08, r17	; 8
    33d0:	47 b9       	out	0x07, r20	; 7
    33d2:	cd b7       	in	r28, 0x3d	; 61
    33d4:	de b7       	in	r29, 0x3e	; 62
    33d6:	e6 e0       	ldi	r30, 0x06	; 6
    33d8:	0c 94 75 1d 	jmp	0x3aea	; 0x3aea <__epilogue_restores__+0x18>

000033dc <_ZN16PololuQTRSensors4readEPjh>:
    33dc:	a0 e2       	ldi	r26, 0x20	; 32
    33de:	b0 e0       	ldi	r27, 0x00	; 0
    33e0:	e4 ef       	ldi	r30, 0xF4	; 244
    33e2:	f9 e1       	ldi	r31, 0x19	; 25
    33e4:	0c 94 58 1d 	jmp	0x3ab0	; 0x3ab0 <__prologue_saves__+0x16>
    33e8:	8c 01       	movw	r16, r24
    33ea:	7b 01       	movw	r14, r22
    33ec:	d4 2e       	mov	r13, r20
    33ee:	8f ef       	ldi	r24, 0xFF	; 255
    33f0:	84 0f       	add	r24, r20
    33f2:	82 30       	cpi	r24, 0x02	; 2
    33f4:	18 f4       	brcc	.+6      	; 0x33fc <_ZN16PololuQTRSensors4readEPjh+0x20>
    33f6:	c8 01       	movw	r24, r16
    33f8:	0e 94 30 18 	call	0x3060	; 0x3060 <_ZN16PololuQTRSensors10emittersOnEv>
    33fc:	d8 01       	movw	r26, r16
    33fe:	50 96       	adiw	r26, 0x10	; 16
    3400:	8c 91       	ld	r24, X
    3402:	b7 01       	movw	r22, r14
    3404:	81 11       	cpse	r24, r1
    3406:	10 c0       	rjmp	.+32     	; 0x3428 <_ZN16PololuQTRSensors4readEPjh+0x4c>
    3408:	c8 01       	movw	r24, r16
    340a:	0e 94 99 18 	call	0x3132	; 0x3132 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    340e:	c8 01       	movw	r24, r16
    3410:	0e 94 1b 18 	call	0x3036	; 0x3036 <_ZN16PololuQTRSensors11emittersOffEv>
    3414:	b2 e0       	ldi	r27, 0x02	; 2
    3416:	db 12       	cpse	r13, r27
    3418:	3a c0       	rjmp	.+116    	; 0x348e <_ZN16PololuQTRSensors4readEPjh+0xb2>
    341a:	be 01       	movw	r22, r28
    341c:	6f 5f       	subi	r22, 0xFF	; 255
    341e:	7f 4f       	sbci	r23, 0xFF	; 255
    3420:	c8 01       	movw	r24, r16
    3422:	0e 94 99 18 	call	0x3132	; 0x3132 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    3426:	0f c0       	rjmp	.+30     	; 0x3446 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    3428:	c8 01       	movw	r24, r16
    342a:	0e 94 71 19 	call	0x32e2	; 0x32e2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    342e:	c8 01       	movw	r24, r16
    3430:	0e 94 1b 18 	call	0x3036	; 0x3036 <_ZN16PololuQTRSensors11emittersOffEv>
    3434:	e2 e0       	ldi	r30, 0x02	; 2
    3436:	de 12       	cpse	r13, r30
    3438:	2a c0       	rjmp	.+84     	; 0x348e <_ZN16PololuQTRSensors4readEPjh+0xb2>
    343a:	be 01       	movw	r22, r28
    343c:	6f 5f       	subi	r22, 0xFF	; 255
    343e:	7f 4f       	sbci	r23, 0xFF	; 255
    3440:	c8 01       	movw	r24, r16
    3442:	0e 94 71 19 	call	0x32e2	; 0x32e2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    3446:	40 e0       	ldi	r20, 0x00	; 0
    3448:	f8 01       	movw	r30, r16
    344a:	80 85       	ldd	r24, Z+8	; 0x08
    344c:	48 17       	cp	r20, r24
    344e:	f8 f4       	brcc	.+62     	; 0x348e <_ZN16PololuQTRSensors4readEPjh+0xb2>
    3450:	84 2f       	mov	r24, r20
    3452:	90 e0       	ldi	r25, 0x00	; 0
    3454:	88 0f       	add	r24, r24
    3456:	99 1f       	adc	r25, r25
    3458:	f7 01       	movw	r30, r14
    345a:	e8 0f       	add	r30, r24
    345c:	f9 1f       	adc	r31, r25
    345e:	21 e0       	ldi	r18, 0x01	; 1
    3460:	30 e0       	ldi	r19, 0x00	; 0
    3462:	2c 0f       	add	r18, r28
    3464:	3d 1f       	adc	r19, r29
    3466:	82 0f       	add	r24, r18
    3468:	93 1f       	adc	r25, r19
    346a:	d8 01       	movw	r26, r16
    346c:	1e 96       	adiw	r26, 0x0e	; 14
    346e:	2d 91       	ld	r18, X+
    3470:	3c 91       	ld	r19, X
    3472:	1f 97       	sbiw	r26, 0x0f	; 15
    3474:	dc 01       	movw	r26, r24
    3476:	8d 91       	ld	r24, X+
    3478:	9c 91       	ld	r25, X
    347a:	28 1b       	sub	r18, r24
    347c:	39 0b       	sbc	r19, r25
    347e:	80 81       	ld	r24, Z
    3480:	91 81       	ldd	r25, Z+1	; 0x01
    3482:	82 0f       	add	r24, r18
    3484:	93 1f       	adc	r25, r19
    3486:	91 83       	std	Z+1, r25	; 0x01
    3488:	80 83       	st	Z, r24
    348a:	4f 5f       	subi	r20, 0xFF	; 255
    348c:	dd cf       	rjmp	.-70     	; 0x3448 <_ZN16PololuQTRSensors4readEPjh+0x6c>
    348e:	a0 96       	adiw	r28, 0x20	; 32
    3490:	e7 e0       	ldi	r30, 0x07	; 7
    3492:	0c 94 74 1d 	jmp	0x3ae8	; 0x3ae8 <__epilogue_restores__+0x16>

00003496 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    3496:	2f 92       	push	r2
    3498:	3f 92       	push	r3
    349a:	5f 92       	push	r5
    349c:	6f 92       	push	r6
    349e:	7f 92       	push	r7
    34a0:	8f 92       	push	r8
    34a2:	9f 92       	push	r9
    34a4:	af 92       	push	r10
    34a6:	bf 92       	push	r11
    34a8:	cf 92       	push	r12
    34aa:	df 92       	push	r13
    34ac:	ef 92       	push	r14
    34ae:	ff 92       	push	r15
    34b0:	0f 93       	push	r16
    34b2:	1f 93       	push	r17
    34b4:	cf 93       	push	r28
    34b6:	df 93       	push	r29
    34b8:	cd b7       	in	r28, 0x3d	; 61
    34ba:	de b7       	in	r29, 0x3e	; 62
    34bc:	c0 56       	subi	r28, 0x60	; 96
    34be:	d1 09       	sbc	r29, r1
    34c0:	0f b6       	in	r0, 0x3f	; 63
    34c2:	f8 94       	cli
    34c4:	de bf       	out	0x3e, r29	; 62
    34c6:	0f be       	out	0x3f, r0	; 63
    34c8:	cd bf       	out	0x3d, r28	; 61
    34ca:	8c 01       	movw	r16, r24
    34cc:	4b 01       	movw	r8, r22
    34ce:	5a 01       	movw	r10, r20
    34d0:	52 2e       	mov	r5, r18
    34d2:	da 01       	movw	r26, r20
    34d4:	8d 91       	ld	r24, X+
    34d6:	9c 91       	ld	r25, X
    34d8:	89 2b       	or	r24, r25
    34da:	31 f0       	breq	.+12     	; 0x34e8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    34dc:	f4 01       	movw	r30, r8
    34de:	80 81       	ld	r24, Z
    34e0:	91 81       	ldd	r25, Z+1	; 0x01
    34e2:	89 2b       	or	r24, r25
    34e4:	f1 f4       	brne	.+60     	; 0x3522 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    34e6:	24 c0       	rjmp	.+72     	; 0x3530 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    34e8:	d8 01       	movw	r26, r16
    34ea:	18 96       	adiw	r26, 0x08	; 8
    34ec:	8c 91       	ld	r24, X
    34ee:	90 e0       	ldi	r25, 0x00	; 0
    34f0:	88 0f       	add	r24, r24
    34f2:	99 1f       	adc	r25, r25
    34f4:	0e 94 84 1d 	call	0x3b08	; 0x3b08 <malloc>
    34f8:	f5 01       	movw	r30, r10
    34fa:	91 83       	std	Z+1, r25	; 0x01
    34fc:	80 83       	st	Z, r24
    34fe:	00 97       	sbiw	r24, 0x00	; 0
    3500:	09 f4       	brne	.+2      	; 0x3504 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    3502:	b1 c0       	rjmp	.+354    	; 0x3666 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    3504:	fc 01       	movw	r30, r24
    3506:	20 e0       	ldi	r18, 0x00	; 0
    3508:	30 e0       	ldi	r19, 0x00	; 0
    350a:	d8 01       	movw	r26, r16
    350c:	18 96       	adiw	r26, 0x08	; 8
    350e:	8c 91       	ld	r24, X
    3510:	90 e0       	ldi	r25, 0x00	; 0
    3512:	28 17       	cp	r18, r24
    3514:	39 07       	cpc	r19, r25
    3516:	14 f7       	brge	.-60     	; 0x34dc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    3518:	11 92       	st	Z+, r1
    351a:	11 92       	st	Z+, r1
    351c:	2f 5f       	subi	r18, 0xFF	; 255
    351e:	3f 4f       	sbci	r19, 0xFF	; 255
    3520:	f4 cf       	rjmp	.-24     	; 0x350a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    3522:	e1 2c       	mov	r14, r1
    3524:	f1 2c       	mov	r15, r1
    3526:	6e 01       	movw	r12, r28
    3528:	b1 e2       	ldi	r27, 0x21	; 33
    352a:	cb 0e       	add	r12, r27
    352c:	d1 1c       	adc	r13, r1
    352e:	21 c0       	rjmp	.+66     	; 0x3572 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    3530:	f8 01       	movw	r30, r16
    3532:	80 85       	ldd	r24, Z+8	; 0x08
    3534:	90 e0       	ldi	r25, 0x00	; 0
    3536:	88 0f       	add	r24, r24
    3538:	99 1f       	adc	r25, r25
    353a:	0e 94 84 1d 	call	0x3b08	; 0x3b08 <malloc>
    353e:	d4 01       	movw	r26, r8
    3540:	8d 93       	st	X+, r24
    3542:	9c 93       	st	X, r25
    3544:	00 97       	sbiw	r24, 0x00	; 0
    3546:	09 f4       	brne	.+2      	; 0x354a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    3548:	8e c0       	rjmp	.+284    	; 0x3666 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    354a:	fc 01       	movw	r30, r24
    354c:	20 e0       	ldi	r18, 0x00	; 0
    354e:	30 e0       	ldi	r19, 0x00	; 0
    3550:	d8 01       	movw	r26, r16
    3552:	18 96       	adiw	r26, 0x08	; 8
    3554:	8c 91       	ld	r24, X
    3556:	90 e0       	ldi	r25, 0x00	; 0
    3558:	28 17       	cp	r18, r24
    355a:	39 07       	cpc	r19, r25
    355c:	14 f7       	brge	.-60     	; 0x3522 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    355e:	d8 01       	movw	r26, r16
    3560:	1e 96       	adiw	r26, 0x0e	; 14
    3562:	8d 91       	ld	r24, X+
    3564:	9c 91       	ld	r25, X
    3566:	1f 97       	sbiw	r26, 0x0f	; 15
    3568:	81 93       	st	Z+, r24
    356a:	91 93       	st	Z+, r25
    356c:	2f 5f       	subi	r18, 0xFF	; 255
    356e:	3f 4f       	sbci	r19, 0xFF	; 255
    3570:	ef cf       	rjmp	.-34     	; 0x3550 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    3572:	45 2d       	mov	r20, r5
    3574:	be 01       	movw	r22, r28
    3576:	6f 5b       	subi	r22, 0xBF	; 191
    3578:	7f 4f       	sbci	r23, 0xFF	; 255
    357a:	c8 01       	movw	r24, r16
    357c:	0e 94 ee 19 	call	0x33dc	; 0x33dc <_ZN16PololuQTRSensors4readEPjh>
    3580:	f8 01       	movw	r30, r16
    3582:	60 84       	ldd	r6, Z+8	; 0x08
    3584:	71 2c       	mov	r7, r1
    3586:	fe 01       	movw	r30, r28
    3588:	ef 5b       	subi	r30, 0xBF	; 191
    358a:	ff 4f       	sbci	r31, 0xFF	; 255
    358c:	c6 01       	movw	r24, r12
    358e:	9e 01       	movw	r18, r28
    3590:	2f 5f       	subi	r18, 0xFF	; 255
    3592:	3f 4f       	sbci	r19, 0xFF	; 255
    3594:	19 01       	movw	r2, r18
    3596:	20 e0       	ldi	r18, 0x00	; 0
    3598:	30 e0       	ldi	r19, 0x00	; 0
    359a:	26 15       	cp	r18, r6
    359c:	37 05       	cpc	r19, r7
    359e:	4c f5       	brge	.+82     	; 0x35f2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    35a0:	e1 14       	cp	r14, r1
    35a2:	f1 04       	cpc	r15, r1
    35a4:	89 f0       	breq	.+34     	; 0x35c8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    35a6:	dc 01       	movw	r26, r24
    35a8:	6d 91       	ld	r22, X+
    35aa:	7c 91       	ld	r23, X
    35ac:	40 81       	ld	r20, Z
    35ae:	51 81       	ldd	r21, Z+1	; 0x01
    35b0:	64 17       	cp	r22, r20
    35b2:	75 07       	cpc	r23, r21
    35b4:	48 f0       	brcs	.+18     	; 0x35c8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    35b6:	d1 01       	movw	r26, r2
    35b8:	6d 91       	ld	r22, X+
    35ba:	7c 91       	ld	r23, X
    35bc:	40 81       	ld	r20, Z
    35be:	51 81       	ldd	r21, Z+1	; 0x01
    35c0:	46 17       	cp	r20, r22
    35c2:	57 07       	cpc	r21, r23
    35c4:	48 f0       	brcs	.+18     	; 0x35d8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    35c6:	0d c0       	rjmp	.+26     	; 0x35e2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    35c8:	40 81       	ld	r20, Z
    35ca:	51 81       	ldd	r21, Z+1	; 0x01
    35cc:	dc 01       	movw	r26, r24
    35ce:	4d 93       	st	X+, r20
    35d0:	5c 93       	st	X, r21
    35d2:	e1 14       	cp	r14, r1
    35d4:	f1 04       	cpc	r15, r1
    35d6:	79 f7       	brne	.-34     	; 0x35b6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    35d8:	40 81       	ld	r20, Z
    35da:	51 81       	ldd	r21, Z+1	; 0x01
    35dc:	d1 01       	movw	r26, r2
    35de:	4d 93       	st	X+, r20
    35e0:	5c 93       	st	X, r21
    35e2:	2f 5f       	subi	r18, 0xFF	; 255
    35e4:	3f 4f       	sbci	r19, 0xFF	; 255
    35e6:	b2 e0       	ldi	r27, 0x02	; 2
    35e8:	2b 0e       	add	r2, r27
    35ea:	31 1c       	adc	r3, r1
    35ec:	32 96       	adiw	r30, 0x02	; 2
    35ee:	02 96       	adiw	r24, 0x02	; 2
    35f0:	d4 cf       	rjmp	.-88     	; 0x359a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    35f2:	ef ef       	ldi	r30, 0xFF	; 255
    35f4:	ee 1a       	sub	r14, r30
    35f6:	fe 0a       	sbc	r15, r30
    35f8:	fa e0       	ldi	r31, 0x0A	; 10
    35fa:	ef 16       	cp	r14, r31
    35fc:	f1 04       	cpc	r15, r1
    35fe:	09 f0       	breq	.+2      	; 0x3602 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    3600:	b8 cf       	rjmp	.-144    	; 0x3572 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    3602:	9e 01       	movw	r18, r28
    3604:	2f 5f       	subi	r18, 0xFF	; 255
    3606:	3f 4f       	sbci	r19, 0xFF	; 255
    3608:	79 01       	movw	r14, r18
    360a:	36 01       	movw	r6, r12
    360c:	80 e0       	ldi	r24, 0x00	; 0
    360e:	90 e0       	ldi	r25, 0x00	; 0
    3610:	f8 01       	movw	r30, r16
    3612:	20 85       	ldd	r18, Z+8	; 0x08
    3614:	30 e0       	ldi	r19, 0x00	; 0
    3616:	82 17       	cp	r24, r18
    3618:	93 07       	cpc	r25, r19
    361a:	2c f5       	brge	.+74     	; 0x3666 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    361c:	d7 01       	movw	r26, r14
    361e:	2d 91       	ld	r18, X+
    3620:	3d 91       	ld	r19, X+
    3622:	7d 01       	movw	r14, r26
    3624:	b3 01       	movw	r22, r6
    3626:	6c 19       	sub	r22, r12
    3628:	7d 09       	sbc	r23, r13
    362a:	d5 01       	movw	r26, r10
    362c:	ed 91       	ld	r30, X+
    362e:	fc 91       	ld	r31, X
    3630:	e6 0f       	add	r30, r22
    3632:	f7 1f       	adc	r31, r23
    3634:	40 81       	ld	r20, Z
    3636:	51 81       	ldd	r21, Z+1	; 0x01
    3638:	42 17       	cp	r20, r18
    363a:	53 07       	cpc	r21, r19
    363c:	10 f4       	brcc	.+4      	; 0x3642 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    363e:	31 83       	std	Z+1, r19	; 0x01
    3640:	20 83       	st	Z, r18
    3642:	f3 01       	movw	r30, r6
    3644:	21 91       	ld	r18, Z+
    3646:	31 91       	ld	r19, Z+
    3648:	3f 01       	movw	r6, r30
    364a:	d4 01       	movw	r26, r8
    364c:	ed 91       	ld	r30, X+
    364e:	fc 91       	ld	r31, X
    3650:	e6 0f       	add	r30, r22
    3652:	f7 1f       	adc	r31, r23
    3654:	40 81       	ld	r20, Z
    3656:	51 81       	ldd	r21, Z+1	; 0x01
    3658:	24 17       	cp	r18, r20
    365a:	35 07       	cpc	r19, r21
    365c:	10 f4       	brcc	.+4      	; 0x3662 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    365e:	31 83       	std	Z+1, r19	; 0x01
    3660:	20 83       	st	Z, r18
    3662:	01 96       	adiw	r24, 0x01	; 1
    3664:	d5 cf       	rjmp	.-86     	; 0x3610 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    3666:	c0 5a       	subi	r28, 0xA0	; 160
    3668:	df 4f       	sbci	r29, 0xFF	; 255
    366a:	0f b6       	in	r0, 0x3f	; 63
    366c:	f8 94       	cli
    366e:	de bf       	out	0x3e, r29	; 62
    3670:	0f be       	out	0x3f, r0	; 63
    3672:	cd bf       	out	0x3d, r28	; 61
    3674:	df 91       	pop	r29
    3676:	cf 91       	pop	r28
    3678:	1f 91       	pop	r17
    367a:	0f 91       	pop	r16
    367c:	ff 90       	pop	r15
    367e:	ef 90       	pop	r14
    3680:	df 90       	pop	r13
    3682:	cf 90       	pop	r12
    3684:	bf 90       	pop	r11
    3686:	af 90       	pop	r10
    3688:	9f 90       	pop	r9
    368a:	8f 90       	pop	r8
    368c:	7f 90       	pop	r7
    368e:	6f 90       	pop	r6
    3690:	5f 90       	pop	r5
    3692:	3f 90       	pop	r3
    3694:	2f 90       	pop	r2
    3696:	08 95       	ret

00003698 <_ZN16PololuQTRSensors9calibrateEh>:
    3698:	1f 93       	push	r17
    369a:	cf 93       	push	r28
    369c:	df 93       	push	r29
    369e:	ec 01       	movw	r28, r24
    36a0:	16 2f       	mov	r17, r22
    36a2:	8f ef       	ldi	r24, 0xFF	; 255
    36a4:	86 0f       	add	r24, r22
    36a6:	82 30       	cpi	r24, 0x02	; 2
    36a8:	18 f0       	brcs	.+6      	; 0x36b0 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    36aa:	66 23       	and	r22, r22
    36ac:	59 f0       	breq	.+22     	; 0x36c4 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    36ae:	14 c0       	rjmp	.+40     	; 0x36d8 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    36b0:	21 e0       	ldi	r18, 0x01	; 1
    36b2:	ae 01       	movw	r20, r28
    36b4:	4e 5f       	subi	r20, 0xFE	; 254
    36b6:	5f 4f       	sbci	r21, 0xFF	; 255
    36b8:	be 01       	movw	r22, r28
    36ba:	ce 01       	movw	r24, r28
    36bc:	0e 94 4b 1a 	call	0x3496	; 0x3496 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    36c0:	12 30       	cpi	r17, 0x02	; 2
    36c2:	51 f4       	brne	.+20     	; 0x36d8 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    36c4:	ae 01       	movw	r20, r28
    36c6:	4a 5f       	subi	r20, 0xFA	; 250
    36c8:	5f 4f       	sbci	r21, 0xFF	; 255
    36ca:	be 01       	movw	r22, r28
    36cc:	6c 5f       	subi	r22, 0xFC	; 252
    36ce:	7f 4f       	sbci	r23, 0xFF	; 255
    36d0:	20 e0       	ldi	r18, 0x00	; 0
    36d2:	ce 01       	movw	r24, r28
    36d4:	0e 94 4b 1a 	call	0x3496	; 0x3496 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    36d8:	df 91       	pop	r29
    36da:	cf 91       	pop	r28
    36dc:	1f 91       	pop	r17
    36de:	08 95       	ret

000036e0 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    36e0:	a0 e0       	ldi	r26, 0x00	; 0
    36e2:	b0 e0       	ldi	r27, 0x00	; 0
    36e4:	e6 e7       	ldi	r30, 0x76	; 118
    36e6:	fb e1       	ldi	r31, 0x1B	; 27
    36e8:	0c 94 56 1d 	jmp	0x3aac	; 0x3aac <__prologue_saves__+0x12>
    36ec:	ec 01       	movw	r28, r24
    36ee:	8b 01       	movw	r16, r22
    36f0:	b4 2e       	mov	r11, r20
    36f2:	84 2f       	mov	r24, r20
    36f4:	8d 7f       	andi	r24, 0xFD	; 253
    36f6:	51 f4       	brne	.+20     	; 0x370c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    36f8:	8c 81       	ldd	r24, Y+4	; 0x04
    36fa:	9d 81       	ldd	r25, Y+5	; 0x05
    36fc:	89 2b       	or	r24, r25
    36fe:	09 f4       	brne	.+2      	; 0x3702 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    3700:	97 c0       	rjmp	.+302    	; 0x3830 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3702:	8e 81       	ldd	r24, Y+6	; 0x06
    3704:	9f 81       	ldd	r25, Y+7	; 0x07
    3706:	89 2b       	or	r24, r25
    3708:	09 f4       	brne	.+2      	; 0x370c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    370a:	92 c0       	rjmp	.+292    	; 0x3830 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    370c:	8f ef       	ldi	r24, 0xFF	; 255
    370e:	8b 0d       	add	r24, r11
    3710:	82 30       	cpi	r24, 0x02	; 2
    3712:	50 f4       	brcc	.+20     	; 0x3728 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    3714:	88 81       	ld	r24, Y
    3716:	99 81       	ldd	r25, Y+1	; 0x01
    3718:	89 2b       	or	r24, r25
    371a:	09 f4       	brne	.+2      	; 0x371e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    371c:	89 c0       	rjmp	.+274    	; 0x3830 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    371e:	8a 81       	ldd	r24, Y+2	; 0x02
    3720:	9b 81       	ldd	r25, Y+3	; 0x03
    3722:	89 2b       	or	r24, r25
    3724:	09 f4       	brne	.+2      	; 0x3728 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    3726:	84 c0       	rjmp	.+264    	; 0x3830 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3728:	4b 2d       	mov	r20, r11
    372a:	b8 01       	movw	r22, r16
    372c:	ce 01       	movw	r24, r28
    372e:	0e 94 ee 19 	call	0x33dc	; 0x33dc <_ZN16PololuQTRSensors4readEPjh>
    3732:	78 01       	movw	r14, r16
    3734:	00 e0       	ldi	r16, 0x00	; 0
    3736:	10 e0       	ldi	r17, 0x00	; 0
    3738:	c1 2c       	mov	r12, r1
    373a:	d1 2c       	mov	r13, r1
    373c:	88 85       	ldd	r24, Y+8	; 0x08
    373e:	90 e0       	ldi	r25, 0x00	; 0
    3740:	c8 16       	cp	r12, r24
    3742:	d9 06       	cpc	r13, r25
    3744:	0c f0       	brlt	.+2      	; 0x3748 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    3746:	74 c0       	rjmp	.+232    	; 0x3830 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3748:	81 e0       	ldi	r24, 0x01	; 1
    374a:	b8 12       	cpse	r11, r24
    374c:	0a c0       	rjmp	.+20     	; 0x3762 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    374e:	ea 81       	ldd	r30, Y+2	; 0x02
    3750:	fb 81       	ldd	r31, Y+3	; 0x03
    3752:	e0 0f       	add	r30, r16
    3754:	f1 1f       	adc	r31, r17
    3756:	01 90       	ld	r0, Z+
    3758:	f0 81       	ld	r31, Z
    375a:	e0 2d       	mov	r30, r0
    375c:	a8 81       	ld	r26, Y
    375e:	b9 81       	ldd	r27, Y+1	; 0x01
    3760:	0d c0       	rjmp	.+26     	; 0x377c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    3762:	8c 81       	ldd	r24, Y+4	; 0x04
    3764:	9d 81       	ldd	r25, Y+5	; 0x05
    3766:	2e 81       	ldd	r18, Y+6	; 0x06
    3768:	3f 81       	ldd	r19, Y+7	; 0x07
    376a:	b1 10       	cpse	r11, r1
    376c:	0c c0       	rjmp	.+24     	; 0x3786 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    376e:	f9 01       	movw	r30, r18
    3770:	e0 0f       	add	r30, r16
    3772:	f1 1f       	adc	r31, r17
    3774:	01 90       	ld	r0, Z+
    3776:	f0 81       	ld	r31, Z
    3778:	e0 2d       	mov	r30, r0
    377a:	dc 01       	movw	r26, r24
    377c:	a0 0f       	add	r26, r16
    377e:	b1 1f       	adc	r27, r17
    3780:	8d 91       	ld	r24, X+
    3782:	9c 91       	ld	r25, X
    3784:	28 c0       	rjmp	.+80     	; 0x37d6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    3786:	fc 01       	movw	r30, r24
    3788:	e0 0f       	add	r30, r16
    378a:	f1 1f       	adc	r31, r17
    378c:	40 81       	ld	r20, Z
    378e:	51 81       	ldd	r21, Z+1	; 0x01
    3790:	e8 81       	ld	r30, Y
    3792:	f9 81       	ldd	r31, Y+1	; 0x01
    3794:	e0 0f       	add	r30, r16
    3796:	f1 1f       	adc	r31, r17
    3798:	80 81       	ld	r24, Z
    379a:	91 81       	ldd	r25, Z+1	; 0x01
    379c:	ee 85       	ldd	r30, Y+14	; 0x0e
    379e:	ff 85       	ldd	r31, Y+15	; 0x0f
    37a0:	48 17       	cp	r20, r24
    37a2:	59 07       	cpc	r21, r25
    37a4:	10 f4       	brcc	.+4      	; 0x37aa <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    37a6:	cf 01       	movw	r24, r30
    37a8:	04 c0       	rjmp	.+8      	; 0x37b2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    37aa:	8e 0f       	add	r24, r30
    37ac:	9f 1f       	adc	r25, r31
    37ae:	84 1b       	sub	r24, r20
    37b0:	95 0b       	sbc	r25, r21
    37b2:	d9 01       	movw	r26, r18
    37b4:	a0 0f       	add	r26, r16
    37b6:	b1 1f       	adc	r27, r17
    37b8:	2d 91       	ld	r18, X+
    37ba:	3c 91       	ld	r19, X
    37bc:	aa 81       	ldd	r26, Y+2	; 0x02
    37be:	bb 81       	ldd	r27, Y+3	; 0x03
    37c0:	a0 0f       	add	r26, r16
    37c2:	b1 1f       	adc	r27, r17
    37c4:	4d 91       	ld	r20, X+
    37c6:	5c 91       	ld	r21, X
    37c8:	24 17       	cp	r18, r20
    37ca:	35 07       	cpc	r19, r21
    37cc:	20 f0       	brcs	.+8      	; 0x37d6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    37ce:	e4 0f       	add	r30, r20
    37d0:	f5 1f       	adc	r31, r21
    37d2:	e2 1b       	sub	r30, r18
    37d4:	f3 0b       	sbc	r31, r19
    37d6:	e8 1b       	sub	r30, r24
    37d8:	f9 0b       	sbc	r31, r25
    37da:	a9 f0       	breq	.+42     	; 0x3806 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    37dc:	d7 01       	movw	r26, r14
    37de:	2d 91       	ld	r18, X+
    37e0:	3c 91       	ld	r19, X
    37e2:	40 e0       	ldi	r20, 0x00	; 0
    37e4:	50 e0       	ldi	r21, 0x00	; 0
    37e6:	28 1b       	sub	r18, r24
    37e8:	39 0b       	sbc	r19, r25
    37ea:	41 09       	sbc	r20, r1
    37ec:	51 09       	sbc	r21, r1
    37ee:	a8 ee       	ldi	r26, 0xE8	; 232
    37f0:	b3 e0       	ldi	r27, 0x03	; 3
    37f2:	0e 94 3a 1d 	call	0x3a74	; 0x3a74 <__muluhisi3>
    37f6:	9f 01       	movw	r18, r30
    37f8:	40 e0       	ldi	r20, 0x00	; 0
    37fa:	50 e0       	ldi	r21, 0x00	; 0
    37fc:	0e 94 06 1d 	call	0x3a0c	; 0x3a0c <__divmodsi4>
    3800:	37 fd       	sbrc	r19, 7
    3802:	0a c0       	rjmp	.+20     	; 0x3818 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    3804:	02 c0       	rjmp	.+4      	; 0x380a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    3806:	20 e0       	ldi	r18, 0x00	; 0
    3808:	30 e0       	ldi	r19, 0x00	; 0
    380a:	29 3e       	cpi	r18, 0xE9	; 233
    380c:	b3 e0       	ldi	r27, 0x03	; 3
    380e:	3b 07       	cpc	r19, r27
    3810:	2c f0       	brlt	.+10     	; 0x381c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    3812:	28 ee       	ldi	r18, 0xE8	; 232
    3814:	33 e0       	ldi	r19, 0x03	; 3
    3816:	02 c0       	rjmp	.+4      	; 0x381c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    3818:	20 e0       	ldi	r18, 0x00	; 0
    381a:	30 e0       	ldi	r19, 0x00	; 0
    381c:	f7 01       	movw	r30, r14
    381e:	21 93       	st	Z+, r18
    3820:	31 93       	st	Z+, r19
    3822:	7f 01       	movw	r14, r30
    3824:	ff ef       	ldi	r31, 0xFF	; 255
    3826:	cf 1a       	sub	r12, r31
    3828:	df 0a       	sbc	r13, r31
    382a:	0e 5f       	subi	r16, 0xFE	; 254
    382c:	1f 4f       	sbci	r17, 0xFF	; 255
    382e:	86 cf       	rjmp	.-244    	; 0x373c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    3830:	cd b7       	in	r28, 0x3d	; 61
    3832:	de b7       	in	r29, 0x3e	; 62
    3834:	e9 e0       	ldi	r30, 0x09	; 9
    3836:	0c 94 72 1d 	jmp	0x3ae4	; 0x3ae4 <__epilogue_restores__+0x12>

0000383a <_ZN16PololuQTRSensors8readLineEPjhh>:
    383a:	a0 e0       	ldi	r26, 0x00	; 0
    383c:	b0 e0       	ldi	r27, 0x00	; 0
    383e:	e3 e2       	ldi	r30, 0x23	; 35
    3840:	fc e1       	ldi	r31, 0x1C	; 28
    3842:	0c 94 4d 1d 	jmp	0x3a9a	; 0x3a9a <__prologue_saves__>
    3846:	ec 01       	movw	r28, r24
    3848:	8b 01       	movw	r16, r22
    384a:	82 2e       	mov	r8, r18
    384c:	0e 94 70 1b 	call	0x36e0	; 0x36e0 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    3850:	28 84       	ldd	r2, Y+8	; 0x08
    3852:	e8 01       	movw	r28, r16
    3854:	41 2c       	mov	r4, r1
    3856:	51 2c       	mov	r5, r1
    3858:	32 01       	movw	r6, r4
    385a:	00 e0       	ldi	r16, 0x00	; 0
    385c:	10 e0       	ldi	r17, 0x00	; 0
    385e:	c1 2c       	mov	r12, r1
    3860:	d1 2c       	mov	r13, r1
    3862:	76 01       	movw	r14, r12
    3864:	31 2c       	mov	r3, r1
    3866:	91 2c       	mov	r9, r1
    3868:	58 ee       	ldi	r21, 0xE8	; 232
    386a:	a5 2e       	mov	r10, r21
    386c:	53 e0       	ldi	r21, 0x03	; 3
    386e:	b5 2e       	mov	r11, r21
    3870:	92 14       	cp	r9, r2
    3872:	21 f1       	breq	.+72     	; 0x38bc <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    3874:	e9 91       	ld	r30, Y+
    3876:	f9 91       	ld	r31, Y+
    3878:	88 20       	and	r8, r8
    387a:	21 f0       	breq	.+8      	; 0x3884 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    387c:	c5 01       	movw	r24, r10
    387e:	8e 1b       	sub	r24, r30
    3880:	9f 0b       	sbc	r25, r31
    3882:	fc 01       	movw	r30, r24
    3884:	e9 3c       	cpi	r30, 0xC9	; 201
    3886:	f1 05       	cpc	r31, r1
    3888:	24 f4       	brge	.+8      	; 0x3892 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    388a:	e3 33       	cpi	r30, 0x33	; 51
    388c:	f1 05       	cpc	r31, r1
    388e:	74 f0       	brlt	.+28     	; 0x38ac <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    3890:	02 c0       	rjmp	.+4      	; 0x3896 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    3892:	33 24       	eor	r3, r3
    3894:	33 94       	inc	r3
    3896:	df 01       	movw	r26, r30
    3898:	a3 01       	movw	r20, r6
    389a:	92 01       	movw	r18, r4
    389c:	0e 94 45 1d 	call	0x3a8a	; 0x3a8a <__mulshisi3>
    38a0:	c6 0e       	add	r12, r22
    38a2:	d7 1e       	adc	r13, r23
    38a4:	e8 1e       	adc	r14, r24
    38a6:	f9 1e       	adc	r15, r25
    38a8:	0e 0f       	add	r16, r30
    38aa:	1f 1f       	adc	r17, r31
    38ac:	93 94       	inc	r9
    38ae:	98 ee       	ldi	r25, 0xE8	; 232
    38b0:	49 0e       	add	r4, r25
    38b2:	93 e0       	ldi	r25, 0x03	; 3
    38b4:	59 1e       	adc	r5, r25
    38b6:	61 1c       	adc	r6, r1
    38b8:	71 1c       	adc	r7, r1
    38ba:	da cf       	rjmp	.-76     	; 0x3870 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    38bc:	31 10       	cpse	r3, r1
    38be:	1e c0       	rjmp	.+60     	; 0x38fc <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    38c0:	49 2d       	mov	r20, r9
    38c2:	50 e0       	ldi	r21, 0x00	; 0
    38c4:	41 50       	subi	r20, 0x01	; 1
    38c6:	51 09       	sbc	r21, r1
    38c8:	24 ef       	ldi	r18, 0xF4	; 244
    38ca:	31 e0       	ldi	r19, 0x01	; 1
    38cc:	42 9f       	mul	r20, r18
    38ce:	c0 01       	movw	r24, r0
    38d0:	43 9f       	mul	r20, r19
    38d2:	90 0d       	add	r25, r0
    38d4:	52 9f       	mul	r21, r18
    38d6:	90 0d       	add	r25, r0
    38d8:	11 24       	eor	r1, r1
    38da:	20 91 f5 01 	lds	r18, 0x01F5	; 0x8001f5 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    38de:	30 91 f6 01 	lds	r19, 0x01F6	; 0x8001f6 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    38e2:	28 17       	cp	r18, r24
    38e4:	39 07       	cpc	r19, r25
    38e6:	b4 f0       	brlt	.+44     	; 0x3914 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    38e8:	88 ee       	ldi	r24, 0xE8	; 232
    38ea:	93 e0       	ldi	r25, 0x03	; 3
    38ec:	48 9f       	mul	r20, r24
    38ee:	90 01       	movw	r18, r0
    38f0:	49 9f       	mul	r20, r25
    38f2:	30 0d       	add	r19, r0
    38f4:	58 9f       	mul	r21, r24
    38f6:	30 0d       	add	r19, r0
    38f8:	11 24       	eor	r1, r1
    38fa:	0e c0       	rjmp	.+28     	; 0x3918 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    38fc:	98 01       	movw	r18, r16
    38fe:	40 e0       	ldi	r20, 0x00	; 0
    3900:	50 e0       	ldi	r21, 0x00	; 0
    3902:	c7 01       	movw	r24, r14
    3904:	b6 01       	movw	r22, r12
    3906:	0e 94 e4 1c 	call	0x39c8	; 0x39c8 <__udivmodsi4>
    390a:	30 93 f6 01 	sts	0x01F6, r19	; 0x8001f6 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    390e:	20 93 f5 01 	sts	0x01F5, r18	; 0x8001f5 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    3912:	02 c0       	rjmp	.+4      	; 0x3918 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    3914:	20 e0       	ldi	r18, 0x00	; 0
    3916:	30 e0       	ldi	r19, 0x00	; 0
    3918:	c9 01       	movw	r24, r18
    391a:	cd b7       	in	r28, 0x3d	; 61
    391c:	de b7       	in	r29, 0x3e	; 62
    391e:	e2 e1       	ldi	r30, 0x12	; 18
    3920:	0c 94 69 1d 	jmp	0x3ad2	; 0x3ad2 <__epilogue_restores__>

00003924 <_ZN16PololuQTRSensorsD1Ev>:
    3924:	cf 93       	push	r28
    3926:	df 93       	push	r29
    3928:	ec 01       	movw	r28, r24
    392a:	8a 81       	ldd	r24, Y+2	; 0x02
    392c:	9b 81       	ldd	r25, Y+3	; 0x03
    392e:	00 97       	sbiw	r24, 0x00	; 0
    3930:	11 f0       	breq	.+4      	; 0x3936 <_ZN16PololuQTRSensorsD1Ev+0x12>
    3932:	0e 94 1c 1e 	call	0x3c38	; 0x3c38 <free>
    3936:	8e 81       	ldd	r24, Y+6	; 0x06
    3938:	9f 81       	ldd	r25, Y+7	; 0x07
    393a:	00 97       	sbiw	r24, 0x00	; 0
    393c:	11 f0       	breq	.+4      	; 0x3942 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    393e:	0e 94 1c 1e 	call	0x3c38	; 0x3c38 <free>
    3942:	88 81       	ld	r24, Y
    3944:	99 81       	ldd	r25, Y+1	; 0x01
    3946:	00 97       	sbiw	r24, 0x00	; 0
    3948:	11 f0       	breq	.+4      	; 0x394e <_ZN16PololuQTRSensorsD1Ev+0x2a>
    394a:	0e 94 1c 1e 	call	0x3c38	; 0x3c38 <free>
    394e:	8c 81       	ldd	r24, Y+4	; 0x04
    3950:	9d 81       	ldd	r25, Y+5	; 0x05
    3952:	00 97       	sbiw	r24, 0x00	; 0
    3954:	11 f0       	breq	.+4      	; 0x395a <_ZN16PololuQTRSensorsD1Ev+0x36>
    3956:	0e 94 1c 1e 	call	0x3c38	; 0x3c38 <free>
    395a:	df 91       	pop	r29
    395c:	cf 91       	pop	r28
    395e:	08 95       	ret

00003960 <__udivmodqi4>:
    3960:	99 1b       	sub	r25, r25
    3962:	79 e0       	ldi	r23, 0x09	; 9
    3964:	04 c0       	rjmp	.+8      	; 0x396e <__udivmodqi4_ep>

00003966 <__udivmodqi4_loop>:
    3966:	99 1f       	adc	r25, r25
    3968:	96 17       	cp	r25, r22
    396a:	08 f0       	brcs	.+2      	; 0x396e <__udivmodqi4_ep>
    396c:	96 1b       	sub	r25, r22

0000396e <__udivmodqi4_ep>:
    396e:	88 1f       	adc	r24, r24
    3970:	7a 95       	dec	r23
    3972:	c9 f7       	brne	.-14     	; 0x3966 <__udivmodqi4_loop>
    3974:	80 95       	com	r24
    3976:	08 95       	ret

00003978 <__udivmodhi4>:
    3978:	aa 1b       	sub	r26, r26
    397a:	bb 1b       	sub	r27, r27
    397c:	51 e1       	ldi	r21, 0x11	; 17
    397e:	07 c0       	rjmp	.+14     	; 0x398e <__udivmodhi4_ep>

00003980 <__udivmodhi4_loop>:
    3980:	aa 1f       	adc	r26, r26
    3982:	bb 1f       	adc	r27, r27
    3984:	a6 17       	cp	r26, r22
    3986:	b7 07       	cpc	r27, r23
    3988:	10 f0       	brcs	.+4      	; 0x398e <__udivmodhi4_ep>
    398a:	a6 1b       	sub	r26, r22
    398c:	b7 0b       	sbc	r27, r23

0000398e <__udivmodhi4_ep>:
    398e:	88 1f       	adc	r24, r24
    3990:	99 1f       	adc	r25, r25
    3992:	5a 95       	dec	r21
    3994:	a9 f7       	brne	.-22     	; 0x3980 <__udivmodhi4_loop>
    3996:	80 95       	com	r24
    3998:	90 95       	com	r25
    399a:	bc 01       	movw	r22, r24
    399c:	cd 01       	movw	r24, r26
    399e:	08 95       	ret

000039a0 <__divmodhi4>:
    39a0:	97 fb       	bst	r25, 7
    39a2:	07 2e       	mov	r0, r23
    39a4:	16 f4       	brtc	.+4      	; 0x39aa <__divmodhi4+0xa>
    39a6:	00 94       	com	r0
    39a8:	07 d0       	rcall	.+14     	; 0x39b8 <__divmodhi4_neg1>
    39aa:	77 fd       	sbrc	r23, 7
    39ac:	09 d0       	rcall	.+18     	; 0x39c0 <__divmodhi4_neg2>
    39ae:	0e 94 bc 1c 	call	0x3978	; 0x3978 <__udivmodhi4>
    39b2:	07 fc       	sbrc	r0, 7
    39b4:	05 d0       	rcall	.+10     	; 0x39c0 <__divmodhi4_neg2>
    39b6:	3e f4       	brtc	.+14     	; 0x39c6 <__divmodhi4_exit>

000039b8 <__divmodhi4_neg1>:
    39b8:	90 95       	com	r25
    39ba:	81 95       	neg	r24
    39bc:	9f 4f       	sbci	r25, 0xFF	; 255
    39be:	08 95       	ret

000039c0 <__divmodhi4_neg2>:
    39c0:	70 95       	com	r23
    39c2:	61 95       	neg	r22
    39c4:	7f 4f       	sbci	r23, 0xFF	; 255

000039c6 <__divmodhi4_exit>:
    39c6:	08 95       	ret

000039c8 <__udivmodsi4>:
    39c8:	a1 e2       	ldi	r26, 0x21	; 33
    39ca:	1a 2e       	mov	r1, r26
    39cc:	aa 1b       	sub	r26, r26
    39ce:	bb 1b       	sub	r27, r27
    39d0:	fd 01       	movw	r30, r26
    39d2:	0d c0       	rjmp	.+26     	; 0x39ee <__udivmodsi4_ep>

000039d4 <__udivmodsi4_loop>:
    39d4:	aa 1f       	adc	r26, r26
    39d6:	bb 1f       	adc	r27, r27
    39d8:	ee 1f       	adc	r30, r30
    39da:	ff 1f       	adc	r31, r31
    39dc:	a2 17       	cp	r26, r18
    39de:	b3 07       	cpc	r27, r19
    39e0:	e4 07       	cpc	r30, r20
    39e2:	f5 07       	cpc	r31, r21
    39e4:	20 f0       	brcs	.+8      	; 0x39ee <__udivmodsi4_ep>
    39e6:	a2 1b       	sub	r26, r18
    39e8:	b3 0b       	sbc	r27, r19
    39ea:	e4 0b       	sbc	r30, r20
    39ec:	f5 0b       	sbc	r31, r21

000039ee <__udivmodsi4_ep>:
    39ee:	66 1f       	adc	r22, r22
    39f0:	77 1f       	adc	r23, r23
    39f2:	88 1f       	adc	r24, r24
    39f4:	99 1f       	adc	r25, r25
    39f6:	1a 94       	dec	r1
    39f8:	69 f7       	brne	.-38     	; 0x39d4 <__udivmodsi4_loop>
    39fa:	60 95       	com	r22
    39fc:	70 95       	com	r23
    39fe:	80 95       	com	r24
    3a00:	90 95       	com	r25
    3a02:	9b 01       	movw	r18, r22
    3a04:	ac 01       	movw	r20, r24
    3a06:	bd 01       	movw	r22, r26
    3a08:	cf 01       	movw	r24, r30
    3a0a:	08 95       	ret

00003a0c <__divmodsi4>:
    3a0c:	05 2e       	mov	r0, r21
    3a0e:	97 fb       	bst	r25, 7
    3a10:	1e f4       	brtc	.+6      	; 0x3a18 <__divmodsi4+0xc>
    3a12:	00 94       	com	r0
    3a14:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__negsi2>
    3a18:	57 fd       	sbrc	r21, 7
    3a1a:	07 d0       	rcall	.+14     	; 0x3a2a <__divmodsi4_neg2>
    3a1c:	0e 94 e4 1c 	call	0x39c8	; 0x39c8 <__udivmodsi4>
    3a20:	07 fc       	sbrc	r0, 7
    3a22:	03 d0       	rcall	.+6      	; 0x3a2a <__divmodsi4_neg2>
    3a24:	4e f4       	brtc	.+18     	; 0x3a38 <__divmodsi4_exit>
    3a26:	0c 94 1d 1d 	jmp	0x3a3a	; 0x3a3a <__negsi2>

00003a2a <__divmodsi4_neg2>:
    3a2a:	50 95       	com	r21
    3a2c:	40 95       	com	r20
    3a2e:	30 95       	com	r19
    3a30:	21 95       	neg	r18
    3a32:	3f 4f       	sbci	r19, 0xFF	; 255
    3a34:	4f 4f       	sbci	r20, 0xFF	; 255
    3a36:	5f 4f       	sbci	r21, 0xFF	; 255

00003a38 <__divmodsi4_exit>:
    3a38:	08 95       	ret

00003a3a <__negsi2>:
    3a3a:	90 95       	com	r25
    3a3c:	80 95       	com	r24
    3a3e:	70 95       	com	r23
    3a40:	61 95       	neg	r22
    3a42:	7f 4f       	sbci	r23, 0xFF	; 255
    3a44:	8f 4f       	sbci	r24, 0xFF	; 255
    3a46:	9f 4f       	sbci	r25, 0xFF	; 255
    3a48:	08 95       	ret

00003a4a <__tablejump2__>:
    3a4a:	ee 0f       	add	r30, r30
    3a4c:	ff 1f       	adc	r31, r31
    3a4e:	05 90       	lpm	r0, Z+
    3a50:	f4 91       	lpm	r31, Z
    3a52:	e0 2d       	mov	r30, r0
    3a54:	09 94       	ijmp

00003a56 <__umulhisi3>:
    3a56:	a2 9f       	mul	r26, r18
    3a58:	b0 01       	movw	r22, r0
    3a5a:	b3 9f       	mul	r27, r19
    3a5c:	c0 01       	movw	r24, r0
    3a5e:	a3 9f       	mul	r26, r19
    3a60:	70 0d       	add	r23, r0
    3a62:	81 1d       	adc	r24, r1
    3a64:	11 24       	eor	r1, r1
    3a66:	91 1d       	adc	r25, r1
    3a68:	b2 9f       	mul	r27, r18
    3a6a:	70 0d       	add	r23, r0
    3a6c:	81 1d       	adc	r24, r1
    3a6e:	11 24       	eor	r1, r1
    3a70:	91 1d       	adc	r25, r1
    3a72:	08 95       	ret

00003a74 <__muluhisi3>:
    3a74:	0e 94 2b 1d 	call	0x3a56	; 0x3a56 <__umulhisi3>
    3a78:	a5 9f       	mul	r26, r21
    3a7a:	90 0d       	add	r25, r0
    3a7c:	b4 9f       	mul	r27, r20
    3a7e:	90 0d       	add	r25, r0
    3a80:	a4 9f       	mul	r26, r20
    3a82:	80 0d       	add	r24, r0
    3a84:	91 1d       	adc	r25, r1
    3a86:	11 24       	eor	r1, r1
    3a88:	08 95       	ret

00003a8a <__mulshisi3>:
    3a8a:	b7 ff       	sbrs	r27, 7
    3a8c:	0c 94 3a 1d 	jmp	0x3a74	; 0x3a74 <__muluhisi3>

00003a90 <__mulohisi3>:
    3a90:	0e 94 3a 1d 	call	0x3a74	; 0x3a74 <__muluhisi3>
    3a94:	82 1b       	sub	r24, r18
    3a96:	93 0b       	sbc	r25, r19
    3a98:	08 95       	ret

00003a9a <__prologue_saves__>:
    3a9a:	2f 92       	push	r2
    3a9c:	3f 92       	push	r3
    3a9e:	4f 92       	push	r4
    3aa0:	5f 92       	push	r5
    3aa2:	6f 92       	push	r6
    3aa4:	7f 92       	push	r7
    3aa6:	8f 92       	push	r8
    3aa8:	9f 92       	push	r9
    3aaa:	af 92       	push	r10
    3aac:	bf 92       	push	r11
    3aae:	cf 92       	push	r12
    3ab0:	df 92       	push	r13
    3ab2:	ef 92       	push	r14
    3ab4:	ff 92       	push	r15
    3ab6:	0f 93       	push	r16
    3ab8:	1f 93       	push	r17
    3aba:	cf 93       	push	r28
    3abc:	df 93       	push	r29
    3abe:	cd b7       	in	r28, 0x3d	; 61
    3ac0:	de b7       	in	r29, 0x3e	; 62
    3ac2:	ca 1b       	sub	r28, r26
    3ac4:	db 0b       	sbc	r29, r27
    3ac6:	0f b6       	in	r0, 0x3f	; 63
    3ac8:	f8 94       	cli
    3aca:	de bf       	out	0x3e, r29	; 62
    3acc:	0f be       	out	0x3f, r0	; 63
    3ace:	cd bf       	out	0x3d, r28	; 61
    3ad0:	09 94       	ijmp

00003ad2 <__epilogue_restores__>:
    3ad2:	2a 88       	ldd	r2, Y+18	; 0x12
    3ad4:	39 88       	ldd	r3, Y+17	; 0x11
    3ad6:	48 88       	ldd	r4, Y+16	; 0x10
    3ad8:	5f 84       	ldd	r5, Y+15	; 0x0f
    3ada:	6e 84       	ldd	r6, Y+14	; 0x0e
    3adc:	7d 84       	ldd	r7, Y+13	; 0x0d
    3ade:	8c 84       	ldd	r8, Y+12	; 0x0c
    3ae0:	9b 84       	ldd	r9, Y+11	; 0x0b
    3ae2:	aa 84       	ldd	r10, Y+10	; 0x0a
    3ae4:	b9 84       	ldd	r11, Y+9	; 0x09
    3ae6:	c8 84       	ldd	r12, Y+8	; 0x08
    3ae8:	df 80       	ldd	r13, Y+7	; 0x07
    3aea:	ee 80       	ldd	r14, Y+6	; 0x06
    3aec:	fd 80       	ldd	r15, Y+5	; 0x05
    3aee:	0c 81       	ldd	r16, Y+4	; 0x04
    3af0:	1b 81       	ldd	r17, Y+3	; 0x03
    3af2:	aa 81       	ldd	r26, Y+2	; 0x02
    3af4:	b9 81       	ldd	r27, Y+1	; 0x01
    3af6:	ce 0f       	add	r28, r30
    3af8:	d1 1d       	adc	r29, r1
    3afa:	0f b6       	in	r0, 0x3f	; 63
    3afc:	f8 94       	cli
    3afe:	de bf       	out	0x3e, r29	; 62
    3b00:	0f be       	out	0x3f, r0	; 63
    3b02:	cd bf       	out	0x3d, r28	; 61
    3b04:	ed 01       	movw	r28, r26
    3b06:	08 95       	ret

00003b08 <malloc>:
    3b08:	0f 93       	push	r16
    3b0a:	1f 93       	push	r17
    3b0c:	cf 93       	push	r28
    3b0e:	df 93       	push	r29
    3b10:	82 30       	cpi	r24, 0x02	; 2
    3b12:	91 05       	cpc	r25, r1
    3b14:	10 f4       	brcc	.+4      	; 0x3b1a <malloc+0x12>
    3b16:	82 e0       	ldi	r24, 0x02	; 2
    3b18:	90 e0       	ldi	r25, 0x00	; 0
    3b1a:	e0 91 1d 02 	lds	r30, 0x021D	; 0x80021d <__flp>
    3b1e:	f0 91 1e 02 	lds	r31, 0x021E	; 0x80021e <__flp+0x1>
    3b22:	20 e0       	ldi	r18, 0x00	; 0
    3b24:	30 e0       	ldi	r19, 0x00	; 0
    3b26:	a0 e0       	ldi	r26, 0x00	; 0
    3b28:	b0 e0       	ldi	r27, 0x00	; 0
    3b2a:	30 97       	sbiw	r30, 0x00	; 0
    3b2c:	19 f1       	breq	.+70     	; 0x3b74 <malloc+0x6c>
    3b2e:	40 81       	ld	r20, Z
    3b30:	51 81       	ldd	r21, Z+1	; 0x01
    3b32:	02 81       	ldd	r16, Z+2	; 0x02
    3b34:	13 81       	ldd	r17, Z+3	; 0x03
    3b36:	48 17       	cp	r20, r24
    3b38:	59 07       	cpc	r21, r25
    3b3a:	c8 f0       	brcs	.+50     	; 0x3b6e <malloc+0x66>
    3b3c:	84 17       	cp	r24, r20
    3b3e:	95 07       	cpc	r25, r21
    3b40:	69 f4       	brne	.+26     	; 0x3b5c <malloc+0x54>
    3b42:	10 97       	sbiw	r26, 0x00	; 0
    3b44:	31 f0       	breq	.+12     	; 0x3b52 <malloc+0x4a>
    3b46:	12 96       	adiw	r26, 0x02	; 2
    3b48:	0c 93       	st	X, r16
    3b4a:	12 97       	sbiw	r26, 0x02	; 2
    3b4c:	13 96       	adiw	r26, 0x03	; 3
    3b4e:	1c 93       	st	X, r17
    3b50:	27 c0       	rjmp	.+78     	; 0x3ba0 <malloc+0x98>
    3b52:	00 93 1d 02 	sts	0x021D, r16	; 0x80021d <__flp>
    3b56:	10 93 1e 02 	sts	0x021E, r17	; 0x80021e <__flp+0x1>
    3b5a:	22 c0       	rjmp	.+68     	; 0x3ba0 <malloc+0x98>
    3b5c:	21 15       	cp	r18, r1
    3b5e:	31 05       	cpc	r19, r1
    3b60:	19 f0       	breq	.+6      	; 0x3b68 <malloc+0x60>
    3b62:	42 17       	cp	r20, r18
    3b64:	53 07       	cpc	r21, r19
    3b66:	18 f4       	brcc	.+6      	; 0x3b6e <malloc+0x66>
    3b68:	9a 01       	movw	r18, r20
    3b6a:	bd 01       	movw	r22, r26
    3b6c:	ef 01       	movw	r28, r30
    3b6e:	df 01       	movw	r26, r30
    3b70:	f8 01       	movw	r30, r16
    3b72:	db cf       	rjmp	.-74     	; 0x3b2a <malloc+0x22>
    3b74:	21 15       	cp	r18, r1
    3b76:	31 05       	cpc	r19, r1
    3b78:	f9 f0       	breq	.+62     	; 0x3bb8 <malloc+0xb0>
    3b7a:	28 1b       	sub	r18, r24
    3b7c:	39 0b       	sbc	r19, r25
    3b7e:	24 30       	cpi	r18, 0x04	; 4
    3b80:	31 05       	cpc	r19, r1
    3b82:	80 f4       	brcc	.+32     	; 0x3ba4 <malloc+0x9c>
    3b84:	8a 81       	ldd	r24, Y+2	; 0x02
    3b86:	9b 81       	ldd	r25, Y+3	; 0x03
    3b88:	61 15       	cp	r22, r1
    3b8a:	71 05       	cpc	r23, r1
    3b8c:	21 f0       	breq	.+8      	; 0x3b96 <malloc+0x8e>
    3b8e:	fb 01       	movw	r30, r22
    3b90:	93 83       	std	Z+3, r25	; 0x03
    3b92:	82 83       	std	Z+2, r24	; 0x02
    3b94:	04 c0       	rjmp	.+8      	; 0x3b9e <malloc+0x96>
    3b96:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <__flp+0x1>
    3b9a:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <__flp>
    3b9e:	fe 01       	movw	r30, r28
    3ba0:	32 96       	adiw	r30, 0x02	; 2
    3ba2:	44 c0       	rjmp	.+136    	; 0x3c2c <malloc+0x124>
    3ba4:	fe 01       	movw	r30, r28
    3ba6:	e2 0f       	add	r30, r18
    3ba8:	f3 1f       	adc	r31, r19
    3baa:	81 93       	st	Z+, r24
    3bac:	91 93       	st	Z+, r25
    3bae:	22 50       	subi	r18, 0x02	; 2
    3bb0:	31 09       	sbc	r19, r1
    3bb2:	39 83       	std	Y+1, r19	; 0x01
    3bb4:	28 83       	st	Y, r18
    3bb6:	3a c0       	rjmp	.+116    	; 0x3c2c <malloc+0x124>
    3bb8:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <__brkval>
    3bbc:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <__brkval+0x1>
    3bc0:	23 2b       	or	r18, r19
    3bc2:	41 f4       	brne	.+16     	; 0x3bd4 <malloc+0xcc>
    3bc4:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__malloc_heap_start>
    3bc8:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__malloc_heap_start+0x1>
    3bcc:	30 93 1c 02 	sts	0x021C, r19	; 0x80021c <__brkval+0x1>
    3bd0:	20 93 1b 02 	sts	0x021B, r18	; 0x80021b <__brkval>
    3bd4:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_end>
    3bd8:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_end+0x1>
    3bdc:	21 15       	cp	r18, r1
    3bde:	31 05       	cpc	r19, r1
    3be0:	41 f4       	brne	.+16     	; 0x3bf2 <malloc+0xea>
    3be2:	2d b7       	in	r18, 0x3d	; 61
    3be4:	3e b7       	in	r19, 0x3e	; 62
    3be6:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <__malloc_margin>
    3bea:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <__malloc_margin+0x1>
    3bee:	24 1b       	sub	r18, r20
    3bf0:	35 0b       	sbc	r19, r21
    3bf2:	e0 91 1b 02 	lds	r30, 0x021B	; 0x80021b <__brkval>
    3bf6:	f0 91 1c 02 	lds	r31, 0x021C	; 0x80021c <__brkval+0x1>
    3bfa:	e2 17       	cp	r30, r18
    3bfc:	f3 07       	cpc	r31, r19
    3bfe:	a0 f4       	brcc	.+40     	; 0x3c28 <malloc+0x120>
    3c00:	2e 1b       	sub	r18, r30
    3c02:	3f 0b       	sbc	r19, r31
    3c04:	28 17       	cp	r18, r24
    3c06:	39 07       	cpc	r19, r25
    3c08:	78 f0       	brcs	.+30     	; 0x3c28 <malloc+0x120>
    3c0a:	ac 01       	movw	r20, r24
    3c0c:	4e 5f       	subi	r20, 0xFE	; 254
    3c0e:	5f 4f       	sbci	r21, 0xFF	; 255
    3c10:	24 17       	cp	r18, r20
    3c12:	35 07       	cpc	r19, r21
    3c14:	48 f0       	brcs	.+18     	; 0x3c28 <malloc+0x120>
    3c16:	4e 0f       	add	r20, r30
    3c18:	5f 1f       	adc	r21, r31
    3c1a:	50 93 1c 02 	sts	0x021C, r21	; 0x80021c <__brkval+0x1>
    3c1e:	40 93 1b 02 	sts	0x021B, r20	; 0x80021b <__brkval>
    3c22:	81 93       	st	Z+, r24
    3c24:	91 93       	st	Z+, r25
    3c26:	02 c0       	rjmp	.+4      	; 0x3c2c <malloc+0x124>
    3c28:	e0 e0       	ldi	r30, 0x00	; 0
    3c2a:	f0 e0       	ldi	r31, 0x00	; 0
    3c2c:	cf 01       	movw	r24, r30
    3c2e:	df 91       	pop	r29
    3c30:	cf 91       	pop	r28
    3c32:	1f 91       	pop	r17
    3c34:	0f 91       	pop	r16
    3c36:	08 95       	ret

00003c38 <free>:
    3c38:	cf 93       	push	r28
    3c3a:	df 93       	push	r29
    3c3c:	00 97       	sbiw	r24, 0x00	; 0
    3c3e:	09 f4       	brne	.+2      	; 0x3c42 <free+0xa>
    3c40:	81 c0       	rjmp	.+258    	; 0x3d44 <free+0x10c>
    3c42:	fc 01       	movw	r30, r24
    3c44:	32 97       	sbiw	r30, 0x02	; 2
    3c46:	13 82       	std	Z+3, r1	; 0x03
    3c48:	12 82       	std	Z+2, r1	; 0x02
    3c4a:	a0 91 1d 02 	lds	r26, 0x021D	; 0x80021d <__flp>
    3c4e:	b0 91 1e 02 	lds	r27, 0x021E	; 0x80021e <__flp+0x1>
    3c52:	10 97       	sbiw	r26, 0x00	; 0
    3c54:	81 f4       	brne	.+32     	; 0x3c76 <free+0x3e>
    3c56:	20 81       	ld	r18, Z
    3c58:	31 81       	ldd	r19, Z+1	; 0x01
    3c5a:	82 0f       	add	r24, r18
    3c5c:	93 1f       	adc	r25, r19
    3c5e:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <__brkval>
    3c62:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <__brkval+0x1>
    3c66:	28 17       	cp	r18, r24
    3c68:	39 07       	cpc	r19, r25
    3c6a:	51 f5       	brne	.+84     	; 0x3cc0 <free+0x88>
    3c6c:	f0 93 1c 02 	sts	0x021C, r31	; 0x80021c <__brkval+0x1>
    3c70:	e0 93 1b 02 	sts	0x021B, r30	; 0x80021b <__brkval>
    3c74:	67 c0       	rjmp	.+206    	; 0x3d44 <free+0x10c>
    3c76:	ed 01       	movw	r28, r26
    3c78:	20 e0       	ldi	r18, 0x00	; 0
    3c7a:	30 e0       	ldi	r19, 0x00	; 0
    3c7c:	ce 17       	cp	r28, r30
    3c7e:	df 07       	cpc	r29, r31
    3c80:	40 f4       	brcc	.+16     	; 0x3c92 <free+0x5a>
    3c82:	4a 81       	ldd	r20, Y+2	; 0x02
    3c84:	5b 81       	ldd	r21, Y+3	; 0x03
    3c86:	9e 01       	movw	r18, r28
    3c88:	41 15       	cp	r20, r1
    3c8a:	51 05       	cpc	r21, r1
    3c8c:	f1 f0       	breq	.+60     	; 0x3cca <free+0x92>
    3c8e:	ea 01       	movw	r28, r20
    3c90:	f5 cf       	rjmp	.-22     	; 0x3c7c <free+0x44>
    3c92:	d3 83       	std	Z+3, r29	; 0x03
    3c94:	c2 83       	std	Z+2, r28	; 0x02
    3c96:	40 81       	ld	r20, Z
    3c98:	51 81       	ldd	r21, Z+1	; 0x01
    3c9a:	84 0f       	add	r24, r20
    3c9c:	95 1f       	adc	r25, r21
    3c9e:	c8 17       	cp	r28, r24
    3ca0:	d9 07       	cpc	r29, r25
    3ca2:	59 f4       	brne	.+22     	; 0x3cba <free+0x82>
    3ca4:	88 81       	ld	r24, Y
    3ca6:	99 81       	ldd	r25, Y+1	; 0x01
    3ca8:	84 0f       	add	r24, r20
    3caa:	95 1f       	adc	r25, r21
    3cac:	02 96       	adiw	r24, 0x02	; 2
    3cae:	91 83       	std	Z+1, r25	; 0x01
    3cb0:	80 83       	st	Z, r24
    3cb2:	8a 81       	ldd	r24, Y+2	; 0x02
    3cb4:	9b 81       	ldd	r25, Y+3	; 0x03
    3cb6:	93 83       	std	Z+3, r25	; 0x03
    3cb8:	82 83       	std	Z+2, r24	; 0x02
    3cba:	21 15       	cp	r18, r1
    3cbc:	31 05       	cpc	r19, r1
    3cbe:	29 f4       	brne	.+10     	; 0x3cca <free+0x92>
    3cc0:	f0 93 1e 02 	sts	0x021E, r31	; 0x80021e <__flp+0x1>
    3cc4:	e0 93 1d 02 	sts	0x021D, r30	; 0x80021d <__flp>
    3cc8:	3d c0       	rjmp	.+122    	; 0x3d44 <free+0x10c>
    3cca:	e9 01       	movw	r28, r18
    3ccc:	fb 83       	std	Y+3, r31	; 0x03
    3cce:	ea 83       	std	Y+2, r30	; 0x02
    3cd0:	49 91       	ld	r20, Y+
    3cd2:	59 91       	ld	r21, Y+
    3cd4:	c4 0f       	add	r28, r20
    3cd6:	d5 1f       	adc	r29, r21
    3cd8:	ec 17       	cp	r30, r28
    3cda:	fd 07       	cpc	r31, r29
    3cdc:	61 f4       	brne	.+24     	; 0x3cf6 <free+0xbe>
    3cde:	80 81       	ld	r24, Z
    3ce0:	91 81       	ldd	r25, Z+1	; 0x01
    3ce2:	84 0f       	add	r24, r20
    3ce4:	95 1f       	adc	r25, r21
    3ce6:	02 96       	adiw	r24, 0x02	; 2
    3ce8:	e9 01       	movw	r28, r18
    3cea:	99 83       	std	Y+1, r25	; 0x01
    3cec:	88 83       	st	Y, r24
    3cee:	82 81       	ldd	r24, Z+2	; 0x02
    3cf0:	93 81       	ldd	r25, Z+3	; 0x03
    3cf2:	9b 83       	std	Y+3, r25	; 0x03
    3cf4:	8a 83       	std	Y+2, r24	; 0x02
    3cf6:	e0 e0       	ldi	r30, 0x00	; 0
    3cf8:	f0 e0       	ldi	r31, 0x00	; 0
    3cfa:	12 96       	adiw	r26, 0x02	; 2
    3cfc:	8d 91       	ld	r24, X+
    3cfe:	9c 91       	ld	r25, X
    3d00:	13 97       	sbiw	r26, 0x03	; 3
    3d02:	00 97       	sbiw	r24, 0x00	; 0
    3d04:	19 f0       	breq	.+6      	; 0x3d0c <free+0xd4>
    3d06:	fd 01       	movw	r30, r26
    3d08:	dc 01       	movw	r26, r24
    3d0a:	f7 cf       	rjmp	.-18     	; 0x3cfa <free+0xc2>
    3d0c:	8d 91       	ld	r24, X+
    3d0e:	9c 91       	ld	r25, X
    3d10:	11 97       	sbiw	r26, 0x01	; 1
    3d12:	9d 01       	movw	r18, r26
    3d14:	2e 5f       	subi	r18, 0xFE	; 254
    3d16:	3f 4f       	sbci	r19, 0xFF	; 255
    3d18:	82 0f       	add	r24, r18
    3d1a:	93 1f       	adc	r25, r19
    3d1c:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <__brkval>
    3d20:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <__brkval+0x1>
    3d24:	28 17       	cp	r18, r24
    3d26:	39 07       	cpc	r19, r25
    3d28:	69 f4       	brne	.+26     	; 0x3d44 <free+0x10c>
    3d2a:	30 97       	sbiw	r30, 0x00	; 0
    3d2c:	29 f4       	brne	.+10     	; 0x3d38 <free+0x100>
    3d2e:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <__flp+0x1>
    3d32:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <__flp>
    3d36:	02 c0       	rjmp	.+4      	; 0x3d3c <free+0x104>
    3d38:	13 82       	std	Z+3, r1	; 0x03
    3d3a:	12 82       	std	Z+2, r1	; 0x02
    3d3c:	b0 93 1c 02 	sts	0x021C, r27	; 0x80021c <__brkval+0x1>
    3d40:	a0 93 1b 02 	sts	0x021B, r26	; 0x80021b <__brkval>
    3d44:	df 91       	pop	r29
    3d46:	cf 91       	pop	r28
    3d48:	08 95       	ret

00003d4a <strncat>:
    3d4a:	fb 01       	movw	r30, r22
    3d4c:	dc 01       	movw	r26, r24
    3d4e:	0d 90       	ld	r0, X+
    3d50:	00 20       	and	r0, r0
    3d52:	e9 f7       	brne	.-6      	; 0x3d4e <strncat+0x4>
    3d54:	11 97       	sbiw	r26, 0x01	; 1
    3d56:	41 50       	subi	r20, 0x01	; 1
    3d58:	50 40       	sbci	r21, 0x00	; 0
    3d5a:	28 f0       	brcs	.+10     	; 0x3d66 <strncat+0x1c>
    3d5c:	01 90       	ld	r0, Z+
    3d5e:	00 20       	and	r0, r0
    3d60:	0d 92       	st	X+, r0
    3d62:	c9 f7       	brne	.-14     	; 0x3d56 <strncat+0xc>
    3d64:	08 95       	ret
    3d66:	1c 92       	st	X, r1
    3d68:	08 95       	ret

00003d6a <__do_global_dtors>:
    3d6a:	10 e0       	ldi	r17, 0x00	; 0
    3d6c:	c2 e4       	ldi	r28, 0x42	; 66
    3d6e:	d0 e0       	ldi	r29, 0x00	; 0
    3d70:	04 c0       	rjmp	.+8      	; 0x3d7a <__do_global_dtors+0x10>
    3d72:	fe 01       	movw	r30, r28
    3d74:	0e 94 25 1d 	call	0x3a4a	; 0x3a4a <__tablejump2__>
    3d78:	21 96       	adiw	r28, 0x01	; 1
    3d7a:	c3 34       	cpi	r28, 0x43	; 67
    3d7c:	d1 07       	cpc	r29, r17
    3d7e:	c9 f7       	brne	.-14     	; 0x3d72 <__do_global_dtors+0x8>
    3d80:	f8 94       	cli

00003d82 <__stop_program>:
    3d82:	ff cf       	rjmp	.-2      	; 0x3d82 <__stop_program>
