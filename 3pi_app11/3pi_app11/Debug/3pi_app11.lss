
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  000019c2  00001a56  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000019c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000071  0080010e  0080010e  00001a64  2**0
                  ALLOC
  3 .stab         00004ba8  00000000  00000000  00001a64  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000084be  00000000  00000000  0000660c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  0000eaca  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000eb0c  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000090  00000000  00000000  0000eb4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   0000114d  00000000  00000000  0000ebdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000971  00000000  00000000  0000fd29  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00000c4d  00000000  00000000  0001069a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000000fc  00000000  00000000  000112e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0000050c  00000000  00000000  000113e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00000162  00000000  00000000  000118f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000060  00000000  00000000  00011a52  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__dtors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 1f 05 	jmp	0xa3e	; 0xa3e <__vector_9>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	a2 02       	muls	r26, r18
      6a:	a6 02       	muls	r26, r22
      6c:	04 03       	mulsu	r16, r20
      6e:	7c 02       	muls	r23, r28
      70:	8a 02       	muls	r24, r26
      72:	98 02       	muls	r25, r24
      74:	7c 02       	muls	r23, r28
      76:	7c 02       	muls	r23, r28
      78:	7c 02       	muls	r23, r28

0000007a <__ctors_end>:
      7a:	e3 05       	cpc	r30, r3

0000007c <__dtors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d8 e0       	ldi	r29, 0x08	; 8
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	11 e0       	ldi	r17, 0x01	; 1
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	e2 ec       	ldi	r30, 0xC2	; 194
      90:	f9 e1       	ldi	r31, 0x19	; 25
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	ae 30       	cpi	r26, 0x0E	; 14
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	21 e0       	ldi	r18, 0x01	; 1
      a0:	ae e0       	ldi	r26, 0x0E	; 14
      a2:	b1 e0       	ldi	r27, 0x01	; 1
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	af 37       	cpi	r26, 0x7F	; 127
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 5d 00 	call	0xba	; 0xba <main>
      b2:	0c 94 d4 0c 	jmp	0x19a8	; 0x19a8 <__do_global_dtors>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <main>:
#include <pololu/3pi.h>
#include <avr/pgmspace.h>


int main()
{
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
      be:	cd b7       	in	r28, 0x3d	; 61
      c0:	de b7       	in	r29, 0x3e	; 62
      c2:	64 97       	sbiw	r28, 0x14	; 20
      c4:	0f b6       	in	r0, 0x3f	; 63
      c6:	f8 94       	cli
      c8:	de bf       	out	0x3e, r29	; 62
      ca:	0f be       	out	0x3f, r0	; 63
      cc:	cd bf       	out	0x3d, r28	; 61
	clear();
      ce:	0e 94 14 04 	call	0x828	; 0x828 <clear>
	pololu_3pi_init(2000);
      d2:	80 ed       	ldi	r24, 0xD0	; 208
      d4:	97 e0       	ldi	r25, 0x07	; 7
      d6:	0e 94 df 05 	call	0xbbe	; 0xbbe <pololu_3pi_init>
	initialize();
      da:	0e 94 82 00 	call	0x104	; 0x104 <initialize>
	
	
	
	char parecour[20];
	parcour(parecour);
      de:	ce 01       	movw	r24, r28
      e0:	01 96       	adiw	r24, 0x01	; 1
      e2:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <parcour>
	print(parecour);
      e6:	ce 01       	movw	r24, r28
      e8:	01 96       	adiw	r24, 0x01	; 1
      ea:	0e 94 23 04 	call	0x846	; 0x846 <print>
	
      ee:	80 e0       	ldi	r24, 0x00	; 0
      f0:	90 e0       	ldi	r25, 0x00	; 0
      f2:	64 96       	adiw	r28, 0x14	; 20
      f4:	0f b6       	in	r0, 0x3f	; 63
      f6:	f8 94       	cli
      f8:	de bf       	out	0x3e, r29	; 62
      fa:	0f be       	out	0x3f, r0	; 63
      fc:	cd bf       	out	0x3d, r28	; 61
      fe:	df 91       	pop	r29
     100:	cf 91       	pop	r28
     102:	08 95       	ret

00000104 <initialize>:
#include <avr/pgmspace.h>

	Junctions junction;	

void initialize()
{
     104:	cf 93       	push	r28
     106:	df 93       	push	r29
	unsigned int counter; // used as a simple timer
	
	pololu_3pi_init(2000);
     108:	80 ed       	ldi	r24, 0xD0	; 208
     10a:	97 e0       	ldi	r25, 0x07	; 7
     10c:	0e 94 df 05 	call	0xbbe	; 0xbbe <pololu_3pi_init>
	
	while(!button_is_pressed(BUTTON_B)){}	
     110:	80 e1       	ldi	r24, 0x10	; 16
     112:	0e 94 1c 05 	call	0xa38	; 0xa38 <button_is_pressed>
     116:	88 23       	and	r24, r24
     118:	d9 f3       	breq	.-10     	; 0x110 <initialize+0xc>
	wait_for_button_release(BUTTON_B);
     11a:	80 e1       	ldi	r24, 0x10	; 16
     11c:	0e 94 08 05 	call	0xa10	; 0xa10 <wait_for_button_release>
	delay_ms(1000);
     120:	88 ee       	ldi	r24, 0xE8	; 232
     122:	93 e0       	ldi	r25, 0x03	; 3
     124:	0e 94 67 05 	call	0xace	; 0xace <delay_ms>

	for(counter=0;counter<80;counter++)
     128:	c0 e0       	ldi	r28, 0x00	; 0
     12a:	d0 e0       	ldi	r29, 0x00	; 0
     12c:	19 c0       	rjmp	.+50     	; 0x160 <initialize+0x5c>
	{
		if(counter < 20 || counter >= 60)
     12e:	ce 01       	movw	r24, r28
     130:	44 97       	sbiw	r24, 0x14	; 20
     132:	88 97       	sbiw	r24, 0x28	; 40
     134:	38 f0       	brcs	.+14     	; 0x144 <initialize+0x40>
		set_motors(40,-40);
     136:	68 ed       	ldi	r22, 0xD8	; 216
     138:	7f ef       	ldi	r23, 0xFF	; 255
     13a:	88 e2       	ldi	r24, 0x28	; 40
     13c:	90 e0       	ldi	r25, 0x00	; 0
     13e:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
     142:	06 c0       	rjmp	.+12     	; 0x150 <initialize+0x4c>
		else
		set_motors(-40,40);
     144:	68 e2       	ldi	r22, 0x28	; 40
     146:	70 e0       	ldi	r23, 0x00	; 0
     148:	88 ed       	ldi	r24, 0xD8	; 216
     14a:	9f ef       	ldi	r25, 0xFF	; 255
     14c:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
		calibrate_line_sensors(IR_EMITTERS_ON);
     150:	81 e0       	ldi	r24, 0x01	; 1
     152:	0e 94 a3 05 	call	0xb46	; 0xb46 <calibrate_line_sensors>
		
		delay_ms(20);
     156:	84 e1       	ldi	r24, 0x14	; 20
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	0e 94 67 05 	call	0xace	; 0xace <delay_ms>
	
	while(!button_is_pressed(BUTTON_B)){}	
	wait_for_button_release(BUTTON_B);
	delay_ms(1000);

	for(counter=0;counter<80;counter++)
     15e:	21 96       	adiw	r28, 0x01	; 1
     160:	c0 35       	cpi	r28, 0x50	; 80
     162:	d1 05       	cpc	r29, r1
     164:	20 f3       	brcs	.-56     	; 0x12e <initialize+0x2a>
		set_motors(-40,40);
		calibrate_line_sensors(IR_EMITTERS_ON);
		
		delay_ms(20);
	}
	set_motors(0,0);
     166:	60 e0       	ldi	r22, 0x00	; 0
     168:	70 e0       	ldi	r23, 0x00	; 0
     16a:	80 e0       	ldi	r24, 0x00	; 0
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
	
	while(!button_is_pressed(BUTTON_B)){}
     172:	80 e1       	ldi	r24, 0x10	; 16
     174:	0e 94 1c 05 	call	0xa38	; 0xa38 <button_is_pressed>
     178:	88 23       	and	r24, r24
     17a:	d9 f3       	breq	.-10     	; 0x172 <initialize+0x6e>
	wait_for_button_release(BUTTON_B);
     17c:	80 e1       	ldi	r24, 0x10	; 16
     17e:	0e 94 08 05 	call	0xa10	; 0xa10 <wait_for_button_release>
	
	clear();
     182:	0e 94 14 04 	call	0x828	; 0x828 <clear>
}
     186:	df 91       	pop	r29
     188:	cf 91       	pop	r28
     18a:	08 95       	ret

0000018c <inch>:

void inch(){
	set_motors(50,50);
     18c:	62 e3       	ldi	r22, 0x32	; 50
     18e:	70 e0       	ldi	r23, 0x00	; 0
     190:	82 e3       	ldi	r24, 0x32	; 50
     192:	90 e0       	ldi	r25, 0x00	; 0
     194:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     198:	88 ec       	ldi	r24, 0xC8	; 200
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	0e 94 67 05 	call	0xace	; 0xace <delay_ms>
	delay(200);
	set_motors(0,0);
     1a0:	60 e0       	ldi	r22, 0x00	; 0
     1a2:	70 e0       	ldi	r23, 0x00	; 0
     1a4:	80 e0       	ldi	r24, 0x00	; 0
     1a6:	90 e0       	ldi	r25, 0x00	; 0
     1a8:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
     1ac:	08 95       	ret

000001ae <motorControl>:
		}	
	}
}


void motorControl(char x){													// function that controlls the motor movement and the turns
     1ae:	cf 93       	push	r28
     1b0:	c8 2f       	mov	r28, r24
	read_line(sensors,IR_EMITTERS_ON);
     1b2:	61 e0       	ldi	r22, 0x01	; 1
     1b4:	80 e7       	ldi	r24, 0x70	; 112
     1b6:	91 e0       	ldi	r25, 0x01	; 1
     1b8:	0e 94 a9 05 	call	0xb52	; 0xb52 <read_line>
	
	if(x == 'N')															//Emergency Brake
     1bc:	ce 34       	cpi	r28, 0x4E	; 78
     1be:	39 f4       	brne	.+14     	; 0x1ce <motorControl+0x20>
		set_motors(0,0);	
     1c0:	60 e0       	ldi	r22, 0x00	; 0
     1c2:	70 e0       	ldi	r23, 0x00	; 0
     1c4:	80 e0       	ldi	r24, 0x00	; 0
     1c6:	90 e0       	ldi	r25, 0x00	; 0
     1c8:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
     1cc:	ba c0       	rjmp	.+372    	; 0x342 <motorControl+0x194>
	
	
	else if(x == 'L'){														//Turn Left
     1ce:	cc 34       	cpi	r28, 0x4C	; 76
     1d0:	09 f5       	brne	.+66     	; 0x214 <motorControl+0x66>
		set_motors(-50,50);
     1d2:	62 e3       	ldi	r22, 0x32	; 50
     1d4:	70 e0       	ldi	r23, 0x00	; 0
     1d6:	8e ec       	ldi	r24, 0xCE	; 206
     1d8:	9f ef       	ldi	r25, 0xFF	; 255
     1da:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
		
		while (sensors[2] >=500)
     1de:	05 c0       	rjmp	.+10     	; 0x1ea <motorControl+0x3c>
			read_line(sensors,IR_EMITTERS_ON);
     1e0:	61 e0       	ldi	r22, 0x01	; 1
     1e2:	80 e7       	ldi	r24, 0x70	; 112
     1e4:	91 e0       	ldi	r25, 0x01	; 1
     1e6:	0e 94 a9 05 	call	0xb52	; 0xb52 <read_line>
	
	
	else if(x == 'L'){														//Turn Left
		set_motors(-50,50);
		
		while (sensors[2] >=500)
     1ea:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     1ee:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     1f2:	84 3f       	cpi	r24, 0xF4	; 244
     1f4:	91 40       	sbci	r25, 0x01	; 1
     1f6:	a0 f7       	brcc	.-24     	; 0x1e0 <motorControl+0x32>
     1f8:	05 c0       	rjmp	.+10     	; 0x204 <motorControl+0x56>
			read_line(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=500)
			read_line(sensors,IR_EMITTERS_ON);
     1fa:	61 e0       	ldi	r22, 0x01	; 1
     1fc:	80 e7       	ldi	r24, 0x70	; 112
     1fe:	91 e0       	ldi	r25, 0x01	; 1
     200:	0e 94 a9 05 	call	0xb52	; 0xb52 <read_line>
	else if(x == 'L'){														//Turn Left
		set_motors(-50,50);
		
		while (sensors[2] >=500)
			read_line(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=500)
     204:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     208:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     20c:	85 3f       	cpi	r24, 0xF5	; 245
     20e:	91 40       	sbci	r25, 0x01	; 1
     210:	a0 f3       	brcs	.-24     	; 0x1fa <motorControl+0x4c>
     212:	97 c0       	rjmp	.+302    	; 0x342 <motorControl+0x194>
			read_line(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'R'){														//Turn Right
     214:	c2 35       	cpi	r28, 0x52	; 82
     216:	09 f5       	brne	.+66     	; 0x25a <motorControl+0xac>
		set_motors(50,-50);
     218:	6e ec       	ldi	r22, 0xCE	; 206
     21a:	7f ef       	ldi	r23, 0xFF	; 255
     21c:	82 e3       	ldi	r24, 0x32	; 50
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
		
		while (sensors[2] >=500)
     224:	05 c0       	rjmp	.+10     	; 0x230 <motorControl+0x82>
			read_line(sensors,IR_EMITTERS_ON);
     226:	61 e0       	ldi	r22, 0x01	; 1
     228:	80 e7       	ldi	r24, 0x70	; 112
     22a:	91 e0       	ldi	r25, 0x01	; 1
     22c:	0e 94 a9 05 	call	0xb52	; 0xb52 <read_line>
	
	
	else if(x == 'R'){														//Turn Right
		set_motors(50,-50);
		
		while (sensors[2] >=500)
     230:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     234:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     238:	84 3f       	cpi	r24, 0xF4	; 244
     23a:	91 40       	sbci	r25, 0x01	; 1
     23c:	a0 f7       	brcc	.-24     	; 0x226 <motorControl+0x78>
     23e:	05 c0       	rjmp	.+10     	; 0x24a <motorControl+0x9c>
			read_line(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=500)
			read_line(sensors,IR_EMITTERS_ON);
     240:	61 e0       	ldi	r22, 0x01	; 1
     242:	80 e7       	ldi	r24, 0x70	; 112
     244:	91 e0       	ldi	r25, 0x01	; 1
     246:	0e 94 a9 05 	call	0xb52	; 0xb52 <read_line>
	else if(x == 'R'){														//Turn Right
		set_motors(50,-50);
		
		while (sensors[2] >=500)
			read_line(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=500)
     24a:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     24e:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     252:	85 3f       	cpi	r24, 0xF5	; 245
     254:	91 40       	sbci	r25, 0x01	; 1
     256:	a0 f3       	brcs	.-24     	; 0x240 <motorControl+0x92>
     258:	74 c0       	rjmp	.+232    	; 0x342 <motorControl+0x194>
			read_line(sensors,IR_EMITTERS_ON);
	}
		
			
	else if(x == 'S'){														//drive straight and adjusts the robot so it follows the line
     25a:	c3 35       	cpi	r28, 0x53	; 83
     25c:	89 f5       	brne	.+98     	; 0x2c0 <motorControl+0x112>
		set_motors(50,50);
     25e:	62 e3       	ldi	r22, 0x32	; 50
     260:	70 e0       	ldi	r23, 0x00	; 0
     262:	82 e3       	ldi	r24, 0x32	; 50
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
		
		if (sensors[3] >= 500 && sensors[4] <= 300 )
     26a:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <sensors+0x6>
     26e:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <sensors+0x7>
     272:	84 3f       	cpi	r24, 0xF4	; 244
     274:	91 40       	sbci	r25, 0x01	; 1
     276:	68 f0       	brcs	.+26     	; 0x292 <motorControl+0xe4>
     278:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <sensors+0x8>
     27c:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <sensors+0x9>
     280:	8d 32       	cpi	r24, 0x2D	; 45
     282:	91 40       	sbci	r25, 0x01	; 1
     284:	30 f4       	brcc	.+12     	; 0x292 <motorControl+0xe4>
			set_motors(50,30);
     286:	6e e1       	ldi	r22, 0x1E	; 30
     288:	70 e0       	ldi	r23, 0x00	; 0
     28a:	82 e3       	ldi	r24, 0x32	; 50
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
		if (sensors[1] >= 500 && sensors[0] <= 300 )
     292:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sensors+0x2>
     296:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <sensors+0x3>
     29a:	84 3f       	cpi	r24, 0xF4	; 244
     29c:	91 40       	sbci	r25, 0x01	; 1
     29e:	08 f4       	brcc	.+2      	; 0x2a2 <motorControl+0xf4>
     2a0:	50 c0       	rjmp	.+160    	; 0x342 <motorControl+0x194>
     2a2:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <sensors>
     2a6:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <sensors+0x1>
     2aa:	8d 32       	cpi	r24, 0x2D	; 45
     2ac:	91 40       	sbci	r25, 0x01	; 1
     2ae:	08 f0       	brcs	.+2      	; 0x2b2 <motorControl+0x104>
     2b0:	48 c0       	rjmp	.+144    	; 0x342 <motorControl+0x194>
			set_motors(30,50);
     2b2:	62 e3       	ldi	r22, 0x32	; 50
     2b4:	70 e0       	ldi	r23, 0x00	; 0
     2b6:	8e e1       	ldi	r24, 0x1E	; 30
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
     2be:	41 c0       	rjmp	.+130    	; 0x342 <motorControl+0x194>
	}
	
	
	else if(x == 'B'){														//Reverse while following the line
     2c0:	c2 34       	cpi	r28, 0x42	; 66
     2c2:	09 f5       	brne	.+66     	; 0x306 <motorControl+0x158>
		set_motors(-50,-50);
     2c4:	6e ec       	ldi	r22, 0xCE	; 206
     2c6:	7f ef       	ldi	r23, 0xFF	; 255
     2c8:	8e ec       	ldi	r24, 0xCE	; 206
     2ca:	9f ef       	ldi	r25, 0xFF	; 255
     2cc:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
		
		if (sensors[3] >=400)
     2d0:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <sensors+0x6>
     2d4:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <sensors+0x7>
     2d8:	80 39       	cpi	r24, 0x90	; 144
     2da:	91 40       	sbci	r25, 0x01	; 1
     2dc:	30 f0       	brcs	.+12     	; 0x2ea <motorControl+0x13c>
			set_motors(-50,-55);
     2de:	69 ec       	ldi	r22, 0xC9	; 201
     2e0:	7f ef       	ldi	r23, 0xFF	; 255
     2e2:	8e ec       	ldi	r24, 0xCE	; 206
     2e4:	9f ef       	ldi	r25, 0xFF	; 255
     2e6:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
		if (sensors[1] >=400)
     2ea:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sensors+0x2>
     2ee:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <sensors+0x3>
     2f2:	80 39       	cpi	r24, 0x90	; 144
     2f4:	91 40       	sbci	r25, 0x01	; 1
     2f6:	28 f1       	brcs	.+74     	; 0x342 <motorControl+0x194>
			set_motors(-55,-50);
     2f8:	6e ec       	ldi	r22, 0xCE	; 206
     2fa:	7f ef       	ldi	r23, 0xFF	; 255
     2fc:	89 ec       	ldi	r24, 0xC9	; 201
     2fe:	9f ef       	ldi	r25, 0xFF	; 255
     300:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
     304:	1e c0       	rjmp	.+60     	; 0x342 <motorControl+0x194>
	}
	
	
	else if(x == 'T'){														// Turn around
     306:	c4 35       	cpi	r28, 0x54	; 84
     308:	a1 f4       	brne	.+40     	; 0x332 <motorControl+0x184>
		set_motors(-75,75);
     30a:	6b e4       	ldi	r22, 0x4B	; 75
     30c:	70 e0       	ldi	r23, 0x00	; 0
     30e:	85 eb       	ldi	r24, 0xB5	; 181
     310:	9f ef       	ldi	r25, 0xFF	; 255
     312:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
		
		while (sensors[2] >=500)
     316:	05 c0       	rjmp	.+10     	; 0x322 <motorControl+0x174>
			read_line(sensors,IR_EMITTERS_ON);
     318:	61 e0       	ldi	r22, 0x01	; 1
     31a:	80 e7       	ldi	r24, 0x70	; 112
     31c:	91 e0       	ldi	r25, 0x01	; 1
     31e:	0e 94 a9 05 	call	0xb52	; 0xb52 <read_line>
	
	
	else if(x == 'T'){														// Turn around
		set_motors(-75,75);
		
		while (sensors[2] >=500)
     322:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     326:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     32a:	84 3f       	cpi	r24, 0xF4	; 244
     32c:	91 40       	sbci	r25, 0x01	; 1
     32e:	a0 f7       	brcc	.-24     	; 0x318 <motorControl+0x16a>
     330:	08 c0       	rjmp	.+16     	; 0x342 <motorControl+0x194>
			read_line(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'P'){														//Robot stops on a slow paste
     332:	c0 35       	cpi	r28, 0x50	; 80
     334:	31 f4       	brne	.+12     	; 0x342 <motorControl+0x194>
		for( int i=50;i==10;i-=3)
		{
			set_motors(i,i);
			delay(1);
		}
		set_motors(0,0);
     336:	60 e0       	ldi	r22, 0x00	; 0
     338:	70 e0       	ldi	r23, 0x00	; 0
     33a:	80 e0       	ldi	r24, 0x00	; 0
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
		}
		
		
     342:	cf 91       	pop	r28
     344:	08 95       	ret

00000346 <lineType>:
	set_motors(0,0);
}

char lineType(){																																	// function that returns the type of junction it detects
	while(1){																																		// >= 500 = black line		<=500 = white
		read_line(sensors,IR_EMITTERS_ON);
     346:	61 e0       	ldi	r22, 0x01	; 1
     348:	80 e7       	ldi	r24, 0x70	; 112
     34a:	91 e0       	ldi	r25, 0x01	; 1
     34c:	0e 94 a9 05 	call	0xb52	; 0xb52 <read_line>
		
		if (sensors[1] >=500 && sensors[3] >= 500){																									//Checks if its a X junction or a T junction
     350:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sensors+0x2>
     354:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <sensors+0x3>
     358:	84 3f       	cpi	r24, 0xF4	; 244
     35a:	21 e0       	ldi	r18, 0x01	; 1
     35c:	92 07       	cpc	r25, r18
     35e:	c0 f0       	brcs	.+48     	; 0x390 <lineType+0x4a>
     360:	20 91 76 01 	lds	r18, 0x0176	; 0x800176 <sensors+0x6>
     364:	30 91 77 01 	lds	r19, 0x0177	; 0x800177 <sensors+0x7>
     368:	24 3f       	cpi	r18, 0xF4	; 244
     36a:	31 40       	sbci	r19, 0x01	; 1
     36c:	88 f0       	brcs	.+34     	; 0x390 <lineType+0x4a>
			inch();
     36e:	0e 94 c6 00 	call	0x18c	; 0x18c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     372:	61 e0       	ldi	r22, 0x01	; 1
     374:	80 e7       	ldi	r24, 0x70	; 112
     376:	91 e0       	ldi	r25, 0x01	; 1
     378:	0e 94 a9 05 	call	0xb52	; 0xb52 <read_line>
			
			if (sensors[2] >=500)
     37c:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     380:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     384:	84 3f       	cpi	r24, 0xF4	; 244
     386:	91 40       	sbci	r25, 0x01	; 1
     388:	08 f4       	brcc	.+2      	; 0x38c <lineType+0x46>
     38a:	90 c0       	rjmp	.+288    	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
				return X_junction;
     38c:	88 e0       	ldi	r24, 0x08	; 8
     38e:	08 95       	ret
			else
				return T_junction;
		}
			
			
		else if (sensors[1] >=500 && sensors[0] >= 500){																							//Checks if its a left corner or a straight with left corner
     390:	84 3f       	cpi	r24, 0xF4	; 244
     392:	21 e0       	ldi	r18, 0x01	; 1
     394:	92 07       	cpc	r25, r18
     396:	00 f1       	brcs	.+64     	; 0x3d8 <lineType+0x92>
     398:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <sensors>
     39c:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <sensors+0x1>
     3a0:	24 3f       	cpi	r18, 0xF4	; 244
     3a2:	31 40       	sbci	r19, 0x01	; 1
     3a4:	c8 f0       	brcs	.+50     	; 0x3d8 <lineType+0x92>
			inch();
     3a6:	0e 94 c6 00 	call	0x18c	; 0x18c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     3aa:	61 e0       	ldi	r22, 0x01	; 1
     3ac:	80 e7       	ldi	r24, 0x70	; 112
     3ae:	91 e0       	ldi	r25, 0x01	; 1
     3b0:	0e 94 a9 05 	call	0xb52	; 0xb52 <read_line>
			
			if (sensors[2] >= 500 || sensors[3] >=500)
     3b4:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     3b8:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     3bc:	84 3f       	cpi	r24, 0xF4	; 244
     3be:	91 40       	sbci	r25, 0x01	; 1
     3c0:	08 f0       	brcs	.+2      	; 0x3c4 <lineType+0x7e>
     3c2:	76 c0       	rjmp	.+236    	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
     3c4:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <sensors+0x6>
     3c8:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <sensors+0x7>
     3cc:	84 3f       	cpi	r24, 0xF4	; 244
     3ce:	91 40       	sbci	r25, 0x01	; 1
     3d0:	08 f4       	brcc	.+2      	; 0x3d4 <lineType+0x8e>
     3d2:	70 c0       	rjmp	.+224    	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
				return Straight_left_junction;
     3d4:	86 e0       	ldi	r24, 0x06	; 6
     3d6:	08 95       	ret
			else
				return Left_corner;
		}
		
		
		else if (sensors[3] >=500 && sensors[4] >= 500){																							//Checks if its a right corner or a straight with right corner
     3d8:	40 91 76 01 	lds	r20, 0x0176	; 0x800176 <sensors+0x6>
     3dc:	50 91 77 01 	lds	r21, 0x0177	; 0x800177 <sensors+0x7>
     3e0:	44 3f       	cpi	r20, 0xF4	; 244
     3e2:	61 e0       	ldi	r22, 0x01	; 1
     3e4:	56 07       	cpc	r21, r22
     3e6:	00 f1       	brcs	.+64     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     3e8:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <sensors+0x8>
     3ec:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <sensors+0x9>
     3f0:	24 3f       	cpi	r18, 0xF4	; 244
     3f2:	31 40       	sbci	r19, 0x01	; 1
     3f4:	c8 f0       	brcs	.+50     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
			inch();
     3f6:	0e 94 c6 00 	call	0x18c	; 0x18c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     3fa:	61 e0       	ldi	r22, 0x01	; 1
     3fc:	80 e7       	ldi	r24, 0x70	; 112
     3fe:	91 e0       	ldi	r25, 0x01	; 1
     400:	0e 94 a9 05 	call	0xb52	; 0xb52 <read_line>
			
			if (sensors[2] >= 500 || sensors[1] >=500)
     404:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     408:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     40c:	84 3f       	cpi	r24, 0xF4	; 244
     40e:	91 40       	sbci	r25, 0x01	; 1
     410:	08 f0       	brcs	.+2      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     412:	52 c0       	rjmp	.+164    	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
     414:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sensors+0x2>
     418:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <sensors+0x3>
     41c:	84 3f       	cpi	r24, 0xF4	; 244
     41e:	91 40       	sbci	r25, 0x01	; 1
     420:	08 f4       	brcc	.+2      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
     422:	4c c0       	rjmp	.+152    	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
				return Straight_right_junction;
     424:	85 e0       	ldi	r24, 0x05	; 5
     426:	08 95       	ret
			else
				return Right_corner;
		}
		
		
		else if(sensors[2] <=200){																													// check if the line ends
     428:	20 91 74 01 	lds	r18, 0x0174	; 0x800174 <sensors+0x4>
     42c:	30 91 75 01 	lds	r19, 0x0175	; 0x800175 <sensors+0x5>
     430:	29 3c       	cpi	r18, 0xC9	; 201
     432:	31 05       	cpc	r19, r1
     434:	08 f4       	brcc	.+2      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
     436:	44 c0       	rjmp	.+136    	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
			return Line_end;
		}

		
		else if (sensors[2] >=500){																													//Checks if the line is straight
     438:	24 3f       	cpi	r18, 0xF4	; 244
     43a:	61 e0       	ldi	r22, 0x01	; 1
     43c:	36 07       	cpc	r19, r22
     43e:	08 f4       	brcc	.+2      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
     440:	82 cf       	rjmp	.-252    	; 0x346 <lineType>
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500))			//Checks the line for a "Barcode"
     442:	24 3f       	cpi	r18, 0xF4	; 244
     444:	61 e0       	ldi	r22, 0x01	; 1
     446:	36 07       	cpc	r19, r22
     448:	e8 f1       	brcs	.+122    	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
     44a:	45 3f       	cpi	r20, 0xF5	; 245
     44c:	51 40       	sbci	r21, 0x01	; 1
     44e:	e0 f5       	brcc	.+120    	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
     450:	40 91 78 01 	lds	r20, 0x0178	; 0x800178 <sensors+0x8>
     454:	50 91 79 01 	lds	r21, 0x0179	; 0x800179 <sensors+0x9>
     458:	44 3f       	cpi	r20, 0xF4	; 244
     45a:	51 40       	sbci	r21, 0x01	; 1
     45c:	b8 f1       	brcs	.+110    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
     45e:	40 91 70 01 	lds	r20, 0x0170	; 0x800170 <sensors>
     462:	50 91 71 01 	lds	r21, 0x0171	; 0x800171 <sensors+0x1>
     466:	44 3f       	cpi	r20, 0xF4	; 244
     468:	51 40       	sbci	r21, 0x01	; 1
     46a:	90 f1       	brcs	.+100    	; 0x4d0 <__EEPROM_REGION_LENGTH__+0xd0>
     46c:	85 3f       	cpi	r24, 0xF5	; 245
     46e:	91 40       	sbci	r25, 0x01	; 1
     470:	88 f5       	brcc	.+98     	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
     472:	24 3f       	cpi	r18, 0xF4	; 244
     474:	31 40       	sbci	r19, 0x01	; 1
     476:	50 f4       	brcc	.+20     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
					motorControl('S');
				}
				return Barcode;
			}
			else
				return Straight;																									// check if its straight without any corners
     478:	80 e0       	ldi	r24, 0x00	; 0
     47a:	08 95       	ret
		else if (sensors[2] >=500){																													//Checks if the line is straight
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500))			//Checks the line for a "Barcode"
			{
				while(sensors[4] >= 400 || sensors[0] >=400)
				{
					read_line(sensors,IR_EMITTERS_ON);
     47c:	61 e0       	ldi	r22, 0x01	; 1
     47e:	80 e7       	ldi	r24, 0x70	; 112
     480:	91 e0       	ldi	r25, 0x01	; 1
     482:	0e 94 a9 05 	call	0xb52	; 0xb52 <read_line>
					motorControl('S');
     486:	83 e5       	ldi	r24, 0x53	; 83
     488:	0e 94 d7 00 	call	0x1ae	; 0x1ae <motorControl>

		
		else if (sensors[2] >=500){																													//Checks if the line is straight
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500))			//Checks the line for a "Barcode"
			{
				while(sensors[4] >= 400 || sensors[0] >=400)
     48c:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <sensors+0x8>
     490:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <sensors+0x9>
     494:	80 39       	cpi	r24, 0x90	; 144
     496:	91 40       	sbci	r25, 0x01	; 1
     498:	88 f7       	brcc	.-30     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
     49a:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <sensors>
     49e:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <sensors+0x1>
     4a2:	80 39       	cpi	r24, 0x90	; 144
     4a4:	91 40       	sbci	r25, 0x01	; 1
     4a6:	50 f7       	brcc	.-44     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
				{
					read_line(sensors,IR_EMITTERS_ON);
					motorControl('S');
				}
				return Barcode;
     4a8:	82 e0       	ldi	r24, 0x02	; 2
     4aa:	08 95       	ret
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >=500)
				return X_junction;
			else
				return T_junction;
     4ac:	87 e0       	ldi	r24, 0x07	; 7
     4ae:	08 95       	ret
		else if (sensors[1] >=500 && sensors[0] >= 500){																							//Checks if its a left corner or a straight with left corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[3] >=500)
				return Straight_left_junction;
     4b0:	86 e0       	ldi	r24, 0x06	; 6
     4b2:	08 95       	ret
			else
				return Left_corner;
     4b4:	83 e0       	ldi	r24, 0x03	; 3
     4b6:	08 95       	ret
		else if (sensors[3] >=500 && sensors[4] >= 500){																							//Checks if its a right corner or a straight with right corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[1] >=500)
				return Straight_right_junction;
     4b8:	85 e0       	ldi	r24, 0x05	; 5
     4ba:	08 95       	ret
			else
				return Right_corner;
     4bc:	84 e0       	ldi	r24, 0x04	; 4
     4be:	08 95       	ret
		}
		
		
		else if(sensors[2] <=200){																													// check if the line ends
			return Line_end;
     4c0:	81 e0       	ldi	r24, 0x01	; 1
     4c2:	08 95       	ret
					motorControl('S');
				}
				return Barcode;
			}
			else
				return Straight;																									// check if its straight without any corners
     4c4:	80 e0       	ldi	r24, 0x00	; 0
     4c6:	08 95       	ret
     4c8:	80 e0       	ldi	r24, 0x00	; 0
     4ca:	08 95       	ret
     4cc:	80 e0       	ldi	r24, 0x00	; 0
     4ce:	08 95       	ret
     4d0:	80 e0       	ldi	r24, 0x00	; 0
     4d2:	08 95       	ret
     4d4:	80 e0       	ldi	r24, 0x00	; 0
			
		}	
	}
}
     4d6:	08 95       	ret

000004d8 <parcour>:

char richting;

Junctions situatie = Straight;

char parcour(char *route) {
     4d8:	cf 93       	push	r28
     4da:	df 93       	push	r29
     4dc:	ec 01       	movw	r28, r24
	while(1) {
		situatie = lineType();
     4de:	0e 94 a3 01 	call	0x346	; 0x346 <lineType>
     4e2:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <situatie>
		
		switch (situatie) {
     4e6:	90 e0       	ldi	r25, 0x00	; 0
     4e8:	89 30       	cpi	r24, 0x09	; 9
     4ea:	91 05       	cpc	r25, r1
     4ec:	e0 f5       	brcc	.+120    	; 0x566 <parcour+0x8e>
     4ee:	fc 01       	movw	r30, r24
     4f0:	ec 5c       	subi	r30, 0xCC	; 204
     4f2:	ff 4f       	sbci	r31, 0xFF	; 255
     4f4:	0c 94 44 0b 	jmp	0x1688	; 0x1688 <__tablejump2__>
			
			case X_junction:
			case Left_corner:
			case T_junction:
			case Straight_left_junction:
				motorControl('L');
     4f8:	8c e4       	ldi	r24, 0x4C	; 76
     4fa:	0e 94 d7 00 	call	0x1ae	; 0x1ae <motorControl>
				richting = 'L';
     4fe:	8c e4       	ldi	r24, 0x4C	; 76
     500:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
				strncat(route, &richting, 1);
     504:	41 e0       	ldi	r20, 0x01	; 1
     506:	50 e0       	ldi	r21, 0x00	; 0
     508:	6a e7       	ldi	r22, 0x7A	; 122
     50a:	71 e0       	ldi	r23, 0x01	; 1
     50c:	ce 01       	movw	r24, r28
     50e:	0e 94 c4 0c 	call	0x1988	; 0x1988 <strncat>
				break;
     512:	29 c0       	rjmp	.+82     	; 0x566 <parcour+0x8e>
			
			case Right_corner:
				motorControl('R');
     514:	82 e5       	ldi	r24, 0x52	; 82
     516:	0e 94 d7 00 	call	0x1ae	; 0x1ae <motorControl>
				richting = 'R';
     51a:	82 e5       	ldi	r24, 0x52	; 82
     51c:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
				strncat(route, &richting, 1);
     520:	41 e0       	ldi	r20, 0x01	; 1
     522:	50 e0       	ldi	r21, 0x00	; 0
     524:	6a e7       	ldi	r22, 0x7A	; 122
     526:	71 e0       	ldi	r23, 0x01	; 1
     528:	ce 01       	movw	r24, r28
     52a:	0e 94 c4 0c 	call	0x1988	; 0x1988 <strncat>
				break;
     52e:	1b c0       	rjmp	.+54     	; 0x566 <parcour+0x8e>
			
			case Straight_right_junction:
				richting = 'S';
     530:	83 e5       	ldi	r24, 0x53	; 83
     532:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
				strncat(route, &richting, 1);
     536:	41 e0       	ldi	r20, 0x01	; 1
     538:	50 e0       	ldi	r21, 0x00	; 0
     53a:	6a e7       	ldi	r22, 0x7A	; 122
     53c:	71 e0       	ldi	r23, 0x01	; 1
     53e:	ce 01       	movw	r24, r28
     540:	0e 94 c4 0c 	call	0x1988	; 0x1988 <strncat>
			case Straight:
				motorControl('S');
     544:	83 e5       	ldi	r24, 0x53	; 83
     546:	0e 94 d7 00 	call	0x1ae	; 0x1ae <motorControl>
				break;
     54a:	0d c0       	rjmp	.+26     	; 0x566 <parcour+0x8e>
			
			case Line_end:
				motorControl('T');
     54c:	84 e5       	ldi	r24, 0x54	; 84
     54e:	0e 94 d7 00 	call	0x1ae	; 0x1ae <motorControl>
				richting = 'T';
     552:	84 e5       	ldi	r24, 0x54	; 84
     554:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
				strncat(route, &richting, 1);
     558:	41 e0       	ldi	r20, 0x01	; 1
     55a:	50 e0       	ldi	r21, 0x00	; 0
     55c:	6a e7       	ldi	r22, 0x7A	; 122
     55e:	71 e0       	ldi	r23, 0x01	; 1
     560:	ce 01       	movw	r24, r28
     562:	0e 94 c4 0c 	call	0x1988	; 0x1988 <strncat>
				break;
		}
		
		
		if (route[-2] == 'T') {
     566:	fe 01       	movw	r30, r28
     568:	32 97       	sbiw	r30, 0x02	; 2
     56a:	80 81       	ld	r24, Z
     56c:	84 35       	cpi	r24, 0x54	; 84
     56e:	09 f0       	breq	.+2      	; 0x572 <parcour+0x9a>
     570:	b6 cf       	rjmp	.-148    	; 0x4de <parcour+0x6>
			route[strlen(route)-3] = '\0';
     572:	fe 01       	movw	r30, r28
     574:	01 90       	ld	r0, Z+
     576:	00 20       	and	r0, r0
     578:	e9 f7       	brne	.-6      	; 0x574 <parcour+0x9c>
     57a:	31 97       	sbiw	r30, 0x01	; 1
     57c:	ec 1b       	sub	r30, r28
     57e:	fd 0b       	sbc	r31, r29
     580:	33 97       	sbiw	r30, 0x03	; 3
     582:	ec 0f       	add	r30, r28
     584:	fd 1f       	adc	r31, r29
     586:	10 82       	st	Z, r1
			if (route[-3] == 'L' && route[-1] == 'L') {
     588:	fe 01       	movw	r30, r28
     58a:	33 97       	sbiw	r30, 0x03	; 3
     58c:	80 81       	ld	r24, Z
     58e:	8c 34       	cpi	r24, 0x4C	; 76
     590:	41 f4       	brne	.+16     	; 0x5a2 <parcour+0xca>
     592:	32 96       	adiw	r30, 0x02	; 2
     594:	90 81       	ld	r25, Z
     596:	9c 34       	cpi	r25, 0x4C	; 76
     598:	21 f4       	brne	.+8      	; 0x5a2 <parcour+0xca>
				richting = 'S';
     59a:	83 e5       	ldi	r24, 0x53	; 83
     59c:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
     5a0:	2b c0       	rjmp	.+86     	; 0x5f8 <parcour+0x120>
			} else if (route[-3] == 'S' && route[-1] == 'L'){
     5a2:	83 35       	cpi	r24, 0x53	; 83
     5a4:	49 f4       	brne	.+18     	; 0x5b8 <parcour+0xe0>
     5a6:	fe 01       	movw	r30, r28
     5a8:	31 97       	sbiw	r30, 0x01	; 1
     5aa:	90 81       	ld	r25, Z
     5ac:	9c 34       	cpi	r25, 0x4C	; 76
     5ae:	21 f4       	brne	.+8      	; 0x5b8 <parcour+0xe0>
				richting = 'R';			
     5b0:	82 e5       	ldi	r24, 0x52	; 82
     5b2:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
     5b6:	20 c0       	rjmp	.+64     	; 0x5f8 <parcour+0x120>
			} else if (route[-3] == 'R' && route[-1] == 'L'){
     5b8:	82 35       	cpi	r24, 0x52	; 82
     5ba:	49 f4       	brne	.+18     	; 0x5ce <parcour+0xf6>
     5bc:	fe 01       	movw	r30, r28
     5be:	31 97       	sbiw	r30, 0x01	; 1
     5c0:	90 81       	ld	r25, Z
     5c2:	9c 34       	cpi	r25, 0x4C	; 76
     5c4:	21 f4       	brne	.+8      	; 0x5ce <parcour+0xf6>
				richting = 'T';			
     5c6:	84 e5       	ldi	r24, 0x54	; 84
     5c8:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
     5cc:	15 c0       	rjmp	.+42     	; 0x5f8 <parcour+0x120>
			} else if (route[-3] == 'L' && route[-1] == 'R'){
     5ce:	8c 34       	cpi	r24, 0x4C	; 76
     5d0:	49 f4       	brne	.+18     	; 0x5e4 <parcour+0x10c>
     5d2:	fe 01       	movw	r30, r28
     5d4:	31 97       	sbiw	r30, 0x01	; 1
     5d6:	90 81       	ld	r25, Z
     5d8:	92 35       	cpi	r25, 0x52	; 82
     5da:	21 f4       	brne	.+8      	; 0x5e4 <parcour+0x10c>
				richting = 'T';			
     5dc:	84 e5       	ldi	r24, 0x54	; 84
     5de:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
     5e2:	0a c0       	rjmp	.+20     	; 0x5f8 <parcour+0x120>
			} else if (route[-3] == 'L' && route[-1] == 'S'){
     5e4:	8c 34       	cpi	r24, 0x4C	; 76
     5e6:	41 f4       	brne	.+16     	; 0x5f8 <parcour+0x120>
     5e8:	fe 01       	movw	r30, r28
     5ea:	31 97       	sbiw	r30, 0x01	; 1
     5ec:	80 81       	ld	r24, Z
     5ee:	83 35       	cpi	r24, 0x53	; 83
     5f0:	19 f4       	brne	.+6      	; 0x5f8 <parcour+0x120>
				richting = 'R';			
     5f2:	82 e5       	ldi	r24, 0x52	; 82
     5f4:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
			}
			strncat(route, &richting, 1);				
     5f8:	41 e0       	ldi	r20, 0x01	; 1
     5fa:	50 e0       	ldi	r21, 0x00	; 0
     5fc:	6a e7       	ldi	r22, 0x7A	; 122
     5fe:	71 e0       	ldi	r23, 0x01	; 1
     600:	ce 01       	movw	r24, r28
     602:	0e 94 c4 0c 	call	0x1988	; 0x1988 <strncat>
     606:	6b cf       	rjmp	.-298    	; 0x4de <parcour+0x6>
	while(1) {
		situatie = lineType();
		
		switch (situatie) {
			case Barcode: // end of parcour
				set_motors(0,0);
     608:	60 e0       	ldi	r22, 0x00	; 0
     60a:	70 e0       	ldi	r23, 0x00	; 0
     60c:	80 e0       	ldi	r24, 0x00	; 0
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <set_motors>
			}
			strncat(route, &richting, 1);				
		}
	}
	return 0;
     614:	80 e0       	ldi	r24, 0x00	; 0
     616:	df 91       	pop	r29
     618:	cf 91       	pop	r28
     61a:	08 95       	ret

0000061c <delay_us.constprop.0>:
     61c:	81 e0       	ldi	r24, 0x01	; 1
     61e:	90 e0       	ldi	r25, 0x00	; 0
     620:	6f 93       	push	r22
     622:	64 e0       	ldi	r22, 0x04	; 4
     624:	6a 95       	dec	r22
     626:	f1 f7       	brne	.-4      	; 0x624 <delay_us.constprop.0+0x8>
     628:	6f 91       	pop	r22
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	c9 f7       	brne	.-14     	; 0x620 <delay_us.constprop.0+0x4>
     62e:	08 95       	ret

00000630 <_ZN12OrangutanLCD8busyWaitEv>:
     630:	0f 93       	push	r16
     632:	1f 93       	push	r17
     634:	cf 93       	push	r28
     636:	df 93       	push	r29
     638:	1a b1       	in	r17, 0x0a	; 10
     63a:	57 98       	cbi	0x0a, 7	; 10
     63c:	5a 98       	cbi	0x0b, 2	; 11
     63e:	28 9a       	sbi	0x05, 0	; 5
     640:	c0 e0       	ldi	r28, 0x00	; 0
     642:	d0 e0       	ldi	r29, 0x00	; 0
     644:	0e 94 0e 03 	call	0x61c	; 0x61c <delay_us.constprop.0>
     648:	5c 9a       	sbi	0x0b, 4	; 11
     64a:	0e 94 0e 03 	call	0x61c	; 0x61c <delay_us.constprop.0>
     64e:	09 b1       	in	r16, 0x09	; 9
     650:	5c 98       	cbi	0x0b, 4	; 11
     652:	0e 94 0e 03 	call	0x61c	; 0x61c <delay_us.constprop.0>
     656:	5c 9a       	sbi	0x0b, 4	; 11
     658:	0e 94 0e 03 	call	0x61c	; 0x61c <delay_us.constprop.0>
     65c:	5c 98       	cbi	0x0b, 4	; 11
     65e:	24 96       	adiw	r28, 0x04	; 4
     660:	07 ff       	sbrs	r16, 7
     662:	10 c0       	rjmp	.+32     	; 0x684 <_ZN12OrangutanLCD8busyWaitEv+0x54>
     664:	ae 01       	movw	r20, r28
     666:	60 e0       	ldi	r22, 0x00	; 0
     668:	70 e0       	ldi	r23, 0x00	; 0
     66a:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
     66e:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <__data_end+0x1>
     672:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <__data_end+0x2>
     676:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <__data_end+0x3>
     67a:	48 17       	cp	r20, r24
     67c:	59 07       	cpc	r21, r25
     67e:	6a 07       	cpc	r22, r26
     680:	7b 07       	cpc	r23, r27
     682:	00 f3       	brcs	.-64     	; 0x644 <_ZN12OrangutanLCD8busyWaitEv+0x14>
     684:	1a b9       	out	0x0a, r17	; 10
     686:	df 91       	pop	r29
     688:	cf 91       	pop	r28
     68a:	1f 91       	pop	r17
     68c:	0f 91       	pop	r16
     68e:	08 95       	ret

00000690 <_ZN12OrangutanLCD8sendDataEh>:
     690:	95 b1       	in	r25, 0x05	; 5
     692:	28 2f       	mov	r18, r24
     694:	21 70       	andi	r18, 0x01	; 1
     696:	30 e0       	ldi	r19, 0x00	; 0
     698:	22 0f       	add	r18, r18
     69a:	33 1f       	adc	r19, r19
     69c:	48 2f       	mov	r20, r24
     69e:	46 70       	andi	r20, 0x06	; 6
     6a0:	68 e0       	ldi	r22, 0x08	; 8
     6a2:	46 9f       	mul	r20, r22
     6a4:	a0 01       	movw	r20, r0
     6a6:	11 24       	eor	r1, r1
     6a8:	24 2b       	or	r18, r20
     6aa:	9d 7c       	andi	r25, 0xCD	; 205
     6ac:	29 2b       	or	r18, r25
     6ae:	25 b9       	out	0x05, r18	; 5
     6b0:	9b b1       	in	r25, 0x0b	; 11
     6b2:	88 70       	andi	r24, 0x08	; 8
     6b4:	82 95       	swap	r24
     6b6:	80 7f       	andi	r24, 0xF0	; 240
     6b8:	9f 77       	andi	r25, 0x7F	; 127
     6ba:	89 2b       	or	r24, r25
     6bc:	8b b9       	out	0x0b, r24	; 11
     6be:	5c 9a       	sbi	0x0b, 4	; 11
     6c0:	0e 94 0e 03 	call	0x61c	; 0x61c <delay_us.constprop.0>
     6c4:	5c 98       	cbi	0x0b, 4	; 11
     6c6:	0e 94 0e 03 	call	0x61c	; 0x61c <delay_us.constprop.0>
     6ca:	08 95       	ret

000006cc <_ZN12OrangutanLCD4sendEhhh>:
     6cc:	a0 e0       	ldi	r26, 0x00	; 0
     6ce:	b0 e0       	ldi	r27, 0x00	; 0
     6d0:	ec e6       	ldi	r30, 0x6C	; 108
     6d2:	f3 e0       	ldi	r31, 0x03	; 3
     6d4:	0c 94 77 0b 	jmp	0x16ee	; 0x16ee <__prologue_saves__+0x16>
     6d8:	c8 2f       	mov	r28, r24
     6da:	d6 2e       	mov	r13, r22
     6dc:	e4 2e       	mov	r14, r20
     6de:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <_ZZN12OrangutanLCD4initEvE11initialized>
     6e2:	81 11       	cpse	r24, r1
     6e4:	05 c0       	rjmp	.+10     	; 0x6f0 <_ZN12OrangutanLCD4sendEhhh+0x24>
     6e6:	81 e0       	ldi	r24, 0x01	; 1
     6e8:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <_ZZN12OrangutanLCD4initEvE11initialized>
     6ec:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN12OrangutanLCD5init2Ev>
     6f0:	0e 94 18 03 	call	0x630	; 0x630 <_ZN12OrangutanLCD8busyWaitEv>
     6f4:	14 b1       	in	r17, 0x04	; 4
     6f6:	d5 b1       	in	r29, 0x05	; 5
     6f8:	fa b0       	in	r15, 0x0a	; 10
     6fa:	0b b1       	in	r16, 0x0b	; 11
     6fc:	28 98       	cbi	0x05, 0	; 5
     6fe:	dd 20       	and	r13, r13
     700:	11 f0       	breq	.+4      	; 0x706 <_ZN12OrangutanLCD4sendEhhh+0x3a>
     702:	5a 9a       	sbi	0x0b, 2	; 11
     704:	01 c0       	rjmp	.+2      	; 0x708 <_ZN12OrangutanLCD4sendEhhh+0x3c>
     706:	5a 98       	cbi	0x0b, 2	; 11
     708:	94 b1       	in	r25, 0x04	; 4
     70a:	92 63       	ori	r25, 0x32	; 50
     70c:	94 b9       	out	0x04, r25	; 4
     70e:	57 9a       	sbi	0x0a, 7	; 10
     710:	81 e0       	ldi	r24, 0x01	; 1
     712:	e8 16       	cp	r14, r24
     714:	29 f0       	breq	.+10     	; 0x720 <_ZN12OrangutanLCD4sendEhhh+0x54>
     716:	8c 2f       	mov	r24, r28
     718:	82 95       	swap	r24
     71a:	8f 70       	andi	r24, 0x0F	; 15
     71c:	0e 94 48 03 	call	0x690	; 0x690 <_ZN12OrangutanLCD8sendDataEh>
     720:	8c 2f       	mov	r24, r28
     722:	8f 70       	andi	r24, 0x0F	; 15
     724:	0e 94 48 03 	call	0x690	; 0x690 <_ZN12OrangutanLCD8sendDataEh>
     728:	fa b8       	out	0x0a, r15	; 10
     72a:	0b b9       	out	0x0b, r16	; 11
     72c:	14 b9       	out	0x04, r17	; 4
     72e:	d5 b9       	out	0x05, r29	; 5
     730:	cd b7       	in	r28, 0x3d	; 61
     732:	de b7       	in	r29, 0x3e	; 62
     734:	e7 e0       	ldi	r30, 0x07	; 7
     736:	0c 94 93 0b 	jmp	0x1726	; 0x1726 <__epilogue_restores__+0x16>

0000073a <_ZN12OrangutanLCD8send_cmdEh>:
     73a:	42 e0       	ldi	r20, 0x02	; 2
     73c:	60 e0       	ldi	r22, 0x00	; 0
     73e:	0e 94 66 03 	call	0x6cc	; 0x6cc <_ZN12OrangutanLCD4sendEhhh>
     742:	08 95       	ret

00000744 <_ZN12OrangutanLCD9send_dataEh>:
     744:	42 e0       	ldi	r20, 0x02	; 2
     746:	61 e0       	ldi	r22, 0x01	; 1
     748:	0e 94 66 03 	call	0x6cc	; 0x6cc <_ZN12OrangutanLCD4sendEhhh>
     74c:	08 95       	ret

0000074e <_ZN12OrangutanLCD13send_4bit_cmdEh>:
     74e:	41 e0       	ldi	r20, 0x01	; 1
     750:	60 e0       	ldi	r22, 0x00	; 0
     752:	0e 94 66 03 	call	0x6cc	; 0x6cc <_ZN12OrangutanLCD4sendEhhh>
     756:	08 95       	ret

00000758 <_ZN12OrangutanLCD5init2Ev>:
     758:	80 e1       	ldi	r24, 0x10	; 16
     75a:	97 e2       	ldi	r25, 0x27	; 39
     75c:	a0 e0       	ldi	r26, 0x00	; 0
     75e:	b0 e0       	ldi	r27, 0x00	; 0
     760:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
     764:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <__data_end+0x1>
     768:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <__data_end+0x2>
     76c:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <__data_end+0x3>
     770:	52 9a       	sbi	0x0a, 2	; 10
     772:	20 9a       	sbi	0x04, 0	; 4
     774:	54 9a       	sbi	0x0a, 4	; 10
     776:	8e e1       	ldi	r24, 0x1E	; 30
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	0e 94 67 05 	call	0xace	; 0xace <delay_ms>
     77e:	83 e0       	ldi	r24, 0x03	; 3
     780:	0e 94 a7 03 	call	0x74e	; 0x74e <_ZN12OrangutanLCD13send_4bit_cmdEh>
     784:	86 e0       	ldi	r24, 0x06	; 6
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	0e 94 67 05 	call	0xace	; 0xace <delay_ms>
     78c:	83 e0       	ldi	r24, 0x03	; 3
     78e:	0e 94 a7 03 	call	0x74e	; 0x74e <_ZN12OrangutanLCD13send_4bit_cmdEh>
     792:	82 e0       	ldi	r24, 0x02	; 2
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	0e 94 67 05 	call	0xace	; 0xace <delay_ms>
     79a:	83 e0       	ldi	r24, 0x03	; 3
     79c:	0e 94 a7 03 	call	0x74e	; 0x74e <_ZN12OrangutanLCD13send_4bit_cmdEh>
     7a0:	82 e0       	ldi	r24, 0x02	; 2
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	0e 94 67 05 	call	0xace	; 0xace <delay_ms>
     7a8:	82 e0       	ldi	r24, 0x02	; 2
     7aa:	0e 94 a7 03 	call	0x74e	; 0x74e <_ZN12OrangutanLCD13send_4bit_cmdEh>
     7ae:	82 e0       	ldi	r24, 0x02	; 2
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	0e 94 67 05 	call	0xace	; 0xace <delay_ms>
     7b6:	88 e2       	ldi	r24, 0x28	; 40
     7b8:	0e 94 9d 03 	call	0x73a	; 0x73a <_ZN12OrangutanLCD8send_cmdEh>
     7bc:	88 e0       	ldi	r24, 0x08	; 8
     7be:	0e 94 9d 03 	call	0x73a	; 0x73a <_ZN12OrangutanLCD8send_cmdEh>
     7c2:	81 e0       	ldi	r24, 0x01	; 1
     7c4:	0e 94 9d 03 	call	0x73a	; 0x73a <_ZN12OrangutanLCD8send_cmdEh>
     7c8:	86 e0       	ldi	r24, 0x06	; 6
     7ca:	0e 94 9d 03 	call	0x73a	; 0x73a <_ZN12OrangutanLCD8send_cmdEh>
     7ce:	8c e0       	ldi	r24, 0x0C	; 12
     7d0:	0e 94 9d 03 	call	0x73a	; 0x73a <_ZN12OrangutanLCD8send_cmdEh>
     7d4:	08 95       	ret

000007d6 <_ZN12OrangutanLCD5clearEv>:
     7d6:	81 e0       	ldi	r24, 0x01	; 1
     7d8:	0e 94 9d 03 	call	0x73a	; 0x73a <_ZN12OrangutanLCD8send_cmdEh>
     7dc:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <printf_chars>
     7e0:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <printf_chars+0x1>
     7e4:	89 2b       	or	r24, r25
     7e6:	f9 f0       	breq	.+62     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
     7e8:	60 e0       	ldi	r22, 0x00	; 0
     7ea:	a0 e2       	ldi	r26, 0x20	; 32
     7ec:	26 2f       	mov	r18, r22
     7ee:	30 e0       	ldi	r19, 0x00	; 0
     7f0:	70 91 00 01 	lds	r23, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7f4:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <numLCDRows>
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	01 97       	sbiw	r24, 0x01	; 1
     7fc:	78 9f       	mul	r23, r24
     7fe:	a0 01       	movw	r20, r0
     800:	79 9f       	mul	r23, r25
     802:	50 0d       	add	r21, r0
     804:	11 24       	eor	r1, r1
     806:	24 17       	cp	r18, r20
     808:	35 07       	cpc	r19, r21
     80a:	4c f4       	brge	.+18     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     80c:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <printf_chars>
     810:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <printf_chars+0x1>
     814:	e2 0f       	add	r30, r18
     816:	f3 1f       	adc	r31, r19
     818:	a0 83       	st	Z, r26
     81a:	6f 5f       	subi	r22, 0xFF	; 255
     81c:	e7 cf       	rjmp	.-50     	; 0x7ec <_ZN12OrangutanLCD5clearEv+0x16>
     81e:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <col>
     822:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <row>
     826:	08 95       	ret

00000828 <clear>:
     828:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <_ZN12OrangutanLCD5clearEv>
     82c:	08 95       	ret

0000082e <_ZN12OrangutanLCD5printEPKc>:
     82e:	cf 93       	push	r28
     830:	df 93       	push	r29
     832:	ec 01       	movw	r28, r24
     834:	89 91       	ld	r24, Y+
     836:	88 23       	and	r24, r24
     838:	19 f0       	breq	.+6      	; 0x840 <_ZN12OrangutanLCD5printEPKc+0x12>
     83a:	0e 94 a2 03 	call	0x744	; 0x744 <_ZN12OrangutanLCD9send_dataEh>
     83e:	fa cf       	rjmp	.-12     	; 0x834 <_ZN12OrangutanLCD5printEPKc+0x6>
     840:	df 91       	pop	r29
     842:	cf 91       	pop	r28
     844:	08 95       	ret

00000846 <print>:
     846:	0e 94 17 04 	call	0x82e	; 0x82e <_ZN12OrangutanLCD5printEPKc>
     84a:	08 95       	ret

0000084c <_ZN16OrangutanDigital9setOutputEhh>:
     84c:	88 30       	cpi	r24, 0x08	; 8
     84e:	58 f4       	brcc	.+22     	; 0x866 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
     850:	91 e0       	ldi	r25, 0x01	; 1
     852:	01 c0       	rjmp	.+2      	; 0x856 <_ZN16OrangutanDigital9setOutputEhh+0xa>
     854:	99 0f       	add	r25, r25
     856:	8a 95       	dec	r24
     858:	ea f7       	brpl	.-6      	; 0x854 <_ZN16OrangutanDigital9setOutputEhh+0x8>
     85a:	89 2f       	mov	r24, r25
     85c:	aa e2       	ldi	r26, 0x2A	; 42
     85e:	b0 e0       	ldi	r27, 0x00	; 0
     860:	eb e2       	ldi	r30, 0x2B	; 43
     862:	f0 e0       	ldi	r31, 0x00	; 0
     864:	21 c0       	rjmp	.+66     	; 0x8a8 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     866:	8e 30       	cpi	r24, 0x0E	; 14
     868:	60 f4       	brcc	.+24     	; 0x882 <_ZN16OrangutanDigital9setOutputEhh+0x36>
     86a:	98 ef       	ldi	r25, 0xF8	; 248
     86c:	98 0f       	add	r25, r24
     86e:	81 e0       	ldi	r24, 0x01	; 1
     870:	01 c0       	rjmp	.+2      	; 0x874 <_ZN16OrangutanDigital9setOutputEhh+0x28>
     872:	88 0f       	add	r24, r24
     874:	9a 95       	dec	r25
     876:	ea f7       	brpl	.-6      	; 0x872 <_ZN16OrangutanDigital9setOutputEhh+0x26>
     878:	a4 e2       	ldi	r26, 0x24	; 36
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	e5 e2       	ldi	r30, 0x25	; 37
     87e:	f0 e0       	ldi	r31, 0x00	; 0
     880:	13 c0       	rjmp	.+38     	; 0x8a8 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     882:	85 31       	cpi	r24, 0x15	; 21
     884:	60 f4       	brcc	.+24     	; 0x89e <_ZN16OrangutanDigital9setOutputEhh+0x52>
     886:	92 ef       	ldi	r25, 0xF2	; 242
     888:	98 0f       	add	r25, r24
     88a:	81 e0       	ldi	r24, 0x01	; 1
     88c:	01 c0       	rjmp	.+2      	; 0x890 <_ZN16OrangutanDigital9setOutputEhh+0x44>
     88e:	88 0f       	add	r24, r24
     890:	9a 95       	dec	r25
     892:	ea f7       	brpl	.-6      	; 0x88e <_ZN16OrangutanDigital9setOutputEhh+0x42>
     894:	a7 e2       	ldi	r26, 0x27	; 39
     896:	b0 e0       	ldi	r27, 0x00	; 0
     898:	e8 e2       	ldi	r30, 0x28	; 40
     89a:	f0 e0       	ldi	r31, 0x00	; 0
     89c:	05 c0       	rjmp	.+10     	; 0x8a8 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     89e:	80 e0       	ldi	r24, 0x00	; 0
     8a0:	a0 e0       	ldi	r26, 0x00	; 0
     8a2:	b0 e0       	ldi	r27, 0x00	; 0
     8a4:	e0 e0       	ldi	r30, 0x00	; 0
     8a6:	f0 e0       	ldi	r31, 0x00	; 0
     8a8:	6f 3f       	cpi	r22, 0xFF	; 255
     8aa:	19 f4       	brne	.+6      	; 0x8b2 <_ZN16OrangutanDigital9setOutputEhh+0x66>
     8ac:	90 81       	ld	r25, Z
     8ae:	98 27       	eor	r25, r24
     8b0:	09 c0       	rjmp	.+18     	; 0x8c4 <_ZN16OrangutanDigital9setOutputEhh+0x78>
     8b2:	66 23       	and	r22, r22
     8b4:	19 f0       	breq	.+6      	; 0x8bc <_ZN16OrangutanDigital9setOutputEhh+0x70>
     8b6:	90 81       	ld	r25, Z
     8b8:	98 2b       	or	r25, r24
     8ba:	04 c0       	rjmp	.+8      	; 0x8c4 <_ZN16OrangutanDigital9setOutputEhh+0x78>
     8bc:	20 81       	ld	r18, Z
     8be:	98 2f       	mov	r25, r24
     8c0:	90 95       	com	r25
     8c2:	92 23       	and	r25, r18
     8c4:	90 83       	st	Z, r25
     8c6:	9c 91       	ld	r25, X
     8c8:	98 2b       	or	r25, r24
     8ca:	9c 93       	st	X, r25
     8cc:	08 95       	ret

000008ce <_ZN15OrangutanMotors5init2Ev>:
     8ce:	83 ef       	ldi	r24, 0xF3	; 243
     8d0:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     8d4:	84 bd       	out	0x24, r24	; 36
     8d6:	82 e0       	ldi	r24, 0x02	; 2
     8d8:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
     8dc:	85 bd       	out	0x25, r24	; 37
     8de:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     8e2:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     8e6:	18 bc       	out	0x28, r1	; 40
     8e8:	17 bc       	out	0x27, r1	; 39
     8ea:	60 e0       	ldi	r22, 0x00	; 0
     8ec:	86 e0       	ldi	r24, 0x06	; 6
     8ee:	0e 94 26 04 	call	0x84c	; 0x84c <_ZN16OrangutanDigital9setOutputEhh>
     8f2:	60 e0       	ldi	r22, 0x00	; 0
     8f4:	85 e0       	ldi	r24, 0x05	; 5
     8f6:	0e 94 26 04 	call	0x84c	; 0x84c <_ZN16OrangutanDigital9setOutputEhh>
     8fa:	60 e0       	ldi	r22, 0x00	; 0
     8fc:	8b e0       	ldi	r24, 0x0B	; 11
     8fe:	0e 94 26 04 	call	0x84c	; 0x84c <_ZN16OrangutanDigital9setOutputEhh>
     902:	60 e0       	ldi	r22, 0x00	; 0
     904:	83 e0       	ldi	r24, 0x03	; 3
     906:	0e 94 26 04 	call	0x84c	; 0x84c <_ZN16OrangutanDigital9setOutputEhh>
     90a:	08 95       	ret

0000090c <_ZN15OrangutanMotors4initEv>:
     90c:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <_ZZN15OrangutanMotors4initEvE11initialized>
     910:	81 11       	cpse	r24, r1
     912:	05 c0       	rjmp	.+10     	; 0x91e <_ZN15OrangutanMotors4initEv+0x12>
     914:	81 e0       	ldi	r24, 0x01	; 1
     916:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <_ZZN15OrangutanMotors4initEvE11initialized>
     91a:	0e 94 67 04 	call	0x8ce	; 0x8ce <_ZN15OrangutanMotors5init2Ev>
     91e:	08 95       	ret

00000920 <_ZN15OrangutanMotors10setM1SpeedEi>:
     920:	cf 93       	push	r28
     922:	df 93       	push	r29
     924:	ec 01       	movw	r28, r24
     926:	0e 94 86 04 	call	0x90c	; 0x90c <_ZN15OrangutanMotors4initEv>
     92a:	d7 ff       	sbrs	r29, 7
     92c:	05 c0       	rjmp	.+10     	; 0x938 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
     92e:	d1 95       	neg	r29
     930:	c1 95       	neg	r28
     932:	d1 09       	sbc	r29, r1
     934:	81 e0       	ldi	r24, 0x01	; 1
     936:	01 c0       	rjmp	.+2      	; 0x93a <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
     938:	80 e0       	ldi	r24, 0x00	; 0
     93a:	cf 3f       	cpi	r28, 0xFF	; 255
     93c:	d1 05       	cpc	r29, r1
     93e:	19 f0       	breq	.+6      	; 0x946 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     940:	14 f0       	brlt	.+4      	; 0x946 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     942:	cf ef       	ldi	r28, 0xFF	; 255
     944:	d0 e0       	ldi	r29, 0x00	; 0
     946:	88 23       	and	r24, r24
     948:	19 f0       	breq	.+6      	; 0x950 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
     94a:	18 bc       	out	0x28, r1	; 40
     94c:	c7 bd       	out	0x27, r28	; 39
     94e:	02 c0       	rjmp	.+4      	; 0x954 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
     950:	c8 bd       	out	0x28, r28	; 40
     952:	17 bc       	out	0x27, r1	; 39
     954:	df 91       	pop	r29
     956:	cf 91       	pop	r28
     958:	08 95       	ret

0000095a <_ZN15OrangutanMotors10setM2SpeedEi>:
     95a:	cf 93       	push	r28
     95c:	df 93       	push	r29
     95e:	ec 01       	movw	r28, r24
     960:	0e 94 86 04 	call	0x90c	; 0x90c <_ZN15OrangutanMotors4initEv>
     964:	d7 ff       	sbrs	r29, 7
     966:	05 c0       	rjmp	.+10     	; 0x972 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
     968:	d1 95       	neg	r29
     96a:	c1 95       	neg	r28
     96c:	d1 09       	sbc	r29, r1
     96e:	81 e0       	ldi	r24, 0x01	; 1
     970:	01 c0       	rjmp	.+2      	; 0x974 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
     972:	80 e0       	ldi	r24, 0x00	; 0
     974:	cf 3f       	cpi	r28, 0xFF	; 255
     976:	d1 05       	cpc	r29, r1
     978:	19 f0       	breq	.+6      	; 0x980 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     97a:	14 f0       	brlt	.+4      	; 0x980 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     97c:	cf ef       	ldi	r28, 0xFF	; 255
     97e:	d0 e0       	ldi	r29, 0x00	; 0
     980:	88 23       	and	r24, r24
     982:	29 f0       	breq	.+10     	; 0x98e <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
     984:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     988:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     98c:	04 c0       	rjmp	.+8      	; 0x996 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
     98e:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     992:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     996:	df 91       	pop	r29
     998:	cf 91       	pop	r28
     99a:	08 95       	ret

0000099c <_ZN15OrangutanMotors9setSpeedsEii>:
     99c:	cf 93       	push	r28
     99e:	df 93       	push	r29
     9a0:	eb 01       	movw	r28, r22
     9a2:	0e 94 90 04 	call	0x920	; 0x920 <_ZN15OrangutanMotors10setM1SpeedEi>
     9a6:	ce 01       	movw	r24, r28
     9a8:	0e 94 ad 04 	call	0x95a	; 0x95a <_ZN15OrangutanMotors10setM2SpeedEi>
     9ac:	df 91       	pop	r29
     9ae:	cf 91       	pop	r28
     9b0:	08 95       	ret

000009b2 <set_motors>:
     9b2:	0e 94 ce 04 	call	0x99c	; 0x99c <_ZN15OrangutanMotors9setSpeedsEii>
     9b6:	08 95       	ret

000009b8 <_ZN20OrangutanPushbuttons5init2Ev>:
     9b8:	84 b1       	in	r24, 0x04	; 4
     9ba:	8d 7c       	andi	r24, 0xCD	; 205
     9bc:	84 b9       	out	0x04, r24	; 4
     9be:	85 b1       	in	r24, 0x05	; 5
     9c0:	82 63       	ori	r24, 0x32	; 50
     9c2:	85 b9       	out	0x05, r24	; 5
     9c4:	85 e0       	ldi	r24, 0x05	; 5
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	6f 93       	push	r22
     9ca:	64 e0       	ldi	r22, 0x04	; 4
     9cc:	6a 95       	dec	r22
     9ce:	f1 f7       	brne	.-4      	; 0x9cc <_ZN20OrangutanPushbuttons5init2Ev+0x14>
     9d0:	6f 91       	pop	r22
     9d2:	01 97       	sbiw	r24, 0x01	; 1
     9d4:	c9 f7       	brne	.-14     	; 0x9c8 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
     9d6:	08 95       	ret

000009d8 <_ZN20OrangutanPushbuttons4initEv>:
     9d8:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <_ZZN20OrangutanPushbuttons4initEvE11initialized>
     9dc:	81 11       	cpse	r24, r1
     9de:	05 c0       	rjmp	.+10     	; 0x9ea <_ZN20OrangutanPushbuttons4initEv+0x12>
     9e0:	81 e0       	ldi	r24, 0x01	; 1
     9e2:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <_ZZN20OrangutanPushbuttons4initEvE11initialized>
     9e6:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <_ZN20OrangutanPushbuttons5init2Ev>
     9ea:	08 95       	ret

000009ec <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
     9ec:	cf 93       	push	r28
     9ee:	c8 2f       	mov	r28, r24
     9f0:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <_ZN20OrangutanPushbuttons4initEv>
     9f4:	83 b1       	in	r24, 0x03	; 3
     9f6:	8c 23       	and	r24, r28
     9f8:	e9 f3       	breq	.-6      	; 0x9f4 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
     9fa:	8a e0       	ldi	r24, 0x0A	; 10
     9fc:	90 e0       	ldi	r25, 0x00	; 0
     9fe:	0e 94 67 05 	call	0xace	; 0xace <delay_ms>
     a02:	83 b1       	in	r24, 0x03	; 3
     a04:	8c 23       	and	r24, r28
     a06:	b1 f3       	breq	.-20     	; 0x9f4 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
     a08:	83 b1       	in	r24, 0x03	; 3
     a0a:	8c 23       	and	r24, r28
     a0c:	cf 91       	pop	r28
     a0e:	08 95       	ret

00000a10 <wait_for_button_release>:
     a10:	0e 94 f6 04 	call	0x9ec	; 0x9ec <_ZN20OrangutanPushbuttons14waitForReleaseEh>
     a14:	08 95       	ret

00000a16 <_ZN20OrangutanPushbuttons9isPressedEh>:
     a16:	a1 e0       	ldi	r26, 0x01	; 1
     a18:	b0 e0       	ldi	r27, 0x00	; 0
     a1a:	e1 e1       	ldi	r30, 0x11	; 17
     a1c:	f5 e0       	ldi	r31, 0x05	; 5
     a1e:	0c 94 7c 0b 	jmp	0x16f8	; 0x16f8 <__prologue_saves__+0x20>
     a22:	89 83       	std	Y+1, r24	; 0x01
     a24:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <_ZN20OrangutanPushbuttons4initEv>
     a28:	93 b1       	in	r25, 0x03	; 3
     a2a:	90 95       	com	r25
     a2c:	89 81       	ldd	r24, Y+1	; 0x01
     a2e:	89 23       	and	r24, r25
     a30:	21 96       	adiw	r28, 0x01	; 1
     a32:	e2 e0       	ldi	r30, 0x02	; 2
     a34:	0c 94 98 0b 	jmp	0x1730	; 0x1730 <__epilogue_restores__+0x20>

00000a38 <button_is_pressed>:
     a38:	0e 94 0b 05 	call	0xa16	; 0xa16 <_ZN20OrangutanPushbuttons9isPressedEh>
     a3c:	08 95       	ret

00000a3e <__vector_9>:
     a3e:	2f 92       	push	r2
     a40:	8f 93       	push	r24
     a42:	9f 93       	push	r25
     a44:	2f b6       	in	r2, 0x3f	; 63
     a46:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <tickCount+0x1>
     a4a:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <tickCount+0x2>
     a4e:	01 96       	adiw	r24, 0x01	; 1
     a50:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <tickCount+0x1>
     a54:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <tickCount+0x2>
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <tickCount+0x3>
     a5e:	89 1f       	adc	r24, r25
     a60:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <tickCount+0x3>
     a64:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <us_over_10+0x1>
     a68:	9c 5f       	subi	r25, 0xFC	; 252
     a6a:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <us_over_10+0x1>
     a6e:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <us_over_10>
     a72:	80 51       	subi	r24, 0x10	; 16
     a74:	97 42       	sbci	r25, 0x27	; 39
     a76:	c0 f0       	brcs	.+48     	; 0xaa8 <end>
     a78:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <us_over_10+0x1>
     a7c:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <us_over_10>
     a80:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <msCounter>
     a84:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <msCounter+0x1>
     a88:	01 96       	adiw	r24, 0x01	; 1
     a8a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <msCounter>
     a8e:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <msCounter+0x1>
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <msCounter+0x2>
     a98:	89 1f       	adc	r24, r25
     a9a:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <msCounter+0x2>
     a9e:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <msCounter+0x3>
     aa2:	89 1f       	adc	r24, r25
     aa4:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <msCounter+0x3>

00000aa8 <end>:
     aa8:	2f be       	out	0x3f, r2	; 63
     aaa:	9f 91       	pop	r25
     aac:	8f 91       	pop	r24
     aae:	2f 90       	pop	r2
     ab0:	18 95       	reti

00000ab2 <_ZN13OrangutanTime17delayMillisecondsEj>:
     ab2:	28 ee       	ldi	r18, 0xE8	; 232
     ab4:	33 e0       	ldi	r19, 0x03	; 3
     ab6:	01 97       	sbiw	r24, 0x01	; 1
     ab8:	48 f0       	brcs	.+18     	; 0xacc <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
     aba:	f9 01       	movw	r30, r18
     abc:	6f 93       	push	r22
     abe:	64 e0       	ldi	r22, 0x04	; 4
     ac0:	6a 95       	dec	r22
     ac2:	f1 f7       	brne	.-4      	; 0xac0 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
     ac4:	6f 91       	pop	r22
     ac6:	31 97       	sbiw	r30, 0x01	; 1
     ac8:	c9 f7       	brne	.-14     	; 0xabc <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
     aca:	f5 cf       	rjmp	.-22     	; 0xab6 <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
     acc:	08 95       	ret

00000ace <delay_ms>:
     ace:	0e 94 59 05 	call	0xab2	; 0xab2 <_ZN13OrangutanTime17delayMillisecondsEj>
     ad2:	08 95       	ret

00000ad4 <_ZN13OrangutanTime5init2Ev>:
     ad4:	e0 e7       	ldi	r30, 0x70	; 112
     ad6:	f0 e0       	ldi	r31, 0x00	; 0
     ad8:	80 81       	ld	r24, Z
     ada:	8e 7f       	andi	r24, 0xFE	; 254
     adc:	80 83       	st	Z, r24
     ade:	a0 eb       	ldi	r26, 0xB0	; 176
     ae0:	b0 e0       	ldi	r27, 0x00	; 0
     ae2:	8c 91       	ld	r24, X
     ae4:	83 60       	ori	r24, 0x03	; 3
     ae6:	8c 93       	st	X, r24
     ae8:	a1 eb       	ldi	r26, 0xB1	; 177
     aea:	b0 e0       	ldi	r27, 0x00	; 0
     aec:	8c 91       	ld	r24, X
     aee:	80 7f       	andi	r24, 0xF0	; 240
     af0:	8c 93       	st	X, r24
     af2:	8c 91       	ld	r24, X
     af4:	82 60       	ori	r24, 0x02	; 2
     af6:	8c 93       	st	X, r24
     af8:	b8 9a       	sbi	0x17, 0	; 23
     afa:	80 81       	ld	r24, Z
     afc:	81 60       	ori	r24, 0x01	; 1
     afe:	80 83       	st	Z, r24
     b00:	78 94       	sei
     b02:	08 95       	ret

00000b04 <_ZN13OrangutanTime4initEv>:
     b04:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <_ZZN13OrangutanTime4initEvE11initialized>
     b08:	81 11       	cpse	r24, r1
     b0a:	05 c0       	rjmp	.+10     	; 0xb16 <_ZN13OrangutanTime4initEv+0x12>
     b0c:	81 e0       	ldi	r24, 0x01	; 1
     b0e:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <_ZZN13OrangutanTime4initEvE11initialized>
     b12:	0e 94 6a 05 	call	0xad4	; 0xad4 <_ZN13OrangutanTime5init2Ev>
     b16:	08 95       	ret

00000b18 <_ZN13OrangutanTime5resetEv>:
     b18:	0e 94 82 05 	call	0xb04	; 0xb04 <_ZN13OrangutanTime4initEv>
     b1c:	e0 e7       	ldi	r30, 0x70	; 112
     b1e:	f0 e0       	ldi	r31, 0x00	; 0
     b20:	80 81       	ld	r24, Z
     b22:	8e 7f       	andi	r24, 0xFE	; 254
     b24:	80 83       	st	Z, r24
     b26:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <msCounter>
     b2a:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <msCounter+0x1>
     b2e:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <msCounter+0x2>
     b32:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <msCounter+0x3>
     b36:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <us_over_10+0x1>
     b3a:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <us_over_10>
     b3e:	80 81       	ld	r24, Z
     b40:	81 60       	ori	r24, 0x01	; 1
     b42:	80 83       	st	Z, r24
     b44:	08 95       	ret

00000b46 <calibrate_line_sensors>:
     b46:	68 2f       	mov	r22, r24
     b48:	80 e2       	ldi	r24, 0x20	; 32
     b4a:	91 e0       	ldi	r25, 0x01	; 1
     b4c:	0e 94 8b 09 	call	0x1316	; 0x1316 <_ZN16PololuQTRSensors9calibrateEh>
     b50:	08 95       	ret

00000b52 <read_line>:
     b52:	46 2f       	mov	r20, r22
     b54:	20 e0       	ldi	r18, 0x00	; 0
     b56:	bc 01       	movw	r22, r24
     b58:	80 e2       	ldi	r24, 0x20	; 32
     b5a:	91 e0       	ldi	r25, 0x01	; 1
     b5c:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <_ZN16PololuQTRSensors8readLineEPjhh>
     b60:	08 95       	ret

00000b62 <_ZN9Pololu3pi4initEjh>:
     b62:	0f 93       	push	r16
     b64:	cf 93       	push	r28
     b66:	df 93       	push	r29
     b68:	00 d0       	rcall	.+0      	; 0xb6a <_ZN9Pololu3pi4initEjh+0x8>
     b6a:	00 d0       	rcall	.+0      	; 0xb6c <_ZN9Pololu3pi4initEjh+0xa>
     b6c:	1f 92       	push	r1
     b6e:	cd b7       	in	r28, 0x3d	; 61
     b70:	de b7       	in	r29, 0x3e	; 62
     b72:	9c 01       	movw	r18, r24
     b74:	85 e0       	ldi	r24, 0x05	; 5
     b76:	e8 e0       	ldi	r30, 0x08	; 8
     b78:	f1 e0       	ldi	r31, 0x01	; 1
     b7a:	de 01       	movw	r26, r28
     b7c:	11 96       	adiw	r26, 0x01	; 1
     b7e:	01 90       	ld	r0, Z+
     b80:	0d 92       	st	X+, r0
     b82:	8a 95       	dec	r24
     b84:	e1 f7       	brne	.-8      	; 0xb7e <_ZN9Pololu3pi4initEjh+0x1c>
     b86:	66 23       	and	r22, r22
     b88:	11 f0       	breq	.+4      	; 0xb8e <_ZN9Pololu3pi4initEjh+0x2c>
     b8a:	0f ef       	ldi	r16, 0xFF	; 255
     b8c:	01 c0       	rjmp	.+2      	; 0xb90 <_ZN9Pololu3pi4initEjh+0x2e>
     b8e:	03 e1       	ldi	r16, 0x13	; 19
     b90:	45 e0       	ldi	r20, 0x05	; 5
     b92:	be 01       	movw	r22, r28
     b94:	6f 5f       	subi	r22, 0xFF	; 255
     b96:	7f 4f       	sbci	r23, 0xFF	; 255
     b98:	80 e2       	ldi	r24, 0x20	; 32
     b9a:	91 e0       	ldi	r25, 0x01	; 1
     b9c:	0e 94 83 06 	call	0xd06	; 0xd06 <_ZN18PololuQTRSensorsRC4initEPhhjh>
     ba0:	80 e2       	ldi	r24, 0x20	; 32
     ba2:	91 e0       	ldi	r25, 0x01	; 1
     ba4:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <_ZN16PololuQTRSensors11emittersOffEv>
     ba8:	0e 94 8c 05 	call	0xb18	; 0xb18 <_ZN13OrangutanTime5resetEv>
     bac:	0f 90       	pop	r0
     bae:	0f 90       	pop	r0
     bb0:	0f 90       	pop	r0
     bb2:	0f 90       	pop	r0
     bb4:	0f 90       	pop	r0
     bb6:	df 91       	pop	r29
     bb8:	cf 91       	pop	r28
     bba:	0f 91       	pop	r16
     bbc:	08 95       	ret

00000bbe <pololu_3pi_init>:
     bbe:	60 e0       	ldi	r22, 0x00	; 0
     bc0:	0e 94 b1 05 	call	0xb62	; 0xb62 <_ZN9Pololu3pi4initEjh>
     bc4:	08 95       	ret

00000bc6 <_GLOBAL__sub_D_pololu_3pi_init>:
     bc6:	80 e2       	ldi	r24, 0x20	; 32
     bc8:	91 e0       	ldi	r25, 0x01	; 1
     bca:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <_ZN16PololuQTRSensorsD1Ev>
     bce:	08 95       	ret

00000bd0 <delay_us>:
     bd0:	6f 93       	push	r22
     bd2:	64 e0       	ldi	r22, 0x04	; 4
     bd4:	6a 95       	dec	r22
     bd6:	f1 f7       	brne	.-4      	; 0xbd4 <delay_us+0x4>
     bd8:	6f 91       	pop	r22
     bda:	01 97       	sbiw	r24, 0x01	; 1
     bdc:	c9 f7       	brne	.-14     	; 0xbd0 <delay_us>
     bde:	08 95       	ret

00000be0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
     be0:	fc 01       	movw	r30, r24
     be2:	11 82       	std	Z+1, r1	; 0x01
     be4:	10 82       	st	Z, r1
     be6:	13 82       	std	Z+3, r1	; 0x03
     be8:	12 82       	std	Z+2, r1	; 0x02
     bea:	15 82       	std	Z+5, r1	; 0x05
     bec:	14 82       	std	Z+4, r1	; 0x04
     bee:	16 82       	std	Z+6, r1	; 0x06
     bf0:	68 30       	cpi	r22, 0x08	; 8
     bf2:	68 f4       	brcc	.+26     	; 0xc0e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
     bf4:	89 e2       	ldi	r24, 0x29	; 41
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	91 83       	std	Z+1, r25	; 0x01
     bfa:	80 83       	st	Z, r24
     bfc:	8b e2       	ldi	r24, 0x2B	; 43
     bfe:	90 e0       	ldi	r25, 0x00	; 0
     c00:	93 83       	std	Z+3, r25	; 0x03
     c02:	82 83       	std	Z+2, r24	; 0x02
     c04:	8a e2       	ldi	r24, 0x2A	; 42
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	95 83       	std	Z+5, r25	; 0x05
     c0a:	84 83       	std	Z+4, r24	; 0x04
     c0c:	1f c0       	rjmp	.+62     	; 0xc4c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
     c0e:	6e 30       	cpi	r22, 0x0E	; 14
     c10:	70 f4       	brcc	.+28     	; 0xc2e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
     c12:	83 e2       	ldi	r24, 0x23	; 35
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	91 83       	std	Z+1, r25	; 0x01
     c18:	80 83       	st	Z, r24
     c1a:	85 e2       	ldi	r24, 0x25	; 37
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	93 83       	std	Z+3, r25	; 0x03
     c20:	82 83       	std	Z+2, r24	; 0x02
     c22:	84 e2       	ldi	r24, 0x24	; 36
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	95 83       	std	Z+5, r25	; 0x05
     c28:	84 83       	std	Z+4, r24	; 0x04
     c2a:	68 50       	subi	r22, 0x08	; 8
     c2c:	0f c0       	rjmp	.+30     	; 0xc4c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
     c2e:	65 31       	cpi	r22, 0x15	; 21
     c30:	98 f4       	brcc	.+38     	; 0xc58 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
     c32:	86 e2       	ldi	r24, 0x26	; 38
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	91 83       	std	Z+1, r25	; 0x01
     c38:	80 83       	st	Z, r24
     c3a:	88 e2       	ldi	r24, 0x28	; 40
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	93 83       	std	Z+3, r25	; 0x03
     c40:	82 83       	std	Z+2, r24	; 0x02
     c42:	87 e2       	ldi	r24, 0x27	; 39
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	95 83       	std	Z+5, r25	; 0x05
     c48:	84 83       	std	Z+4, r24	; 0x04
     c4a:	6e 50       	subi	r22, 0x0E	; 14
     c4c:	81 e0       	ldi	r24, 0x01	; 1
     c4e:	01 c0       	rjmp	.+2      	; 0xc52 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
     c50:	88 0f       	add	r24, r24
     c52:	6a 95       	dec	r22
     c54:	ea f7       	brpl	.-6      	; 0xc50 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
     c56:	86 83       	std	Z+6, r24	; 0x06
     c58:	08 95       	ret

00000c5a <_ZN16PololuQTRSensors4initEhhh>:
     c5a:	a7 e0       	ldi	r26, 0x07	; 7
     c5c:	b0 e0       	ldi	r27, 0x00	; 0
     c5e:	e3 e3       	ldi	r30, 0x33	; 51
     c60:	f6 e0       	ldi	r31, 0x06	; 6
     c62:	0c 94 7a 0b 	jmp	0x16f4	; 0x16f4 <__prologue_saves__+0x1c>
     c66:	8c 01       	movw	r16, r24
     c68:	fc 01       	movw	r30, r24
     c6a:	11 82       	std	Z+1, r1	; 0x01
     c6c:	10 82       	st	Z, r1
     c6e:	13 82       	std	Z+3, r1	; 0x03
     c70:	12 82       	std	Z+2, r1	; 0x02
     c72:	15 82       	std	Z+5, r1	; 0x05
     c74:	14 82       	std	Z+4, r1	; 0x04
     c76:	17 82       	std	Z+7, r1	; 0x07
     c78:	16 82       	std	Z+6, r1	; 0x06
     c7a:	61 31       	cpi	r22, 0x11	; 17
     c7c:	18 f0       	brcs	.+6      	; 0xc84 <_ZN16PololuQTRSensors4initEhhh+0x2a>
     c7e:	80 e1       	ldi	r24, 0x10	; 16
     c80:	80 87       	std	Z+8, r24	; 0x08
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <_ZN16PololuQTRSensors4initEhhh+0x2e>
     c84:	fc 01       	movw	r30, r24
     c86:	60 87       	std	Z+8, r22	; 0x08
     c88:	f8 01       	movw	r30, r16
     c8a:	20 8b       	std	Z+16, r18	; 0x10
     c8c:	64 2f       	mov	r22, r20
     c8e:	ce 01       	movw	r24, r28
     c90:	01 96       	adiw	r24, 0x01	; 1
     c92:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
     c96:	8f 81       	ldd	r24, Y+7	; 0x07
     c98:	f8 01       	movw	r30, r16
     c9a:	81 87       	std	Z+9, r24	; 0x09
     c9c:	8b 81       	ldd	r24, Y+3	; 0x03
     c9e:	9c 81       	ldd	r25, Y+4	; 0x04
     ca0:	93 87       	std	Z+11, r25	; 0x0b
     ca2:	82 87       	std	Z+10, r24	; 0x0a
     ca4:	8d 81       	ldd	r24, Y+5	; 0x05
     ca6:	9e 81       	ldd	r25, Y+6	; 0x06
     ca8:	95 87       	std	Z+13, r25	; 0x0d
     caa:	84 87       	std	Z+12, r24	; 0x0c
     cac:	27 96       	adiw	r28, 0x07	; 7
     cae:	e4 e0       	ldi	r30, 0x04	; 4
     cb0:	0c 94 96 0b 	jmp	0x172c	; 0x172c <__epilogue_restores__+0x1c>

00000cb4 <_ZN16PololuQTRSensors11emittersOffEv>:
     cb4:	fc 01       	movw	r30, r24
     cb6:	a4 85       	ldd	r26, Z+12	; 0x0c
     cb8:	b5 85       	ldd	r27, Z+13	; 0x0d
     cba:	10 97       	sbiw	r26, 0x00	; 0
     cbc:	79 f0       	breq	.+30     	; 0xcdc <_ZN16PololuQTRSensors11emittersOffEv+0x28>
     cbe:	8c 91       	ld	r24, X
     cc0:	91 85       	ldd	r25, Z+9	; 0x09
     cc2:	89 2b       	or	r24, r25
     cc4:	8c 93       	st	X, r24
     cc6:	a2 85       	ldd	r26, Z+10	; 0x0a
     cc8:	b3 85       	ldd	r27, Z+11	; 0x0b
     cca:	9c 91       	ld	r25, X
     ccc:	81 85       	ldd	r24, Z+9	; 0x09
     cce:	80 95       	com	r24
     cd0:	89 23       	and	r24, r25
     cd2:	8c 93       	st	X, r24
     cd4:	88 ec       	ldi	r24, 0xC8	; 200
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <delay_us>
     cdc:	08 95       	ret

00000cde <_ZN16PololuQTRSensors10emittersOnEv>:
     cde:	fc 01       	movw	r30, r24
     ce0:	a4 85       	ldd	r26, Z+12	; 0x0c
     ce2:	b5 85       	ldd	r27, Z+13	; 0x0d
     ce4:	10 97       	sbiw	r26, 0x00	; 0
     ce6:	71 f0       	breq	.+28     	; 0xd04 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
     ce8:	8c 91       	ld	r24, X
     cea:	91 85       	ldd	r25, Z+9	; 0x09
     cec:	89 2b       	or	r24, r25
     cee:	8c 93       	st	X, r24
     cf0:	a2 85       	ldd	r26, Z+10	; 0x0a
     cf2:	b3 85       	ldd	r27, Z+11	; 0x0b
     cf4:	8c 91       	ld	r24, X
     cf6:	91 85       	ldd	r25, Z+9	; 0x09
     cf8:	89 2b       	or	r24, r25
     cfa:	8c 93       	st	X, r24
     cfc:	88 ec       	ldi	r24, 0xC8	; 200
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <delay_us>
     d04:	08 95       	ret

00000d06 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
     d06:	a7 e0       	ldi	r26, 0x07	; 7
     d08:	b0 e0       	ldi	r27, 0x00	; 0
     d0a:	e9 e8       	ldi	r30, 0x89	; 137
     d0c:	f6 e0       	ldi	r31, 0x06	; 6
     d0e:	0c 94 6f 0b 	jmp	0x16de	; 0x16de <__prologue_saves__+0x6>
     d12:	7c 01       	movw	r14, r24
     d14:	4b 01       	movw	r8, r22
     d16:	64 2f       	mov	r22, r20
     d18:	39 01       	movw	r6, r18
     d1a:	40 2f       	mov	r20, r16
     d1c:	20 e0       	ldi	r18, 0x00	; 0
     d1e:	0e 94 2d 06 	call	0xc5a	; 0xc5a <_ZN16PololuQTRSensors4initEhhh>
     d22:	87 01       	movw	r16, r14
     d24:	0f 5b       	subi	r16, 0xBF	; 191
     d26:	1f 4f       	sbci	r17, 0xFF	; 255
     d28:	f8 01       	movw	r30, r16
     d2a:	10 82       	st	Z, r1
     d2c:	67 01       	movw	r12, r14
     d2e:	f2 e4       	ldi	r31, 0x42	; 66
     d30:	cf 0e       	add	r12, r31
     d32:	d1 1c       	adc	r13, r1
     d34:	f6 01       	movw	r30, r12
     d36:	10 82       	st	Z, r1
     d38:	57 01       	movw	r10, r14
     d3a:	f3 e4       	ldi	r31, 0x43	; 67
     d3c:	af 0e       	add	r10, r31
     d3e:	b1 1c       	adc	r11, r1
     d40:	f5 01       	movw	r30, r10
     d42:	10 82       	st	Z, r1
     d44:	f7 01       	movw	r30, r14
     d46:	77 86       	std	Z+15, r7	; 0x0f
     d48:	66 86       	std	Z+14, r6	; 0x0e
     d4a:	51 2c       	mov	r5, r1
     d4c:	f7 01       	movw	r30, r14
     d4e:	80 85       	ldd	r24, Z+8	; 0x08
     d50:	58 16       	cp	r5, r24
     d52:	50 f5       	brcc	.+84     	; 0xda8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
     d54:	65 2c       	mov	r6, r5
     d56:	71 2c       	mov	r7, r1
     d58:	f4 01       	movw	r30, r8
     d5a:	e6 0d       	add	r30, r6
     d5c:	f7 1d       	adc	r31, r7
     d5e:	60 81       	ld	r22, Z
     d60:	ce 01       	movw	r24, r28
     d62:	01 96       	adiw	r24, 0x01	; 1
     d64:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
     d68:	2f 81       	ldd	r18, Y+7	; 0x07
     d6a:	f7 01       	movw	r30, r14
     d6c:	e6 0d       	add	r30, r6
     d6e:	f7 1d       	adc	r31, r7
     d70:	21 8b       	std	Z+17, r18	; 0x11
     d72:	89 81       	ldd	r24, Y+1	; 0x01
     d74:	9a 81       	ldd	r25, Y+2	; 0x02
     d76:	f3 01       	movw	r30, r6
     d78:	ee 0f       	add	r30, r30
     d7a:	ff 1f       	adc	r31, r31
     d7c:	ee 0d       	add	r30, r14
     d7e:	ff 1d       	adc	r31, r15
     d80:	92 a3       	std	Z+34, r25	; 0x22
     d82:	81 a3       	std	Z+33, r24	; 0x21
     d84:	83 32       	cpi	r24, 0x23	; 35
     d86:	91 05       	cpc	r25, r1
     d88:	11 f4       	brne	.+4      	; 0xd8e <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
     d8a:	f8 01       	movw	r30, r16
     d8c:	08 c0       	rjmp	.+16     	; 0xd9e <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
     d8e:	86 32       	cpi	r24, 0x26	; 38
     d90:	91 05       	cpc	r25, r1
     d92:	11 f4       	brne	.+4      	; 0xd98 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
     d94:	f6 01       	movw	r30, r12
     d96:	03 c0       	rjmp	.+6      	; 0xd9e <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
     d98:	89 97       	sbiw	r24, 0x29	; 41
     d9a:	21 f4       	brne	.+8      	; 0xda4 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
     d9c:	f5 01       	movw	r30, r10
     d9e:	80 81       	ld	r24, Z
     da0:	82 2b       	or	r24, r18
     da2:	80 83       	st	Z, r24
     da4:	53 94       	inc	r5
     da6:	d2 cf       	rjmp	.-92     	; 0xd4c <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
     da8:	27 96       	adiw	r28, 0x07	; 7
     daa:	ef e0       	ldi	r30, 0x0F	; 15
     dac:	0c 94 8b 0b 	jmp	0x1716	; 0x1716 <__epilogue_restores__+0x6>

00000db0 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
     db0:	a0 e0       	ldi	r26, 0x00	; 0
     db2:	b0 e0       	ldi	r27, 0x00	; 0
     db4:	ee ed       	ldi	r30, 0xDE	; 222
     db6:	f6 e0       	ldi	r31, 0x06	; 6
     db8:	0c 94 71 0b 	jmp	0x16e2	; 0x16e2 <__prologue_saves__+0xa>
     dbc:	ec 01       	movw	r28, r24
     dbe:	5b 01       	movw	r10, r22
     dc0:	6c 01       	movw	r12, r24
     dc2:	81 e4       	ldi	r24, 0x41	; 65
     dc4:	c8 0e       	add	r12, r24
     dc6:	d1 1c       	adc	r13, r1
     dc8:	f6 01       	movw	r30, r12
     dca:	80 80       	ld	r8, Z
     dcc:	7e 01       	movw	r14, r28
     dce:	f2 e4       	ldi	r31, 0x42	; 66
     dd0:	ef 0e       	add	r14, r31
     dd2:	f1 1c       	adc	r15, r1
     dd4:	f7 01       	movw	r30, r14
     dd6:	70 80       	ld	r7, Z
     dd8:	8e 01       	movw	r16, r28
     dda:	0d 5b       	subi	r16, 0xBD	; 189
     ddc:	1f 4f       	sbci	r17, 0xFF	; 255
     dde:	f8 01       	movw	r30, r16
     de0:	90 80       	ld	r9, Z
     de2:	80 e0       	ldi	r24, 0x00	; 0
     de4:	98 85       	ldd	r25, Y+8	; 0x08
     de6:	89 17       	cp	r24, r25
     de8:	48 f4       	brcc	.+18     	; 0xdfc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
     dea:	f5 01       	movw	r30, r10
     dec:	e8 0f       	add	r30, r24
     dee:	f1 1d       	adc	r31, r1
     df0:	e8 0f       	add	r30, r24
     df2:	f1 1d       	adc	r31, r1
     df4:	11 82       	std	Z+1, r1	; 0x01
     df6:	10 82       	st	Z, r1
     df8:	8f 5f       	subi	r24, 0xFF	; 255
     dfa:	f4 cf       	rjmp	.-24     	; 0xde4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
     dfc:	84 b1       	in	r24, 0x04	; 4
     dfe:	f6 01       	movw	r30, r12
     e00:	90 81       	ld	r25, Z
     e02:	89 2b       	or	r24, r25
     e04:	84 b9       	out	0x04, r24	; 4
     e06:	87 b1       	in	r24, 0x07	; 7
     e08:	f7 01       	movw	r30, r14
     e0a:	90 81       	ld	r25, Z
     e0c:	89 2b       	or	r24, r25
     e0e:	87 b9       	out	0x07, r24	; 7
     e10:	8a b1       	in	r24, 0x0a	; 10
     e12:	f8 01       	movw	r30, r16
     e14:	90 81       	ld	r25, Z
     e16:	89 2b       	or	r24, r25
     e18:	8a b9       	out	0x0a, r24	; 10
     e1a:	85 b1       	in	r24, 0x05	; 5
     e1c:	f6 01       	movw	r30, r12
     e1e:	90 81       	ld	r25, Z
     e20:	89 2b       	or	r24, r25
     e22:	85 b9       	out	0x05, r24	; 5
     e24:	88 b1       	in	r24, 0x08	; 8
     e26:	f7 01       	movw	r30, r14
     e28:	90 81       	ld	r25, Z
     e2a:	89 2b       	or	r24, r25
     e2c:	88 b9       	out	0x08, r24	; 8
     e2e:	8b b1       	in	r24, 0x0b	; 11
     e30:	f8 01       	movw	r30, r16
     e32:	90 81       	ld	r25, Z
     e34:	89 2b       	or	r24, r25
     e36:	8b b9       	out	0x0b, r24	; 11
     e38:	8a e0       	ldi	r24, 0x0A	; 10
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <delay_us>
     e40:	94 b1       	in	r25, 0x04	; 4
     e42:	f6 01       	movw	r30, r12
     e44:	80 81       	ld	r24, Z
     e46:	80 95       	com	r24
     e48:	89 23       	and	r24, r25
     e4a:	84 b9       	out	0x04, r24	; 4
     e4c:	97 b1       	in	r25, 0x07	; 7
     e4e:	f7 01       	movw	r30, r14
     e50:	80 81       	ld	r24, Z
     e52:	80 95       	com	r24
     e54:	89 23       	and	r24, r25
     e56:	87 b9       	out	0x07, r24	; 7
     e58:	9a b1       	in	r25, 0x0a	; 10
     e5a:	f8 01       	movw	r30, r16
     e5c:	80 81       	ld	r24, Z
     e5e:	80 95       	com	r24
     e60:	89 23       	and	r24, r25
     e62:	8a b9       	out	0x0a, r24	; 10
     e64:	95 b1       	in	r25, 0x05	; 5
     e66:	f6 01       	movw	r30, r12
     e68:	80 81       	ld	r24, Z
     e6a:	80 95       	com	r24
     e6c:	89 23       	and	r24, r25
     e6e:	85 b9       	out	0x05, r24	; 5
     e70:	98 b1       	in	r25, 0x08	; 8
     e72:	f7 01       	movw	r30, r14
     e74:	80 81       	ld	r24, Z
     e76:	80 95       	com	r24
     e78:	89 23       	and	r24, r25
     e7a:	88 b9       	out	0x08, r24	; 8
     e7c:	9b b1       	in	r25, 0x0b	; 11
     e7e:	f8 01       	movw	r30, r16
     e80:	80 81       	ld	r24, Z
     e82:	80 95       	com	r24
     e84:	89 23       	and	r24, r25
     e86:	8b b9       	out	0x0b, r24	; 11
     e88:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     e8c:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
     e90:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     e94:	83 60       	ori	r24, 0x03	; 3
     e96:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     e9a:	82 e0       	ldi	r24, 0x02	; 2
     e9c:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
     ea0:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
     ea4:	80 e0       	ldi	r24, 0x00	; 0
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	2e 85       	ldd	r18, Y+14	; 0x0e
     eaa:	3f 85       	ldd	r19, Y+15	; 0x0f
     eac:	82 17       	cp	r24, r18
     eae:	93 07       	cpc	r25, r19
     eb0:	20 f5       	brcc	.+72     	; 0xefa <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
     eb2:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
     eb6:	2c 2d       	mov	r18, r12
     eb8:	24 1b       	sub	r18, r20
     eba:	82 0f       	add	r24, r18
     ebc:	91 1d       	adc	r25, r1
     ebe:	03 b1       	in	r16, 0x03	; 3
     ec0:	08 11       	cpse	r16, r8
     ec2:	32 c0       	rjmp	.+100    	; 0xf28 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
     ec4:	f6 b0       	in	r15, 0x06	; 6
     ec6:	f7 10       	cpse	r15, r7
     ec8:	2f c0       	rjmp	.+94     	; 0xf28 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
     eca:	29 b1       	in	r18, 0x09	; 9
     ecc:	29 11       	cpse	r18, r9
     ece:	2c c0       	rjmp	.+88     	; 0xf28 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
     ed0:	10 c0       	rjmp	.+32     	; 0xef2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
     ed2:	21 2f       	mov	r18, r17
     ed4:	30 e0       	ldi	r19, 0x00	; 0
     ed6:	a9 01       	movw	r20, r18
     ed8:	44 0f       	add	r20, r20
     eda:	55 1f       	adc	r21, r21
     edc:	f5 01       	movw	r30, r10
     ede:	e4 0f       	add	r30, r20
     ee0:	f5 1f       	adc	r31, r21
     ee2:	60 81       	ld	r22, Z
     ee4:	71 81       	ldd	r23, Z+1	; 0x01
     ee6:	67 2b       	or	r22, r23
     ee8:	21 f1       	breq	.+72     	; 0xf32 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
     eea:	1f 5f       	subi	r17, 0xFF	; 255
     eec:	28 85       	ldd	r18, Y+8	; 0x08
     eee:	12 17       	cp	r17, r18
     ef0:	80 f3       	brcs	.-32     	; 0xed2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
     ef2:	7f 2c       	mov	r7, r15
     ef4:	80 2e       	mov	r8, r16
     ef6:	4c 2d       	mov	r20, r12
     ef8:	d7 cf       	rjmp	.-82     	; 0xea8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
     efa:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     efe:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
     f02:	20 e0       	ldi	r18, 0x00	; 0
     f04:	88 85       	ldd	r24, Y+8	; 0x08
     f06:	28 17       	cp	r18, r24
     f08:	30 f5       	brcc	.+76     	; 0xf56 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
     f0a:	f5 01       	movw	r30, r10
     f0c:	e2 0f       	add	r30, r18
     f0e:	f1 1d       	adc	r31, r1
     f10:	e2 0f       	add	r30, r18
     f12:	f1 1d       	adc	r31, r1
     f14:	80 81       	ld	r24, Z
     f16:	91 81       	ldd	r25, Z+1	; 0x01
     f18:	89 2b       	or	r24, r25
     f1a:	21 f4       	brne	.+8      	; 0xf24 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
     f1c:	8e 85       	ldd	r24, Y+14	; 0x0e
     f1e:	9f 85       	ldd	r25, Y+15	; 0x0f
     f20:	91 83       	std	Z+1, r25	; 0x01
     f22:	80 83       	st	Z, r24
     f24:	2f 5f       	subi	r18, 0xFF	; 255
     f26:	ee cf       	rjmp	.-36     	; 0xf04 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
     f28:	03 b1       	in	r16, 0x03	; 3
     f2a:	f6 b0       	in	r15, 0x06	; 6
     f2c:	99 b0       	in	r9, 0x09	; 9
     f2e:	10 e0       	ldi	r17, 0x00	; 0
     f30:	dd cf       	rjmp	.-70     	; 0xeec <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
     f32:	de 01       	movw	r26, r28
     f34:	a4 0f       	add	r26, r20
     f36:	b5 1f       	adc	r27, r21
     f38:	91 96       	adiw	r26, 0x21	; 33
     f3a:	0d 90       	ld	r0, X+
     f3c:	bc 91       	ld	r27, X
     f3e:	a0 2d       	mov	r26, r0
     f40:	4c 91       	ld	r20, X
     f42:	de 01       	movw	r26, r28
     f44:	a2 0f       	add	r26, r18
     f46:	b3 1f       	adc	r27, r19
     f48:	51 96       	adiw	r26, 0x11	; 17
     f4a:	2c 91       	ld	r18, X
     f4c:	42 23       	and	r20, r18
     f4e:	69 f6       	brne	.-102    	; 0xeea <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
     f50:	91 83       	std	Z+1, r25	; 0x01
     f52:	80 83       	st	Z, r24
     f54:	ca cf       	rjmp	.-108    	; 0xeea <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
     f56:	cd b7       	in	r28, 0x3d	; 61
     f58:	de b7       	in	r29, 0x3e	; 62
     f5a:	ed e0       	ldi	r30, 0x0D	; 13
     f5c:	0c 94 8d 0b 	jmp	0x171a	; 0x171a <__epilogue_restores__+0xa>

00000f60 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
     f60:	ef 92       	push	r14
     f62:	ff 92       	push	r15
     f64:	0f 93       	push	r16
     f66:	1f 93       	push	r17
     f68:	cf 93       	push	r28
     f6a:	df 93       	push	r29
     f6c:	fc 01       	movw	r30, r24
     f6e:	9b 01       	movw	r18, r22
     f70:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     f74:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     f78:	47 b1       	in	r20, 0x07	; 7
     f7a:	18 b1       	in	r17, 0x08	; 8
     f7c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     f80:	86 fd       	sbrc	r24, 6
     f82:	fc cf       	rjmp	.-8      	; 0xf7c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
     f84:	80 e0       	ldi	r24, 0x00	; 0
     f86:	90 85       	ldd	r25, Z+8	; 0x08
     f88:	89 17       	cp	r24, r25
     f8a:	48 f4       	brcc	.+18     	; 0xf9e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
     f8c:	d9 01       	movw	r26, r18
     f8e:	a8 0f       	add	r26, r24
     f90:	b1 1d       	adc	r27, r1
     f92:	a8 0f       	add	r26, r24
     f94:	b1 1d       	adc	r27, r1
     f96:	1d 92       	st	X+, r1
     f98:	1c 92       	st	X, r1
     f9a:	8f 5f       	subi	r24, 0xFF	; 255
     f9c:	f4 cf       	rjmp	.-24     	; 0xf86 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
     f9e:	97 b1       	in	r25, 0x07	; 7
     fa0:	82 a1       	ldd	r24, Z+34	; 0x22
     fa2:	80 95       	com	r24
     fa4:	89 23       	and	r24, r25
     fa6:	87 b9       	out	0x07, r24	; 7
     fa8:	98 b1       	in	r25, 0x08	; 8
     faa:	82 a1       	ldd	r24, Z+34	; 0x22
     fac:	80 95       	com	r24
     fae:	89 23       	and	r24, r25
     fb0:	88 b9       	out	0x08, r24	; 8
     fb2:	87 e8       	ldi	r24, 0x87	; 135
     fb4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     fb8:	e1 2c       	mov	r14, r1
     fba:	81 a1       	ldd	r24, Z+33	; 0x21
     fbc:	e8 16       	cp	r14, r24
     fbe:	10 f0       	brcs	.+4      	; 0xfc4 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
     fc0:	e1 2c       	mov	r14, r1
     fc2:	29 c0       	rjmp	.+82     	; 0x1016 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
     fc4:	50 e0       	ldi	r21, 0x00	; 0
     fc6:	80 85       	ldd	r24, Z+8	; 0x08
     fc8:	58 17       	cp	r21, r24
     fca:	18 f5       	brcc	.+70     	; 0x1012 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
     fcc:	a5 2f       	mov	r26, r21
     fce:	b0 e0       	ldi	r27, 0x00	; 0
     fd0:	ef 01       	movw	r28, r30
     fd2:	ca 0f       	add	r28, r26
     fd4:	db 1f       	adc	r29, r27
     fd6:	89 89       	ldd	r24, Y+17	; 0x11
     fd8:	80 64       	ori	r24, 0x40	; 64
     fda:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     fde:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     fe2:	80 64       	ori	r24, 0x40	; 64
     fe4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     fe8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     fec:	86 fd       	sbrc	r24, 6
     fee:	fc cf       	rjmp	.-8      	; 0xfe8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
     ff0:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     ff4:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     ff8:	aa 0f       	add	r26, r26
     ffa:	bb 1f       	adc	r27, r27
     ffc:	a2 0f       	add	r26, r18
     ffe:	b3 1f       	adc	r27, r19
    1000:	8d 91       	ld	r24, X+
    1002:	9c 91       	ld	r25, X
    1004:	11 97       	sbiw	r26, 0x01	; 1
    1006:	86 0f       	add	r24, r22
    1008:	97 1f       	adc	r25, r23
    100a:	8d 93       	st	X+, r24
    100c:	9c 93       	st	X, r25
    100e:	5f 5f       	subi	r21, 0xFF	; 255
    1010:	da cf       	rjmp	.-76     	; 0xfc6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    1012:	e3 94       	inc	r14
    1014:	d2 cf       	rjmp	.-92     	; 0xfba <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    1016:	80 85       	ldd	r24, Z+8	; 0x08
    1018:	e8 16       	cp	r14, r24
    101a:	a0 f4       	brcc	.+40     	; 0x1044 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    101c:	e9 01       	movw	r28, r18
    101e:	ce 0d       	add	r28, r14
    1020:	d1 1d       	adc	r29, r1
    1022:	ce 0d       	add	r28, r14
    1024:	d1 1d       	adc	r29, r1
    1026:	61 a1       	ldd	r22, Z+33	; 0x21
    1028:	70 e0       	ldi	r23, 0x00	; 0
    102a:	cb 01       	movw	r24, r22
    102c:	95 95       	asr	r25
    102e:	87 95       	ror	r24
    1030:	a8 81       	ld	r26, Y
    1032:	b9 81       	ldd	r27, Y+1	; 0x01
    1034:	8a 0f       	add	r24, r26
    1036:	9b 1f       	adc	r25, r27
    1038:	0e 94 ef 0a 	call	0x15de	; 0x15de <__udivmodhi4>
    103c:	79 83       	std	Y+1, r23	; 0x01
    103e:	68 83       	st	Y, r22
    1040:	e3 94       	inc	r14
    1042:	e9 cf       	rjmp	.-46     	; 0x1016 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    1044:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1048:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    104c:	18 b9       	out	0x08, r17	; 8
    104e:	47 b9       	out	0x07, r20	; 7
    1050:	cd b7       	in	r28, 0x3d	; 61
    1052:	de b7       	in	r29, 0x3e	; 62
    1054:	e6 e0       	ldi	r30, 0x06	; 6
    1056:	0c 94 94 0b 	jmp	0x1728	; 0x1728 <__epilogue_restores__+0x18>

0000105a <_ZN16PololuQTRSensors4readEPjh>:
    105a:	a0 e2       	ldi	r26, 0x20	; 32
    105c:	b0 e0       	ldi	r27, 0x00	; 0
    105e:	e3 e3       	ldi	r30, 0x33	; 51
    1060:	f8 e0       	ldi	r31, 0x08	; 8
    1062:	0c 94 77 0b 	jmp	0x16ee	; 0x16ee <__prologue_saves__+0x16>
    1066:	8c 01       	movw	r16, r24
    1068:	7b 01       	movw	r14, r22
    106a:	d4 2e       	mov	r13, r20
    106c:	8f ef       	ldi	r24, 0xFF	; 255
    106e:	84 0f       	add	r24, r20
    1070:	82 30       	cpi	r24, 0x02	; 2
    1072:	18 f4       	brcc	.+6      	; 0x107a <_ZN16PololuQTRSensors4readEPjh+0x20>
    1074:	c8 01       	movw	r24, r16
    1076:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN16PololuQTRSensors10emittersOnEv>
    107a:	d8 01       	movw	r26, r16
    107c:	50 96       	adiw	r26, 0x10	; 16
    107e:	8c 91       	ld	r24, X
    1080:	b7 01       	movw	r22, r14
    1082:	81 11       	cpse	r24, r1
    1084:	10 c0       	rjmp	.+32     	; 0x10a6 <_ZN16PololuQTRSensors4readEPjh+0x4c>
    1086:	c8 01       	movw	r24, r16
    1088:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    108c:	c8 01       	movw	r24, r16
    108e:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <_ZN16PololuQTRSensors11emittersOffEv>
    1092:	b2 e0       	ldi	r27, 0x02	; 2
    1094:	db 12       	cpse	r13, r27
    1096:	3a c0       	rjmp	.+116    	; 0x110c <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1098:	be 01       	movw	r22, r28
    109a:	6f 5f       	subi	r22, 0xFF	; 255
    109c:	7f 4f       	sbci	r23, 0xFF	; 255
    109e:	c8 01       	movw	r24, r16
    10a0:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    10a4:	0f c0       	rjmp	.+30     	; 0x10c4 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    10a6:	c8 01       	movw	r24, r16
    10a8:	0e 94 b0 07 	call	0xf60	; 0xf60 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    10ac:	c8 01       	movw	r24, r16
    10ae:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <_ZN16PololuQTRSensors11emittersOffEv>
    10b2:	e2 e0       	ldi	r30, 0x02	; 2
    10b4:	de 12       	cpse	r13, r30
    10b6:	2a c0       	rjmp	.+84     	; 0x110c <_ZN16PololuQTRSensors4readEPjh+0xb2>
    10b8:	be 01       	movw	r22, r28
    10ba:	6f 5f       	subi	r22, 0xFF	; 255
    10bc:	7f 4f       	sbci	r23, 0xFF	; 255
    10be:	c8 01       	movw	r24, r16
    10c0:	0e 94 b0 07 	call	0xf60	; 0xf60 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    10c4:	40 e0       	ldi	r20, 0x00	; 0
    10c6:	f8 01       	movw	r30, r16
    10c8:	80 85       	ldd	r24, Z+8	; 0x08
    10ca:	48 17       	cp	r20, r24
    10cc:	f8 f4       	brcc	.+62     	; 0x110c <_ZN16PololuQTRSensors4readEPjh+0xb2>
    10ce:	84 2f       	mov	r24, r20
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	88 0f       	add	r24, r24
    10d4:	99 1f       	adc	r25, r25
    10d6:	f7 01       	movw	r30, r14
    10d8:	e8 0f       	add	r30, r24
    10da:	f9 1f       	adc	r31, r25
    10dc:	21 e0       	ldi	r18, 0x01	; 1
    10de:	30 e0       	ldi	r19, 0x00	; 0
    10e0:	2c 0f       	add	r18, r28
    10e2:	3d 1f       	adc	r19, r29
    10e4:	82 0f       	add	r24, r18
    10e6:	93 1f       	adc	r25, r19
    10e8:	d8 01       	movw	r26, r16
    10ea:	1e 96       	adiw	r26, 0x0e	; 14
    10ec:	2d 91       	ld	r18, X+
    10ee:	3c 91       	ld	r19, X
    10f0:	1f 97       	sbiw	r26, 0x0f	; 15
    10f2:	dc 01       	movw	r26, r24
    10f4:	8d 91       	ld	r24, X+
    10f6:	9c 91       	ld	r25, X
    10f8:	28 1b       	sub	r18, r24
    10fa:	39 0b       	sbc	r19, r25
    10fc:	80 81       	ld	r24, Z
    10fe:	91 81       	ldd	r25, Z+1	; 0x01
    1100:	82 0f       	add	r24, r18
    1102:	93 1f       	adc	r25, r19
    1104:	91 83       	std	Z+1, r25	; 0x01
    1106:	80 83       	st	Z, r24
    1108:	4f 5f       	subi	r20, 0xFF	; 255
    110a:	dd cf       	rjmp	.-70     	; 0x10c6 <_ZN16PololuQTRSensors4readEPjh+0x6c>
    110c:	a0 96       	adiw	r28, 0x20	; 32
    110e:	e7 e0       	ldi	r30, 0x07	; 7
    1110:	0c 94 93 0b 	jmp	0x1726	; 0x1726 <__epilogue_restores__+0x16>

00001114 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    1114:	2f 92       	push	r2
    1116:	3f 92       	push	r3
    1118:	5f 92       	push	r5
    111a:	6f 92       	push	r6
    111c:	7f 92       	push	r7
    111e:	8f 92       	push	r8
    1120:	9f 92       	push	r9
    1122:	af 92       	push	r10
    1124:	bf 92       	push	r11
    1126:	cf 92       	push	r12
    1128:	df 92       	push	r13
    112a:	ef 92       	push	r14
    112c:	ff 92       	push	r15
    112e:	0f 93       	push	r16
    1130:	1f 93       	push	r17
    1132:	cf 93       	push	r28
    1134:	df 93       	push	r29
    1136:	cd b7       	in	r28, 0x3d	; 61
    1138:	de b7       	in	r29, 0x3e	; 62
    113a:	c0 56       	subi	r28, 0x60	; 96
    113c:	d1 09       	sbc	r29, r1
    113e:	0f b6       	in	r0, 0x3f	; 63
    1140:	f8 94       	cli
    1142:	de bf       	out	0x3e, r29	; 62
    1144:	0f be       	out	0x3f, r0	; 63
    1146:	cd bf       	out	0x3d, r28	; 61
    1148:	8c 01       	movw	r16, r24
    114a:	4b 01       	movw	r8, r22
    114c:	5a 01       	movw	r10, r20
    114e:	52 2e       	mov	r5, r18
    1150:	da 01       	movw	r26, r20
    1152:	8d 91       	ld	r24, X+
    1154:	9c 91       	ld	r25, X
    1156:	89 2b       	or	r24, r25
    1158:	31 f0       	breq	.+12     	; 0x1166 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    115a:	f4 01       	movw	r30, r8
    115c:	80 81       	ld	r24, Z
    115e:	91 81       	ldd	r25, Z+1	; 0x01
    1160:	89 2b       	or	r24, r25
    1162:	f1 f4       	brne	.+60     	; 0x11a0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1164:	24 c0       	rjmp	.+72     	; 0x11ae <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    1166:	d8 01       	movw	r26, r16
    1168:	18 96       	adiw	r26, 0x08	; 8
    116a:	8c 91       	ld	r24, X
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	88 0f       	add	r24, r24
    1170:	99 1f       	adc	r25, r25
    1172:	0e 94 a3 0b 	call	0x1746	; 0x1746 <malloc>
    1176:	f5 01       	movw	r30, r10
    1178:	91 83       	std	Z+1, r25	; 0x01
    117a:	80 83       	st	Z, r24
    117c:	00 97       	sbiw	r24, 0x00	; 0
    117e:	09 f4       	brne	.+2      	; 0x1182 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    1180:	b1 c0       	rjmp	.+354    	; 0x12e4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1182:	fc 01       	movw	r30, r24
    1184:	20 e0       	ldi	r18, 0x00	; 0
    1186:	30 e0       	ldi	r19, 0x00	; 0
    1188:	d8 01       	movw	r26, r16
    118a:	18 96       	adiw	r26, 0x08	; 8
    118c:	8c 91       	ld	r24, X
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	28 17       	cp	r18, r24
    1192:	39 07       	cpc	r19, r25
    1194:	14 f7       	brge	.-60     	; 0x115a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    1196:	11 92       	st	Z+, r1
    1198:	11 92       	st	Z+, r1
    119a:	2f 5f       	subi	r18, 0xFF	; 255
    119c:	3f 4f       	sbci	r19, 0xFF	; 255
    119e:	f4 cf       	rjmp	.-24     	; 0x1188 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    11a0:	e1 2c       	mov	r14, r1
    11a2:	f1 2c       	mov	r15, r1
    11a4:	6e 01       	movw	r12, r28
    11a6:	b1 e2       	ldi	r27, 0x21	; 33
    11a8:	cb 0e       	add	r12, r27
    11aa:	d1 1c       	adc	r13, r1
    11ac:	21 c0       	rjmp	.+66     	; 0x11f0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    11ae:	f8 01       	movw	r30, r16
    11b0:	80 85       	ldd	r24, Z+8	; 0x08
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	88 0f       	add	r24, r24
    11b6:	99 1f       	adc	r25, r25
    11b8:	0e 94 a3 0b 	call	0x1746	; 0x1746 <malloc>
    11bc:	d4 01       	movw	r26, r8
    11be:	8d 93       	st	X+, r24
    11c0:	9c 93       	st	X, r25
    11c2:	00 97       	sbiw	r24, 0x00	; 0
    11c4:	09 f4       	brne	.+2      	; 0x11c8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    11c6:	8e c0       	rjmp	.+284    	; 0x12e4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    11c8:	fc 01       	movw	r30, r24
    11ca:	20 e0       	ldi	r18, 0x00	; 0
    11cc:	30 e0       	ldi	r19, 0x00	; 0
    11ce:	d8 01       	movw	r26, r16
    11d0:	18 96       	adiw	r26, 0x08	; 8
    11d2:	8c 91       	ld	r24, X
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	28 17       	cp	r18, r24
    11d8:	39 07       	cpc	r19, r25
    11da:	14 f7       	brge	.-60     	; 0x11a0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    11dc:	d8 01       	movw	r26, r16
    11de:	1e 96       	adiw	r26, 0x0e	; 14
    11e0:	8d 91       	ld	r24, X+
    11e2:	9c 91       	ld	r25, X
    11e4:	1f 97       	sbiw	r26, 0x0f	; 15
    11e6:	81 93       	st	Z+, r24
    11e8:	91 93       	st	Z+, r25
    11ea:	2f 5f       	subi	r18, 0xFF	; 255
    11ec:	3f 4f       	sbci	r19, 0xFF	; 255
    11ee:	ef cf       	rjmp	.-34     	; 0x11ce <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    11f0:	45 2d       	mov	r20, r5
    11f2:	be 01       	movw	r22, r28
    11f4:	6f 5b       	subi	r22, 0xBF	; 191
    11f6:	7f 4f       	sbci	r23, 0xFF	; 255
    11f8:	c8 01       	movw	r24, r16
    11fa:	0e 94 2d 08 	call	0x105a	; 0x105a <_ZN16PololuQTRSensors4readEPjh>
    11fe:	f8 01       	movw	r30, r16
    1200:	60 84       	ldd	r6, Z+8	; 0x08
    1202:	71 2c       	mov	r7, r1
    1204:	fe 01       	movw	r30, r28
    1206:	ef 5b       	subi	r30, 0xBF	; 191
    1208:	ff 4f       	sbci	r31, 0xFF	; 255
    120a:	c6 01       	movw	r24, r12
    120c:	9e 01       	movw	r18, r28
    120e:	2f 5f       	subi	r18, 0xFF	; 255
    1210:	3f 4f       	sbci	r19, 0xFF	; 255
    1212:	19 01       	movw	r2, r18
    1214:	20 e0       	ldi	r18, 0x00	; 0
    1216:	30 e0       	ldi	r19, 0x00	; 0
    1218:	26 15       	cp	r18, r6
    121a:	37 05       	cpc	r19, r7
    121c:	4c f5       	brge	.+82     	; 0x1270 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    121e:	e1 14       	cp	r14, r1
    1220:	f1 04       	cpc	r15, r1
    1222:	89 f0       	breq	.+34     	; 0x1246 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1224:	dc 01       	movw	r26, r24
    1226:	6d 91       	ld	r22, X+
    1228:	7c 91       	ld	r23, X
    122a:	40 81       	ld	r20, Z
    122c:	51 81       	ldd	r21, Z+1	; 0x01
    122e:	64 17       	cp	r22, r20
    1230:	75 07       	cpc	r23, r21
    1232:	48 f0       	brcs	.+18     	; 0x1246 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1234:	d1 01       	movw	r26, r2
    1236:	6d 91       	ld	r22, X+
    1238:	7c 91       	ld	r23, X
    123a:	40 81       	ld	r20, Z
    123c:	51 81       	ldd	r21, Z+1	; 0x01
    123e:	46 17       	cp	r20, r22
    1240:	57 07       	cpc	r21, r23
    1242:	48 f0       	brcs	.+18     	; 0x1256 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    1244:	0d c0       	rjmp	.+26     	; 0x1260 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    1246:	40 81       	ld	r20, Z
    1248:	51 81       	ldd	r21, Z+1	; 0x01
    124a:	dc 01       	movw	r26, r24
    124c:	4d 93       	st	X+, r20
    124e:	5c 93       	st	X, r21
    1250:	e1 14       	cp	r14, r1
    1252:	f1 04       	cpc	r15, r1
    1254:	79 f7       	brne	.-34     	; 0x1234 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    1256:	40 81       	ld	r20, Z
    1258:	51 81       	ldd	r21, Z+1	; 0x01
    125a:	d1 01       	movw	r26, r2
    125c:	4d 93       	st	X+, r20
    125e:	5c 93       	st	X, r21
    1260:	2f 5f       	subi	r18, 0xFF	; 255
    1262:	3f 4f       	sbci	r19, 0xFF	; 255
    1264:	b2 e0       	ldi	r27, 0x02	; 2
    1266:	2b 0e       	add	r2, r27
    1268:	31 1c       	adc	r3, r1
    126a:	32 96       	adiw	r30, 0x02	; 2
    126c:	02 96       	adiw	r24, 0x02	; 2
    126e:	d4 cf       	rjmp	.-88     	; 0x1218 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    1270:	ef ef       	ldi	r30, 0xFF	; 255
    1272:	ee 1a       	sub	r14, r30
    1274:	fe 0a       	sbc	r15, r30
    1276:	fa e0       	ldi	r31, 0x0A	; 10
    1278:	ef 16       	cp	r14, r31
    127a:	f1 04       	cpc	r15, r1
    127c:	09 f0       	breq	.+2      	; 0x1280 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    127e:	b8 cf       	rjmp	.-144    	; 0x11f0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    1280:	9e 01       	movw	r18, r28
    1282:	2f 5f       	subi	r18, 0xFF	; 255
    1284:	3f 4f       	sbci	r19, 0xFF	; 255
    1286:	79 01       	movw	r14, r18
    1288:	36 01       	movw	r6, r12
    128a:	80 e0       	ldi	r24, 0x00	; 0
    128c:	90 e0       	ldi	r25, 0x00	; 0
    128e:	f8 01       	movw	r30, r16
    1290:	20 85       	ldd	r18, Z+8	; 0x08
    1292:	30 e0       	ldi	r19, 0x00	; 0
    1294:	82 17       	cp	r24, r18
    1296:	93 07       	cpc	r25, r19
    1298:	2c f5       	brge	.+74     	; 0x12e4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    129a:	d7 01       	movw	r26, r14
    129c:	2d 91       	ld	r18, X+
    129e:	3d 91       	ld	r19, X+
    12a0:	7d 01       	movw	r14, r26
    12a2:	b3 01       	movw	r22, r6
    12a4:	6c 19       	sub	r22, r12
    12a6:	7d 09       	sbc	r23, r13
    12a8:	d5 01       	movw	r26, r10
    12aa:	ed 91       	ld	r30, X+
    12ac:	fc 91       	ld	r31, X
    12ae:	e6 0f       	add	r30, r22
    12b0:	f7 1f       	adc	r31, r23
    12b2:	40 81       	ld	r20, Z
    12b4:	51 81       	ldd	r21, Z+1	; 0x01
    12b6:	42 17       	cp	r20, r18
    12b8:	53 07       	cpc	r21, r19
    12ba:	10 f4       	brcc	.+4      	; 0x12c0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    12bc:	31 83       	std	Z+1, r19	; 0x01
    12be:	20 83       	st	Z, r18
    12c0:	f3 01       	movw	r30, r6
    12c2:	21 91       	ld	r18, Z+
    12c4:	31 91       	ld	r19, Z+
    12c6:	3f 01       	movw	r6, r30
    12c8:	d4 01       	movw	r26, r8
    12ca:	ed 91       	ld	r30, X+
    12cc:	fc 91       	ld	r31, X
    12ce:	e6 0f       	add	r30, r22
    12d0:	f7 1f       	adc	r31, r23
    12d2:	40 81       	ld	r20, Z
    12d4:	51 81       	ldd	r21, Z+1	; 0x01
    12d6:	24 17       	cp	r18, r20
    12d8:	35 07       	cpc	r19, r21
    12da:	10 f4       	brcc	.+4      	; 0x12e0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    12dc:	31 83       	std	Z+1, r19	; 0x01
    12de:	20 83       	st	Z, r18
    12e0:	01 96       	adiw	r24, 0x01	; 1
    12e2:	d5 cf       	rjmp	.-86     	; 0x128e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    12e4:	c0 5a       	subi	r28, 0xA0	; 160
    12e6:	df 4f       	sbci	r29, 0xFF	; 255
    12e8:	0f b6       	in	r0, 0x3f	; 63
    12ea:	f8 94       	cli
    12ec:	de bf       	out	0x3e, r29	; 62
    12ee:	0f be       	out	0x3f, r0	; 63
    12f0:	cd bf       	out	0x3d, r28	; 61
    12f2:	df 91       	pop	r29
    12f4:	cf 91       	pop	r28
    12f6:	1f 91       	pop	r17
    12f8:	0f 91       	pop	r16
    12fa:	ff 90       	pop	r15
    12fc:	ef 90       	pop	r14
    12fe:	df 90       	pop	r13
    1300:	cf 90       	pop	r12
    1302:	bf 90       	pop	r11
    1304:	af 90       	pop	r10
    1306:	9f 90       	pop	r9
    1308:	8f 90       	pop	r8
    130a:	7f 90       	pop	r7
    130c:	6f 90       	pop	r6
    130e:	5f 90       	pop	r5
    1310:	3f 90       	pop	r3
    1312:	2f 90       	pop	r2
    1314:	08 95       	ret

00001316 <_ZN16PololuQTRSensors9calibrateEh>:
    1316:	1f 93       	push	r17
    1318:	cf 93       	push	r28
    131a:	df 93       	push	r29
    131c:	ec 01       	movw	r28, r24
    131e:	16 2f       	mov	r17, r22
    1320:	8f ef       	ldi	r24, 0xFF	; 255
    1322:	86 0f       	add	r24, r22
    1324:	82 30       	cpi	r24, 0x02	; 2
    1326:	18 f0       	brcs	.+6      	; 0x132e <_ZN16PololuQTRSensors9calibrateEh+0x18>
    1328:	66 23       	and	r22, r22
    132a:	59 f0       	breq	.+22     	; 0x1342 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    132c:	14 c0       	rjmp	.+40     	; 0x1356 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    132e:	21 e0       	ldi	r18, 0x01	; 1
    1330:	ae 01       	movw	r20, r28
    1332:	4e 5f       	subi	r20, 0xFE	; 254
    1334:	5f 4f       	sbci	r21, 0xFF	; 255
    1336:	be 01       	movw	r22, r28
    1338:	ce 01       	movw	r24, r28
    133a:	0e 94 8a 08 	call	0x1114	; 0x1114 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    133e:	12 30       	cpi	r17, 0x02	; 2
    1340:	51 f4       	brne	.+20     	; 0x1356 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1342:	ae 01       	movw	r20, r28
    1344:	4a 5f       	subi	r20, 0xFA	; 250
    1346:	5f 4f       	sbci	r21, 0xFF	; 255
    1348:	be 01       	movw	r22, r28
    134a:	6c 5f       	subi	r22, 0xFC	; 252
    134c:	7f 4f       	sbci	r23, 0xFF	; 255
    134e:	20 e0       	ldi	r18, 0x00	; 0
    1350:	ce 01       	movw	r24, r28
    1352:	0e 94 8a 08 	call	0x1114	; 0x1114 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1356:	df 91       	pop	r29
    1358:	cf 91       	pop	r28
    135a:	1f 91       	pop	r17
    135c:	08 95       	ret

0000135e <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    135e:	a0 e0       	ldi	r26, 0x00	; 0
    1360:	b0 e0       	ldi	r27, 0x00	; 0
    1362:	e5 eb       	ldi	r30, 0xB5	; 181
    1364:	f9 e0       	ldi	r31, 0x09	; 9
    1366:	0c 94 75 0b 	jmp	0x16ea	; 0x16ea <__prologue_saves__+0x12>
    136a:	ec 01       	movw	r28, r24
    136c:	8b 01       	movw	r16, r22
    136e:	b4 2e       	mov	r11, r20
    1370:	84 2f       	mov	r24, r20
    1372:	8d 7f       	andi	r24, 0xFD	; 253
    1374:	51 f4       	brne	.+20     	; 0x138a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    1376:	8c 81       	ldd	r24, Y+4	; 0x04
    1378:	9d 81       	ldd	r25, Y+5	; 0x05
    137a:	89 2b       	or	r24, r25
    137c:	09 f4       	brne	.+2      	; 0x1380 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    137e:	97 c0       	rjmp	.+302    	; 0x14ae <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1380:	8e 81       	ldd	r24, Y+6	; 0x06
    1382:	9f 81       	ldd	r25, Y+7	; 0x07
    1384:	89 2b       	or	r24, r25
    1386:	09 f4       	brne	.+2      	; 0x138a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    1388:	92 c0       	rjmp	.+292    	; 0x14ae <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    138a:	8f ef       	ldi	r24, 0xFF	; 255
    138c:	8b 0d       	add	r24, r11
    138e:	82 30       	cpi	r24, 0x02	; 2
    1390:	50 f4       	brcc	.+20     	; 0x13a6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    1392:	88 81       	ld	r24, Y
    1394:	99 81       	ldd	r25, Y+1	; 0x01
    1396:	89 2b       	or	r24, r25
    1398:	09 f4       	brne	.+2      	; 0x139c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    139a:	89 c0       	rjmp	.+274    	; 0x14ae <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    139c:	8a 81       	ldd	r24, Y+2	; 0x02
    139e:	9b 81       	ldd	r25, Y+3	; 0x03
    13a0:	89 2b       	or	r24, r25
    13a2:	09 f4       	brne	.+2      	; 0x13a6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    13a4:	84 c0       	rjmp	.+264    	; 0x14ae <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    13a6:	4b 2d       	mov	r20, r11
    13a8:	b8 01       	movw	r22, r16
    13aa:	ce 01       	movw	r24, r28
    13ac:	0e 94 2d 08 	call	0x105a	; 0x105a <_ZN16PololuQTRSensors4readEPjh>
    13b0:	78 01       	movw	r14, r16
    13b2:	00 e0       	ldi	r16, 0x00	; 0
    13b4:	10 e0       	ldi	r17, 0x00	; 0
    13b6:	c1 2c       	mov	r12, r1
    13b8:	d1 2c       	mov	r13, r1
    13ba:	88 85       	ldd	r24, Y+8	; 0x08
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	c8 16       	cp	r12, r24
    13c0:	d9 06       	cpc	r13, r25
    13c2:	0c f0       	brlt	.+2      	; 0x13c6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    13c4:	74 c0       	rjmp	.+232    	; 0x14ae <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    13c6:	81 e0       	ldi	r24, 0x01	; 1
    13c8:	b8 12       	cpse	r11, r24
    13ca:	0a c0       	rjmp	.+20     	; 0x13e0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    13cc:	ea 81       	ldd	r30, Y+2	; 0x02
    13ce:	fb 81       	ldd	r31, Y+3	; 0x03
    13d0:	e0 0f       	add	r30, r16
    13d2:	f1 1f       	adc	r31, r17
    13d4:	01 90       	ld	r0, Z+
    13d6:	f0 81       	ld	r31, Z
    13d8:	e0 2d       	mov	r30, r0
    13da:	a8 81       	ld	r26, Y
    13dc:	b9 81       	ldd	r27, Y+1	; 0x01
    13de:	0d c0       	rjmp	.+26     	; 0x13fa <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    13e0:	8c 81       	ldd	r24, Y+4	; 0x04
    13e2:	9d 81       	ldd	r25, Y+5	; 0x05
    13e4:	2e 81       	ldd	r18, Y+6	; 0x06
    13e6:	3f 81       	ldd	r19, Y+7	; 0x07
    13e8:	b1 10       	cpse	r11, r1
    13ea:	0c c0       	rjmp	.+24     	; 0x1404 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    13ec:	f9 01       	movw	r30, r18
    13ee:	e0 0f       	add	r30, r16
    13f0:	f1 1f       	adc	r31, r17
    13f2:	01 90       	ld	r0, Z+
    13f4:	f0 81       	ld	r31, Z
    13f6:	e0 2d       	mov	r30, r0
    13f8:	dc 01       	movw	r26, r24
    13fa:	a0 0f       	add	r26, r16
    13fc:	b1 1f       	adc	r27, r17
    13fe:	8d 91       	ld	r24, X+
    1400:	9c 91       	ld	r25, X
    1402:	28 c0       	rjmp	.+80     	; 0x1454 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    1404:	fc 01       	movw	r30, r24
    1406:	e0 0f       	add	r30, r16
    1408:	f1 1f       	adc	r31, r17
    140a:	40 81       	ld	r20, Z
    140c:	51 81       	ldd	r21, Z+1	; 0x01
    140e:	e8 81       	ld	r30, Y
    1410:	f9 81       	ldd	r31, Y+1	; 0x01
    1412:	e0 0f       	add	r30, r16
    1414:	f1 1f       	adc	r31, r17
    1416:	80 81       	ld	r24, Z
    1418:	91 81       	ldd	r25, Z+1	; 0x01
    141a:	ee 85       	ldd	r30, Y+14	; 0x0e
    141c:	ff 85       	ldd	r31, Y+15	; 0x0f
    141e:	48 17       	cp	r20, r24
    1420:	59 07       	cpc	r21, r25
    1422:	10 f4       	brcc	.+4      	; 0x1428 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    1424:	cf 01       	movw	r24, r30
    1426:	04 c0       	rjmp	.+8      	; 0x1430 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    1428:	8e 0f       	add	r24, r30
    142a:	9f 1f       	adc	r25, r31
    142c:	84 1b       	sub	r24, r20
    142e:	95 0b       	sbc	r25, r21
    1430:	d9 01       	movw	r26, r18
    1432:	a0 0f       	add	r26, r16
    1434:	b1 1f       	adc	r27, r17
    1436:	2d 91       	ld	r18, X+
    1438:	3c 91       	ld	r19, X
    143a:	aa 81       	ldd	r26, Y+2	; 0x02
    143c:	bb 81       	ldd	r27, Y+3	; 0x03
    143e:	a0 0f       	add	r26, r16
    1440:	b1 1f       	adc	r27, r17
    1442:	4d 91       	ld	r20, X+
    1444:	5c 91       	ld	r21, X
    1446:	24 17       	cp	r18, r20
    1448:	35 07       	cpc	r19, r21
    144a:	20 f0       	brcs	.+8      	; 0x1454 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    144c:	e4 0f       	add	r30, r20
    144e:	f5 1f       	adc	r31, r21
    1450:	e2 1b       	sub	r30, r18
    1452:	f3 0b       	sbc	r31, r19
    1454:	e8 1b       	sub	r30, r24
    1456:	f9 0b       	sbc	r31, r25
    1458:	a9 f0       	breq	.+42     	; 0x1484 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    145a:	d7 01       	movw	r26, r14
    145c:	2d 91       	ld	r18, X+
    145e:	3c 91       	ld	r19, X
    1460:	40 e0       	ldi	r20, 0x00	; 0
    1462:	50 e0       	ldi	r21, 0x00	; 0
    1464:	28 1b       	sub	r18, r24
    1466:	39 0b       	sbc	r19, r25
    1468:	41 09       	sbc	r20, r1
    146a:	51 09       	sbc	r21, r1
    146c:	a8 ee       	ldi	r26, 0xE8	; 232
    146e:	b3 e0       	ldi	r27, 0x03	; 3
    1470:	0e 94 59 0b 	call	0x16b2	; 0x16b2 <__muluhisi3>
    1474:	9f 01       	movw	r18, r30
    1476:	40 e0       	ldi	r20, 0x00	; 0
    1478:	50 e0       	ldi	r21, 0x00	; 0
    147a:	0e 94 25 0b 	call	0x164a	; 0x164a <__divmodsi4>
    147e:	37 fd       	sbrc	r19, 7
    1480:	0a c0       	rjmp	.+20     	; 0x1496 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    1482:	02 c0       	rjmp	.+4      	; 0x1488 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    1484:	20 e0       	ldi	r18, 0x00	; 0
    1486:	30 e0       	ldi	r19, 0x00	; 0
    1488:	29 3e       	cpi	r18, 0xE9	; 233
    148a:	b3 e0       	ldi	r27, 0x03	; 3
    148c:	3b 07       	cpc	r19, r27
    148e:	2c f0       	brlt	.+10     	; 0x149a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1490:	28 ee       	ldi	r18, 0xE8	; 232
    1492:	33 e0       	ldi	r19, 0x03	; 3
    1494:	02 c0       	rjmp	.+4      	; 0x149a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1496:	20 e0       	ldi	r18, 0x00	; 0
    1498:	30 e0       	ldi	r19, 0x00	; 0
    149a:	f7 01       	movw	r30, r14
    149c:	21 93       	st	Z+, r18
    149e:	31 93       	st	Z+, r19
    14a0:	7f 01       	movw	r14, r30
    14a2:	ff ef       	ldi	r31, 0xFF	; 255
    14a4:	cf 1a       	sub	r12, r31
    14a6:	df 0a       	sbc	r13, r31
    14a8:	0e 5f       	subi	r16, 0xFE	; 254
    14aa:	1f 4f       	sbci	r17, 0xFF	; 255
    14ac:	86 cf       	rjmp	.-244    	; 0x13ba <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    14ae:	cd b7       	in	r28, 0x3d	; 61
    14b0:	de b7       	in	r29, 0x3e	; 62
    14b2:	e9 e0       	ldi	r30, 0x09	; 9
    14b4:	0c 94 91 0b 	jmp	0x1722	; 0x1722 <__epilogue_restores__+0x12>

000014b8 <_ZN16PololuQTRSensors8readLineEPjhh>:
    14b8:	a0 e0       	ldi	r26, 0x00	; 0
    14ba:	b0 e0       	ldi	r27, 0x00	; 0
    14bc:	e2 e6       	ldi	r30, 0x62	; 98
    14be:	fa e0       	ldi	r31, 0x0A	; 10
    14c0:	0c 94 6c 0b 	jmp	0x16d8	; 0x16d8 <__prologue_saves__>
    14c4:	ec 01       	movw	r28, r24
    14c6:	8b 01       	movw	r16, r22
    14c8:	82 2e       	mov	r8, r18
    14ca:	0e 94 af 09 	call	0x135e	; 0x135e <_ZN16PololuQTRSensors14readCalibratedEPjh>
    14ce:	28 84       	ldd	r2, Y+8	; 0x08
    14d0:	e8 01       	movw	r28, r16
    14d2:	41 2c       	mov	r4, r1
    14d4:	51 2c       	mov	r5, r1
    14d6:	32 01       	movw	r6, r4
    14d8:	00 e0       	ldi	r16, 0x00	; 0
    14da:	10 e0       	ldi	r17, 0x00	; 0
    14dc:	c1 2c       	mov	r12, r1
    14de:	d1 2c       	mov	r13, r1
    14e0:	76 01       	movw	r14, r12
    14e2:	31 2c       	mov	r3, r1
    14e4:	91 2c       	mov	r9, r1
    14e6:	58 ee       	ldi	r21, 0xE8	; 232
    14e8:	a5 2e       	mov	r10, r21
    14ea:	53 e0       	ldi	r21, 0x03	; 3
    14ec:	b5 2e       	mov	r11, r21
    14ee:	92 14       	cp	r9, r2
    14f0:	21 f1       	breq	.+72     	; 0x153a <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    14f2:	e9 91       	ld	r30, Y+
    14f4:	f9 91       	ld	r31, Y+
    14f6:	88 20       	and	r8, r8
    14f8:	21 f0       	breq	.+8      	; 0x1502 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    14fa:	c5 01       	movw	r24, r10
    14fc:	8e 1b       	sub	r24, r30
    14fe:	9f 0b       	sbc	r25, r31
    1500:	fc 01       	movw	r30, r24
    1502:	e9 3c       	cpi	r30, 0xC9	; 201
    1504:	f1 05       	cpc	r31, r1
    1506:	24 f4       	brge	.+8      	; 0x1510 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    1508:	e3 33       	cpi	r30, 0x33	; 51
    150a:	f1 05       	cpc	r31, r1
    150c:	74 f0       	brlt	.+28     	; 0x152a <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    150e:	02 c0       	rjmp	.+4      	; 0x1514 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    1510:	33 24       	eor	r3, r3
    1512:	33 94       	inc	r3
    1514:	df 01       	movw	r26, r30
    1516:	a3 01       	movw	r20, r6
    1518:	92 01       	movw	r18, r4
    151a:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <__mulshisi3>
    151e:	c6 0e       	add	r12, r22
    1520:	d7 1e       	adc	r13, r23
    1522:	e8 1e       	adc	r14, r24
    1524:	f9 1e       	adc	r15, r25
    1526:	0e 0f       	add	r16, r30
    1528:	1f 1f       	adc	r17, r31
    152a:	93 94       	inc	r9
    152c:	98 ee       	ldi	r25, 0xE8	; 232
    152e:	49 0e       	add	r4, r25
    1530:	93 e0       	ldi	r25, 0x03	; 3
    1532:	59 1e       	adc	r5, r25
    1534:	61 1c       	adc	r6, r1
    1536:	71 1c       	adc	r7, r1
    1538:	da cf       	rjmp	.-76     	; 0x14ee <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    153a:	31 10       	cpse	r3, r1
    153c:	1e c0       	rjmp	.+60     	; 0x157a <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    153e:	49 2d       	mov	r20, r9
    1540:	50 e0       	ldi	r21, 0x00	; 0
    1542:	41 50       	subi	r20, 0x01	; 1
    1544:	51 09       	sbc	r21, r1
    1546:	24 ef       	ldi	r18, 0xF4	; 244
    1548:	31 e0       	ldi	r19, 0x01	; 1
    154a:	42 9f       	mul	r20, r18
    154c:	c0 01       	movw	r24, r0
    154e:	43 9f       	mul	r20, r19
    1550:	90 0d       	add	r25, r0
    1552:	52 9f       	mul	r21, r18
    1554:	90 0d       	add	r25, r0
    1556:	11 24       	eor	r1, r1
    1558:	20 91 64 01 	lds	r18, 0x0164	; 0x800164 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    155c:	30 91 65 01 	lds	r19, 0x0165	; 0x800165 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    1560:	28 17       	cp	r18, r24
    1562:	39 07       	cpc	r19, r25
    1564:	b4 f0       	brlt	.+44     	; 0x1592 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    1566:	88 ee       	ldi	r24, 0xE8	; 232
    1568:	93 e0       	ldi	r25, 0x03	; 3
    156a:	48 9f       	mul	r20, r24
    156c:	90 01       	movw	r18, r0
    156e:	49 9f       	mul	r20, r25
    1570:	30 0d       	add	r19, r0
    1572:	58 9f       	mul	r21, r24
    1574:	30 0d       	add	r19, r0
    1576:	11 24       	eor	r1, r1
    1578:	0e c0       	rjmp	.+28     	; 0x1596 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    157a:	98 01       	movw	r18, r16
    157c:	40 e0       	ldi	r20, 0x00	; 0
    157e:	50 e0       	ldi	r21, 0x00	; 0
    1580:	c7 01       	movw	r24, r14
    1582:	b6 01       	movw	r22, r12
    1584:	0e 94 03 0b 	call	0x1606	; 0x1606 <__udivmodsi4>
    1588:	30 93 65 01 	sts	0x0165, r19	; 0x800165 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    158c:	20 93 64 01 	sts	0x0164, r18	; 0x800164 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    1590:	02 c0       	rjmp	.+4      	; 0x1596 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    1592:	20 e0       	ldi	r18, 0x00	; 0
    1594:	30 e0       	ldi	r19, 0x00	; 0
    1596:	c9 01       	movw	r24, r18
    1598:	cd b7       	in	r28, 0x3d	; 61
    159a:	de b7       	in	r29, 0x3e	; 62
    159c:	e2 e1       	ldi	r30, 0x12	; 18
    159e:	0c 94 88 0b 	jmp	0x1710	; 0x1710 <__epilogue_restores__>

000015a2 <_ZN16PololuQTRSensorsD1Ev>:
    15a2:	cf 93       	push	r28
    15a4:	df 93       	push	r29
    15a6:	ec 01       	movw	r28, r24
    15a8:	8a 81       	ldd	r24, Y+2	; 0x02
    15aa:	9b 81       	ldd	r25, Y+3	; 0x03
    15ac:	00 97       	sbiw	r24, 0x00	; 0
    15ae:	11 f0       	breq	.+4      	; 0x15b4 <_ZN16PololuQTRSensorsD1Ev+0x12>
    15b0:	0e 94 3b 0c 	call	0x1876	; 0x1876 <free>
    15b4:	8e 81       	ldd	r24, Y+6	; 0x06
    15b6:	9f 81       	ldd	r25, Y+7	; 0x07
    15b8:	00 97       	sbiw	r24, 0x00	; 0
    15ba:	11 f0       	breq	.+4      	; 0x15c0 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    15bc:	0e 94 3b 0c 	call	0x1876	; 0x1876 <free>
    15c0:	88 81       	ld	r24, Y
    15c2:	99 81       	ldd	r25, Y+1	; 0x01
    15c4:	00 97       	sbiw	r24, 0x00	; 0
    15c6:	11 f0       	breq	.+4      	; 0x15cc <_ZN16PololuQTRSensorsD1Ev+0x2a>
    15c8:	0e 94 3b 0c 	call	0x1876	; 0x1876 <free>
    15cc:	8c 81       	ldd	r24, Y+4	; 0x04
    15ce:	9d 81       	ldd	r25, Y+5	; 0x05
    15d0:	00 97       	sbiw	r24, 0x00	; 0
    15d2:	11 f0       	breq	.+4      	; 0x15d8 <_ZN16PololuQTRSensorsD1Ev+0x36>
    15d4:	0e 94 3b 0c 	call	0x1876	; 0x1876 <free>
    15d8:	df 91       	pop	r29
    15da:	cf 91       	pop	r28
    15dc:	08 95       	ret

000015de <__udivmodhi4>:
    15de:	aa 1b       	sub	r26, r26
    15e0:	bb 1b       	sub	r27, r27
    15e2:	51 e1       	ldi	r21, 0x11	; 17
    15e4:	07 c0       	rjmp	.+14     	; 0x15f4 <__udivmodhi4_ep>

000015e6 <__udivmodhi4_loop>:
    15e6:	aa 1f       	adc	r26, r26
    15e8:	bb 1f       	adc	r27, r27
    15ea:	a6 17       	cp	r26, r22
    15ec:	b7 07       	cpc	r27, r23
    15ee:	10 f0       	brcs	.+4      	; 0x15f4 <__udivmodhi4_ep>
    15f0:	a6 1b       	sub	r26, r22
    15f2:	b7 0b       	sbc	r27, r23

000015f4 <__udivmodhi4_ep>:
    15f4:	88 1f       	adc	r24, r24
    15f6:	99 1f       	adc	r25, r25
    15f8:	5a 95       	dec	r21
    15fa:	a9 f7       	brne	.-22     	; 0x15e6 <__udivmodhi4_loop>
    15fc:	80 95       	com	r24
    15fe:	90 95       	com	r25
    1600:	bc 01       	movw	r22, r24
    1602:	cd 01       	movw	r24, r26
    1604:	08 95       	ret

00001606 <__udivmodsi4>:
    1606:	a1 e2       	ldi	r26, 0x21	; 33
    1608:	1a 2e       	mov	r1, r26
    160a:	aa 1b       	sub	r26, r26
    160c:	bb 1b       	sub	r27, r27
    160e:	fd 01       	movw	r30, r26
    1610:	0d c0       	rjmp	.+26     	; 0x162c <__udivmodsi4_ep>

00001612 <__udivmodsi4_loop>:
    1612:	aa 1f       	adc	r26, r26
    1614:	bb 1f       	adc	r27, r27
    1616:	ee 1f       	adc	r30, r30
    1618:	ff 1f       	adc	r31, r31
    161a:	a2 17       	cp	r26, r18
    161c:	b3 07       	cpc	r27, r19
    161e:	e4 07       	cpc	r30, r20
    1620:	f5 07       	cpc	r31, r21
    1622:	20 f0       	brcs	.+8      	; 0x162c <__udivmodsi4_ep>
    1624:	a2 1b       	sub	r26, r18
    1626:	b3 0b       	sbc	r27, r19
    1628:	e4 0b       	sbc	r30, r20
    162a:	f5 0b       	sbc	r31, r21

0000162c <__udivmodsi4_ep>:
    162c:	66 1f       	adc	r22, r22
    162e:	77 1f       	adc	r23, r23
    1630:	88 1f       	adc	r24, r24
    1632:	99 1f       	adc	r25, r25
    1634:	1a 94       	dec	r1
    1636:	69 f7       	brne	.-38     	; 0x1612 <__udivmodsi4_loop>
    1638:	60 95       	com	r22
    163a:	70 95       	com	r23
    163c:	80 95       	com	r24
    163e:	90 95       	com	r25
    1640:	9b 01       	movw	r18, r22
    1642:	ac 01       	movw	r20, r24
    1644:	bd 01       	movw	r22, r26
    1646:	cf 01       	movw	r24, r30
    1648:	08 95       	ret

0000164a <__divmodsi4>:
    164a:	05 2e       	mov	r0, r21
    164c:	97 fb       	bst	r25, 7
    164e:	1e f4       	brtc	.+6      	; 0x1656 <__divmodsi4+0xc>
    1650:	00 94       	com	r0
    1652:	0e 94 3c 0b 	call	0x1678	; 0x1678 <__negsi2>
    1656:	57 fd       	sbrc	r21, 7
    1658:	07 d0       	rcall	.+14     	; 0x1668 <__divmodsi4_neg2>
    165a:	0e 94 03 0b 	call	0x1606	; 0x1606 <__udivmodsi4>
    165e:	07 fc       	sbrc	r0, 7
    1660:	03 d0       	rcall	.+6      	; 0x1668 <__divmodsi4_neg2>
    1662:	4e f4       	brtc	.+18     	; 0x1676 <__divmodsi4_exit>
    1664:	0c 94 3c 0b 	jmp	0x1678	; 0x1678 <__negsi2>

00001668 <__divmodsi4_neg2>:
    1668:	50 95       	com	r21
    166a:	40 95       	com	r20
    166c:	30 95       	com	r19
    166e:	21 95       	neg	r18
    1670:	3f 4f       	sbci	r19, 0xFF	; 255
    1672:	4f 4f       	sbci	r20, 0xFF	; 255
    1674:	5f 4f       	sbci	r21, 0xFF	; 255

00001676 <__divmodsi4_exit>:
    1676:	08 95       	ret

00001678 <__negsi2>:
    1678:	90 95       	com	r25
    167a:	80 95       	com	r24
    167c:	70 95       	com	r23
    167e:	61 95       	neg	r22
    1680:	7f 4f       	sbci	r23, 0xFF	; 255
    1682:	8f 4f       	sbci	r24, 0xFF	; 255
    1684:	9f 4f       	sbci	r25, 0xFF	; 255
    1686:	08 95       	ret

00001688 <__tablejump2__>:
    1688:	ee 0f       	add	r30, r30
    168a:	ff 1f       	adc	r31, r31
    168c:	05 90       	lpm	r0, Z+
    168e:	f4 91       	lpm	r31, Z
    1690:	e0 2d       	mov	r30, r0
    1692:	09 94       	ijmp

00001694 <__umulhisi3>:
    1694:	a2 9f       	mul	r26, r18
    1696:	b0 01       	movw	r22, r0
    1698:	b3 9f       	mul	r27, r19
    169a:	c0 01       	movw	r24, r0
    169c:	a3 9f       	mul	r26, r19
    169e:	70 0d       	add	r23, r0
    16a0:	81 1d       	adc	r24, r1
    16a2:	11 24       	eor	r1, r1
    16a4:	91 1d       	adc	r25, r1
    16a6:	b2 9f       	mul	r27, r18
    16a8:	70 0d       	add	r23, r0
    16aa:	81 1d       	adc	r24, r1
    16ac:	11 24       	eor	r1, r1
    16ae:	91 1d       	adc	r25, r1
    16b0:	08 95       	ret

000016b2 <__muluhisi3>:
    16b2:	0e 94 4a 0b 	call	0x1694	; 0x1694 <__umulhisi3>
    16b6:	a5 9f       	mul	r26, r21
    16b8:	90 0d       	add	r25, r0
    16ba:	b4 9f       	mul	r27, r20
    16bc:	90 0d       	add	r25, r0
    16be:	a4 9f       	mul	r26, r20
    16c0:	80 0d       	add	r24, r0
    16c2:	91 1d       	adc	r25, r1
    16c4:	11 24       	eor	r1, r1
    16c6:	08 95       	ret

000016c8 <__mulshisi3>:
    16c8:	b7 ff       	sbrs	r27, 7
    16ca:	0c 94 59 0b 	jmp	0x16b2	; 0x16b2 <__muluhisi3>

000016ce <__mulohisi3>:
    16ce:	0e 94 59 0b 	call	0x16b2	; 0x16b2 <__muluhisi3>
    16d2:	82 1b       	sub	r24, r18
    16d4:	93 0b       	sbc	r25, r19
    16d6:	08 95       	ret

000016d8 <__prologue_saves__>:
    16d8:	2f 92       	push	r2
    16da:	3f 92       	push	r3
    16dc:	4f 92       	push	r4
    16de:	5f 92       	push	r5
    16e0:	6f 92       	push	r6
    16e2:	7f 92       	push	r7
    16e4:	8f 92       	push	r8
    16e6:	9f 92       	push	r9
    16e8:	af 92       	push	r10
    16ea:	bf 92       	push	r11
    16ec:	cf 92       	push	r12
    16ee:	df 92       	push	r13
    16f0:	ef 92       	push	r14
    16f2:	ff 92       	push	r15
    16f4:	0f 93       	push	r16
    16f6:	1f 93       	push	r17
    16f8:	cf 93       	push	r28
    16fa:	df 93       	push	r29
    16fc:	cd b7       	in	r28, 0x3d	; 61
    16fe:	de b7       	in	r29, 0x3e	; 62
    1700:	ca 1b       	sub	r28, r26
    1702:	db 0b       	sbc	r29, r27
    1704:	0f b6       	in	r0, 0x3f	; 63
    1706:	f8 94       	cli
    1708:	de bf       	out	0x3e, r29	; 62
    170a:	0f be       	out	0x3f, r0	; 63
    170c:	cd bf       	out	0x3d, r28	; 61
    170e:	09 94       	ijmp

00001710 <__epilogue_restores__>:
    1710:	2a 88       	ldd	r2, Y+18	; 0x12
    1712:	39 88       	ldd	r3, Y+17	; 0x11
    1714:	48 88       	ldd	r4, Y+16	; 0x10
    1716:	5f 84       	ldd	r5, Y+15	; 0x0f
    1718:	6e 84       	ldd	r6, Y+14	; 0x0e
    171a:	7d 84       	ldd	r7, Y+13	; 0x0d
    171c:	8c 84       	ldd	r8, Y+12	; 0x0c
    171e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1720:	aa 84       	ldd	r10, Y+10	; 0x0a
    1722:	b9 84       	ldd	r11, Y+9	; 0x09
    1724:	c8 84       	ldd	r12, Y+8	; 0x08
    1726:	df 80       	ldd	r13, Y+7	; 0x07
    1728:	ee 80       	ldd	r14, Y+6	; 0x06
    172a:	fd 80       	ldd	r15, Y+5	; 0x05
    172c:	0c 81       	ldd	r16, Y+4	; 0x04
    172e:	1b 81       	ldd	r17, Y+3	; 0x03
    1730:	aa 81       	ldd	r26, Y+2	; 0x02
    1732:	b9 81       	ldd	r27, Y+1	; 0x01
    1734:	ce 0f       	add	r28, r30
    1736:	d1 1d       	adc	r29, r1
    1738:	0f b6       	in	r0, 0x3f	; 63
    173a:	f8 94       	cli
    173c:	de bf       	out	0x3e, r29	; 62
    173e:	0f be       	out	0x3f, r0	; 63
    1740:	cd bf       	out	0x3d, r28	; 61
    1742:	ed 01       	movw	r28, r26
    1744:	08 95       	ret

00001746 <malloc>:
    1746:	0f 93       	push	r16
    1748:	1f 93       	push	r17
    174a:	cf 93       	push	r28
    174c:	df 93       	push	r29
    174e:	82 30       	cpi	r24, 0x02	; 2
    1750:	91 05       	cpc	r25, r1
    1752:	10 f4       	brcc	.+4      	; 0x1758 <malloc+0x12>
    1754:	82 e0       	ldi	r24, 0x02	; 2
    1756:	90 e0       	ldi	r25, 0x00	; 0
    1758:	e0 91 7d 01 	lds	r30, 0x017D	; 0x80017d <__flp>
    175c:	f0 91 7e 01 	lds	r31, 0x017E	; 0x80017e <__flp+0x1>
    1760:	20 e0       	ldi	r18, 0x00	; 0
    1762:	30 e0       	ldi	r19, 0x00	; 0
    1764:	a0 e0       	ldi	r26, 0x00	; 0
    1766:	b0 e0       	ldi	r27, 0x00	; 0
    1768:	30 97       	sbiw	r30, 0x00	; 0
    176a:	19 f1       	breq	.+70     	; 0x17b2 <malloc+0x6c>
    176c:	40 81       	ld	r20, Z
    176e:	51 81       	ldd	r21, Z+1	; 0x01
    1770:	02 81       	ldd	r16, Z+2	; 0x02
    1772:	13 81       	ldd	r17, Z+3	; 0x03
    1774:	48 17       	cp	r20, r24
    1776:	59 07       	cpc	r21, r25
    1778:	c8 f0       	brcs	.+50     	; 0x17ac <malloc+0x66>
    177a:	84 17       	cp	r24, r20
    177c:	95 07       	cpc	r25, r21
    177e:	69 f4       	brne	.+26     	; 0x179a <malloc+0x54>
    1780:	10 97       	sbiw	r26, 0x00	; 0
    1782:	31 f0       	breq	.+12     	; 0x1790 <malloc+0x4a>
    1784:	12 96       	adiw	r26, 0x02	; 2
    1786:	0c 93       	st	X, r16
    1788:	12 97       	sbiw	r26, 0x02	; 2
    178a:	13 96       	adiw	r26, 0x03	; 3
    178c:	1c 93       	st	X, r17
    178e:	27 c0       	rjmp	.+78     	; 0x17de <malloc+0x98>
    1790:	00 93 7d 01 	sts	0x017D, r16	; 0x80017d <__flp>
    1794:	10 93 7e 01 	sts	0x017E, r17	; 0x80017e <__flp+0x1>
    1798:	22 c0       	rjmp	.+68     	; 0x17de <malloc+0x98>
    179a:	21 15       	cp	r18, r1
    179c:	31 05       	cpc	r19, r1
    179e:	19 f0       	breq	.+6      	; 0x17a6 <malloc+0x60>
    17a0:	42 17       	cp	r20, r18
    17a2:	53 07       	cpc	r21, r19
    17a4:	18 f4       	brcc	.+6      	; 0x17ac <malloc+0x66>
    17a6:	9a 01       	movw	r18, r20
    17a8:	bd 01       	movw	r22, r26
    17aa:	ef 01       	movw	r28, r30
    17ac:	df 01       	movw	r26, r30
    17ae:	f8 01       	movw	r30, r16
    17b0:	db cf       	rjmp	.-74     	; 0x1768 <malloc+0x22>
    17b2:	21 15       	cp	r18, r1
    17b4:	31 05       	cpc	r19, r1
    17b6:	f9 f0       	breq	.+62     	; 0x17f6 <malloc+0xb0>
    17b8:	28 1b       	sub	r18, r24
    17ba:	39 0b       	sbc	r19, r25
    17bc:	24 30       	cpi	r18, 0x04	; 4
    17be:	31 05       	cpc	r19, r1
    17c0:	80 f4       	brcc	.+32     	; 0x17e2 <malloc+0x9c>
    17c2:	8a 81       	ldd	r24, Y+2	; 0x02
    17c4:	9b 81       	ldd	r25, Y+3	; 0x03
    17c6:	61 15       	cp	r22, r1
    17c8:	71 05       	cpc	r23, r1
    17ca:	21 f0       	breq	.+8      	; 0x17d4 <malloc+0x8e>
    17cc:	fb 01       	movw	r30, r22
    17ce:	93 83       	std	Z+3, r25	; 0x03
    17d0:	82 83       	std	Z+2, r24	; 0x02
    17d2:	04 c0       	rjmp	.+8      	; 0x17dc <malloc+0x96>
    17d4:	90 93 7e 01 	sts	0x017E, r25	; 0x80017e <__flp+0x1>
    17d8:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <__flp>
    17dc:	fe 01       	movw	r30, r28
    17de:	32 96       	adiw	r30, 0x02	; 2
    17e0:	44 c0       	rjmp	.+136    	; 0x186a <malloc+0x124>
    17e2:	fe 01       	movw	r30, r28
    17e4:	e2 0f       	add	r30, r18
    17e6:	f3 1f       	adc	r31, r19
    17e8:	81 93       	st	Z+, r24
    17ea:	91 93       	st	Z+, r25
    17ec:	22 50       	subi	r18, 0x02	; 2
    17ee:	31 09       	sbc	r19, r1
    17f0:	39 83       	std	Y+1, r19	; 0x01
    17f2:	28 83       	st	Y, r18
    17f4:	3a c0       	rjmp	.+116    	; 0x186a <malloc+0x124>
    17f6:	20 91 7b 01 	lds	r18, 0x017B	; 0x80017b <__brkval>
    17fa:	30 91 7c 01 	lds	r19, 0x017C	; 0x80017c <__brkval+0x1>
    17fe:	23 2b       	or	r18, r19
    1800:	41 f4       	brne	.+16     	; 0x1812 <malloc+0xcc>
    1802:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_start>
    1806:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_start+0x1>
    180a:	30 93 7c 01 	sts	0x017C, r19	; 0x80017c <__brkval+0x1>
    180e:	20 93 7b 01 	sts	0x017B, r18	; 0x80017b <__brkval>
    1812:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_end>
    1816:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_end+0x1>
    181a:	21 15       	cp	r18, r1
    181c:	31 05       	cpc	r19, r1
    181e:	41 f4       	brne	.+16     	; 0x1830 <malloc+0xea>
    1820:	2d b7       	in	r18, 0x3d	; 61
    1822:	3e b7       	in	r19, 0x3e	; 62
    1824:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <__malloc_margin>
    1828:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <__malloc_margin+0x1>
    182c:	24 1b       	sub	r18, r20
    182e:	35 0b       	sbc	r19, r21
    1830:	e0 91 7b 01 	lds	r30, 0x017B	; 0x80017b <__brkval>
    1834:	f0 91 7c 01 	lds	r31, 0x017C	; 0x80017c <__brkval+0x1>
    1838:	e2 17       	cp	r30, r18
    183a:	f3 07       	cpc	r31, r19
    183c:	a0 f4       	brcc	.+40     	; 0x1866 <malloc+0x120>
    183e:	2e 1b       	sub	r18, r30
    1840:	3f 0b       	sbc	r19, r31
    1842:	28 17       	cp	r18, r24
    1844:	39 07       	cpc	r19, r25
    1846:	78 f0       	brcs	.+30     	; 0x1866 <malloc+0x120>
    1848:	ac 01       	movw	r20, r24
    184a:	4e 5f       	subi	r20, 0xFE	; 254
    184c:	5f 4f       	sbci	r21, 0xFF	; 255
    184e:	24 17       	cp	r18, r20
    1850:	35 07       	cpc	r19, r21
    1852:	48 f0       	brcs	.+18     	; 0x1866 <malloc+0x120>
    1854:	4e 0f       	add	r20, r30
    1856:	5f 1f       	adc	r21, r31
    1858:	50 93 7c 01 	sts	0x017C, r21	; 0x80017c <__brkval+0x1>
    185c:	40 93 7b 01 	sts	0x017B, r20	; 0x80017b <__brkval>
    1860:	81 93       	st	Z+, r24
    1862:	91 93       	st	Z+, r25
    1864:	02 c0       	rjmp	.+4      	; 0x186a <malloc+0x124>
    1866:	e0 e0       	ldi	r30, 0x00	; 0
    1868:	f0 e0       	ldi	r31, 0x00	; 0
    186a:	cf 01       	movw	r24, r30
    186c:	df 91       	pop	r29
    186e:	cf 91       	pop	r28
    1870:	1f 91       	pop	r17
    1872:	0f 91       	pop	r16
    1874:	08 95       	ret

00001876 <free>:
    1876:	cf 93       	push	r28
    1878:	df 93       	push	r29
    187a:	00 97       	sbiw	r24, 0x00	; 0
    187c:	09 f4       	brne	.+2      	; 0x1880 <free+0xa>
    187e:	81 c0       	rjmp	.+258    	; 0x1982 <free+0x10c>
    1880:	fc 01       	movw	r30, r24
    1882:	32 97       	sbiw	r30, 0x02	; 2
    1884:	13 82       	std	Z+3, r1	; 0x03
    1886:	12 82       	std	Z+2, r1	; 0x02
    1888:	a0 91 7d 01 	lds	r26, 0x017D	; 0x80017d <__flp>
    188c:	b0 91 7e 01 	lds	r27, 0x017E	; 0x80017e <__flp+0x1>
    1890:	10 97       	sbiw	r26, 0x00	; 0
    1892:	81 f4       	brne	.+32     	; 0x18b4 <free+0x3e>
    1894:	20 81       	ld	r18, Z
    1896:	31 81       	ldd	r19, Z+1	; 0x01
    1898:	82 0f       	add	r24, r18
    189a:	93 1f       	adc	r25, r19
    189c:	20 91 7b 01 	lds	r18, 0x017B	; 0x80017b <__brkval>
    18a0:	30 91 7c 01 	lds	r19, 0x017C	; 0x80017c <__brkval+0x1>
    18a4:	28 17       	cp	r18, r24
    18a6:	39 07       	cpc	r19, r25
    18a8:	51 f5       	brne	.+84     	; 0x18fe <free+0x88>
    18aa:	f0 93 7c 01 	sts	0x017C, r31	; 0x80017c <__brkval+0x1>
    18ae:	e0 93 7b 01 	sts	0x017B, r30	; 0x80017b <__brkval>
    18b2:	67 c0       	rjmp	.+206    	; 0x1982 <free+0x10c>
    18b4:	ed 01       	movw	r28, r26
    18b6:	20 e0       	ldi	r18, 0x00	; 0
    18b8:	30 e0       	ldi	r19, 0x00	; 0
    18ba:	ce 17       	cp	r28, r30
    18bc:	df 07       	cpc	r29, r31
    18be:	40 f4       	brcc	.+16     	; 0x18d0 <free+0x5a>
    18c0:	4a 81       	ldd	r20, Y+2	; 0x02
    18c2:	5b 81       	ldd	r21, Y+3	; 0x03
    18c4:	9e 01       	movw	r18, r28
    18c6:	41 15       	cp	r20, r1
    18c8:	51 05       	cpc	r21, r1
    18ca:	f1 f0       	breq	.+60     	; 0x1908 <free+0x92>
    18cc:	ea 01       	movw	r28, r20
    18ce:	f5 cf       	rjmp	.-22     	; 0x18ba <free+0x44>
    18d0:	d3 83       	std	Z+3, r29	; 0x03
    18d2:	c2 83       	std	Z+2, r28	; 0x02
    18d4:	40 81       	ld	r20, Z
    18d6:	51 81       	ldd	r21, Z+1	; 0x01
    18d8:	84 0f       	add	r24, r20
    18da:	95 1f       	adc	r25, r21
    18dc:	c8 17       	cp	r28, r24
    18de:	d9 07       	cpc	r29, r25
    18e0:	59 f4       	brne	.+22     	; 0x18f8 <free+0x82>
    18e2:	88 81       	ld	r24, Y
    18e4:	99 81       	ldd	r25, Y+1	; 0x01
    18e6:	84 0f       	add	r24, r20
    18e8:	95 1f       	adc	r25, r21
    18ea:	02 96       	adiw	r24, 0x02	; 2
    18ec:	91 83       	std	Z+1, r25	; 0x01
    18ee:	80 83       	st	Z, r24
    18f0:	8a 81       	ldd	r24, Y+2	; 0x02
    18f2:	9b 81       	ldd	r25, Y+3	; 0x03
    18f4:	93 83       	std	Z+3, r25	; 0x03
    18f6:	82 83       	std	Z+2, r24	; 0x02
    18f8:	21 15       	cp	r18, r1
    18fa:	31 05       	cpc	r19, r1
    18fc:	29 f4       	brne	.+10     	; 0x1908 <free+0x92>
    18fe:	f0 93 7e 01 	sts	0x017E, r31	; 0x80017e <__flp+0x1>
    1902:	e0 93 7d 01 	sts	0x017D, r30	; 0x80017d <__flp>
    1906:	3d c0       	rjmp	.+122    	; 0x1982 <free+0x10c>
    1908:	e9 01       	movw	r28, r18
    190a:	fb 83       	std	Y+3, r31	; 0x03
    190c:	ea 83       	std	Y+2, r30	; 0x02
    190e:	49 91       	ld	r20, Y+
    1910:	59 91       	ld	r21, Y+
    1912:	c4 0f       	add	r28, r20
    1914:	d5 1f       	adc	r29, r21
    1916:	ec 17       	cp	r30, r28
    1918:	fd 07       	cpc	r31, r29
    191a:	61 f4       	brne	.+24     	; 0x1934 <free+0xbe>
    191c:	80 81       	ld	r24, Z
    191e:	91 81       	ldd	r25, Z+1	; 0x01
    1920:	84 0f       	add	r24, r20
    1922:	95 1f       	adc	r25, r21
    1924:	02 96       	adiw	r24, 0x02	; 2
    1926:	e9 01       	movw	r28, r18
    1928:	99 83       	std	Y+1, r25	; 0x01
    192a:	88 83       	st	Y, r24
    192c:	82 81       	ldd	r24, Z+2	; 0x02
    192e:	93 81       	ldd	r25, Z+3	; 0x03
    1930:	9b 83       	std	Y+3, r25	; 0x03
    1932:	8a 83       	std	Y+2, r24	; 0x02
    1934:	e0 e0       	ldi	r30, 0x00	; 0
    1936:	f0 e0       	ldi	r31, 0x00	; 0
    1938:	12 96       	adiw	r26, 0x02	; 2
    193a:	8d 91       	ld	r24, X+
    193c:	9c 91       	ld	r25, X
    193e:	13 97       	sbiw	r26, 0x03	; 3
    1940:	00 97       	sbiw	r24, 0x00	; 0
    1942:	19 f0       	breq	.+6      	; 0x194a <free+0xd4>
    1944:	fd 01       	movw	r30, r26
    1946:	dc 01       	movw	r26, r24
    1948:	f7 cf       	rjmp	.-18     	; 0x1938 <free+0xc2>
    194a:	8d 91       	ld	r24, X+
    194c:	9c 91       	ld	r25, X
    194e:	11 97       	sbiw	r26, 0x01	; 1
    1950:	9d 01       	movw	r18, r26
    1952:	2e 5f       	subi	r18, 0xFE	; 254
    1954:	3f 4f       	sbci	r19, 0xFF	; 255
    1956:	82 0f       	add	r24, r18
    1958:	93 1f       	adc	r25, r19
    195a:	20 91 7b 01 	lds	r18, 0x017B	; 0x80017b <__brkval>
    195e:	30 91 7c 01 	lds	r19, 0x017C	; 0x80017c <__brkval+0x1>
    1962:	28 17       	cp	r18, r24
    1964:	39 07       	cpc	r19, r25
    1966:	69 f4       	brne	.+26     	; 0x1982 <free+0x10c>
    1968:	30 97       	sbiw	r30, 0x00	; 0
    196a:	29 f4       	brne	.+10     	; 0x1976 <free+0x100>
    196c:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <__flp+0x1>
    1970:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <__flp>
    1974:	02 c0       	rjmp	.+4      	; 0x197a <free+0x104>
    1976:	13 82       	std	Z+3, r1	; 0x03
    1978:	12 82       	std	Z+2, r1	; 0x02
    197a:	b0 93 7c 01 	sts	0x017C, r27	; 0x80017c <__brkval+0x1>
    197e:	a0 93 7b 01 	sts	0x017B, r26	; 0x80017b <__brkval>
    1982:	df 91       	pop	r29
    1984:	cf 91       	pop	r28
    1986:	08 95       	ret

00001988 <strncat>:
    1988:	fb 01       	movw	r30, r22
    198a:	dc 01       	movw	r26, r24
    198c:	0d 90       	ld	r0, X+
    198e:	00 20       	and	r0, r0
    1990:	e9 f7       	brne	.-6      	; 0x198c <strncat+0x4>
    1992:	11 97       	sbiw	r26, 0x01	; 1
    1994:	41 50       	subi	r20, 0x01	; 1
    1996:	50 40       	sbci	r21, 0x00	; 0
    1998:	28 f0       	brcs	.+10     	; 0x19a4 <strncat+0x1c>
    199a:	01 90       	ld	r0, Z+
    199c:	00 20       	and	r0, r0
    199e:	0d 92       	st	X+, r0
    19a0:	c9 f7       	brne	.-14     	; 0x1994 <strncat+0xc>
    19a2:	08 95       	ret
    19a4:	1c 92       	st	X, r1
    19a6:	08 95       	ret

000019a8 <__do_global_dtors>:
    19a8:	10 e0       	ldi	r17, 0x00	; 0
    19aa:	cd e3       	ldi	r28, 0x3D	; 61
    19ac:	d0 e0       	ldi	r29, 0x00	; 0
    19ae:	04 c0       	rjmp	.+8      	; 0x19b8 <__do_global_dtors+0x10>
    19b0:	fe 01       	movw	r30, r28
    19b2:	0e 94 44 0b 	call	0x1688	; 0x1688 <__tablejump2__>
    19b6:	21 96       	adiw	r28, 0x01	; 1
    19b8:	ce 33       	cpi	r28, 0x3E	; 62
    19ba:	d1 07       	cpc	r29, r17
    19bc:	c9 f7       	brne	.-14     	; 0x19b0 <__do_global_dtors+0x8>
    19be:	f8 94       	cli

000019c0 <__stop_program>:
    19c0:	ff cf       	rjmp	.-2      	; 0x19c0 <__stop_program>
