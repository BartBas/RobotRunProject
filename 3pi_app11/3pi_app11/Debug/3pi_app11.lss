
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00002004  00002098  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002004  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006f  0080013a  0080013a  000020d2  2**0
                  ALLOC
  3 .stab         000059c4  00000000  00000000  000020d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000084be  00000000  00000000  00007a98  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  0000ff56  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000ff98  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000108  00000000  00000000  0000ffd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00001a2e  00000000  00000000  000100e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000c0f  00000000  00000000  00011b0e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00001211  00000000  00000000  0001271d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000002bc  00000000  00000000  00013930  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000788  00000000  00000000  00013bec  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0000091a  00000000  00000000  00014374  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000000e0  00000000  00000000  00014c8e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__dtors_end>
       4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
       8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
       c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      24:	0c 94 3c 08 	jmp	0x1078	; 0x1078 <__vector_9>
      28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	00 09       	sbc	r16, r0

0000006a <__dtors_end>:
      6a:	11 24       	eor	r1, r1
      6c:	1f be       	out	0x3f, r1	; 63
      6e:	cf ef       	ldi	r28, 0xFF	; 255
      70:	d8 e0       	ldi	r29, 0x08	; 8
      72:	de bf       	out	0x3e, r29	; 62
      74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e0       	ldi	r26, 0x00	; 0
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	e4 e0       	ldi	r30, 0x04	; 4
      7e:	f0 e2       	ldi	r31, 0x20	; 32
      80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
      82:	05 90       	lpm	r0, Z+
      84:	0d 92       	st	X+, r0
      86:	aa 33       	cpi	r26, 0x3A	; 58
      88:	b1 07       	cpc	r27, r17
      8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
      8c:	21 e0       	ldi	r18, 0x01	; 1
      8e:	aa e3       	ldi	r26, 0x3A	; 58
      90:	b1 e0       	ldi	r27, 0x01	; 1
      92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
      94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
      96:	a9 3a       	cpi	r26, 0xA9	; 169
      98:	b2 07       	cpc	r27, r18
      9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>
      9c:	0e 94 b5 00 	call	0x16a	; 0x16a <main>
      a0:	0c 94 f5 0f 	jmp	0x1fea	; 0x1fea <__do_global_dtors>

000000a4 <__bad_interrupt>:
      a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <batteryPercentage>:
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
      a8:	0e 94 b0 05 	call	0xb60	; 0xb60 <read_battery_millivolts_3pi>

int batteryPercentage()//Should this function be in main or in display.c or something else?
{
	
	int milliVolts = read_battery_millivolts();
	int batteryPercent = milliVolts/50;
      ac:	62 e3       	ldi	r22, 0x32	; 50
      ae:	70 e0       	ldi	r23, 0x00	; 0
      b0:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <__divmodhi4>
      b4:	cb 01       	movw	r24, r22
	return batteryPercent;
}
      b6:	08 95       	ret

000000b8 <updateDisplay>:

void updateDisplay(int orderPercent, int batteryPercent, robotStates currentState)
{
      b8:	ef 92       	push	r14
      ba:	ff 92       	push	r15
      bc:	0f 93       	push	r16
      be:	1f 93       	push	r17
      c0:	cf 93       	push	r28
      c2:	7c 01       	movw	r14, r24
      c4:	8b 01       	movw	r16, r22
      c6:	c4 2f       	mov	r28, r20
	clear();
      c8:	0e 94 b9 06 	call	0xd72	; 0xd72 <clear>
	lcd_goto_xy(0,0);
      cc:	60 e0       	ldi	r22, 0x00	; 0
      ce:	80 e0       	ldi	r24, 0x00	; 0
      d0:	0e 94 40 07 	call	0xe80	; 0xe80 <lcd_goto_xy>
	print("Task:");
      d4:	83 e2       	ldi	r24, 0x23	; 35
      d6:	91 e0       	ldi	r25, 0x01	; 1
      d8:	0e 94 c8 06 	call	0xd90	; 0xd90 <print>
	print_long(orderPercent);
      dc:	b7 01       	movw	r22, r14
      de:	ff 0c       	add	r15, r15
      e0:	88 0b       	sbc	r24, r24
      e2:	99 0b       	sbc	r25, r25
      e4:	0e 94 1d 07 	call	0xe3a	; 0xe3a <print_long>
	print("%");
      e8:	89 e2       	ldi	r24, 0x29	; 41
      ea:	91 e0       	ldi	r25, 0x01	; 1
      ec:	0e 94 c8 06 	call	0xd90	; 0xd90 <print>
	
	lcd_goto_xy(0,1);
      f0:	61 e0       	ldi	r22, 0x01	; 1
      f2:	80 e0       	ldi	r24, 0x00	; 0
      f4:	0e 94 40 07 	call	0xe80	; 0xe80 <lcd_goto_xy>
	print("Bat:");
      f8:	8b e2       	ldi	r24, 0x2B	; 43
      fa:	91 e0       	ldi	r25, 0x01	; 1
      fc:	0e 94 c8 06 	call	0xd90	; 0xd90 <print>
	print_long(batteryPercent);
     100:	b8 01       	movw	r22, r16
     102:	11 0f       	add	r17, r17
     104:	88 0b       	sbc	r24, r24
     106:	99 0b       	sbc	r25, r25
     108:	0e 94 1d 07 	call	0xe3a	; 0xe3a <print_long>
	print("%");
     10c:	89 e2       	ldi	r24, 0x29	; 41
     10e:	91 e0       	ldi	r25, 0x01	; 1
     110:	0e 94 c8 06 	call	0xd90	; 0xd90 <print>
	switch(currentState)
     114:	c2 30       	cpi	r28, 0x02	; 2
     116:	a9 f0       	breq	.+42     	; 0x142 <updateDisplay+0x8a>
     118:	28 f4       	brcc	.+10     	; 0x124 <updateDisplay+0x6c>
     11a:	cc 23       	and	r28, r28
     11c:	41 f0       	breq	.+16     	; 0x12e <updateDisplay+0x76>
     11e:	c1 30       	cpi	r28, 0x01	; 1
     120:	59 f0       	breq	.+22     	; 0x138 <updateDisplay+0x80>
     122:	1d c0       	rjmp	.+58     	; 0x15e <updateDisplay+0xa6>
     124:	c3 30       	cpi	r28, 0x03	; 3
     126:	91 f0       	breq	.+36     	; 0x14c <updateDisplay+0x94>
     128:	c4 30       	cpi	r28, 0x04	; 4
     12a:	a9 f0       	breq	.+42     	; 0x156 <updateDisplay+0x9e>
     12c:	18 c0       	rjmp	.+48     	; 0x15e <updateDisplay+0xa6>
	{
		case manualControl:
		print("M");//M for Manual
     12e:	80 e3       	ldi	r24, 0x30	; 48
     130:	91 e0       	ldi	r25, 0x01	; 1
     132:	0e 94 c8 06 	call	0xd90	; 0xd90 <print>
		break;
     136:	13 c0       	rjmp	.+38     	; 0x15e <updateDisplay+0xa6>
		case mazeSolver:
		print("P");//P for Parcours
     138:	82 e3       	ldi	r24, 0x32	; 50
     13a:	91 e0       	ldi	r25, 0x01	; 1
     13c:	0e 94 c8 06 	call	0xd90	; 0xd90 <print>
		break;
     140:	0e c0       	rjmp	.+28     	; 0x15e <updateDisplay+0xa6>
		case logicsBot:
		print("O");//O for Order
     142:	84 e3       	ldi	r24, 0x34	; 52
     144:	91 e0       	ldi	r25, 0x01	; 1
     146:	0e 94 c8 06 	call	0xd90	; 0xd90 <print>
		break;
     14a:	09 c0       	rjmp	.+18     	; 0x15e <updateDisplay+0xa6>
		case chargeMode:
		print("C");//C for Charge
     14c:	86 e3       	ldi	r24, 0x36	; 54
     14e:	91 e0       	ldi	r25, 0x01	; 1
     150:	0e 94 c8 06 	call	0xd90	; 0xd90 <print>
		break;
     154:	04 c0       	rjmp	.+8      	; 0x15e <updateDisplay+0xa6>
		case homingMode:
		print("H");//H for Homing
     156:	88 e3       	ldi	r24, 0x38	; 56
     158:	91 e0       	ldi	r25, 0x01	; 1
     15a:	0e 94 c8 06 	call	0xd90	; 0xd90 <print>
		break;
	}
}
     15e:	cf 91       	pop	r28
     160:	1f 91       	pop	r17
     162:	0f 91       	pop	r16
     164:	ff 90       	pop	r15
     166:	ef 90       	pop	r14
     168:	08 95       	ret

0000016a <main>:
     16a:	0e 94 b9 06 	call	0xd72	; 0xd72 <clear>
     16e:	80 ed       	ldi	r24, 0xD0	; 208
     170:	97 e0       	ldi	r25, 0x07	; 7
     172:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <pololu_3pi_init>
     176:	0e 94 c2 00 	call	0x184	; 0x184 <initialize>
     17a:	0e 94 51 04 	call	0x8a2	; 0x8a2 <warehouse>
     17e:	80 e0       	ldi	r24, 0x00	; 0
     180:	90 e0       	ldi	r25, 0x00	; 0
     182:	08 95       	ret

00000184 <initialize>:
		print_character(c);
	}
}

void initialize()
{
     184:	cf 93       	push	r28
     186:	df 93       	push	r29
	unsigned int counter; // used as a simple timer
	
	pololu_3pi_init(2000);
     188:	80 ed       	ldi	r24, 0xD0	; 208
     18a:	97 e0       	ldi	r25, 0x07	; 7
     18c:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <pololu_3pi_init>
	
	while(!button_is_pressed(BUTTON_B)){}	
     190:	80 e1       	ldi	r24, 0x10	; 16
     192:	0e 94 39 08 	call	0x1072	; 0x1072 <button_is_pressed>
     196:	88 23       	and	r24, r24
     198:	d9 f3       	breq	.-10     	; 0x190 <initialize+0xc>
	wait_for_button_release(BUTTON_B);
     19a:	80 e1       	ldi	r24, 0x10	; 16
     19c:	0e 94 25 08 	call	0x104a	; 0x104a <wait_for_button_release>
	delay_ms(1000);
     1a0:	88 ee       	ldi	r24, 0xE8	; 232
     1a2:	93 e0       	ldi	r25, 0x03	; 3
     1a4:	0e 94 84 08 	call	0x1108	; 0x1108 <delay_ms>

	for(counter=0;counter<80;counter++)
     1a8:	c0 e0       	ldi	r28, 0x00	; 0
     1aa:	d0 e0       	ldi	r29, 0x00	; 0
     1ac:	19 c0       	rjmp	.+50     	; 0x1e0 <initialize+0x5c>
	{
		if(counter < 20 || counter >= 60)
     1ae:	ce 01       	movw	r24, r28
     1b0:	44 97       	sbiw	r24, 0x14	; 20
     1b2:	88 97       	sbiw	r24, 0x28	; 40
     1b4:	38 f0       	brcs	.+14     	; 0x1c4 <initialize+0x40>
		set_motors(40,-40);
     1b6:	68 ed       	ldi	r22, 0xD8	; 216
     1b8:	7f ef       	ldi	r23, 0xFF	; 255
     1ba:	88 e2       	ldi	r24, 0x28	; 40
     1bc:	90 e0       	ldi	r25, 0x00	; 0
     1be:	0e 94 f6 07 	call	0xfec	; 0xfec <set_motors>
     1c2:	06 c0       	rjmp	.+12     	; 0x1d0 <initialize+0x4c>
		else
		set_motors(-40,40);
     1c4:	68 e2       	ldi	r22, 0x28	; 40
     1c6:	70 e0       	ldi	r23, 0x00	; 0
     1c8:	88 ed       	ldi	r24, 0xD8	; 216
     1ca:	9f ef       	ldi	r25, 0xFF	; 255
     1cc:	0e 94 f6 07 	call	0xfec	; 0xfec <set_motors>
		calibrate_line_sensors(IR_EMITTERS_ON);
     1d0:	81 e0       	ldi	r24, 0x01	; 1
     1d2:	0e 94 c0 08 	call	0x1180	; 0x1180 <calibrate_line_sensors>
		
		delay_ms(20);
     1d6:	84 e1       	ldi	r24, 0x14	; 20
     1d8:	90 e0       	ldi	r25, 0x00	; 0
     1da:	0e 94 84 08 	call	0x1108	; 0x1108 <delay_ms>
	
	while(!button_is_pressed(BUTTON_B)){}	
	wait_for_button_release(BUTTON_B);
	delay_ms(1000);

	for(counter=0;counter<80;counter++)
     1de:	21 96       	adiw	r28, 0x01	; 1
     1e0:	c0 35       	cpi	r28, 0x50	; 80
     1e2:	d1 05       	cpc	r29, r1
     1e4:	20 f3       	brcs	.-56     	; 0x1ae <initialize+0x2a>
		set_motors(-40,40);
		calibrate_line_sensors(IR_EMITTERS_ON);
		
		delay_ms(20);
	}
	set_motors(0,0);
     1e6:	60 e0       	ldi	r22, 0x00	; 0
     1e8:	70 e0       	ldi	r23, 0x00	; 0
     1ea:	80 e0       	ldi	r24, 0x00	; 0
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	0e 94 f6 07 	call	0xfec	; 0xfec <set_motors>
	
	while(!button_is_pressed(BUTTON_B)){}
     1f2:	80 e1       	ldi	r24, 0x10	; 16
     1f4:	0e 94 39 08 	call	0x1072	; 0x1072 <button_is_pressed>
     1f8:	88 23       	and	r24, r24
     1fa:	d9 f3       	breq	.-10     	; 0x1f2 <initialize+0x6e>
	wait_for_button_release(BUTTON_B);
     1fc:	80 e1       	ldi	r24, 0x10	; 16
     1fe:	0e 94 25 08 	call	0x104a	; 0x104a <wait_for_button_release>
	
	clear();
     202:	0e 94 b9 06 	call	0xd72	; 0xd72 <clear>
}
     206:	df 91       	pop	r29
     208:	cf 91       	pop	r28
     20a:	08 95       	ret

0000020c <inch>:

void inch(){
	set_motors(50,50);
     20c:	62 e3       	ldi	r22, 0x32	; 50
     20e:	70 e0       	ldi	r23, 0x00	; 0
     210:	82 e3       	ldi	r24, 0x32	; 50
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	0e 94 f6 07 	call	0xfec	; 0xfec <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     218:	88 ec       	ldi	r24, 0xC8	; 200
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	0e 94 84 08 	call	0x1108	; 0x1108 <delay_ms>
	delay(200);
	set_motors(0,0);
     220:	60 e0       	ldi	r22, 0x00	; 0
     222:	70 e0       	ldi	r23, 0x00	; 0
     224:	80 e0       	ldi	r24, 0x00	; 0
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	0e 94 f6 07 	call	0xfec	; 0xfec <set_motors>
     22c:	08 95       	ret

0000022e <motorControl>:
		
	}
}


void motorControl(char x){
     22e:	cf 93       	push	r28
     230:	c8 2f       	mov	r28, r24
	read_line(sensors,IR_EMITTERS_ON);
     232:	61 e0       	ldi	r22, 0x01	; 1
     234:	8b e9       	ldi	r24, 0x9B	; 155
     236:	91 e0       	ldi	r25, 0x01	; 1
     238:	0e 94 c6 08 	call	0x118c	; 0x118c <read_line>
	
	if(x == 'N')
     23c:	ce 34       	cpi	r28, 0x4E	; 78
     23e:	39 f4       	brne	.+14     	; 0x24e <motorControl+0x20>
	set_motors(0,0);
     240:	60 e0       	ldi	r22, 0x00	; 0
     242:	70 e0       	ldi	r23, 0x00	; 0
     244:	80 e0       	ldi	r24, 0x00	; 0
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	0e 94 f6 07 	call	0xfec	; 0xfec <set_motors>
     24c:	b1 c0       	rjmp	.+354    	; 0x3b0 <motorControl+0x182>
	
	
	else if(x == 'L'){										//turn left
     24e:	cc 34       	cpi	r28, 0x4C	; 76
     250:	09 f5       	brne	.+66     	; 0x294 <motorControl+0x66>
		set_motors(-50,50);
     252:	62 e3       	ldi	r22, 0x32	; 50
     254:	70 e0       	ldi	r23, 0x00	; 0
     256:	8e ec       	ldi	r24, 0xCE	; 206
     258:	9f ef       	ldi	r25, 0xFF	; 255
     25a:	0e 94 f6 07 	call	0xfec	; 0xfec <set_motors>
		while (sensors[2] >=500){
     25e:	05 c0       	rjmp	.+10     	; 0x26a <motorControl+0x3c>
			read_line(sensors,IR_EMITTERS_ON);
     260:	61 e0       	ldi	r22, 0x01	; 1
     262:	8b e9       	ldi	r24, 0x9B	; 155
     264:	91 e0       	ldi	r25, 0x01	; 1
     266:	0e 94 c6 08 	call	0x118c	; 0x118c <read_line>
	set_motors(0,0);
	
	
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
     26a:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     26e:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     272:	84 3f       	cpi	r24, 0xF4	; 244
     274:	91 40       	sbci	r25, 0x01	; 1
     276:	a0 f7       	brcc	.-24     	; 0x260 <motorControl+0x32>
     278:	05 c0       	rjmp	.+10     	; 0x284 <motorControl+0x56>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     27a:	61 e0       	ldi	r22, 0x01	; 1
     27c:	8b e9       	ldi	r24, 0x9B	; 155
     27e:	91 e0       	ldi	r25, 0x01	; 1
     280:	0e 94 c6 08 	call	0x118c	; 0x118c <read_line>
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     284:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     288:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     28c:	85 3f       	cpi	r24, 0xF5	; 245
     28e:	91 40       	sbci	r25, 0x01	; 1
     290:	a0 f3       	brcs	.-24     	; 0x27a <motorControl+0x4c>
     292:	8e c0       	rjmp	.+284    	; 0x3b0 <motorControl+0x182>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'R'){									//turn right
     294:	c2 35       	cpi	r28, 0x52	; 82
     296:	09 f5       	brne	.+66     	; 0x2da <motorControl+0xac>
		set_motors(50,-50);
     298:	6e ec       	ldi	r22, 0xCE	; 206
     29a:	7f ef       	ldi	r23, 0xFF	; 255
     29c:	82 e3       	ldi	r24, 0x32	; 50
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	0e 94 f6 07 	call	0xfec	; 0xfec <set_motors>
		while (sensors[2] >=500){
     2a4:	05 c0       	rjmp	.+10     	; 0x2b0 <motorControl+0x82>
			read_line(sensors,IR_EMITTERS_ON);
     2a6:	61 e0       	ldi	r22, 0x01	; 1
     2a8:	8b e9       	ldi	r24, 0x9B	; 155
     2aa:	91 e0       	ldi	r25, 0x01	; 1
     2ac:	0e 94 c6 08 	call	0x118c	; 0x118c <read_line>
		}
	}
	
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
     2b0:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     2b4:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     2b8:	84 3f       	cpi	r24, 0xF4	; 244
     2ba:	91 40       	sbci	r25, 0x01	; 1
     2bc:	a0 f7       	brcc	.-24     	; 0x2a6 <motorControl+0x78>
     2be:	05 c0       	rjmp	.+10     	; 0x2ca <motorControl+0x9c>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     2c0:	61 e0       	ldi	r22, 0x01	; 1
     2c2:	8b e9       	ldi	r24, 0x9B	; 155
     2c4:	91 e0       	ldi	r25, 0x01	; 1
     2c6:	0e 94 c6 08 	call	0x118c	; 0x118c <read_line>
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     2ca:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     2ce:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     2d2:	85 3f       	cpi	r24, 0xF5	; 245
     2d4:	91 40       	sbci	r25, 0x01	; 1
     2d6:	a0 f3       	brcs	.-24     	; 0x2c0 <motorControl+0x92>
     2d8:	6b c0       	rjmp	.+214    	; 0x3b0 <motorControl+0x182>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'S'){									//drive straight and corrects the adjusment of the robot if it aint straight
     2da:	c3 35       	cpi	r28, 0x53	; 83
     2dc:	89 f5       	brne	.+98     	; 0x340 <motorControl+0x112>
		set_motors(50,50);
     2de:	62 e3       	ldi	r22, 0x32	; 50
     2e0:	70 e0       	ldi	r23, 0x00	; 0
     2e2:	82 e3       	ldi	r24, 0x32	; 50
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	0e 94 f6 07 	call	0xfec	; 0xfec <set_motors>
		
		if (sensors[3] <=400  && sensors[4] >=400 )
     2ea:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <sensors+0x6>
     2ee:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <sensors+0x7>
     2f2:	81 39       	cpi	r24, 0x91	; 145
     2f4:	91 40       	sbci	r25, 0x01	; 1
     2f6:	68 f4       	brcc	.+26     	; 0x312 <motorControl+0xe4>
     2f8:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <sensors+0x8>
     2fc:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <sensors+0x9>
     300:	80 39       	cpi	r24, 0x90	; 144
     302:	91 40       	sbci	r25, 0x01	; 1
     304:	30 f0       	brcs	.+12     	; 0x312 <motorControl+0xe4>
		set_motors(100,40);
     306:	68 e2       	ldi	r22, 0x28	; 40
     308:	70 e0       	ldi	r23, 0x00	; 0
     30a:	84 e6       	ldi	r24, 0x64	; 100
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	0e 94 f6 07 	call	0xfec	; 0xfec <set_motors>
		if (sensors[1] <=400 && sensors[0] >=400  )
     312:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     316:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     31a:	81 39       	cpi	r24, 0x91	; 145
     31c:	91 40       	sbci	r25, 0x01	; 1
     31e:	08 f0       	brcs	.+2      	; 0x322 <motorControl+0xf4>
     320:	47 c0       	rjmp	.+142    	; 0x3b0 <motorControl+0x182>
     322:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <sensors>
     326:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <sensors+0x1>
     32a:	80 39       	cpi	r24, 0x90	; 144
     32c:	91 40       	sbci	r25, 0x01	; 1
     32e:	08 f4       	brcc	.+2      	; 0x332 <motorControl+0x104>
     330:	3f c0       	rjmp	.+126    	; 0x3b0 <motorControl+0x182>
		set_motors(40,100);
     332:	64 e6       	ldi	r22, 0x64	; 100
     334:	70 e0       	ldi	r23, 0x00	; 0
     336:	88 e2       	ldi	r24, 0x28	; 40
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	0e 94 f6 07 	call	0xfec	; 0xfec <set_motors>
     33e:	38 c0       	rjmp	.+112    	; 0x3b0 <motorControl+0x182>
	}
	
	else if(x == 'B'){									// reverse
     340:	c2 34       	cpi	r28, 0x42	; 66
     342:	09 f5       	brne	.+66     	; 0x386 <motorControl+0x158>
		set_motors(-50,-50);
     344:	6e ec       	ldi	r22, 0xCE	; 206
     346:	7f ef       	ldi	r23, 0xFF	; 255
     348:	8e ec       	ldi	r24, 0xCE	; 206
     34a:	9f ef       	ldi	r25, 0xFF	; 255
     34c:	0e 94 f6 07 	call	0xfec	; 0xfec <set_motors>
		if (sensors[3] >=400)
     350:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <sensors+0x6>
     354:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <sensors+0x7>
     358:	80 39       	cpi	r24, 0x90	; 144
     35a:	91 40       	sbci	r25, 0x01	; 1
     35c:	30 f0       	brcs	.+12     	; 0x36a <motorControl+0x13c>
		set_motors(-50,-55);
     35e:	69 ec       	ldi	r22, 0xC9	; 201
     360:	7f ef       	ldi	r23, 0xFF	; 255
     362:	8e ec       	ldi	r24, 0xCE	; 206
     364:	9f ef       	ldi	r25, 0xFF	; 255
     366:	0e 94 f6 07 	call	0xfec	; 0xfec <set_motors>
		if (sensors[1] >=400)
     36a:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     36e:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     372:	80 39       	cpi	r24, 0x90	; 144
     374:	91 40       	sbci	r25, 0x01	; 1
     376:	e0 f0       	brcs	.+56     	; 0x3b0 <motorControl+0x182>
		set_motors(-55,-50);
     378:	6e ec       	ldi	r22, 0xCE	; 206
     37a:	7f ef       	ldi	r23, 0xFF	; 255
     37c:	89 ec       	ldi	r24, 0xC9	; 201
     37e:	9f ef       	ldi	r25, 0xFF	; 255
     380:	0e 94 f6 07 	call	0xfec	; 0xfec <set_motors>
     384:	15 c0       	rjmp	.+42     	; 0x3b0 <motorControl+0x182>
	}
	else if(x == 'T'){									// Turn around
     386:	c4 35       	cpi	r28, 0x54	; 84
     388:	99 f4       	brne	.+38     	; 0x3b0 <motorControl+0x182>
		set_motors(-75,75);
     38a:	6b e4       	ldi	r22, 0x4B	; 75
     38c:	70 e0       	ldi	r23, 0x00	; 0
     38e:	85 eb       	ldi	r24, 0xB5	; 181
     390:	9f ef       	ldi	r25, 0xFF	; 255
     392:	0e 94 f6 07 	call	0xfec	; 0xfec <set_motors>
		while (sensors[2] >=500){
     396:	05 c0       	rjmp	.+10     	; 0x3a2 <motorControl+0x174>
			read_line(sensors,IR_EMITTERS_ON);
     398:	61 e0       	ldi	r22, 0x01	; 1
     39a:	8b e9       	ldi	r24, 0x9B	; 155
     39c:	91 e0       	ldi	r25, 0x01	; 1
     39e:	0e 94 c6 08 	call	0x118c	; 0x118c <read_line>
		if (sensors[1] >=400)
		set_motors(-55,-50);
	}
	else if(x == 'T'){									// Turn around
		set_motors(-75,75);
		while (sensors[2] >=500){
     3a2:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     3a6:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     3aa:	84 3f       	cpi	r24, 0xF4	; 244
     3ac:	91 40       	sbci	r25, 0x01	; 1
     3ae:	a0 f7       	brcc	.-24     	; 0x398 <motorControl+0x16a>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
     3b0:	cf 91       	pop	r28
     3b2:	08 95       	ret

000003b4 <lineType>:
	set_motors(0,0);
}

char lineType(){																											// function that returns the type of junction it detects
	while(1){																												// >= 500 = black line		<=500 = white
		read_line(sensors,IR_EMITTERS_ON);
     3b4:	61 e0       	ldi	r22, 0x01	; 1
     3b6:	8b e9       	ldi	r24, 0x9B	; 155
     3b8:	91 e0       	ldi	r25, 0x01	; 1
     3ba:	0e 94 c6 08 	call	0x118c	; 0x118c <read_line>
		
		if (sensors[1] >=500 && sensors[3] >= 500){																			// this checks if its a X junction or a T junction
     3be:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     3c2:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     3c6:	84 3f       	cpi	r24, 0xF4	; 244
     3c8:	21 e0       	ldi	r18, 0x01	; 1
     3ca:	92 07       	cpc	r25, r18
     3cc:	c0 f0       	brcs	.+48     	; 0x3fe <lineType+0x4a>
     3ce:	20 91 a1 01 	lds	r18, 0x01A1	; 0x8001a1 <sensors+0x6>
     3d2:	30 91 a2 01 	lds	r19, 0x01A2	; 0x8001a2 <sensors+0x7>
     3d6:	24 3f       	cpi	r18, 0xF4	; 244
     3d8:	31 40       	sbci	r19, 0x01	; 1
     3da:	88 f0       	brcs	.+34     	; 0x3fe <lineType+0x4a>
			inch();
     3dc:	0e 94 06 01 	call	0x20c	; 0x20c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     3e0:	61 e0       	ldi	r22, 0x01	; 1
     3e2:	8b e9       	ldi	r24, 0x9B	; 155
     3e4:	91 e0       	ldi	r25, 0x01	; 1
     3e6:	0e 94 c6 08 	call	0x118c	; 0x118c <read_line>
			
			if (sensors[2] >=500)
     3ea:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     3ee:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     3f2:	84 3f       	cpi	r24, 0xF4	; 244
     3f4:	91 40       	sbci	r25, 0x01	; 1
     3f6:	08 f4       	brcc	.+2      	; 0x3fa <lineType+0x46>
     3f8:	90 c0       	rjmp	.+288    	; 0x51a <__EEPROM_REGION_LENGTH__+0x11a>
			return X_junction;
     3fa:	88 e0       	ldi	r24, 0x08	; 8
     3fc:	08 95       	ret
			else
			return T_junction;
		}
		
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
     3fe:	84 3f       	cpi	r24, 0xF4	; 244
     400:	21 e0       	ldi	r18, 0x01	; 1
     402:	92 07       	cpc	r25, r18
     404:	00 f1       	brcs	.+64     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     406:	20 91 9b 01 	lds	r18, 0x019B	; 0x80019b <sensors>
     40a:	30 91 9c 01 	lds	r19, 0x019C	; 0x80019c <sensors+0x1>
     40e:	24 3f       	cpi	r18, 0xF4	; 244
     410:	31 40       	sbci	r19, 0x01	; 1
     412:	c8 f0       	brcs	.+50     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
			inch();
     414:	0e 94 06 01 	call	0x20c	; 0x20c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     418:	61 e0       	ldi	r22, 0x01	; 1
     41a:	8b e9       	ldi	r24, 0x9B	; 155
     41c:	91 e0       	ldi	r25, 0x01	; 1
     41e:	0e 94 c6 08 	call	0x118c	; 0x118c <read_line>
			
			if (sensors[2] >= 500 || sensors[3] >=500)
     422:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     426:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     42a:	84 3f       	cpi	r24, 0xF4	; 244
     42c:	91 40       	sbci	r25, 0x01	; 1
     42e:	08 f0       	brcs	.+2      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     430:	76 c0       	rjmp	.+236    	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
     432:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <sensors+0x6>
     436:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <sensors+0x7>
     43a:	84 3f       	cpi	r24, 0xF4	; 244
     43c:	91 40       	sbci	r25, 0x01	; 1
     43e:	08 f4       	brcc	.+2      	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
     440:	70 c0       	rjmp	.+224    	; 0x522 <__EEPROM_REGION_LENGTH__+0x122>
			return Straight_left_junction;
     442:	86 e0       	ldi	r24, 0x06	; 6
     444:	08 95       	ret
			else
			return Left_corner;
		}
		
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
     446:	40 91 a1 01 	lds	r20, 0x01A1	; 0x8001a1 <sensors+0x6>
     44a:	50 91 a2 01 	lds	r21, 0x01A2	; 0x8001a2 <sensors+0x7>
     44e:	44 3f       	cpi	r20, 0xF4	; 244
     450:	61 e0       	ldi	r22, 0x01	; 1
     452:	56 07       	cpc	r21, r22
     454:	00 f1       	brcs	.+64     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
     456:	20 91 a3 01 	lds	r18, 0x01A3	; 0x8001a3 <sensors+0x8>
     45a:	30 91 a4 01 	lds	r19, 0x01A4	; 0x8001a4 <sensors+0x9>
     45e:	24 3f       	cpi	r18, 0xF4	; 244
     460:	31 40       	sbci	r19, 0x01	; 1
     462:	c8 f0       	brcs	.+50     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
			inch();
     464:	0e 94 06 01 	call	0x20c	; 0x20c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     468:	61 e0       	ldi	r22, 0x01	; 1
     46a:	8b e9       	ldi	r24, 0x9B	; 155
     46c:	91 e0       	ldi	r25, 0x01	; 1
     46e:	0e 94 c6 08 	call	0x118c	; 0x118c <read_line>
			
			if (sensors[2] >= 500 || sensors[1] >=500)
     472:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     476:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     47a:	84 3f       	cpi	r24, 0xF4	; 244
     47c:	91 40       	sbci	r25, 0x01	; 1
     47e:	08 f0       	brcs	.+2      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
     480:	52 c0       	rjmp	.+164    	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
     482:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     486:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     48a:	84 3f       	cpi	r24, 0xF4	; 244
     48c:	91 40       	sbci	r25, 0x01	; 1
     48e:	08 f4       	brcc	.+2      	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
     490:	4c c0       	rjmp	.+152    	; 0x52a <__EEPROM_REGION_LENGTH__+0x12a>
			return Straight_right_junction;
     492:	85 e0       	ldi	r24, 0x05	; 5
     494:	08 95       	ret
			else
			return Right_corner;
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
     496:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <sensors+0x4>
     49a:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <sensors+0x5>
     49e:	29 3c       	cpi	r18, 0xC9	; 201
     4a0:	31 05       	cpc	r19, r1
     4a2:	08 f4       	brcc	.+2      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
     4a4:	44 c0       	rjmp	.+136    	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
			return Line_end;
		}

		
		else if (sensors[2] >=500){
     4a6:	24 3f       	cpi	r18, 0xF4	; 244
     4a8:	61 e0       	ldi	r22, 0x01	; 1
     4aa:	36 07       	cpc	r19, r22
     4ac:	08 f4       	brcc	.+2      	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
     4ae:	82 cf       	rjmp	.-252    	; 0x3b4 <lineType>
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
     4b0:	24 3f       	cpi	r18, 0xF4	; 244
     4b2:	61 e0       	ldi	r22, 0x01	; 1
     4b4:	36 07       	cpc	r19, r22
     4b6:	e8 f1       	brcs	.+122    	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
     4b8:	45 3f       	cpi	r20, 0xF5	; 245
     4ba:	51 40       	sbci	r21, 0x01	; 1
     4bc:	e0 f5       	brcc	.+120    	; 0x536 <__EEPROM_REGION_LENGTH__+0x136>
     4be:	40 91 a3 01 	lds	r20, 0x01A3	; 0x8001a3 <sensors+0x8>
     4c2:	50 91 a4 01 	lds	r21, 0x01A4	; 0x8001a4 <sensors+0x9>
     4c6:	44 3f       	cpi	r20, 0xF4	; 244
     4c8:	51 40       	sbci	r21, 0x01	; 1
     4ca:	b8 f1       	brcs	.+110    	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
     4cc:	40 91 9b 01 	lds	r20, 0x019B	; 0x80019b <sensors>
     4d0:	50 91 9c 01 	lds	r21, 0x019C	; 0x80019c <sensors+0x1>
     4d4:	44 3f       	cpi	r20, 0xF4	; 244
     4d6:	51 40       	sbci	r21, 0x01	; 1
     4d8:	90 f1       	brcs	.+100    	; 0x53e <__EEPROM_REGION_LENGTH__+0x13e>
     4da:	85 3f       	cpi	r24, 0xF5	; 245
     4dc:	91 40       	sbci	r25, 0x01	; 1
     4de:	88 f5       	brcc	.+98     	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
     4e0:	24 3f       	cpi	r18, 0xF4	; 244
     4e2:	31 40       	sbci	r19, 0x01	; 1
     4e4:	50 f4       	brcc	.+20     	; 0x4fa <__EEPROM_REGION_LENGTH__+0xfa>
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
			}
			else
			return Straight;																						// check if its straight without any corners
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	08 95       	ret

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
					read_line(sensors,IR_EMITTERS_ON);
     4ea:	61 e0       	ldi	r22, 0x01	; 1
     4ec:	8b e9       	ldi	r24, 0x9B	; 155
     4ee:	91 e0       	ldi	r25, 0x01	; 1
     4f0:	0e 94 c6 08 	call	0x118c	; 0x118c <read_line>
					motorControl('S');
     4f4:	83 e5       	ldi	r24, 0x53	; 83
     4f6:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
		}

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
     4fa:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <sensors+0x8>
     4fe:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <sensors+0x9>
     502:	80 39       	cpi	r24, 0x90	; 144
     504:	91 40       	sbci	r25, 0x01	; 1
     506:	88 f7       	brcc	.-30     	; 0x4ea <__EEPROM_REGION_LENGTH__+0xea>
     508:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <sensors>
     50c:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <sensors+0x1>
     510:	80 39       	cpi	r24, 0x90	; 144
     512:	91 40       	sbci	r25, 0x01	; 1
     514:	50 f7       	brcc	.-44     	; 0x4ea <__EEPROM_REGION_LENGTH__+0xea>
					read_line(sensors,IR_EMITTERS_ON);
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
     516:	82 e0       	ldi	r24, 0x02	; 2
     518:	08 95       	ret
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >=500)
			return X_junction;
			else
			return T_junction;
     51a:	87 e0       	ldi	r24, 0x07	; 7
     51c:	08 95       	ret
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[3] >=500)
			return Straight_left_junction;
     51e:	86 e0       	ldi	r24, 0x06	; 6
     520:	08 95       	ret
			else
			return Left_corner;
     522:	83 e0       	ldi	r24, 0x03	; 3
     524:	08 95       	ret
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[1] >=500)
			return Straight_right_junction;
     526:	85 e0       	ldi	r24, 0x05	; 5
     528:	08 95       	ret
			else
			return Right_corner;
     52a:	84 e0       	ldi	r24, 0x04	; 4
     52c:	08 95       	ret
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
			return Line_end;
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	08 95       	ret
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
			}
			else
			return Straight;																						// check if its straight without any corners
     532:	80 e0       	ldi	r24, 0x00	; 0
     534:	08 95       	ret
     536:	80 e0       	ldi	r24, 0x00	; 0
     538:	08 95       	ret
     53a:	80 e0       	ldi	r24, 0x00	; 0
     53c:	08 95       	ret
     53e:	80 e0       	ldi	r24, 0x00	; 0
     540:	08 95       	ret
     542:	80 e0       	ldi	r24, 0x00	; 0
			
		}
		
	}
}
     544:	08 95       	ret

00000546 <swap>:
     546:	fc 01       	movw	r30, r24
     548:	20 81       	ld	r18, Z
     54a:	31 81       	ldd	r19, Z+1	; 0x01
     54c:	fb 01       	movw	r30, r22
     54e:	40 81       	ld	r20, Z
     550:	51 81       	ldd	r21, Z+1	; 0x01
     552:	fc 01       	movw	r30, r24
     554:	51 83       	std	Z+1, r21	; 0x01
     556:	40 83       	st	Z, r20
     558:	fb 01       	movw	r30, r22
     55a:	31 83       	std	Z+1, r19	; 0x01
     55c:	20 83       	st	Z, r18
     55e:	08 95       	ret

00000560 <bubbleSort>:
     560:	6f 92       	push	r6
     562:	7f 92       	push	r7
     564:	8f 92       	push	r8
     566:	9f 92       	push	r9
     568:	af 92       	push	r10
     56a:	bf 92       	push	r11
     56c:	cf 92       	push	r12
     56e:	df 92       	push	r13
     570:	ef 92       	push	r14
     572:	ff 92       	push	r15
     574:	0f 93       	push	r16
     576:	1f 93       	push	r17
     578:	cf 93       	push	r28
     57a:	df 93       	push	r29
     57c:	6c 01       	movw	r12, r24
     57e:	3b 01       	movw	r6, r22
     580:	4a 01       	movw	r8, r20
     582:	a1 2c       	mov	r10, r1
     584:	b1 2c       	mov	r11, r1
     586:	30 c0       	rjmp	.+96     	; 0x5e8 <bubbleSort+0x88>
     588:	7e 01       	movw	r14, r28
     58a:	ee 0c       	add	r14, r14
     58c:	ff 1c       	adc	r15, r15
     58e:	f6 01       	movw	r30, r12
     590:	ee 0d       	add	r30, r14
     592:	ff 1d       	adc	r31, r15
     594:	20 81       	ld	r18, Z
     596:	31 81       	ldd	r19, Z+1	; 0x01
     598:	8e 01       	movw	r16, r28
     59a:	0f 5f       	subi	r16, 0xFF	; 255
     59c:	1f 4f       	sbci	r17, 0xFF	; 255
     59e:	00 0f       	add	r16, r16
     5a0:	11 1f       	adc	r17, r17
     5a2:	d6 01       	movw	r26, r12
     5a4:	a0 0f       	add	r26, r16
     5a6:	b1 1f       	adc	r27, r17
     5a8:	8d 91       	ld	r24, X+
     5aa:	9c 91       	ld	r25, X
     5ac:	11 97       	sbiw	r26, 0x01	; 1
     5ae:	82 17       	cp	r24, r18
     5b0:	93 07       	cpc	r25, r19
     5b2:	64 f4       	brge	.+24     	; 0x5cc <bubbleSort+0x6c>
     5b4:	bd 01       	movw	r22, r26
     5b6:	cf 01       	movw	r24, r30
     5b8:	0e 94 a3 02 	call	0x546	; 0x546 <swap>
     5bc:	b3 01       	movw	r22, r6
     5be:	60 0f       	add	r22, r16
     5c0:	71 1f       	adc	r23, r17
     5c2:	c3 01       	movw	r24, r6
     5c4:	8e 0d       	add	r24, r14
     5c6:	9f 1d       	adc	r25, r15
     5c8:	0e 94 a3 02 	call	0x546	; 0x546 <swap>
     5cc:	21 96       	adiw	r28, 0x01	; 1
     5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <bubbleSort+0x74>
     5d0:	c0 e0       	ldi	r28, 0x00	; 0
     5d2:	d0 e0       	ldi	r29, 0x00	; 0
     5d4:	c4 01       	movw	r24, r8
     5d6:	8a 19       	sub	r24, r10
     5d8:	9b 09       	sbc	r25, r11
     5da:	01 97       	sbiw	r24, 0x01	; 1
     5dc:	c8 17       	cp	r28, r24
     5de:	d9 07       	cpc	r29, r25
     5e0:	9c f2       	brlt	.-90     	; 0x588 <bubbleSort+0x28>
     5e2:	8f ef       	ldi	r24, 0xFF	; 255
     5e4:	a8 1a       	sub	r10, r24
     5e6:	b8 0a       	sbc	r11, r24
     5e8:	c4 01       	movw	r24, r8
     5ea:	01 97       	sbiw	r24, 0x01	; 1
     5ec:	a8 16       	cp	r10, r24
     5ee:	b9 06       	cpc	r11, r25
     5f0:	7c f3       	brlt	.-34     	; 0x5d0 <bubbleSort+0x70>
     5f2:	df 91       	pop	r29
     5f4:	cf 91       	pop	r28
     5f6:	1f 91       	pop	r17
     5f8:	0f 91       	pop	r16
     5fa:	ff 90       	pop	r15
     5fc:	ef 90       	pop	r14
     5fe:	df 90       	pop	r13
     600:	cf 90       	pop	r12
     602:	bf 90       	pop	r11
     604:	af 90       	pop	r10
     606:	9f 90       	pop	r9
     608:	8f 90       	pop	r8
     60a:	7f 90       	pop	r7
     60c:	6f 90       	pop	r6
     60e:	08 95       	ret

00000610 <drive>:
     610:	0f 93       	push	r16
     612:	1f 93       	push	r17
     614:	cf 93       	push	r28
     616:	df 93       	push	r29
     618:	83 e5       	ldi	r24, 0x53	; 83
     61a:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     61e:	01 e0       	ldi	r16, 0x01	; 1
     620:	10 e0       	ldi	r17, 0x00	; 0
     622:	1b c0       	rjmp	.+54     	; 0x65a <drive+0x4a>
     624:	0e 94 da 01 	call	0x3b4	; 0x3b4 <lineType>
     628:	ec 01       	movw	r28, r24
     62a:	0e 94 b9 06 	call	0xd72	; 0xd72 <clear>
     62e:	ce 01       	movw	r24, r28
     630:	99 27       	eor	r25, r25
     632:	82 30       	cpi	r24, 0x02	; 2
     634:	91 05       	cpc	r25, r1
     636:	39 f0       	breq	.+14     	; 0x646 <drive+0x36>
     638:	1c f4       	brge	.+6      	; 0x640 <drive+0x30>
     63a:	89 2b       	or	r24, r25
     63c:	41 f0       	breq	.+16     	; 0x64e <drive+0x3e>
     63e:	0d c0       	rjmp	.+26     	; 0x65a <drive+0x4a>
     640:	09 97       	sbiw	r24, 0x09	; 9
     642:	4c f0       	brlt	.+18     	; 0x656 <drive+0x46>
     644:	0a c0       	rjmp	.+20     	; 0x65a <drive+0x4a>
     646:	8e e4       	ldi	r24, 0x4E	; 78
     648:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     64c:	06 c0       	rjmp	.+12     	; 0x65a <drive+0x4a>
     64e:	83 e5       	ldi	r24, 0x53	; 83
     650:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     654:	02 c0       	rjmp	.+4      	; 0x65a <drive+0x4a>
     656:	00 e0       	ldi	r16, 0x00	; 0
     658:	10 e0       	ldi	r17, 0x00	; 0
     65a:	01 15       	cp	r16, r1
     65c:	11 05       	cpc	r17, r1
     65e:	11 f7       	brne	.-60     	; 0x624 <drive+0x14>
     660:	df 91       	pop	r29
     662:	cf 91       	pop	r28
     664:	1f 91       	pop	r17
     666:	0f 91       	pop	r16
     668:	08 95       	ret

0000066a <waitForTurn>:
     66a:	cf 93       	push	r28
     66c:	82 e3       	ldi	r24, 0x32	; 50
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	0e 94 84 08 	call	0x1108	; 0x1108 <delay_ms>
     674:	03 c0       	rjmp	.+6      	; 0x67c <waitForTurn+0x12>
     676:	0e 94 da 01 	call	0x3b4	; 0x3b4 <lineType>
     67a:	c8 2f       	mov	r28, r24
     67c:	c1 11       	cpse	r28, r1
     67e:	fb cf       	rjmp	.-10     	; 0x676 <waitForTurn+0xc>
     680:	8e e4       	ldi	r24, 0x4E	; 78
     682:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     686:	cf 91       	pop	r28
     688:	08 95       	ret

0000068a <turnRobot>:
     68a:	ef 92       	push	r14
     68c:	ff 92       	push	r15
     68e:	0f 93       	push	r16
     690:	1f 93       	push	r17
     692:	cf 93       	push	r28
     694:	c8 2f       	mov	r28, r24
     696:	8b 01       	movw	r16, r22
     698:	ee 24       	eor	r14, r14
     69a:	e3 94       	inc	r14
     69c:	f1 2c       	mov	r15, r1
     69e:	9a c0       	rjmp	.+308    	; 0x7d4 <turnRobot+0x14a>
     6a0:	f8 01       	movw	r30, r16
     6a2:	84 81       	ldd	r24, Z+4	; 0x04
     6a4:	8e 34       	cpi	r24, 0x4E	; 78
     6a6:	59 f0       	breq	.+22     	; 0x6be <turnRobot+0x34>
     6a8:	18 f4       	brcc	.+6      	; 0x6b0 <turnRobot+0x26>
     6aa:	85 34       	cpi	r24, 0x45	; 69
     6ac:	51 f1       	breq	.+84     	; 0x702 <turnRobot+0x78>
     6ae:	8c c0       	rjmp	.+280    	; 0x7c8 <turnRobot+0x13e>
     6b0:	83 35       	cpi	r24, 0x53	; 83
     6b2:	09 f4       	brne	.+2      	; 0x6b6 <turnRobot+0x2c>
     6b4:	48 c0       	rjmp	.+144    	; 0x746 <turnRobot+0xbc>
     6b6:	87 35       	cpi	r24, 0x57	; 87
     6b8:	09 f4       	brne	.+2      	; 0x6bc <turnRobot+0x32>
     6ba:	66 c0       	rjmp	.+204    	; 0x788 <turnRobot+0xfe>
     6bc:	85 c0       	rjmp	.+266    	; 0x7c8 <turnRobot+0x13e>
     6be:	c5 34       	cpi	r28, 0x45	; 69
     6c0:	49 f4       	brne	.+18     	; 0x6d4 <turnRobot+0x4a>
     6c2:	82 e5       	ldi	r24, 0x52	; 82
     6c4:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     6c8:	0e 94 35 03 	call	0x66a	; 0x66a <waitForTurn>
     6cc:	85 e4       	ldi	r24, 0x45	; 69
     6ce:	f8 01       	movw	r30, r16
     6d0:	84 83       	std	Z+4, r24	; 0x04
     6d2:	7a c0       	rjmp	.+244    	; 0x7c8 <turnRobot+0x13e>
     6d4:	c7 35       	cpi	r28, 0x57	; 87
     6d6:	49 f4       	brne	.+18     	; 0x6ea <turnRobot+0x60>
     6d8:	8c e4       	ldi	r24, 0x4C	; 76
     6da:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     6de:	0e 94 35 03 	call	0x66a	; 0x66a <waitForTurn>
     6e2:	87 e5       	ldi	r24, 0x57	; 87
     6e4:	f8 01       	movw	r30, r16
     6e6:	84 83       	std	Z+4, r24	; 0x04
     6e8:	6f c0       	rjmp	.+222    	; 0x7c8 <turnRobot+0x13e>
     6ea:	c3 35       	cpi	r28, 0x53	; 83
     6ec:	09 f0       	breq	.+2      	; 0x6f0 <turnRobot+0x66>
     6ee:	6c c0       	rjmp	.+216    	; 0x7c8 <turnRobot+0x13e>
     6f0:	84 e5       	ldi	r24, 0x54	; 84
     6f2:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     6f6:	0e 94 35 03 	call	0x66a	; 0x66a <waitForTurn>
     6fa:	83 e5       	ldi	r24, 0x53	; 83
     6fc:	f8 01       	movw	r30, r16
     6fe:	84 83       	std	Z+4, r24	; 0x04
     700:	63 c0       	rjmp	.+198    	; 0x7c8 <turnRobot+0x13e>
     702:	c3 35       	cpi	r28, 0x53	; 83
     704:	49 f4       	brne	.+18     	; 0x718 <turnRobot+0x8e>
     706:	82 e5       	ldi	r24, 0x52	; 82
     708:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     70c:	0e 94 35 03 	call	0x66a	; 0x66a <waitForTurn>
     710:	83 e5       	ldi	r24, 0x53	; 83
     712:	f8 01       	movw	r30, r16
     714:	84 83       	std	Z+4, r24	; 0x04
     716:	58 c0       	rjmp	.+176    	; 0x7c8 <turnRobot+0x13e>
     718:	c7 35       	cpi	r28, 0x57	; 87
     71a:	49 f4       	brne	.+18     	; 0x72e <turnRobot+0xa4>
     71c:	8c e4       	ldi	r24, 0x4C	; 76
     71e:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     722:	0e 94 35 03 	call	0x66a	; 0x66a <waitForTurn>
     726:	87 e5       	ldi	r24, 0x57	; 87
     728:	f8 01       	movw	r30, r16
     72a:	84 83       	std	Z+4, r24	; 0x04
     72c:	4d c0       	rjmp	.+154    	; 0x7c8 <turnRobot+0x13e>
     72e:	c3 35       	cpi	r28, 0x53	; 83
     730:	09 f0       	breq	.+2      	; 0x734 <turnRobot+0xaa>
     732:	4a c0       	rjmp	.+148    	; 0x7c8 <turnRobot+0x13e>
     734:	84 e5       	ldi	r24, 0x54	; 84
     736:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     73a:	0e 94 35 03 	call	0x66a	; 0x66a <waitForTurn>
     73e:	83 e5       	ldi	r24, 0x53	; 83
     740:	f8 01       	movw	r30, r16
     742:	84 83       	std	Z+4, r24	; 0x04
     744:	41 c0       	rjmp	.+130    	; 0x7c8 <turnRobot+0x13e>
     746:	c7 35       	cpi	r28, 0x57	; 87
     748:	49 f4       	brne	.+18     	; 0x75c <turnRobot+0xd2>
     74a:	82 e5       	ldi	r24, 0x52	; 82
     74c:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     750:	0e 94 35 03 	call	0x66a	; 0x66a <waitForTurn>
     754:	87 e5       	ldi	r24, 0x57	; 87
     756:	f8 01       	movw	r30, r16
     758:	84 83       	std	Z+4, r24	; 0x04
     75a:	36 c0       	rjmp	.+108    	; 0x7c8 <turnRobot+0x13e>
     75c:	c5 34       	cpi	r28, 0x45	; 69
     75e:	49 f4       	brne	.+18     	; 0x772 <turnRobot+0xe8>
     760:	8c e4       	ldi	r24, 0x4C	; 76
     762:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     766:	0e 94 35 03 	call	0x66a	; 0x66a <waitForTurn>
     76a:	85 e4       	ldi	r24, 0x45	; 69
     76c:	f8 01       	movw	r30, r16
     76e:	84 83       	std	Z+4, r24	; 0x04
     770:	2b c0       	rjmp	.+86     	; 0x7c8 <turnRobot+0x13e>
     772:	ce 34       	cpi	r28, 0x4E	; 78
     774:	49 f5       	brne	.+82     	; 0x7c8 <turnRobot+0x13e>
     776:	84 e5       	ldi	r24, 0x54	; 84
     778:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     77c:	0e 94 35 03 	call	0x66a	; 0x66a <waitForTurn>
     780:	8e e4       	ldi	r24, 0x4E	; 78
     782:	f8 01       	movw	r30, r16
     784:	84 83       	std	Z+4, r24	; 0x04
     786:	20 c0       	rjmp	.+64     	; 0x7c8 <turnRobot+0x13e>
     788:	ce 34       	cpi	r28, 0x4E	; 78
     78a:	49 f4       	brne	.+18     	; 0x79e <turnRobot+0x114>
     78c:	82 e5       	ldi	r24, 0x52	; 82
     78e:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     792:	0e 94 35 03 	call	0x66a	; 0x66a <waitForTurn>
     796:	8e e4       	ldi	r24, 0x4E	; 78
     798:	f8 01       	movw	r30, r16
     79a:	84 83       	std	Z+4, r24	; 0x04
     79c:	15 c0       	rjmp	.+42     	; 0x7c8 <turnRobot+0x13e>
     79e:	c3 35       	cpi	r28, 0x53	; 83
     7a0:	49 f4       	brne	.+18     	; 0x7b4 <turnRobot+0x12a>
     7a2:	8c e4       	ldi	r24, 0x4C	; 76
     7a4:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     7a8:	0e 94 35 03 	call	0x66a	; 0x66a <waitForTurn>
     7ac:	83 e5       	ldi	r24, 0x53	; 83
     7ae:	f8 01       	movw	r30, r16
     7b0:	84 83       	std	Z+4, r24	; 0x04
     7b2:	0a c0       	rjmp	.+20     	; 0x7c8 <turnRobot+0x13e>
     7b4:	c5 34       	cpi	r28, 0x45	; 69
     7b6:	41 f4       	brne	.+16     	; 0x7c8 <turnRobot+0x13e>
     7b8:	84 e5       	ldi	r24, 0x54	; 84
     7ba:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     7be:	0e 94 35 03 	call	0x66a	; 0x66a <waitForTurn>
     7c2:	85 e4       	ldi	r24, 0x45	; 69
     7c4:	f8 01       	movw	r30, r16
     7c6:	84 83       	std	Z+4, r24	; 0x04
     7c8:	f8 01       	movw	r30, r16
     7ca:	84 81       	ldd	r24, Z+4	; 0x04
     7cc:	c8 13       	cpse	r28, r24
     7ce:	02 c0       	rjmp	.+4      	; 0x7d4 <turnRobot+0x14a>
     7d0:	e1 2c       	mov	r14, r1
     7d2:	f1 2c       	mov	r15, r1
     7d4:	f1 e0       	ldi	r31, 0x01	; 1
     7d6:	ef 16       	cp	r14, r31
     7d8:	f1 04       	cpc	r15, r1
     7da:	09 f4       	brne	.+2      	; 0x7de <turnRobot+0x154>
     7dc:	61 cf       	rjmp	.-318    	; 0x6a0 <turnRobot+0x16>
     7de:	cf 91       	pop	r28
     7e0:	1f 91       	pop	r17
     7e2:	0f 91       	pop	r16
     7e4:	ff 90       	pop	r15
     7e6:	ef 90       	pop	r14
     7e8:	08 95       	ret

000007ea <moveX>:
     7ea:	0f 93       	push	r16
     7ec:	1f 93       	push	r17
     7ee:	cf 93       	push	r28
     7f0:	df 93       	push	r29
     7f2:	fb 01       	movw	r30, r22
     7f4:	20 81       	ld	r18, Z
     7f6:	31 81       	ldd	r19, Z+1	; 0x01
     7f8:	28 17       	cp	r18, r24
     7fa:	39 07       	cpc	r19, r25
     7fc:	f9 f0       	breq	.+62     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
     7fe:	eb 01       	movw	r28, r22
     800:	8c 01       	movw	r16, r24
     802:	28 17       	cp	r18, r24
     804:	39 07       	cpc	r19, r25
     806:	44 f4       	brge	.+16     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
     808:	87 e5       	ldi	r24, 0x57	; 87
     80a:	0e 94 45 03 	call	0x68a	; 0x68a <turnRobot>
     80e:	88 81       	ld	r24, Y
     810:	99 81       	ldd	r25, Y+1	; 0x01
     812:	08 1b       	sub	r16, r24
     814:	19 0b       	sbc	r17, r25
     816:	09 c0       	rjmp	.+18     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     818:	85 e4       	ldi	r24, 0x45	; 69
     81a:	0e 94 45 03 	call	0x68a	; 0x68a <turnRobot>
     81e:	28 81       	ld	r18, Y
     820:	39 81       	ldd	r19, Y+1	; 0x01
     822:	c9 01       	movw	r24, r18
     824:	80 1b       	sub	r24, r16
     826:	91 0b       	sbc	r25, r17
     828:	8c 01       	movw	r16, r24
     82a:	c0 e0       	ldi	r28, 0x00	; 0
     82c:	d0 e0       	ldi	r29, 0x00	; 0
     82e:	03 c0       	rjmp	.+6      	; 0x836 <__DATA_REGION_LENGTH__+0x36>
     830:	0e 94 08 03 	call	0x610	; 0x610 <drive>
     834:	21 96       	adiw	r28, 0x01	; 1
     836:	c0 17       	cp	r28, r16
     838:	d1 07       	cpc	r29, r17
     83a:	d4 f3       	brlt	.-12     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
     83c:	df 91       	pop	r29
     83e:	cf 91       	pop	r28
     840:	1f 91       	pop	r17
     842:	0f 91       	pop	r16
     844:	08 95       	ret

00000846 <moveY>:
     846:	0f 93       	push	r16
     848:	1f 93       	push	r17
     84a:	cf 93       	push	r28
     84c:	df 93       	push	r29
     84e:	fb 01       	movw	r30, r22
     850:	22 81       	ldd	r18, Z+2	; 0x02
     852:	33 81       	ldd	r19, Z+3	; 0x03
     854:	28 17       	cp	r18, r24
     856:	39 07       	cpc	r19, r25
     858:	f9 f0       	breq	.+62     	; 0x898 <moveY+0x52>
     85a:	eb 01       	movw	r28, r22
     85c:	8c 01       	movw	r16, r24
     85e:	28 17       	cp	r18, r24
     860:	39 07       	cpc	r19, r25
     862:	44 f4       	brge	.+16     	; 0x874 <moveY+0x2e>
     864:	8e e4       	ldi	r24, 0x4E	; 78
     866:	0e 94 45 03 	call	0x68a	; 0x68a <turnRobot>
     86a:	8a 81       	ldd	r24, Y+2	; 0x02
     86c:	9b 81       	ldd	r25, Y+3	; 0x03
     86e:	08 1b       	sub	r16, r24
     870:	19 0b       	sbc	r17, r25
     872:	09 c0       	rjmp	.+18     	; 0x886 <moveY+0x40>
     874:	83 e5       	ldi	r24, 0x53	; 83
     876:	0e 94 45 03 	call	0x68a	; 0x68a <turnRobot>
     87a:	2a 81       	ldd	r18, Y+2	; 0x02
     87c:	3b 81       	ldd	r19, Y+3	; 0x03
     87e:	c9 01       	movw	r24, r18
     880:	80 1b       	sub	r24, r16
     882:	91 0b       	sbc	r25, r17
     884:	8c 01       	movw	r16, r24
     886:	c0 e0       	ldi	r28, 0x00	; 0
     888:	d0 e0       	ldi	r29, 0x00	; 0
     88a:	03 c0       	rjmp	.+6      	; 0x892 <moveY+0x4c>
     88c:	0e 94 08 03 	call	0x610	; 0x610 <drive>
     890:	21 96       	adiw	r28, 0x01	; 1
     892:	c0 17       	cp	r28, r16
     894:	d1 07       	cpc	r29, r17
     896:	d4 f3       	brlt	.-12     	; 0x88c <moveY+0x46>
     898:	df 91       	pop	r29
     89a:	cf 91       	pop	r28
     89c:	1f 91       	pop	r17
     89e:	0f 91       	pop	r16
     8a0:	08 95       	ret

000008a2 <warehouse>:
     8a2:	ef 92       	push	r14
     8a4:	ff 92       	push	r15
     8a6:	0f 93       	push	r16
     8a8:	1f 93       	push	r17
     8aa:	cf 93       	push	r28
     8ac:	df 93       	push	r29
     8ae:	cd b7       	in	r28, 0x3d	; 61
     8b0:	de b7       	in	r29, 0x3e	; 62
     8b2:	69 97       	sbiw	r28, 0x19	; 25
     8b4:	0f b6       	in	r0, 0x3f	; 63
     8b6:	f8 94       	cli
     8b8:	de bf       	out	0x3e, r29	; 62
     8ba:	0f be       	out	0x3f, r0	; 63
     8bc:	cd bf       	out	0x3d, r28	; 61
     8be:	87 e5       	ldi	r24, 0x57	; 87
     8c0:	8d 83       	std	Y+5, r24	; 0x05
     8c2:	8f ef       	ldi	r24, 0xFF	; 255
     8c4:	9f ef       	ldi	r25, 0xFF	; 255
     8c6:	9a 83       	std	Y+2, r25	; 0x02
     8c8:	89 83       	std	Y+1, r24	; 0x01
     8ca:	1c 82       	std	Y+4, r1	; 0x04
     8cc:	1b 82       	std	Y+3, r1	; 0x03
     8ce:	8a e0       	ldi	r24, 0x0A	; 10
     8d0:	ea e0       	ldi	r30, 0x0A	; 10
     8d2:	f1 e0       	ldi	r31, 0x01	; 1
     8d4:	de 01       	movw	r26, r28
     8d6:	16 96       	adiw	r26, 0x06	; 6
     8d8:	01 90       	ld	r0, Z+
     8da:	0d 92       	st	X+, r0
     8dc:	8a 95       	dec	r24
     8de:	e1 f7       	brne	.-8      	; 0x8d8 <warehouse+0x36>
     8e0:	8a e0       	ldi	r24, 0x0A	; 10
     8e2:	e4 e1       	ldi	r30, 0x14	; 20
     8e4:	f1 e0       	ldi	r31, 0x01	; 1
     8e6:	de 01       	movw	r26, r28
     8e8:	50 96       	adiw	r26, 0x10	; 16
     8ea:	01 90       	ld	r0, Z+
     8ec:	0d 92       	st	X+, r0
     8ee:	8a 95       	dec	r24
     8f0:	e1 f7       	brne	.-8      	; 0x8ea <warehouse+0x48>
     8f2:	45 e0       	ldi	r20, 0x05	; 5
     8f4:	50 e0       	ldi	r21, 0x00	; 0
     8f6:	be 01       	movw	r22, r28
     8f8:	60 5f       	subi	r22, 0xF0	; 240
     8fa:	7f 4f       	sbci	r23, 0xFF	; 255
     8fc:	ce 01       	movw	r24, r28
     8fe:	06 96       	adiw	r24, 0x06	; 6
     900:	0e 94 b0 02 	call	0x560	; 0x560 <bubbleSort>
     904:	e1 2c       	mov	r14, r1
     906:	f1 2c       	mov	r15, r1
     908:	3b c0       	rjmp	.+118    	; 0x980 <__stack+0x81>
     90a:	87 01       	movw	r16, r14
     90c:	00 0f       	add	r16, r16
     90e:	11 1f       	adc	r17, r17
     910:	81 e0       	ldi	r24, 0x01	; 1
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	8c 0f       	add	r24, r28
     916:	9d 1f       	adc	r25, r29
     918:	08 0f       	add	r16, r24
     91a:	19 1f       	adc	r17, r25
     91c:	bc 01       	movw	r22, r24
     91e:	f8 01       	movw	r30, r16
     920:	85 81       	ldd	r24, Z+5	; 0x05
     922:	96 81       	ldd	r25, Z+6	; 0x06
     924:	0e 94 f5 03 	call	0x7ea	; 0x7ea <moveX>
     928:	f8 01       	movw	r30, r16
     92a:	85 81       	ldd	r24, Z+5	; 0x05
     92c:	96 81       	ldd	r25, Z+6	; 0x06
     92e:	9a 83       	std	Y+2, r25	; 0x02
     930:	89 83       	std	Y+1, r24	; 0x01
     932:	be 01       	movw	r22, r28
     934:	6f 5f       	subi	r22, 0xFF	; 255
     936:	7f 4f       	sbci	r23, 0xFF	; 255
     938:	87 85       	ldd	r24, Z+15	; 0x0f
     93a:	90 89       	ldd	r25, Z+16	; 0x10
     93c:	0e 94 23 04 	call	0x846	; 0x846 <moveY>
     940:	f8 01       	movw	r30, r16
     942:	87 85       	ldd	r24, Z+15	; 0x0f
     944:	90 89       	ldd	r25, Z+16	; 0x10
     946:	9c 83       	std	Y+4, r25	; 0x04
     948:	8b 83       	std	Y+3, r24	; 0x03
     94a:	88 ee       	ldi	r24, 0xE8	; 232
     94c:	93 e0       	ldi	r25, 0x03	; 3
     94e:	0e 94 84 08 	call	0x1108	; 0x1108 <delay_ms>
     952:	0e 94 54 00 	call	0xa8	; 0xa8 <batteryPercentage>
     956:	9c 01       	movw	r18, r24
     958:	c7 01       	movw	r24, r14
     95a:	65 e0       	ldi	r22, 0x05	; 5
     95c:	70 e0       	ldi	r23, 0x00	; 0
     95e:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <__divmodhi4>
     962:	cb 01       	movw	r24, r22
     964:	42 e0       	ldi	r20, 0x02	; 2
     966:	b9 01       	movw	r22, r18
     968:	24 e6       	ldi	r18, 0x64	; 100
     96a:	fc 01       	movw	r30, r24
     96c:	2e 9f       	mul	r18, r30
     96e:	c0 01       	movw	r24, r0
     970:	2f 9f       	mul	r18, r31
     972:	90 0d       	add	r25, r0
     974:	11 24       	eor	r1, r1
     976:	0e 94 5c 00 	call	0xb8	; 0xb8 <updateDisplay>
     97a:	ff ef       	ldi	r31, 0xFF	; 255
     97c:	ef 1a       	sub	r14, r31
     97e:	ff 0a       	sbc	r15, r31
     980:	85 e0       	ldi	r24, 0x05	; 5
     982:	e8 16       	cp	r14, r24
     984:	f1 04       	cpc	r15, r1
     986:	0c f2       	brlt	.-126    	; 0x90a <__stack+0xb>
     988:	be 01       	movw	r22, r28
     98a:	6f 5f       	subi	r22, 0xFF	; 255
     98c:	7f 4f       	sbci	r23, 0xFF	; 255
     98e:	80 e0       	ldi	r24, 0x00	; 0
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	0e 94 23 04 	call	0x846	; 0x846 <moveY>
     996:	be 01       	movw	r22, r28
     998:	6f 5f       	subi	r22, 0xFF	; 255
     99a:	7f 4f       	sbci	r23, 0xFF	; 255
     99c:	80 e0       	ldi	r24, 0x00	; 0
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <moveX>
     9a4:	69 96       	adiw	r28, 0x19	; 25
     9a6:	0f b6       	in	r0, 0x3f	; 63
     9a8:	f8 94       	cli
     9aa:	de bf       	out	0x3e, r29	; 62
     9ac:	0f be       	out	0x3f, r0	; 63
     9ae:	cd bf       	out	0x3d, r28	; 61
     9b0:	df 91       	pop	r29
     9b2:	cf 91       	pop	r28
     9b4:	1f 91       	pop	r17
     9b6:	0f 91       	pop	r16
     9b8:	ff 90       	pop	r15
     9ba:	ef 90       	pop	r14
     9bc:	08 95       	ret

000009be <_ZN15OrangutanAnalog7setModeEh.part.0>:
     9be:	ec e7       	ldi	r30, 0x7C	; 124
     9c0:	f0 e0       	ldi	r31, 0x00	; 0
     9c2:	80 81       	ld	r24, Z
     9c4:	8f 7d       	andi	r24, 0xDF	; 223
     9c6:	80 83       	st	Z, r24
     9c8:	08 95       	ret

000009ca <_ZN15OrangutanAnalog7setModeEh>:
     9ca:	81 11       	cpse	r24, r1
     9cc:	03 c0       	rjmp	.+6      	; 0x9d4 <_ZN15OrangutanAnalog7setModeEh+0xa>
     9ce:	0e 94 df 04 	call	0x9be	; 0x9be <_ZN15OrangutanAnalog7setModeEh.part.0>
     9d2:	08 95       	ret
     9d4:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     9d8:	80 62       	ori	r24, 0x20	; 32
     9da:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     9de:	08 95       	ret

000009e0 <_ZN15OrangutanAnalog7getModeEv>:
     9e0:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     9e4:	85 fb       	bst	r24, 5
     9e6:	88 27       	eor	r24, r24
     9e8:	80 f9       	bld	r24, 0
     9ea:	08 95       	ret

000009ec <_ZN15OrangutanAnalog16conversionResultEv>:
     9ec:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <_ZN15OrangutanAnalog7getModeEv>
     9f0:	88 23       	and	r24, r24
     9f2:	21 f0       	breq	.+8      	; 0x9fc <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     9f4:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     9f8:	90 e0       	ldi	r25, 0x00	; 0
     9fa:	08 95       	ret
     9fc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     a00:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     a04:	08 95       	ret

00000a06 <_ZN15OrangutanAnalog15startConversionEhh>:
     a06:	80 32       	cpi	r24, 0x20	; 32
     a08:	a0 f4       	brcc	.+40     	; 0xa32 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
     a0a:	97 e8       	ldi	r25, 0x87	; 135
     a0c:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     a10:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     a14:	66 23       	and	r22, r22
     a16:	11 f0       	breq	.+4      	; 0xa1c <_ZN15OrangutanAnalog15startConversionEhh+0x16>
     a18:	90 6c       	ori	r25, 0xC0	; 192
     a1a:	02 c0       	rjmp	.+4      	; 0xa20 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
     a1c:	9f 77       	andi	r25, 0x7F	; 127
     a1e:	90 64       	ori	r25, 0x40	; 64
     a20:	90 7e       	andi	r25, 0xE0	; 224
     a22:	98 2b       	or	r25, r24
     a24:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     a28:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     a2c:	80 64       	ori	r24, 0x40	; 64
     a2e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     a32:	08 95       	ret

00000a34 <_ZN15OrangutanAnalog11readAverageEhj>:
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	e0 e2       	ldi	r30, 0x20	; 32
     a3a:	f5 e0       	ldi	r31, 0x05	; 5
     a3c:	0c 94 a7 0e 	jmp	0x1d4e	; 0x1d4e <__prologue_saves__+0x14>
     a40:	eb 01       	movw	r28, r22
     a42:	60 e0       	ldi	r22, 0x00	; 0
     a44:	0e 94 03 05 	call	0xa06	; 0xa06 <_ZN15OrangutanAnalog15startConversionEhh>
     a48:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     a4c:	86 fd       	sbrc	r24, 6
     a4e:	fc cf       	rjmp	.-8      	; 0xa48 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
     a50:	8e 01       	movw	r16, r28
     a52:	c1 2c       	mov	r12, r1
     a54:	d1 2c       	mov	r13, r1
     a56:	76 01       	movw	r14, r12
     a58:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     a5c:	80 64       	ori	r24, 0x40	; 64
     a5e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     a62:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     a66:	86 fd       	sbrc	r24, 6
     a68:	fc cf       	rjmp	.-8      	; 0xa62 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
     a6a:	0e 94 f6 04 	call	0x9ec	; 0x9ec <_ZN15OrangutanAnalog16conversionResultEv>
     a6e:	c8 0e       	add	r12, r24
     a70:	d9 1e       	adc	r13, r25
     a72:	e1 1c       	adc	r14, r1
     a74:	f1 1c       	adc	r15, r1
     a76:	01 50       	subi	r16, 0x01	; 1
     a78:	11 09       	sbc	r17, r1
     a7a:	01 15       	cp	r16, r1
     a7c:	11 05       	cpc	r17, r1
     a7e:	61 f7       	brne	.-40     	; 0xa58 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
     a80:	ce 01       	movw	r24, r28
     a82:	96 95       	lsr	r25
     a84:	87 95       	ror	r24
     a86:	c0 34       	cpi	r28, 0x40	; 64
     a88:	d1 05       	cpc	r29, r1
     a8a:	38 f4       	brcc	.+14     	; 0xa9a <_ZN15OrangutanAnalog11readAverageEhj+0x66>
     a8c:	8c 0d       	add	r24, r12
     a8e:	9d 1d       	adc	r25, r13
     a90:	be 01       	movw	r22, r28
     a92:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <__udivmodhi4>
     a96:	cb 01       	movw	r24, r22
     a98:	0e c0       	rjmp	.+28     	; 0xab6 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
     a9a:	a7 01       	movw	r20, r14
     a9c:	96 01       	movw	r18, r12
     a9e:	28 0f       	add	r18, r24
     aa0:	39 1f       	adc	r19, r25
     aa2:	41 1d       	adc	r20, r1
     aa4:	51 1d       	adc	r21, r1
     aa6:	ca 01       	movw	r24, r20
     aa8:	b9 01       	movw	r22, r18
     aaa:	9e 01       	movw	r18, r28
     aac:	40 e0       	ldi	r20, 0x00	; 0
     aae:	50 e0       	ldi	r21, 0x00	; 0
     ab0:	0e 94 34 0e 	call	0x1c68	; 0x1c68 <__udivmodsi4>
     ab4:	c9 01       	movw	r24, r18
     ab6:	cd b7       	in	r28, 0x3d	; 61
     ab8:	de b7       	in	r29, 0x3e	; 62
     aba:	e8 e0       	ldi	r30, 0x08	; 8
     abc:	0c 94 c3 0e 	jmp	0x1d86	; 0x1d86 <__epilogue_restores__+0x14>

00000ac0 <_ZN15OrangutanAnalog12toMillivoltsEj>:
     ac0:	cf 92       	push	r12
     ac2:	df 92       	push	r13
     ac4:	ef 92       	push	r14
     ac6:	ff 92       	push	r15
     ac8:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     acc:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     ad0:	9c 01       	movw	r18, r24
     ad2:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <__umulhisi3>
     ad6:	6b 01       	movw	r12, r22
     ad8:	7c 01       	movw	r14, r24
     ada:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <_ZN15OrangutanAnalog7getModeEv>
     ade:	88 23       	and	r24, r24
     ae0:	59 f0       	breq	.+22     	; 0xaf8 <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
     ae2:	c7 01       	movw	r24, r14
     ae4:	b6 01       	movw	r22, r12
     ae6:	61 58       	subi	r22, 0x81	; 129
     ae8:	7f 4f       	sbci	r23, 0xFF	; 255
     aea:	8f 4f       	sbci	r24, 0xFF	; 255
     aec:	9f 4f       	sbci	r25, 0xFF	; 255
     aee:	2f ef       	ldi	r18, 0xFF	; 255
     af0:	30 e0       	ldi	r19, 0x00	; 0
     af2:	40 e0       	ldi	r20, 0x00	; 0
     af4:	50 e0       	ldi	r21, 0x00	; 0
     af6:	0a c0       	rjmp	.+20     	; 0xb0c <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
     af8:	c7 01       	movw	r24, r14
     afa:	b6 01       	movw	r22, r12
     afc:	61 50       	subi	r22, 0x01	; 1
     afe:	7e 4f       	sbci	r23, 0xFE	; 254
     b00:	8f 4f       	sbci	r24, 0xFF	; 255
     b02:	9f 4f       	sbci	r25, 0xFF	; 255
     b04:	2f ef       	ldi	r18, 0xFF	; 255
     b06:	33 e0       	ldi	r19, 0x03	; 3
     b08:	40 e0       	ldi	r20, 0x00	; 0
     b0a:	50 e0       	ldi	r21, 0x00	; 0
     b0c:	0e 94 34 0e 	call	0x1c68	; 0x1c68 <__udivmodsi4>
     b10:	c9 01       	movw	r24, r18
     b12:	ff 90       	pop	r15
     b14:	ef 90       	pop	r14
     b16:	df 90       	pop	r13
     b18:	cf 90       	pop	r12
     b1a:	08 95       	ret

00000b1c <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
     b1c:	0e 94 1a 05 	call	0xa34	; 0xa34 <_ZN15OrangutanAnalog11readAverageEhj>
     b20:	0e 94 60 05 	call	0xac0	; 0xac0 <_ZN15OrangutanAnalog12toMillivoltsEj>
     b24:	08 95       	ret

00000b26 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
     b26:	1f 93       	push	r17
     b28:	cf 93       	push	r28
     b2a:	df 93       	push	r29
     b2c:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <_ZN15OrangutanAnalog7getModeEv>
     b30:	18 2f       	mov	r17, r24
     b32:	0e 94 df 04 	call	0x9be	; 0x9be <_ZN15OrangutanAnalog7setModeEh.part.0>
     b36:	6a e0       	ldi	r22, 0x0A	; 10
     b38:	70 e0       	ldi	r23, 0x00	; 0
     b3a:	86 e0       	ldi	r24, 0x06	; 6
     b3c:	0e 94 8e 05 	call	0xb1c	; 0xb1c <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
     b40:	ec 01       	movw	r28, r24
     b42:	81 2f       	mov	r24, r17
     b44:	0e 94 e5 04 	call	0x9ca	; 0x9ca <_ZN15OrangutanAnalog7setModeEh>
     b48:	ce 01       	movw	r24, r28
     b4a:	88 0f       	add	r24, r24
     b4c:	99 1f       	adc	r25, r25
     b4e:	8c 0f       	add	r24, r28
     b50:	9d 1f       	adc	r25, r29
     b52:	01 96       	adiw	r24, 0x01	; 1
     b54:	96 95       	lsr	r25
     b56:	87 95       	ror	r24
     b58:	df 91       	pop	r29
     b5a:	cf 91       	pop	r28
     b5c:	1f 91       	pop	r17
     b5e:	08 95       	ret

00000b60 <read_battery_millivolts_3pi>:
     b60:	0e 94 93 05 	call	0xb26	; 0xb26 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
     b64:	08 95       	ret

00000b66 <delay_us.constprop.0>:
     b66:	81 e0       	ldi	r24, 0x01	; 1
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	6f 93       	push	r22
     b6c:	64 e0       	ldi	r22, 0x04	; 4
     b6e:	6a 95       	dec	r22
     b70:	f1 f7       	brne	.-4      	; 0xb6e <delay_us.constprop.0+0x8>
     b72:	6f 91       	pop	r22
     b74:	01 97       	sbiw	r24, 0x01	; 1
     b76:	c9 f7       	brne	.-14     	; 0xb6a <delay_us.constprop.0+0x4>
     b78:	08 95       	ret

00000b7a <_ZN12OrangutanLCD8busyWaitEv>:
     b7a:	0f 93       	push	r16
     b7c:	1f 93       	push	r17
     b7e:	cf 93       	push	r28
     b80:	df 93       	push	r29
     b82:	1a b1       	in	r17, 0x0a	; 10
     b84:	57 98       	cbi	0x0a, 7	; 10
     b86:	5a 98       	cbi	0x0b, 2	; 11
     b88:	28 9a       	sbi	0x05, 0	; 5
     b8a:	c0 e0       	ldi	r28, 0x00	; 0
     b8c:	d0 e0       	ldi	r29, 0x00	; 0
     b8e:	0e 94 b3 05 	call	0xb66	; 0xb66 <delay_us.constprop.0>
     b92:	5c 9a       	sbi	0x0b, 4	; 11
     b94:	0e 94 b3 05 	call	0xb66	; 0xb66 <delay_us.constprop.0>
     b98:	09 b1       	in	r16, 0x09	; 9
     b9a:	5c 98       	cbi	0x0b, 4	; 11
     b9c:	0e 94 b3 05 	call	0xb66	; 0xb66 <delay_us.constprop.0>
     ba0:	5c 9a       	sbi	0x0b, 4	; 11
     ba2:	0e 94 b3 05 	call	0xb66	; 0xb66 <delay_us.constprop.0>
     ba6:	5c 98       	cbi	0x0b, 4	; 11
     ba8:	24 96       	adiw	r28, 0x04	; 4
     baa:	07 ff       	sbrs	r16, 7
     bac:	10 c0       	rjmp	.+32     	; 0xbce <_ZN12OrangutanLCD8busyWaitEv+0x54>
     bae:	ae 01       	movw	r20, r28
     bb0:	60 e0       	ldi	r22, 0x00	; 0
     bb2:	70 e0       	ldi	r23, 0x00	; 0
     bb4:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
     bb8:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <__data_end+0x1>
     bbc:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <__data_end+0x2>
     bc0:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <__data_end+0x3>
     bc4:	48 17       	cp	r20, r24
     bc6:	59 07       	cpc	r21, r25
     bc8:	6a 07       	cpc	r22, r26
     bca:	7b 07       	cpc	r23, r27
     bcc:	00 f3       	brcs	.-64     	; 0xb8e <_ZN12OrangutanLCD8busyWaitEv+0x14>
     bce:	1a b9       	out	0x0a, r17	; 10
     bd0:	df 91       	pop	r29
     bd2:	cf 91       	pop	r28
     bd4:	1f 91       	pop	r17
     bd6:	0f 91       	pop	r16
     bd8:	08 95       	ret

00000bda <_ZN12OrangutanLCD8sendDataEh>:
     bda:	95 b1       	in	r25, 0x05	; 5
     bdc:	28 2f       	mov	r18, r24
     bde:	21 70       	andi	r18, 0x01	; 1
     be0:	30 e0       	ldi	r19, 0x00	; 0
     be2:	22 0f       	add	r18, r18
     be4:	33 1f       	adc	r19, r19
     be6:	48 2f       	mov	r20, r24
     be8:	46 70       	andi	r20, 0x06	; 6
     bea:	68 e0       	ldi	r22, 0x08	; 8
     bec:	46 9f       	mul	r20, r22
     bee:	a0 01       	movw	r20, r0
     bf0:	11 24       	eor	r1, r1
     bf2:	24 2b       	or	r18, r20
     bf4:	9d 7c       	andi	r25, 0xCD	; 205
     bf6:	29 2b       	or	r18, r25
     bf8:	25 b9       	out	0x05, r18	; 5
     bfa:	9b b1       	in	r25, 0x0b	; 11
     bfc:	88 70       	andi	r24, 0x08	; 8
     bfe:	82 95       	swap	r24
     c00:	80 7f       	andi	r24, 0xF0	; 240
     c02:	9f 77       	andi	r25, 0x7F	; 127
     c04:	89 2b       	or	r24, r25
     c06:	8b b9       	out	0x0b, r24	; 11
     c08:	5c 9a       	sbi	0x0b, 4	; 11
     c0a:	0e 94 b3 05 	call	0xb66	; 0xb66 <delay_us.constprop.0>
     c0e:	5c 98       	cbi	0x0b, 4	; 11
     c10:	0e 94 b3 05 	call	0xb66	; 0xb66 <delay_us.constprop.0>
     c14:	08 95       	ret

00000c16 <_ZN12OrangutanLCD4sendEhhh>:
     c16:	a0 e0       	ldi	r26, 0x00	; 0
     c18:	b0 e0       	ldi	r27, 0x00	; 0
     c1a:	e1 e1       	ldi	r30, 0x11	; 17
     c1c:	f6 e0       	ldi	r31, 0x06	; 6
     c1e:	0c 94 a8 0e 	jmp	0x1d50	; 0x1d50 <__prologue_saves__+0x16>
     c22:	c8 2f       	mov	r28, r24
     c24:	d6 2e       	mov	r13, r22
     c26:	e4 2e       	mov	r14, r20
     c28:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <_ZZN12OrangutanLCD4initEvE11initialized>
     c2c:	81 11       	cpse	r24, r1
     c2e:	05 c0       	rjmp	.+10     	; 0xc3a <_ZN12OrangutanLCD4sendEhhh+0x24>
     c30:	81 e0       	ldi	r24, 0x01	; 1
     c32:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <_ZZN12OrangutanLCD4initEvE11initialized>
     c36:	0e 94 51 06 	call	0xca2	; 0xca2 <_ZN12OrangutanLCD5init2Ev>
     c3a:	0e 94 bd 05 	call	0xb7a	; 0xb7a <_ZN12OrangutanLCD8busyWaitEv>
     c3e:	14 b1       	in	r17, 0x04	; 4
     c40:	d5 b1       	in	r29, 0x05	; 5
     c42:	fa b0       	in	r15, 0x0a	; 10
     c44:	0b b1       	in	r16, 0x0b	; 11
     c46:	28 98       	cbi	0x05, 0	; 5
     c48:	dd 20       	and	r13, r13
     c4a:	11 f0       	breq	.+4      	; 0xc50 <_ZN12OrangutanLCD4sendEhhh+0x3a>
     c4c:	5a 9a       	sbi	0x0b, 2	; 11
     c4e:	01 c0       	rjmp	.+2      	; 0xc52 <_ZN12OrangutanLCD4sendEhhh+0x3c>
     c50:	5a 98       	cbi	0x0b, 2	; 11
     c52:	94 b1       	in	r25, 0x04	; 4
     c54:	92 63       	ori	r25, 0x32	; 50
     c56:	94 b9       	out	0x04, r25	; 4
     c58:	57 9a       	sbi	0x0a, 7	; 10
     c5a:	81 e0       	ldi	r24, 0x01	; 1
     c5c:	e8 16       	cp	r14, r24
     c5e:	29 f0       	breq	.+10     	; 0xc6a <_ZN12OrangutanLCD4sendEhhh+0x54>
     c60:	8c 2f       	mov	r24, r28
     c62:	82 95       	swap	r24
     c64:	8f 70       	andi	r24, 0x0F	; 15
     c66:	0e 94 ed 05 	call	0xbda	; 0xbda <_ZN12OrangutanLCD8sendDataEh>
     c6a:	8c 2f       	mov	r24, r28
     c6c:	8f 70       	andi	r24, 0x0F	; 15
     c6e:	0e 94 ed 05 	call	0xbda	; 0xbda <_ZN12OrangutanLCD8sendDataEh>
     c72:	fa b8       	out	0x0a, r15	; 10
     c74:	0b b9       	out	0x0b, r16	; 11
     c76:	14 b9       	out	0x04, r17	; 4
     c78:	d5 b9       	out	0x05, r29	; 5
     c7a:	cd b7       	in	r28, 0x3d	; 61
     c7c:	de b7       	in	r29, 0x3e	; 62
     c7e:	e7 e0       	ldi	r30, 0x07	; 7
     c80:	0c 94 c4 0e 	jmp	0x1d88	; 0x1d88 <__epilogue_restores__+0x16>

00000c84 <_ZN12OrangutanLCD8send_cmdEh>:
     c84:	42 e0       	ldi	r20, 0x02	; 2
     c86:	60 e0       	ldi	r22, 0x00	; 0
     c88:	0e 94 0b 06 	call	0xc16	; 0xc16 <_ZN12OrangutanLCD4sendEhhh>
     c8c:	08 95       	ret

00000c8e <_ZN12OrangutanLCD9send_dataEh>:
     c8e:	42 e0       	ldi	r20, 0x02	; 2
     c90:	61 e0       	ldi	r22, 0x01	; 1
     c92:	0e 94 0b 06 	call	0xc16	; 0xc16 <_ZN12OrangutanLCD4sendEhhh>
     c96:	08 95       	ret

00000c98 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
     c98:	41 e0       	ldi	r20, 0x01	; 1
     c9a:	60 e0       	ldi	r22, 0x00	; 0
     c9c:	0e 94 0b 06 	call	0xc16	; 0xc16 <_ZN12OrangutanLCD4sendEhhh>
     ca0:	08 95       	ret

00000ca2 <_ZN12OrangutanLCD5init2Ev>:
     ca2:	80 e1       	ldi	r24, 0x10	; 16
     ca4:	97 e2       	ldi	r25, 0x27	; 39
     ca6:	a0 e0       	ldi	r26, 0x00	; 0
     ca8:	b0 e0       	ldi	r27, 0x00	; 0
     caa:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
     cae:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <__data_end+0x1>
     cb2:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <__data_end+0x2>
     cb6:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <__data_end+0x3>
     cba:	52 9a       	sbi	0x0a, 2	; 10
     cbc:	20 9a       	sbi	0x04, 0	; 4
     cbe:	54 9a       	sbi	0x0a, 4	; 10
     cc0:	8e e1       	ldi	r24, 0x1E	; 30
     cc2:	90 e0       	ldi	r25, 0x00	; 0
     cc4:	0e 94 84 08 	call	0x1108	; 0x1108 <delay_ms>
     cc8:	83 e0       	ldi	r24, 0x03	; 3
     cca:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     cce:	86 e0       	ldi	r24, 0x06	; 6
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	0e 94 84 08 	call	0x1108	; 0x1108 <delay_ms>
     cd6:	83 e0       	ldi	r24, 0x03	; 3
     cd8:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     cdc:	82 e0       	ldi	r24, 0x02	; 2
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	0e 94 84 08 	call	0x1108	; 0x1108 <delay_ms>
     ce4:	83 e0       	ldi	r24, 0x03	; 3
     ce6:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     cea:	82 e0       	ldi	r24, 0x02	; 2
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	0e 94 84 08 	call	0x1108	; 0x1108 <delay_ms>
     cf2:	82 e0       	ldi	r24, 0x02	; 2
     cf4:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     cf8:	82 e0       	ldi	r24, 0x02	; 2
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	0e 94 84 08 	call	0x1108	; 0x1108 <delay_ms>
     d00:	88 e2       	ldi	r24, 0x28	; 40
     d02:	0e 94 42 06 	call	0xc84	; 0xc84 <_ZN12OrangutanLCD8send_cmdEh>
     d06:	88 e0       	ldi	r24, 0x08	; 8
     d08:	0e 94 42 06 	call	0xc84	; 0xc84 <_ZN12OrangutanLCD8send_cmdEh>
     d0c:	81 e0       	ldi	r24, 0x01	; 1
     d0e:	0e 94 42 06 	call	0xc84	; 0xc84 <_ZN12OrangutanLCD8send_cmdEh>
     d12:	86 e0       	ldi	r24, 0x06	; 6
     d14:	0e 94 42 06 	call	0xc84	; 0xc84 <_ZN12OrangutanLCD8send_cmdEh>
     d18:	8c e0       	ldi	r24, 0x0C	; 12
     d1a:	0e 94 42 06 	call	0xc84	; 0xc84 <_ZN12OrangutanLCD8send_cmdEh>
     d1e:	08 95       	ret

00000d20 <_ZN12OrangutanLCD5clearEv>:
     d20:	81 e0       	ldi	r24, 0x01	; 1
     d22:	0e 94 42 06 	call	0xc84	; 0xc84 <_ZN12OrangutanLCD8send_cmdEh>
     d26:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <printf_chars>
     d2a:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <printf_chars+0x1>
     d2e:	89 2b       	or	r24, r25
     d30:	f9 f0       	breq	.+62     	; 0xd70 <_ZN12OrangutanLCD5clearEv+0x50>
     d32:	60 e0       	ldi	r22, 0x00	; 0
     d34:	a0 e2       	ldi	r26, 0x20	; 32
     d36:	26 2f       	mov	r18, r22
     d38:	30 e0       	ldi	r19, 0x00	; 0
     d3a:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <numLCDCols>
     d3e:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <numLCDRows>
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	01 97       	sbiw	r24, 0x01	; 1
     d46:	78 9f       	mul	r23, r24
     d48:	a0 01       	movw	r20, r0
     d4a:	79 9f       	mul	r23, r25
     d4c:	50 0d       	add	r21, r0
     d4e:	11 24       	eor	r1, r1
     d50:	24 17       	cp	r18, r20
     d52:	35 07       	cpc	r19, r21
     d54:	4c f4       	brge	.+18     	; 0xd68 <_ZN12OrangutanLCD5clearEv+0x48>
     d56:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <printf_chars>
     d5a:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <printf_chars+0x1>
     d5e:	e2 0f       	add	r30, r18
     d60:	f3 1f       	adc	r31, r19
     d62:	a0 83       	st	Z, r26
     d64:	6f 5f       	subi	r22, 0xFF	; 255
     d66:	e7 cf       	rjmp	.-50     	; 0xd36 <_ZN12OrangutanLCD5clearEv+0x16>
     d68:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <col>
     d6c:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <row>
     d70:	08 95       	ret

00000d72 <clear>:
     d72:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN12OrangutanLCD5clearEv>
     d76:	08 95       	ret

00000d78 <_ZN12OrangutanLCD5printEPKc>:
     d78:	cf 93       	push	r28
     d7a:	df 93       	push	r29
     d7c:	ec 01       	movw	r28, r24
     d7e:	89 91       	ld	r24, Y+
     d80:	88 23       	and	r24, r24
     d82:	19 f0       	breq	.+6      	; 0xd8a <_ZN12OrangutanLCD5printEPKc+0x12>
     d84:	0e 94 47 06 	call	0xc8e	; 0xc8e <_ZN12OrangutanLCD9send_dataEh>
     d88:	fa cf       	rjmp	.-12     	; 0xd7e <_ZN12OrangutanLCD5printEPKc+0x6>
     d8a:	df 91       	pop	r29
     d8c:	cf 91       	pop	r28
     d8e:	08 95       	ret

00000d90 <print>:
     d90:	0e 94 bc 06 	call	0xd78	; 0xd78 <_ZN12OrangutanLCD5printEPKc>
     d94:	08 95       	ret

00000d96 <_ZN12OrangutanLCD5printEm>:
     d96:	aa e0       	ldi	r26, 0x0A	; 10
     d98:	b0 e0       	ldi	r27, 0x00	; 0
     d9a:	e1 ed       	ldi	r30, 0xD1	; 209
     d9c:	f6 e0       	ldi	r31, 0x06	; 6
     d9e:	0c 94 a7 0e 	jmp	0x1d4e	; 0x1d4e <__prologue_saves__+0x14>
     da2:	1a e0       	ldi	r17, 0x0A	; 10
     da4:	5a e0       	ldi	r21, 0x0A	; 10
     da6:	c5 2e       	mov	r12, r21
     da8:	d1 2c       	mov	r13, r1
     daa:	e1 2c       	mov	r14, r1
     dac:	f1 2c       	mov	r15, r1
     dae:	06 2f       	mov	r16, r22
     db0:	a7 01       	movw	r20, r14
     db2:	96 01       	movw	r18, r12
     db4:	0e 94 34 0e 	call	0x1c68	; 0x1c68 <__udivmodsi4>
     db8:	ca 01       	movw	r24, r20
     dba:	b9 01       	movw	r22, r18
     dbc:	11 50       	subi	r17, 0x01	; 1
     dbe:	e1 e0       	ldi	r30, 0x01	; 1
     dc0:	f0 e0       	ldi	r31, 0x00	; 0
     dc2:	ec 0f       	add	r30, r28
     dc4:	fd 1f       	adc	r31, r29
     dc6:	e1 0f       	add	r30, r17
     dc8:	f1 1d       	adc	r31, r1
     dca:	00 5d       	subi	r16, 0xD0	; 208
     dcc:	2a e0       	ldi	r18, 0x0A	; 10
     dce:	62 9f       	mul	r22, r18
     dd0:	00 19       	sub	r16, r0
     dd2:	11 24       	eor	r1, r1
     dd4:	00 83       	st	Z, r16
     dd6:	61 15       	cp	r22, r1
     dd8:	71 05       	cpc	r23, r1
     dda:	81 05       	cpc	r24, r1
     ddc:	91 05       	cpc	r25, r1
     dde:	39 f7       	brne	.-50     	; 0xdae <_ZN12OrangutanLCD5printEm+0x18>
     de0:	1a 30       	cpi	r17, 0x0A	; 10
     de2:	58 f4       	brcc	.+22     	; 0xdfa <_ZN12OrangutanLCD5printEm+0x64>
     de4:	e1 e0       	ldi	r30, 0x01	; 1
     de6:	f0 e0       	ldi	r31, 0x00	; 0
     de8:	ec 0f       	add	r30, r28
     dea:	fd 1f       	adc	r31, r29
     dec:	e1 0f       	add	r30, r17
     dee:	f1 1d       	adc	r31, r1
     df0:	80 81       	ld	r24, Z
     df2:	0e 94 47 06 	call	0xc8e	; 0xc8e <_ZN12OrangutanLCD9send_dataEh>
     df6:	1f 5f       	subi	r17, 0xFF	; 255
     df8:	f3 cf       	rjmp	.-26     	; 0xde0 <_ZN12OrangutanLCD5printEm+0x4a>
     dfa:	2a 96       	adiw	r28, 0x0a	; 10
     dfc:	e8 e0       	ldi	r30, 0x08	; 8
     dfe:	0c 94 c3 0e 	jmp	0x1d86	; 0x1d86 <__epilogue_restores__+0x14>

00000e02 <_ZN12OrangutanLCD5printEl>:
     e02:	cf 92       	push	r12
     e04:	df 92       	push	r13
     e06:	ef 92       	push	r14
     e08:	ff 92       	push	r15
     e0a:	6b 01       	movw	r12, r22
     e0c:	7c 01       	movw	r14, r24
     e0e:	97 ff       	sbrs	r25, 7
     e10:	0b c0       	rjmp	.+22     	; 0xe28 <_ZN12OrangutanLCD5printEl+0x26>
     e12:	f0 94       	com	r15
     e14:	e0 94       	com	r14
     e16:	d0 94       	com	r13
     e18:	c0 94       	com	r12
     e1a:	c1 1c       	adc	r12, r1
     e1c:	d1 1c       	adc	r13, r1
     e1e:	e1 1c       	adc	r14, r1
     e20:	f1 1c       	adc	r15, r1
     e22:	8d e2       	ldi	r24, 0x2D	; 45
     e24:	0e 94 47 06 	call	0xc8e	; 0xc8e <_ZN12OrangutanLCD9send_dataEh>
     e28:	c7 01       	movw	r24, r14
     e2a:	b6 01       	movw	r22, r12
     e2c:	0e 94 cb 06 	call	0xd96	; 0xd96 <_ZN12OrangutanLCD5printEm>
     e30:	ff 90       	pop	r15
     e32:	ef 90       	pop	r14
     e34:	df 90       	pop	r13
     e36:	cf 90       	pop	r12
     e38:	08 95       	ret

00000e3a <print_long>:
     e3a:	0e 94 01 07 	call	0xe02	; 0xe02 <_ZN12OrangutanLCD5printEl>
     e3e:	08 95       	ret

00000e40 <_ZN12OrangutanLCD6gotoXYEhh>:
     e40:	a5 e0       	ldi	r26, 0x05	; 5
     e42:	b0 e0       	ldi	r27, 0x00	; 0
     e44:	e6 e2       	ldi	r30, 0x26	; 38
     e46:	f7 e0       	ldi	r31, 0x07	; 7
     e48:	0c 94 ac 0e 	jmp	0x1d58	; 0x1d58 <__prologue_saves__+0x1e>
     e4c:	18 2f       	mov	r17, r24
     e4e:	80 e8       	ldi	r24, 0x80	; 128
     e50:	89 83       	std	Y+1, r24	; 0x01
     e52:	80 ec       	ldi	r24, 0xC0	; 192
     e54:	8a 83       	std	Y+2, r24	; 0x02
     e56:	84 e9       	ldi	r24, 0x94	; 148
     e58:	8b 83       	std	Y+3, r24	; 0x03
     e5a:	84 ed       	ldi	r24, 0xD4	; 212
     e5c:	8c 83       	std	Y+4, r24	; 0x04
     e5e:	fe 01       	movw	r30, r28
     e60:	e6 0f       	add	r30, r22
     e62:	f1 1d       	adc	r31, r1
     e64:	81 81       	ldd	r24, Z+1	; 0x01
     e66:	81 0f       	add	r24, r17
     e68:	6d 83       	std	Y+5, r22	; 0x05
     e6a:	0e 94 42 06 	call	0xc84	; 0xc84 <_ZN12OrangutanLCD8send_cmdEh>
     e6e:	10 93 3e 01 	sts	0x013E, r17	; 0x80013e <col>
     e72:	6d 81       	ldd	r22, Y+5	; 0x05
     e74:	60 93 3f 01 	sts	0x013F, r22	; 0x80013f <row>
     e78:	25 96       	adiw	r28, 0x05	; 5
     e7a:	e3 e0       	ldi	r30, 0x03	; 3
     e7c:	0c 94 c8 0e 	jmp	0x1d90	; 0x1d90 <__epilogue_restores__+0x1e>

00000e80 <lcd_goto_xy>:
     e80:	0e 94 20 07 	call	0xe40	; 0xe40 <_ZN12OrangutanLCD6gotoXYEhh>
     e84:	08 95       	ret

00000e86 <_ZN16OrangutanDigital9setOutputEhh>:
     e86:	88 30       	cpi	r24, 0x08	; 8
     e88:	58 f4       	brcc	.+22     	; 0xea0 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
     e8a:	91 e0       	ldi	r25, 0x01	; 1
     e8c:	01 c0       	rjmp	.+2      	; 0xe90 <_ZN16OrangutanDigital9setOutputEhh+0xa>
     e8e:	99 0f       	add	r25, r25
     e90:	8a 95       	dec	r24
     e92:	ea f7       	brpl	.-6      	; 0xe8e <_ZN16OrangutanDigital9setOutputEhh+0x8>
     e94:	89 2f       	mov	r24, r25
     e96:	aa e2       	ldi	r26, 0x2A	; 42
     e98:	b0 e0       	ldi	r27, 0x00	; 0
     e9a:	eb e2       	ldi	r30, 0x2B	; 43
     e9c:	f0 e0       	ldi	r31, 0x00	; 0
     e9e:	21 c0       	rjmp	.+66     	; 0xee2 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     ea0:	8e 30       	cpi	r24, 0x0E	; 14
     ea2:	60 f4       	brcc	.+24     	; 0xebc <_ZN16OrangutanDigital9setOutputEhh+0x36>
     ea4:	98 ef       	ldi	r25, 0xF8	; 248
     ea6:	98 0f       	add	r25, r24
     ea8:	81 e0       	ldi	r24, 0x01	; 1
     eaa:	01 c0       	rjmp	.+2      	; 0xeae <_ZN16OrangutanDigital9setOutputEhh+0x28>
     eac:	88 0f       	add	r24, r24
     eae:	9a 95       	dec	r25
     eb0:	ea f7       	brpl	.-6      	; 0xeac <_ZN16OrangutanDigital9setOutputEhh+0x26>
     eb2:	a4 e2       	ldi	r26, 0x24	; 36
     eb4:	b0 e0       	ldi	r27, 0x00	; 0
     eb6:	e5 e2       	ldi	r30, 0x25	; 37
     eb8:	f0 e0       	ldi	r31, 0x00	; 0
     eba:	13 c0       	rjmp	.+38     	; 0xee2 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     ebc:	85 31       	cpi	r24, 0x15	; 21
     ebe:	60 f4       	brcc	.+24     	; 0xed8 <_ZN16OrangutanDigital9setOutputEhh+0x52>
     ec0:	92 ef       	ldi	r25, 0xF2	; 242
     ec2:	98 0f       	add	r25, r24
     ec4:	81 e0       	ldi	r24, 0x01	; 1
     ec6:	01 c0       	rjmp	.+2      	; 0xeca <_ZN16OrangutanDigital9setOutputEhh+0x44>
     ec8:	88 0f       	add	r24, r24
     eca:	9a 95       	dec	r25
     ecc:	ea f7       	brpl	.-6      	; 0xec8 <_ZN16OrangutanDigital9setOutputEhh+0x42>
     ece:	a7 e2       	ldi	r26, 0x27	; 39
     ed0:	b0 e0       	ldi	r27, 0x00	; 0
     ed2:	e8 e2       	ldi	r30, 0x28	; 40
     ed4:	f0 e0       	ldi	r31, 0x00	; 0
     ed6:	05 c0       	rjmp	.+10     	; 0xee2 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     ed8:	80 e0       	ldi	r24, 0x00	; 0
     eda:	a0 e0       	ldi	r26, 0x00	; 0
     edc:	b0 e0       	ldi	r27, 0x00	; 0
     ede:	e0 e0       	ldi	r30, 0x00	; 0
     ee0:	f0 e0       	ldi	r31, 0x00	; 0
     ee2:	6f 3f       	cpi	r22, 0xFF	; 255
     ee4:	19 f4       	brne	.+6      	; 0xeec <_ZN16OrangutanDigital9setOutputEhh+0x66>
     ee6:	90 81       	ld	r25, Z
     ee8:	98 27       	eor	r25, r24
     eea:	09 c0       	rjmp	.+18     	; 0xefe <_ZN16OrangutanDigital9setOutputEhh+0x78>
     eec:	66 23       	and	r22, r22
     eee:	19 f0       	breq	.+6      	; 0xef6 <_ZN16OrangutanDigital9setOutputEhh+0x70>
     ef0:	90 81       	ld	r25, Z
     ef2:	98 2b       	or	r25, r24
     ef4:	04 c0       	rjmp	.+8      	; 0xefe <_ZN16OrangutanDigital9setOutputEhh+0x78>
     ef6:	20 81       	ld	r18, Z
     ef8:	98 2f       	mov	r25, r24
     efa:	90 95       	com	r25
     efc:	92 23       	and	r25, r18
     efe:	90 83       	st	Z, r25
     f00:	9c 91       	ld	r25, X
     f02:	98 2b       	or	r25, r24
     f04:	9c 93       	st	X, r25
     f06:	08 95       	ret

00000f08 <_ZN15OrangutanMotors5init2Ev>:
     f08:	83 ef       	ldi	r24, 0xF3	; 243
     f0a:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     f0e:	84 bd       	out	0x24, r24	; 36
     f10:	82 e0       	ldi	r24, 0x02	; 2
     f12:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
     f16:	85 bd       	out	0x25, r24	; 37
     f18:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     f1c:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     f20:	18 bc       	out	0x28, r1	; 40
     f22:	17 bc       	out	0x27, r1	; 39
     f24:	60 e0       	ldi	r22, 0x00	; 0
     f26:	86 e0       	ldi	r24, 0x06	; 6
     f28:	0e 94 43 07 	call	0xe86	; 0xe86 <_ZN16OrangutanDigital9setOutputEhh>
     f2c:	60 e0       	ldi	r22, 0x00	; 0
     f2e:	85 e0       	ldi	r24, 0x05	; 5
     f30:	0e 94 43 07 	call	0xe86	; 0xe86 <_ZN16OrangutanDigital9setOutputEhh>
     f34:	60 e0       	ldi	r22, 0x00	; 0
     f36:	8b e0       	ldi	r24, 0x0B	; 11
     f38:	0e 94 43 07 	call	0xe86	; 0xe86 <_ZN16OrangutanDigital9setOutputEhh>
     f3c:	60 e0       	ldi	r22, 0x00	; 0
     f3e:	83 e0       	ldi	r24, 0x03	; 3
     f40:	0e 94 43 07 	call	0xe86	; 0xe86 <_ZN16OrangutanDigital9setOutputEhh>
     f44:	08 95       	ret

00000f46 <_ZN15OrangutanMotors4initEv>:
     f46:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <_ZZN15OrangutanMotors4initEvE11initialized>
     f4a:	81 11       	cpse	r24, r1
     f4c:	05 c0       	rjmp	.+10     	; 0xf58 <_ZN15OrangutanMotors4initEv+0x12>
     f4e:	81 e0       	ldi	r24, 0x01	; 1
     f50:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <_ZZN15OrangutanMotors4initEvE11initialized>
     f54:	0e 94 84 07 	call	0xf08	; 0xf08 <_ZN15OrangutanMotors5init2Ev>
     f58:	08 95       	ret

00000f5a <_ZN15OrangutanMotors10setM1SpeedEi>:
     f5a:	cf 93       	push	r28
     f5c:	df 93       	push	r29
     f5e:	ec 01       	movw	r28, r24
     f60:	0e 94 a3 07 	call	0xf46	; 0xf46 <_ZN15OrangutanMotors4initEv>
     f64:	d7 ff       	sbrs	r29, 7
     f66:	05 c0       	rjmp	.+10     	; 0xf72 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
     f68:	d1 95       	neg	r29
     f6a:	c1 95       	neg	r28
     f6c:	d1 09       	sbc	r29, r1
     f6e:	81 e0       	ldi	r24, 0x01	; 1
     f70:	01 c0       	rjmp	.+2      	; 0xf74 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
     f72:	80 e0       	ldi	r24, 0x00	; 0
     f74:	cf 3f       	cpi	r28, 0xFF	; 255
     f76:	d1 05       	cpc	r29, r1
     f78:	19 f0       	breq	.+6      	; 0xf80 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     f7a:	14 f0       	brlt	.+4      	; 0xf80 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     f7c:	cf ef       	ldi	r28, 0xFF	; 255
     f7e:	d0 e0       	ldi	r29, 0x00	; 0
     f80:	88 23       	and	r24, r24
     f82:	19 f0       	breq	.+6      	; 0xf8a <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
     f84:	18 bc       	out	0x28, r1	; 40
     f86:	c7 bd       	out	0x27, r28	; 39
     f88:	02 c0       	rjmp	.+4      	; 0xf8e <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
     f8a:	c8 bd       	out	0x28, r28	; 40
     f8c:	17 bc       	out	0x27, r1	; 39
     f8e:	df 91       	pop	r29
     f90:	cf 91       	pop	r28
     f92:	08 95       	ret

00000f94 <_ZN15OrangutanMotors10setM2SpeedEi>:
     f94:	cf 93       	push	r28
     f96:	df 93       	push	r29
     f98:	ec 01       	movw	r28, r24
     f9a:	0e 94 a3 07 	call	0xf46	; 0xf46 <_ZN15OrangutanMotors4initEv>
     f9e:	d7 ff       	sbrs	r29, 7
     fa0:	05 c0       	rjmp	.+10     	; 0xfac <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
     fa2:	d1 95       	neg	r29
     fa4:	c1 95       	neg	r28
     fa6:	d1 09       	sbc	r29, r1
     fa8:	81 e0       	ldi	r24, 0x01	; 1
     faa:	01 c0       	rjmp	.+2      	; 0xfae <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
     fac:	80 e0       	ldi	r24, 0x00	; 0
     fae:	cf 3f       	cpi	r28, 0xFF	; 255
     fb0:	d1 05       	cpc	r29, r1
     fb2:	19 f0       	breq	.+6      	; 0xfba <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     fb4:	14 f0       	brlt	.+4      	; 0xfba <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     fb6:	cf ef       	ldi	r28, 0xFF	; 255
     fb8:	d0 e0       	ldi	r29, 0x00	; 0
     fba:	88 23       	and	r24, r24
     fbc:	29 f0       	breq	.+10     	; 0xfc8 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
     fbe:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     fc2:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     fc6:	04 c0       	rjmp	.+8      	; 0xfd0 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
     fc8:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     fcc:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     fd0:	df 91       	pop	r29
     fd2:	cf 91       	pop	r28
     fd4:	08 95       	ret

00000fd6 <_ZN15OrangutanMotors9setSpeedsEii>:
     fd6:	cf 93       	push	r28
     fd8:	df 93       	push	r29
     fda:	eb 01       	movw	r28, r22
     fdc:	0e 94 ad 07 	call	0xf5a	; 0xf5a <_ZN15OrangutanMotors10setM1SpeedEi>
     fe0:	ce 01       	movw	r24, r28
     fe2:	0e 94 ca 07 	call	0xf94	; 0xf94 <_ZN15OrangutanMotors10setM2SpeedEi>
     fe6:	df 91       	pop	r29
     fe8:	cf 91       	pop	r28
     fea:	08 95       	ret

00000fec <set_motors>:
     fec:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <_ZN15OrangutanMotors9setSpeedsEii>
     ff0:	08 95       	ret

00000ff2 <_ZN20OrangutanPushbuttons5init2Ev>:
     ff2:	84 b1       	in	r24, 0x04	; 4
     ff4:	8d 7c       	andi	r24, 0xCD	; 205
     ff6:	84 b9       	out	0x04, r24	; 4
     ff8:	85 b1       	in	r24, 0x05	; 5
     ffa:	82 63       	ori	r24, 0x32	; 50
     ffc:	85 b9       	out	0x05, r24	; 5
     ffe:	85 e0       	ldi	r24, 0x05	; 5
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	6f 93       	push	r22
    1004:	64 e0       	ldi	r22, 0x04	; 4
    1006:	6a 95       	dec	r22
    1008:	f1 f7       	brne	.-4      	; 0x1006 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    100a:	6f 91       	pop	r22
    100c:	01 97       	sbiw	r24, 0x01	; 1
    100e:	c9 f7       	brne	.-14     	; 0x1002 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    1010:	08 95       	ret

00001012 <_ZN20OrangutanPushbuttons4initEv>:
    1012:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    1016:	81 11       	cpse	r24, r1
    1018:	05 c0       	rjmp	.+10     	; 0x1024 <_ZN20OrangutanPushbuttons4initEv+0x12>
    101a:	81 e0       	ldi	r24, 0x01	; 1
    101c:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    1020:	0e 94 f9 07 	call	0xff2	; 0xff2 <_ZN20OrangutanPushbuttons5init2Ev>
    1024:	08 95       	ret

00001026 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    1026:	cf 93       	push	r28
    1028:	c8 2f       	mov	r28, r24
    102a:	0e 94 09 08 	call	0x1012	; 0x1012 <_ZN20OrangutanPushbuttons4initEv>
    102e:	83 b1       	in	r24, 0x03	; 3
    1030:	8c 23       	and	r24, r28
    1032:	e9 f3       	breq	.-6      	; 0x102e <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1034:	8a e0       	ldi	r24, 0x0A	; 10
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	0e 94 84 08 	call	0x1108	; 0x1108 <delay_ms>
    103c:	83 b1       	in	r24, 0x03	; 3
    103e:	8c 23       	and	r24, r28
    1040:	b1 f3       	breq	.-20     	; 0x102e <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1042:	83 b1       	in	r24, 0x03	; 3
    1044:	8c 23       	and	r24, r28
    1046:	cf 91       	pop	r28
    1048:	08 95       	ret

0000104a <wait_for_button_release>:
    104a:	0e 94 13 08 	call	0x1026	; 0x1026 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    104e:	08 95       	ret

00001050 <_ZN20OrangutanPushbuttons9isPressedEh>:
    1050:	a1 e0       	ldi	r26, 0x01	; 1
    1052:	b0 e0       	ldi	r27, 0x00	; 0
    1054:	ee e2       	ldi	r30, 0x2E	; 46
    1056:	f8 e0       	ldi	r31, 0x08	; 8
    1058:	0c 94 ad 0e 	jmp	0x1d5a	; 0x1d5a <__prologue_saves__+0x20>
    105c:	89 83       	std	Y+1, r24	; 0x01
    105e:	0e 94 09 08 	call	0x1012	; 0x1012 <_ZN20OrangutanPushbuttons4initEv>
    1062:	93 b1       	in	r25, 0x03	; 3
    1064:	90 95       	com	r25
    1066:	89 81       	ldd	r24, Y+1	; 0x01
    1068:	89 23       	and	r24, r25
    106a:	21 96       	adiw	r28, 0x01	; 1
    106c:	e2 e0       	ldi	r30, 0x02	; 2
    106e:	0c 94 c9 0e 	jmp	0x1d92	; 0x1d92 <__epilogue_restores__+0x20>

00001072 <button_is_pressed>:
    1072:	0e 94 28 08 	call	0x1050	; 0x1050 <_ZN20OrangutanPushbuttons9isPressedEh>
    1076:	08 95       	ret

00001078 <__vector_9>:
    1078:	2f 92       	push	r2
    107a:	8f 93       	push	r24
    107c:	9f 93       	push	r25
    107e:	2f b6       	in	r2, 0x3f	; 63
    1080:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <tickCount+0x1>
    1084:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <tickCount+0x2>
    1088:	01 96       	adiw	r24, 0x01	; 1
    108a:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <tickCount+0x1>
    108e:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <tickCount+0x2>
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <tickCount+0x3>
    1098:	89 1f       	adc	r24, r25
    109a:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <tickCount+0x3>
    109e:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <us_over_10+0x1>
    10a2:	9c 5f       	subi	r25, 0xFC	; 252
    10a4:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <us_over_10+0x1>
    10a8:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <us_over_10>
    10ac:	80 51       	subi	r24, 0x10	; 16
    10ae:	97 42       	sbci	r25, 0x27	; 39
    10b0:	c0 f0       	brcs	.+48     	; 0x10e2 <end>
    10b2:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <us_over_10+0x1>
    10b6:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <us_over_10>
    10ba:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <msCounter>
    10be:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <msCounter+0x1>
    10c2:	01 96       	adiw	r24, 0x01	; 1
    10c4:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <msCounter>
    10c8:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <msCounter+0x1>
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <msCounter+0x2>
    10d2:	89 1f       	adc	r24, r25
    10d4:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <msCounter+0x2>
    10d8:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <msCounter+0x3>
    10dc:	89 1f       	adc	r24, r25
    10de:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <msCounter+0x3>

000010e2 <end>:
    10e2:	2f be       	out	0x3f, r2	; 63
    10e4:	9f 91       	pop	r25
    10e6:	8f 91       	pop	r24
    10e8:	2f 90       	pop	r2
    10ea:	18 95       	reti

000010ec <_ZN13OrangutanTime17delayMillisecondsEj>:
    10ec:	28 ee       	ldi	r18, 0xE8	; 232
    10ee:	33 e0       	ldi	r19, 0x03	; 3
    10f0:	01 97       	sbiw	r24, 0x01	; 1
    10f2:	48 f0       	brcs	.+18     	; 0x1106 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    10f4:	f9 01       	movw	r30, r18
    10f6:	6f 93       	push	r22
    10f8:	64 e0       	ldi	r22, 0x04	; 4
    10fa:	6a 95       	dec	r22
    10fc:	f1 f7       	brne	.-4      	; 0x10fa <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    10fe:	6f 91       	pop	r22
    1100:	31 97       	sbiw	r30, 0x01	; 1
    1102:	c9 f7       	brne	.-14     	; 0x10f6 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    1104:	f5 cf       	rjmp	.-22     	; 0x10f0 <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    1106:	08 95       	ret

00001108 <delay_ms>:
    1108:	0e 94 76 08 	call	0x10ec	; 0x10ec <_ZN13OrangutanTime17delayMillisecondsEj>
    110c:	08 95       	ret

0000110e <_ZN13OrangutanTime5init2Ev>:
    110e:	e0 e7       	ldi	r30, 0x70	; 112
    1110:	f0 e0       	ldi	r31, 0x00	; 0
    1112:	80 81       	ld	r24, Z
    1114:	8e 7f       	andi	r24, 0xFE	; 254
    1116:	80 83       	st	Z, r24
    1118:	a0 eb       	ldi	r26, 0xB0	; 176
    111a:	b0 e0       	ldi	r27, 0x00	; 0
    111c:	8c 91       	ld	r24, X
    111e:	83 60       	ori	r24, 0x03	; 3
    1120:	8c 93       	st	X, r24
    1122:	a1 eb       	ldi	r26, 0xB1	; 177
    1124:	b0 e0       	ldi	r27, 0x00	; 0
    1126:	8c 91       	ld	r24, X
    1128:	80 7f       	andi	r24, 0xF0	; 240
    112a:	8c 93       	st	X, r24
    112c:	8c 91       	ld	r24, X
    112e:	82 60       	ori	r24, 0x02	; 2
    1130:	8c 93       	st	X, r24
    1132:	b8 9a       	sbi	0x17, 0	; 23
    1134:	80 81       	ld	r24, Z
    1136:	81 60       	ori	r24, 0x01	; 1
    1138:	80 83       	st	Z, r24
    113a:	78 94       	sei
    113c:	08 95       	ret

0000113e <_ZN13OrangutanTime4initEv>:
    113e:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <_ZZN13OrangutanTime4initEvE11initialized>
    1142:	81 11       	cpse	r24, r1
    1144:	05 c0       	rjmp	.+10     	; 0x1150 <_ZN13OrangutanTime4initEv+0x12>
    1146:	81 e0       	ldi	r24, 0x01	; 1
    1148:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <_ZZN13OrangutanTime4initEvE11initialized>
    114c:	0e 94 87 08 	call	0x110e	; 0x110e <_ZN13OrangutanTime5init2Ev>
    1150:	08 95       	ret

00001152 <_ZN13OrangutanTime5resetEv>:
    1152:	0e 94 9f 08 	call	0x113e	; 0x113e <_ZN13OrangutanTime4initEv>
    1156:	e0 e7       	ldi	r30, 0x70	; 112
    1158:	f0 e0       	ldi	r31, 0x00	; 0
    115a:	80 81       	ld	r24, Z
    115c:	8e 7f       	andi	r24, 0xFE	; 254
    115e:	80 83       	st	Z, r24
    1160:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <msCounter>
    1164:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <msCounter+0x1>
    1168:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <msCounter+0x2>
    116c:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <msCounter+0x3>
    1170:	10 92 43 01 	sts	0x0143, r1	; 0x800143 <us_over_10+0x1>
    1174:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <us_over_10>
    1178:	80 81       	ld	r24, Z
    117a:	81 60       	ori	r24, 0x01	; 1
    117c:	80 83       	st	Z, r24
    117e:	08 95       	ret

00001180 <calibrate_line_sensors>:
    1180:	68 2f       	mov	r22, r24
    1182:	8c e4       	ldi	r24, 0x4C	; 76
    1184:	91 e0       	ldi	r25, 0x01	; 1
    1186:	0e 94 a8 0c 	call	0x1950	; 0x1950 <_ZN16PololuQTRSensors9calibrateEh>
    118a:	08 95       	ret

0000118c <read_line>:
    118c:	46 2f       	mov	r20, r22
    118e:	20 e0       	ldi	r18, 0x00	; 0
    1190:	bc 01       	movw	r22, r24
    1192:	8c e4       	ldi	r24, 0x4C	; 76
    1194:	91 e0       	ldi	r25, 0x01	; 1
    1196:	0e 94 79 0d 	call	0x1af2	; 0x1af2 <_ZN16PololuQTRSensors8readLineEPjhh>
    119a:	08 95       	ret

0000119c <_ZN9Pololu3pi4initEjh>:
    119c:	0f 93       	push	r16
    119e:	cf 93       	push	r28
    11a0:	df 93       	push	r29
    11a2:	00 d0       	rcall	.+0      	; 0x11a4 <_ZN9Pololu3pi4initEjh+0x8>
    11a4:	00 d0       	rcall	.+0      	; 0x11a6 <_ZN9Pololu3pi4initEjh+0xa>
    11a6:	1f 92       	push	r1
    11a8:	cd b7       	in	r28, 0x3d	; 61
    11aa:	de b7       	in	r29, 0x3e	; 62
    11ac:	9c 01       	movw	r18, r24
    11ae:	85 e0       	ldi	r24, 0x05	; 5
    11b0:	ee e1       	ldi	r30, 0x1E	; 30
    11b2:	f1 e0       	ldi	r31, 0x01	; 1
    11b4:	de 01       	movw	r26, r28
    11b6:	11 96       	adiw	r26, 0x01	; 1
    11b8:	01 90       	ld	r0, Z+
    11ba:	0d 92       	st	X+, r0
    11bc:	8a 95       	dec	r24
    11be:	e1 f7       	brne	.-8      	; 0x11b8 <_ZN9Pololu3pi4initEjh+0x1c>
    11c0:	66 23       	and	r22, r22
    11c2:	11 f0       	breq	.+4      	; 0x11c8 <_ZN9Pololu3pi4initEjh+0x2c>
    11c4:	0f ef       	ldi	r16, 0xFF	; 255
    11c6:	01 c0       	rjmp	.+2      	; 0x11ca <_ZN9Pololu3pi4initEjh+0x2e>
    11c8:	03 e1       	ldi	r16, 0x13	; 19
    11ca:	45 e0       	ldi	r20, 0x05	; 5
    11cc:	be 01       	movw	r22, r28
    11ce:	6f 5f       	subi	r22, 0xFF	; 255
    11d0:	7f 4f       	sbci	r23, 0xFF	; 255
    11d2:	8c e4       	ldi	r24, 0x4C	; 76
    11d4:	91 e0       	ldi	r25, 0x01	; 1
    11d6:	0e 94 a0 09 	call	0x1340	; 0x1340 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    11da:	8c e4       	ldi	r24, 0x4C	; 76
    11dc:	91 e0       	ldi	r25, 0x01	; 1
    11de:	0e 94 77 09 	call	0x12ee	; 0x12ee <_ZN16PololuQTRSensors11emittersOffEv>
    11e2:	0e 94 a9 08 	call	0x1152	; 0x1152 <_ZN13OrangutanTime5resetEv>
    11e6:	0f 90       	pop	r0
    11e8:	0f 90       	pop	r0
    11ea:	0f 90       	pop	r0
    11ec:	0f 90       	pop	r0
    11ee:	0f 90       	pop	r0
    11f0:	df 91       	pop	r29
    11f2:	cf 91       	pop	r28
    11f4:	0f 91       	pop	r16
    11f6:	08 95       	ret

000011f8 <pololu_3pi_init>:
    11f8:	60 e0       	ldi	r22, 0x00	; 0
    11fa:	0e 94 ce 08 	call	0x119c	; 0x119c <_ZN9Pololu3pi4initEjh>
    11fe:	08 95       	ret

00001200 <_GLOBAL__sub_D_pololu_3pi_init>:
    1200:	8c e4       	ldi	r24, 0x4C	; 76
    1202:	91 e0       	ldi	r25, 0x01	; 1
    1204:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <_ZN16PololuQTRSensorsD1Ev>
    1208:	08 95       	ret

0000120a <delay_us>:
    120a:	6f 93       	push	r22
    120c:	64 e0       	ldi	r22, 0x04	; 4
    120e:	6a 95       	dec	r22
    1210:	f1 f7       	brne	.-4      	; 0x120e <delay_us+0x4>
    1212:	6f 91       	pop	r22
    1214:	01 97       	sbiw	r24, 0x01	; 1
    1216:	c9 f7       	brne	.-14     	; 0x120a <delay_us>
    1218:	08 95       	ret

0000121a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    121a:	fc 01       	movw	r30, r24
    121c:	11 82       	std	Z+1, r1	; 0x01
    121e:	10 82       	st	Z, r1
    1220:	13 82       	std	Z+3, r1	; 0x03
    1222:	12 82       	std	Z+2, r1	; 0x02
    1224:	15 82       	std	Z+5, r1	; 0x05
    1226:	14 82       	std	Z+4, r1	; 0x04
    1228:	16 82       	std	Z+6, r1	; 0x06
    122a:	68 30       	cpi	r22, 0x08	; 8
    122c:	68 f4       	brcc	.+26     	; 0x1248 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    122e:	89 e2       	ldi	r24, 0x29	; 41
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	91 83       	std	Z+1, r25	; 0x01
    1234:	80 83       	st	Z, r24
    1236:	8b e2       	ldi	r24, 0x2B	; 43
    1238:	90 e0       	ldi	r25, 0x00	; 0
    123a:	93 83       	std	Z+3, r25	; 0x03
    123c:	82 83       	std	Z+2, r24	; 0x02
    123e:	8a e2       	ldi	r24, 0x2A	; 42
    1240:	90 e0       	ldi	r25, 0x00	; 0
    1242:	95 83       	std	Z+5, r25	; 0x05
    1244:	84 83       	std	Z+4, r24	; 0x04
    1246:	1f c0       	rjmp	.+62     	; 0x1286 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    1248:	6e 30       	cpi	r22, 0x0E	; 14
    124a:	70 f4       	brcc	.+28     	; 0x1268 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    124c:	83 e2       	ldi	r24, 0x23	; 35
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	91 83       	std	Z+1, r25	; 0x01
    1252:	80 83       	st	Z, r24
    1254:	85 e2       	ldi	r24, 0x25	; 37
    1256:	90 e0       	ldi	r25, 0x00	; 0
    1258:	93 83       	std	Z+3, r25	; 0x03
    125a:	82 83       	std	Z+2, r24	; 0x02
    125c:	84 e2       	ldi	r24, 0x24	; 36
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	95 83       	std	Z+5, r25	; 0x05
    1262:	84 83       	std	Z+4, r24	; 0x04
    1264:	68 50       	subi	r22, 0x08	; 8
    1266:	0f c0       	rjmp	.+30     	; 0x1286 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    1268:	65 31       	cpi	r22, 0x15	; 21
    126a:	98 f4       	brcc	.+38     	; 0x1292 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    126c:	86 e2       	ldi	r24, 0x26	; 38
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	91 83       	std	Z+1, r25	; 0x01
    1272:	80 83       	st	Z, r24
    1274:	88 e2       	ldi	r24, 0x28	; 40
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	93 83       	std	Z+3, r25	; 0x03
    127a:	82 83       	std	Z+2, r24	; 0x02
    127c:	87 e2       	ldi	r24, 0x27	; 39
    127e:	90 e0       	ldi	r25, 0x00	; 0
    1280:	95 83       	std	Z+5, r25	; 0x05
    1282:	84 83       	std	Z+4, r24	; 0x04
    1284:	6e 50       	subi	r22, 0x0E	; 14
    1286:	81 e0       	ldi	r24, 0x01	; 1
    1288:	01 c0       	rjmp	.+2      	; 0x128c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    128a:	88 0f       	add	r24, r24
    128c:	6a 95       	dec	r22
    128e:	ea f7       	brpl	.-6      	; 0x128a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    1290:	86 83       	std	Z+6, r24	; 0x06
    1292:	08 95       	ret

00001294 <_ZN16PololuQTRSensors4initEhhh>:
    1294:	a7 e0       	ldi	r26, 0x07	; 7
    1296:	b0 e0       	ldi	r27, 0x00	; 0
    1298:	e0 e5       	ldi	r30, 0x50	; 80
    129a:	f9 e0       	ldi	r31, 0x09	; 9
    129c:	0c 94 ab 0e 	jmp	0x1d56	; 0x1d56 <__prologue_saves__+0x1c>
    12a0:	8c 01       	movw	r16, r24
    12a2:	fc 01       	movw	r30, r24
    12a4:	11 82       	std	Z+1, r1	; 0x01
    12a6:	10 82       	st	Z, r1
    12a8:	13 82       	std	Z+3, r1	; 0x03
    12aa:	12 82       	std	Z+2, r1	; 0x02
    12ac:	15 82       	std	Z+5, r1	; 0x05
    12ae:	14 82       	std	Z+4, r1	; 0x04
    12b0:	17 82       	std	Z+7, r1	; 0x07
    12b2:	16 82       	std	Z+6, r1	; 0x06
    12b4:	61 31       	cpi	r22, 0x11	; 17
    12b6:	18 f0       	brcs	.+6      	; 0x12be <_ZN16PololuQTRSensors4initEhhh+0x2a>
    12b8:	80 e1       	ldi	r24, 0x10	; 16
    12ba:	80 87       	std	Z+8, r24	; 0x08
    12bc:	02 c0       	rjmp	.+4      	; 0x12c2 <_ZN16PololuQTRSensors4initEhhh+0x2e>
    12be:	fc 01       	movw	r30, r24
    12c0:	60 87       	std	Z+8, r22	; 0x08
    12c2:	f8 01       	movw	r30, r16
    12c4:	20 8b       	std	Z+16, r18	; 0x10
    12c6:	64 2f       	mov	r22, r20
    12c8:	ce 01       	movw	r24, r28
    12ca:	01 96       	adiw	r24, 0x01	; 1
    12cc:	0e 94 0d 09 	call	0x121a	; 0x121a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    12d0:	8f 81       	ldd	r24, Y+7	; 0x07
    12d2:	f8 01       	movw	r30, r16
    12d4:	81 87       	std	Z+9, r24	; 0x09
    12d6:	8b 81       	ldd	r24, Y+3	; 0x03
    12d8:	9c 81       	ldd	r25, Y+4	; 0x04
    12da:	93 87       	std	Z+11, r25	; 0x0b
    12dc:	82 87       	std	Z+10, r24	; 0x0a
    12de:	8d 81       	ldd	r24, Y+5	; 0x05
    12e0:	9e 81       	ldd	r25, Y+6	; 0x06
    12e2:	95 87       	std	Z+13, r25	; 0x0d
    12e4:	84 87       	std	Z+12, r24	; 0x0c
    12e6:	27 96       	adiw	r28, 0x07	; 7
    12e8:	e4 e0       	ldi	r30, 0x04	; 4
    12ea:	0c 94 c7 0e 	jmp	0x1d8e	; 0x1d8e <__epilogue_restores__+0x1c>

000012ee <_ZN16PololuQTRSensors11emittersOffEv>:
    12ee:	fc 01       	movw	r30, r24
    12f0:	a4 85       	ldd	r26, Z+12	; 0x0c
    12f2:	b5 85       	ldd	r27, Z+13	; 0x0d
    12f4:	10 97       	sbiw	r26, 0x00	; 0
    12f6:	79 f0       	breq	.+30     	; 0x1316 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    12f8:	8c 91       	ld	r24, X
    12fa:	91 85       	ldd	r25, Z+9	; 0x09
    12fc:	89 2b       	or	r24, r25
    12fe:	8c 93       	st	X, r24
    1300:	a2 85       	ldd	r26, Z+10	; 0x0a
    1302:	b3 85       	ldd	r27, Z+11	; 0x0b
    1304:	9c 91       	ld	r25, X
    1306:	81 85       	ldd	r24, Z+9	; 0x09
    1308:	80 95       	com	r24
    130a:	89 23       	and	r24, r25
    130c:	8c 93       	st	X, r24
    130e:	88 ec       	ldi	r24, 0xC8	; 200
    1310:	90 e0       	ldi	r25, 0x00	; 0
    1312:	0e 94 05 09 	call	0x120a	; 0x120a <delay_us>
    1316:	08 95       	ret

00001318 <_ZN16PololuQTRSensors10emittersOnEv>:
    1318:	fc 01       	movw	r30, r24
    131a:	a4 85       	ldd	r26, Z+12	; 0x0c
    131c:	b5 85       	ldd	r27, Z+13	; 0x0d
    131e:	10 97       	sbiw	r26, 0x00	; 0
    1320:	71 f0       	breq	.+28     	; 0x133e <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    1322:	8c 91       	ld	r24, X
    1324:	91 85       	ldd	r25, Z+9	; 0x09
    1326:	89 2b       	or	r24, r25
    1328:	8c 93       	st	X, r24
    132a:	a2 85       	ldd	r26, Z+10	; 0x0a
    132c:	b3 85       	ldd	r27, Z+11	; 0x0b
    132e:	8c 91       	ld	r24, X
    1330:	91 85       	ldd	r25, Z+9	; 0x09
    1332:	89 2b       	or	r24, r25
    1334:	8c 93       	st	X, r24
    1336:	88 ec       	ldi	r24, 0xC8	; 200
    1338:	90 e0       	ldi	r25, 0x00	; 0
    133a:	0e 94 05 09 	call	0x120a	; 0x120a <delay_us>
    133e:	08 95       	ret

00001340 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    1340:	a7 e0       	ldi	r26, 0x07	; 7
    1342:	b0 e0       	ldi	r27, 0x00	; 0
    1344:	e6 ea       	ldi	r30, 0xA6	; 166
    1346:	f9 e0       	ldi	r31, 0x09	; 9
    1348:	0c 94 a0 0e 	jmp	0x1d40	; 0x1d40 <__prologue_saves__+0x6>
    134c:	7c 01       	movw	r14, r24
    134e:	4b 01       	movw	r8, r22
    1350:	64 2f       	mov	r22, r20
    1352:	39 01       	movw	r6, r18
    1354:	40 2f       	mov	r20, r16
    1356:	20 e0       	ldi	r18, 0x00	; 0
    1358:	0e 94 4a 09 	call	0x1294	; 0x1294 <_ZN16PololuQTRSensors4initEhhh>
    135c:	87 01       	movw	r16, r14
    135e:	0f 5b       	subi	r16, 0xBF	; 191
    1360:	1f 4f       	sbci	r17, 0xFF	; 255
    1362:	f8 01       	movw	r30, r16
    1364:	10 82       	st	Z, r1
    1366:	67 01       	movw	r12, r14
    1368:	f2 e4       	ldi	r31, 0x42	; 66
    136a:	cf 0e       	add	r12, r31
    136c:	d1 1c       	adc	r13, r1
    136e:	f6 01       	movw	r30, r12
    1370:	10 82       	st	Z, r1
    1372:	57 01       	movw	r10, r14
    1374:	f3 e4       	ldi	r31, 0x43	; 67
    1376:	af 0e       	add	r10, r31
    1378:	b1 1c       	adc	r11, r1
    137a:	f5 01       	movw	r30, r10
    137c:	10 82       	st	Z, r1
    137e:	f7 01       	movw	r30, r14
    1380:	77 86       	std	Z+15, r7	; 0x0f
    1382:	66 86       	std	Z+14, r6	; 0x0e
    1384:	51 2c       	mov	r5, r1
    1386:	f7 01       	movw	r30, r14
    1388:	80 85       	ldd	r24, Z+8	; 0x08
    138a:	58 16       	cp	r5, r24
    138c:	50 f5       	brcc	.+84     	; 0x13e2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    138e:	65 2c       	mov	r6, r5
    1390:	71 2c       	mov	r7, r1
    1392:	f4 01       	movw	r30, r8
    1394:	e6 0d       	add	r30, r6
    1396:	f7 1d       	adc	r31, r7
    1398:	60 81       	ld	r22, Z
    139a:	ce 01       	movw	r24, r28
    139c:	01 96       	adiw	r24, 0x01	; 1
    139e:	0e 94 0d 09 	call	0x121a	; 0x121a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    13a2:	2f 81       	ldd	r18, Y+7	; 0x07
    13a4:	f7 01       	movw	r30, r14
    13a6:	e6 0d       	add	r30, r6
    13a8:	f7 1d       	adc	r31, r7
    13aa:	21 8b       	std	Z+17, r18	; 0x11
    13ac:	89 81       	ldd	r24, Y+1	; 0x01
    13ae:	9a 81       	ldd	r25, Y+2	; 0x02
    13b0:	f3 01       	movw	r30, r6
    13b2:	ee 0f       	add	r30, r30
    13b4:	ff 1f       	adc	r31, r31
    13b6:	ee 0d       	add	r30, r14
    13b8:	ff 1d       	adc	r31, r15
    13ba:	92 a3       	std	Z+34, r25	; 0x22
    13bc:	81 a3       	std	Z+33, r24	; 0x21
    13be:	83 32       	cpi	r24, 0x23	; 35
    13c0:	91 05       	cpc	r25, r1
    13c2:	11 f4       	brne	.+4      	; 0x13c8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    13c4:	f8 01       	movw	r30, r16
    13c6:	08 c0       	rjmp	.+16     	; 0x13d8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    13c8:	86 32       	cpi	r24, 0x26	; 38
    13ca:	91 05       	cpc	r25, r1
    13cc:	11 f4       	brne	.+4      	; 0x13d2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    13ce:	f6 01       	movw	r30, r12
    13d0:	03 c0       	rjmp	.+6      	; 0x13d8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    13d2:	89 97       	sbiw	r24, 0x29	; 41
    13d4:	21 f4       	brne	.+8      	; 0x13de <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    13d6:	f5 01       	movw	r30, r10
    13d8:	80 81       	ld	r24, Z
    13da:	82 2b       	or	r24, r18
    13dc:	80 83       	st	Z, r24
    13de:	53 94       	inc	r5
    13e0:	d2 cf       	rjmp	.-92     	; 0x1386 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    13e2:	27 96       	adiw	r28, 0x07	; 7
    13e4:	ef e0       	ldi	r30, 0x0F	; 15
    13e6:	0c 94 bc 0e 	jmp	0x1d78	; 0x1d78 <__epilogue_restores__+0x6>

000013ea <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    13ea:	a0 e0       	ldi	r26, 0x00	; 0
    13ec:	b0 e0       	ldi	r27, 0x00	; 0
    13ee:	eb ef       	ldi	r30, 0xFB	; 251
    13f0:	f9 e0       	ldi	r31, 0x09	; 9
    13f2:	0c 94 a2 0e 	jmp	0x1d44	; 0x1d44 <__prologue_saves__+0xa>
    13f6:	ec 01       	movw	r28, r24
    13f8:	5b 01       	movw	r10, r22
    13fa:	6c 01       	movw	r12, r24
    13fc:	81 e4       	ldi	r24, 0x41	; 65
    13fe:	c8 0e       	add	r12, r24
    1400:	d1 1c       	adc	r13, r1
    1402:	f6 01       	movw	r30, r12
    1404:	80 80       	ld	r8, Z
    1406:	7e 01       	movw	r14, r28
    1408:	f2 e4       	ldi	r31, 0x42	; 66
    140a:	ef 0e       	add	r14, r31
    140c:	f1 1c       	adc	r15, r1
    140e:	f7 01       	movw	r30, r14
    1410:	70 80       	ld	r7, Z
    1412:	8e 01       	movw	r16, r28
    1414:	0d 5b       	subi	r16, 0xBD	; 189
    1416:	1f 4f       	sbci	r17, 0xFF	; 255
    1418:	f8 01       	movw	r30, r16
    141a:	90 80       	ld	r9, Z
    141c:	80 e0       	ldi	r24, 0x00	; 0
    141e:	98 85       	ldd	r25, Y+8	; 0x08
    1420:	89 17       	cp	r24, r25
    1422:	48 f4       	brcc	.+18     	; 0x1436 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    1424:	f5 01       	movw	r30, r10
    1426:	e8 0f       	add	r30, r24
    1428:	f1 1d       	adc	r31, r1
    142a:	e8 0f       	add	r30, r24
    142c:	f1 1d       	adc	r31, r1
    142e:	11 82       	std	Z+1, r1	; 0x01
    1430:	10 82       	st	Z, r1
    1432:	8f 5f       	subi	r24, 0xFF	; 255
    1434:	f4 cf       	rjmp	.-24     	; 0x141e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    1436:	84 b1       	in	r24, 0x04	; 4
    1438:	f6 01       	movw	r30, r12
    143a:	90 81       	ld	r25, Z
    143c:	89 2b       	or	r24, r25
    143e:	84 b9       	out	0x04, r24	; 4
    1440:	87 b1       	in	r24, 0x07	; 7
    1442:	f7 01       	movw	r30, r14
    1444:	90 81       	ld	r25, Z
    1446:	89 2b       	or	r24, r25
    1448:	87 b9       	out	0x07, r24	; 7
    144a:	8a b1       	in	r24, 0x0a	; 10
    144c:	f8 01       	movw	r30, r16
    144e:	90 81       	ld	r25, Z
    1450:	89 2b       	or	r24, r25
    1452:	8a b9       	out	0x0a, r24	; 10
    1454:	85 b1       	in	r24, 0x05	; 5
    1456:	f6 01       	movw	r30, r12
    1458:	90 81       	ld	r25, Z
    145a:	89 2b       	or	r24, r25
    145c:	85 b9       	out	0x05, r24	; 5
    145e:	88 b1       	in	r24, 0x08	; 8
    1460:	f7 01       	movw	r30, r14
    1462:	90 81       	ld	r25, Z
    1464:	89 2b       	or	r24, r25
    1466:	88 b9       	out	0x08, r24	; 8
    1468:	8b b1       	in	r24, 0x0b	; 11
    146a:	f8 01       	movw	r30, r16
    146c:	90 81       	ld	r25, Z
    146e:	89 2b       	or	r24, r25
    1470:	8b b9       	out	0x0b, r24	; 11
    1472:	8a e0       	ldi	r24, 0x0A	; 10
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	0e 94 05 09 	call	0x120a	; 0x120a <delay_us>
    147a:	94 b1       	in	r25, 0x04	; 4
    147c:	f6 01       	movw	r30, r12
    147e:	80 81       	ld	r24, Z
    1480:	80 95       	com	r24
    1482:	89 23       	and	r24, r25
    1484:	84 b9       	out	0x04, r24	; 4
    1486:	97 b1       	in	r25, 0x07	; 7
    1488:	f7 01       	movw	r30, r14
    148a:	80 81       	ld	r24, Z
    148c:	80 95       	com	r24
    148e:	89 23       	and	r24, r25
    1490:	87 b9       	out	0x07, r24	; 7
    1492:	9a b1       	in	r25, 0x0a	; 10
    1494:	f8 01       	movw	r30, r16
    1496:	80 81       	ld	r24, Z
    1498:	80 95       	com	r24
    149a:	89 23       	and	r24, r25
    149c:	8a b9       	out	0x0a, r24	; 10
    149e:	95 b1       	in	r25, 0x05	; 5
    14a0:	f6 01       	movw	r30, r12
    14a2:	80 81       	ld	r24, Z
    14a4:	80 95       	com	r24
    14a6:	89 23       	and	r24, r25
    14a8:	85 b9       	out	0x05, r24	; 5
    14aa:	98 b1       	in	r25, 0x08	; 8
    14ac:	f7 01       	movw	r30, r14
    14ae:	80 81       	ld	r24, Z
    14b0:	80 95       	com	r24
    14b2:	89 23       	and	r24, r25
    14b4:	88 b9       	out	0x08, r24	; 8
    14b6:	9b b1       	in	r25, 0x0b	; 11
    14b8:	f8 01       	movw	r30, r16
    14ba:	80 81       	ld	r24, Z
    14bc:	80 95       	com	r24
    14be:	89 23       	and	r24, r25
    14c0:	8b b9       	out	0x0b, r24	; 11
    14c2:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    14c6:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    14ca:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    14ce:	83 60       	ori	r24, 0x03	; 3
    14d0:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    14d4:	82 e0       	ldi	r24, 0x02	; 2
    14d6:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    14da:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    14de:	80 e0       	ldi	r24, 0x00	; 0
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	2e 85       	ldd	r18, Y+14	; 0x0e
    14e4:	3f 85       	ldd	r19, Y+15	; 0x0f
    14e6:	82 17       	cp	r24, r18
    14e8:	93 07       	cpc	r25, r19
    14ea:	20 f5       	brcc	.+72     	; 0x1534 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    14ec:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    14f0:	2c 2d       	mov	r18, r12
    14f2:	24 1b       	sub	r18, r20
    14f4:	82 0f       	add	r24, r18
    14f6:	91 1d       	adc	r25, r1
    14f8:	03 b1       	in	r16, 0x03	; 3
    14fa:	08 11       	cpse	r16, r8
    14fc:	32 c0       	rjmp	.+100    	; 0x1562 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    14fe:	f6 b0       	in	r15, 0x06	; 6
    1500:	f7 10       	cpse	r15, r7
    1502:	2f c0       	rjmp	.+94     	; 0x1562 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1504:	29 b1       	in	r18, 0x09	; 9
    1506:	29 11       	cpse	r18, r9
    1508:	2c c0       	rjmp	.+88     	; 0x1562 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    150a:	10 c0       	rjmp	.+32     	; 0x152c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    150c:	21 2f       	mov	r18, r17
    150e:	30 e0       	ldi	r19, 0x00	; 0
    1510:	a9 01       	movw	r20, r18
    1512:	44 0f       	add	r20, r20
    1514:	55 1f       	adc	r21, r21
    1516:	f5 01       	movw	r30, r10
    1518:	e4 0f       	add	r30, r20
    151a:	f5 1f       	adc	r31, r21
    151c:	60 81       	ld	r22, Z
    151e:	71 81       	ldd	r23, Z+1	; 0x01
    1520:	67 2b       	or	r22, r23
    1522:	21 f1       	breq	.+72     	; 0x156c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    1524:	1f 5f       	subi	r17, 0xFF	; 255
    1526:	28 85       	ldd	r18, Y+8	; 0x08
    1528:	12 17       	cp	r17, r18
    152a:	80 f3       	brcs	.-32     	; 0x150c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    152c:	7f 2c       	mov	r7, r15
    152e:	80 2e       	mov	r8, r16
    1530:	4c 2d       	mov	r20, r12
    1532:	d7 cf       	rjmp	.-82     	; 0x14e2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    1534:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1538:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    153c:	20 e0       	ldi	r18, 0x00	; 0
    153e:	88 85       	ldd	r24, Y+8	; 0x08
    1540:	28 17       	cp	r18, r24
    1542:	30 f5       	brcc	.+76     	; 0x1590 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    1544:	f5 01       	movw	r30, r10
    1546:	e2 0f       	add	r30, r18
    1548:	f1 1d       	adc	r31, r1
    154a:	e2 0f       	add	r30, r18
    154c:	f1 1d       	adc	r31, r1
    154e:	80 81       	ld	r24, Z
    1550:	91 81       	ldd	r25, Z+1	; 0x01
    1552:	89 2b       	or	r24, r25
    1554:	21 f4       	brne	.+8      	; 0x155e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    1556:	8e 85       	ldd	r24, Y+14	; 0x0e
    1558:	9f 85       	ldd	r25, Y+15	; 0x0f
    155a:	91 83       	std	Z+1, r25	; 0x01
    155c:	80 83       	st	Z, r24
    155e:	2f 5f       	subi	r18, 0xFF	; 255
    1560:	ee cf       	rjmp	.-36     	; 0x153e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    1562:	03 b1       	in	r16, 0x03	; 3
    1564:	f6 b0       	in	r15, 0x06	; 6
    1566:	99 b0       	in	r9, 0x09	; 9
    1568:	10 e0       	ldi	r17, 0x00	; 0
    156a:	dd cf       	rjmp	.-70     	; 0x1526 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    156c:	de 01       	movw	r26, r28
    156e:	a4 0f       	add	r26, r20
    1570:	b5 1f       	adc	r27, r21
    1572:	91 96       	adiw	r26, 0x21	; 33
    1574:	0d 90       	ld	r0, X+
    1576:	bc 91       	ld	r27, X
    1578:	a0 2d       	mov	r26, r0
    157a:	4c 91       	ld	r20, X
    157c:	de 01       	movw	r26, r28
    157e:	a2 0f       	add	r26, r18
    1580:	b3 1f       	adc	r27, r19
    1582:	51 96       	adiw	r26, 0x11	; 17
    1584:	2c 91       	ld	r18, X
    1586:	42 23       	and	r20, r18
    1588:	69 f6       	brne	.-102    	; 0x1524 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    158a:	91 83       	std	Z+1, r25	; 0x01
    158c:	80 83       	st	Z, r24
    158e:	ca cf       	rjmp	.-108    	; 0x1524 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    1590:	cd b7       	in	r28, 0x3d	; 61
    1592:	de b7       	in	r29, 0x3e	; 62
    1594:	ed e0       	ldi	r30, 0x0D	; 13
    1596:	0c 94 be 0e 	jmp	0x1d7c	; 0x1d7c <__epilogue_restores__+0xa>

0000159a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    159a:	ef 92       	push	r14
    159c:	ff 92       	push	r15
    159e:	0f 93       	push	r16
    15a0:	1f 93       	push	r17
    15a2:	cf 93       	push	r28
    15a4:	df 93       	push	r29
    15a6:	fc 01       	movw	r30, r24
    15a8:	9b 01       	movw	r18, r22
    15aa:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    15ae:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    15b2:	47 b1       	in	r20, 0x07	; 7
    15b4:	18 b1       	in	r17, 0x08	; 8
    15b6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    15ba:	86 fd       	sbrc	r24, 6
    15bc:	fc cf       	rjmp	.-8      	; 0x15b6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    15be:	80 e0       	ldi	r24, 0x00	; 0
    15c0:	90 85       	ldd	r25, Z+8	; 0x08
    15c2:	89 17       	cp	r24, r25
    15c4:	48 f4       	brcc	.+18     	; 0x15d8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    15c6:	d9 01       	movw	r26, r18
    15c8:	a8 0f       	add	r26, r24
    15ca:	b1 1d       	adc	r27, r1
    15cc:	a8 0f       	add	r26, r24
    15ce:	b1 1d       	adc	r27, r1
    15d0:	1d 92       	st	X+, r1
    15d2:	1c 92       	st	X, r1
    15d4:	8f 5f       	subi	r24, 0xFF	; 255
    15d6:	f4 cf       	rjmp	.-24     	; 0x15c0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    15d8:	97 b1       	in	r25, 0x07	; 7
    15da:	82 a1       	ldd	r24, Z+34	; 0x22
    15dc:	80 95       	com	r24
    15de:	89 23       	and	r24, r25
    15e0:	87 b9       	out	0x07, r24	; 7
    15e2:	98 b1       	in	r25, 0x08	; 8
    15e4:	82 a1       	ldd	r24, Z+34	; 0x22
    15e6:	80 95       	com	r24
    15e8:	89 23       	and	r24, r25
    15ea:	88 b9       	out	0x08, r24	; 8
    15ec:	87 e8       	ldi	r24, 0x87	; 135
    15ee:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    15f2:	e1 2c       	mov	r14, r1
    15f4:	81 a1       	ldd	r24, Z+33	; 0x21
    15f6:	e8 16       	cp	r14, r24
    15f8:	10 f0       	brcs	.+4      	; 0x15fe <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    15fa:	e1 2c       	mov	r14, r1
    15fc:	29 c0       	rjmp	.+82     	; 0x1650 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    15fe:	50 e0       	ldi	r21, 0x00	; 0
    1600:	80 85       	ldd	r24, Z+8	; 0x08
    1602:	58 17       	cp	r21, r24
    1604:	18 f5       	brcc	.+70     	; 0x164c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1606:	a5 2f       	mov	r26, r21
    1608:	b0 e0       	ldi	r27, 0x00	; 0
    160a:	ef 01       	movw	r28, r30
    160c:	ca 0f       	add	r28, r26
    160e:	db 1f       	adc	r29, r27
    1610:	89 89       	ldd	r24, Y+17	; 0x11
    1612:	80 64       	ori	r24, 0x40	; 64
    1614:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1618:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    161c:	80 64       	ori	r24, 0x40	; 64
    161e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1622:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1626:	86 fd       	sbrc	r24, 6
    1628:	fc cf       	rjmp	.-8      	; 0x1622 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    162a:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    162e:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1632:	aa 0f       	add	r26, r26
    1634:	bb 1f       	adc	r27, r27
    1636:	a2 0f       	add	r26, r18
    1638:	b3 1f       	adc	r27, r19
    163a:	8d 91       	ld	r24, X+
    163c:	9c 91       	ld	r25, X
    163e:	11 97       	sbiw	r26, 0x01	; 1
    1640:	86 0f       	add	r24, r22
    1642:	97 1f       	adc	r25, r23
    1644:	8d 93       	st	X+, r24
    1646:	9c 93       	st	X, r25
    1648:	5f 5f       	subi	r21, 0xFF	; 255
    164a:	da cf       	rjmp	.-76     	; 0x1600 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    164c:	e3 94       	inc	r14
    164e:	d2 cf       	rjmp	.-92     	; 0x15f4 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    1650:	80 85       	ldd	r24, Z+8	; 0x08
    1652:	e8 16       	cp	r14, r24
    1654:	a0 f4       	brcc	.+40     	; 0x167e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    1656:	e9 01       	movw	r28, r18
    1658:	ce 0d       	add	r28, r14
    165a:	d1 1d       	adc	r29, r1
    165c:	ce 0d       	add	r28, r14
    165e:	d1 1d       	adc	r29, r1
    1660:	61 a1       	ldd	r22, Z+33	; 0x21
    1662:	70 e0       	ldi	r23, 0x00	; 0
    1664:	cb 01       	movw	r24, r22
    1666:	95 95       	asr	r25
    1668:	87 95       	ror	r24
    166a:	a8 81       	ld	r26, Y
    166c:	b9 81       	ldd	r27, Y+1	; 0x01
    166e:	8a 0f       	add	r24, r26
    1670:	9b 1f       	adc	r25, r27
    1672:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <__udivmodhi4>
    1676:	79 83       	std	Y+1, r23	; 0x01
    1678:	68 83       	st	Y, r22
    167a:	e3 94       	inc	r14
    167c:	e9 cf       	rjmp	.-46     	; 0x1650 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    167e:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1682:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1686:	18 b9       	out	0x08, r17	; 8
    1688:	47 b9       	out	0x07, r20	; 7
    168a:	cd b7       	in	r28, 0x3d	; 61
    168c:	de b7       	in	r29, 0x3e	; 62
    168e:	e6 e0       	ldi	r30, 0x06	; 6
    1690:	0c 94 c5 0e 	jmp	0x1d8a	; 0x1d8a <__epilogue_restores__+0x18>

00001694 <_ZN16PololuQTRSensors4readEPjh>:
    1694:	a0 e2       	ldi	r26, 0x20	; 32
    1696:	b0 e0       	ldi	r27, 0x00	; 0
    1698:	e0 e5       	ldi	r30, 0x50	; 80
    169a:	fb e0       	ldi	r31, 0x0B	; 11
    169c:	0c 94 a8 0e 	jmp	0x1d50	; 0x1d50 <__prologue_saves__+0x16>
    16a0:	8c 01       	movw	r16, r24
    16a2:	7b 01       	movw	r14, r22
    16a4:	d4 2e       	mov	r13, r20
    16a6:	8f ef       	ldi	r24, 0xFF	; 255
    16a8:	84 0f       	add	r24, r20
    16aa:	82 30       	cpi	r24, 0x02	; 2
    16ac:	18 f4       	brcc	.+6      	; 0x16b4 <_ZN16PololuQTRSensors4readEPjh+0x20>
    16ae:	c8 01       	movw	r24, r16
    16b0:	0e 94 8c 09 	call	0x1318	; 0x1318 <_ZN16PololuQTRSensors10emittersOnEv>
    16b4:	d8 01       	movw	r26, r16
    16b6:	50 96       	adiw	r26, 0x10	; 16
    16b8:	8c 91       	ld	r24, X
    16ba:	b7 01       	movw	r22, r14
    16bc:	81 11       	cpse	r24, r1
    16be:	10 c0       	rjmp	.+32     	; 0x16e0 <_ZN16PololuQTRSensors4readEPjh+0x4c>
    16c0:	c8 01       	movw	r24, r16
    16c2:	0e 94 f5 09 	call	0x13ea	; 0x13ea <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    16c6:	c8 01       	movw	r24, r16
    16c8:	0e 94 77 09 	call	0x12ee	; 0x12ee <_ZN16PololuQTRSensors11emittersOffEv>
    16cc:	b2 e0       	ldi	r27, 0x02	; 2
    16ce:	db 12       	cpse	r13, r27
    16d0:	3a c0       	rjmp	.+116    	; 0x1746 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    16d2:	be 01       	movw	r22, r28
    16d4:	6f 5f       	subi	r22, 0xFF	; 255
    16d6:	7f 4f       	sbci	r23, 0xFF	; 255
    16d8:	c8 01       	movw	r24, r16
    16da:	0e 94 f5 09 	call	0x13ea	; 0x13ea <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    16de:	0f c0       	rjmp	.+30     	; 0x16fe <_ZN16PololuQTRSensors4readEPjh+0x6a>
    16e0:	c8 01       	movw	r24, r16
    16e2:	0e 94 cd 0a 	call	0x159a	; 0x159a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    16e6:	c8 01       	movw	r24, r16
    16e8:	0e 94 77 09 	call	0x12ee	; 0x12ee <_ZN16PololuQTRSensors11emittersOffEv>
    16ec:	e2 e0       	ldi	r30, 0x02	; 2
    16ee:	de 12       	cpse	r13, r30
    16f0:	2a c0       	rjmp	.+84     	; 0x1746 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    16f2:	be 01       	movw	r22, r28
    16f4:	6f 5f       	subi	r22, 0xFF	; 255
    16f6:	7f 4f       	sbci	r23, 0xFF	; 255
    16f8:	c8 01       	movw	r24, r16
    16fa:	0e 94 cd 0a 	call	0x159a	; 0x159a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    16fe:	40 e0       	ldi	r20, 0x00	; 0
    1700:	f8 01       	movw	r30, r16
    1702:	80 85       	ldd	r24, Z+8	; 0x08
    1704:	48 17       	cp	r20, r24
    1706:	f8 f4       	brcc	.+62     	; 0x1746 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1708:	84 2f       	mov	r24, r20
    170a:	90 e0       	ldi	r25, 0x00	; 0
    170c:	88 0f       	add	r24, r24
    170e:	99 1f       	adc	r25, r25
    1710:	f7 01       	movw	r30, r14
    1712:	e8 0f       	add	r30, r24
    1714:	f9 1f       	adc	r31, r25
    1716:	21 e0       	ldi	r18, 0x01	; 1
    1718:	30 e0       	ldi	r19, 0x00	; 0
    171a:	2c 0f       	add	r18, r28
    171c:	3d 1f       	adc	r19, r29
    171e:	82 0f       	add	r24, r18
    1720:	93 1f       	adc	r25, r19
    1722:	d8 01       	movw	r26, r16
    1724:	1e 96       	adiw	r26, 0x0e	; 14
    1726:	2d 91       	ld	r18, X+
    1728:	3c 91       	ld	r19, X
    172a:	1f 97       	sbiw	r26, 0x0f	; 15
    172c:	dc 01       	movw	r26, r24
    172e:	8d 91       	ld	r24, X+
    1730:	9c 91       	ld	r25, X
    1732:	28 1b       	sub	r18, r24
    1734:	39 0b       	sbc	r19, r25
    1736:	80 81       	ld	r24, Z
    1738:	91 81       	ldd	r25, Z+1	; 0x01
    173a:	82 0f       	add	r24, r18
    173c:	93 1f       	adc	r25, r19
    173e:	91 83       	std	Z+1, r25	; 0x01
    1740:	80 83       	st	Z, r24
    1742:	4f 5f       	subi	r20, 0xFF	; 255
    1744:	dd cf       	rjmp	.-70     	; 0x1700 <_ZN16PololuQTRSensors4readEPjh+0x6c>
    1746:	a0 96       	adiw	r28, 0x20	; 32
    1748:	e7 e0       	ldi	r30, 0x07	; 7
    174a:	0c 94 c4 0e 	jmp	0x1d88	; 0x1d88 <__epilogue_restores__+0x16>

0000174e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    174e:	2f 92       	push	r2
    1750:	3f 92       	push	r3
    1752:	5f 92       	push	r5
    1754:	6f 92       	push	r6
    1756:	7f 92       	push	r7
    1758:	8f 92       	push	r8
    175a:	9f 92       	push	r9
    175c:	af 92       	push	r10
    175e:	bf 92       	push	r11
    1760:	cf 92       	push	r12
    1762:	df 92       	push	r13
    1764:	ef 92       	push	r14
    1766:	ff 92       	push	r15
    1768:	0f 93       	push	r16
    176a:	1f 93       	push	r17
    176c:	cf 93       	push	r28
    176e:	df 93       	push	r29
    1770:	cd b7       	in	r28, 0x3d	; 61
    1772:	de b7       	in	r29, 0x3e	; 62
    1774:	c0 56       	subi	r28, 0x60	; 96
    1776:	d1 09       	sbc	r29, r1
    1778:	0f b6       	in	r0, 0x3f	; 63
    177a:	f8 94       	cli
    177c:	de bf       	out	0x3e, r29	; 62
    177e:	0f be       	out	0x3f, r0	; 63
    1780:	cd bf       	out	0x3d, r28	; 61
    1782:	8c 01       	movw	r16, r24
    1784:	4b 01       	movw	r8, r22
    1786:	5a 01       	movw	r10, r20
    1788:	52 2e       	mov	r5, r18
    178a:	da 01       	movw	r26, r20
    178c:	8d 91       	ld	r24, X+
    178e:	9c 91       	ld	r25, X
    1790:	89 2b       	or	r24, r25
    1792:	31 f0       	breq	.+12     	; 0x17a0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    1794:	f4 01       	movw	r30, r8
    1796:	80 81       	ld	r24, Z
    1798:	91 81       	ldd	r25, Z+1	; 0x01
    179a:	89 2b       	or	r24, r25
    179c:	f1 f4       	brne	.+60     	; 0x17da <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    179e:	24 c0       	rjmp	.+72     	; 0x17e8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    17a0:	d8 01       	movw	r26, r16
    17a2:	18 96       	adiw	r26, 0x08	; 8
    17a4:	8c 91       	ld	r24, X
    17a6:	90 e0       	ldi	r25, 0x00	; 0
    17a8:	88 0f       	add	r24, r24
    17aa:	99 1f       	adc	r25, r25
    17ac:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <malloc>
    17b0:	f5 01       	movw	r30, r10
    17b2:	91 83       	std	Z+1, r25	; 0x01
    17b4:	80 83       	st	Z, r24
    17b6:	00 97       	sbiw	r24, 0x00	; 0
    17b8:	09 f4       	brne	.+2      	; 0x17bc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    17ba:	b1 c0       	rjmp	.+354    	; 0x191e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    17bc:	fc 01       	movw	r30, r24
    17be:	20 e0       	ldi	r18, 0x00	; 0
    17c0:	30 e0       	ldi	r19, 0x00	; 0
    17c2:	d8 01       	movw	r26, r16
    17c4:	18 96       	adiw	r26, 0x08	; 8
    17c6:	8c 91       	ld	r24, X
    17c8:	90 e0       	ldi	r25, 0x00	; 0
    17ca:	28 17       	cp	r18, r24
    17cc:	39 07       	cpc	r19, r25
    17ce:	14 f7       	brge	.-60     	; 0x1794 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    17d0:	11 92       	st	Z+, r1
    17d2:	11 92       	st	Z+, r1
    17d4:	2f 5f       	subi	r18, 0xFF	; 255
    17d6:	3f 4f       	sbci	r19, 0xFF	; 255
    17d8:	f4 cf       	rjmp	.-24     	; 0x17c2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    17da:	e1 2c       	mov	r14, r1
    17dc:	f1 2c       	mov	r15, r1
    17de:	6e 01       	movw	r12, r28
    17e0:	b1 e2       	ldi	r27, 0x21	; 33
    17e2:	cb 0e       	add	r12, r27
    17e4:	d1 1c       	adc	r13, r1
    17e6:	21 c0       	rjmp	.+66     	; 0x182a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    17e8:	f8 01       	movw	r30, r16
    17ea:	80 85       	ldd	r24, Z+8	; 0x08
    17ec:	90 e0       	ldi	r25, 0x00	; 0
    17ee:	88 0f       	add	r24, r24
    17f0:	99 1f       	adc	r25, r25
    17f2:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <malloc>
    17f6:	d4 01       	movw	r26, r8
    17f8:	8d 93       	st	X+, r24
    17fa:	9c 93       	st	X, r25
    17fc:	00 97       	sbiw	r24, 0x00	; 0
    17fe:	09 f4       	brne	.+2      	; 0x1802 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    1800:	8e c0       	rjmp	.+284    	; 0x191e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1802:	fc 01       	movw	r30, r24
    1804:	20 e0       	ldi	r18, 0x00	; 0
    1806:	30 e0       	ldi	r19, 0x00	; 0
    1808:	d8 01       	movw	r26, r16
    180a:	18 96       	adiw	r26, 0x08	; 8
    180c:	8c 91       	ld	r24, X
    180e:	90 e0       	ldi	r25, 0x00	; 0
    1810:	28 17       	cp	r18, r24
    1812:	39 07       	cpc	r19, r25
    1814:	14 f7       	brge	.-60     	; 0x17da <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1816:	d8 01       	movw	r26, r16
    1818:	1e 96       	adiw	r26, 0x0e	; 14
    181a:	8d 91       	ld	r24, X+
    181c:	9c 91       	ld	r25, X
    181e:	1f 97       	sbiw	r26, 0x0f	; 15
    1820:	81 93       	st	Z+, r24
    1822:	91 93       	st	Z+, r25
    1824:	2f 5f       	subi	r18, 0xFF	; 255
    1826:	3f 4f       	sbci	r19, 0xFF	; 255
    1828:	ef cf       	rjmp	.-34     	; 0x1808 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    182a:	45 2d       	mov	r20, r5
    182c:	be 01       	movw	r22, r28
    182e:	6f 5b       	subi	r22, 0xBF	; 191
    1830:	7f 4f       	sbci	r23, 0xFF	; 255
    1832:	c8 01       	movw	r24, r16
    1834:	0e 94 4a 0b 	call	0x1694	; 0x1694 <_ZN16PololuQTRSensors4readEPjh>
    1838:	f8 01       	movw	r30, r16
    183a:	60 84       	ldd	r6, Z+8	; 0x08
    183c:	71 2c       	mov	r7, r1
    183e:	fe 01       	movw	r30, r28
    1840:	ef 5b       	subi	r30, 0xBF	; 191
    1842:	ff 4f       	sbci	r31, 0xFF	; 255
    1844:	c6 01       	movw	r24, r12
    1846:	9e 01       	movw	r18, r28
    1848:	2f 5f       	subi	r18, 0xFF	; 255
    184a:	3f 4f       	sbci	r19, 0xFF	; 255
    184c:	19 01       	movw	r2, r18
    184e:	20 e0       	ldi	r18, 0x00	; 0
    1850:	30 e0       	ldi	r19, 0x00	; 0
    1852:	26 15       	cp	r18, r6
    1854:	37 05       	cpc	r19, r7
    1856:	4c f5       	brge	.+82     	; 0x18aa <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    1858:	e1 14       	cp	r14, r1
    185a:	f1 04       	cpc	r15, r1
    185c:	89 f0       	breq	.+34     	; 0x1880 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    185e:	dc 01       	movw	r26, r24
    1860:	6d 91       	ld	r22, X+
    1862:	7c 91       	ld	r23, X
    1864:	40 81       	ld	r20, Z
    1866:	51 81       	ldd	r21, Z+1	; 0x01
    1868:	64 17       	cp	r22, r20
    186a:	75 07       	cpc	r23, r21
    186c:	48 f0       	brcs	.+18     	; 0x1880 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    186e:	d1 01       	movw	r26, r2
    1870:	6d 91       	ld	r22, X+
    1872:	7c 91       	ld	r23, X
    1874:	40 81       	ld	r20, Z
    1876:	51 81       	ldd	r21, Z+1	; 0x01
    1878:	46 17       	cp	r20, r22
    187a:	57 07       	cpc	r21, r23
    187c:	48 f0       	brcs	.+18     	; 0x1890 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    187e:	0d c0       	rjmp	.+26     	; 0x189a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    1880:	40 81       	ld	r20, Z
    1882:	51 81       	ldd	r21, Z+1	; 0x01
    1884:	dc 01       	movw	r26, r24
    1886:	4d 93       	st	X+, r20
    1888:	5c 93       	st	X, r21
    188a:	e1 14       	cp	r14, r1
    188c:	f1 04       	cpc	r15, r1
    188e:	79 f7       	brne	.-34     	; 0x186e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    1890:	40 81       	ld	r20, Z
    1892:	51 81       	ldd	r21, Z+1	; 0x01
    1894:	d1 01       	movw	r26, r2
    1896:	4d 93       	st	X+, r20
    1898:	5c 93       	st	X, r21
    189a:	2f 5f       	subi	r18, 0xFF	; 255
    189c:	3f 4f       	sbci	r19, 0xFF	; 255
    189e:	b2 e0       	ldi	r27, 0x02	; 2
    18a0:	2b 0e       	add	r2, r27
    18a2:	31 1c       	adc	r3, r1
    18a4:	32 96       	adiw	r30, 0x02	; 2
    18a6:	02 96       	adiw	r24, 0x02	; 2
    18a8:	d4 cf       	rjmp	.-88     	; 0x1852 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    18aa:	ef ef       	ldi	r30, 0xFF	; 255
    18ac:	ee 1a       	sub	r14, r30
    18ae:	fe 0a       	sbc	r15, r30
    18b0:	fa e0       	ldi	r31, 0x0A	; 10
    18b2:	ef 16       	cp	r14, r31
    18b4:	f1 04       	cpc	r15, r1
    18b6:	09 f0       	breq	.+2      	; 0x18ba <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    18b8:	b8 cf       	rjmp	.-144    	; 0x182a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    18ba:	9e 01       	movw	r18, r28
    18bc:	2f 5f       	subi	r18, 0xFF	; 255
    18be:	3f 4f       	sbci	r19, 0xFF	; 255
    18c0:	79 01       	movw	r14, r18
    18c2:	36 01       	movw	r6, r12
    18c4:	80 e0       	ldi	r24, 0x00	; 0
    18c6:	90 e0       	ldi	r25, 0x00	; 0
    18c8:	f8 01       	movw	r30, r16
    18ca:	20 85       	ldd	r18, Z+8	; 0x08
    18cc:	30 e0       	ldi	r19, 0x00	; 0
    18ce:	82 17       	cp	r24, r18
    18d0:	93 07       	cpc	r25, r19
    18d2:	2c f5       	brge	.+74     	; 0x191e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    18d4:	d7 01       	movw	r26, r14
    18d6:	2d 91       	ld	r18, X+
    18d8:	3d 91       	ld	r19, X+
    18da:	7d 01       	movw	r14, r26
    18dc:	b3 01       	movw	r22, r6
    18de:	6c 19       	sub	r22, r12
    18e0:	7d 09       	sbc	r23, r13
    18e2:	d5 01       	movw	r26, r10
    18e4:	ed 91       	ld	r30, X+
    18e6:	fc 91       	ld	r31, X
    18e8:	e6 0f       	add	r30, r22
    18ea:	f7 1f       	adc	r31, r23
    18ec:	40 81       	ld	r20, Z
    18ee:	51 81       	ldd	r21, Z+1	; 0x01
    18f0:	42 17       	cp	r20, r18
    18f2:	53 07       	cpc	r21, r19
    18f4:	10 f4       	brcc	.+4      	; 0x18fa <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    18f6:	31 83       	std	Z+1, r19	; 0x01
    18f8:	20 83       	st	Z, r18
    18fa:	f3 01       	movw	r30, r6
    18fc:	21 91       	ld	r18, Z+
    18fe:	31 91       	ld	r19, Z+
    1900:	3f 01       	movw	r6, r30
    1902:	d4 01       	movw	r26, r8
    1904:	ed 91       	ld	r30, X+
    1906:	fc 91       	ld	r31, X
    1908:	e6 0f       	add	r30, r22
    190a:	f7 1f       	adc	r31, r23
    190c:	40 81       	ld	r20, Z
    190e:	51 81       	ldd	r21, Z+1	; 0x01
    1910:	24 17       	cp	r18, r20
    1912:	35 07       	cpc	r19, r21
    1914:	10 f4       	brcc	.+4      	; 0x191a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    1916:	31 83       	std	Z+1, r19	; 0x01
    1918:	20 83       	st	Z, r18
    191a:	01 96       	adiw	r24, 0x01	; 1
    191c:	d5 cf       	rjmp	.-86     	; 0x18c8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    191e:	c0 5a       	subi	r28, 0xA0	; 160
    1920:	df 4f       	sbci	r29, 0xFF	; 255
    1922:	0f b6       	in	r0, 0x3f	; 63
    1924:	f8 94       	cli
    1926:	de bf       	out	0x3e, r29	; 62
    1928:	0f be       	out	0x3f, r0	; 63
    192a:	cd bf       	out	0x3d, r28	; 61
    192c:	df 91       	pop	r29
    192e:	cf 91       	pop	r28
    1930:	1f 91       	pop	r17
    1932:	0f 91       	pop	r16
    1934:	ff 90       	pop	r15
    1936:	ef 90       	pop	r14
    1938:	df 90       	pop	r13
    193a:	cf 90       	pop	r12
    193c:	bf 90       	pop	r11
    193e:	af 90       	pop	r10
    1940:	9f 90       	pop	r9
    1942:	8f 90       	pop	r8
    1944:	7f 90       	pop	r7
    1946:	6f 90       	pop	r6
    1948:	5f 90       	pop	r5
    194a:	3f 90       	pop	r3
    194c:	2f 90       	pop	r2
    194e:	08 95       	ret

00001950 <_ZN16PololuQTRSensors9calibrateEh>:
    1950:	1f 93       	push	r17
    1952:	cf 93       	push	r28
    1954:	df 93       	push	r29
    1956:	ec 01       	movw	r28, r24
    1958:	16 2f       	mov	r17, r22
    195a:	8f ef       	ldi	r24, 0xFF	; 255
    195c:	86 0f       	add	r24, r22
    195e:	82 30       	cpi	r24, 0x02	; 2
    1960:	18 f0       	brcs	.+6      	; 0x1968 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    1962:	66 23       	and	r22, r22
    1964:	59 f0       	breq	.+22     	; 0x197c <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    1966:	14 c0       	rjmp	.+40     	; 0x1990 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1968:	21 e0       	ldi	r18, 0x01	; 1
    196a:	ae 01       	movw	r20, r28
    196c:	4e 5f       	subi	r20, 0xFE	; 254
    196e:	5f 4f       	sbci	r21, 0xFF	; 255
    1970:	be 01       	movw	r22, r28
    1972:	ce 01       	movw	r24, r28
    1974:	0e 94 a7 0b 	call	0x174e	; 0x174e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1978:	12 30       	cpi	r17, 0x02	; 2
    197a:	51 f4       	brne	.+20     	; 0x1990 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    197c:	ae 01       	movw	r20, r28
    197e:	4a 5f       	subi	r20, 0xFA	; 250
    1980:	5f 4f       	sbci	r21, 0xFF	; 255
    1982:	be 01       	movw	r22, r28
    1984:	6c 5f       	subi	r22, 0xFC	; 252
    1986:	7f 4f       	sbci	r23, 0xFF	; 255
    1988:	20 e0       	ldi	r18, 0x00	; 0
    198a:	ce 01       	movw	r24, r28
    198c:	0e 94 a7 0b 	call	0x174e	; 0x174e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1990:	df 91       	pop	r29
    1992:	cf 91       	pop	r28
    1994:	1f 91       	pop	r17
    1996:	08 95       	ret

00001998 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    1998:	a0 e0       	ldi	r26, 0x00	; 0
    199a:	b0 e0       	ldi	r27, 0x00	; 0
    199c:	e2 ed       	ldi	r30, 0xD2	; 210
    199e:	fc e0       	ldi	r31, 0x0C	; 12
    19a0:	0c 94 a6 0e 	jmp	0x1d4c	; 0x1d4c <__prologue_saves__+0x12>
    19a4:	ec 01       	movw	r28, r24
    19a6:	8b 01       	movw	r16, r22
    19a8:	b4 2e       	mov	r11, r20
    19aa:	84 2f       	mov	r24, r20
    19ac:	8d 7f       	andi	r24, 0xFD	; 253
    19ae:	51 f4       	brne	.+20     	; 0x19c4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    19b0:	8c 81       	ldd	r24, Y+4	; 0x04
    19b2:	9d 81       	ldd	r25, Y+5	; 0x05
    19b4:	89 2b       	or	r24, r25
    19b6:	09 f4       	brne	.+2      	; 0x19ba <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    19b8:	97 c0       	rjmp	.+302    	; 0x1ae8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    19ba:	8e 81       	ldd	r24, Y+6	; 0x06
    19bc:	9f 81       	ldd	r25, Y+7	; 0x07
    19be:	89 2b       	or	r24, r25
    19c0:	09 f4       	brne	.+2      	; 0x19c4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    19c2:	92 c0       	rjmp	.+292    	; 0x1ae8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    19c4:	8f ef       	ldi	r24, 0xFF	; 255
    19c6:	8b 0d       	add	r24, r11
    19c8:	82 30       	cpi	r24, 0x02	; 2
    19ca:	50 f4       	brcc	.+20     	; 0x19e0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    19cc:	88 81       	ld	r24, Y
    19ce:	99 81       	ldd	r25, Y+1	; 0x01
    19d0:	89 2b       	or	r24, r25
    19d2:	09 f4       	brne	.+2      	; 0x19d6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    19d4:	89 c0       	rjmp	.+274    	; 0x1ae8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    19d6:	8a 81       	ldd	r24, Y+2	; 0x02
    19d8:	9b 81       	ldd	r25, Y+3	; 0x03
    19da:	89 2b       	or	r24, r25
    19dc:	09 f4       	brne	.+2      	; 0x19e0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    19de:	84 c0       	rjmp	.+264    	; 0x1ae8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    19e0:	4b 2d       	mov	r20, r11
    19e2:	b8 01       	movw	r22, r16
    19e4:	ce 01       	movw	r24, r28
    19e6:	0e 94 4a 0b 	call	0x1694	; 0x1694 <_ZN16PololuQTRSensors4readEPjh>
    19ea:	78 01       	movw	r14, r16
    19ec:	00 e0       	ldi	r16, 0x00	; 0
    19ee:	10 e0       	ldi	r17, 0x00	; 0
    19f0:	c1 2c       	mov	r12, r1
    19f2:	d1 2c       	mov	r13, r1
    19f4:	88 85       	ldd	r24, Y+8	; 0x08
    19f6:	90 e0       	ldi	r25, 0x00	; 0
    19f8:	c8 16       	cp	r12, r24
    19fa:	d9 06       	cpc	r13, r25
    19fc:	0c f0       	brlt	.+2      	; 0x1a00 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    19fe:	74 c0       	rjmp	.+232    	; 0x1ae8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1a00:	81 e0       	ldi	r24, 0x01	; 1
    1a02:	b8 12       	cpse	r11, r24
    1a04:	0a c0       	rjmp	.+20     	; 0x1a1a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    1a06:	ea 81       	ldd	r30, Y+2	; 0x02
    1a08:	fb 81       	ldd	r31, Y+3	; 0x03
    1a0a:	e0 0f       	add	r30, r16
    1a0c:	f1 1f       	adc	r31, r17
    1a0e:	01 90       	ld	r0, Z+
    1a10:	f0 81       	ld	r31, Z
    1a12:	e0 2d       	mov	r30, r0
    1a14:	a8 81       	ld	r26, Y
    1a16:	b9 81       	ldd	r27, Y+1	; 0x01
    1a18:	0d c0       	rjmp	.+26     	; 0x1a34 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    1a1a:	8c 81       	ldd	r24, Y+4	; 0x04
    1a1c:	9d 81       	ldd	r25, Y+5	; 0x05
    1a1e:	2e 81       	ldd	r18, Y+6	; 0x06
    1a20:	3f 81       	ldd	r19, Y+7	; 0x07
    1a22:	b1 10       	cpse	r11, r1
    1a24:	0c c0       	rjmp	.+24     	; 0x1a3e <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    1a26:	f9 01       	movw	r30, r18
    1a28:	e0 0f       	add	r30, r16
    1a2a:	f1 1f       	adc	r31, r17
    1a2c:	01 90       	ld	r0, Z+
    1a2e:	f0 81       	ld	r31, Z
    1a30:	e0 2d       	mov	r30, r0
    1a32:	dc 01       	movw	r26, r24
    1a34:	a0 0f       	add	r26, r16
    1a36:	b1 1f       	adc	r27, r17
    1a38:	8d 91       	ld	r24, X+
    1a3a:	9c 91       	ld	r25, X
    1a3c:	28 c0       	rjmp	.+80     	; 0x1a8e <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    1a3e:	fc 01       	movw	r30, r24
    1a40:	e0 0f       	add	r30, r16
    1a42:	f1 1f       	adc	r31, r17
    1a44:	40 81       	ld	r20, Z
    1a46:	51 81       	ldd	r21, Z+1	; 0x01
    1a48:	e8 81       	ld	r30, Y
    1a4a:	f9 81       	ldd	r31, Y+1	; 0x01
    1a4c:	e0 0f       	add	r30, r16
    1a4e:	f1 1f       	adc	r31, r17
    1a50:	80 81       	ld	r24, Z
    1a52:	91 81       	ldd	r25, Z+1	; 0x01
    1a54:	ee 85       	ldd	r30, Y+14	; 0x0e
    1a56:	ff 85       	ldd	r31, Y+15	; 0x0f
    1a58:	48 17       	cp	r20, r24
    1a5a:	59 07       	cpc	r21, r25
    1a5c:	10 f4       	brcc	.+4      	; 0x1a62 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    1a5e:	cf 01       	movw	r24, r30
    1a60:	04 c0       	rjmp	.+8      	; 0x1a6a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    1a62:	8e 0f       	add	r24, r30
    1a64:	9f 1f       	adc	r25, r31
    1a66:	84 1b       	sub	r24, r20
    1a68:	95 0b       	sbc	r25, r21
    1a6a:	d9 01       	movw	r26, r18
    1a6c:	a0 0f       	add	r26, r16
    1a6e:	b1 1f       	adc	r27, r17
    1a70:	2d 91       	ld	r18, X+
    1a72:	3c 91       	ld	r19, X
    1a74:	aa 81       	ldd	r26, Y+2	; 0x02
    1a76:	bb 81       	ldd	r27, Y+3	; 0x03
    1a78:	a0 0f       	add	r26, r16
    1a7a:	b1 1f       	adc	r27, r17
    1a7c:	4d 91       	ld	r20, X+
    1a7e:	5c 91       	ld	r21, X
    1a80:	24 17       	cp	r18, r20
    1a82:	35 07       	cpc	r19, r21
    1a84:	20 f0       	brcs	.+8      	; 0x1a8e <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    1a86:	e4 0f       	add	r30, r20
    1a88:	f5 1f       	adc	r31, r21
    1a8a:	e2 1b       	sub	r30, r18
    1a8c:	f3 0b       	sbc	r31, r19
    1a8e:	e8 1b       	sub	r30, r24
    1a90:	f9 0b       	sbc	r31, r25
    1a92:	a9 f0       	breq	.+42     	; 0x1abe <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    1a94:	d7 01       	movw	r26, r14
    1a96:	2d 91       	ld	r18, X+
    1a98:	3c 91       	ld	r19, X
    1a9a:	40 e0       	ldi	r20, 0x00	; 0
    1a9c:	50 e0       	ldi	r21, 0x00	; 0
    1a9e:	28 1b       	sub	r18, r24
    1aa0:	39 0b       	sbc	r19, r25
    1aa2:	41 09       	sbc	r20, r1
    1aa4:	51 09       	sbc	r21, r1
    1aa6:	a8 ee       	ldi	r26, 0xE8	; 232
    1aa8:	b3 e0       	ldi	r27, 0x03	; 3
    1aaa:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <__muluhisi3>
    1aae:	9f 01       	movw	r18, r30
    1ab0:	40 e0       	ldi	r20, 0x00	; 0
    1ab2:	50 e0       	ldi	r21, 0x00	; 0
    1ab4:	0e 94 56 0e 	call	0x1cac	; 0x1cac <__divmodsi4>
    1ab8:	37 fd       	sbrc	r19, 7
    1aba:	0a c0       	rjmp	.+20     	; 0x1ad0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    1abc:	02 c0       	rjmp	.+4      	; 0x1ac2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    1abe:	20 e0       	ldi	r18, 0x00	; 0
    1ac0:	30 e0       	ldi	r19, 0x00	; 0
    1ac2:	29 3e       	cpi	r18, 0xE9	; 233
    1ac4:	b3 e0       	ldi	r27, 0x03	; 3
    1ac6:	3b 07       	cpc	r19, r27
    1ac8:	2c f0       	brlt	.+10     	; 0x1ad4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1aca:	28 ee       	ldi	r18, 0xE8	; 232
    1acc:	33 e0       	ldi	r19, 0x03	; 3
    1ace:	02 c0       	rjmp	.+4      	; 0x1ad4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1ad0:	20 e0       	ldi	r18, 0x00	; 0
    1ad2:	30 e0       	ldi	r19, 0x00	; 0
    1ad4:	f7 01       	movw	r30, r14
    1ad6:	21 93       	st	Z+, r18
    1ad8:	31 93       	st	Z+, r19
    1ada:	7f 01       	movw	r14, r30
    1adc:	ff ef       	ldi	r31, 0xFF	; 255
    1ade:	cf 1a       	sub	r12, r31
    1ae0:	df 0a       	sbc	r13, r31
    1ae2:	0e 5f       	subi	r16, 0xFE	; 254
    1ae4:	1f 4f       	sbci	r17, 0xFF	; 255
    1ae6:	86 cf       	rjmp	.-244    	; 0x19f4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    1ae8:	cd b7       	in	r28, 0x3d	; 61
    1aea:	de b7       	in	r29, 0x3e	; 62
    1aec:	e9 e0       	ldi	r30, 0x09	; 9
    1aee:	0c 94 c2 0e 	jmp	0x1d84	; 0x1d84 <__epilogue_restores__+0x12>

00001af2 <_ZN16PololuQTRSensors8readLineEPjhh>:
    1af2:	a0 e0       	ldi	r26, 0x00	; 0
    1af4:	b0 e0       	ldi	r27, 0x00	; 0
    1af6:	ef e7       	ldi	r30, 0x7F	; 127
    1af8:	fd e0       	ldi	r31, 0x0D	; 13
    1afa:	0c 94 9d 0e 	jmp	0x1d3a	; 0x1d3a <__prologue_saves__>
    1afe:	ec 01       	movw	r28, r24
    1b00:	8b 01       	movw	r16, r22
    1b02:	82 2e       	mov	r8, r18
    1b04:	0e 94 cc 0c 	call	0x1998	; 0x1998 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    1b08:	28 84       	ldd	r2, Y+8	; 0x08
    1b0a:	e8 01       	movw	r28, r16
    1b0c:	41 2c       	mov	r4, r1
    1b0e:	51 2c       	mov	r5, r1
    1b10:	32 01       	movw	r6, r4
    1b12:	00 e0       	ldi	r16, 0x00	; 0
    1b14:	10 e0       	ldi	r17, 0x00	; 0
    1b16:	c1 2c       	mov	r12, r1
    1b18:	d1 2c       	mov	r13, r1
    1b1a:	76 01       	movw	r14, r12
    1b1c:	31 2c       	mov	r3, r1
    1b1e:	91 2c       	mov	r9, r1
    1b20:	58 ee       	ldi	r21, 0xE8	; 232
    1b22:	a5 2e       	mov	r10, r21
    1b24:	53 e0       	ldi	r21, 0x03	; 3
    1b26:	b5 2e       	mov	r11, r21
    1b28:	92 14       	cp	r9, r2
    1b2a:	21 f1       	breq	.+72     	; 0x1b74 <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    1b2c:	e9 91       	ld	r30, Y+
    1b2e:	f9 91       	ld	r31, Y+
    1b30:	88 20       	and	r8, r8
    1b32:	21 f0       	breq	.+8      	; 0x1b3c <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    1b34:	c5 01       	movw	r24, r10
    1b36:	8e 1b       	sub	r24, r30
    1b38:	9f 0b       	sbc	r25, r31
    1b3a:	fc 01       	movw	r30, r24
    1b3c:	e9 3c       	cpi	r30, 0xC9	; 201
    1b3e:	f1 05       	cpc	r31, r1
    1b40:	24 f4       	brge	.+8      	; 0x1b4a <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    1b42:	e3 33       	cpi	r30, 0x33	; 51
    1b44:	f1 05       	cpc	r31, r1
    1b46:	74 f0       	brlt	.+28     	; 0x1b64 <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    1b48:	02 c0       	rjmp	.+4      	; 0x1b4e <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    1b4a:	33 24       	eor	r3, r3
    1b4c:	33 94       	inc	r3
    1b4e:	df 01       	movw	r26, r30
    1b50:	a3 01       	movw	r20, r6
    1b52:	92 01       	movw	r18, r4
    1b54:	0e 94 95 0e 	call	0x1d2a	; 0x1d2a <__mulshisi3>
    1b58:	c6 0e       	add	r12, r22
    1b5a:	d7 1e       	adc	r13, r23
    1b5c:	e8 1e       	adc	r14, r24
    1b5e:	f9 1e       	adc	r15, r25
    1b60:	0e 0f       	add	r16, r30
    1b62:	1f 1f       	adc	r17, r31
    1b64:	93 94       	inc	r9
    1b66:	98 ee       	ldi	r25, 0xE8	; 232
    1b68:	49 0e       	add	r4, r25
    1b6a:	93 e0       	ldi	r25, 0x03	; 3
    1b6c:	59 1e       	adc	r5, r25
    1b6e:	61 1c       	adc	r6, r1
    1b70:	71 1c       	adc	r7, r1
    1b72:	da cf       	rjmp	.-76     	; 0x1b28 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    1b74:	31 10       	cpse	r3, r1
    1b76:	1e c0       	rjmp	.+60     	; 0x1bb4 <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    1b78:	49 2d       	mov	r20, r9
    1b7a:	50 e0       	ldi	r21, 0x00	; 0
    1b7c:	41 50       	subi	r20, 0x01	; 1
    1b7e:	51 09       	sbc	r21, r1
    1b80:	24 ef       	ldi	r18, 0xF4	; 244
    1b82:	31 e0       	ldi	r19, 0x01	; 1
    1b84:	42 9f       	mul	r20, r18
    1b86:	c0 01       	movw	r24, r0
    1b88:	43 9f       	mul	r20, r19
    1b8a:	90 0d       	add	r25, r0
    1b8c:	52 9f       	mul	r21, r18
    1b8e:	90 0d       	add	r25, r0
    1b90:	11 24       	eor	r1, r1
    1b92:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    1b96:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    1b9a:	28 17       	cp	r18, r24
    1b9c:	39 07       	cpc	r19, r25
    1b9e:	b4 f0       	brlt	.+44     	; 0x1bcc <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    1ba0:	88 ee       	ldi	r24, 0xE8	; 232
    1ba2:	93 e0       	ldi	r25, 0x03	; 3
    1ba4:	48 9f       	mul	r20, r24
    1ba6:	90 01       	movw	r18, r0
    1ba8:	49 9f       	mul	r20, r25
    1baa:	30 0d       	add	r19, r0
    1bac:	58 9f       	mul	r21, r24
    1bae:	30 0d       	add	r19, r0
    1bb0:	11 24       	eor	r1, r1
    1bb2:	0e c0       	rjmp	.+28     	; 0x1bd0 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    1bb4:	98 01       	movw	r18, r16
    1bb6:	40 e0       	ldi	r20, 0x00	; 0
    1bb8:	50 e0       	ldi	r21, 0x00	; 0
    1bba:	c7 01       	movw	r24, r14
    1bbc:	b6 01       	movw	r22, r12
    1bbe:	0e 94 34 0e 	call	0x1c68	; 0x1c68 <__udivmodsi4>
    1bc2:	30 93 91 01 	sts	0x0191, r19	; 0x800191 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    1bc6:	20 93 90 01 	sts	0x0190, r18	; 0x800190 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    1bca:	02 c0       	rjmp	.+4      	; 0x1bd0 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    1bcc:	20 e0       	ldi	r18, 0x00	; 0
    1bce:	30 e0       	ldi	r19, 0x00	; 0
    1bd0:	c9 01       	movw	r24, r18
    1bd2:	cd b7       	in	r28, 0x3d	; 61
    1bd4:	de b7       	in	r29, 0x3e	; 62
    1bd6:	e2 e1       	ldi	r30, 0x12	; 18
    1bd8:	0c 94 b9 0e 	jmp	0x1d72	; 0x1d72 <__epilogue_restores__>

00001bdc <_ZN16PololuQTRSensorsD1Ev>:
    1bdc:	cf 93       	push	r28
    1bde:	df 93       	push	r29
    1be0:	ec 01       	movw	r28, r24
    1be2:	8a 81       	ldd	r24, Y+2	; 0x02
    1be4:	9b 81       	ldd	r25, Y+3	; 0x03
    1be6:	00 97       	sbiw	r24, 0x00	; 0
    1be8:	11 f0       	breq	.+4      	; 0x1bee <_ZN16PololuQTRSensorsD1Ev+0x12>
    1bea:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <free>
    1bee:	8e 81       	ldd	r24, Y+6	; 0x06
    1bf0:	9f 81       	ldd	r25, Y+7	; 0x07
    1bf2:	00 97       	sbiw	r24, 0x00	; 0
    1bf4:	11 f0       	breq	.+4      	; 0x1bfa <_ZN16PololuQTRSensorsD1Ev+0x1e>
    1bf6:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <free>
    1bfa:	88 81       	ld	r24, Y
    1bfc:	99 81       	ldd	r25, Y+1	; 0x01
    1bfe:	00 97       	sbiw	r24, 0x00	; 0
    1c00:	11 f0       	breq	.+4      	; 0x1c06 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    1c02:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <free>
    1c06:	8c 81       	ldd	r24, Y+4	; 0x04
    1c08:	9d 81       	ldd	r25, Y+5	; 0x05
    1c0a:	00 97       	sbiw	r24, 0x00	; 0
    1c0c:	11 f0       	breq	.+4      	; 0x1c12 <_ZN16PololuQTRSensorsD1Ev+0x36>
    1c0e:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <free>
    1c12:	df 91       	pop	r29
    1c14:	cf 91       	pop	r28
    1c16:	08 95       	ret

00001c18 <__udivmodhi4>:
    1c18:	aa 1b       	sub	r26, r26
    1c1a:	bb 1b       	sub	r27, r27
    1c1c:	51 e1       	ldi	r21, 0x11	; 17
    1c1e:	07 c0       	rjmp	.+14     	; 0x1c2e <__udivmodhi4_ep>

00001c20 <__udivmodhi4_loop>:
    1c20:	aa 1f       	adc	r26, r26
    1c22:	bb 1f       	adc	r27, r27
    1c24:	a6 17       	cp	r26, r22
    1c26:	b7 07       	cpc	r27, r23
    1c28:	10 f0       	brcs	.+4      	; 0x1c2e <__udivmodhi4_ep>
    1c2a:	a6 1b       	sub	r26, r22
    1c2c:	b7 0b       	sbc	r27, r23

00001c2e <__udivmodhi4_ep>:
    1c2e:	88 1f       	adc	r24, r24
    1c30:	99 1f       	adc	r25, r25
    1c32:	5a 95       	dec	r21
    1c34:	a9 f7       	brne	.-22     	; 0x1c20 <__udivmodhi4_loop>
    1c36:	80 95       	com	r24
    1c38:	90 95       	com	r25
    1c3a:	bc 01       	movw	r22, r24
    1c3c:	cd 01       	movw	r24, r26
    1c3e:	08 95       	ret

00001c40 <__divmodhi4>:
    1c40:	97 fb       	bst	r25, 7
    1c42:	07 2e       	mov	r0, r23
    1c44:	16 f4       	brtc	.+4      	; 0x1c4a <__divmodhi4+0xa>
    1c46:	00 94       	com	r0
    1c48:	07 d0       	rcall	.+14     	; 0x1c58 <__divmodhi4_neg1>
    1c4a:	77 fd       	sbrc	r23, 7
    1c4c:	09 d0       	rcall	.+18     	; 0x1c60 <__divmodhi4_neg2>
    1c4e:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <__udivmodhi4>
    1c52:	07 fc       	sbrc	r0, 7
    1c54:	05 d0       	rcall	.+10     	; 0x1c60 <__divmodhi4_neg2>
    1c56:	3e f4       	brtc	.+14     	; 0x1c66 <__divmodhi4_exit>

00001c58 <__divmodhi4_neg1>:
    1c58:	90 95       	com	r25
    1c5a:	81 95       	neg	r24
    1c5c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c5e:	08 95       	ret

00001c60 <__divmodhi4_neg2>:
    1c60:	70 95       	com	r23
    1c62:	61 95       	neg	r22
    1c64:	7f 4f       	sbci	r23, 0xFF	; 255

00001c66 <__divmodhi4_exit>:
    1c66:	08 95       	ret

00001c68 <__udivmodsi4>:
    1c68:	a1 e2       	ldi	r26, 0x21	; 33
    1c6a:	1a 2e       	mov	r1, r26
    1c6c:	aa 1b       	sub	r26, r26
    1c6e:	bb 1b       	sub	r27, r27
    1c70:	fd 01       	movw	r30, r26
    1c72:	0d c0       	rjmp	.+26     	; 0x1c8e <__udivmodsi4_ep>

00001c74 <__udivmodsi4_loop>:
    1c74:	aa 1f       	adc	r26, r26
    1c76:	bb 1f       	adc	r27, r27
    1c78:	ee 1f       	adc	r30, r30
    1c7a:	ff 1f       	adc	r31, r31
    1c7c:	a2 17       	cp	r26, r18
    1c7e:	b3 07       	cpc	r27, r19
    1c80:	e4 07       	cpc	r30, r20
    1c82:	f5 07       	cpc	r31, r21
    1c84:	20 f0       	brcs	.+8      	; 0x1c8e <__udivmodsi4_ep>
    1c86:	a2 1b       	sub	r26, r18
    1c88:	b3 0b       	sbc	r27, r19
    1c8a:	e4 0b       	sbc	r30, r20
    1c8c:	f5 0b       	sbc	r31, r21

00001c8e <__udivmodsi4_ep>:
    1c8e:	66 1f       	adc	r22, r22
    1c90:	77 1f       	adc	r23, r23
    1c92:	88 1f       	adc	r24, r24
    1c94:	99 1f       	adc	r25, r25
    1c96:	1a 94       	dec	r1
    1c98:	69 f7       	brne	.-38     	; 0x1c74 <__udivmodsi4_loop>
    1c9a:	60 95       	com	r22
    1c9c:	70 95       	com	r23
    1c9e:	80 95       	com	r24
    1ca0:	90 95       	com	r25
    1ca2:	9b 01       	movw	r18, r22
    1ca4:	ac 01       	movw	r20, r24
    1ca6:	bd 01       	movw	r22, r26
    1ca8:	cf 01       	movw	r24, r30
    1caa:	08 95       	ret

00001cac <__divmodsi4>:
    1cac:	05 2e       	mov	r0, r21
    1cae:	97 fb       	bst	r25, 7
    1cb0:	1e f4       	brtc	.+6      	; 0x1cb8 <__divmodsi4+0xc>
    1cb2:	00 94       	com	r0
    1cb4:	0e 94 6d 0e 	call	0x1cda	; 0x1cda <__negsi2>
    1cb8:	57 fd       	sbrc	r21, 7
    1cba:	07 d0       	rcall	.+14     	; 0x1cca <__divmodsi4_neg2>
    1cbc:	0e 94 34 0e 	call	0x1c68	; 0x1c68 <__udivmodsi4>
    1cc0:	07 fc       	sbrc	r0, 7
    1cc2:	03 d0       	rcall	.+6      	; 0x1cca <__divmodsi4_neg2>
    1cc4:	4e f4       	brtc	.+18     	; 0x1cd8 <__divmodsi4_exit>
    1cc6:	0c 94 6d 0e 	jmp	0x1cda	; 0x1cda <__negsi2>

00001cca <__divmodsi4_neg2>:
    1cca:	50 95       	com	r21
    1ccc:	40 95       	com	r20
    1cce:	30 95       	com	r19
    1cd0:	21 95       	neg	r18
    1cd2:	3f 4f       	sbci	r19, 0xFF	; 255
    1cd4:	4f 4f       	sbci	r20, 0xFF	; 255
    1cd6:	5f 4f       	sbci	r21, 0xFF	; 255

00001cd8 <__divmodsi4_exit>:
    1cd8:	08 95       	ret

00001cda <__negsi2>:
    1cda:	90 95       	com	r25
    1cdc:	80 95       	com	r24
    1cde:	70 95       	com	r23
    1ce0:	61 95       	neg	r22
    1ce2:	7f 4f       	sbci	r23, 0xFF	; 255
    1ce4:	8f 4f       	sbci	r24, 0xFF	; 255
    1ce6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ce8:	08 95       	ret

00001cea <__tablejump2__>:
    1cea:	ee 0f       	add	r30, r30
    1cec:	ff 1f       	adc	r31, r31
    1cee:	05 90       	lpm	r0, Z+
    1cf0:	f4 91       	lpm	r31, Z
    1cf2:	e0 2d       	mov	r30, r0
    1cf4:	09 94       	ijmp

00001cf6 <__umulhisi3>:
    1cf6:	a2 9f       	mul	r26, r18
    1cf8:	b0 01       	movw	r22, r0
    1cfa:	b3 9f       	mul	r27, r19
    1cfc:	c0 01       	movw	r24, r0
    1cfe:	a3 9f       	mul	r26, r19
    1d00:	70 0d       	add	r23, r0
    1d02:	81 1d       	adc	r24, r1
    1d04:	11 24       	eor	r1, r1
    1d06:	91 1d       	adc	r25, r1
    1d08:	b2 9f       	mul	r27, r18
    1d0a:	70 0d       	add	r23, r0
    1d0c:	81 1d       	adc	r24, r1
    1d0e:	11 24       	eor	r1, r1
    1d10:	91 1d       	adc	r25, r1
    1d12:	08 95       	ret

00001d14 <__muluhisi3>:
    1d14:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <__umulhisi3>
    1d18:	a5 9f       	mul	r26, r21
    1d1a:	90 0d       	add	r25, r0
    1d1c:	b4 9f       	mul	r27, r20
    1d1e:	90 0d       	add	r25, r0
    1d20:	a4 9f       	mul	r26, r20
    1d22:	80 0d       	add	r24, r0
    1d24:	91 1d       	adc	r25, r1
    1d26:	11 24       	eor	r1, r1
    1d28:	08 95       	ret

00001d2a <__mulshisi3>:
    1d2a:	b7 ff       	sbrs	r27, 7
    1d2c:	0c 94 8a 0e 	jmp	0x1d14	; 0x1d14 <__muluhisi3>

00001d30 <__mulohisi3>:
    1d30:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <__muluhisi3>
    1d34:	82 1b       	sub	r24, r18
    1d36:	93 0b       	sbc	r25, r19
    1d38:	08 95       	ret

00001d3a <__prologue_saves__>:
    1d3a:	2f 92       	push	r2
    1d3c:	3f 92       	push	r3
    1d3e:	4f 92       	push	r4
    1d40:	5f 92       	push	r5
    1d42:	6f 92       	push	r6
    1d44:	7f 92       	push	r7
    1d46:	8f 92       	push	r8
    1d48:	9f 92       	push	r9
    1d4a:	af 92       	push	r10
    1d4c:	bf 92       	push	r11
    1d4e:	cf 92       	push	r12
    1d50:	df 92       	push	r13
    1d52:	ef 92       	push	r14
    1d54:	ff 92       	push	r15
    1d56:	0f 93       	push	r16
    1d58:	1f 93       	push	r17
    1d5a:	cf 93       	push	r28
    1d5c:	df 93       	push	r29
    1d5e:	cd b7       	in	r28, 0x3d	; 61
    1d60:	de b7       	in	r29, 0x3e	; 62
    1d62:	ca 1b       	sub	r28, r26
    1d64:	db 0b       	sbc	r29, r27
    1d66:	0f b6       	in	r0, 0x3f	; 63
    1d68:	f8 94       	cli
    1d6a:	de bf       	out	0x3e, r29	; 62
    1d6c:	0f be       	out	0x3f, r0	; 63
    1d6e:	cd bf       	out	0x3d, r28	; 61
    1d70:	09 94       	ijmp

00001d72 <__epilogue_restores__>:
    1d72:	2a 88       	ldd	r2, Y+18	; 0x12
    1d74:	39 88       	ldd	r3, Y+17	; 0x11
    1d76:	48 88       	ldd	r4, Y+16	; 0x10
    1d78:	5f 84       	ldd	r5, Y+15	; 0x0f
    1d7a:	6e 84       	ldd	r6, Y+14	; 0x0e
    1d7c:	7d 84       	ldd	r7, Y+13	; 0x0d
    1d7e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1d80:	9b 84       	ldd	r9, Y+11	; 0x0b
    1d82:	aa 84       	ldd	r10, Y+10	; 0x0a
    1d84:	b9 84       	ldd	r11, Y+9	; 0x09
    1d86:	c8 84       	ldd	r12, Y+8	; 0x08
    1d88:	df 80       	ldd	r13, Y+7	; 0x07
    1d8a:	ee 80       	ldd	r14, Y+6	; 0x06
    1d8c:	fd 80       	ldd	r15, Y+5	; 0x05
    1d8e:	0c 81       	ldd	r16, Y+4	; 0x04
    1d90:	1b 81       	ldd	r17, Y+3	; 0x03
    1d92:	aa 81       	ldd	r26, Y+2	; 0x02
    1d94:	b9 81       	ldd	r27, Y+1	; 0x01
    1d96:	ce 0f       	add	r28, r30
    1d98:	d1 1d       	adc	r29, r1
    1d9a:	0f b6       	in	r0, 0x3f	; 63
    1d9c:	f8 94       	cli
    1d9e:	de bf       	out	0x3e, r29	; 62
    1da0:	0f be       	out	0x3f, r0	; 63
    1da2:	cd bf       	out	0x3d, r28	; 61
    1da4:	ed 01       	movw	r28, r26
    1da6:	08 95       	ret

00001da8 <malloc>:
    1da8:	0f 93       	push	r16
    1daa:	1f 93       	push	r17
    1dac:	cf 93       	push	r28
    1dae:	df 93       	push	r29
    1db0:	82 30       	cpi	r24, 0x02	; 2
    1db2:	91 05       	cpc	r25, r1
    1db4:	10 f4       	brcc	.+4      	; 0x1dba <malloc+0x12>
    1db6:	82 e0       	ldi	r24, 0x02	; 2
    1db8:	90 e0       	ldi	r25, 0x00	; 0
    1dba:	e0 91 a7 01 	lds	r30, 0x01A7	; 0x8001a7 <__flp>
    1dbe:	f0 91 a8 01 	lds	r31, 0x01A8	; 0x8001a8 <__flp+0x1>
    1dc2:	20 e0       	ldi	r18, 0x00	; 0
    1dc4:	30 e0       	ldi	r19, 0x00	; 0
    1dc6:	a0 e0       	ldi	r26, 0x00	; 0
    1dc8:	b0 e0       	ldi	r27, 0x00	; 0
    1dca:	30 97       	sbiw	r30, 0x00	; 0
    1dcc:	19 f1       	breq	.+70     	; 0x1e14 <malloc+0x6c>
    1dce:	40 81       	ld	r20, Z
    1dd0:	51 81       	ldd	r21, Z+1	; 0x01
    1dd2:	02 81       	ldd	r16, Z+2	; 0x02
    1dd4:	13 81       	ldd	r17, Z+3	; 0x03
    1dd6:	48 17       	cp	r20, r24
    1dd8:	59 07       	cpc	r21, r25
    1dda:	c8 f0       	brcs	.+50     	; 0x1e0e <malloc+0x66>
    1ddc:	84 17       	cp	r24, r20
    1dde:	95 07       	cpc	r25, r21
    1de0:	69 f4       	brne	.+26     	; 0x1dfc <malloc+0x54>
    1de2:	10 97       	sbiw	r26, 0x00	; 0
    1de4:	31 f0       	breq	.+12     	; 0x1df2 <malloc+0x4a>
    1de6:	12 96       	adiw	r26, 0x02	; 2
    1de8:	0c 93       	st	X, r16
    1dea:	12 97       	sbiw	r26, 0x02	; 2
    1dec:	13 96       	adiw	r26, 0x03	; 3
    1dee:	1c 93       	st	X, r17
    1df0:	27 c0       	rjmp	.+78     	; 0x1e40 <malloc+0x98>
    1df2:	00 93 a7 01 	sts	0x01A7, r16	; 0x8001a7 <__flp>
    1df6:	10 93 a8 01 	sts	0x01A8, r17	; 0x8001a8 <__flp+0x1>
    1dfa:	22 c0       	rjmp	.+68     	; 0x1e40 <malloc+0x98>
    1dfc:	21 15       	cp	r18, r1
    1dfe:	31 05       	cpc	r19, r1
    1e00:	19 f0       	breq	.+6      	; 0x1e08 <malloc+0x60>
    1e02:	42 17       	cp	r20, r18
    1e04:	53 07       	cpc	r21, r19
    1e06:	18 f4       	brcc	.+6      	; 0x1e0e <malloc+0x66>
    1e08:	9a 01       	movw	r18, r20
    1e0a:	bd 01       	movw	r22, r26
    1e0c:	ef 01       	movw	r28, r30
    1e0e:	df 01       	movw	r26, r30
    1e10:	f8 01       	movw	r30, r16
    1e12:	db cf       	rjmp	.-74     	; 0x1dca <malloc+0x22>
    1e14:	21 15       	cp	r18, r1
    1e16:	31 05       	cpc	r19, r1
    1e18:	f9 f0       	breq	.+62     	; 0x1e58 <malloc+0xb0>
    1e1a:	28 1b       	sub	r18, r24
    1e1c:	39 0b       	sbc	r19, r25
    1e1e:	24 30       	cpi	r18, 0x04	; 4
    1e20:	31 05       	cpc	r19, r1
    1e22:	80 f4       	brcc	.+32     	; 0x1e44 <malloc+0x9c>
    1e24:	8a 81       	ldd	r24, Y+2	; 0x02
    1e26:	9b 81       	ldd	r25, Y+3	; 0x03
    1e28:	61 15       	cp	r22, r1
    1e2a:	71 05       	cpc	r23, r1
    1e2c:	21 f0       	breq	.+8      	; 0x1e36 <malloc+0x8e>
    1e2e:	fb 01       	movw	r30, r22
    1e30:	93 83       	std	Z+3, r25	; 0x03
    1e32:	82 83       	std	Z+2, r24	; 0x02
    1e34:	04 c0       	rjmp	.+8      	; 0x1e3e <malloc+0x96>
    1e36:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <__flp+0x1>
    1e3a:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <__flp>
    1e3e:	fe 01       	movw	r30, r28
    1e40:	32 96       	adiw	r30, 0x02	; 2
    1e42:	44 c0       	rjmp	.+136    	; 0x1ecc <malloc+0x124>
    1e44:	fe 01       	movw	r30, r28
    1e46:	e2 0f       	add	r30, r18
    1e48:	f3 1f       	adc	r31, r19
    1e4a:	81 93       	st	Z+, r24
    1e4c:	91 93       	st	Z+, r25
    1e4e:	22 50       	subi	r18, 0x02	; 2
    1e50:	31 09       	sbc	r19, r1
    1e52:	39 83       	std	Y+1, r19	; 0x01
    1e54:	28 83       	st	Y, r18
    1e56:	3a c0       	rjmp	.+116    	; 0x1ecc <malloc+0x124>
    1e58:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <__brkval>
    1e5c:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <__brkval+0x1>
    1e60:	23 2b       	or	r18, r19
    1e62:	41 f4       	brne	.+16     	; 0x1e74 <malloc+0xcc>
    1e64:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    1e68:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    1e6c:	30 93 a6 01 	sts	0x01A6, r19	; 0x8001a6 <__brkval+0x1>
    1e70:	20 93 a5 01 	sts	0x01A5, r18	; 0x8001a5 <__brkval>
    1e74:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    1e78:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    1e7c:	21 15       	cp	r18, r1
    1e7e:	31 05       	cpc	r19, r1
    1e80:	41 f4       	brne	.+16     	; 0x1e92 <malloc+0xea>
    1e82:	2d b7       	in	r18, 0x3d	; 61
    1e84:	3e b7       	in	r19, 0x3e	; 62
    1e86:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    1e8a:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    1e8e:	24 1b       	sub	r18, r20
    1e90:	35 0b       	sbc	r19, r21
    1e92:	e0 91 a5 01 	lds	r30, 0x01A5	; 0x8001a5 <__brkval>
    1e96:	f0 91 a6 01 	lds	r31, 0x01A6	; 0x8001a6 <__brkval+0x1>
    1e9a:	e2 17       	cp	r30, r18
    1e9c:	f3 07       	cpc	r31, r19
    1e9e:	a0 f4       	brcc	.+40     	; 0x1ec8 <malloc+0x120>
    1ea0:	2e 1b       	sub	r18, r30
    1ea2:	3f 0b       	sbc	r19, r31
    1ea4:	28 17       	cp	r18, r24
    1ea6:	39 07       	cpc	r19, r25
    1ea8:	78 f0       	brcs	.+30     	; 0x1ec8 <malloc+0x120>
    1eaa:	ac 01       	movw	r20, r24
    1eac:	4e 5f       	subi	r20, 0xFE	; 254
    1eae:	5f 4f       	sbci	r21, 0xFF	; 255
    1eb0:	24 17       	cp	r18, r20
    1eb2:	35 07       	cpc	r19, r21
    1eb4:	48 f0       	brcs	.+18     	; 0x1ec8 <malloc+0x120>
    1eb6:	4e 0f       	add	r20, r30
    1eb8:	5f 1f       	adc	r21, r31
    1eba:	50 93 a6 01 	sts	0x01A6, r21	; 0x8001a6 <__brkval+0x1>
    1ebe:	40 93 a5 01 	sts	0x01A5, r20	; 0x8001a5 <__brkval>
    1ec2:	81 93       	st	Z+, r24
    1ec4:	91 93       	st	Z+, r25
    1ec6:	02 c0       	rjmp	.+4      	; 0x1ecc <malloc+0x124>
    1ec8:	e0 e0       	ldi	r30, 0x00	; 0
    1eca:	f0 e0       	ldi	r31, 0x00	; 0
    1ecc:	cf 01       	movw	r24, r30
    1ece:	df 91       	pop	r29
    1ed0:	cf 91       	pop	r28
    1ed2:	1f 91       	pop	r17
    1ed4:	0f 91       	pop	r16
    1ed6:	08 95       	ret

00001ed8 <free>:
    1ed8:	cf 93       	push	r28
    1eda:	df 93       	push	r29
    1edc:	00 97       	sbiw	r24, 0x00	; 0
    1ede:	09 f4       	brne	.+2      	; 0x1ee2 <free+0xa>
    1ee0:	81 c0       	rjmp	.+258    	; 0x1fe4 <free+0x10c>
    1ee2:	fc 01       	movw	r30, r24
    1ee4:	32 97       	sbiw	r30, 0x02	; 2
    1ee6:	13 82       	std	Z+3, r1	; 0x03
    1ee8:	12 82       	std	Z+2, r1	; 0x02
    1eea:	a0 91 a7 01 	lds	r26, 0x01A7	; 0x8001a7 <__flp>
    1eee:	b0 91 a8 01 	lds	r27, 0x01A8	; 0x8001a8 <__flp+0x1>
    1ef2:	10 97       	sbiw	r26, 0x00	; 0
    1ef4:	81 f4       	brne	.+32     	; 0x1f16 <free+0x3e>
    1ef6:	20 81       	ld	r18, Z
    1ef8:	31 81       	ldd	r19, Z+1	; 0x01
    1efa:	82 0f       	add	r24, r18
    1efc:	93 1f       	adc	r25, r19
    1efe:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <__brkval>
    1f02:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <__brkval+0x1>
    1f06:	28 17       	cp	r18, r24
    1f08:	39 07       	cpc	r19, r25
    1f0a:	51 f5       	brne	.+84     	; 0x1f60 <free+0x88>
    1f0c:	f0 93 a6 01 	sts	0x01A6, r31	; 0x8001a6 <__brkval+0x1>
    1f10:	e0 93 a5 01 	sts	0x01A5, r30	; 0x8001a5 <__brkval>
    1f14:	67 c0       	rjmp	.+206    	; 0x1fe4 <free+0x10c>
    1f16:	ed 01       	movw	r28, r26
    1f18:	20 e0       	ldi	r18, 0x00	; 0
    1f1a:	30 e0       	ldi	r19, 0x00	; 0
    1f1c:	ce 17       	cp	r28, r30
    1f1e:	df 07       	cpc	r29, r31
    1f20:	40 f4       	brcc	.+16     	; 0x1f32 <free+0x5a>
    1f22:	4a 81       	ldd	r20, Y+2	; 0x02
    1f24:	5b 81       	ldd	r21, Y+3	; 0x03
    1f26:	9e 01       	movw	r18, r28
    1f28:	41 15       	cp	r20, r1
    1f2a:	51 05       	cpc	r21, r1
    1f2c:	f1 f0       	breq	.+60     	; 0x1f6a <free+0x92>
    1f2e:	ea 01       	movw	r28, r20
    1f30:	f5 cf       	rjmp	.-22     	; 0x1f1c <free+0x44>
    1f32:	d3 83       	std	Z+3, r29	; 0x03
    1f34:	c2 83       	std	Z+2, r28	; 0x02
    1f36:	40 81       	ld	r20, Z
    1f38:	51 81       	ldd	r21, Z+1	; 0x01
    1f3a:	84 0f       	add	r24, r20
    1f3c:	95 1f       	adc	r25, r21
    1f3e:	c8 17       	cp	r28, r24
    1f40:	d9 07       	cpc	r29, r25
    1f42:	59 f4       	brne	.+22     	; 0x1f5a <free+0x82>
    1f44:	88 81       	ld	r24, Y
    1f46:	99 81       	ldd	r25, Y+1	; 0x01
    1f48:	84 0f       	add	r24, r20
    1f4a:	95 1f       	adc	r25, r21
    1f4c:	02 96       	adiw	r24, 0x02	; 2
    1f4e:	91 83       	std	Z+1, r25	; 0x01
    1f50:	80 83       	st	Z, r24
    1f52:	8a 81       	ldd	r24, Y+2	; 0x02
    1f54:	9b 81       	ldd	r25, Y+3	; 0x03
    1f56:	93 83       	std	Z+3, r25	; 0x03
    1f58:	82 83       	std	Z+2, r24	; 0x02
    1f5a:	21 15       	cp	r18, r1
    1f5c:	31 05       	cpc	r19, r1
    1f5e:	29 f4       	brne	.+10     	; 0x1f6a <free+0x92>
    1f60:	f0 93 a8 01 	sts	0x01A8, r31	; 0x8001a8 <__flp+0x1>
    1f64:	e0 93 a7 01 	sts	0x01A7, r30	; 0x8001a7 <__flp>
    1f68:	3d c0       	rjmp	.+122    	; 0x1fe4 <free+0x10c>
    1f6a:	e9 01       	movw	r28, r18
    1f6c:	fb 83       	std	Y+3, r31	; 0x03
    1f6e:	ea 83       	std	Y+2, r30	; 0x02
    1f70:	49 91       	ld	r20, Y+
    1f72:	59 91       	ld	r21, Y+
    1f74:	c4 0f       	add	r28, r20
    1f76:	d5 1f       	adc	r29, r21
    1f78:	ec 17       	cp	r30, r28
    1f7a:	fd 07       	cpc	r31, r29
    1f7c:	61 f4       	brne	.+24     	; 0x1f96 <free+0xbe>
    1f7e:	80 81       	ld	r24, Z
    1f80:	91 81       	ldd	r25, Z+1	; 0x01
    1f82:	84 0f       	add	r24, r20
    1f84:	95 1f       	adc	r25, r21
    1f86:	02 96       	adiw	r24, 0x02	; 2
    1f88:	e9 01       	movw	r28, r18
    1f8a:	99 83       	std	Y+1, r25	; 0x01
    1f8c:	88 83       	st	Y, r24
    1f8e:	82 81       	ldd	r24, Z+2	; 0x02
    1f90:	93 81       	ldd	r25, Z+3	; 0x03
    1f92:	9b 83       	std	Y+3, r25	; 0x03
    1f94:	8a 83       	std	Y+2, r24	; 0x02
    1f96:	e0 e0       	ldi	r30, 0x00	; 0
    1f98:	f0 e0       	ldi	r31, 0x00	; 0
    1f9a:	12 96       	adiw	r26, 0x02	; 2
    1f9c:	8d 91       	ld	r24, X+
    1f9e:	9c 91       	ld	r25, X
    1fa0:	13 97       	sbiw	r26, 0x03	; 3
    1fa2:	00 97       	sbiw	r24, 0x00	; 0
    1fa4:	19 f0       	breq	.+6      	; 0x1fac <free+0xd4>
    1fa6:	fd 01       	movw	r30, r26
    1fa8:	dc 01       	movw	r26, r24
    1faa:	f7 cf       	rjmp	.-18     	; 0x1f9a <free+0xc2>
    1fac:	8d 91       	ld	r24, X+
    1fae:	9c 91       	ld	r25, X
    1fb0:	11 97       	sbiw	r26, 0x01	; 1
    1fb2:	9d 01       	movw	r18, r26
    1fb4:	2e 5f       	subi	r18, 0xFE	; 254
    1fb6:	3f 4f       	sbci	r19, 0xFF	; 255
    1fb8:	82 0f       	add	r24, r18
    1fba:	93 1f       	adc	r25, r19
    1fbc:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <__brkval>
    1fc0:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <__brkval+0x1>
    1fc4:	28 17       	cp	r18, r24
    1fc6:	39 07       	cpc	r19, r25
    1fc8:	69 f4       	brne	.+26     	; 0x1fe4 <free+0x10c>
    1fca:	30 97       	sbiw	r30, 0x00	; 0
    1fcc:	29 f4       	brne	.+10     	; 0x1fd8 <free+0x100>
    1fce:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <__flp+0x1>
    1fd2:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <__flp>
    1fd6:	02 c0       	rjmp	.+4      	; 0x1fdc <free+0x104>
    1fd8:	13 82       	std	Z+3, r1	; 0x03
    1fda:	12 82       	std	Z+2, r1	; 0x02
    1fdc:	b0 93 a6 01 	sts	0x01A6, r27	; 0x8001a6 <__brkval+0x1>
    1fe0:	a0 93 a5 01 	sts	0x01A5, r26	; 0x8001a5 <__brkval>
    1fe4:	df 91       	pop	r29
    1fe6:	cf 91       	pop	r28
    1fe8:	08 95       	ret

00001fea <__do_global_dtors>:
    1fea:	10 e0       	ldi	r17, 0x00	; 0
    1fec:	c4 e3       	ldi	r28, 0x34	; 52
    1fee:	d0 e0       	ldi	r29, 0x00	; 0
    1ff0:	04 c0       	rjmp	.+8      	; 0x1ffa <__do_global_dtors+0x10>
    1ff2:	fe 01       	movw	r30, r28
    1ff4:	0e 94 75 0e 	call	0x1cea	; 0x1cea <__tablejump2__>
    1ff8:	21 96       	adiw	r28, 0x01	; 1
    1ffa:	c5 33       	cpi	r28, 0x35	; 53
    1ffc:	d1 07       	cpc	r29, r17
    1ffe:	c9 f7       	brne	.-14     	; 0x1ff2 <__do_global_dtors+0x8>
    2000:	f8 94       	cli

00002002 <__stop_program>:
    2002:	ff cf       	rjmp	.-2      	; 0x2002 <__stop_program>
