
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000046  00800100  000027c2  00002856  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000027c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000079  00800146  00800146  0000289c  2**0
                  ALLOC
  3 .stab         00006b34  00000000  00000000  0000289c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00008ce2  00000000  00000000  000093d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  000120b2  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000120f4  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 000000d8  00000000  00000000  00012134  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   000017f8  00000000  00000000  0001220c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000aa8  00000000  00000000  00013a04  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00000f63  00000000  00000000  000144ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000001d0  00000000  00000000  00015410  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    000006cc  00000000  00000000  000155e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0000052c  00000000  00000000  00015cac  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000000d8  00000000  00000000  000161d8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 43 00 	jmp	0x86	; 0x86 <__dtors_end>
       4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
       8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
       c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      24:	0c 94 f8 0b 	jmp	0x17f0	; 0x17f0 <__vector_9>
      28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      34:	0c 94 19 09 	jmp	0x1232	; 0x1232 <__vector_13>
      38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      68:	f1 02       	muls	r31, r17
      6a:	1f 03       	fmul	r17, r23
      6c:	8a 03       	fmulsu	r16, r18
      6e:	f5 02       	muls	r31, r21
      70:	04 03       	mulsu	r16, r20
      72:	13 03       	mulsu	r17, r19
      74:	f5 02       	muls	r31, r21
      76:	f5 02       	muls	r31, r21
      78:	f5 02       	muls	r31, r21

0000007a <__trampolines_end>:
      7a:	3e 67       	ori	r19, 0x7E	; 126
      7c:	33 32       	cpi	r19, 0x23	; 35
      7e:	3e 3e       	cpi	r19, 0xEE	; 238
      80:	63 33       	cpi	r22, 0x33	; 51
      82:	32 00       	.word	0x0032	; ????

00000084 <__ctors_end>:
      84:	c3 0c       	add	r12, r3

00000086 <__dtors_end>:
      86:	11 24       	eor	r1, r1
      88:	1f be       	out	0x3f, r1	; 63
      8a:	cf ef       	ldi	r28, 0xFF	; 255
      8c:	d8 e0       	ldi	r29, 0x08	; 8
      8e:	de bf       	out	0x3e, r29	; 62
      90:	cd bf       	out	0x3d, r28	; 61

00000092 <__do_copy_data>:
      92:	11 e0       	ldi	r17, 0x01	; 1
      94:	a0 e0       	ldi	r26, 0x00	; 0
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	e2 ec       	ldi	r30, 0xC2	; 194
      9a:	f7 e2       	ldi	r31, 0x27	; 39
      9c:	02 c0       	rjmp	.+4      	; 0xa2 <__do_copy_data+0x10>
      9e:	05 90       	lpm	r0, Z+
      a0:	0d 92       	st	X+, r0
      a2:	a6 34       	cpi	r26, 0x46	; 70
      a4:	b1 07       	cpc	r27, r17
      a6:	d9 f7       	brne	.-10     	; 0x9e <__do_copy_data+0xc>

000000a8 <__do_clear_bss>:
      a8:	21 e0       	ldi	r18, 0x01	; 1
      aa:	a6 e4       	ldi	r26, 0x46	; 70
      ac:	b1 e0       	ldi	r27, 0x01	; 1
      ae:	01 c0       	rjmp	.+2      	; 0xb2 <.do_clear_bss_start>

000000b0 <.do_clear_bss_loop>:
      b0:	1d 92       	st	X+, r1

000000b2 <.do_clear_bss_start>:
      b2:	af 3b       	cpi	r26, 0xBF	; 191
      b4:	b2 07       	cpc	r27, r18
      b6:	e1 f7       	brne	.-8      	; 0xb0 <.do_clear_bss_loop>
      b8:	0e 94 94 00 	call	0x128	; 0x128 <main>
      bc:	0c 94 d4 13 	jmp	0x27a8	; 0x27a8 <__do_global_dtors>

000000c0 <__bad_interrupt>:
      c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <whileBarcode>:
	whileBarcode();
	updateDisplay(0, batteryPercentage(), mazeSolver);
	parcours('B');
	whileLineEnd();
	return 0;
}
      c4:	03 c0       	rjmp	.+6      	; 0xcc <whileBarcode+0x8>
      c6:	83 e5       	ldi	r24, 0x53	; 83
      c8:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
      cc:	0e 94 0e 02 	call	0x41c	; 0x41c <lineType>
      d0:	82 30       	cpi	r24, 0x02	; 2
      d2:	c9 f7       	brne	.-14     	; 0xc6 <whileBarcode+0x2>
      d4:	08 95       	ret

000000d6 <whileLineEnd>:
      d6:	03 c0       	rjmp	.+6      	; 0xde <whileLineEnd+0x8>
      d8:	83 e5       	ldi	r24, 0x53	; 83
      da:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
      de:	0e 94 0e 02 	call	0x41c	; 0x41c <lineType>
      e2:	81 30       	cpi	r24, 0x01	; 1
      e4:	c9 f7       	brne	.-14     	; 0xd8 <whileLineEnd+0x2>
      e6:	80 e0       	ldi	r24, 0x00	; 0
      e8:	90 e0       	ldi	r25, 0x00	; 0
      ea:	08 95       	ret

000000ec <pickOrder>:

int pickOrder()
{
	
	whileBarcode();
      ec:	0e 94 62 00 	call	0xc4	; 0xc4 <whileBarcode>
	//updateDisplay(0, batteryPercentage(), mazeSolver);
	parcours('T');
      f0:	84 e5       	ldi	r24, 0x54	; 84
      f2:	0e 94 dd 03 	call	0x7ba	; 0x7ba <parcours>
	//updateDisplay(0, batteryPercentage(), orderPicking);
	//warehouse(orderPicking);
	//updateDisplay(0, batteryPercentage(), mazeSolver);
	
	
	while (lineType() == Straight)
      f6:	03 c0       	rjmp	.+6      	; 0xfe <pickOrder+0x12>
	{
		motorControl('S');
      f8:	83 e5       	ldi	r24, 0x53	; 83
      fa:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
	//updateDisplay(0, batteryPercentage(), orderPicking);
	//warehouse(orderPicking);
	//updateDisplay(0, batteryPercentage(), mazeSolver);
	
	
	while (lineType() == Straight)
      fe:	0e 94 0e 02 	call	0x41c	; 0x41c <lineType>
     102:	88 23       	and	r24, r24
     104:	c9 f3       	breq	.-14     	; 0xf8 <pickOrder+0xc>
	{
		motorControl('S');
	}
	
	motorControl('L');
     106:	8c e4       	ldi	r24, 0x4C	; 76
     108:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
	
	parcours('B');
     10c:	82 e4       	ldi	r24, 0x42	; 66
     10e:	0e 94 dd 03 	call	0x7ba	; 0x7ba <parcours>
	motorControl('S');
     112:	83 e5       	ldi	r24, 0x53	; 83
     114:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
	whileLineEnd();
     118:	0e 94 6b 00 	call	0xd6	; 0xd6 <whileLineEnd>
	motorControl('P');
     11c:	80 e5       	ldi	r24, 0x50	; 80
     11e:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
	return 0;
}
     122:	80 e0       	ldi	r24, 0x00	; 0
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	08 95       	ret

00000128 <main>:

int main()
{
	play_from_program_space(welcome);
     128:	8a e7       	ldi	r24, 0x7A	; 122
     12a:	90 e0       	ldi	r25, 0x00	; 0
     12c:	0e 94 78 09 	call	0x12f0	; 0x12f0 <play_from_program_space>
	initialize();
     130:	0e 94 9f 00 	call	0x13e	; 0x13e <initialize>
		{
			charge_3pi();
		} 
		else 
		{ *///  if order
			pickOrder();
     134:	0e 94 76 00 	call	0xec	; 0xec <pickOrder>
		//}
	//}
	
}
     138:	80 e0       	ldi	r24, 0x00	; 0
     13a:	90 e0       	ldi	r25, 0x00	; 0
     13c:	08 95       	ret

0000013e <initialize>:
void inch(){
	set_motors(50,50);
	delay(200);
	set_motors(0,0);
}
void println(int x){
     13e:	cf 93       	push	r28
     140:	df 93       	push	r29
     142:	80 ed       	ldi	r24, 0xD0	; 208
     144:	97 e0       	ldi	r25, 0x07	; 7
     146:	0e 94 bf 0c 	call	0x197e	; 0x197e <pololu_3pi_init>
     14a:	0d c0       	rjmp	.+26     	; 0x166 <initialize+0x28>
     14c:	0e 94 84 0a 	call	0x1508	; 0x1508 <clear>
     150:	60 e0       	ldi	r22, 0x00	; 0
     152:	80 e0       	ldi	r24, 0x00	; 0
     154:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <lcd_goto_xy>
     158:	0e 94 5f 06 	call	0xcbe	; 0xcbe <read_battery_millivolts_3pi>
     15c:	bc 01       	movw	r22, r24
     15e:	80 e0       	ldi	r24, 0x00	; 0
     160:	90 e0       	ldi	r25, 0x00	; 0
     162:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <print_long>
     166:	80 e1       	ldi	r24, 0x10	; 16
     168:	0e 94 f5 0b 	call	0x17ea	; 0x17ea <button_is_pressed>
     16c:	88 23       	and	r24, r24
     16e:	71 f3       	breq	.-36     	; 0x14c <initialize+0xe>
     170:	80 e1       	ldi	r24, 0x10	; 16
     172:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <wait_for_button_release>
     176:	88 ee       	ldi	r24, 0xE8	; 232
     178:	93 e0       	ldi	r25, 0x03	; 3
     17a:	0e 94 40 0c 	call	0x1880	; 0x1880 <delay_ms>
     17e:	c0 e0       	ldi	r28, 0x00	; 0
     180:	d0 e0       	ldi	r29, 0x00	; 0
     182:	19 c0       	rjmp	.+50     	; 0x1b6 <initialize+0x78>
     184:	ce 01       	movw	r24, r28
     186:	44 97       	sbiw	r24, 0x14	; 20
     188:	88 97       	sbiw	r24, 0x28	; 40
     18a:	38 f0       	brcs	.+14     	; 0x19a <initialize+0x5c>
     18c:	68 ed       	ldi	r22, 0xD8	; 216
     18e:	7f ef       	ldi	r23, 0xFF	; 255
     190:	88 e2       	ldi	r24, 0x28	; 40
     192:	90 e0       	ldi	r25, 0x00	; 0
     194:	0e 94 b2 0b 	call	0x1764	; 0x1764 <set_motors>
     198:	06 c0       	rjmp	.+12     	; 0x1a6 <initialize+0x68>
     19a:	68 e2       	ldi	r22, 0x28	; 40
     19c:	70 e0       	ldi	r23, 0x00	; 0
     19e:	88 ed       	ldi	r24, 0xD8	; 216
     1a0:	9f ef       	ldi	r25, 0xFF	; 255
     1a2:	0e 94 b2 0b 	call	0x1764	; 0x1764 <set_motors>
     1a6:	81 e0       	ldi	r24, 0x01	; 1
     1a8:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <calibrate_line_sensors>
     1ac:	84 e1       	ldi	r24, 0x14	; 20
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	0e 94 40 0c 	call	0x1880	; 0x1880 <delay_ms>
     1b4:	21 96       	adiw	r28, 0x01	; 1
     1b6:	c0 35       	cpi	r28, 0x50	; 80
     1b8:	d1 05       	cpc	r29, r1
     1ba:	20 f3       	brcs	.-56     	; 0x184 <initialize+0x46>
     1bc:	60 e0       	ldi	r22, 0x00	; 0
     1be:	70 e0       	ldi	r23, 0x00	; 0
     1c0:	80 e0       	ldi	r24, 0x00	; 0
     1c2:	90 e0       	ldi	r25, 0x00	; 0
     1c4:	0e 94 b2 0b 	call	0x1764	; 0x1764 <set_motors>
     1c8:	80 e1       	ldi	r24, 0x10	; 16
     1ca:	0e 94 f5 0b 	call	0x17ea	; 0x17ea <button_is_pressed>
     1ce:	88 23       	and	r24, r24
     1d0:	d9 f3       	breq	.-10     	; 0x1c8 <initialize+0x8a>
     1d2:	80 e1       	ldi	r24, 0x10	; 16
     1d4:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <wait_for_button_release>
     1d8:	0e 94 84 0a 	call	0x1508	; 0x1508 <clear>
     1dc:	df 91       	pop	r29
     1de:	cf 91       	pop	r28
     1e0:	08 95       	ret

000001e2 <inch>:
     1e2:	62 e3       	ldi	r22, 0x32	; 50
     1e4:	70 e0       	ldi	r23, 0x00	; 0
     1e6:	82 e3       	ldi	r24, 0x32	; 50
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	0e 94 b2 0b 	call	0x1764	; 0x1764 <set_motors>
     1ee:	88 ec       	ldi	r24, 0xC8	; 200
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	0e 94 40 0c 	call	0x1880	; 0x1880 <delay_ms>
     1f6:	60 e0       	ldi	r22, 0x00	; 0
     1f8:	70 e0       	ldi	r23, 0x00	; 0
     1fa:	80 e0       	ldi	r24, 0x00	; 0
     1fc:	90 e0       	ldi	r25, 0x00	; 0
     1fe:	0e 94 b2 0b 	call	0x1764	; 0x1764 <set_motors>
     202:	08 95       	ret

00000204 <motorControl>:
	
	}
}


void motorControl(char x){													// function that controlls the motor movement and the turns
     204:	cf 92       	push	r12
     206:	df 92       	push	r13
     208:	ef 92       	push	r14
     20a:	ff 92       	push	r15
     20c:	0f 93       	push	r16
     20e:	1f 93       	push	r17
     210:	cf 93       	push	r28
     212:	df 93       	push	r29
     214:	c8 2f       	mov	r28, r24
	unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     216:	61 e0       	ldi	r22, 0x01	; 1
     218:	81 eb       	ldi	r24, 0xB1	; 177
     21a:	91 e0       	ldi	r25, 0x01	; 1
     21c:	0e 94 89 0c 	call	0x1912	; 0x1912 <read_line>
     220:	8c 01       	movw	r16, r24
	read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     222:	61 e0       	ldi	r22, 0x01	; 1
     224:	81 eb       	ldi	r24, 0xB1	; 177
     226:	91 e0       	ldi	r25, 0x01	; 1
     228:	0e 94 82 0c 	call	0x1904	; 0x1904 <read_line_sensors_calibrated>
	
	if(x == 'N')															//Emergency Brake
     22c:	ce 34       	cpi	r28, 0x4E	; 78
     22e:	39 f4       	brne	.+14     	; 0x23e <motorControl+0x3a>
		set_motors(0,0);	
     230:	60 e0       	ldi	r22, 0x00	; 0
     232:	70 e0       	ldi	r23, 0x00	; 0
     234:	80 e0       	ldi	r24, 0x00	; 0
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	0e 94 b2 0b 	call	0x1764	; 0x1764 <set_motors>
     23c:	da c0       	rjmp	.+436    	; 0x3f2 <motorControl+0x1ee>
	
	
	else if(x == 'L'){														//Turn Left
     23e:	cc 34       	cpi	r28, 0x4C	; 76
     240:	09 f5       	brne	.+66     	; 0x284 <motorControl+0x80>
		set_motors(-turn_value,turn_value);
     242:	6c e3       	ldi	r22, 0x3C	; 60
     244:	70 e0       	ldi	r23, 0x00	; 0
     246:	84 ec       	ldi	r24, 0xC4	; 196
     248:	9f ef       	ldi	r25, 0xFF	; 255
     24a:	0e 94 b2 0b 	call	0x1764	; 0x1764 <set_motors>
		
		while (sensors[2] >=Refrence_value)
     24e:	05 c0       	rjmp	.+10     	; 0x25a <motorControl+0x56>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     250:	61 e0       	ldi	r22, 0x01	; 1
     252:	81 eb       	ldi	r24, 0xB1	; 177
     254:	91 e0       	ldi	r25, 0x01	; 1
     256:	0e 94 82 0c 	call	0x1904	; 0x1904 <read_line_sensors_calibrated>
	
	
	else if(x == 'L'){														//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] >=Refrence_value)
     25a:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <sensors+0x4>
     25e:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <sensors+0x5>
     262:	80 39       	cpi	r24, 0x90	; 144
     264:	91 40       	sbci	r25, 0x01	; 1
     266:	a0 f7       	brcc	.-24     	; 0x250 <motorControl+0x4c>
     268:	05 c0       	rjmp	.+10     	; 0x274 <motorControl+0x70>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     26a:	61 e0       	ldi	r22, 0x01	; 1
     26c:	81 eb       	ldi	r24, 0xB1	; 177
     26e:	91 e0       	ldi	r25, 0x01	; 1
     270:	0e 94 82 0c 	call	0x1904	; 0x1904 <read_line_sensors_calibrated>
	else if(x == 'L'){														//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] >=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
     274:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <sensors+0x4>
     278:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <sensors+0x5>
     27c:	81 39       	cpi	r24, 0x91	; 145
     27e:	91 40       	sbci	r25, 0x01	; 1
     280:	a0 f3       	brcs	.-24     	; 0x26a <motorControl+0x66>
     282:	b7 c0       	rjmp	.+366    	; 0x3f2 <motorControl+0x1ee>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'R'){														//Turn Right
     284:	c2 35       	cpi	r28, 0x52	; 82
     286:	09 f5       	brne	.+66     	; 0x2ca <motorControl+0xc6>
		set_motors(turn_value,-turn_value);
     288:	64 ec       	ldi	r22, 0xC4	; 196
     28a:	7f ef       	ldi	r23, 0xFF	; 255
     28c:	8c e3       	ldi	r24, 0x3C	; 60
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	0e 94 b2 0b 	call	0x1764	; 0x1764 <set_motors>
		
		while (sensors[2] >=Refrence_value)
     294:	05 c0       	rjmp	.+10     	; 0x2a0 <motorControl+0x9c>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     296:	61 e0       	ldi	r22, 0x01	; 1
     298:	81 eb       	ldi	r24, 0xB1	; 177
     29a:	91 e0       	ldi	r25, 0x01	; 1
     29c:	0e 94 82 0c 	call	0x1904	; 0x1904 <read_line_sensors_calibrated>
	
	
	else if(x == 'R'){														//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] >=Refrence_value)
     2a0:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <sensors+0x4>
     2a4:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <sensors+0x5>
     2a8:	80 39       	cpi	r24, 0x90	; 144
     2aa:	91 40       	sbci	r25, 0x01	; 1
     2ac:	a0 f7       	brcc	.-24     	; 0x296 <motorControl+0x92>
     2ae:	05 c0       	rjmp	.+10     	; 0x2ba <motorControl+0xb6>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     2b0:	61 e0       	ldi	r22, 0x01	; 1
     2b2:	81 eb       	ldi	r24, 0xB1	; 177
     2b4:	91 e0       	ldi	r25, 0x01	; 1
     2b6:	0e 94 82 0c 	call	0x1904	; 0x1904 <read_line_sensors_calibrated>
	else if(x == 'R'){														//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] >=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
     2ba:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <sensors+0x4>
     2be:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <sensors+0x5>
     2c2:	81 39       	cpi	r24, 0x91	; 145
     2c4:	91 40       	sbci	r25, 0x01	; 1
     2c6:	a0 f3       	brcs	.-24     	; 0x2b0 <motorControl+0xac>
     2c8:	94 c0       	rjmp	.+296    	; 0x3f2 <motorControl+0x1ee>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
		
			
	else if(x == 'S'){												//drive straight and adjusts the robot so it follows the line
     2ca:	c3 35       	cpi	r28, 0x53	; 83
     2cc:	09 f0       	breq	.+2      	; 0x2d0 <motorControl+0xcc>
     2ce:	47 c0       	rjmp	.+142    	; 0x35e <motorControl+0x15a>
// Get the position of the line.  Note that we *must* provide
// the "sensors" argument to read_line_sensors_calibrated() here, even though we
// are not interested in the individual sensor readings.
int last_proportional;
// The "proportional" term should be 0 when we are on the line.
int proportional = ((int)position) - 2000;
     2d0:	00 5d       	subi	r16, 0xD0	; 208
     2d2:	17 40       	sbci	r17, 0x07	; 7

// Remember the last position.
 last_proportional = proportional;
 
 
int power_difference = proportional/100 + integral/300 + derivative*0.10;						// derivative == stuur snelheid
     2d4:	c8 01       	movw	r24, r16
     2d6:	64 e6       	ldi	r22, 0x64	; 100
     2d8:	70 e0       	ldi	r23, 0x00	; 0
     2da:	0e 94 ef 11 	call	0x23de	; 0x23de <__divmodhi4>
     2de:	eb 01       	movw	r28, r22
     2e0:	c8 01       	movw	r24, r16
     2e2:	6c e2       	ldi	r22, 0x2C	; 44
     2e4:	71 e0       	ldi	r23, 0x01	; 1
     2e6:	0e 94 ef 11 	call	0x23de	; 0x23de <__divmodhi4>
     2ea:	c6 0f       	add	r28, r22
     2ec:	d7 1f       	adc	r29, r23
     2ee:	b8 01       	movw	r22, r16
     2f0:	11 0f       	add	r17, r17
     2f2:	88 0b       	sbc	r24, r24
     2f4:	99 0b       	sbc	r25, r25
     2f6:	0e 94 95 04 	call	0x92a	; 0x92a <__floatsisf>
     2fa:	2d ec       	ldi	r18, 0xCD	; 205
     2fc:	3c ec       	ldi	r19, 0xCC	; 204
     2fe:	4c ec       	ldi	r20, 0xCC	; 204
     300:	5d e3       	ldi	r21, 0x3D	; 61
     302:	0e 94 21 05 	call	0xa42	; 0xa42 <__mulsf3>
     306:	6b 01       	movw	r12, r22
     308:	7c 01       	movw	r14, r24
     30a:	be 01       	movw	r22, r28
     30c:	dd 0f       	add	r29, r29
     30e:	88 0b       	sbc	r24, r24
     310:	99 0b       	sbc	r25, r25
     312:	0e 94 95 04 	call	0x92a	; 0x92a <__floatsisf>
     316:	a7 01       	movw	r20, r14
     318:	96 01       	movw	r18, r12
     31a:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <__addsf3>
     31e:	0e 94 5d 04 	call	0x8ba	; 0x8ba <__fixsfsi>
     322:	cb 01       	movw	r24, r22

// Compute the actual motor settings.  We never set either motor
// to a negative value.
const int max = 70;
if(power_difference > max)
     324:	67 34       	cpi	r22, 0x47	; 71
     326:	71 05       	cpc	r23, r1
     328:	14 f0       	brlt	.+4      	; 0x32e <motorControl+0x12a>
power_difference = max;
     32a:	86 e4       	ldi	r24, 0x46	; 70
     32c:	90 e0       	ldi	r25, 0x00	; 0
if(power_difference < -max)
     32e:	8a 3b       	cpi	r24, 0xBA	; 186
     330:	2f ef       	ldi	r18, 0xFF	; 255
     332:	92 07       	cpc	r25, r18
     334:	14 f4       	brge	.+4      	; 0x33a <motorControl+0x136>
power_difference = -max;
     336:	8a eb       	ldi	r24, 0xBA	; 186
     338:	9f ef       	ldi	r25, 0xFF	; 255

if(power_difference < 0)
     33a:	99 23       	and	r25, r25
     33c:	3c f4       	brge	.+14     	; 0x34c <motorControl+0x148>
set_motors(max+power_difference, max);
     33e:	66 e4       	ldi	r22, 0x46	; 70
     340:	70 e0       	ldi	r23, 0x00	; 0
     342:	8a 5b       	subi	r24, 0xBA	; 186
     344:	9f 4f       	sbci	r25, 0xFF	; 255
     346:	0e 94 b2 0b 	call	0x1764	; 0x1764 <set_motors>
     34a:	53 c0       	rjmp	.+166    	; 0x3f2 <motorControl+0x1ee>
else
set_motors(max, max-power_difference);
     34c:	66 e4       	ldi	r22, 0x46	; 70
     34e:	70 e0       	ldi	r23, 0x00	; 0
     350:	68 1b       	sub	r22, r24
     352:	79 0b       	sbc	r23, r25
     354:	86 e4       	ldi	r24, 0x46	; 70
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	0e 94 b2 0b 	call	0x1764	; 0x1764 <set_motors>
     35c:	4a c0       	rjmp	.+148    	; 0x3f2 <motorControl+0x1ee>
		
	}
	
	
	else if(x == 'B'){														//Reverse while following the line
     35e:	c2 34       	cpi	r28, 0x42	; 66
     360:	09 f5       	brne	.+66     	; 0x3a4 <motorControl+0x1a0>
		set_motors(-50,-50);
     362:	6e ec       	ldi	r22, 0xCE	; 206
     364:	7f ef       	ldi	r23, 0xFF	; 255
     366:	8e ec       	ldi	r24, 0xCE	; 206
     368:	9f ef       	ldi	r25, 0xFF	; 255
     36a:	0e 94 b2 0b 	call	0x1764	; 0x1764 <set_motors>
		
		if (sensors[3] >=Refrence_value)
     36e:	80 91 b7 01 	lds	r24, 0x01B7	; 0x8001b7 <sensors+0x6>
     372:	90 91 b8 01 	lds	r25, 0x01B8	; 0x8001b8 <sensors+0x7>
     376:	80 39       	cpi	r24, 0x90	; 144
     378:	91 40       	sbci	r25, 0x01	; 1
     37a:	30 f0       	brcs	.+12     	; 0x388 <motorControl+0x184>
			set_motors(-50,-55);
     37c:	69 ec       	ldi	r22, 0xC9	; 201
     37e:	7f ef       	ldi	r23, 0xFF	; 255
     380:	8e ec       	ldi	r24, 0xCE	; 206
     382:	9f ef       	ldi	r25, 0xFF	; 255
     384:	0e 94 b2 0b 	call	0x1764	; 0x1764 <set_motors>
		if (sensors[1] >=Refrence_value)
     388:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <sensors+0x2>
     38c:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <sensors+0x3>
     390:	80 39       	cpi	r24, 0x90	; 144
     392:	91 40       	sbci	r25, 0x01	; 1
     394:	70 f1       	brcs	.+92     	; 0x3f2 <motorControl+0x1ee>
			set_motors(-55,-50);
     396:	6e ec       	ldi	r22, 0xCE	; 206
     398:	7f ef       	ldi	r23, 0xFF	; 255
     39a:	89 ec       	ldi	r24, 0xC9	; 201
     39c:	9f ef       	ldi	r25, 0xFF	; 255
     39e:	0e 94 b2 0b 	call	0x1764	; 0x1764 <set_motors>
     3a2:	27 c0       	rjmp	.+78     	; 0x3f2 <motorControl+0x1ee>
	}
	
	
	else if(x == 'T'){														// Turn around
     3a4:	c4 35       	cpi	r28, 0x54	; 84
     3a6:	a1 f4       	brne	.+40     	; 0x3d0 <motorControl+0x1cc>
		set_motors(-turn_value,turn_value);
     3a8:	6c e3       	ldi	r22, 0x3C	; 60
     3aa:	70 e0       	ldi	r23, 0x00	; 0
     3ac:	84 ec       	ldi	r24, 0xC4	; 196
     3ae:	9f ef       	ldi	r25, 0xFF	; 255
     3b0:	0e 94 b2 0b 	call	0x1764	; 0x1764 <set_motors>
		
		while (sensors[2] <=Refrence_value)
     3b4:	05 c0       	rjmp	.+10     	; 0x3c0 <motorControl+0x1bc>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     3b6:	61 e0       	ldi	r22, 0x01	; 1
     3b8:	81 eb       	ldi	r24, 0xB1	; 177
     3ba:	91 e0       	ldi	r25, 0x01	; 1
     3bc:	0e 94 82 0c 	call	0x1904	; 0x1904 <read_line_sensors_calibrated>
	
	
	else if(x == 'T'){														// Turn around
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] <=Refrence_value)
     3c0:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <sensors+0x4>
     3c4:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <sensors+0x5>
     3c8:	81 39       	cpi	r24, 0x91	; 145
     3ca:	91 40       	sbci	r25, 0x01	; 1
     3cc:	a0 f3       	brcs	.-24     	; 0x3b6 <motorControl+0x1b2>
     3ce:	11 c0       	rjmp	.+34     	; 0x3f2 <motorControl+0x1ee>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'P')														//Robot stops on a slow pace
     3d0:	c0 35       	cpi	r28, 0x50	; 80
     3d2:	79 f4       	brne	.+30     	; 0x3f2 <motorControl+0x1ee>
     3d4:	0a c0       	rjmp	.+20     	; 0x3ea <motorControl+0x1e6>
		for( int i=50;i>=0;i-=2)
		{
			set_motors(i,i);
     3d6:	be 01       	movw	r22, r28
     3d8:	ce 01       	movw	r24, r28
     3da:	0e 94 b2 0b 	call	0x1764	; 0x1764 <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     3de:	85 e0       	ldi	r24, 0x05	; 5
     3e0:	90 e0       	ldi	r25, 0x00	; 0
     3e2:	0e 94 40 0c 	call	0x1880	; 0x1880 <delay_ms>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'P')														//Robot stops on a slow pace
		for( int i=50;i>=0;i-=2)
     3e6:	22 97       	sbiw	r28, 0x02	; 2
     3e8:	02 c0       	rjmp	.+4      	; 0x3ee <motorControl+0x1ea>
     3ea:	c2 e3       	ldi	r28, 0x32	; 50
     3ec:	d0 e0       	ldi	r29, 0x00	; 0
     3ee:	dd 23       	and	r29, r29
     3f0:	94 f7       	brge	.-28     	; 0x3d6 <motorControl+0x1d2>
			set_motors(i,i);
			delay(5);
		}
		
		
}
     3f2:	df 91       	pop	r29
     3f4:	cf 91       	pop	r28
     3f6:	1f 91       	pop	r17
     3f8:	0f 91       	pop	r16
     3fa:	ff 90       	pop	r15
     3fc:	ef 90       	pop	r14
     3fe:	df 90       	pop	r13
     400:	cf 90       	pop	r12
     402:	08 95       	ret

00000404 <wait>:
	lcd_goto_xy(0,0);
	print_long(x);	*/
}

void wait(){
	motorControl('N');
     404:	8e e4       	ldi	r24, 0x4E	; 78
     406:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
	
	while(!button_is_pressed(BUTTON_B)){}
     40a:	80 e1       	ldi	r24, 0x10	; 16
     40c:	0e 94 f5 0b 	call	0x17ea	; 0x17ea <button_is_pressed>
     410:	88 23       	and	r24, r24
     412:	d9 f3       	breq	.-10     	; 0x40a <wait+0x6>
	wait_for_button_release(BUTTON_B);
     414:	80 e1       	ldi	r24, 0x10	; 16
     416:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <wait_for_button_release>
     41a:	08 95       	ret

0000041c <lineType>:
}

char lineType(){																																	// function that returns the type of junction it detects
	while(1){																																		// >= 500 = black line		<=500 = white
		read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     41c:	61 e0       	ldi	r22, 0x01	; 1
     41e:	81 eb       	ldi	r24, 0xB1	; 177
     420:	91 e0       	ldi	r25, 0x01	; 1
     422:	0e 94 82 0c 	call	0x1904	; 0x1904 <read_line_sensors_calibrated>
					
		if (sensors[0] >=Refrence_value && sensors[1] >= Refrence_value && sensors[4] <= Refrence_value ){																							//Checks if its a left corner or a straight with left corner
     426:	20 91 b1 01 	lds	r18, 0x01B1	; 0x8001b1 <sensors>
     42a:	30 91 b2 01 	lds	r19, 0x01B2	; 0x8001b2 <sensors+0x1>
     42e:	20 39       	cpi	r18, 0x90	; 144
     430:	41 e0       	ldi	r20, 0x01	; 1
     432:	34 07       	cpc	r19, r20
     434:	38 f1       	brcs	.+78     	; 0x484 <lineType+0x68>
     436:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <sensors+0x2>
     43a:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <sensors+0x3>
     43e:	80 39       	cpi	r24, 0x90	; 144
     440:	91 40       	sbci	r25, 0x01	; 1
     442:	00 f1       	brcs	.+64     	; 0x484 <lineType+0x68>
     444:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <sensors+0x8>
     448:	90 91 ba 01 	lds	r25, 0x01BA	; 0x8001ba <sensors+0x9>
     44c:	81 39       	cpi	r24, 0x91	; 145
     44e:	91 40       	sbci	r25, 0x01	; 1
     450:	c8 f4       	brcc	.+50     	; 0x484 <lineType+0x68>
			inch();
     452:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <inch>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     456:	61 e0       	ldi	r22, 0x01	; 1
     458:	81 eb       	ldi	r24, 0xB1	; 177
     45a:	91 e0       	ldi	r25, 0x01	; 1
     45c:	0e 94 82 0c 	call	0x1904	; 0x1904 <read_line_sensors_calibrated>
			
			if (sensors[2] >= Refrence_value || sensors[3] >=Refrence_value){
     460:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <sensors+0x4>
     464:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <sensors+0x5>
     468:	80 39       	cpi	r24, 0x90	; 144
     46a:	91 40       	sbci	r25, 0x01	; 1
     46c:	08 f0       	brcs	.+2      	; 0x470 <lineType+0x54>
     46e:	94 c0       	rjmp	.+296    	; 0x598 <lineType+0x17c>
     470:	80 91 b7 01 	lds	r24, 0x01B7	; 0x8001b7 <sensors+0x6>
     474:	90 91 b8 01 	lds	r25, 0x01B8	; 0x8001b8 <sensors+0x7>
     478:	80 39       	cpi	r24, 0x90	; 144
     47a:	91 40       	sbci	r25, 0x01	; 1
     47c:	08 f4       	brcc	.+2      	; 0x480 <lineType+0x64>
     47e:	8e c0       	rjmp	.+284    	; 0x59c <lineType+0x180>
				println(Straight_left_junction);
				return Straight_left_junction;
     480:	86 e0       	ldi	r24, 0x06	; 6
     482:	08 95       	ret
				return Left_corner;
			}
		}
		
		
		else if (sensors[3] >=Refrence_value && sensors[4] >= Refrence_value && sensors[0] <= Refrence_value){																							//Checks if its a right corner or a straight with right corner
     484:	80 91 b7 01 	lds	r24, 0x01B7	; 0x8001b7 <sensors+0x6>
     488:	90 91 b8 01 	lds	r25, 0x01B8	; 0x8001b8 <sensors+0x7>
     48c:	80 39       	cpi	r24, 0x90	; 144
     48e:	61 e0       	ldi	r22, 0x01	; 1
     490:	96 07       	cpc	r25, r22
     492:	20 f1       	brcs	.+72     	; 0x4dc <lineType+0xc0>
     494:	40 91 b9 01 	lds	r20, 0x01B9	; 0x8001b9 <sensors+0x8>
     498:	50 91 ba 01 	lds	r21, 0x01BA	; 0x8001ba <sensors+0x9>
     49c:	40 39       	cpi	r20, 0x90	; 144
     49e:	51 40       	sbci	r21, 0x01	; 1
     4a0:	e8 f0       	brcs	.+58     	; 0x4dc <lineType+0xc0>
     4a2:	21 39       	cpi	r18, 0x91	; 145
     4a4:	41 e0       	ldi	r20, 0x01	; 1
     4a6:	34 07       	cpc	r19, r20
     4a8:	c8 f4       	brcc	.+50     	; 0x4dc <lineType+0xc0>
			inch();
     4aa:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <inch>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     4ae:	61 e0       	ldi	r22, 0x01	; 1
     4b0:	81 eb       	ldi	r24, 0xB1	; 177
     4b2:	91 e0       	ldi	r25, 0x01	; 1
     4b4:	0e 94 82 0c 	call	0x1904	; 0x1904 <read_line_sensors_calibrated>
			
			if (sensors[2] >= Refrence_value || sensors[1] >=Refrence_value){
     4b8:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <sensors+0x4>
     4bc:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <sensors+0x5>
     4c0:	80 39       	cpi	r24, 0x90	; 144
     4c2:	91 40       	sbci	r25, 0x01	; 1
     4c4:	08 f0       	brcs	.+2      	; 0x4c8 <lineType+0xac>
     4c6:	6c c0       	rjmp	.+216    	; 0x5a0 <lineType+0x184>
     4c8:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <sensors+0x2>
     4cc:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <sensors+0x3>
     4d0:	80 39       	cpi	r24, 0x90	; 144
     4d2:	91 40       	sbci	r25, 0x01	; 1
     4d4:	08 f4       	brcc	.+2      	; 0x4d8 <lineType+0xbc>
     4d6:	66 c0       	rjmp	.+204    	; 0x5a4 <lineType+0x188>
				println(Straight_right_junction);
				return Straight_right_junction;
     4d8:	85 e0       	ldi	r24, 0x05	; 5
     4da:	08 95       	ret
				println(Straight_left_junction);
				return Right_corner;
			}
		}
		
				else if (sensors[1] >=Refrence_value && sensors[3] >= Refrence_value){																									//Checks if its a X junction or a T junction
     4dc:	40 91 b3 01 	lds	r20, 0x01B3	; 0x8001b3 <sensors+0x2>
     4e0:	50 91 b4 01 	lds	r21, 0x01B4	; 0x8001b4 <sensors+0x3>
     4e4:	40 39       	cpi	r20, 0x90	; 144
     4e6:	61 e0       	ldi	r22, 0x01	; 1
     4e8:	56 07       	cpc	r21, r22
     4ea:	a8 f0       	brcs	.+42     	; 0x516 <lineType+0xfa>
     4ec:	80 39       	cpi	r24, 0x90	; 144
     4ee:	e1 e0       	ldi	r30, 0x01	; 1
     4f0:	9e 07       	cpc	r25, r30
     4f2:	88 f0       	brcs	.+34     	; 0x516 <lineType+0xfa>
					inch();
     4f4:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <inch>
					read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     4f8:	61 e0       	ldi	r22, 0x01	; 1
     4fa:	81 eb       	ldi	r24, 0xB1	; 177
     4fc:	91 e0       	ldi	r25, 0x01	; 1
     4fe:	0e 94 82 0c 	call	0x1904	; 0x1904 <read_line_sensors_calibrated>
					
					if (sensors[2] >=Refrence_value){
     502:	80 91 b5 01 	lds	r24, 0x01B5	; 0x8001b5 <sensors+0x4>
     506:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <sensors+0x5>
     50a:	80 39       	cpi	r24, 0x90	; 144
     50c:	91 40       	sbci	r25, 0x01	; 1
     50e:	08 f4       	brcc	.+2      	; 0x512 <lineType+0xf6>
     510:	4b c0       	rjmp	.+150    	; 0x5a8 <lineType+0x18c>
						println(X_junction);
						return X_junction;
     512:	88 e0       	ldi	r24, 0x08	; 8
     514:	08 95       	ret
						println(T_junction);
						return T_junction;
					}
				}
				
				else if(sensors[2] <= End_Line_Value && sensors[1] <=End_Line_Value && sensors[3] <=End_Line_Value){
     516:	60 91 b5 01 	lds	r22, 0x01B5	; 0x8001b5 <sensors+0x4>
     51a:	70 91 b6 01 	lds	r23, 0x01B6	; 0x8001b6 <sensors+0x5>
     51e:	69 3c       	cpi	r22, 0xC9	; 201
     520:	71 05       	cpc	r23, r1
     522:	30 f4       	brcc	.+12     	; 0x530 <lineType+0x114>
     524:	49 3c       	cpi	r20, 0xC9	; 201
     526:	51 05       	cpc	r21, r1
     528:	18 f4       	brcc	.+6      	; 0x530 <lineType+0x114>
     52a:	89 3c       	cpi	r24, 0xC9	; 201
     52c:	91 05       	cpc	r25, r1
     52e:	f0 f1       	brcs	.+124    	; 0x5ac <lineType+0x190>
					println(Line_end);																													// check if the line ends
					return Line_end;
				}
		else{
		//else if (sensors[2] >=Refrence_value){																													//Checks if the line is straight
			if ((sensors[3] <=Refrence_value && sensors[4] >=Refrence_value && sensors[1] <=Refrence_value) || (sensors[0] >=Refrence_value && sensors[1] <=Refrence_value && sensors[3] <=Refrence_value)){			//Checks the line for a "Barcode"
     530:	81 39       	cpi	r24, 0x91	; 145
     532:	61 e0       	ldi	r22, 0x01	; 1
     534:	96 07       	cpc	r25, r22
     536:	58 f4       	brcc	.+22     	; 0x54e <lineType+0x132>
     538:	60 91 b9 01 	lds	r22, 0x01B9	; 0x8001b9 <sensors+0x8>
     53c:	70 91 ba 01 	lds	r23, 0x01BA	; 0x8001ba <sensors+0x9>
     540:	60 39       	cpi	r22, 0x90	; 144
     542:	71 40       	sbci	r23, 0x01	; 1
     544:	20 f0       	brcs	.+8      	; 0x54e <lineType+0x132>
     546:	41 39       	cpi	r20, 0x91	; 145
     548:	61 e0       	ldi	r22, 0x01	; 1
     54a:	56 07       	cpc	r21, r22
     54c:	98 f0       	brcs	.+38     	; 0x574 <lineType+0x158>
     54e:	20 39       	cpi	r18, 0x90	; 144
     550:	31 40       	sbci	r19, 0x01	; 1
     552:	70 f1       	brcs	.+92     	; 0x5b0 <lineType+0x194>
     554:	41 39       	cpi	r20, 0x91	; 145
     556:	51 40       	sbci	r21, 0x01	; 1
     558:	68 f5       	brcc	.+90     	; 0x5b4 <lineType+0x198>
     55a:	81 39       	cpi	r24, 0x91	; 145
     55c:	91 40       	sbci	r25, 0x01	; 1
     55e:	50 f0       	brcs	.+20     	; 0x574 <lineType+0x158>
				println(Barcode);
				return Barcode;
			}
			else{
				println(Straight);
				return Straight;
     560:	80 e0       	ldi	r24, 0x00	; 0
     562:	08 95       	ret
			if ((sensors[3] <=Refrence_value && sensors[4] >=Refrence_value && sensors[1] <=Refrence_value) || (sensors[0] >=Refrence_value && sensors[1] <=Refrence_value && sensors[3] <=Refrence_value)){			//Checks the line for a "Barcode"
			//if((sensors[4] >=Refrence_value && sensors[0] >=Refrence_value) && (sensors[1] <=Refrence_value || sensors[3] <=Refrence_value)){
			
				while(sensors[4] >= Refrence_value || sensors[0] >=Refrence_value)
				{
					read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     564:	61 e0       	ldi	r22, 0x01	; 1
     566:	81 eb       	ldi	r24, 0xB1	; 177
     568:	91 e0       	ldi	r25, 0x01	; 1
     56a:	0e 94 82 0c 	call	0x1904	; 0x1904 <read_line_sensors_calibrated>
					motorControl('S');
     56e:	83 e5       	ldi	r24, 0x53	; 83
     570:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
		else{
		//else if (sensors[2] >=Refrence_value){																													//Checks if the line is straight
			if ((sensors[3] <=Refrence_value && sensors[4] >=Refrence_value && sensors[1] <=Refrence_value) || (sensors[0] >=Refrence_value && sensors[1] <=Refrence_value && sensors[3] <=Refrence_value)){			//Checks the line for a "Barcode"
			//if((sensors[4] >=Refrence_value && sensors[0] >=Refrence_value) && (sensors[1] <=Refrence_value || sensors[3] <=Refrence_value)){
			
				while(sensors[4] >= Refrence_value || sensors[0] >=Refrence_value)
     574:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <sensors+0x8>
     578:	90 91 ba 01 	lds	r25, 0x01BA	; 0x8001ba <sensors+0x9>
     57c:	80 39       	cpi	r24, 0x90	; 144
     57e:	91 40       	sbci	r25, 0x01	; 1
     580:	88 f7       	brcc	.-30     	; 0x564 <lineType+0x148>
     582:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <sensors>
     586:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <sensors+0x1>
     58a:	80 39       	cpi	r24, 0x90	; 144
     58c:	91 40       	sbci	r25, 0x01	; 1
     58e:	50 f7       	brcc	.-44     	; 0x564 <lineType+0x148>
				{
					read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
					motorControl('S');
				}
				wait();
     590:	0e 94 02 02 	call	0x404	; 0x404 <wait>
				println(Barcode);
				return Barcode;
     594:	82 e0       	ldi	r24, 0x02	; 2
     596:	08 95       	ret
			inch();
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= Refrence_value || sensors[3] >=Refrence_value){
				println(Straight_left_junction);
				return Straight_left_junction;
     598:	86 e0       	ldi	r24, 0x06	; 6
     59a:	08 95       	ret
			}
			else{
				println(Left_corner);
				return Left_corner;
     59c:	83 e0       	ldi	r24, 0x03	; 3
     59e:	08 95       	ret
			inch();
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= Refrence_value || sensors[1] >=Refrence_value){
				println(Straight_right_junction);
				return Straight_right_junction;
     5a0:	85 e0       	ldi	r24, 0x05	; 5
     5a2:	08 95       	ret
			}
			else{
				println(Straight_left_junction);
				return Right_corner;
     5a4:	84 e0       	ldi	r24, 0x04	; 4
     5a6:	08 95       	ret
						println(X_junction);
						return X_junction;
					}
					else {
						println(T_junction);
						return T_junction;
     5a8:	87 e0       	ldi	r24, 0x07	; 7
     5aa:	08 95       	ret
					}
				}
				
				else if(sensors[2] <= End_Line_Value && sensors[1] <=End_Line_Value && sensors[3] <=End_Line_Value){
					println(Line_end);																													// check if the line ends
					return Line_end;
     5ac:	81 e0       	ldi	r24, 0x01	; 1
     5ae:	08 95       	ret
				println(Barcode);
				return Barcode;
			}
			else{
				println(Straight);
				return Straight;
     5b0:	80 e0       	ldi	r24, 0x00	; 0
     5b2:	08 95       	ret
     5b4:	80 e0       	ldi	r24, 0x00	; 0
			
		}
		
	
	}
}
     5b6:	08 95       	ret

000005b8 <parcoursSearch>:
char route[20] = "_"; // hardcode SLR
char routeBack[20];
int routea = 1;

int parcoursSearch() 
{
     5b8:	0f 93       	push	r16
     5ba:	1f 93       	push	r17
     5bc:	cf 93       	push	r28
     5be:	df 93       	push	r29
     5c0:	00 d0       	rcall	.+0      	; 0x5c2 <parcoursSearch+0xa>
     5c2:	cd b7       	in	r28, 0x3d	; 61
     5c4:	de b7       	in	r29, 0x3e	; 62
	char richting;
	while(1) 
	{
		situatie = lineType();
     5c6:	0e 94 0e 02 	call	0x41c	; 0x41c <lineType>
     5ca:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <situatie>
		
		switch (situatie) 
     5ce:	90 e0       	ldi	r25, 0x00	; 0
     5d0:	89 30       	cpi	r24, 0x09	; 9
     5d2:	91 05       	cpc	r25, r1
     5d4:	08 f0       	brcs	.+2      	; 0x5d8 <parcoursSearch+0x20>
     5d6:	41 c0       	rjmp	.+130    	; 0x65a <parcoursSearch+0xa2>
     5d8:	fc 01       	movw	r30, r24
     5da:	ec 5c       	subi	r30, 0xCC	; 204
     5dc:	ff 4f       	sbci	r31, 0xFF	; 255
     5de:	0c 94 44 12 	jmp	0x2488	; 0x2488 <__tablejump2__>
		{
			case Straight:
				motorControl('S');
     5e2:	83 e5       	ldi	r24, 0x53	; 83
     5e4:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
				break;
     5e8:	38 c0       	rjmp	.+112    	; 0x65a <parcoursSearch+0xa2>
			
			case X_junction:
			case Left_corner:
			case T_junction:
			case Straight_left_junction:
				motorControl('L');
     5ea:	8c e4       	ldi	r24, 0x4C	; 76
     5ec:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
				richting = 'L';
     5f0:	8c e4       	ldi	r24, 0x4C	; 76
     5f2:	89 83       	std	Y+1, r24	; 0x01
				////print_character('L');
				strncat(route, &richting, 1);
     5f4:	41 e0       	ldi	r20, 0x01	; 1
     5f6:	50 e0       	ldi	r21, 0x00	; 0
     5f8:	be 01       	movw	r22, r28
     5fa:	6f 5f       	subi	r22, 0xFF	; 255
     5fc:	7f 4f       	sbci	r23, 0xFF	; 255
     5fe:	84 e1       	ldi	r24, 0x14	; 20
     600:	91 e0       	ldi	r25, 0x01	; 1
     602:	0e 94 c4 13 	call	0x2788	; 0x2788 <strncat>
				break;
     606:	29 c0       	rjmp	.+82     	; 0x65a <parcoursSearch+0xa2>
			
			case Right_corner:
				motorControl('R');
     608:	82 e5       	ldi	r24, 0x52	; 82
     60a:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
				richting = 'R';
     60e:	82 e5       	ldi	r24, 0x52	; 82
     610:	89 83       	std	Y+1, r24	; 0x01
				//print_character('R');
				strncat(route, &richting, 1);
     612:	41 e0       	ldi	r20, 0x01	; 1
     614:	50 e0       	ldi	r21, 0x00	; 0
     616:	be 01       	movw	r22, r28
     618:	6f 5f       	subi	r22, 0xFF	; 255
     61a:	7f 4f       	sbci	r23, 0xFF	; 255
     61c:	84 e1       	ldi	r24, 0x14	; 20
     61e:	91 e0       	ldi	r25, 0x01	; 1
     620:	0e 94 c4 13 	call	0x2788	; 0x2788 <strncat>
				break;
     624:	1a c0       	rjmp	.+52     	; 0x65a <parcoursSearch+0xa2>
			
			case Straight_right_junction:
				richting = 'S';
     626:	83 e5       	ldi	r24, 0x53	; 83
     628:	89 83       	std	Y+1, r24	; 0x01
				//print_character('S');
				strncat(route, &richting, 1);
     62a:	41 e0       	ldi	r20, 0x01	; 1
     62c:	50 e0       	ldi	r21, 0x00	; 0
     62e:	be 01       	movw	r22, r28
     630:	6f 5f       	subi	r22, 0xFF	; 255
     632:	7f 4f       	sbci	r23, 0xFF	; 255
     634:	84 e1       	ldi	r24, 0x14	; 20
     636:	91 e0       	ldi	r25, 0x01	; 1
     638:	0e 94 c4 13 	call	0x2788	; 0x2788 <strncat>
				break;
     63c:	0e c0       	rjmp	.+28     	; 0x65a <parcoursSearch+0xa2>
				
			case Line_end:
				motorControl('T');
     63e:	84 e5       	ldi	r24, 0x54	; 84
     640:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
				richting = 'T';
     644:	84 e5       	ldi	r24, 0x54	; 84
     646:	89 83       	std	Y+1, r24	; 0x01
				//print_character('T');
				strncat(route, &richting, 1);
     648:	41 e0       	ldi	r20, 0x01	; 1
     64a:	50 e0       	ldi	r21, 0x00	; 0
     64c:	be 01       	movw	r22, r28
     64e:	6f 5f       	subi	r22, 0xFF	; 255
     650:	7f 4f       	sbci	r23, 0xFF	; 255
     652:	84 e1       	ldi	r24, 0x14	; 20
     654:	91 e0       	ldi	r25, 0x01	; 1
     656:	0e 94 c4 13 	call	0x2788	; 0x2788 <strncat>
				motorControl('P');
				//print_character('B');
				return 0;
		}
		
		clear();
     65a:	0e 94 84 0a 	call	0x1508	; 0x1508 <clear>
		lcd_goto_xy(0,0);
     65e:	60 e0       	ldi	r22, 0x00	; 0
     660:	80 e0       	ldi	r24, 0x00	; 0
     662:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <lcd_goto_xy>
		for (int i=0; i <= strlen(route);i++ ){
     666:	00 e0       	ldi	r16, 0x00	; 0
     668:	10 e0       	ldi	r17, 0x00	; 0
     66a:	08 c0       	rjmp	.+16     	; 0x67c <parcoursSearch+0xc4>
		print_character(route[i]);
     66c:	f8 01       	movw	r30, r16
     66e:	ec 5e       	subi	r30, 0xEC	; 236
     670:	fe 4f       	sbci	r31, 0xFE	; 254
     672:	80 81       	ld	r24, Z
     674:	0e 94 14 0a 	call	0x1428	; 0x1428 <print_character>
				return 0;
		}
		
		clear();
		lcd_goto_xy(0,0);
		for (int i=0; i <= strlen(route);i++ ){
     678:	0f 5f       	subi	r16, 0xFF	; 255
     67a:	1f 4f       	sbci	r17, 0xFF	; 255
     67c:	e4 e1       	ldi	r30, 0x14	; 20
     67e:	f1 e0       	ldi	r31, 0x01	; 1
     680:	01 90       	ld	r0, Z+
     682:	00 20       	and	r0, r0
     684:	e9 f7       	brne	.-6      	; 0x680 <parcoursSearch+0xc8>
     686:	31 97       	sbiw	r30, 0x01	; 1
     688:	e4 51       	subi	r30, 0x14	; 20
     68a:	f1 40       	sbci	r31, 0x01	; 1
     68c:	e0 17       	cp	r30, r16
     68e:	f1 07       	cpc	r31, r17
     690:	68 f7       	brcc	.-38     	; 0x66c <parcoursSearch+0xb4>
		print_character(route[i]);
		}
		
		char richting;	
		if (route[strlen(route)-2] == 'T') 
     692:	df 01       	movw	r26, r30
     694:	ae 5e       	subi	r26, 0xEE	; 238
     696:	be 4f       	sbci	r27, 0xFE	; 254
     698:	8c 91       	ld	r24, X
     69a:	84 35       	cpi	r24, 0x54	; 84
     69c:	09 f0       	breq	.+2      	; 0x6a0 <parcoursSearch+0xe8>
     69e:	93 cf       	rjmp	.-218    	; 0x5c6 <parcoursSearch+0xe>
		{
			char char_1 = route[strlen(route)-3];
     6a0:	df 01       	movw	r26, r30
     6a2:	af 5e       	subi	r26, 0xEF	; 239
     6a4:	be 4f       	sbci	r27, 0xFE	; 254
     6a6:	8c 91       	ld	r24, X
			char char_2 = route[strlen(route)-1];
     6a8:	ed 5e       	subi	r30, 0xED	; 237
     6aa:	fe 4f       	sbci	r31, 0xFE	; 254
     6ac:	90 81       	ld	r25, Z

			if (char_1 == 'L' && char_2 == 'L') 
     6ae:	8c 34       	cpi	r24, 0x4C	; 76
     6b0:	29 f4       	brne	.+10     	; 0x6bc <parcoursSearch+0x104>
     6b2:	9c 34       	cpi	r25, 0x4C	; 76
     6b4:	19 f4       	brne	.+6      	; 0x6bc <parcoursSearch+0x104>
			{
				richting = 'S';
     6b6:	83 e5       	ldi	r24, 0x53	; 83
     6b8:	8a 83       	std	Y+2, r24	; 0x02
     6ba:	1b c0       	rjmp	.+54     	; 0x6f2 <parcoursSearch+0x13a>
			}
			else if (char_1 == 'S' && char_2 == 'L')
     6bc:	83 35       	cpi	r24, 0x53	; 83
     6be:	29 f4       	brne	.+10     	; 0x6ca <parcoursSearch+0x112>
     6c0:	9c 34       	cpi	r25, 0x4C	; 76
     6c2:	19 f4       	brne	.+6      	; 0x6ca <parcoursSearch+0x112>
			{
				richting = 'R';
     6c4:	82 e5       	ldi	r24, 0x52	; 82
     6c6:	8a 83       	std	Y+2, r24	; 0x02
     6c8:	14 c0       	rjmp	.+40     	; 0x6f2 <parcoursSearch+0x13a>
			}
			else if (char_1 == 'R' && char_2 == 'L')
     6ca:	82 35       	cpi	r24, 0x52	; 82
     6cc:	29 f4       	brne	.+10     	; 0x6d8 <parcoursSearch+0x120>
     6ce:	9c 34       	cpi	r25, 0x4C	; 76
     6d0:	19 f4       	brne	.+6      	; 0x6d8 <parcoursSearch+0x120>
			{
				richting = 'T';
     6d2:	84 e5       	ldi	r24, 0x54	; 84
     6d4:	8a 83       	std	Y+2, r24	; 0x02
     6d6:	0d c0       	rjmp	.+26     	; 0x6f2 <parcoursSearch+0x13a>
			}
			else if (char_1 == 'L' && char_2 == 'R')
     6d8:	8c 34       	cpi	r24, 0x4C	; 76
     6da:	29 f4       	brne	.+10     	; 0x6e6 <parcoursSearch+0x12e>
     6dc:	92 35       	cpi	r25, 0x52	; 82
     6de:	19 f4       	brne	.+6      	; 0x6e6 <parcoursSearch+0x12e>
			{
				richting = 'T';
     6e0:	84 e5       	ldi	r24, 0x54	; 84
     6e2:	8a 83       	std	Y+2, r24	; 0x02
     6e4:	06 c0       	rjmp	.+12     	; 0x6f2 <parcoursSearch+0x13a>
			}
			else if (char_1 == 'L' && char_2 == 'S')
     6e6:	8c 34       	cpi	r24, 0x4C	; 76
     6e8:	21 f4       	brne	.+8      	; 0x6f2 <parcoursSearch+0x13a>
     6ea:	93 35       	cpi	r25, 0x53	; 83
     6ec:	11 f4       	brne	.+4      	; 0x6f2 <parcoursSearch+0x13a>
			{
				richting = 'R';
     6ee:	82 e5       	ldi	r24, 0x52	; 82
     6f0:	8a 83       	std	Y+2, r24	; 0x02
			}
			route[strlen(route)-3] = '\0';
     6f2:	e4 e1       	ldi	r30, 0x14	; 20
     6f4:	f1 e0       	ldi	r31, 0x01	; 1
     6f6:	01 90       	ld	r0, Z+
     6f8:	00 20       	and	r0, r0
     6fa:	e9 f7       	brne	.-6      	; 0x6f6 <parcoursSearch+0x13e>
     6fc:	34 97       	sbiw	r30, 0x04	; 4
     6fe:	10 82       	st	Z, r1
			strncat(route, &richting, 1);
     700:	41 e0       	ldi	r20, 0x01	; 1
     702:	50 e0       	ldi	r21, 0x00	; 0
     704:	be 01       	movw	r22, r28
     706:	6e 5f       	subi	r22, 0xFE	; 254
     708:	7f 4f       	sbci	r23, 0xFF	; 255
     70a:	84 e1       	ldi	r24, 0x14	; 20
     70c:	91 e0       	ldi	r25, 0x01	; 1
     70e:	0e 94 c4 13 	call	0x2788	; 0x2788 <strncat>
		}
	}
     712:	59 cf       	rjmp	.-334    	; 0x5c6 <parcoursSearch+0xe>
				//print_character('T');
				strncat(route, &richting, 1);
				break;
				
			case Barcode: // end of parcour
				motorControl('P');
     714:	80 e5       	ldi	r24, 0x50	; 80
     716:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
			strncat(route, &richting, 1);
		}
	}
	routea = 0;	
	return 0;
}
     71a:	80 e0       	ldi	r24, 0x00	; 0
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	0f 90       	pop	r0
     720:	0f 90       	pop	r0
     722:	df 91       	pop	r29
     724:	cf 91       	pop	r28
     726:	1f 91       	pop	r17
     728:	0f 91       	pop	r16
     72a:	08 95       	ret

0000072c <parcoursRun>:

int parcoursRun(char way) 
{
     72c:	ef 92       	push	r14
     72e:	ff 92       	push	r15
     730:	1f 93       	push	r17
     732:	cf 93       	push	r28
     734:	df 93       	push	r29
     736:	18 2f       	mov	r17, r24
	char richting;
	for (int i = 0; i < strlen(route); i++) 
     738:	c0 e0       	ldi	r28, 0x00	; 0
     73a:	d0 e0       	ldi	r29, 0x00	; 0
     73c:	2a c0       	rjmp	.+84     	; 0x792 <parcoursRun+0x66>
	{
		while (lineType() == Straight)
		{
			motorControl('S');
     73e:	83 e5       	ldi	r24, 0x53	; 83
     740:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
int parcoursRun(char way) 
{
	char richting;
	for (int i = 0; i < strlen(route); i++) 
	{
		while (lineType() == Straight)
     744:	0e 94 0e 02 	call	0x41c	; 0x41c <lineType>
     748:	88 23       	and	r24, r24
     74a:	c9 f3       	breq	.-14     	; 0x73e <parcoursRun+0x12>
		{
			motorControl('S');
		}
		if (way == 'T') {
     74c:	14 35       	cpi	r17, 0x54	; 84
     74e:	39 f4       	brne	.+14     	; 0x75e <parcoursRun+0x32>
			motorControl(route[i]);
     750:	fe 01       	movw	r30, r28
     752:	ec 5e       	subi	r30, 0xEC	; 236
     754:	fe 4f       	sbci	r31, 0xFE	; 254
     756:	80 81       	ld	r24, Z
     758:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
     75c:	19 c0       	rjmp	.+50     	; 0x790 <parcoursRun+0x64>
		} 
		else if (way == 'B') 
     75e:	12 34       	cpi	r17, 0x42	; 66
     760:	b9 f4       	brne	.+46     	; 0x790 <parcoursRun+0x64>
		{
			richting = route[strlen(route)-i];
     762:	e4 e1       	ldi	r30, 0x14	; 20
     764:	f1 e0       	ldi	r31, 0x01	; 1
     766:	01 90       	ld	r0, Z+
     768:	00 20       	and	r0, r0
     76a:	e9 f7       	brne	.-6      	; 0x766 <parcoursRun+0x3a>
     76c:	31 97       	sbiw	r30, 0x01	; 1
     76e:	e4 51       	subi	r30, 0x14	; 20
     770:	f1 40       	sbci	r31, 0x01	; 1
     772:	ee 19       	sub	r30, r14
     774:	ff 09       	sbc	r31, r15
     776:	ec 5e       	subi	r30, 0xEC	; 236
     778:	fe 4f       	sbci	r31, 0xFE	; 254
     77a:	80 81       	ld	r24, Z
			switch (richting)
     77c:	8c 34       	cpi	r24, 0x4C	; 76
     77e:	19 f0       	breq	.+6      	; 0x786 <parcoursRun+0x5a>
     780:	82 35       	cpi	r24, 0x52	; 82
     782:	19 f0       	breq	.+6      	; 0x78a <parcoursRun+0x5e>
     784:	03 c0       	rjmp	.+6      	; 0x78c <parcoursRun+0x60>
			{
				case 'R':
					richting = 'L';
					break;
				case 'L':
					richting = 'R';
     786:	82 e5       	ldi	r24, 0x52	; 82
					break;
     788:	01 c0       	rjmp	.+2      	; 0x78c <parcoursRun+0x60>
		{
			richting = route[strlen(route)-i];
			switch (richting)
			{
				case 'R':
					richting = 'L';
     78a:	8c e4       	ldi	r24, 0x4C	; 76
					break;
				case 'L':
					richting = 'R';
					break;
			}
			motorControl(richting);
     78c:	0e 94 02 01 	call	0x204	; 0x204 <motorControl>
}

int parcoursRun(char way) 
{
	char richting;
	for (int i = 0; i < strlen(route); i++) 
     790:	21 96       	adiw	r28, 0x01	; 1
     792:	e4 e1       	ldi	r30, 0x14	; 20
     794:	f1 e0       	ldi	r31, 0x01	; 1
     796:	01 90       	ld	r0, Z+
     798:	00 20       	and	r0, r0
     79a:	e9 f7       	brne	.-6      	; 0x796 <parcoursRun+0x6a>
     79c:	31 97       	sbiw	r30, 0x01	; 1
     79e:	e4 51       	subi	r30, 0x14	; 20
     7a0:	f1 40       	sbci	r31, 0x01	; 1
     7a2:	7e 01       	movw	r14, r28
     7a4:	ce 17       	cp	r28, r30
     7a6:	df 07       	cpc	r29, r31
     7a8:	68 f2       	brcs	.-102    	; 0x744 <parcoursRun+0x18>
			}
			motorControl(richting);
		}
	}
	return 0;
}
     7aa:	80 e0       	ldi	r24, 0x00	; 0
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	df 91       	pop	r29
     7b0:	cf 91       	pop	r28
     7b2:	1f 91       	pop	r17
     7b4:	ff 90       	pop	r15
     7b6:	ef 90       	pop	r14
     7b8:	08 95       	ret

000007ba <parcours>:

int parcours(char way) 
{
	if (route[0] == '_'){
     7ba:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <route>
     7be:	9f 35       	cpi	r25, 0x5F	; 95
     7c0:	51 f4       	brne	.+20     	; 0x7d6 <parcours+0x1c>
	//if (routea == 1){
		memset(route,0,sizeof route);
     7c2:	84 e1       	ldi	r24, 0x14	; 20
     7c4:	e4 e1       	ldi	r30, 0x14	; 20
     7c6:	f1 e0       	ldi	r31, 0x01	; 1
     7c8:	df 01       	movw	r26, r30
     7ca:	1d 92       	st	X+, r1
     7cc:	8a 95       	dec	r24
     7ce:	e9 f7       	brne	.-6      	; 0x7ca <parcours+0x10>
		parcoursSearch();
     7d0:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <parcoursSearch>
     7d4:	02 c0       	rjmp	.+4      	; 0x7da <parcours+0x20>
	} 
	else 
	{
		parcoursRun(way);
     7d6:	0e 94 96 03 	call	0x72c	; 0x72c <parcoursRun>
	} 
	return 0;
     7da:	80 e0       	ldi	r24, 0x00	; 0
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	08 95       	ret

000007e0 <__subsf3>:
     7e0:	50 58       	subi	r21, 0x80	; 128

000007e2 <__addsf3>:
     7e2:	bb 27       	eor	r27, r27
     7e4:	aa 27       	eor	r26, r26
     7e6:	0e 94 08 04 	call	0x810	; 0x810 <__addsf3x>
     7ea:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__fp_round>
     7ee:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__fp_pscA>
     7f2:	38 f0       	brcs	.+14     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
     7f4:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__fp_pscB>
     7f8:	20 f0       	brcs	.+8      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
     7fa:	39 f4       	brne	.+14     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     7fc:	9f 3f       	cpi	r25, 0xFF	; 255
     7fe:	19 f4       	brne	.+6      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     800:	26 f4       	brtc	.+8      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     802:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__fp_nan>
     806:	0e f4       	brtc	.+2      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     808:	e0 95       	com	r30
     80a:	e7 fb       	bst	r30, 7
     80c:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__fp_inf>

00000810 <__addsf3x>:
     810:	e9 2f       	mov	r30, r25
     812:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <__fp_split3>
     816:	58 f3       	brcs	.-42     	; 0x7ee <__addsf3+0xc>
     818:	ba 17       	cp	r27, r26
     81a:	62 07       	cpc	r22, r18
     81c:	73 07       	cpc	r23, r19
     81e:	84 07       	cpc	r24, r20
     820:	95 07       	cpc	r25, r21
     822:	20 f0       	brcs	.+8      	; 0x82c <__addsf3x+0x1c>
     824:	79 f4       	brne	.+30     	; 0x844 <__addsf3x+0x34>
     826:	a6 f5       	brtc	.+104    	; 0x890 <__addsf3x+0x80>
     828:	0c 94 1a 05 	jmp	0xa34	; 0xa34 <__fp_zero>
     82c:	0e f4       	brtc	.+2      	; 0x830 <__addsf3x+0x20>
     82e:	e0 95       	com	r30
     830:	0b 2e       	mov	r0, r27
     832:	ba 2f       	mov	r27, r26
     834:	a0 2d       	mov	r26, r0
     836:	0b 01       	movw	r0, r22
     838:	b9 01       	movw	r22, r18
     83a:	90 01       	movw	r18, r0
     83c:	0c 01       	movw	r0, r24
     83e:	ca 01       	movw	r24, r20
     840:	a0 01       	movw	r20, r0
     842:	11 24       	eor	r1, r1
     844:	ff 27       	eor	r31, r31
     846:	59 1b       	sub	r21, r25
     848:	99 f0       	breq	.+38     	; 0x870 <__addsf3x+0x60>
     84a:	59 3f       	cpi	r21, 0xF9	; 249
     84c:	50 f4       	brcc	.+20     	; 0x862 <__addsf3x+0x52>
     84e:	50 3e       	cpi	r21, 0xE0	; 224
     850:	68 f1       	brcs	.+90     	; 0x8ac <__addsf3x+0x9c>
     852:	1a 16       	cp	r1, r26
     854:	f0 40       	sbci	r31, 0x00	; 0
     856:	a2 2f       	mov	r26, r18
     858:	23 2f       	mov	r18, r19
     85a:	34 2f       	mov	r19, r20
     85c:	44 27       	eor	r20, r20
     85e:	58 5f       	subi	r21, 0xF8	; 248
     860:	f3 cf       	rjmp	.-26     	; 0x848 <__addsf3x+0x38>
     862:	46 95       	lsr	r20
     864:	37 95       	ror	r19
     866:	27 95       	ror	r18
     868:	a7 95       	ror	r26
     86a:	f0 40       	sbci	r31, 0x00	; 0
     86c:	53 95       	inc	r21
     86e:	c9 f7       	brne	.-14     	; 0x862 <__addsf3x+0x52>
     870:	7e f4       	brtc	.+30     	; 0x890 <__addsf3x+0x80>
     872:	1f 16       	cp	r1, r31
     874:	ba 0b       	sbc	r27, r26
     876:	62 0b       	sbc	r22, r18
     878:	73 0b       	sbc	r23, r19
     87a:	84 0b       	sbc	r24, r20
     87c:	ba f0       	brmi	.+46     	; 0x8ac <__addsf3x+0x9c>
     87e:	91 50       	subi	r25, 0x01	; 1
     880:	a1 f0       	breq	.+40     	; 0x8aa <__addsf3x+0x9a>
     882:	ff 0f       	add	r31, r31
     884:	bb 1f       	adc	r27, r27
     886:	66 1f       	adc	r22, r22
     888:	77 1f       	adc	r23, r23
     88a:	88 1f       	adc	r24, r24
     88c:	c2 f7       	brpl	.-16     	; 0x87e <__addsf3x+0x6e>
     88e:	0e c0       	rjmp	.+28     	; 0x8ac <__addsf3x+0x9c>
     890:	ba 0f       	add	r27, r26
     892:	62 1f       	adc	r22, r18
     894:	73 1f       	adc	r23, r19
     896:	84 1f       	adc	r24, r20
     898:	48 f4       	brcc	.+18     	; 0x8ac <__addsf3x+0x9c>
     89a:	87 95       	ror	r24
     89c:	77 95       	ror	r23
     89e:	67 95       	ror	r22
     8a0:	b7 95       	ror	r27
     8a2:	f7 95       	ror	r31
     8a4:	9e 3f       	cpi	r25, 0xFE	; 254
     8a6:	08 f0       	brcs	.+2      	; 0x8aa <__addsf3x+0x9a>
     8a8:	b0 cf       	rjmp	.-160    	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     8aa:	93 95       	inc	r25
     8ac:	88 0f       	add	r24, r24
     8ae:	08 f0       	brcs	.+2      	; 0x8b2 <__addsf3x+0xa2>
     8b0:	99 27       	eor	r25, r25
     8b2:	ee 0f       	add	r30, r30
     8b4:	97 95       	ror	r25
     8b6:	87 95       	ror	r24
     8b8:	08 95       	ret

000008ba <__fixsfsi>:
     8ba:	0e 94 64 04 	call	0x8c8	; 0x8c8 <__fixunssfsi>
     8be:	68 94       	set
     8c0:	b1 11       	cpse	r27, r1
     8c2:	0c 94 1b 05 	jmp	0xa36	; 0xa36 <__fp_szero>
     8c6:	08 95       	ret

000008c8 <__fixunssfsi>:
     8c8:	0e 94 00 05 	call	0xa00	; 0xa00 <__fp_splitA>
     8cc:	88 f0       	brcs	.+34     	; 0x8f0 <__fixunssfsi+0x28>
     8ce:	9f 57       	subi	r25, 0x7F	; 127
     8d0:	98 f0       	brcs	.+38     	; 0x8f8 <__fixunssfsi+0x30>
     8d2:	b9 2f       	mov	r27, r25
     8d4:	99 27       	eor	r25, r25
     8d6:	b7 51       	subi	r27, 0x17	; 23
     8d8:	b0 f0       	brcs	.+44     	; 0x906 <__stack+0x7>
     8da:	e1 f0       	breq	.+56     	; 0x914 <__stack+0x15>
     8dc:	66 0f       	add	r22, r22
     8de:	77 1f       	adc	r23, r23
     8e0:	88 1f       	adc	r24, r24
     8e2:	99 1f       	adc	r25, r25
     8e4:	1a f0       	brmi	.+6      	; 0x8ec <__fixunssfsi+0x24>
     8e6:	ba 95       	dec	r27
     8e8:	c9 f7       	brne	.-14     	; 0x8dc <__fixunssfsi+0x14>
     8ea:	14 c0       	rjmp	.+40     	; 0x914 <__stack+0x15>
     8ec:	b1 30       	cpi	r27, 0x01	; 1
     8ee:	91 f0       	breq	.+36     	; 0x914 <__stack+0x15>
     8f0:	0e 94 1a 05 	call	0xa34	; 0xa34 <__fp_zero>
     8f4:	b1 e0       	ldi	r27, 0x01	; 1
     8f6:	08 95       	ret
     8f8:	0c 94 1a 05 	jmp	0xa34	; 0xa34 <__fp_zero>
     8fc:	67 2f       	mov	r22, r23
     8fe:	78 2f       	mov	r23, r24
     900:	88 27       	eor	r24, r24
     902:	b8 5f       	subi	r27, 0xF8	; 248
     904:	39 f0       	breq	.+14     	; 0x914 <__stack+0x15>
     906:	b9 3f       	cpi	r27, 0xF9	; 249
     908:	cc f3       	brlt	.-14     	; 0x8fc <__fixunssfsi+0x34>
     90a:	86 95       	lsr	r24
     90c:	77 95       	ror	r23
     90e:	67 95       	ror	r22
     910:	b3 95       	inc	r27
     912:	d9 f7       	brne	.-10     	; 0x90a <__stack+0xb>
     914:	3e f4       	brtc	.+14     	; 0x924 <__stack+0x25>
     916:	90 95       	com	r25
     918:	80 95       	com	r24
     91a:	70 95       	com	r23
     91c:	61 95       	neg	r22
     91e:	7f 4f       	sbci	r23, 0xFF	; 255
     920:	8f 4f       	sbci	r24, 0xFF	; 255
     922:	9f 4f       	sbci	r25, 0xFF	; 255
     924:	08 95       	ret

00000926 <__floatunsisf>:
     926:	e8 94       	clt
     928:	09 c0       	rjmp	.+18     	; 0x93c <__floatsisf+0x12>

0000092a <__floatsisf>:
     92a:	97 fb       	bst	r25, 7
     92c:	3e f4       	brtc	.+14     	; 0x93c <__floatsisf+0x12>
     92e:	90 95       	com	r25
     930:	80 95       	com	r24
     932:	70 95       	com	r23
     934:	61 95       	neg	r22
     936:	7f 4f       	sbci	r23, 0xFF	; 255
     938:	8f 4f       	sbci	r24, 0xFF	; 255
     93a:	9f 4f       	sbci	r25, 0xFF	; 255
     93c:	99 23       	and	r25, r25
     93e:	a9 f0       	breq	.+42     	; 0x96a <__floatsisf+0x40>
     940:	f9 2f       	mov	r31, r25
     942:	96 e9       	ldi	r25, 0x96	; 150
     944:	bb 27       	eor	r27, r27
     946:	93 95       	inc	r25
     948:	f6 95       	lsr	r31
     94a:	87 95       	ror	r24
     94c:	77 95       	ror	r23
     94e:	67 95       	ror	r22
     950:	b7 95       	ror	r27
     952:	f1 11       	cpse	r31, r1
     954:	f8 cf       	rjmp	.-16     	; 0x946 <__floatsisf+0x1c>
     956:	fa f4       	brpl	.+62     	; 0x996 <__floatsisf+0x6c>
     958:	bb 0f       	add	r27, r27
     95a:	11 f4       	brne	.+4      	; 0x960 <__floatsisf+0x36>
     95c:	60 ff       	sbrs	r22, 0
     95e:	1b c0       	rjmp	.+54     	; 0x996 <__floatsisf+0x6c>
     960:	6f 5f       	subi	r22, 0xFF	; 255
     962:	7f 4f       	sbci	r23, 0xFF	; 255
     964:	8f 4f       	sbci	r24, 0xFF	; 255
     966:	9f 4f       	sbci	r25, 0xFF	; 255
     968:	16 c0       	rjmp	.+44     	; 0x996 <__floatsisf+0x6c>
     96a:	88 23       	and	r24, r24
     96c:	11 f0       	breq	.+4      	; 0x972 <__floatsisf+0x48>
     96e:	96 e9       	ldi	r25, 0x96	; 150
     970:	11 c0       	rjmp	.+34     	; 0x994 <__floatsisf+0x6a>
     972:	77 23       	and	r23, r23
     974:	21 f0       	breq	.+8      	; 0x97e <__floatsisf+0x54>
     976:	9e e8       	ldi	r25, 0x8E	; 142
     978:	87 2f       	mov	r24, r23
     97a:	76 2f       	mov	r23, r22
     97c:	05 c0       	rjmp	.+10     	; 0x988 <__floatsisf+0x5e>
     97e:	66 23       	and	r22, r22
     980:	71 f0       	breq	.+28     	; 0x99e <__floatsisf+0x74>
     982:	96 e8       	ldi	r25, 0x86	; 134
     984:	86 2f       	mov	r24, r22
     986:	70 e0       	ldi	r23, 0x00	; 0
     988:	60 e0       	ldi	r22, 0x00	; 0
     98a:	2a f0       	brmi	.+10     	; 0x996 <__floatsisf+0x6c>
     98c:	9a 95       	dec	r25
     98e:	66 0f       	add	r22, r22
     990:	77 1f       	adc	r23, r23
     992:	88 1f       	adc	r24, r24
     994:	da f7       	brpl	.-10     	; 0x98c <__floatsisf+0x62>
     996:	88 0f       	add	r24, r24
     998:	96 95       	lsr	r25
     99a:	87 95       	ror	r24
     99c:	97 f9       	bld	r25, 7
     99e:	08 95       	ret

000009a0 <__fp_inf>:
     9a0:	97 f9       	bld	r25, 7
     9a2:	9f 67       	ori	r25, 0x7F	; 127
     9a4:	80 e8       	ldi	r24, 0x80	; 128
     9a6:	70 e0       	ldi	r23, 0x00	; 0
     9a8:	60 e0       	ldi	r22, 0x00	; 0
     9aa:	08 95       	ret

000009ac <__fp_nan>:
     9ac:	9f ef       	ldi	r25, 0xFF	; 255
     9ae:	80 ec       	ldi	r24, 0xC0	; 192
     9b0:	08 95       	ret

000009b2 <__fp_pscA>:
     9b2:	00 24       	eor	r0, r0
     9b4:	0a 94       	dec	r0
     9b6:	16 16       	cp	r1, r22
     9b8:	17 06       	cpc	r1, r23
     9ba:	18 06       	cpc	r1, r24
     9bc:	09 06       	cpc	r0, r25
     9be:	08 95       	ret

000009c0 <__fp_pscB>:
     9c0:	00 24       	eor	r0, r0
     9c2:	0a 94       	dec	r0
     9c4:	12 16       	cp	r1, r18
     9c6:	13 06       	cpc	r1, r19
     9c8:	14 06       	cpc	r1, r20
     9ca:	05 06       	cpc	r0, r21
     9cc:	08 95       	ret

000009ce <__fp_round>:
     9ce:	09 2e       	mov	r0, r25
     9d0:	03 94       	inc	r0
     9d2:	00 0c       	add	r0, r0
     9d4:	11 f4       	brne	.+4      	; 0x9da <__fp_round+0xc>
     9d6:	88 23       	and	r24, r24
     9d8:	52 f0       	brmi	.+20     	; 0x9ee <__fp_round+0x20>
     9da:	bb 0f       	add	r27, r27
     9dc:	40 f4       	brcc	.+16     	; 0x9ee <__fp_round+0x20>
     9de:	bf 2b       	or	r27, r31
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__fp_round+0x18>
     9e2:	60 ff       	sbrs	r22, 0
     9e4:	04 c0       	rjmp	.+8      	; 0x9ee <__fp_round+0x20>
     9e6:	6f 5f       	subi	r22, 0xFF	; 255
     9e8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ea:	8f 4f       	sbci	r24, 0xFF	; 255
     9ec:	9f 4f       	sbci	r25, 0xFF	; 255
     9ee:	08 95       	ret

000009f0 <__fp_split3>:
     9f0:	57 fd       	sbrc	r21, 7
     9f2:	90 58       	subi	r25, 0x80	; 128
     9f4:	44 0f       	add	r20, r20
     9f6:	55 1f       	adc	r21, r21
     9f8:	59 f0       	breq	.+22     	; 0xa10 <__fp_splitA+0x10>
     9fa:	5f 3f       	cpi	r21, 0xFF	; 255
     9fc:	71 f0       	breq	.+28     	; 0xa1a <__fp_splitA+0x1a>
     9fe:	47 95       	ror	r20

00000a00 <__fp_splitA>:
     a00:	88 0f       	add	r24, r24
     a02:	97 fb       	bst	r25, 7
     a04:	99 1f       	adc	r25, r25
     a06:	61 f0       	breq	.+24     	; 0xa20 <__fp_splitA+0x20>
     a08:	9f 3f       	cpi	r25, 0xFF	; 255
     a0a:	79 f0       	breq	.+30     	; 0xa2a <__fp_splitA+0x2a>
     a0c:	87 95       	ror	r24
     a0e:	08 95       	ret
     a10:	12 16       	cp	r1, r18
     a12:	13 06       	cpc	r1, r19
     a14:	14 06       	cpc	r1, r20
     a16:	55 1f       	adc	r21, r21
     a18:	f2 cf       	rjmp	.-28     	; 0x9fe <__fp_split3+0xe>
     a1a:	46 95       	lsr	r20
     a1c:	f1 df       	rcall	.-30     	; 0xa00 <__fp_splitA>
     a1e:	08 c0       	rjmp	.+16     	; 0xa30 <__fp_splitA+0x30>
     a20:	16 16       	cp	r1, r22
     a22:	17 06       	cpc	r1, r23
     a24:	18 06       	cpc	r1, r24
     a26:	99 1f       	adc	r25, r25
     a28:	f1 cf       	rjmp	.-30     	; 0xa0c <__fp_splitA+0xc>
     a2a:	86 95       	lsr	r24
     a2c:	71 05       	cpc	r23, r1
     a2e:	61 05       	cpc	r22, r1
     a30:	08 94       	sec
     a32:	08 95       	ret

00000a34 <__fp_zero>:
     a34:	e8 94       	clt

00000a36 <__fp_szero>:
     a36:	bb 27       	eor	r27, r27
     a38:	66 27       	eor	r22, r22
     a3a:	77 27       	eor	r23, r23
     a3c:	cb 01       	movw	r24, r22
     a3e:	97 f9       	bld	r25, 7
     a40:	08 95       	ret

00000a42 <__mulsf3>:
     a42:	0e 94 34 05 	call	0xa68	; 0xa68 <__mulsf3x>
     a46:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__fp_round>
     a4a:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__fp_pscA>
     a4e:	38 f0       	brcs	.+14     	; 0xa5e <__mulsf3+0x1c>
     a50:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__fp_pscB>
     a54:	20 f0       	brcs	.+8      	; 0xa5e <__mulsf3+0x1c>
     a56:	95 23       	and	r25, r21
     a58:	11 f0       	breq	.+4      	; 0xa5e <__mulsf3+0x1c>
     a5a:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__fp_inf>
     a5e:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__fp_nan>
     a62:	11 24       	eor	r1, r1
     a64:	0c 94 1b 05 	jmp	0xa36	; 0xa36 <__fp_szero>

00000a68 <__mulsf3x>:
     a68:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <__fp_split3>
     a6c:	70 f3       	brcs	.-36     	; 0xa4a <__mulsf3+0x8>

00000a6e <__mulsf3_pse>:
     a6e:	95 9f       	mul	r25, r21
     a70:	c1 f3       	breq	.-16     	; 0xa62 <__mulsf3+0x20>
     a72:	95 0f       	add	r25, r21
     a74:	50 e0       	ldi	r21, 0x00	; 0
     a76:	55 1f       	adc	r21, r21
     a78:	62 9f       	mul	r22, r18
     a7a:	f0 01       	movw	r30, r0
     a7c:	72 9f       	mul	r23, r18
     a7e:	bb 27       	eor	r27, r27
     a80:	f0 0d       	add	r31, r0
     a82:	b1 1d       	adc	r27, r1
     a84:	63 9f       	mul	r22, r19
     a86:	aa 27       	eor	r26, r26
     a88:	f0 0d       	add	r31, r0
     a8a:	b1 1d       	adc	r27, r1
     a8c:	aa 1f       	adc	r26, r26
     a8e:	64 9f       	mul	r22, r20
     a90:	66 27       	eor	r22, r22
     a92:	b0 0d       	add	r27, r0
     a94:	a1 1d       	adc	r26, r1
     a96:	66 1f       	adc	r22, r22
     a98:	82 9f       	mul	r24, r18
     a9a:	22 27       	eor	r18, r18
     a9c:	b0 0d       	add	r27, r0
     a9e:	a1 1d       	adc	r26, r1
     aa0:	62 1f       	adc	r22, r18
     aa2:	73 9f       	mul	r23, r19
     aa4:	b0 0d       	add	r27, r0
     aa6:	a1 1d       	adc	r26, r1
     aa8:	62 1f       	adc	r22, r18
     aaa:	83 9f       	mul	r24, r19
     aac:	a0 0d       	add	r26, r0
     aae:	61 1d       	adc	r22, r1
     ab0:	22 1f       	adc	r18, r18
     ab2:	74 9f       	mul	r23, r20
     ab4:	33 27       	eor	r19, r19
     ab6:	a0 0d       	add	r26, r0
     ab8:	61 1d       	adc	r22, r1
     aba:	23 1f       	adc	r18, r19
     abc:	84 9f       	mul	r24, r20
     abe:	60 0d       	add	r22, r0
     ac0:	21 1d       	adc	r18, r1
     ac2:	82 2f       	mov	r24, r18
     ac4:	76 2f       	mov	r23, r22
     ac6:	6a 2f       	mov	r22, r26
     ac8:	11 24       	eor	r1, r1
     aca:	9f 57       	subi	r25, 0x7F	; 127
     acc:	50 40       	sbci	r21, 0x00	; 0
     ace:	9a f0       	brmi	.+38     	; 0xaf6 <__mulsf3_pse+0x88>
     ad0:	f1 f0       	breq	.+60     	; 0xb0e <__mulsf3_pse+0xa0>
     ad2:	88 23       	and	r24, r24
     ad4:	4a f0       	brmi	.+18     	; 0xae8 <__mulsf3_pse+0x7a>
     ad6:	ee 0f       	add	r30, r30
     ad8:	ff 1f       	adc	r31, r31
     ada:	bb 1f       	adc	r27, r27
     adc:	66 1f       	adc	r22, r22
     ade:	77 1f       	adc	r23, r23
     ae0:	88 1f       	adc	r24, r24
     ae2:	91 50       	subi	r25, 0x01	; 1
     ae4:	50 40       	sbci	r21, 0x00	; 0
     ae6:	a9 f7       	brne	.-22     	; 0xad2 <__mulsf3_pse+0x64>
     ae8:	9e 3f       	cpi	r25, 0xFE	; 254
     aea:	51 05       	cpc	r21, r1
     aec:	80 f0       	brcs	.+32     	; 0xb0e <__mulsf3_pse+0xa0>
     aee:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__fp_inf>
     af2:	0c 94 1b 05 	jmp	0xa36	; 0xa36 <__fp_szero>
     af6:	5f 3f       	cpi	r21, 0xFF	; 255
     af8:	e4 f3       	brlt	.-8      	; 0xaf2 <__mulsf3_pse+0x84>
     afa:	98 3e       	cpi	r25, 0xE8	; 232
     afc:	d4 f3       	brlt	.-12     	; 0xaf2 <__mulsf3_pse+0x84>
     afe:	86 95       	lsr	r24
     b00:	77 95       	ror	r23
     b02:	67 95       	ror	r22
     b04:	b7 95       	ror	r27
     b06:	f7 95       	ror	r31
     b08:	e7 95       	ror	r30
     b0a:	9f 5f       	subi	r25, 0xFF	; 255
     b0c:	c1 f7       	brne	.-16     	; 0xafe <__mulsf3_pse+0x90>
     b0e:	fe 2b       	or	r31, r30
     b10:	88 0f       	add	r24, r24
     b12:	91 1d       	adc	r25, r1
     b14:	96 95       	lsr	r25
     b16:	87 95       	ror	r24
     b18:	97 f9       	bld	r25, 7
     b1a:	08 95       	ret

00000b1c <_ZN15OrangutanAnalog7setModeEh.part.0>:
     b1c:	ec e7       	ldi	r30, 0x7C	; 124
     b1e:	f0 e0       	ldi	r31, 0x00	; 0
     b20:	80 81       	ld	r24, Z
     b22:	8f 7d       	andi	r24, 0xDF	; 223
     b24:	80 83       	st	Z, r24
     b26:	08 95       	ret

00000b28 <_ZN15OrangutanAnalog7setModeEh>:
     b28:	81 11       	cpse	r24, r1
     b2a:	03 c0       	rjmp	.+6      	; 0xb32 <_ZN15OrangutanAnalog7setModeEh+0xa>
     b2c:	0e 94 8e 05 	call	0xb1c	; 0xb1c <_ZN15OrangutanAnalog7setModeEh.part.0>
     b30:	08 95       	ret
     b32:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     b36:	80 62       	ori	r24, 0x20	; 32
     b38:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     b3c:	08 95       	ret

00000b3e <_ZN15OrangutanAnalog7getModeEv>:
     b3e:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     b42:	85 fb       	bst	r24, 5
     b44:	88 27       	eor	r24, r24
     b46:	80 f9       	bld	r24, 0
     b48:	08 95       	ret

00000b4a <_ZN15OrangutanAnalog16conversionResultEv>:
     b4a:	0e 94 9f 05 	call	0xb3e	; 0xb3e <_ZN15OrangutanAnalog7getModeEv>
     b4e:	88 23       	and	r24, r24
     b50:	21 f0       	breq	.+8      	; 0xb5a <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     b52:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	08 95       	ret
     b5a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     b5e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     b62:	08 95       	ret

00000b64 <_ZN15OrangutanAnalog15startConversionEhh>:
     b64:	80 32       	cpi	r24, 0x20	; 32
     b66:	a0 f4       	brcc	.+40     	; 0xb90 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
     b68:	97 e8       	ldi	r25, 0x87	; 135
     b6a:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     b6e:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     b72:	66 23       	and	r22, r22
     b74:	11 f0       	breq	.+4      	; 0xb7a <_ZN15OrangutanAnalog15startConversionEhh+0x16>
     b76:	90 6c       	ori	r25, 0xC0	; 192
     b78:	02 c0       	rjmp	.+4      	; 0xb7e <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
     b7a:	9f 77       	andi	r25, 0x7F	; 127
     b7c:	90 64       	ori	r25, 0x40	; 64
     b7e:	90 7e       	andi	r25, 0xE0	; 224
     b80:	98 2b       	or	r25, r24
     b82:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     b86:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     b8a:	80 64       	ori	r24, 0x40	; 64
     b8c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     b90:	08 95       	ret

00000b92 <_ZN15OrangutanAnalog11readAverageEhj>:
     b92:	a0 e0       	ldi	r26, 0x00	; 0
     b94:	b0 e0       	ldi	r27, 0x00	; 0
     b96:	ef ec       	ldi	r30, 0xCF	; 207
     b98:	f5 e0       	ldi	r31, 0x05	; 5
     b9a:	0c 94 76 12 	jmp	0x24ec	; 0x24ec <__prologue_saves__+0x14>
     b9e:	eb 01       	movw	r28, r22
     ba0:	60 e0       	ldi	r22, 0x00	; 0
     ba2:	0e 94 b2 05 	call	0xb64	; 0xb64 <_ZN15OrangutanAnalog15startConversionEhh>
     ba6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     baa:	86 fd       	sbrc	r24, 6
     bac:	fc cf       	rjmp	.-8      	; 0xba6 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
     bae:	8e 01       	movw	r16, r28
     bb0:	c1 2c       	mov	r12, r1
     bb2:	d1 2c       	mov	r13, r1
     bb4:	76 01       	movw	r14, r12
     bb6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     bba:	80 64       	ori	r24, 0x40	; 64
     bbc:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     bc0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     bc4:	86 fd       	sbrc	r24, 6
     bc6:	fc cf       	rjmp	.-8      	; 0xbc0 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
     bc8:	0e 94 a5 05 	call	0xb4a	; 0xb4a <_ZN15OrangutanAnalog16conversionResultEv>
     bcc:	c8 0e       	add	r12, r24
     bce:	d9 1e       	adc	r13, r25
     bd0:	e1 1c       	adc	r14, r1
     bd2:	f1 1c       	adc	r15, r1
     bd4:	01 50       	subi	r16, 0x01	; 1
     bd6:	11 09       	sbc	r17, r1
     bd8:	01 15       	cp	r16, r1
     bda:	11 05       	cpc	r17, r1
     bdc:	61 f7       	brne	.-40     	; 0xbb6 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
     bde:	ce 01       	movw	r24, r28
     be0:	96 95       	lsr	r25
     be2:	87 95       	ror	r24
     be4:	c0 34       	cpi	r28, 0x40	; 64
     be6:	d1 05       	cpc	r29, r1
     be8:	38 f4       	brcc	.+14     	; 0xbf8 <_ZN15OrangutanAnalog11readAverageEhj+0x66>
     bea:	8c 0d       	add	r24, r12
     bec:	9d 1d       	adc	r25, r13
     bee:	be 01       	movw	r22, r28
     bf0:	0e 94 db 11 	call	0x23b6	; 0x23b6 <__udivmodhi4>
     bf4:	cb 01       	movw	r24, r22
     bf6:	0e c0       	rjmp	.+28     	; 0xc14 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
     bf8:	a7 01       	movw	r20, r14
     bfa:	96 01       	movw	r18, r12
     bfc:	28 0f       	add	r18, r24
     bfe:	39 1f       	adc	r19, r25
     c00:	41 1d       	adc	r20, r1
     c02:	51 1d       	adc	r21, r1
     c04:	ca 01       	movw	r24, r20
     c06:	b9 01       	movw	r22, r18
     c08:	9e 01       	movw	r18, r28
     c0a:	40 e0       	ldi	r20, 0x00	; 0
     c0c:	50 e0       	ldi	r21, 0x00	; 0
     c0e:	0e 94 03 12 	call	0x2406	; 0x2406 <__udivmodsi4>
     c12:	c9 01       	movw	r24, r18
     c14:	cd b7       	in	r28, 0x3d	; 61
     c16:	de b7       	in	r29, 0x3e	; 62
     c18:	e8 e0       	ldi	r30, 0x08	; 8
     c1a:	0c 94 92 12 	jmp	0x2524	; 0x2524 <__epilogue_restores__+0x14>

00000c1e <_ZN15OrangutanAnalog12toMillivoltsEj>:
     c1e:	cf 92       	push	r12
     c20:	df 92       	push	r13
     c22:	ef 92       	push	r14
     c24:	ff 92       	push	r15
     c26:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     c2a:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     c2e:	9c 01       	movw	r18, r24
     c30:	0e 94 4a 12 	call	0x2494	; 0x2494 <__umulhisi3>
     c34:	6b 01       	movw	r12, r22
     c36:	7c 01       	movw	r14, r24
     c38:	0e 94 9f 05 	call	0xb3e	; 0xb3e <_ZN15OrangutanAnalog7getModeEv>
     c3c:	88 23       	and	r24, r24
     c3e:	59 f0       	breq	.+22     	; 0xc56 <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
     c40:	c7 01       	movw	r24, r14
     c42:	b6 01       	movw	r22, r12
     c44:	61 58       	subi	r22, 0x81	; 129
     c46:	7f 4f       	sbci	r23, 0xFF	; 255
     c48:	8f 4f       	sbci	r24, 0xFF	; 255
     c4a:	9f 4f       	sbci	r25, 0xFF	; 255
     c4c:	2f ef       	ldi	r18, 0xFF	; 255
     c4e:	30 e0       	ldi	r19, 0x00	; 0
     c50:	40 e0       	ldi	r20, 0x00	; 0
     c52:	50 e0       	ldi	r21, 0x00	; 0
     c54:	0a c0       	rjmp	.+20     	; 0xc6a <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
     c56:	c7 01       	movw	r24, r14
     c58:	b6 01       	movw	r22, r12
     c5a:	61 50       	subi	r22, 0x01	; 1
     c5c:	7e 4f       	sbci	r23, 0xFE	; 254
     c5e:	8f 4f       	sbci	r24, 0xFF	; 255
     c60:	9f 4f       	sbci	r25, 0xFF	; 255
     c62:	2f ef       	ldi	r18, 0xFF	; 255
     c64:	33 e0       	ldi	r19, 0x03	; 3
     c66:	40 e0       	ldi	r20, 0x00	; 0
     c68:	50 e0       	ldi	r21, 0x00	; 0
     c6a:	0e 94 03 12 	call	0x2406	; 0x2406 <__udivmodsi4>
     c6e:	c9 01       	movw	r24, r18
     c70:	ff 90       	pop	r15
     c72:	ef 90       	pop	r14
     c74:	df 90       	pop	r13
     c76:	cf 90       	pop	r12
     c78:	08 95       	ret

00000c7a <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
     c7a:	0e 94 c9 05 	call	0xb92	; 0xb92 <_ZN15OrangutanAnalog11readAverageEhj>
     c7e:	0e 94 0f 06 	call	0xc1e	; 0xc1e <_ZN15OrangutanAnalog12toMillivoltsEj>
     c82:	08 95       	ret

00000c84 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
     c84:	1f 93       	push	r17
     c86:	cf 93       	push	r28
     c88:	df 93       	push	r29
     c8a:	0e 94 9f 05 	call	0xb3e	; 0xb3e <_ZN15OrangutanAnalog7getModeEv>
     c8e:	18 2f       	mov	r17, r24
     c90:	0e 94 8e 05 	call	0xb1c	; 0xb1c <_ZN15OrangutanAnalog7setModeEh.part.0>
     c94:	6a e0       	ldi	r22, 0x0A	; 10
     c96:	70 e0       	ldi	r23, 0x00	; 0
     c98:	86 e0       	ldi	r24, 0x06	; 6
     c9a:	0e 94 3d 06 	call	0xc7a	; 0xc7a <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
     c9e:	ec 01       	movw	r28, r24
     ca0:	81 2f       	mov	r24, r17
     ca2:	0e 94 94 05 	call	0xb28	; 0xb28 <_ZN15OrangutanAnalog7setModeEh>
     ca6:	ce 01       	movw	r24, r28
     ca8:	88 0f       	add	r24, r24
     caa:	99 1f       	adc	r25, r25
     cac:	8c 0f       	add	r24, r28
     cae:	9d 1f       	adc	r25, r29
     cb0:	01 96       	adiw	r24, 0x01	; 1
     cb2:	96 95       	lsr	r25
     cb4:	87 95       	ror	r24
     cb6:	df 91       	pop	r29
     cb8:	cf 91       	pop	r28
     cba:	1f 91       	pop	r17
     cbc:	08 95       	ret

00000cbe <read_battery_millivolts_3pi>:
     cbe:	0e 94 42 06 	call	0xc84	; 0xc84 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
     cc2:	08 95       	ret

00000cc4 <_ZL16currentCharacterv>:
     cc4:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <_ZL17use_program_space>
     cc8:	e0 91 46 01 	lds	r30, 0x0146	; 0x800146 <__data_end>
     ccc:	f0 91 47 01 	lds	r31, 0x0147	; 0x800147 <__data_end+0x1>
     cd0:	99 23       	and	r25, r25
     cd2:	11 f0       	breq	.+4      	; 0xcd8 <_ZL16currentCharacterv+0x14>
     cd4:	84 91       	lpm	r24, Z
     cd6:	01 c0       	rjmp	.+2      	; 0xcda <_ZL16currentCharacterv+0x16>
     cd8:	80 81       	ld	r24, Z
     cda:	2f eb       	ldi	r18, 0xBF	; 191
     cdc:	28 0f       	add	r18, r24
     cde:	2a 31       	cpi	r18, 0x1A	; 26
     ce0:	10 f4       	brcc	.+4      	; 0xce6 <_ZL16currentCharacterv+0x22>
     ce2:	80 5e       	subi	r24, 0xE0	; 224
     ce4:	08 95       	ret
     ce6:	80 32       	cpi	r24, 0x20	; 32
     ce8:	49 f4       	brne	.+18     	; 0xcfc <_ZL16currentCharacterv+0x38>
     cea:	9f 01       	movw	r18, r30
     cec:	2f 5f       	subi	r18, 0xFF	; 255
     cee:	3f 4f       	sbci	r19, 0xFF	; 255
     cf0:	30 93 47 01 	sts	0x0147, r19	; 0x800147 <__data_end+0x1>
     cf4:	20 93 46 01 	sts	0x0146, r18	; 0x800146 <__data_end>
     cf8:	ef 2b       	or	r30, r31
     cfa:	31 f7       	brne	.-52     	; 0xcc8 <_ZL16currentCharacterv+0x4>
     cfc:	08 95       	ret

00000cfe <_ZL9getNumberv>:
     cfe:	1f 93       	push	r17
     d00:	cf 93       	push	r28
     d02:	df 93       	push	r29
     d04:	0e 94 62 06 	call	0xcc4	; 0xcc4 <_ZL16currentCharacterv>
     d08:	c0 e0       	ldi	r28, 0x00	; 0
     d0a:	d0 e0       	ldi	r29, 0x00	; 0
     d0c:	1a e0       	ldi	r17, 0x0A	; 10
     d0e:	90 ed       	ldi	r25, 0xD0	; 208
     d10:	98 0f       	add	r25, r24
     d12:	9a 30       	cpi	r25, 0x0A	; 10
     d14:	b8 f4       	brcc	.+46     	; 0xd44 <_ZL9getNumberv+0x46>
     d16:	9e 01       	movw	r18, r28
     d18:	12 9f       	mul	r17, r18
     d1a:	e0 01       	movw	r28, r0
     d1c:	13 9f       	mul	r17, r19
     d1e:	d0 0d       	add	r29, r0
     d20:	11 24       	eor	r1, r1
     d22:	c8 0f       	add	r28, r24
     d24:	d1 1d       	adc	r29, r1
     d26:	87 fd       	sbrc	r24, 7
     d28:	da 95       	dec	r29
     d2a:	e0 97       	sbiw	r28, 0x30	; 48
     d2c:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <__data_end>
     d30:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <__data_end+0x1>
     d34:	01 96       	adiw	r24, 0x01	; 1
     d36:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <__data_end+0x1>
     d3a:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <__data_end>
     d3e:	0e 94 62 06 	call	0xcc4	; 0xcc4 <_ZL16currentCharacterv>
     d42:	e5 cf       	rjmp	.-54     	; 0xd0e <_ZL9getNumberv+0x10>
     d44:	ce 01       	movw	r24, r28
     d46:	df 91       	pop	r29
     d48:	cf 91       	pop	r28
     d4a:	1f 91       	pop	r17
     d4c:	08 95       	ret

00000d4e <_ZN15OrangutanBuzzer5init2Ev>:
     d4e:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
     d52:	83 e2       	ldi	r24, 0x23	; 35
     d54:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
     d58:	81 e1       	ldi	r24, 0x11	; 17
     d5a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
     d5e:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7f8082>
     d62:	80 e1       	ldi	r24, 0x10	; 16
     d64:	97 e2       	ldi	r25, 0x27	; 39
     d66:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     d6a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     d6e:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
     d72:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
     d76:	22 9a       	sbi	0x04, 2	; 4
     d78:	78 94       	sei
     d7a:	08 95       	ret

00000d7c <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
     d7c:	8f 92       	push	r8
     d7e:	9f 92       	push	r9
     d80:	af 92       	push	r10
     d82:	bf 92       	push	r11
     d84:	df 92       	push	r13
     d86:	ef 92       	push	r14
     d88:	ff 92       	push	r15
     d8a:	0f 93       	push	r16
     d8c:	1f 93       	push	r17
     d8e:	cf 93       	push	r28
     d90:	df 93       	push	r29
     d92:	5c 01       	movw	r10, r24
     d94:	8b 01       	movw	r16, r22
     d96:	d4 2e       	mov	r13, r20
     d98:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <buzzerInitialized>
     d9c:	81 11       	cpse	r24, r1
     d9e:	05 c0       	rjmp	.+10     	; 0xdaa <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
     da0:	81 e0       	ldi	r24, 0x01	; 1
     da2:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <buzzerInitialized>
     da6:	0e 94 a7 06 	call	0xd4e	; 0xd4e <_ZN15OrangutanBuzzer5init2Ev>
     daa:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <buzzerFinished>
     dae:	b7 fe       	sbrs	r11, 7
     db0:	05 c0       	rjmp	.+10     	; 0xdbc <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
     db2:	e8 94       	clt
     db4:	b7 f8       	bld	r11, 7
     db6:	2a e0       	ldi	r18, 0x0A	; 10
     db8:	f2 2e       	mov	r15, r18
     dba:	02 c0       	rjmp	.+4      	; 0xdc0 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
     dbc:	ff 24       	eor	r15, r15
     dbe:	f3 94       	inc	r15
     dc0:	e0 90 81 00 	lds	r14, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
     dc4:	2e 2d       	mov	r18, r14
     dc6:	28 7f       	andi	r18, 0xF8	; 248
     dc8:	e2 2e       	mov	r14, r18
     dca:	48 ec       	ldi	r20, 0xC8	; 200
     dcc:	f4 9e       	mul	r15, r20
     dce:	c0 01       	movw	r24, r0
     dd0:	11 24       	eor	r1, r1
     dd2:	8a 15       	cp	r24, r10
     dd4:	9b 05       	cpc	r25, r11
     dd6:	e0 f4       	brcc	.+56     	; 0xe10 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
     dd8:	e5 01       	movw	r28, r10
     dda:	51 e1       	ldi	r21, 0x11	; 17
     ddc:	a5 16       	cp	r10, r21
     dde:	57 e2       	ldi	r21, 0x27	; 39
     de0:	b5 06       	cpc	r11, r21
     de2:	10 f0       	brcs	.+4      	; 0xde8 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
     de4:	c0 e1       	ldi	r28, 0x10	; 16
     de6:	d7 e2       	ldi	r29, 0x27	; 39
     de8:	be 01       	movw	r22, r28
     dea:	76 95       	lsr	r23
     dec:	67 95       	ror	r22
     dee:	80 e0       	ldi	r24, 0x00	; 0
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	60 58       	subi	r22, 0x80	; 128
     df4:	79 46       	sbci	r23, 0x69	; 105
     df6:	87 46       	sbci	r24, 0x67	; 103
     df8:	9f 4f       	sbci	r25, 0xFF	; 255
     dfa:	4e 01       	movw	r8, r28
     dfc:	a1 2c       	mov	r10, r1
     dfe:	b1 2c       	mov	r11, r1
     e00:	a5 01       	movw	r20, r10
     e02:	94 01       	movw	r18, r8
     e04:	0e 94 03 12 	call	0x2406	; 0x2406 <__udivmodsi4>
     e08:	59 01       	movw	r10, r18
     e0a:	8e 2d       	mov	r24, r14
     e0c:	81 60       	ori	r24, 0x01	; 1
     e0e:	24 c0       	rjmp	.+72     	; 0xe58 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
     e10:	c8 e2       	ldi	r28, 0x28	; 40
     e12:	fc 9e       	mul	r15, r28
     e14:	c0 2d       	mov	r28, r0
     e16:	11 24       	eor	r1, r1
     e18:	d0 e0       	ldi	r29, 0x00	; 0
     e1a:	ca 15       	cp	r28, r10
     e1c:	db 05       	cpc	r29, r11
     e1e:	08 f4       	brcc	.+2      	; 0xe22 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
     e20:	e5 01       	movw	r28, r10
     e22:	be 01       	movw	r22, r28
     e24:	76 95       	lsr	r23
     e26:	67 95       	ror	r22
     e28:	9e 01       	movw	r18, r28
     e2a:	40 e0       	ldi	r20, 0x00	; 0
     e2c:	50 e0       	ldi	r21, 0x00	; 0
     e2e:	8a e0       	ldi	r24, 0x0A	; 10
     e30:	f8 12       	cpse	r15, r24
     e32:	07 c0       	rjmp	.+14     	; 0xe42 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
     e34:	80 e0       	ldi	r24, 0x00	; 0
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	60 5e       	subi	r22, 0xE0	; 224
     e3a:	73 44       	sbci	r23, 0x43	; 67
     e3c:	81 44       	sbci	r24, 0x41	; 65
     e3e:	9f 4f       	sbci	r25, 0xFF	; 255
     e40:	06 c0       	rjmp	.+12     	; 0xe4e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
     e42:	80 e0       	ldi	r24, 0x00	; 0
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	60 53       	subi	r22, 0x30	; 48
     e48:	7d 4e       	sbci	r23, 0xED	; 237
     e4a:	8c 4e       	sbci	r24, 0xEC	; 236
     e4c:	9f 4f       	sbci	r25, 0xFF	; 255
     e4e:	0e 94 03 12 	call	0x2406	; 0x2406 <__udivmodsi4>
     e52:	59 01       	movw	r10, r18
     e54:	8e 2d       	mov	r24, r14
     e56:	82 60       	ori	r24, 0x02	; 2
     e58:	88 2e       	mov	r8, r24
     e5a:	2a e0       	ldi	r18, 0x0A	; 10
     e5c:	f2 12       	cpse	r15, r18
     e5e:	07 c0       	rjmp	.+14     	; 0xe6e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
     e60:	ce 01       	movw	r24, r28
     e62:	05 96       	adiw	r24, 0x05	; 5
     e64:	6a e0       	ldi	r22, 0x0A	; 10
     e66:	70 e0       	ldi	r23, 0x00	; 0
     e68:	0e 94 db 11 	call	0x23b6	; 0x23b6 <__udivmodhi4>
     e6c:	eb 01       	movw	r28, r22
     e6e:	c8 3e       	cpi	r28, 0xE8	; 232
     e70:	43 e0       	ldi	r20, 0x03	; 3
     e72:	d4 07       	cpc	r29, r20
     e74:	59 f0       	breq	.+22     	; 0xe8c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
     e76:	98 01       	movw	r18, r16
     e78:	de 01       	movw	r26, r28
     e7a:	0e 94 4a 12 	call	0x2494	; 0x2494 <__umulhisi3>
     e7e:	28 ee       	ldi	r18, 0xE8	; 232
     e80:	33 e0       	ldi	r19, 0x03	; 3
     e82:	40 e0       	ldi	r20, 0x00	; 0
     e84:	50 e0       	ldi	r21, 0x00	; 0
     e86:	0e 94 25 12 	call	0x244a	; 0x244a <__divmodsi4>
     e8a:	89 01       	movw	r16, r18
     e8c:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
     e90:	80 92 81 00 	sts	0x0081, r8	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
     e94:	b0 92 89 00 	sts	0x0089, r11	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     e98:	a0 92 88 00 	sts	0x0088, r10	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     e9c:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     ea0:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     ea4:	4d 2d       	mov	r20, r13
     ea6:	40 31       	cpi	r20, 0x10	; 16
     ea8:	08 f0       	brcs	.+2      	; 0xeac <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
     eaa:	4f e0       	ldi	r20, 0x0F	; 15
     eac:	80 e1       	ldi	r24, 0x10	; 16
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	84 1b       	sub	r24, r20
     eb2:	91 09       	sbc	r25, r1
     eb4:	a9 01       	movw	r20, r18
     eb6:	02 c0       	rjmp	.+4      	; 0xebc <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
     eb8:	56 95       	lsr	r21
     eba:	47 95       	ror	r20
     ebc:	8a 95       	dec	r24
     ebe:	e2 f7       	brpl	.-8      	; 0xeb8 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
     ec0:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
     ec4:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
     ec8:	10 93 4e 01 	sts	0x014E, r17	; 0x80014e <_ZL13buzzerTimeout+0x1>
     ecc:	00 93 4d 01 	sts	0x014D, r16	; 0x80014d <_ZL13buzzerTimeout>
     ed0:	86 b3       	in	r24, 0x16	; 22
     ed2:	8f ef       	ldi	r24, 0xFF	; 255
     ed4:	86 bb       	out	0x16, r24	; 22
     ed6:	81 e0       	ldi	r24, 0x01	; 1
     ed8:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
     edc:	df 91       	pop	r29
     ede:	cf 91       	pop	r28
     ee0:	1f 91       	pop	r17
     ee2:	0f 91       	pop	r16
     ee4:	ff 90       	pop	r15
     ee6:	ef 90       	pop	r14
     ee8:	df 90       	pop	r13
     eea:	bf 90       	pop	r11
     eec:	af 90       	pop	r10
     eee:	9f 90       	pop	r9
     ef0:	8f 90       	pop	r8
     ef2:	08 95       	ret

00000ef4 <_ZN15OrangutanBuzzer8playNoteEhjh>:
     ef4:	cf 93       	push	r28
     ef6:	df 93       	push	r29
     ef8:	eb 01       	movw	r28, r22
     efa:	8f 3f       	cpi	r24, 0xFF	; 255
     efc:	11 f0       	breq	.+4      	; 0xf02 <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
     efe:	41 11       	cpse	r20, r1
     f00:	05 c0       	rjmp	.+10     	; 0xf0c <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
     f02:	40 e0       	ldi	r20, 0x00	; 0
     f04:	be 01       	movw	r22, r28
     f06:	88 ee       	ldi	r24, 0xE8	; 232
     f08:	93 e0       	ldi	r25, 0x03	; 3
     f0a:	43 c0       	rjmp	.+134    	; 0xf92 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
     f0c:	81 31       	cpi	r24, 0x11	; 17
     f0e:	30 f0       	brcs	.+12     	; 0xf1c <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
     f10:	50 ef       	ldi	r21, 0xF0	; 240
     f12:	58 0f       	add	r21, r24
     f14:	50 36       	cpi	r21, 0x60	; 96
     f16:	18 f0       	brcs	.+6      	; 0xf1e <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
     f18:	5f e5       	ldi	r21, 0x5F	; 95
     f1a:	01 c0       	rjmp	.+2      	; 0xf1e <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
     f1c:	50 e0       	ldi	r21, 0x00	; 0
     f1e:	85 2f       	mov	r24, r21
     f20:	6c e0       	ldi	r22, 0x0C	; 12
     f22:	0e 94 cf 11 	call	0x239e	; 0x239e <__udivmodqi4>
     f26:	68 2f       	mov	r22, r24
     f28:	74 ef       	ldi	r23, 0xF4	; 244
     f2a:	76 03       	mulsu	r23, r22
     f2c:	90 01       	movw	r18, r0
     f2e:	11 24       	eor	r1, r1
     f30:	25 0f       	add	r18, r21
     f32:	31 1d       	adc	r19, r1
     f34:	2c 30       	cpi	r18, 0x0C	; 12
     f36:	31 05       	cpc	r19, r1
     f38:	40 f4       	brcc	.+16     	; 0xf4a <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
     f3a:	f9 01       	movw	r30, r18
     f3c:	ee 0f       	add	r30, r30
     f3e:	ff 1f       	adc	r31, r31
     f40:	e8 5d       	subi	r30, 0xD8	; 216
     f42:	fe 4f       	sbci	r31, 0xFE	; 254
     f44:	20 81       	ld	r18, Z
     f46:	31 81       	ldd	r19, Z+1	; 0x01
     f48:	02 c0       	rjmp	.+4      	; 0xf4e <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
     f4a:	20 e0       	ldi	r18, 0x00	; 0
     f4c:	30 e0       	ldi	r19, 0x00	; 0
     f4e:	87 30       	cpi	r24, 0x07	; 7
     f50:	81 f0       	breq	.+32     	; 0xf72 <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
     f52:	08 2e       	mov	r0, r24
     f54:	02 c0       	rjmp	.+4      	; 0xf5a <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
     f56:	22 0f       	add	r18, r18
     f58:	33 1f       	adc	r19, r19
     f5a:	0a 94       	dec	r0
     f5c:	e2 f7       	brpl	.-8      	; 0xf56 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
     f5e:	82 30       	cpi	r24, 0x02	; 2
     f60:	28 f0       	brcs	.+10     	; 0xf6c <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
     f62:	c9 01       	movw	r24, r18
     f64:	05 96       	adiw	r24, 0x05	; 5
     f66:	6a e0       	ldi	r22, 0x0A	; 10
     f68:	70 e0       	ldi	r23, 0x00	; 0
     f6a:	0c c0       	rjmp	.+24     	; 0xf84 <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
     f6c:	c9 01       	movw	r24, r18
     f6e:	90 58       	subi	r25, 0x80	; 128
     f70:	0c c0       	rjmp	.+24     	; 0xf8a <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
     f72:	c9 01       	movw	r24, r18
     f74:	36 e0       	ldi	r19, 0x06	; 6
     f76:	88 0f       	add	r24, r24
     f78:	99 1f       	adc	r25, r25
     f7a:	3a 95       	dec	r19
     f7c:	e1 f7       	brne	.-8      	; 0xf76 <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
     f7e:	02 96       	adiw	r24, 0x02	; 2
     f80:	65 e0       	ldi	r22, 0x05	; 5
     f82:	70 e0       	ldi	r23, 0x00	; 0
     f84:	0e 94 db 11 	call	0x23b6	; 0x23b6 <__udivmodhi4>
     f88:	cb 01       	movw	r24, r22
     f8a:	40 31       	cpi	r20, 0x10	; 16
     f8c:	08 f0       	brcs	.+2      	; 0xf90 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
     f8e:	4f e0       	ldi	r20, 0x0F	; 15
     f90:	be 01       	movw	r22, r28
     f92:	0e 94 be 06 	call	0xd7c	; 0xd7c <_ZN15OrangutanBuzzer13playFrequencyEjjh>
     f96:	df 91       	pop	r29
     f98:	cf 91       	pop	r28
     f9a:	08 95       	ret

00000f9c <_ZL8nextNotev>:
     f9c:	a2 e0       	ldi	r26, 0x02	; 2
     f9e:	b0 e0       	ldi	r27, 0x00	; 0
     fa0:	e4 ed       	ldi	r30, 0xD4	; 212
     fa2:	f7 e0       	ldi	r31, 0x07	; 7
     fa4:	0c 94 6e 12 	jmp	0x24dc	; 0x24dc <__prologue_saves__+0x4>
     fa8:	90 90 0a 01 	lds	r9, 0x010A	; 0x80010a <_ZL6octave>
     fac:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <_ZL8staccato>
     fb0:	88 23       	and	r24, r24
     fb2:	21 f0       	breq	.+8      	; 0xfbc <_ZL8nextNotev+0x20>
     fb4:	60 91 49 01 	lds	r22, 0x0149	; 0x800149 <_ZL22staccato_rest_duration>
     fb8:	61 11       	cpse	r22, r1
     fba:	17 c0       	rjmp	.+46     	; 0xfea <_ZL8nextNotev+0x4e>
     fbc:	77 24       	eor	r7, r7
     fbe:	73 94       	inc	r7
     fc0:	b0 ec       	ldi	r27, 0xC0	; 192
     fc2:	ab 2e       	mov	r10, r27
     fc4:	bd e5       	ldi	r27, 0x5D	; 93
     fc6:	bb 2e       	mov	r11, r27
     fc8:	1a e0       	ldi	r17, 0x0A	; 10
     fca:	61 2e       	mov	r6, r17
     fcc:	04 e0       	ldi	r16, 0x04	; 4
     fce:	80 2e       	mov	r8, r16
     fd0:	80 ed       	ldi	r24, 0xD0	; 208
     fd2:	c8 2e       	mov	r12, r24
     fd4:	87 e0       	ldi	r24, 0x07	; 7
     fd6:	d8 2e       	mov	r13, r24
     fd8:	94 e0       	ldi	r25, 0x04	; 4
     fda:	e9 2e       	mov	r14, r25
     fdc:	f1 2c       	mov	r15, r1
     fde:	04 ef       	ldi	r16, 0xF4	; 244
     fe0:	11 e0       	ldi	r17, 0x01	; 1
     fe2:	2f e0       	ldi	r18, 0x0F	; 15
     fe4:	42 2e       	mov	r4, r18
     fe6:	51 2c       	mov	r5, r1
     fe8:	15 c0       	rjmp	.+42     	; 0x1014 <_ZL8nextNotev+0x78>
     fea:	70 e0       	ldi	r23, 0x00	; 0
     fec:	40 e0       	ldi	r20, 0x00	; 0
     fee:	88 ee       	ldi	r24, 0xE8	; 232
     ff0:	93 e0       	ldi	r25, 0x03	; 3
     ff2:	0e 94 be 06 	call	0xd7c	; 0xd7c <_ZN15OrangutanBuzzer13playFrequencyEjjh>
     ff6:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <_ZL22staccato_rest_duration>
     ffa:	17 c1       	rjmp	.+558    	; 0x122a <_ZL8nextNotev+0x28e>
     ffc:	86 36       	cpi	r24, 0x66	; 102
     ffe:	d4 f5       	brge	.+116    	; 0x1074 <_ZL8nextNotev+0xd8>
    1000:	81 36       	cpi	r24, 0x61	; 97
    1002:	09 f4       	brne	.+2      	; 0x1006 <_ZL8nextNotev+0x6a>
    1004:	a9 c0       	rjmp	.+338    	; 0x1158 <_ZL8nextNotev+0x1bc>
    1006:	7c f5       	brge	.+94     	; 0x1066 <_ZL8nextNotev+0xca>
    1008:	8c 33       	cpi	r24, 0x3C	; 60
    100a:	09 f4       	brne	.+2      	; 0x100e <_ZL8nextNotev+0x72>
    100c:	60 c0       	rjmp	.+192    	; 0x10ce <_ZL8nextNotev+0x132>
    100e:	8e 33       	cpi	r24, 0x3E	; 62
    1010:	81 f4       	brne	.+32     	; 0x1032 <_ZL8nextNotev+0x96>
    1012:	93 94       	inc	r9
    1014:	0e 94 62 06 	call	0xcc4	; 0xcc4 <_ZL16currentCharacterv>
    1018:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <__data_end>
    101c:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <__data_end+0x1>
    1020:	2f 5f       	subi	r18, 0xFF	; 255
    1022:	3f 4f       	sbci	r19, 0xFF	; 255
    1024:	30 93 47 01 	sts	0x0147, r19	; 0x800147 <__data_end+0x1>
    1028:	20 93 46 01 	sts	0x0146, r18	; 0x800146 <__data_end>
    102c:	85 36       	cpi	r24, 0x65	; 101
    102e:	31 f7       	brne	.-52     	; 0xffc <_ZL8nextNotev+0x60>
    1030:	52 c0       	rjmp	.+164    	; 0x10d6 <_ZL8nextNotev+0x13a>
    1032:	81 32       	cpi	r24, 0x21	; 33
    1034:	09 f0       	breq	.+2      	; 0x1038 <_ZL8nextNotev+0x9c>
    1036:	8b c0       	rjmp	.+278    	; 0x114e <_ZL8nextNotev+0x1b2>
    1038:	80 92 0a 01 	sts	0x010A, r8	; 0x80010a <_ZL6octave>
    103c:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <_ZL19whole_note_duration+0x1>
    1040:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <_ZL19whole_note_duration>
    1044:	f0 92 07 01 	sts	0x0107, r15	; 0x800107 <_ZL9note_type+0x1>
    1048:	e0 92 06 01 	sts	0x0106, r14	; 0x800106 <_ZL9note_type>
    104c:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <_ZL8duration+0x1>
    1050:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <_ZL8duration>
    1054:	50 92 03 01 	sts	0x0103, r5	; 0x800103 <_ZL6volume+0x1>
    1058:	40 92 02 01 	sts	0x0102, r4	; 0x800102 <_ZL6volume>
    105c:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <_ZL8staccato>
    1060:	a4 e0       	ldi	r26, 0x04	; 4
    1062:	9a 2e       	mov	r9, r26
    1064:	d7 cf       	rjmp	.-82     	; 0x1014 <_ZL8nextNotev+0x78>
    1066:	83 36       	cpi	r24, 0x63	; 99
    1068:	a1 f1       	breq	.+104    	; 0x10d2 <_ZL8nextNotev+0x136>
    106a:	0c f4       	brge	.+2      	; 0x106e <_ZL8nextNotev+0xd2>
    106c:	78 c0       	rjmp	.+240    	; 0x115e <_ZL8nextNotev+0x1c2>
    106e:	10 e0       	ldi	r17, 0x00	; 0
    1070:	82 e0       	ldi	r24, 0x02	; 2
    1072:	77 c0       	rjmp	.+238    	; 0x1162 <_ZL8nextNotev+0x1c6>
    1074:	8d 36       	cpi	r24, 0x6D	; 109
    1076:	c1 f1       	breq	.+112    	; 0x10e8 <_ZL8nextNotev+0x14c>
    1078:	94 f4       	brge	.+36     	; 0x109e <_ZL8nextNotev+0x102>
    107a:	87 36       	cpi	r24, 0x67	; 103
    107c:	91 f1       	breq	.+100    	; 0x10e2 <_ZL8nextNotev+0x146>
    107e:	74 f1       	brlt	.+92     	; 0x10dc <_ZL8nextNotev+0x140>
    1080:	8c 36       	cpi	r24, 0x6C	; 108
    1082:	09 f0       	breq	.+2      	; 0x1086 <_ZL8nextNotev+0xea>
    1084:	64 c0       	rjmp	.+200    	; 0x114e <_ZL8nextNotev+0x1b2>
    1086:	0e 94 7f 06 	call	0xcfe	; 0xcfe <_ZL9getNumberv>
    108a:	bc 01       	movw	r22, r24
    108c:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_ZL9note_type+0x1>
    1090:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_ZL9note_type>
    1094:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    1098:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    109c:	51 c0       	rjmp	.+162    	; 0x1140 <_ZL8nextNotev+0x1a4>
    109e:	82 37       	cpi	r24, 0x72	; 114
    10a0:	c9 f1       	breq	.+114    	; 0x1114 <_ZL8nextNotev+0x178>
    10a2:	4c f4       	brge	.+18     	; 0x10b6 <_ZL8nextNotev+0x11a>
    10a4:	8f 36       	cpi	r24, 0x6F	; 111
    10a6:	09 f0       	breq	.+2      	; 0x10aa <_ZL8nextNotev+0x10e>
    10a8:	52 c0       	rjmp	.+164    	; 0x114e <_ZL8nextNotev+0x1b2>
    10aa:	0e 94 7f 06 	call	0xcfe	; 0xcfe <_ZL9getNumberv>
    10ae:	98 2e       	mov	r9, r24
    10b0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_ZL6octave>
    10b4:	af cf       	rjmp	.-162    	; 0x1014 <_ZL8nextNotev+0x78>
    10b6:	84 37       	cpi	r24, 0x74	; 116
    10b8:	81 f1       	breq	.+96     	; 0x111a <_ZL8nextNotev+0x17e>
    10ba:	86 37       	cpi	r24, 0x76	; 118
    10bc:	09 f0       	breq	.+2      	; 0x10c0 <_ZL8nextNotev+0x124>
    10be:	47 c0       	rjmp	.+142    	; 0x114e <_ZL8nextNotev+0x1b2>
    10c0:	0e 94 7f 06 	call	0xcfe	; 0xcfe <_ZL9getNumberv>
    10c4:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_ZL6volume+0x1>
    10c8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_ZL6volume>
    10cc:	a3 cf       	rjmp	.-186    	; 0x1014 <_ZL8nextNotev+0x78>
    10ce:	9a 94       	dec	r9
    10d0:	a1 cf       	rjmp	.-190    	; 0x1014 <_ZL8nextNotev+0x78>
    10d2:	10 e0       	ldi	r17, 0x00	; 0
    10d4:	20 c0       	rjmp	.+64     	; 0x1116 <_ZL8nextNotev+0x17a>
    10d6:	10 e0       	ldi	r17, 0x00	; 0
    10d8:	84 e0       	ldi	r24, 0x04	; 4
    10da:	43 c0       	rjmp	.+134    	; 0x1162 <_ZL8nextNotev+0x1c6>
    10dc:	10 e0       	ldi	r17, 0x00	; 0
    10de:	85 e0       	ldi	r24, 0x05	; 5
    10e0:	40 c0       	rjmp	.+128    	; 0x1162 <_ZL8nextNotev+0x1c6>
    10e2:	10 e0       	ldi	r17, 0x00	; 0
    10e4:	87 e0       	ldi	r24, 0x07	; 7
    10e6:	3d c0       	rjmp	.+122    	; 0x1162 <_ZL8nextNotev+0x1c6>
    10e8:	0e 94 62 06 	call	0xcc4	; 0xcc4 <_ZL16currentCharacterv>
    10ec:	8c 36       	cpi	r24, 0x6C	; 108
    10ee:	19 f4       	brne	.+6      	; 0x10f6 <_ZL8nextNotev+0x15a>
    10f0:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <_ZL8staccato>
    10f4:	04 c0       	rjmp	.+8      	; 0x10fe <_ZL8nextNotev+0x162>
    10f6:	70 92 4a 01 	sts	0x014A, r7	; 0x80014a <_ZL8staccato>
    10fa:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <_ZL22staccato_rest_duration>
    10fe:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <__data_end>
    1102:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <__data_end+0x1>
    1106:	2f 5f       	subi	r18, 0xFF	; 255
    1108:	3f 4f       	sbci	r19, 0xFF	; 255
    110a:	30 93 47 01 	sts	0x0147, r19	; 0x800147 <__data_end+0x1>
    110e:	20 93 46 01 	sts	0x0146, r18	; 0x800146 <__data_end>
    1112:	80 cf       	rjmp	.-256    	; 0x1014 <_ZL8nextNotev+0x78>
    1114:	11 e0       	ldi	r17, 0x01	; 1
    1116:	80 e0       	ldi	r24, 0x00	; 0
    1118:	24 c0       	rjmp	.+72     	; 0x1162 <_ZL8nextNotev+0x1c6>
    111a:	0e 94 7f 06 	call	0xcfe	; 0xcfe <_ZL9getNumberv>
    111e:	bc 01       	movw	r22, r24
    1120:	c5 01       	movw	r24, r10
    1122:	0e 94 db 11 	call	0x23b6	; 0x23b6 <__udivmodhi4>
    1126:	66 9e       	mul	r6, r22
    1128:	c0 01       	movw	r24, r0
    112a:	67 9e       	mul	r6, r23
    112c:	90 0d       	add	r25, r0
    112e:	11 24       	eor	r1, r1
    1130:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_ZL19whole_note_duration+0x1>
    1134:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_ZL19whole_note_duration>
    1138:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <_ZL9note_type>
    113c:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <_ZL9note_type+0x1>
    1140:	0e 94 db 11 	call	0x23b6	; 0x23b6 <__udivmodhi4>
    1144:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_ZL8duration+0x1>
    1148:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_ZL8duration>
    114c:	63 cf       	rjmp	.-314    	; 0x1014 <_ZL8nextNotev+0x78>
    114e:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <__data_end+0x1>
    1152:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <__data_end>
    1156:	69 c0       	rjmp	.+210    	; 0x122a <_ZL8nextNotev+0x28e>
    1158:	10 e0       	ldi	r17, 0x00	; 0
    115a:	89 e0       	ldi	r24, 0x09	; 9
    115c:	02 c0       	rjmp	.+4      	; 0x1162 <_ZL8nextNotev+0x1c6>
    115e:	10 e0       	ldi	r17, 0x00	; 0
    1160:	8b e0       	ldi	r24, 0x0B	; 11
    1162:	08 2f       	mov	r16, r24
    1164:	9c e0       	ldi	r25, 0x0C	; 12
    1166:	99 9e       	mul	r9, r25
    1168:	00 0d       	add	r16, r0
    116a:	11 24       	eor	r1, r1
    116c:	0e 94 62 06 	call	0xcc4	; 0xcc4 <_ZL16currentCharacterv>
    1170:	98 2f       	mov	r25, r24
    1172:	97 7f       	andi	r25, 0xF7	; 247
    1174:	93 32       	cpi	r25, 0x23	; 35
    1176:	61 f4       	brne	.+24     	; 0x1190 <_ZL8nextNotev+0x1f4>
    1178:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <__data_end>
    117c:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <__data_end+0x1>
    1180:	2f 5f       	subi	r18, 0xFF	; 255
    1182:	3f 4f       	sbci	r19, 0xFF	; 255
    1184:	30 93 47 01 	sts	0x0147, r19	; 0x800147 <__data_end+0x1>
    1188:	20 93 46 01 	sts	0x0146, r18	; 0x800146 <__data_end>
    118c:	0f 5f       	subi	r16, 0xFF	; 255
    118e:	ee cf       	rjmp	.-36     	; 0x116c <_ZL8nextNotev+0x1d0>
    1190:	8d 32       	cpi	r24, 0x2D	; 45
    1192:	71 f4       	brne	.+28     	; 0x11b0 <_ZL8nextNotev+0x214>
    1194:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <__data_end>
    1198:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <__data_end+0x1>
    119c:	2f 5f       	subi	r18, 0xFF	; 255
    119e:	3f 4f       	sbci	r19, 0xFF	; 255
    11a0:	30 93 47 01 	sts	0x0147, r19	; 0x800147 <__data_end+0x1>
    11a4:	20 93 46 01 	sts	0x0146, r18	; 0x800146 <__data_end>
    11a8:	01 50       	subi	r16, 0x01	; 1
    11aa:	0e 94 62 06 	call	0xcc4	; 0xcc4 <_ZL16currentCharacterv>
    11ae:	f0 cf       	rjmp	.-32     	; 0x1190 <_ZL8nextNotev+0x1f4>
    11b0:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <_ZL8duration>
    11b4:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <_ZL8duration+0x1>
    11b8:	81 53       	subi	r24, 0x31	; 49
    11ba:	88 30       	cpi	r24, 0x08	; 8
    11bc:	50 f4       	brcc	.+20     	; 0x11d2 <_ZL8nextNotev+0x236>
    11be:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    11c2:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    11c6:	0e 94 7f 06 	call	0xcfe	; 0xcfe <_ZL9getNumberv>
    11ca:	bc 01       	movw	r22, r24
    11cc:	c7 01       	movw	r24, r14
    11ce:	0e 94 db 11 	call	0x23b6	; 0x23b6 <__udivmodhi4>
    11d2:	7b 01       	movw	r14, r22
    11d4:	f6 94       	lsr	r15
    11d6:	e7 94       	ror	r14
    11d8:	69 83       	std	Y+1, r22	; 0x01
    11da:	7a 83       	std	Y+2, r23	; 0x02
    11dc:	0e 94 62 06 	call	0xcc4	; 0xcc4 <_ZL16currentCharacterv>
    11e0:	69 81       	ldd	r22, Y+1	; 0x01
    11e2:	7a 81       	ldd	r23, Y+2	; 0x02
    11e4:	8e 32       	cpi	r24, 0x2E	; 46
    11e6:	69 f4       	brne	.+26     	; 0x1202 <_ZL8nextNotev+0x266>
    11e8:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <__data_end>
    11ec:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <__data_end+0x1>
    11f0:	2f 5f       	subi	r18, 0xFF	; 255
    11f2:	3f 4f       	sbci	r19, 0xFF	; 255
    11f4:	30 93 47 01 	sts	0x0147, r19	; 0x800147 <__data_end+0x1>
    11f8:	20 93 46 01 	sts	0x0146, r18	; 0x800146 <__data_end>
    11fc:	6e 0d       	add	r22, r14
    11fe:	7f 1d       	adc	r23, r15
    1200:	e9 cf       	rjmp	.-46     	; 0x11d4 <_ZL8nextNotev+0x238>
    1202:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <_ZL8staccato>
    1206:	88 23       	and	r24, r24
    1208:	39 f0       	breq	.+14     	; 0x1218 <_ZL8nextNotev+0x27c>
    120a:	9b 01       	movw	r18, r22
    120c:	36 95       	lsr	r19
    120e:	27 95       	ror	r18
    1210:	20 93 49 01 	sts	0x0149, r18	; 0x800149 <_ZL22staccato_rest_duration>
    1214:	62 1b       	sub	r22, r18
    1216:	71 09       	sbc	r23, r1
    1218:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <_ZL6volume>
    121c:	11 23       	and	r17, r17
    121e:	11 f0       	breq	.+4      	; 0x1224 <_ZL8nextNotev+0x288>
    1220:	8f ef       	ldi	r24, 0xFF	; 255
    1222:	01 c0       	rjmp	.+2      	; 0x1226 <_ZL8nextNotev+0x28a>
    1224:	80 2f       	mov	r24, r16
    1226:	0e 94 7a 07 	call	0xef4	; 0xef4 <_ZN15OrangutanBuzzer8playNoteEhjh>
    122a:	22 96       	adiw	r28, 0x02	; 2
    122c:	e0 e1       	ldi	r30, 0x10	; 16
    122e:	0c 94 8a 12 	jmp	0x2514	; 0x2514 <__epilogue_restores__+0x4>

00001232 <__vector_13>:
    1232:	1f 92       	push	r1
    1234:	0f 92       	push	r0
    1236:	0f b6       	in	r0, 0x3f	; 63
    1238:	0f 92       	push	r0
    123a:	11 24       	eor	r1, r1
    123c:	2f 93       	push	r18
    123e:	3f 93       	push	r19
    1240:	4f 93       	push	r20
    1242:	5f 93       	push	r21
    1244:	6f 93       	push	r22
    1246:	7f 93       	push	r23
    1248:	8f 93       	push	r24
    124a:	9f 93       	push	r25
    124c:	af 93       	push	r26
    124e:	bf 93       	push	r27
    1250:	ef 93       	push	r30
    1252:	ff 93       	push	r31
    1254:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <_ZL13buzzerTimeout>
    1258:	90 91 4e 01 	lds	r25, 0x014E	; 0x80014e <_ZL13buzzerTimeout+0x1>
    125c:	9c 01       	movw	r18, r24
    125e:	21 50       	subi	r18, 0x01	; 1
    1260:	31 09       	sbc	r19, r1
    1262:	30 93 4e 01 	sts	0x014E, r19	; 0x80014e <_ZL13buzzerTimeout+0x1>
    1266:	20 93 4d 01 	sts	0x014D, r18	; 0x80014d <_ZL13buzzerTimeout>
    126a:	89 2b       	or	r24, r25
    126c:	11 f5       	brne	.+68     	; 0x12b2 <__vector_13+0x80>
    126e:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1272:	78 94       	sei
    1274:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1278:	88 7f       	andi	r24, 0xF8	; 248
    127a:	81 60       	ori	r24, 0x01	; 1
    127c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1280:	80 e1       	ldi	r24, 0x10	; 16
    1282:	97 e2       	ldi	r25, 0x27	; 39
    1284:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    1288:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    128c:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    1290:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    1294:	81 e0       	ldi	r24, 0x01	; 1
    1296:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <buzzerFinished>
    129a:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <__data_end>
    129e:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <__data_end+0x1>
    12a2:	89 2b       	or	r24, r25
    12a4:	31 f0       	breq	.+12     	; 0x12b2 <__vector_13+0x80>
    12a6:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <_ZL17play_mode_setting>
    12aa:	81 11       	cpse	r24, r1
    12ac:	02 c0       	rjmp	.+4      	; 0x12b2 <__vector_13+0x80>
    12ae:	0e 94 ce 07 	call	0xf9c	; 0xf9c <_ZL8nextNotev>
    12b2:	ff 91       	pop	r31
    12b4:	ef 91       	pop	r30
    12b6:	bf 91       	pop	r27
    12b8:	af 91       	pop	r26
    12ba:	9f 91       	pop	r25
    12bc:	8f 91       	pop	r24
    12be:	7f 91       	pop	r23
    12c0:	6f 91       	pop	r22
    12c2:	5f 91       	pop	r21
    12c4:	4f 91       	pop	r20
    12c6:	3f 91       	pop	r19
    12c8:	2f 91       	pop	r18
    12ca:	0f 90       	pop	r0
    12cc:	0f be       	out	0x3f, r0	; 63
    12ce:	0f 90       	pop	r0
    12d0:	1f 90       	pop	r1
    12d2:	18 95       	reti

000012d4 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    12d4:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    12d8:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <__data_end+0x1>
    12dc:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <__data_end>
    12e0:	81 e0       	ldi	r24, 0x01	; 1
    12e2:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <_ZL17use_program_space>
    12e6:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <_ZL22staccato_rest_duration>
    12ea:	0e 94 ce 07 	call	0xf9c	; 0xf9c <_ZL8nextNotev>
    12ee:	08 95       	ret

000012f0 <play_from_program_space>:
    12f0:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    12f4:	08 95       	ret

000012f6 <delay_us.constprop.0>:
    12f6:	81 e0       	ldi	r24, 0x01	; 1
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	6f 93       	push	r22
    12fc:	64 e0       	ldi	r22, 0x04	; 4
    12fe:	6a 95       	dec	r22
    1300:	f1 f7       	brne	.-4      	; 0x12fe <delay_us.constprop.0+0x8>
    1302:	6f 91       	pop	r22
    1304:	01 97       	sbiw	r24, 0x01	; 1
    1306:	c9 f7       	brne	.-14     	; 0x12fa <delay_us.constprop.0+0x4>
    1308:	08 95       	ret

0000130a <_ZN12OrangutanLCD8busyWaitEv>:
    130a:	0f 93       	push	r16
    130c:	1f 93       	push	r17
    130e:	cf 93       	push	r28
    1310:	df 93       	push	r29
    1312:	1a b1       	in	r17, 0x0a	; 10
    1314:	57 98       	cbi	0x0a, 7	; 10
    1316:	5a 98       	cbi	0x0b, 2	; 11
    1318:	28 9a       	sbi	0x05, 0	; 5
    131a:	c0 e0       	ldi	r28, 0x00	; 0
    131c:	d0 e0       	ldi	r29, 0x00	; 0
    131e:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <delay_us.constprop.0>
    1322:	5c 9a       	sbi	0x0b, 4	; 11
    1324:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <delay_us.constprop.0>
    1328:	09 b1       	in	r16, 0x09	; 9
    132a:	5c 98       	cbi	0x0b, 4	; 11
    132c:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <delay_us.constprop.0>
    1330:	5c 9a       	sbi	0x0b, 4	; 11
    1332:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <delay_us.constprop.0>
    1336:	5c 98       	cbi	0x0b, 4	; 11
    1338:	24 96       	adiw	r28, 0x04	; 4
    133a:	07 ff       	sbrs	r16, 7
    133c:	10 c0       	rjmp	.+32     	; 0x135e <_ZN12OrangutanLCD8busyWaitEv+0x54>
    133e:	ae 01       	movw	r20, r28
    1340:	60 e0       	ldi	r22, 0x00	; 0
    1342:	70 e0       	ldi	r23, 0x00	; 0
    1344:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <lcdTimeout>
    1348:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <lcdTimeout+0x1>
    134c:	a0 91 51 01 	lds	r26, 0x0151	; 0x800151 <lcdTimeout+0x2>
    1350:	b0 91 52 01 	lds	r27, 0x0152	; 0x800152 <lcdTimeout+0x3>
    1354:	48 17       	cp	r20, r24
    1356:	59 07       	cpc	r21, r25
    1358:	6a 07       	cpc	r22, r26
    135a:	7b 07       	cpc	r23, r27
    135c:	00 f3       	brcs	.-64     	; 0x131e <_ZN12OrangutanLCD8busyWaitEv+0x14>
    135e:	1a b9       	out	0x0a, r17	; 10
    1360:	df 91       	pop	r29
    1362:	cf 91       	pop	r28
    1364:	1f 91       	pop	r17
    1366:	0f 91       	pop	r16
    1368:	08 95       	ret

0000136a <_ZN12OrangutanLCD8sendDataEh>:
    136a:	95 b1       	in	r25, 0x05	; 5
    136c:	28 2f       	mov	r18, r24
    136e:	21 70       	andi	r18, 0x01	; 1
    1370:	30 e0       	ldi	r19, 0x00	; 0
    1372:	22 0f       	add	r18, r18
    1374:	33 1f       	adc	r19, r19
    1376:	48 2f       	mov	r20, r24
    1378:	46 70       	andi	r20, 0x06	; 6
    137a:	68 e0       	ldi	r22, 0x08	; 8
    137c:	46 9f       	mul	r20, r22
    137e:	a0 01       	movw	r20, r0
    1380:	11 24       	eor	r1, r1
    1382:	24 2b       	or	r18, r20
    1384:	9d 7c       	andi	r25, 0xCD	; 205
    1386:	29 2b       	or	r18, r25
    1388:	25 b9       	out	0x05, r18	; 5
    138a:	9b b1       	in	r25, 0x0b	; 11
    138c:	88 70       	andi	r24, 0x08	; 8
    138e:	82 95       	swap	r24
    1390:	80 7f       	andi	r24, 0xF0	; 240
    1392:	9f 77       	andi	r25, 0x7F	; 127
    1394:	89 2b       	or	r24, r25
    1396:	8b b9       	out	0x0b, r24	; 11
    1398:	5c 9a       	sbi	0x0b, 4	; 11
    139a:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <delay_us.constprop.0>
    139e:	5c 98       	cbi	0x0b, 4	; 11
    13a0:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <delay_us.constprop.0>
    13a4:	08 95       	ret

000013a6 <_ZN12OrangutanLCD4sendEhhh>:
    13a6:	a0 e0       	ldi	r26, 0x00	; 0
    13a8:	b0 e0       	ldi	r27, 0x00	; 0
    13aa:	e9 ed       	ldi	r30, 0xD9	; 217
    13ac:	f9 e0       	ldi	r31, 0x09	; 9
    13ae:	0c 94 77 12 	jmp	0x24ee	; 0x24ee <__prologue_saves__+0x16>
    13b2:	c8 2f       	mov	r28, r24
    13b4:	d6 2e       	mov	r13, r22
    13b6:	e4 2e       	mov	r14, r20
    13b8:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <_ZZN12OrangutanLCD4initEvE11initialized>
    13bc:	81 11       	cpse	r24, r1
    13be:	05 c0       	rjmp	.+10     	; 0x13ca <_ZN12OrangutanLCD4sendEhhh+0x24>
    13c0:	81 e0       	ldi	r24, 0x01	; 1
    13c2:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <_ZZN12OrangutanLCD4initEvE11initialized>
    13c6:	0e 94 1c 0a 	call	0x1438	; 0x1438 <_ZN12OrangutanLCD5init2Ev>
    13ca:	0e 94 85 09 	call	0x130a	; 0x130a <_ZN12OrangutanLCD8busyWaitEv>
    13ce:	14 b1       	in	r17, 0x04	; 4
    13d0:	d5 b1       	in	r29, 0x05	; 5
    13d2:	fa b0       	in	r15, 0x0a	; 10
    13d4:	0b b1       	in	r16, 0x0b	; 11
    13d6:	28 98       	cbi	0x05, 0	; 5
    13d8:	dd 20       	and	r13, r13
    13da:	11 f0       	breq	.+4      	; 0x13e0 <_ZN12OrangutanLCD4sendEhhh+0x3a>
    13dc:	5a 9a       	sbi	0x0b, 2	; 11
    13de:	01 c0       	rjmp	.+2      	; 0x13e2 <_ZN12OrangutanLCD4sendEhhh+0x3c>
    13e0:	5a 98       	cbi	0x0b, 2	; 11
    13e2:	94 b1       	in	r25, 0x04	; 4
    13e4:	92 63       	ori	r25, 0x32	; 50
    13e6:	94 b9       	out	0x04, r25	; 4
    13e8:	57 9a       	sbi	0x0a, 7	; 10
    13ea:	81 e0       	ldi	r24, 0x01	; 1
    13ec:	e8 16       	cp	r14, r24
    13ee:	29 f0       	breq	.+10     	; 0x13fa <_ZN12OrangutanLCD4sendEhhh+0x54>
    13f0:	8c 2f       	mov	r24, r28
    13f2:	82 95       	swap	r24
    13f4:	8f 70       	andi	r24, 0x0F	; 15
    13f6:	0e 94 b5 09 	call	0x136a	; 0x136a <_ZN12OrangutanLCD8sendDataEh>
    13fa:	8c 2f       	mov	r24, r28
    13fc:	8f 70       	andi	r24, 0x0F	; 15
    13fe:	0e 94 b5 09 	call	0x136a	; 0x136a <_ZN12OrangutanLCD8sendDataEh>
    1402:	fa b8       	out	0x0a, r15	; 10
    1404:	0b b9       	out	0x0b, r16	; 11
    1406:	14 b9       	out	0x04, r17	; 4
    1408:	d5 b9       	out	0x05, r29	; 5
    140a:	cd b7       	in	r28, 0x3d	; 61
    140c:	de b7       	in	r29, 0x3e	; 62
    140e:	e7 e0       	ldi	r30, 0x07	; 7
    1410:	0c 94 93 12 	jmp	0x2526	; 0x2526 <__epilogue_restores__+0x16>

00001414 <_ZN12OrangutanLCD8send_cmdEh>:
    1414:	42 e0       	ldi	r20, 0x02	; 2
    1416:	60 e0       	ldi	r22, 0x00	; 0
    1418:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <_ZN12OrangutanLCD4sendEhhh>
    141c:	08 95       	ret

0000141e <_ZN12OrangutanLCD9send_dataEh>:
    141e:	42 e0       	ldi	r20, 0x02	; 2
    1420:	61 e0       	ldi	r22, 0x01	; 1
    1422:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <_ZN12OrangutanLCD4sendEhhh>
    1426:	08 95       	ret

00001428 <print_character>:
    1428:	0e 94 0f 0a 	call	0x141e	; 0x141e <_ZN12OrangutanLCD9send_dataEh>
    142c:	08 95       	ret

0000142e <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    142e:	41 e0       	ldi	r20, 0x01	; 1
    1430:	60 e0       	ldi	r22, 0x00	; 0
    1432:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <_ZN12OrangutanLCD4sendEhhh>
    1436:	08 95       	ret

00001438 <_ZN12OrangutanLCD5init2Ev>:
    1438:	80 e1       	ldi	r24, 0x10	; 16
    143a:	97 e2       	ldi	r25, 0x27	; 39
    143c:	a0 e0       	ldi	r26, 0x00	; 0
    143e:	b0 e0       	ldi	r27, 0x00	; 0
    1440:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <lcdTimeout>
    1444:	90 93 50 01 	sts	0x0150, r25	; 0x800150 <lcdTimeout+0x1>
    1448:	a0 93 51 01 	sts	0x0151, r26	; 0x800151 <lcdTimeout+0x2>
    144c:	b0 93 52 01 	sts	0x0152, r27	; 0x800152 <lcdTimeout+0x3>
    1450:	52 9a       	sbi	0x0a, 2	; 10
    1452:	20 9a       	sbi	0x04, 0	; 4
    1454:	54 9a       	sbi	0x0a, 4	; 10
    1456:	8e e1       	ldi	r24, 0x1E	; 30
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	0e 94 40 0c 	call	0x1880	; 0x1880 <delay_ms>
    145e:	83 e0       	ldi	r24, 0x03	; 3
    1460:	0e 94 17 0a 	call	0x142e	; 0x142e <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1464:	86 e0       	ldi	r24, 0x06	; 6
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	0e 94 40 0c 	call	0x1880	; 0x1880 <delay_ms>
    146c:	83 e0       	ldi	r24, 0x03	; 3
    146e:	0e 94 17 0a 	call	0x142e	; 0x142e <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1472:	82 e0       	ldi	r24, 0x02	; 2
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	0e 94 40 0c 	call	0x1880	; 0x1880 <delay_ms>
    147a:	83 e0       	ldi	r24, 0x03	; 3
    147c:	0e 94 17 0a 	call	0x142e	; 0x142e <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1480:	82 e0       	ldi	r24, 0x02	; 2
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	0e 94 40 0c 	call	0x1880	; 0x1880 <delay_ms>
    1488:	82 e0       	ldi	r24, 0x02	; 2
    148a:	0e 94 17 0a 	call	0x142e	; 0x142e <_ZN12OrangutanLCD13send_4bit_cmdEh>
    148e:	82 e0       	ldi	r24, 0x02	; 2
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	0e 94 40 0c 	call	0x1880	; 0x1880 <delay_ms>
    1496:	88 e2       	ldi	r24, 0x28	; 40
    1498:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN12OrangutanLCD8send_cmdEh>
    149c:	88 e0       	ldi	r24, 0x08	; 8
    149e:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN12OrangutanLCD8send_cmdEh>
    14a2:	81 e0       	ldi	r24, 0x01	; 1
    14a4:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN12OrangutanLCD8send_cmdEh>
    14a8:	86 e0       	ldi	r24, 0x06	; 6
    14aa:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN12OrangutanLCD8send_cmdEh>
    14ae:	8c e0       	ldi	r24, 0x0C	; 12
    14b0:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN12OrangutanLCD8send_cmdEh>
    14b4:	08 95       	ret

000014b6 <_ZN12OrangutanLCD5clearEv>:
    14b6:	81 e0       	ldi	r24, 0x01	; 1
    14b8:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN12OrangutanLCD8send_cmdEh>
    14bc:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <printf_chars>
    14c0:	90 91 56 01 	lds	r25, 0x0156	; 0x800156 <printf_chars+0x1>
    14c4:	89 2b       	or	r24, r25
    14c6:	f9 f0       	breq	.+62     	; 0x1506 <_ZN12OrangutanLCD5clearEv+0x50>
    14c8:	60 e0       	ldi	r22, 0x00	; 0
    14ca:	a0 e2       	ldi	r26, 0x20	; 32
    14cc:	26 2f       	mov	r18, r22
    14ce:	30 e0       	ldi	r19, 0x00	; 0
    14d0:	70 91 0c 01 	lds	r23, 0x010C	; 0x80010c <numLCDCols>
    14d4:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <numLCDRows>
    14d8:	90 e0       	ldi	r25, 0x00	; 0
    14da:	01 97       	sbiw	r24, 0x01	; 1
    14dc:	78 9f       	mul	r23, r24
    14de:	a0 01       	movw	r20, r0
    14e0:	79 9f       	mul	r23, r25
    14e2:	50 0d       	add	r21, r0
    14e4:	11 24       	eor	r1, r1
    14e6:	24 17       	cp	r18, r20
    14e8:	35 07       	cpc	r19, r21
    14ea:	4c f4       	brge	.+18     	; 0x14fe <_ZN12OrangutanLCD5clearEv+0x48>
    14ec:	e0 91 55 01 	lds	r30, 0x0155	; 0x800155 <printf_chars>
    14f0:	f0 91 56 01 	lds	r31, 0x0156	; 0x800156 <printf_chars+0x1>
    14f4:	e2 0f       	add	r30, r18
    14f6:	f3 1f       	adc	r31, r19
    14f8:	a0 83       	st	Z, r26
    14fa:	6f 5f       	subi	r22, 0xFF	; 255
    14fc:	e7 cf       	rjmp	.-50     	; 0x14cc <_ZN12OrangutanLCD5clearEv+0x16>
    14fe:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <col>
    1502:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <row>
    1506:	08 95       	ret

00001508 <clear>:
    1508:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <_ZN12OrangutanLCD5clearEv>
    150c:	08 95       	ret

0000150e <_ZN12OrangutanLCD5printEm>:
    150e:	aa e0       	ldi	r26, 0x0A	; 10
    1510:	b0 e0       	ldi	r27, 0x00	; 0
    1512:	ed e8       	ldi	r30, 0x8D	; 141
    1514:	fa e0       	ldi	r31, 0x0A	; 10
    1516:	0c 94 76 12 	jmp	0x24ec	; 0x24ec <__prologue_saves__+0x14>
    151a:	1a e0       	ldi	r17, 0x0A	; 10
    151c:	5a e0       	ldi	r21, 0x0A	; 10
    151e:	c5 2e       	mov	r12, r21
    1520:	d1 2c       	mov	r13, r1
    1522:	e1 2c       	mov	r14, r1
    1524:	f1 2c       	mov	r15, r1
    1526:	06 2f       	mov	r16, r22
    1528:	a7 01       	movw	r20, r14
    152a:	96 01       	movw	r18, r12
    152c:	0e 94 03 12 	call	0x2406	; 0x2406 <__udivmodsi4>
    1530:	ca 01       	movw	r24, r20
    1532:	b9 01       	movw	r22, r18
    1534:	11 50       	subi	r17, 0x01	; 1
    1536:	e1 e0       	ldi	r30, 0x01	; 1
    1538:	f0 e0       	ldi	r31, 0x00	; 0
    153a:	ec 0f       	add	r30, r28
    153c:	fd 1f       	adc	r31, r29
    153e:	e1 0f       	add	r30, r17
    1540:	f1 1d       	adc	r31, r1
    1542:	00 5d       	subi	r16, 0xD0	; 208
    1544:	2a e0       	ldi	r18, 0x0A	; 10
    1546:	62 9f       	mul	r22, r18
    1548:	00 19       	sub	r16, r0
    154a:	11 24       	eor	r1, r1
    154c:	00 83       	st	Z, r16
    154e:	61 15       	cp	r22, r1
    1550:	71 05       	cpc	r23, r1
    1552:	81 05       	cpc	r24, r1
    1554:	91 05       	cpc	r25, r1
    1556:	39 f7       	brne	.-50     	; 0x1526 <_ZN12OrangutanLCD5printEm+0x18>
    1558:	1a 30       	cpi	r17, 0x0A	; 10
    155a:	58 f4       	brcc	.+22     	; 0x1572 <_ZN12OrangutanLCD5printEm+0x64>
    155c:	e1 e0       	ldi	r30, 0x01	; 1
    155e:	f0 e0       	ldi	r31, 0x00	; 0
    1560:	ec 0f       	add	r30, r28
    1562:	fd 1f       	adc	r31, r29
    1564:	e1 0f       	add	r30, r17
    1566:	f1 1d       	adc	r31, r1
    1568:	80 81       	ld	r24, Z
    156a:	0e 94 0f 0a 	call	0x141e	; 0x141e <_ZN12OrangutanLCD9send_dataEh>
    156e:	1f 5f       	subi	r17, 0xFF	; 255
    1570:	f3 cf       	rjmp	.-26     	; 0x1558 <_ZN12OrangutanLCD5printEm+0x4a>
    1572:	2a 96       	adiw	r28, 0x0a	; 10
    1574:	e8 e0       	ldi	r30, 0x08	; 8
    1576:	0c 94 92 12 	jmp	0x2524	; 0x2524 <__epilogue_restores__+0x14>

0000157a <_ZN12OrangutanLCD5printEl>:
    157a:	cf 92       	push	r12
    157c:	df 92       	push	r13
    157e:	ef 92       	push	r14
    1580:	ff 92       	push	r15
    1582:	6b 01       	movw	r12, r22
    1584:	7c 01       	movw	r14, r24
    1586:	97 ff       	sbrs	r25, 7
    1588:	0b c0       	rjmp	.+22     	; 0x15a0 <_ZN12OrangutanLCD5printEl+0x26>
    158a:	f0 94       	com	r15
    158c:	e0 94       	com	r14
    158e:	d0 94       	com	r13
    1590:	c0 94       	com	r12
    1592:	c1 1c       	adc	r12, r1
    1594:	d1 1c       	adc	r13, r1
    1596:	e1 1c       	adc	r14, r1
    1598:	f1 1c       	adc	r15, r1
    159a:	8d e2       	ldi	r24, 0x2D	; 45
    159c:	0e 94 0f 0a 	call	0x141e	; 0x141e <_ZN12OrangutanLCD9send_dataEh>
    15a0:	c7 01       	movw	r24, r14
    15a2:	b6 01       	movw	r22, r12
    15a4:	0e 94 87 0a 	call	0x150e	; 0x150e <_ZN12OrangutanLCD5printEm>
    15a8:	ff 90       	pop	r15
    15aa:	ef 90       	pop	r14
    15ac:	df 90       	pop	r13
    15ae:	cf 90       	pop	r12
    15b0:	08 95       	ret

000015b2 <print_long>:
    15b2:	0e 94 bd 0a 	call	0x157a	; 0x157a <_ZN12OrangutanLCD5printEl>
    15b6:	08 95       	ret

000015b8 <_ZN12OrangutanLCD6gotoXYEhh>:
    15b8:	a5 e0       	ldi	r26, 0x05	; 5
    15ba:	b0 e0       	ldi	r27, 0x00	; 0
    15bc:	e2 ee       	ldi	r30, 0xE2	; 226
    15be:	fa e0       	ldi	r31, 0x0A	; 10
    15c0:	0c 94 7b 12 	jmp	0x24f6	; 0x24f6 <__prologue_saves__+0x1e>
    15c4:	18 2f       	mov	r17, r24
    15c6:	80 e8       	ldi	r24, 0x80	; 128
    15c8:	89 83       	std	Y+1, r24	; 0x01
    15ca:	80 ec       	ldi	r24, 0xC0	; 192
    15cc:	8a 83       	std	Y+2, r24	; 0x02
    15ce:	84 e9       	ldi	r24, 0x94	; 148
    15d0:	8b 83       	std	Y+3, r24	; 0x03
    15d2:	84 ed       	ldi	r24, 0xD4	; 212
    15d4:	8c 83       	std	Y+4, r24	; 0x04
    15d6:	fe 01       	movw	r30, r28
    15d8:	e6 0f       	add	r30, r22
    15da:	f1 1d       	adc	r31, r1
    15dc:	81 81       	ldd	r24, Z+1	; 0x01
    15de:	81 0f       	add	r24, r17
    15e0:	6d 83       	std	Y+5, r22	; 0x05
    15e2:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN12OrangutanLCD8send_cmdEh>
    15e6:	10 93 53 01 	sts	0x0153, r17	; 0x800153 <col>
    15ea:	6d 81       	ldd	r22, Y+5	; 0x05
    15ec:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <row>
    15f0:	25 96       	adiw	r28, 0x05	; 5
    15f2:	e3 e0       	ldi	r30, 0x03	; 3
    15f4:	0c 94 97 12 	jmp	0x252e	; 0x252e <__epilogue_restores__+0x1e>

000015f8 <lcd_goto_xy>:
    15f8:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <_ZN12OrangutanLCD6gotoXYEhh>
    15fc:	08 95       	ret

000015fe <_ZN16OrangutanDigital9setOutputEhh>:
    15fe:	88 30       	cpi	r24, 0x08	; 8
    1600:	58 f4       	brcc	.+22     	; 0x1618 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    1602:	91 e0       	ldi	r25, 0x01	; 1
    1604:	01 c0       	rjmp	.+2      	; 0x1608 <_ZN16OrangutanDigital9setOutputEhh+0xa>
    1606:	99 0f       	add	r25, r25
    1608:	8a 95       	dec	r24
    160a:	ea f7       	brpl	.-6      	; 0x1606 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    160c:	89 2f       	mov	r24, r25
    160e:	aa e2       	ldi	r26, 0x2A	; 42
    1610:	b0 e0       	ldi	r27, 0x00	; 0
    1612:	eb e2       	ldi	r30, 0x2B	; 43
    1614:	f0 e0       	ldi	r31, 0x00	; 0
    1616:	21 c0       	rjmp	.+66     	; 0x165a <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1618:	8e 30       	cpi	r24, 0x0E	; 14
    161a:	60 f4       	brcc	.+24     	; 0x1634 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    161c:	98 ef       	ldi	r25, 0xF8	; 248
    161e:	98 0f       	add	r25, r24
    1620:	81 e0       	ldi	r24, 0x01	; 1
    1622:	01 c0       	rjmp	.+2      	; 0x1626 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    1624:	88 0f       	add	r24, r24
    1626:	9a 95       	dec	r25
    1628:	ea f7       	brpl	.-6      	; 0x1624 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    162a:	a4 e2       	ldi	r26, 0x24	; 36
    162c:	b0 e0       	ldi	r27, 0x00	; 0
    162e:	e5 e2       	ldi	r30, 0x25	; 37
    1630:	f0 e0       	ldi	r31, 0x00	; 0
    1632:	13 c0       	rjmp	.+38     	; 0x165a <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1634:	85 31       	cpi	r24, 0x15	; 21
    1636:	60 f4       	brcc	.+24     	; 0x1650 <_ZN16OrangutanDigital9setOutputEhh+0x52>
    1638:	92 ef       	ldi	r25, 0xF2	; 242
    163a:	98 0f       	add	r25, r24
    163c:	81 e0       	ldi	r24, 0x01	; 1
    163e:	01 c0       	rjmp	.+2      	; 0x1642 <_ZN16OrangutanDigital9setOutputEhh+0x44>
    1640:	88 0f       	add	r24, r24
    1642:	9a 95       	dec	r25
    1644:	ea f7       	brpl	.-6      	; 0x1640 <_ZN16OrangutanDigital9setOutputEhh+0x42>
    1646:	a7 e2       	ldi	r26, 0x27	; 39
    1648:	b0 e0       	ldi	r27, 0x00	; 0
    164a:	e8 e2       	ldi	r30, 0x28	; 40
    164c:	f0 e0       	ldi	r31, 0x00	; 0
    164e:	05 c0       	rjmp	.+10     	; 0x165a <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1650:	80 e0       	ldi	r24, 0x00	; 0
    1652:	a0 e0       	ldi	r26, 0x00	; 0
    1654:	b0 e0       	ldi	r27, 0x00	; 0
    1656:	e0 e0       	ldi	r30, 0x00	; 0
    1658:	f0 e0       	ldi	r31, 0x00	; 0
    165a:	6f 3f       	cpi	r22, 0xFF	; 255
    165c:	19 f4       	brne	.+6      	; 0x1664 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    165e:	90 81       	ld	r25, Z
    1660:	98 27       	eor	r25, r24
    1662:	09 c0       	rjmp	.+18     	; 0x1676 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    1664:	66 23       	and	r22, r22
    1666:	19 f0       	breq	.+6      	; 0x166e <_ZN16OrangutanDigital9setOutputEhh+0x70>
    1668:	90 81       	ld	r25, Z
    166a:	98 2b       	or	r25, r24
    166c:	04 c0       	rjmp	.+8      	; 0x1676 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    166e:	20 81       	ld	r18, Z
    1670:	98 2f       	mov	r25, r24
    1672:	90 95       	com	r25
    1674:	92 23       	and	r25, r18
    1676:	90 83       	st	Z, r25
    1678:	9c 91       	ld	r25, X
    167a:	98 2b       	or	r25, r24
    167c:	9c 93       	st	X, r25
    167e:	08 95       	ret

00001680 <_ZN15OrangutanMotors5init2Ev>:
    1680:	83 ef       	ldi	r24, 0xF3	; 243
    1682:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1686:	84 bd       	out	0x24, r24	; 36
    1688:	82 e0       	ldi	r24, 0x02	; 2
    168a:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    168e:	85 bd       	out	0x25, r24	; 37
    1690:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    1694:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    1698:	18 bc       	out	0x28, r1	; 40
    169a:	17 bc       	out	0x27, r1	; 39
    169c:	60 e0       	ldi	r22, 0x00	; 0
    169e:	86 e0       	ldi	r24, 0x06	; 6
    16a0:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <_ZN16OrangutanDigital9setOutputEhh>
    16a4:	60 e0       	ldi	r22, 0x00	; 0
    16a6:	85 e0       	ldi	r24, 0x05	; 5
    16a8:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <_ZN16OrangutanDigital9setOutputEhh>
    16ac:	60 e0       	ldi	r22, 0x00	; 0
    16ae:	8b e0       	ldi	r24, 0x0B	; 11
    16b0:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <_ZN16OrangutanDigital9setOutputEhh>
    16b4:	60 e0       	ldi	r22, 0x00	; 0
    16b6:	83 e0       	ldi	r24, 0x03	; 3
    16b8:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <_ZN16OrangutanDigital9setOutputEhh>
    16bc:	08 95       	ret

000016be <_ZN15OrangutanMotors4initEv>:
    16be:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <_ZZN15OrangutanMotors4initEvE11initialized>
    16c2:	81 11       	cpse	r24, r1
    16c4:	05 c0       	rjmp	.+10     	; 0x16d0 <_ZN15OrangutanMotors4initEv+0x12>
    16c6:	81 e0       	ldi	r24, 0x01	; 1
    16c8:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_ZZN15OrangutanMotors4initEvE11initialized>
    16cc:	0e 94 40 0b 	call	0x1680	; 0x1680 <_ZN15OrangutanMotors5init2Ev>
    16d0:	08 95       	ret

000016d2 <_ZN15OrangutanMotors10setM1SpeedEi>:
    16d2:	cf 93       	push	r28
    16d4:	df 93       	push	r29
    16d6:	ec 01       	movw	r28, r24
    16d8:	0e 94 5f 0b 	call	0x16be	; 0x16be <_ZN15OrangutanMotors4initEv>
    16dc:	d7 ff       	sbrs	r29, 7
    16de:	05 c0       	rjmp	.+10     	; 0x16ea <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    16e0:	d1 95       	neg	r29
    16e2:	c1 95       	neg	r28
    16e4:	d1 09       	sbc	r29, r1
    16e6:	81 e0       	ldi	r24, 0x01	; 1
    16e8:	01 c0       	rjmp	.+2      	; 0x16ec <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    16ea:	80 e0       	ldi	r24, 0x00	; 0
    16ec:	cf 3f       	cpi	r28, 0xFF	; 255
    16ee:	d1 05       	cpc	r29, r1
    16f0:	19 f0       	breq	.+6      	; 0x16f8 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    16f2:	14 f0       	brlt	.+4      	; 0x16f8 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    16f4:	cf ef       	ldi	r28, 0xFF	; 255
    16f6:	d0 e0       	ldi	r29, 0x00	; 0
    16f8:	88 23       	and	r24, r24
    16fa:	19 f0       	breq	.+6      	; 0x1702 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    16fc:	18 bc       	out	0x28, r1	; 40
    16fe:	c7 bd       	out	0x27, r28	; 39
    1700:	02 c0       	rjmp	.+4      	; 0x1706 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    1702:	c8 bd       	out	0x28, r28	; 40
    1704:	17 bc       	out	0x27, r1	; 39
    1706:	df 91       	pop	r29
    1708:	cf 91       	pop	r28
    170a:	08 95       	ret

0000170c <_ZN15OrangutanMotors10setM2SpeedEi>:
    170c:	cf 93       	push	r28
    170e:	df 93       	push	r29
    1710:	ec 01       	movw	r28, r24
    1712:	0e 94 5f 0b 	call	0x16be	; 0x16be <_ZN15OrangutanMotors4initEv>
    1716:	d7 ff       	sbrs	r29, 7
    1718:	05 c0       	rjmp	.+10     	; 0x1724 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    171a:	d1 95       	neg	r29
    171c:	c1 95       	neg	r28
    171e:	d1 09       	sbc	r29, r1
    1720:	81 e0       	ldi	r24, 0x01	; 1
    1722:	01 c0       	rjmp	.+2      	; 0x1726 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    1724:	80 e0       	ldi	r24, 0x00	; 0
    1726:	cf 3f       	cpi	r28, 0xFF	; 255
    1728:	d1 05       	cpc	r29, r1
    172a:	19 f0       	breq	.+6      	; 0x1732 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    172c:	14 f0       	brlt	.+4      	; 0x1732 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    172e:	cf ef       	ldi	r28, 0xFF	; 255
    1730:	d0 e0       	ldi	r29, 0x00	; 0
    1732:	88 23       	and	r24, r24
    1734:	29 f0       	breq	.+10     	; 0x1740 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    1736:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    173a:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    173e:	04 c0       	rjmp	.+8      	; 0x1748 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    1740:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    1744:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    1748:	df 91       	pop	r29
    174a:	cf 91       	pop	r28
    174c:	08 95       	ret

0000174e <_ZN15OrangutanMotors9setSpeedsEii>:
    174e:	cf 93       	push	r28
    1750:	df 93       	push	r29
    1752:	eb 01       	movw	r28, r22
    1754:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <_ZN15OrangutanMotors10setM1SpeedEi>
    1758:	ce 01       	movw	r24, r28
    175a:	0e 94 86 0b 	call	0x170c	; 0x170c <_ZN15OrangutanMotors10setM2SpeedEi>
    175e:	df 91       	pop	r29
    1760:	cf 91       	pop	r28
    1762:	08 95       	ret

00001764 <set_motors>:
    1764:	0e 94 a7 0b 	call	0x174e	; 0x174e <_ZN15OrangutanMotors9setSpeedsEii>
    1768:	08 95       	ret

0000176a <_ZN20OrangutanPushbuttons5init2Ev>:
    176a:	84 b1       	in	r24, 0x04	; 4
    176c:	8d 7c       	andi	r24, 0xCD	; 205
    176e:	84 b9       	out	0x04, r24	; 4
    1770:	85 b1       	in	r24, 0x05	; 5
    1772:	82 63       	ori	r24, 0x32	; 50
    1774:	85 b9       	out	0x05, r24	; 5
    1776:	85 e0       	ldi	r24, 0x05	; 5
    1778:	90 e0       	ldi	r25, 0x00	; 0
    177a:	6f 93       	push	r22
    177c:	64 e0       	ldi	r22, 0x04	; 4
    177e:	6a 95       	dec	r22
    1780:	f1 f7       	brne	.-4      	; 0x177e <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    1782:	6f 91       	pop	r22
    1784:	01 97       	sbiw	r24, 0x01	; 1
    1786:	c9 f7       	brne	.-14     	; 0x177a <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    1788:	08 95       	ret

0000178a <_ZN20OrangutanPushbuttons4initEv>:
    178a:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    178e:	81 11       	cpse	r24, r1
    1790:	05 c0       	rjmp	.+10     	; 0x179c <_ZN20OrangutanPushbuttons4initEv+0x12>
    1792:	81 e0       	ldi	r24, 0x01	; 1
    1794:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    1798:	0e 94 b5 0b 	call	0x176a	; 0x176a <_ZN20OrangutanPushbuttons5init2Ev>
    179c:	08 95       	ret

0000179e <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    179e:	cf 93       	push	r28
    17a0:	c8 2f       	mov	r28, r24
    17a2:	0e 94 c5 0b 	call	0x178a	; 0x178a <_ZN20OrangutanPushbuttons4initEv>
    17a6:	83 b1       	in	r24, 0x03	; 3
    17a8:	8c 23       	and	r24, r28
    17aa:	e9 f3       	breq	.-6      	; 0x17a6 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    17ac:	8a e0       	ldi	r24, 0x0A	; 10
    17ae:	90 e0       	ldi	r25, 0x00	; 0
    17b0:	0e 94 40 0c 	call	0x1880	; 0x1880 <delay_ms>
    17b4:	83 b1       	in	r24, 0x03	; 3
    17b6:	8c 23       	and	r24, r28
    17b8:	b1 f3       	breq	.-20     	; 0x17a6 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    17ba:	83 b1       	in	r24, 0x03	; 3
    17bc:	8c 23       	and	r24, r28
    17be:	cf 91       	pop	r28
    17c0:	08 95       	ret

000017c2 <wait_for_button_release>:
    17c2:	0e 94 cf 0b 	call	0x179e	; 0x179e <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    17c6:	08 95       	ret

000017c8 <_ZN20OrangutanPushbuttons9isPressedEh>:
    17c8:	a1 e0       	ldi	r26, 0x01	; 1
    17ca:	b0 e0       	ldi	r27, 0x00	; 0
    17cc:	ea ee       	ldi	r30, 0xEA	; 234
    17ce:	fb e0       	ldi	r31, 0x0B	; 11
    17d0:	0c 94 7c 12 	jmp	0x24f8	; 0x24f8 <__prologue_saves__+0x20>
    17d4:	89 83       	std	Y+1, r24	; 0x01
    17d6:	0e 94 c5 0b 	call	0x178a	; 0x178a <_ZN20OrangutanPushbuttons4initEv>
    17da:	93 b1       	in	r25, 0x03	; 3
    17dc:	90 95       	com	r25
    17de:	89 81       	ldd	r24, Y+1	; 0x01
    17e0:	89 23       	and	r24, r25
    17e2:	21 96       	adiw	r28, 0x01	; 1
    17e4:	e2 e0       	ldi	r30, 0x02	; 2
    17e6:	0c 94 98 12 	jmp	0x2530	; 0x2530 <__epilogue_restores__+0x20>

000017ea <button_is_pressed>:
    17ea:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <_ZN20OrangutanPushbuttons9isPressedEh>
    17ee:	08 95       	ret

000017f0 <__vector_9>:
    17f0:	2f 92       	push	r2
    17f2:	8f 93       	push	r24
    17f4:	9f 93       	push	r25
    17f6:	2f b6       	in	r2, 0x3f	; 63
    17f8:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <tickCount+0x1>
    17fc:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <tickCount+0x2>
    1800:	01 96       	adiw	r24, 0x01	; 1
    1802:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <tickCount+0x1>
    1806:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <tickCount+0x2>
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <tickCount+0x3>
    1810:	89 1f       	adc	r24, r25
    1812:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <tickCount+0x3>
    1816:	90 91 58 01 	lds	r25, 0x0158	; 0x800158 <us_over_10+0x1>
    181a:	9c 5f       	subi	r25, 0xFC	; 252
    181c:	90 93 58 01 	sts	0x0158, r25	; 0x800158 <us_over_10+0x1>
    1820:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <us_over_10>
    1824:	80 51       	subi	r24, 0x10	; 16
    1826:	97 42       	sbci	r25, 0x27	; 39
    1828:	c0 f0       	brcs	.+48     	; 0x185a <end>
    182a:	90 93 58 01 	sts	0x0158, r25	; 0x800158 <us_over_10+0x1>
    182e:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <us_over_10>
    1832:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <msCounter>
    1836:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <msCounter+0x1>
    183a:	01 96       	adiw	r24, 0x01	; 1
    183c:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <msCounter>
    1840:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <msCounter+0x1>
    1844:	90 e0       	ldi	r25, 0x00	; 0
    1846:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <msCounter+0x2>
    184a:	89 1f       	adc	r24, r25
    184c:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <msCounter+0x2>
    1850:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <msCounter+0x3>
    1854:	89 1f       	adc	r24, r25
    1856:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <msCounter+0x3>

0000185a <end>:
    185a:	2f be       	out	0x3f, r2	; 63
    185c:	9f 91       	pop	r25
    185e:	8f 91       	pop	r24
    1860:	2f 90       	pop	r2
    1862:	18 95       	reti

00001864 <_ZN13OrangutanTime17delayMillisecondsEj>:
    1864:	28 ee       	ldi	r18, 0xE8	; 232
    1866:	33 e0       	ldi	r19, 0x03	; 3
    1868:	01 97       	sbiw	r24, 0x01	; 1
    186a:	48 f0       	brcs	.+18     	; 0x187e <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    186c:	f9 01       	movw	r30, r18
    186e:	6f 93       	push	r22
    1870:	64 e0       	ldi	r22, 0x04	; 4
    1872:	6a 95       	dec	r22
    1874:	f1 f7       	brne	.-4      	; 0x1872 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    1876:	6f 91       	pop	r22
    1878:	31 97       	sbiw	r30, 0x01	; 1
    187a:	c9 f7       	brne	.-14     	; 0x186e <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    187c:	f5 cf       	rjmp	.-22     	; 0x1868 <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    187e:	08 95       	ret

00001880 <delay_ms>:
    1880:	0e 94 32 0c 	call	0x1864	; 0x1864 <_ZN13OrangutanTime17delayMillisecondsEj>
    1884:	08 95       	ret

00001886 <_ZN13OrangutanTime5init2Ev>:
    1886:	e0 e7       	ldi	r30, 0x70	; 112
    1888:	f0 e0       	ldi	r31, 0x00	; 0
    188a:	80 81       	ld	r24, Z
    188c:	8e 7f       	andi	r24, 0xFE	; 254
    188e:	80 83       	st	Z, r24
    1890:	a0 eb       	ldi	r26, 0xB0	; 176
    1892:	b0 e0       	ldi	r27, 0x00	; 0
    1894:	8c 91       	ld	r24, X
    1896:	83 60       	ori	r24, 0x03	; 3
    1898:	8c 93       	st	X, r24
    189a:	a1 eb       	ldi	r26, 0xB1	; 177
    189c:	b0 e0       	ldi	r27, 0x00	; 0
    189e:	8c 91       	ld	r24, X
    18a0:	80 7f       	andi	r24, 0xF0	; 240
    18a2:	8c 93       	st	X, r24
    18a4:	8c 91       	ld	r24, X
    18a6:	82 60       	ori	r24, 0x02	; 2
    18a8:	8c 93       	st	X, r24
    18aa:	b8 9a       	sbi	0x17, 0	; 23
    18ac:	80 81       	ld	r24, Z
    18ae:	81 60       	ori	r24, 0x01	; 1
    18b0:	80 83       	st	Z, r24
    18b2:	78 94       	sei
    18b4:	08 95       	ret

000018b6 <_ZN13OrangutanTime4initEv>:
    18b6:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <_ZZN13OrangutanTime4initEvE11initialized>
    18ba:	81 11       	cpse	r24, r1
    18bc:	05 c0       	rjmp	.+10     	; 0x18c8 <_ZN13OrangutanTime4initEv+0x12>
    18be:	81 e0       	ldi	r24, 0x01	; 1
    18c0:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <_ZZN13OrangutanTime4initEvE11initialized>
    18c4:	0e 94 43 0c 	call	0x1886	; 0x1886 <_ZN13OrangutanTime5init2Ev>
    18c8:	08 95       	ret

000018ca <_ZN13OrangutanTime5resetEv>:
    18ca:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <_ZN13OrangutanTime4initEv>
    18ce:	e0 e7       	ldi	r30, 0x70	; 112
    18d0:	f0 e0       	ldi	r31, 0x00	; 0
    18d2:	80 81       	ld	r24, Z
    18d4:	8e 7f       	andi	r24, 0xFE	; 254
    18d6:	80 83       	st	Z, r24
    18d8:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <msCounter>
    18dc:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <msCounter+0x1>
    18e0:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <msCounter+0x2>
    18e4:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <msCounter+0x3>
    18e8:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <us_over_10+0x1>
    18ec:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <us_over_10>
    18f0:	80 81       	ld	r24, Z
    18f2:	81 60       	ori	r24, 0x01	; 1
    18f4:	80 83       	st	Z, r24
    18f6:	08 95       	ret

000018f8 <calibrate_line_sensors>:
    18f8:	68 2f       	mov	r22, r24
    18fa:	81 e6       	ldi	r24, 0x61	; 97
    18fc:	91 e0       	ldi	r25, 0x01	; 1
    18fe:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <_ZN16PololuQTRSensors9calibrateEh>
    1902:	08 95       	ret

00001904 <read_line_sensors_calibrated>:
    1904:	46 2f       	mov	r20, r22
    1906:	bc 01       	movw	r22, r24
    1908:	81 e6       	ldi	r24, 0x61	; 97
    190a:	91 e0       	ldi	r25, 0x01	; 1
    190c:	0e 94 8f 10 	call	0x211e	; 0x211e <_ZN16PololuQTRSensors14readCalibratedEPjh>
    1910:	08 95       	ret

00001912 <read_line>:
    1912:	46 2f       	mov	r20, r22
    1914:	20 e0       	ldi	r18, 0x00	; 0
    1916:	bc 01       	movw	r22, r24
    1918:	81 e6       	ldi	r24, 0x61	; 97
    191a:	91 e0       	ldi	r25, 0x01	; 1
    191c:	0e 94 3c 11 	call	0x2278	; 0x2278 <_ZN16PololuQTRSensors8readLineEPjhh>
    1920:	08 95       	ret

00001922 <_ZN9Pololu3pi4initEjh>:
    1922:	0f 93       	push	r16
    1924:	cf 93       	push	r28
    1926:	df 93       	push	r29
    1928:	00 d0       	rcall	.+0      	; 0x192a <_ZN9Pololu3pi4initEjh+0x8>
    192a:	00 d0       	rcall	.+0      	; 0x192c <_ZN9Pololu3pi4initEjh+0xa>
    192c:	1f 92       	push	r1
    192e:	cd b7       	in	r28, 0x3d	; 61
    1930:	de b7       	in	r29, 0x3e	; 62
    1932:	9c 01       	movw	r18, r24
    1934:	85 e0       	ldi	r24, 0x05	; 5
    1936:	e0 e4       	ldi	r30, 0x40	; 64
    1938:	f1 e0       	ldi	r31, 0x01	; 1
    193a:	de 01       	movw	r26, r28
    193c:	11 96       	adiw	r26, 0x01	; 1
    193e:	01 90       	ld	r0, Z+
    1940:	0d 92       	st	X+, r0
    1942:	8a 95       	dec	r24
    1944:	e1 f7       	brne	.-8      	; 0x193e <_ZN9Pololu3pi4initEjh+0x1c>
    1946:	66 23       	and	r22, r22
    1948:	11 f0       	breq	.+4      	; 0x194e <_ZN9Pololu3pi4initEjh+0x2c>
    194a:	0f ef       	ldi	r16, 0xFF	; 255
    194c:	01 c0       	rjmp	.+2      	; 0x1950 <_ZN9Pololu3pi4initEjh+0x2e>
    194e:	03 e1       	ldi	r16, 0x13	; 19
    1950:	45 e0       	ldi	r20, 0x05	; 5
    1952:	be 01       	movw	r22, r28
    1954:	6f 5f       	subi	r22, 0xFF	; 255
    1956:	7f 4f       	sbci	r23, 0xFF	; 255
    1958:	81 e6       	ldi	r24, 0x61	; 97
    195a:	91 e0       	ldi	r25, 0x01	; 1
    195c:	0e 94 63 0d 	call	0x1ac6	; 0x1ac6 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    1960:	81 e6       	ldi	r24, 0x61	; 97
    1962:	91 e0       	ldi	r25, 0x01	; 1
    1964:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <_ZN16PololuQTRSensors11emittersOffEv>
    1968:	0e 94 65 0c 	call	0x18ca	; 0x18ca <_ZN13OrangutanTime5resetEv>
    196c:	0f 90       	pop	r0
    196e:	0f 90       	pop	r0
    1970:	0f 90       	pop	r0
    1972:	0f 90       	pop	r0
    1974:	0f 90       	pop	r0
    1976:	df 91       	pop	r29
    1978:	cf 91       	pop	r28
    197a:	0f 91       	pop	r16
    197c:	08 95       	ret

0000197e <pololu_3pi_init>:
    197e:	60 e0       	ldi	r22, 0x00	; 0
    1980:	0e 94 91 0c 	call	0x1922	; 0x1922 <_ZN9Pololu3pi4initEjh>
    1984:	08 95       	ret

00001986 <_GLOBAL__sub_D_pololu_3pi_init>:
    1986:	81 e6       	ldi	r24, 0x61	; 97
    1988:	91 e0       	ldi	r25, 0x01	; 1
    198a:	0e 94 b1 11 	call	0x2362	; 0x2362 <_ZN16PololuQTRSensorsD1Ev>
    198e:	08 95       	ret

00001990 <delay_us>:
    1990:	6f 93       	push	r22
    1992:	64 e0       	ldi	r22, 0x04	; 4
    1994:	6a 95       	dec	r22
    1996:	f1 f7       	brne	.-4      	; 0x1994 <delay_us+0x4>
    1998:	6f 91       	pop	r22
    199a:	01 97       	sbiw	r24, 0x01	; 1
    199c:	c9 f7       	brne	.-14     	; 0x1990 <delay_us>
    199e:	08 95       	ret

000019a0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    19a0:	fc 01       	movw	r30, r24
    19a2:	11 82       	std	Z+1, r1	; 0x01
    19a4:	10 82       	st	Z, r1
    19a6:	13 82       	std	Z+3, r1	; 0x03
    19a8:	12 82       	std	Z+2, r1	; 0x02
    19aa:	15 82       	std	Z+5, r1	; 0x05
    19ac:	14 82       	std	Z+4, r1	; 0x04
    19ae:	16 82       	std	Z+6, r1	; 0x06
    19b0:	68 30       	cpi	r22, 0x08	; 8
    19b2:	68 f4       	brcc	.+26     	; 0x19ce <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    19b4:	89 e2       	ldi	r24, 0x29	; 41
    19b6:	90 e0       	ldi	r25, 0x00	; 0
    19b8:	91 83       	std	Z+1, r25	; 0x01
    19ba:	80 83       	st	Z, r24
    19bc:	8b e2       	ldi	r24, 0x2B	; 43
    19be:	90 e0       	ldi	r25, 0x00	; 0
    19c0:	93 83       	std	Z+3, r25	; 0x03
    19c2:	82 83       	std	Z+2, r24	; 0x02
    19c4:	8a e2       	ldi	r24, 0x2A	; 42
    19c6:	90 e0       	ldi	r25, 0x00	; 0
    19c8:	95 83       	std	Z+5, r25	; 0x05
    19ca:	84 83       	std	Z+4, r24	; 0x04
    19cc:	1f c0       	rjmp	.+62     	; 0x1a0c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    19ce:	6e 30       	cpi	r22, 0x0E	; 14
    19d0:	70 f4       	brcc	.+28     	; 0x19ee <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    19d2:	83 e2       	ldi	r24, 0x23	; 35
    19d4:	90 e0       	ldi	r25, 0x00	; 0
    19d6:	91 83       	std	Z+1, r25	; 0x01
    19d8:	80 83       	st	Z, r24
    19da:	85 e2       	ldi	r24, 0x25	; 37
    19dc:	90 e0       	ldi	r25, 0x00	; 0
    19de:	93 83       	std	Z+3, r25	; 0x03
    19e0:	82 83       	std	Z+2, r24	; 0x02
    19e2:	84 e2       	ldi	r24, 0x24	; 36
    19e4:	90 e0       	ldi	r25, 0x00	; 0
    19e6:	95 83       	std	Z+5, r25	; 0x05
    19e8:	84 83       	std	Z+4, r24	; 0x04
    19ea:	68 50       	subi	r22, 0x08	; 8
    19ec:	0f c0       	rjmp	.+30     	; 0x1a0c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    19ee:	65 31       	cpi	r22, 0x15	; 21
    19f0:	98 f4       	brcc	.+38     	; 0x1a18 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    19f2:	86 e2       	ldi	r24, 0x26	; 38
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	91 83       	std	Z+1, r25	; 0x01
    19f8:	80 83       	st	Z, r24
    19fa:	88 e2       	ldi	r24, 0x28	; 40
    19fc:	90 e0       	ldi	r25, 0x00	; 0
    19fe:	93 83       	std	Z+3, r25	; 0x03
    1a00:	82 83       	std	Z+2, r24	; 0x02
    1a02:	87 e2       	ldi	r24, 0x27	; 39
    1a04:	90 e0       	ldi	r25, 0x00	; 0
    1a06:	95 83       	std	Z+5, r25	; 0x05
    1a08:	84 83       	std	Z+4, r24	; 0x04
    1a0a:	6e 50       	subi	r22, 0x0E	; 14
    1a0c:	81 e0       	ldi	r24, 0x01	; 1
    1a0e:	01 c0       	rjmp	.+2      	; 0x1a12 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    1a10:	88 0f       	add	r24, r24
    1a12:	6a 95       	dec	r22
    1a14:	ea f7       	brpl	.-6      	; 0x1a10 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    1a16:	86 83       	std	Z+6, r24	; 0x06
    1a18:	08 95       	ret

00001a1a <_ZN16PololuQTRSensors4initEhhh>:
    1a1a:	a7 e0       	ldi	r26, 0x07	; 7
    1a1c:	b0 e0       	ldi	r27, 0x00	; 0
    1a1e:	e3 e1       	ldi	r30, 0x13	; 19
    1a20:	fd e0       	ldi	r31, 0x0D	; 13
    1a22:	0c 94 7a 12 	jmp	0x24f4	; 0x24f4 <__prologue_saves__+0x1c>
    1a26:	8c 01       	movw	r16, r24
    1a28:	fc 01       	movw	r30, r24
    1a2a:	11 82       	std	Z+1, r1	; 0x01
    1a2c:	10 82       	st	Z, r1
    1a2e:	13 82       	std	Z+3, r1	; 0x03
    1a30:	12 82       	std	Z+2, r1	; 0x02
    1a32:	15 82       	std	Z+5, r1	; 0x05
    1a34:	14 82       	std	Z+4, r1	; 0x04
    1a36:	17 82       	std	Z+7, r1	; 0x07
    1a38:	16 82       	std	Z+6, r1	; 0x06
    1a3a:	61 31       	cpi	r22, 0x11	; 17
    1a3c:	18 f0       	brcs	.+6      	; 0x1a44 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    1a3e:	80 e1       	ldi	r24, 0x10	; 16
    1a40:	80 87       	std	Z+8, r24	; 0x08
    1a42:	02 c0       	rjmp	.+4      	; 0x1a48 <_ZN16PololuQTRSensors4initEhhh+0x2e>
    1a44:	fc 01       	movw	r30, r24
    1a46:	60 87       	std	Z+8, r22	; 0x08
    1a48:	f8 01       	movw	r30, r16
    1a4a:	20 8b       	std	Z+16, r18	; 0x10
    1a4c:	64 2f       	mov	r22, r20
    1a4e:	ce 01       	movw	r24, r28
    1a50:	01 96       	adiw	r24, 0x01	; 1
    1a52:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1a56:	8f 81       	ldd	r24, Y+7	; 0x07
    1a58:	f8 01       	movw	r30, r16
    1a5a:	81 87       	std	Z+9, r24	; 0x09
    1a5c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a5e:	9c 81       	ldd	r25, Y+4	; 0x04
    1a60:	93 87       	std	Z+11, r25	; 0x0b
    1a62:	82 87       	std	Z+10, r24	; 0x0a
    1a64:	8d 81       	ldd	r24, Y+5	; 0x05
    1a66:	9e 81       	ldd	r25, Y+6	; 0x06
    1a68:	95 87       	std	Z+13, r25	; 0x0d
    1a6a:	84 87       	std	Z+12, r24	; 0x0c
    1a6c:	27 96       	adiw	r28, 0x07	; 7
    1a6e:	e4 e0       	ldi	r30, 0x04	; 4
    1a70:	0c 94 96 12 	jmp	0x252c	; 0x252c <__epilogue_restores__+0x1c>

00001a74 <_ZN16PololuQTRSensors11emittersOffEv>:
    1a74:	fc 01       	movw	r30, r24
    1a76:	a4 85       	ldd	r26, Z+12	; 0x0c
    1a78:	b5 85       	ldd	r27, Z+13	; 0x0d
    1a7a:	10 97       	sbiw	r26, 0x00	; 0
    1a7c:	79 f0       	breq	.+30     	; 0x1a9c <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    1a7e:	8c 91       	ld	r24, X
    1a80:	91 85       	ldd	r25, Z+9	; 0x09
    1a82:	89 2b       	or	r24, r25
    1a84:	8c 93       	st	X, r24
    1a86:	a2 85       	ldd	r26, Z+10	; 0x0a
    1a88:	b3 85       	ldd	r27, Z+11	; 0x0b
    1a8a:	9c 91       	ld	r25, X
    1a8c:	81 85       	ldd	r24, Z+9	; 0x09
    1a8e:	80 95       	com	r24
    1a90:	89 23       	and	r24, r25
    1a92:	8c 93       	st	X, r24
    1a94:	88 ec       	ldi	r24, 0xC8	; 200
    1a96:	90 e0       	ldi	r25, 0x00	; 0
    1a98:	0e 94 c8 0c 	call	0x1990	; 0x1990 <delay_us>
    1a9c:	08 95       	ret

00001a9e <_ZN16PololuQTRSensors10emittersOnEv>:
    1a9e:	fc 01       	movw	r30, r24
    1aa0:	a4 85       	ldd	r26, Z+12	; 0x0c
    1aa2:	b5 85       	ldd	r27, Z+13	; 0x0d
    1aa4:	10 97       	sbiw	r26, 0x00	; 0
    1aa6:	71 f0       	breq	.+28     	; 0x1ac4 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    1aa8:	8c 91       	ld	r24, X
    1aaa:	91 85       	ldd	r25, Z+9	; 0x09
    1aac:	89 2b       	or	r24, r25
    1aae:	8c 93       	st	X, r24
    1ab0:	a2 85       	ldd	r26, Z+10	; 0x0a
    1ab2:	b3 85       	ldd	r27, Z+11	; 0x0b
    1ab4:	8c 91       	ld	r24, X
    1ab6:	91 85       	ldd	r25, Z+9	; 0x09
    1ab8:	89 2b       	or	r24, r25
    1aba:	8c 93       	st	X, r24
    1abc:	88 ec       	ldi	r24, 0xC8	; 200
    1abe:	90 e0       	ldi	r25, 0x00	; 0
    1ac0:	0e 94 c8 0c 	call	0x1990	; 0x1990 <delay_us>
    1ac4:	08 95       	ret

00001ac6 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    1ac6:	a7 e0       	ldi	r26, 0x07	; 7
    1ac8:	b0 e0       	ldi	r27, 0x00	; 0
    1aca:	e9 e6       	ldi	r30, 0x69	; 105
    1acc:	fd e0       	ldi	r31, 0x0D	; 13
    1ace:	0c 94 6f 12 	jmp	0x24de	; 0x24de <__prologue_saves__+0x6>
    1ad2:	7c 01       	movw	r14, r24
    1ad4:	4b 01       	movw	r8, r22
    1ad6:	64 2f       	mov	r22, r20
    1ad8:	39 01       	movw	r6, r18
    1ada:	40 2f       	mov	r20, r16
    1adc:	20 e0       	ldi	r18, 0x00	; 0
    1ade:	0e 94 0d 0d 	call	0x1a1a	; 0x1a1a <_ZN16PololuQTRSensors4initEhhh>
    1ae2:	87 01       	movw	r16, r14
    1ae4:	0f 5b       	subi	r16, 0xBF	; 191
    1ae6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ae8:	f8 01       	movw	r30, r16
    1aea:	10 82       	st	Z, r1
    1aec:	67 01       	movw	r12, r14
    1aee:	f2 e4       	ldi	r31, 0x42	; 66
    1af0:	cf 0e       	add	r12, r31
    1af2:	d1 1c       	adc	r13, r1
    1af4:	f6 01       	movw	r30, r12
    1af6:	10 82       	st	Z, r1
    1af8:	57 01       	movw	r10, r14
    1afa:	f3 e4       	ldi	r31, 0x43	; 67
    1afc:	af 0e       	add	r10, r31
    1afe:	b1 1c       	adc	r11, r1
    1b00:	f5 01       	movw	r30, r10
    1b02:	10 82       	st	Z, r1
    1b04:	f7 01       	movw	r30, r14
    1b06:	77 86       	std	Z+15, r7	; 0x0f
    1b08:	66 86       	std	Z+14, r6	; 0x0e
    1b0a:	51 2c       	mov	r5, r1
    1b0c:	f7 01       	movw	r30, r14
    1b0e:	80 85       	ldd	r24, Z+8	; 0x08
    1b10:	58 16       	cp	r5, r24
    1b12:	50 f5       	brcc	.+84     	; 0x1b68 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    1b14:	65 2c       	mov	r6, r5
    1b16:	71 2c       	mov	r7, r1
    1b18:	f4 01       	movw	r30, r8
    1b1a:	e6 0d       	add	r30, r6
    1b1c:	f7 1d       	adc	r31, r7
    1b1e:	60 81       	ld	r22, Z
    1b20:	ce 01       	movw	r24, r28
    1b22:	01 96       	adiw	r24, 0x01	; 1
    1b24:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1b28:	2f 81       	ldd	r18, Y+7	; 0x07
    1b2a:	f7 01       	movw	r30, r14
    1b2c:	e6 0d       	add	r30, r6
    1b2e:	f7 1d       	adc	r31, r7
    1b30:	21 8b       	std	Z+17, r18	; 0x11
    1b32:	89 81       	ldd	r24, Y+1	; 0x01
    1b34:	9a 81       	ldd	r25, Y+2	; 0x02
    1b36:	f3 01       	movw	r30, r6
    1b38:	ee 0f       	add	r30, r30
    1b3a:	ff 1f       	adc	r31, r31
    1b3c:	ee 0d       	add	r30, r14
    1b3e:	ff 1d       	adc	r31, r15
    1b40:	92 a3       	std	Z+34, r25	; 0x22
    1b42:	81 a3       	std	Z+33, r24	; 0x21
    1b44:	83 32       	cpi	r24, 0x23	; 35
    1b46:	91 05       	cpc	r25, r1
    1b48:	11 f4       	brne	.+4      	; 0x1b4e <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    1b4a:	f8 01       	movw	r30, r16
    1b4c:	08 c0       	rjmp	.+16     	; 0x1b5e <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    1b4e:	86 32       	cpi	r24, 0x26	; 38
    1b50:	91 05       	cpc	r25, r1
    1b52:	11 f4       	brne	.+4      	; 0x1b58 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    1b54:	f6 01       	movw	r30, r12
    1b56:	03 c0       	rjmp	.+6      	; 0x1b5e <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    1b58:	89 97       	sbiw	r24, 0x29	; 41
    1b5a:	21 f4       	brne	.+8      	; 0x1b64 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    1b5c:	f5 01       	movw	r30, r10
    1b5e:	80 81       	ld	r24, Z
    1b60:	82 2b       	or	r24, r18
    1b62:	80 83       	st	Z, r24
    1b64:	53 94       	inc	r5
    1b66:	d2 cf       	rjmp	.-92     	; 0x1b0c <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    1b68:	27 96       	adiw	r28, 0x07	; 7
    1b6a:	ef e0       	ldi	r30, 0x0F	; 15
    1b6c:	0c 94 8b 12 	jmp	0x2516	; 0x2516 <__epilogue_restores__+0x6>

00001b70 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1b70:	a0 e0       	ldi	r26, 0x00	; 0
    1b72:	b0 e0       	ldi	r27, 0x00	; 0
    1b74:	ee eb       	ldi	r30, 0xBE	; 190
    1b76:	fd e0       	ldi	r31, 0x0D	; 13
    1b78:	0c 94 71 12 	jmp	0x24e2	; 0x24e2 <__prologue_saves__+0xa>
    1b7c:	ec 01       	movw	r28, r24
    1b7e:	5b 01       	movw	r10, r22
    1b80:	6c 01       	movw	r12, r24
    1b82:	81 e4       	ldi	r24, 0x41	; 65
    1b84:	c8 0e       	add	r12, r24
    1b86:	d1 1c       	adc	r13, r1
    1b88:	f6 01       	movw	r30, r12
    1b8a:	80 80       	ld	r8, Z
    1b8c:	7e 01       	movw	r14, r28
    1b8e:	f2 e4       	ldi	r31, 0x42	; 66
    1b90:	ef 0e       	add	r14, r31
    1b92:	f1 1c       	adc	r15, r1
    1b94:	f7 01       	movw	r30, r14
    1b96:	70 80       	ld	r7, Z
    1b98:	8e 01       	movw	r16, r28
    1b9a:	0d 5b       	subi	r16, 0xBD	; 189
    1b9c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b9e:	f8 01       	movw	r30, r16
    1ba0:	90 80       	ld	r9, Z
    1ba2:	80 e0       	ldi	r24, 0x00	; 0
    1ba4:	98 85       	ldd	r25, Y+8	; 0x08
    1ba6:	89 17       	cp	r24, r25
    1ba8:	48 f4       	brcc	.+18     	; 0x1bbc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    1baa:	f5 01       	movw	r30, r10
    1bac:	e8 0f       	add	r30, r24
    1bae:	f1 1d       	adc	r31, r1
    1bb0:	e8 0f       	add	r30, r24
    1bb2:	f1 1d       	adc	r31, r1
    1bb4:	11 82       	std	Z+1, r1	; 0x01
    1bb6:	10 82       	st	Z, r1
    1bb8:	8f 5f       	subi	r24, 0xFF	; 255
    1bba:	f4 cf       	rjmp	.-24     	; 0x1ba4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    1bbc:	84 b1       	in	r24, 0x04	; 4
    1bbe:	f6 01       	movw	r30, r12
    1bc0:	90 81       	ld	r25, Z
    1bc2:	89 2b       	or	r24, r25
    1bc4:	84 b9       	out	0x04, r24	; 4
    1bc6:	87 b1       	in	r24, 0x07	; 7
    1bc8:	f7 01       	movw	r30, r14
    1bca:	90 81       	ld	r25, Z
    1bcc:	89 2b       	or	r24, r25
    1bce:	87 b9       	out	0x07, r24	; 7
    1bd0:	8a b1       	in	r24, 0x0a	; 10
    1bd2:	f8 01       	movw	r30, r16
    1bd4:	90 81       	ld	r25, Z
    1bd6:	89 2b       	or	r24, r25
    1bd8:	8a b9       	out	0x0a, r24	; 10
    1bda:	85 b1       	in	r24, 0x05	; 5
    1bdc:	f6 01       	movw	r30, r12
    1bde:	90 81       	ld	r25, Z
    1be0:	89 2b       	or	r24, r25
    1be2:	85 b9       	out	0x05, r24	; 5
    1be4:	88 b1       	in	r24, 0x08	; 8
    1be6:	f7 01       	movw	r30, r14
    1be8:	90 81       	ld	r25, Z
    1bea:	89 2b       	or	r24, r25
    1bec:	88 b9       	out	0x08, r24	; 8
    1bee:	8b b1       	in	r24, 0x0b	; 11
    1bf0:	f8 01       	movw	r30, r16
    1bf2:	90 81       	ld	r25, Z
    1bf4:	89 2b       	or	r24, r25
    1bf6:	8b b9       	out	0x0b, r24	; 11
    1bf8:	8a e0       	ldi	r24, 0x0A	; 10
    1bfa:	90 e0       	ldi	r25, 0x00	; 0
    1bfc:	0e 94 c8 0c 	call	0x1990	; 0x1990 <delay_us>
    1c00:	94 b1       	in	r25, 0x04	; 4
    1c02:	f6 01       	movw	r30, r12
    1c04:	80 81       	ld	r24, Z
    1c06:	80 95       	com	r24
    1c08:	89 23       	and	r24, r25
    1c0a:	84 b9       	out	0x04, r24	; 4
    1c0c:	97 b1       	in	r25, 0x07	; 7
    1c0e:	f7 01       	movw	r30, r14
    1c10:	80 81       	ld	r24, Z
    1c12:	80 95       	com	r24
    1c14:	89 23       	and	r24, r25
    1c16:	87 b9       	out	0x07, r24	; 7
    1c18:	9a b1       	in	r25, 0x0a	; 10
    1c1a:	f8 01       	movw	r30, r16
    1c1c:	80 81       	ld	r24, Z
    1c1e:	80 95       	com	r24
    1c20:	89 23       	and	r24, r25
    1c22:	8a b9       	out	0x0a, r24	; 10
    1c24:	95 b1       	in	r25, 0x05	; 5
    1c26:	f6 01       	movw	r30, r12
    1c28:	80 81       	ld	r24, Z
    1c2a:	80 95       	com	r24
    1c2c:	89 23       	and	r24, r25
    1c2e:	85 b9       	out	0x05, r24	; 5
    1c30:	98 b1       	in	r25, 0x08	; 8
    1c32:	f7 01       	movw	r30, r14
    1c34:	80 81       	ld	r24, Z
    1c36:	80 95       	com	r24
    1c38:	89 23       	and	r24, r25
    1c3a:	88 b9       	out	0x08, r24	; 8
    1c3c:	9b b1       	in	r25, 0x0b	; 11
    1c3e:	f8 01       	movw	r30, r16
    1c40:	80 81       	ld	r24, Z
    1c42:	80 95       	com	r24
    1c44:	89 23       	and	r24, r25
    1c46:	8b b9       	out	0x0b, r24	; 11
    1c48:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1c4c:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1c50:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1c54:	83 60       	ori	r24, 0x03	; 3
    1c56:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1c5a:	82 e0       	ldi	r24, 0x02	; 2
    1c5c:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1c60:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1c64:	80 e0       	ldi	r24, 0x00	; 0
    1c66:	90 e0       	ldi	r25, 0x00	; 0
    1c68:	2e 85       	ldd	r18, Y+14	; 0x0e
    1c6a:	3f 85       	ldd	r19, Y+15	; 0x0f
    1c6c:	82 17       	cp	r24, r18
    1c6e:	93 07       	cpc	r25, r19
    1c70:	20 f5       	brcc	.+72     	; 0x1cba <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    1c72:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1c76:	2c 2d       	mov	r18, r12
    1c78:	24 1b       	sub	r18, r20
    1c7a:	82 0f       	add	r24, r18
    1c7c:	91 1d       	adc	r25, r1
    1c7e:	03 b1       	in	r16, 0x03	; 3
    1c80:	08 11       	cpse	r16, r8
    1c82:	32 c0       	rjmp	.+100    	; 0x1ce8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1c84:	f6 b0       	in	r15, 0x06	; 6
    1c86:	f7 10       	cpse	r15, r7
    1c88:	2f c0       	rjmp	.+94     	; 0x1ce8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1c8a:	29 b1       	in	r18, 0x09	; 9
    1c8c:	29 11       	cpse	r18, r9
    1c8e:	2c c0       	rjmp	.+88     	; 0x1ce8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1c90:	10 c0       	rjmp	.+32     	; 0x1cb2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    1c92:	21 2f       	mov	r18, r17
    1c94:	30 e0       	ldi	r19, 0x00	; 0
    1c96:	a9 01       	movw	r20, r18
    1c98:	44 0f       	add	r20, r20
    1c9a:	55 1f       	adc	r21, r21
    1c9c:	f5 01       	movw	r30, r10
    1c9e:	e4 0f       	add	r30, r20
    1ca0:	f5 1f       	adc	r31, r21
    1ca2:	60 81       	ld	r22, Z
    1ca4:	71 81       	ldd	r23, Z+1	; 0x01
    1ca6:	67 2b       	or	r22, r23
    1ca8:	21 f1       	breq	.+72     	; 0x1cf2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    1caa:	1f 5f       	subi	r17, 0xFF	; 255
    1cac:	28 85       	ldd	r18, Y+8	; 0x08
    1cae:	12 17       	cp	r17, r18
    1cb0:	80 f3       	brcs	.-32     	; 0x1c92 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    1cb2:	7f 2c       	mov	r7, r15
    1cb4:	80 2e       	mov	r8, r16
    1cb6:	4c 2d       	mov	r20, r12
    1cb8:	d7 cf       	rjmp	.-82     	; 0x1c68 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    1cba:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1cbe:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1cc2:	20 e0       	ldi	r18, 0x00	; 0
    1cc4:	88 85       	ldd	r24, Y+8	; 0x08
    1cc6:	28 17       	cp	r18, r24
    1cc8:	30 f5       	brcc	.+76     	; 0x1d16 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    1cca:	f5 01       	movw	r30, r10
    1ccc:	e2 0f       	add	r30, r18
    1cce:	f1 1d       	adc	r31, r1
    1cd0:	e2 0f       	add	r30, r18
    1cd2:	f1 1d       	adc	r31, r1
    1cd4:	80 81       	ld	r24, Z
    1cd6:	91 81       	ldd	r25, Z+1	; 0x01
    1cd8:	89 2b       	or	r24, r25
    1cda:	21 f4       	brne	.+8      	; 0x1ce4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    1cdc:	8e 85       	ldd	r24, Y+14	; 0x0e
    1cde:	9f 85       	ldd	r25, Y+15	; 0x0f
    1ce0:	91 83       	std	Z+1, r25	; 0x01
    1ce2:	80 83       	st	Z, r24
    1ce4:	2f 5f       	subi	r18, 0xFF	; 255
    1ce6:	ee cf       	rjmp	.-36     	; 0x1cc4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    1ce8:	03 b1       	in	r16, 0x03	; 3
    1cea:	f6 b0       	in	r15, 0x06	; 6
    1cec:	99 b0       	in	r9, 0x09	; 9
    1cee:	10 e0       	ldi	r17, 0x00	; 0
    1cf0:	dd cf       	rjmp	.-70     	; 0x1cac <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    1cf2:	de 01       	movw	r26, r28
    1cf4:	a4 0f       	add	r26, r20
    1cf6:	b5 1f       	adc	r27, r21
    1cf8:	91 96       	adiw	r26, 0x21	; 33
    1cfa:	0d 90       	ld	r0, X+
    1cfc:	bc 91       	ld	r27, X
    1cfe:	a0 2d       	mov	r26, r0
    1d00:	4c 91       	ld	r20, X
    1d02:	de 01       	movw	r26, r28
    1d04:	a2 0f       	add	r26, r18
    1d06:	b3 1f       	adc	r27, r19
    1d08:	51 96       	adiw	r26, 0x11	; 17
    1d0a:	2c 91       	ld	r18, X
    1d0c:	42 23       	and	r20, r18
    1d0e:	69 f6       	brne	.-102    	; 0x1caa <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    1d10:	91 83       	std	Z+1, r25	; 0x01
    1d12:	80 83       	st	Z, r24
    1d14:	ca cf       	rjmp	.-108    	; 0x1caa <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    1d16:	cd b7       	in	r28, 0x3d	; 61
    1d18:	de b7       	in	r29, 0x3e	; 62
    1d1a:	ed e0       	ldi	r30, 0x0D	; 13
    1d1c:	0c 94 8d 12 	jmp	0x251a	; 0x251a <__epilogue_restores__+0xa>

00001d20 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    1d20:	ef 92       	push	r14
    1d22:	ff 92       	push	r15
    1d24:	0f 93       	push	r16
    1d26:	1f 93       	push	r17
    1d28:	cf 93       	push	r28
    1d2a:	df 93       	push	r29
    1d2c:	fc 01       	movw	r30, r24
    1d2e:	9b 01       	movw	r18, r22
    1d30:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1d34:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1d38:	47 b1       	in	r20, 0x07	; 7
    1d3a:	18 b1       	in	r17, 0x08	; 8
    1d3c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1d40:	86 fd       	sbrc	r24, 6
    1d42:	fc cf       	rjmp	.-8      	; 0x1d3c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    1d44:	80 e0       	ldi	r24, 0x00	; 0
    1d46:	90 85       	ldd	r25, Z+8	; 0x08
    1d48:	89 17       	cp	r24, r25
    1d4a:	48 f4       	brcc	.+18     	; 0x1d5e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    1d4c:	d9 01       	movw	r26, r18
    1d4e:	a8 0f       	add	r26, r24
    1d50:	b1 1d       	adc	r27, r1
    1d52:	a8 0f       	add	r26, r24
    1d54:	b1 1d       	adc	r27, r1
    1d56:	1d 92       	st	X+, r1
    1d58:	1c 92       	st	X, r1
    1d5a:	8f 5f       	subi	r24, 0xFF	; 255
    1d5c:	f4 cf       	rjmp	.-24     	; 0x1d46 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    1d5e:	97 b1       	in	r25, 0x07	; 7
    1d60:	82 a1       	ldd	r24, Z+34	; 0x22
    1d62:	80 95       	com	r24
    1d64:	89 23       	and	r24, r25
    1d66:	87 b9       	out	0x07, r24	; 7
    1d68:	98 b1       	in	r25, 0x08	; 8
    1d6a:	82 a1       	ldd	r24, Z+34	; 0x22
    1d6c:	80 95       	com	r24
    1d6e:	89 23       	and	r24, r25
    1d70:	88 b9       	out	0x08, r24	; 8
    1d72:	87 e8       	ldi	r24, 0x87	; 135
    1d74:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1d78:	e1 2c       	mov	r14, r1
    1d7a:	81 a1       	ldd	r24, Z+33	; 0x21
    1d7c:	e8 16       	cp	r14, r24
    1d7e:	10 f0       	brcs	.+4      	; 0x1d84 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    1d80:	e1 2c       	mov	r14, r1
    1d82:	29 c0       	rjmp	.+82     	; 0x1dd6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    1d84:	50 e0       	ldi	r21, 0x00	; 0
    1d86:	80 85       	ldd	r24, Z+8	; 0x08
    1d88:	58 17       	cp	r21, r24
    1d8a:	18 f5       	brcc	.+70     	; 0x1dd2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1d8c:	a5 2f       	mov	r26, r21
    1d8e:	b0 e0       	ldi	r27, 0x00	; 0
    1d90:	ef 01       	movw	r28, r30
    1d92:	ca 0f       	add	r28, r26
    1d94:	db 1f       	adc	r29, r27
    1d96:	89 89       	ldd	r24, Y+17	; 0x11
    1d98:	80 64       	ori	r24, 0x40	; 64
    1d9a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1d9e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1da2:	80 64       	ori	r24, 0x40	; 64
    1da4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1da8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1dac:	86 fd       	sbrc	r24, 6
    1dae:	fc cf       	rjmp	.-8      	; 0x1da8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    1db0:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    1db4:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1db8:	aa 0f       	add	r26, r26
    1dba:	bb 1f       	adc	r27, r27
    1dbc:	a2 0f       	add	r26, r18
    1dbe:	b3 1f       	adc	r27, r19
    1dc0:	8d 91       	ld	r24, X+
    1dc2:	9c 91       	ld	r25, X
    1dc4:	11 97       	sbiw	r26, 0x01	; 1
    1dc6:	86 0f       	add	r24, r22
    1dc8:	97 1f       	adc	r25, r23
    1dca:	8d 93       	st	X+, r24
    1dcc:	9c 93       	st	X, r25
    1dce:	5f 5f       	subi	r21, 0xFF	; 255
    1dd0:	da cf       	rjmp	.-76     	; 0x1d86 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    1dd2:	e3 94       	inc	r14
    1dd4:	d2 cf       	rjmp	.-92     	; 0x1d7a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    1dd6:	80 85       	ldd	r24, Z+8	; 0x08
    1dd8:	e8 16       	cp	r14, r24
    1dda:	a0 f4       	brcc	.+40     	; 0x1e04 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    1ddc:	e9 01       	movw	r28, r18
    1dde:	ce 0d       	add	r28, r14
    1de0:	d1 1d       	adc	r29, r1
    1de2:	ce 0d       	add	r28, r14
    1de4:	d1 1d       	adc	r29, r1
    1de6:	61 a1       	ldd	r22, Z+33	; 0x21
    1de8:	70 e0       	ldi	r23, 0x00	; 0
    1dea:	cb 01       	movw	r24, r22
    1dec:	95 95       	asr	r25
    1dee:	87 95       	ror	r24
    1df0:	a8 81       	ld	r26, Y
    1df2:	b9 81       	ldd	r27, Y+1	; 0x01
    1df4:	8a 0f       	add	r24, r26
    1df6:	9b 1f       	adc	r25, r27
    1df8:	0e 94 db 11 	call	0x23b6	; 0x23b6 <__udivmodhi4>
    1dfc:	79 83       	std	Y+1, r23	; 0x01
    1dfe:	68 83       	st	Y, r22
    1e00:	e3 94       	inc	r14
    1e02:	e9 cf       	rjmp	.-46     	; 0x1dd6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    1e04:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1e08:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1e0c:	18 b9       	out	0x08, r17	; 8
    1e0e:	47 b9       	out	0x07, r20	; 7
    1e10:	cd b7       	in	r28, 0x3d	; 61
    1e12:	de b7       	in	r29, 0x3e	; 62
    1e14:	e6 e0       	ldi	r30, 0x06	; 6
    1e16:	0c 94 94 12 	jmp	0x2528	; 0x2528 <__epilogue_restores__+0x18>

00001e1a <_ZN16PololuQTRSensors4readEPjh>:
    1e1a:	a0 e2       	ldi	r26, 0x20	; 32
    1e1c:	b0 e0       	ldi	r27, 0x00	; 0
    1e1e:	e3 e1       	ldi	r30, 0x13	; 19
    1e20:	ff e0       	ldi	r31, 0x0F	; 15
    1e22:	0c 94 77 12 	jmp	0x24ee	; 0x24ee <__prologue_saves__+0x16>
    1e26:	8c 01       	movw	r16, r24
    1e28:	7b 01       	movw	r14, r22
    1e2a:	d4 2e       	mov	r13, r20
    1e2c:	8f ef       	ldi	r24, 0xFF	; 255
    1e2e:	84 0f       	add	r24, r20
    1e30:	82 30       	cpi	r24, 0x02	; 2
    1e32:	18 f4       	brcc	.+6      	; 0x1e3a <_ZN16PololuQTRSensors4readEPjh+0x20>
    1e34:	c8 01       	movw	r24, r16
    1e36:	0e 94 4f 0d 	call	0x1a9e	; 0x1a9e <_ZN16PololuQTRSensors10emittersOnEv>
    1e3a:	d8 01       	movw	r26, r16
    1e3c:	50 96       	adiw	r26, 0x10	; 16
    1e3e:	8c 91       	ld	r24, X
    1e40:	b7 01       	movw	r22, r14
    1e42:	81 11       	cpse	r24, r1
    1e44:	10 c0       	rjmp	.+32     	; 0x1e66 <_ZN16PololuQTRSensors4readEPjh+0x4c>
    1e46:	c8 01       	movw	r24, r16
    1e48:	0e 94 b8 0d 	call	0x1b70	; 0x1b70 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1e4c:	c8 01       	movw	r24, r16
    1e4e:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <_ZN16PololuQTRSensors11emittersOffEv>
    1e52:	b2 e0       	ldi	r27, 0x02	; 2
    1e54:	db 12       	cpse	r13, r27
    1e56:	3a c0       	rjmp	.+116    	; 0x1ecc <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1e58:	be 01       	movw	r22, r28
    1e5a:	6f 5f       	subi	r22, 0xFF	; 255
    1e5c:	7f 4f       	sbci	r23, 0xFF	; 255
    1e5e:	c8 01       	movw	r24, r16
    1e60:	0e 94 b8 0d 	call	0x1b70	; 0x1b70 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1e64:	0f c0       	rjmp	.+30     	; 0x1e84 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    1e66:	c8 01       	movw	r24, r16
    1e68:	0e 94 90 0e 	call	0x1d20	; 0x1d20 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1e6c:	c8 01       	movw	r24, r16
    1e6e:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <_ZN16PololuQTRSensors11emittersOffEv>
    1e72:	e2 e0       	ldi	r30, 0x02	; 2
    1e74:	de 12       	cpse	r13, r30
    1e76:	2a c0       	rjmp	.+84     	; 0x1ecc <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1e78:	be 01       	movw	r22, r28
    1e7a:	6f 5f       	subi	r22, 0xFF	; 255
    1e7c:	7f 4f       	sbci	r23, 0xFF	; 255
    1e7e:	c8 01       	movw	r24, r16
    1e80:	0e 94 90 0e 	call	0x1d20	; 0x1d20 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1e84:	40 e0       	ldi	r20, 0x00	; 0
    1e86:	f8 01       	movw	r30, r16
    1e88:	80 85       	ldd	r24, Z+8	; 0x08
    1e8a:	48 17       	cp	r20, r24
    1e8c:	f8 f4       	brcc	.+62     	; 0x1ecc <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1e8e:	84 2f       	mov	r24, r20
    1e90:	90 e0       	ldi	r25, 0x00	; 0
    1e92:	88 0f       	add	r24, r24
    1e94:	99 1f       	adc	r25, r25
    1e96:	f7 01       	movw	r30, r14
    1e98:	e8 0f       	add	r30, r24
    1e9a:	f9 1f       	adc	r31, r25
    1e9c:	21 e0       	ldi	r18, 0x01	; 1
    1e9e:	30 e0       	ldi	r19, 0x00	; 0
    1ea0:	2c 0f       	add	r18, r28
    1ea2:	3d 1f       	adc	r19, r29
    1ea4:	82 0f       	add	r24, r18
    1ea6:	93 1f       	adc	r25, r19
    1ea8:	d8 01       	movw	r26, r16
    1eaa:	1e 96       	adiw	r26, 0x0e	; 14
    1eac:	2d 91       	ld	r18, X+
    1eae:	3c 91       	ld	r19, X
    1eb0:	1f 97       	sbiw	r26, 0x0f	; 15
    1eb2:	dc 01       	movw	r26, r24
    1eb4:	8d 91       	ld	r24, X+
    1eb6:	9c 91       	ld	r25, X
    1eb8:	28 1b       	sub	r18, r24
    1eba:	39 0b       	sbc	r19, r25
    1ebc:	80 81       	ld	r24, Z
    1ebe:	91 81       	ldd	r25, Z+1	; 0x01
    1ec0:	82 0f       	add	r24, r18
    1ec2:	93 1f       	adc	r25, r19
    1ec4:	91 83       	std	Z+1, r25	; 0x01
    1ec6:	80 83       	st	Z, r24
    1ec8:	4f 5f       	subi	r20, 0xFF	; 255
    1eca:	dd cf       	rjmp	.-70     	; 0x1e86 <_ZN16PololuQTRSensors4readEPjh+0x6c>
    1ecc:	a0 96       	adiw	r28, 0x20	; 32
    1ece:	e7 e0       	ldi	r30, 0x07	; 7
    1ed0:	0c 94 93 12 	jmp	0x2526	; 0x2526 <__epilogue_restores__+0x16>

00001ed4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    1ed4:	2f 92       	push	r2
    1ed6:	3f 92       	push	r3
    1ed8:	5f 92       	push	r5
    1eda:	6f 92       	push	r6
    1edc:	7f 92       	push	r7
    1ede:	8f 92       	push	r8
    1ee0:	9f 92       	push	r9
    1ee2:	af 92       	push	r10
    1ee4:	bf 92       	push	r11
    1ee6:	cf 92       	push	r12
    1ee8:	df 92       	push	r13
    1eea:	ef 92       	push	r14
    1eec:	ff 92       	push	r15
    1eee:	0f 93       	push	r16
    1ef0:	1f 93       	push	r17
    1ef2:	cf 93       	push	r28
    1ef4:	df 93       	push	r29
    1ef6:	cd b7       	in	r28, 0x3d	; 61
    1ef8:	de b7       	in	r29, 0x3e	; 62
    1efa:	c0 56       	subi	r28, 0x60	; 96
    1efc:	d1 09       	sbc	r29, r1
    1efe:	0f b6       	in	r0, 0x3f	; 63
    1f00:	f8 94       	cli
    1f02:	de bf       	out	0x3e, r29	; 62
    1f04:	0f be       	out	0x3f, r0	; 63
    1f06:	cd bf       	out	0x3d, r28	; 61
    1f08:	8c 01       	movw	r16, r24
    1f0a:	4b 01       	movw	r8, r22
    1f0c:	5a 01       	movw	r10, r20
    1f0e:	52 2e       	mov	r5, r18
    1f10:	da 01       	movw	r26, r20
    1f12:	8d 91       	ld	r24, X+
    1f14:	9c 91       	ld	r25, X
    1f16:	89 2b       	or	r24, r25
    1f18:	31 f0       	breq	.+12     	; 0x1f26 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    1f1a:	f4 01       	movw	r30, r8
    1f1c:	80 81       	ld	r24, Z
    1f1e:	91 81       	ldd	r25, Z+1	; 0x01
    1f20:	89 2b       	or	r24, r25
    1f22:	f1 f4       	brne	.+60     	; 0x1f60 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1f24:	24 c0       	rjmp	.+72     	; 0x1f6e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    1f26:	d8 01       	movw	r26, r16
    1f28:	18 96       	adiw	r26, 0x08	; 8
    1f2a:	8c 91       	ld	r24, X
    1f2c:	90 e0       	ldi	r25, 0x00	; 0
    1f2e:	88 0f       	add	r24, r24
    1f30:	99 1f       	adc	r25, r25
    1f32:	0e 94 a3 12 	call	0x2546	; 0x2546 <malloc>
    1f36:	f5 01       	movw	r30, r10
    1f38:	91 83       	std	Z+1, r25	; 0x01
    1f3a:	80 83       	st	Z, r24
    1f3c:	00 97       	sbiw	r24, 0x00	; 0
    1f3e:	09 f4       	brne	.+2      	; 0x1f42 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    1f40:	b1 c0       	rjmp	.+354    	; 0x20a4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1f42:	fc 01       	movw	r30, r24
    1f44:	20 e0       	ldi	r18, 0x00	; 0
    1f46:	30 e0       	ldi	r19, 0x00	; 0
    1f48:	d8 01       	movw	r26, r16
    1f4a:	18 96       	adiw	r26, 0x08	; 8
    1f4c:	8c 91       	ld	r24, X
    1f4e:	90 e0       	ldi	r25, 0x00	; 0
    1f50:	28 17       	cp	r18, r24
    1f52:	39 07       	cpc	r19, r25
    1f54:	14 f7       	brge	.-60     	; 0x1f1a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    1f56:	11 92       	st	Z+, r1
    1f58:	11 92       	st	Z+, r1
    1f5a:	2f 5f       	subi	r18, 0xFF	; 255
    1f5c:	3f 4f       	sbci	r19, 0xFF	; 255
    1f5e:	f4 cf       	rjmp	.-24     	; 0x1f48 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    1f60:	e1 2c       	mov	r14, r1
    1f62:	f1 2c       	mov	r15, r1
    1f64:	6e 01       	movw	r12, r28
    1f66:	b1 e2       	ldi	r27, 0x21	; 33
    1f68:	cb 0e       	add	r12, r27
    1f6a:	d1 1c       	adc	r13, r1
    1f6c:	21 c0       	rjmp	.+66     	; 0x1fb0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    1f6e:	f8 01       	movw	r30, r16
    1f70:	80 85       	ldd	r24, Z+8	; 0x08
    1f72:	90 e0       	ldi	r25, 0x00	; 0
    1f74:	88 0f       	add	r24, r24
    1f76:	99 1f       	adc	r25, r25
    1f78:	0e 94 a3 12 	call	0x2546	; 0x2546 <malloc>
    1f7c:	d4 01       	movw	r26, r8
    1f7e:	8d 93       	st	X+, r24
    1f80:	9c 93       	st	X, r25
    1f82:	00 97       	sbiw	r24, 0x00	; 0
    1f84:	09 f4       	brne	.+2      	; 0x1f88 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    1f86:	8e c0       	rjmp	.+284    	; 0x20a4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1f88:	fc 01       	movw	r30, r24
    1f8a:	20 e0       	ldi	r18, 0x00	; 0
    1f8c:	30 e0       	ldi	r19, 0x00	; 0
    1f8e:	d8 01       	movw	r26, r16
    1f90:	18 96       	adiw	r26, 0x08	; 8
    1f92:	8c 91       	ld	r24, X
    1f94:	90 e0       	ldi	r25, 0x00	; 0
    1f96:	28 17       	cp	r18, r24
    1f98:	39 07       	cpc	r19, r25
    1f9a:	14 f7       	brge	.-60     	; 0x1f60 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1f9c:	d8 01       	movw	r26, r16
    1f9e:	1e 96       	adiw	r26, 0x0e	; 14
    1fa0:	8d 91       	ld	r24, X+
    1fa2:	9c 91       	ld	r25, X
    1fa4:	1f 97       	sbiw	r26, 0x0f	; 15
    1fa6:	81 93       	st	Z+, r24
    1fa8:	91 93       	st	Z+, r25
    1faa:	2f 5f       	subi	r18, 0xFF	; 255
    1fac:	3f 4f       	sbci	r19, 0xFF	; 255
    1fae:	ef cf       	rjmp	.-34     	; 0x1f8e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    1fb0:	45 2d       	mov	r20, r5
    1fb2:	be 01       	movw	r22, r28
    1fb4:	6f 5b       	subi	r22, 0xBF	; 191
    1fb6:	7f 4f       	sbci	r23, 0xFF	; 255
    1fb8:	c8 01       	movw	r24, r16
    1fba:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <_ZN16PololuQTRSensors4readEPjh>
    1fbe:	f8 01       	movw	r30, r16
    1fc0:	60 84       	ldd	r6, Z+8	; 0x08
    1fc2:	71 2c       	mov	r7, r1
    1fc4:	fe 01       	movw	r30, r28
    1fc6:	ef 5b       	subi	r30, 0xBF	; 191
    1fc8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fca:	c6 01       	movw	r24, r12
    1fcc:	9e 01       	movw	r18, r28
    1fce:	2f 5f       	subi	r18, 0xFF	; 255
    1fd0:	3f 4f       	sbci	r19, 0xFF	; 255
    1fd2:	19 01       	movw	r2, r18
    1fd4:	20 e0       	ldi	r18, 0x00	; 0
    1fd6:	30 e0       	ldi	r19, 0x00	; 0
    1fd8:	26 15       	cp	r18, r6
    1fda:	37 05       	cpc	r19, r7
    1fdc:	4c f5       	brge	.+82     	; 0x2030 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    1fde:	e1 14       	cp	r14, r1
    1fe0:	f1 04       	cpc	r15, r1
    1fe2:	89 f0       	breq	.+34     	; 0x2006 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1fe4:	dc 01       	movw	r26, r24
    1fe6:	6d 91       	ld	r22, X+
    1fe8:	7c 91       	ld	r23, X
    1fea:	40 81       	ld	r20, Z
    1fec:	51 81       	ldd	r21, Z+1	; 0x01
    1fee:	64 17       	cp	r22, r20
    1ff0:	75 07       	cpc	r23, r21
    1ff2:	48 f0       	brcs	.+18     	; 0x2006 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1ff4:	d1 01       	movw	r26, r2
    1ff6:	6d 91       	ld	r22, X+
    1ff8:	7c 91       	ld	r23, X
    1ffa:	40 81       	ld	r20, Z
    1ffc:	51 81       	ldd	r21, Z+1	; 0x01
    1ffe:	46 17       	cp	r20, r22
    2000:	57 07       	cpc	r21, r23
    2002:	48 f0       	brcs	.+18     	; 0x2016 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    2004:	0d c0       	rjmp	.+26     	; 0x2020 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    2006:	40 81       	ld	r20, Z
    2008:	51 81       	ldd	r21, Z+1	; 0x01
    200a:	dc 01       	movw	r26, r24
    200c:	4d 93       	st	X+, r20
    200e:	5c 93       	st	X, r21
    2010:	e1 14       	cp	r14, r1
    2012:	f1 04       	cpc	r15, r1
    2014:	79 f7       	brne	.-34     	; 0x1ff4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    2016:	40 81       	ld	r20, Z
    2018:	51 81       	ldd	r21, Z+1	; 0x01
    201a:	d1 01       	movw	r26, r2
    201c:	4d 93       	st	X+, r20
    201e:	5c 93       	st	X, r21
    2020:	2f 5f       	subi	r18, 0xFF	; 255
    2022:	3f 4f       	sbci	r19, 0xFF	; 255
    2024:	b2 e0       	ldi	r27, 0x02	; 2
    2026:	2b 0e       	add	r2, r27
    2028:	31 1c       	adc	r3, r1
    202a:	32 96       	adiw	r30, 0x02	; 2
    202c:	02 96       	adiw	r24, 0x02	; 2
    202e:	d4 cf       	rjmp	.-88     	; 0x1fd8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    2030:	ef ef       	ldi	r30, 0xFF	; 255
    2032:	ee 1a       	sub	r14, r30
    2034:	fe 0a       	sbc	r15, r30
    2036:	fa e0       	ldi	r31, 0x0A	; 10
    2038:	ef 16       	cp	r14, r31
    203a:	f1 04       	cpc	r15, r1
    203c:	09 f0       	breq	.+2      	; 0x2040 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    203e:	b8 cf       	rjmp	.-144    	; 0x1fb0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    2040:	9e 01       	movw	r18, r28
    2042:	2f 5f       	subi	r18, 0xFF	; 255
    2044:	3f 4f       	sbci	r19, 0xFF	; 255
    2046:	79 01       	movw	r14, r18
    2048:	36 01       	movw	r6, r12
    204a:	80 e0       	ldi	r24, 0x00	; 0
    204c:	90 e0       	ldi	r25, 0x00	; 0
    204e:	f8 01       	movw	r30, r16
    2050:	20 85       	ldd	r18, Z+8	; 0x08
    2052:	30 e0       	ldi	r19, 0x00	; 0
    2054:	82 17       	cp	r24, r18
    2056:	93 07       	cpc	r25, r19
    2058:	2c f5       	brge	.+74     	; 0x20a4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    205a:	d7 01       	movw	r26, r14
    205c:	2d 91       	ld	r18, X+
    205e:	3d 91       	ld	r19, X+
    2060:	7d 01       	movw	r14, r26
    2062:	b3 01       	movw	r22, r6
    2064:	6c 19       	sub	r22, r12
    2066:	7d 09       	sbc	r23, r13
    2068:	d5 01       	movw	r26, r10
    206a:	ed 91       	ld	r30, X+
    206c:	fc 91       	ld	r31, X
    206e:	e6 0f       	add	r30, r22
    2070:	f7 1f       	adc	r31, r23
    2072:	40 81       	ld	r20, Z
    2074:	51 81       	ldd	r21, Z+1	; 0x01
    2076:	42 17       	cp	r20, r18
    2078:	53 07       	cpc	r21, r19
    207a:	10 f4       	brcc	.+4      	; 0x2080 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    207c:	31 83       	std	Z+1, r19	; 0x01
    207e:	20 83       	st	Z, r18
    2080:	f3 01       	movw	r30, r6
    2082:	21 91       	ld	r18, Z+
    2084:	31 91       	ld	r19, Z+
    2086:	3f 01       	movw	r6, r30
    2088:	d4 01       	movw	r26, r8
    208a:	ed 91       	ld	r30, X+
    208c:	fc 91       	ld	r31, X
    208e:	e6 0f       	add	r30, r22
    2090:	f7 1f       	adc	r31, r23
    2092:	40 81       	ld	r20, Z
    2094:	51 81       	ldd	r21, Z+1	; 0x01
    2096:	24 17       	cp	r18, r20
    2098:	35 07       	cpc	r19, r21
    209a:	10 f4       	brcc	.+4      	; 0x20a0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    209c:	31 83       	std	Z+1, r19	; 0x01
    209e:	20 83       	st	Z, r18
    20a0:	01 96       	adiw	r24, 0x01	; 1
    20a2:	d5 cf       	rjmp	.-86     	; 0x204e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    20a4:	c0 5a       	subi	r28, 0xA0	; 160
    20a6:	df 4f       	sbci	r29, 0xFF	; 255
    20a8:	0f b6       	in	r0, 0x3f	; 63
    20aa:	f8 94       	cli
    20ac:	de bf       	out	0x3e, r29	; 62
    20ae:	0f be       	out	0x3f, r0	; 63
    20b0:	cd bf       	out	0x3d, r28	; 61
    20b2:	df 91       	pop	r29
    20b4:	cf 91       	pop	r28
    20b6:	1f 91       	pop	r17
    20b8:	0f 91       	pop	r16
    20ba:	ff 90       	pop	r15
    20bc:	ef 90       	pop	r14
    20be:	df 90       	pop	r13
    20c0:	cf 90       	pop	r12
    20c2:	bf 90       	pop	r11
    20c4:	af 90       	pop	r10
    20c6:	9f 90       	pop	r9
    20c8:	8f 90       	pop	r8
    20ca:	7f 90       	pop	r7
    20cc:	6f 90       	pop	r6
    20ce:	5f 90       	pop	r5
    20d0:	3f 90       	pop	r3
    20d2:	2f 90       	pop	r2
    20d4:	08 95       	ret

000020d6 <_ZN16PololuQTRSensors9calibrateEh>:
    20d6:	1f 93       	push	r17
    20d8:	cf 93       	push	r28
    20da:	df 93       	push	r29
    20dc:	ec 01       	movw	r28, r24
    20de:	16 2f       	mov	r17, r22
    20e0:	8f ef       	ldi	r24, 0xFF	; 255
    20e2:	86 0f       	add	r24, r22
    20e4:	82 30       	cpi	r24, 0x02	; 2
    20e6:	18 f0       	brcs	.+6      	; 0x20ee <_ZN16PololuQTRSensors9calibrateEh+0x18>
    20e8:	66 23       	and	r22, r22
    20ea:	59 f0       	breq	.+22     	; 0x2102 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    20ec:	14 c0       	rjmp	.+40     	; 0x2116 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    20ee:	21 e0       	ldi	r18, 0x01	; 1
    20f0:	ae 01       	movw	r20, r28
    20f2:	4e 5f       	subi	r20, 0xFE	; 254
    20f4:	5f 4f       	sbci	r21, 0xFF	; 255
    20f6:	be 01       	movw	r22, r28
    20f8:	ce 01       	movw	r24, r28
    20fa:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    20fe:	12 30       	cpi	r17, 0x02	; 2
    2100:	51 f4       	brne	.+20     	; 0x2116 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    2102:	ae 01       	movw	r20, r28
    2104:	4a 5f       	subi	r20, 0xFA	; 250
    2106:	5f 4f       	sbci	r21, 0xFF	; 255
    2108:	be 01       	movw	r22, r28
    210a:	6c 5f       	subi	r22, 0xFC	; 252
    210c:	7f 4f       	sbci	r23, 0xFF	; 255
    210e:	20 e0       	ldi	r18, 0x00	; 0
    2110:	ce 01       	movw	r24, r28
    2112:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    2116:	df 91       	pop	r29
    2118:	cf 91       	pop	r28
    211a:	1f 91       	pop	r17
    211c:	08 95       	ret

0000211e <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    211e:	a0 e0       	ldi	r26, 0x00	; 0
    2120:	b0 e0       	ldi	r27, 0x00	; 0
    2122:	e5 e9       	ldi	r30, 0x95	; 149
    2124:	f0 e1       	ldi	r31, 0x10	; 16
    2126:	0c 94 75 12 	jmp	0x24ea	; 0x24ea <__prologue_saves__+0x12>
    212a:	ec 01       	movw	r28, r24
    212c:	8b 01       	movw	r16, r22
    212e:	b4 2e       	mov	r11, r20
    2130:	84 2f       	mov	r24, r20
    2132:	8d 7f       	andi	r24, 0xFD	; 253
    2134:	51 f4       	brne	.+20     	; 0x214a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    2136:	8c 81       	ldd	r24, Y+4	; 0x04
    2138:	9d 81       	ldd	r25, Y+5	; 0x05
    213a:	89 2b       	or	r24, r25
    213c:	09 f4       	brne	.+2      	; 0x2140 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    213e:	97 c0       	rjmp	.+302    	; 0x226e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    2140:	8e 81       	ldd	r24, Y+6	; 0x06
    2142:	9f 81       	ldd	r25, Y+7	; 0x07
    2144:	89 2b       	or	r24, r25
    2146:	09 f4       	brne	.+2      	; 0x214a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    2148:	92 c0       	rjmp	.+292    	; 0x226e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    214a:	8f ef       	ldi	r24, 0xFF	; 255
    214c:	8b 0d       	add	r24, r11
    214e:	82 30       	cpi	r24, 0x02	; 2
    2150:	50 f4       	brcc	.+20     	; 0x2166 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    2152:	88 81       	ld	r24, Y
    2154:	99 81       	ldd	r25, Y+1	; 0x01
    2156:	89 2b       	or	r24, r25
    2158:	09 f4       	brne	.+2      	; 0x215c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    215a:	89 c0       	rjmp	.+274    	; 0x226e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    215c:	8a 81       	ldd	r24, Y+2	; 0x02
    215e:	9b 81       	ldd	r25, Y+3	; 0x03
    2160:	89 2b       	or	r24, r25
    2162:	09 f4       	brne	.+2      	; 0x2166 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    2164:	84 c0       	rjmp	.+264    	; 0x226e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    2166:	4b 2d       	mov	r20, r11
    2168:	b8 01       	movw	r22, r16
    216a:	ce 01       	movw	r24, r28
    216c:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <_ZN16PololuQTRSensors4readEPjh>
    2170:	78 01       	movw	r14, r16
    2172:	00 e0       	ldi	r16, 0x00	; 0
    2174:	10 e0       	ldi	r17, 0x00	; 0
    2176:	c1 2c       	mov	r12, r1
    2178:	d1 2c       	mov	r13, r1
    217a:	88 85       	ldd	r24, Y+8	; 0x08
    217c:	90 e0       	ldi	r25, 0x00	; 0
    217e:	c8 16       	cp	r12, r24
    2180:	d9 06       	cpc	r13, r25
    2182:	0c f0       	brlt	.+2      	; 0x2186 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    2184:	74 c0       	rjmp	.+232    	; 0x226e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    2186:	81 e0       	ldi	r24, 0x01	; 1
    2188:	b8 12       	cpse	r11, r24
    218a:	0a c0       	rjmp	.+20     	; 0x21a0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    218c:	ea 81       	ldd	r30, Y+2	; 0x02
    218e:	fb 81       	ldd	r31, Y+3	; 0x03
    2190:	e0 0f       	add	r30, r16
    2192:	f1 1f       	adc	r31, r17
    2194:	01 90       	ld	r0, Z+
    2196:	f0 81       	ld	r31, Z
    2198:	e0 2d       	mov	r30, r0
    219a:	a8 81       	ld	r26, Y
    219c:	b9 81       	ldd	r27, Y+1	; 0x01
    219e:	0d c0       	rjmp	.+26     	; 0x21ba <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    21a0:	8c 81       	ldd	r24, Y+4	; 0x04
    21a2:	9d 81       	ldd	r25, Y+5	; 0x05
    21a4:	2e 81       	ldd	r18, Y+6	; 0x06
    21a6:	3f 81       	ldd	r19, Y+7	; 0x07
    21a8:	b1 10       	cpse	r11, r1
    21aa:	0c c0       	rjmp	.+24     	; 0x21c4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    21ac:	f9 01       	movw	r30, r18
    21ae:	e0 0f       	add	r30, r16
    21b0:	f1 1f       	adc	r31, r17
    21b2:	01 90       	ld	r0, Z+
    21b4:	f0 81       	ld	r31, Z
    21b6:	e0 2d       	mov	r30, r0
    21b8:	dc 01       	movw	r26, r24
    21ba:	a0 0f       	add	r26, r16
    21bc:	b1 1f       	adc	r27, r17
    21be:	8d 91       	ld	r24, X+
    21c0:	9c 91       	ld	r25, X
    21c2:	28 c0       	rjmp	.+80     	; 0x2214 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    21c4:	fc 01       	movw	r30, r24
    21c6:	e0 0f       	add	r30, r16
    21c8:	f1 1f       	adc	r31, r17
    21ca:	40 81       	ld	r20, Z
    21cc:	51 81       	ldd	r21, Z+1	; 0x01
    21ce:	e8 81       	ld	r30, Y
    21d0:	f9 81       	ldd	r31, Y+1	; 0x01
    21d2:	e0 0f       	add	r30, r16
    21d4:	f1 1f       	adc	r31, r17
    21d6:	80 81       	ld	r24, Z
    21d8:	91 81       	ldd	r25, Z+1	; 0x01
    21da:	ee 85       	ldd	r30, Y+14	; 0x0e
    21dc:	ff 85       	ldd	r31, Y+15	; 0x0f
    21de:	48 17       	cp	r20, r24
    21e0:	59 07       	cpc	r21, r25
    21e2:	10 f4       	brcc	.+4      	; 0x21e8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    21e4:	cf 01       	movw	r24, r30
    21e6:	04 c0       	rjmp	.+8      	; 0x21f0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    21e8:	8e 0f       	add	r24, r30
    21ea:	9f 1f       	adc	r25, r31
    21ec:	84 1b       	sub	r24, r20
    21ee:	95 0b       	sbc	r25, r21
    21f0:	d9 01       	movw	r26, r18
    21f2:	a0 0f       	add	r26, r16
    21f4:	b1 1f       	adc	r27, r17
    21f6:	2d 91       	ld	r18, X+
    21f8:	3c 91       	ld	r19, X
    21fa:	aa 81       	ldd	r26, Y+2	; 0x02
    21fc:	bb 81       	ldd	r27, Y+3	; 0x03
    21fe:	a0 0f       	add	r26, r16
    2200:	b1 1f       	adc	r27, r17
    2202:	4d 91       	ld	r20, X+
    2204:	5c 91       	ld	r21, X
    2206:	24 17       	cp	r18, r20
    2208:	35 07       	cpc	r19, r21
    220a:	20 f0       	brcs	.+8      	; 0x2214 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    220c:	e4 0f       	add	r30, r20
    220e:	f5 1f       	adc	r31, r21
    2210:	e2 1b       	sub	r30, r18
    2212:	f3 0b       	sbc	r31, r19
    2214:	e8 1b       	sub	r30, r24
    2216:	f9 0b       	sbc	r31, r25
    2218:	a9 f0       	breq	.+42     	; 0x2244 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    221a:	d7 01       	movw	r26, r14
    221c:	2d 91       	ld	r18, X+
    221e:	3c 91       	ld	r19, X
    2220:	40 e0       	ldi	r20, 0x00	; 0
    2222:	50 e0       	ldi	r21, 0x00	; 0
    2224:	28 1b       	sub	r18, r24
    2226:	39 0b       	sbc	r19, r25
    2228:	41 09       	sbc	r20, r1
    222a:	51 09       	sbc	r21, r1
    222c:	a8 ee       	ldi	r26, 0xE8	; 232
    222e:	b3 e0       	ldi	r27, 0x03	; 3
    2230:	0e 94 59 12 	call	0x24b2	; 0x24b2 <__muluhisi3>
    2234:	9f 01       	movw	r18, r30
    2236:	40 e0       	ldi	r20, 0x00	; 0
    2238:	50 e0       	ldi	r21, 0x00	; 0
    223a:	0e 94 25 12 	call	0x244a	; 0x244a <__divmodsi4>
    223e:	37 fd       	sbrc	r19, 7
    2240:	0a c0       	rjmp	.+20     	; 0x2256 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    2242:	02 c0       	rjmp	.+4      	; 0x2248 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    2244:	20 e0       	ldi	r18, 0x00	; 0
    2246:	30 e0       	ldi	r19, 0x00	; 0
    2248:	29 3e       	cpi	r18, 0xE9	; 233
    224a:	b3 e0       	ldi	r27, 0x03	; 3
    224c:	3b 07       	cpc	r19, r27
    224e:	2c f0       	brlt	.+10     	; 0x225a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    2250:	28 ee       	ldi	r18, 0xE8	; 232
    2252:	33 e0       	ldi	r19, 0x03	; 3
    2254:	02 c0       	rjmp	.+4      	; 0x225a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    2256:	20 e0       	ldi	r18, 0x00	; 0
    2258:	30 e0       	ldi	r19, 0x00	; 0
    225a:	f7 01       	movw	r30, r14
    225c:	21 93       	st	Z+, r18
    225e:	31 93       	st	Z+, r19
    2260:	7f 01       	movw	r14, r30
    2262:	ff ef       	ldi	r31, 0xFF	; 255
    2264:	cf 1a       	sub	r12, r31
    2266:	df 0a       	sbc	r13, r31
    2268:	0e 5f       	subi	r16, 0xFE	; 254
    226a:	1f 4f       	sbci	r17, 0xFF	; 255
    226c:	86 cf       	rjmp	.-244    	; 0x217a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    226e:	cd b7       	in	r28, 0x3d	; 61
    2270:	de b7       	in	r29, 0x3e	; 62
    2272:	e9 e0       	ldi	r30, 0x09	; 9
    2274:	0c 94 91 12 	jmp	0x2522	; 0x2522 <__epilogue_restores__+0x12>

00002278 <_ZN16PololuQTRSensors8readLineEPjhh>:
    2278:	a0 e0       	ldi	r26, 0x00	; 0
    227a:	b0 e0       	ldi	r27, 0x00	; 0
    227c:	e2 e4       	ldi	r30, 0x42	; 66
    227e:	f1 e1       	ldi	r31, 0x11	; 17
    2280:	0c 94 6c 12 	jmp	0x24d8	; 0x24d8 <__prologue_saves__>
    2284:	ec 01       	movw	r28, r24
    2286:	8b 01       	movw	r16, r22
    2288:	82 2e       	mov	r8, r18
    228a:	0e 94 8f 10 	call	0x211e	; 0x211e <_ZN16PololuQTRSensors14readCalibratedEPjh>
    228e:	28 84       	ldd	r2, Y+8	; 0x08
    2290:	e8 01       	movw	r28, r16
    2292:	41 2c       	mov	r4, r1
    2294:	51 2c       	mov	r5, r1
    2296:	32 01       	movw	r6, r4
    2298:	00 e0       	ldi	r16, 0x00	; 0
    229a:	10 e0       	ldi	r17, 0x00	; 0
    229c:	c1 2c       	mov	r12, r1
    229e:	d1 2c       	mov	r13, r1
    22a0:	76 01       	movw	r14, r12
    22a2:	31 2c       	mov	r3, r1
    22a4:	91 2c       	mov	r9, r1
    22a6:	58 ee       	ldi	r21, 0xE8	; 232
    22a8:	a5 2e       	mov	r10, r21
    22aa:	53 e0       	ldi	r21, 0x03	; 3
    22ac:	b5 2e       	mov	r11, r21
    22ae:	92 14       	cp	r9, r2
    22b0:	21 f1       	breq	.+72     	; 0x22fa <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    22b2:	e9 91       	ld	r30, Y+
    22b4:	f9 91       	ld	r31, Y+
    22b6:	88 20       	and	r8, r8
    22b8:	21 f0       	breq	.+8      	; 0x22c2 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    22ba:	c5 01       	movw	r24, r10
    22bc:	8e 1b       	sub	r24, r30
    22be:	9f 0b       	sbc	r25, r31
    22c0:	fc 01       	movw	r30, r24
    22c2:	e9 3c       	cpi	r30, 0xC9	; 201
    22c4:	f1 05       	cpc	r31, r1
    22c6:	24 f4       	brge	.+8      	; 0x22d0 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    22c8:	e3 33       	cpi	r30, 0x33	; 51
    22ca:	f1 05       	cpc	r31, r1
    22cc:	74 f0       	brlt	.+28     	; 0x22ea <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    22ce:	02 c0       	rjmp	.+4      	; 0x22d4 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    22d0:	33 24       	eor	r3, r3
    22d2:	33 94       	inc	r3
    22d4:	df 01       	movw	r26, r30
    22d6:	a3 01       	movw	r20, r6
    22d8:	92 01       	movw	r18, r4
    22da:	0e 94 64 12 	call	0x24c8	; 0x24c8 <__mulshisi3>
    22de:	c6 0e       	add	r12, r22
    22e0:	d7 1e       	adc	r13, r23
    22e2:	e8 1e       	adc	r14, r24
    22e4:	f9 1e       	adc	r15, r25
    22e6:	0e 0f       	add	r16, r30
    22e8:	1f 1f       	adc	r17, r31
    22ea:	93 94       	inc	r9
    22ec:	98 ee       	ldi	r25, 0xE8	; 232
    22ee:	49 0e       	add	r4, r25
    22f0:	93 e0       	ldi	r25, 0x03	; 3
    22f2:	59 1e       	adc	r5, r25
    22f4:	61 1c       	adc	r6, r1
    22f6:	71 1c       	adc	r7, r1
    22f8:	da cf       	rjmp	.-76     	; 0x22ae <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    22fa:	31 10       	cpse	r3, r1
    22fc:	1e c0       	rjmp	.+60     	; 0x233a <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    22fe:	49 2d       	mov	r20, r9
    2300:	50 e0       	ldi	r21, 0x00	; 0
    2302:	41 50       	subi	r20, 0x01	; 1
    2304:	51 09       	sbc	r21, r1
    2306:	24 ef       	ldi	r18, 0xF4	; 244
    2308:	31 e0       	ldi	r19, 0x01	; 1
    230a:	42 9f       	mul	r20, r18
    230c:	c0 01       	movw	r24, r0
    230e:	43 9f       	mul	r20, r19
    2310:	90 0d       	add	r25, r0
    2312:	52 9f       	mul	r21, r18
    2314:	90 0d       	add	r25, r0
    2316:	11 24       	eor	r1, r1
    2318:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    231c:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    2320:	28 17       	cp	r18, r24
    2322:	39 07       	cpc	r19, r25
    2324:	b4 f0       	brlt	.+44     	; 0x2352 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    2326:	88 ee       	ldi	r24, 0xE8	; 232
    2328:	93 e0       	ldi	r25, 0x03	; 3
    232a:	48 9f       	mul	r20, r24
    232c:	90 01       	movw	r18, r0
    232e:	49 9f       	mul	r20, r25
    2330:	30 0d       	add	r19, r0
    2332:	58 9f       	mul	r21, r24
    2334:	30 0d       	add	r19, r0
    2336:	11 24       	eor	r1, r1
    2338:	0e c0       	rjmp	.+28     	; 0x2356 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    233a:	98 01       	movw	r18, r16
    233c:	40 e0       	ldi	r20, 0x00	; 0
    233e:	50 e0       	ldi	r21, 0x00	; 0
    2340:	c7 01       	movw	r24, r14
    2342:	b6 01       	movw	r22, r12
    2344:	0e 94 03 12 	call	0x2406	; 0x2406 <__udivmodsi4>
    2348:	30 93 a6 01 	sts	0x01A6, r19	; 0x8001a6 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    234c:	20 93 a5 01 	sts	0x01A5, r18	; 0x8001a5 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    2350:	02 c0       	rjmp	.+4      	; 0x2356 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    2352:	20 e0       	ldi	r18, 0x00	; 0
    2354:	30 e0       	ldi	r19, 0x00	; 0
    2356:	c9 01       	movw	r24, r18
    2358:	cd b7       	in	r28, 0x3d	; 61
    235a:	de b7       	in	r29, 0x3e	; 62
    235c:	e2 e1       	ldi	r30, 0x12	; 18
    235e:	0c 94 88 12 	jmp	0x2510	; 0x2510 <__epilogue_restores__>

00002362 <_ZN16PololuQTRSensorsD1Ev>:
    2362:	cf 93       	push	r28
    2364:	df 93       	push	r29
    2366:	ec 01       	movw	r28, r24
    2368:	8a 81       	ldd	r24, Y+2	; 0x02
    236a:	9b 81       	ldd	r25, Y+3	; 0x03
    236c:	00 97       	sbiw	r24, 0x00	; 0
    236e:	11 f0       	breq	.+4      	; 0x2374 <_ZN16PololuQTRSensorsD1Ev+0x12>
    2370:	0e 94 3b 13 	call	0x2676	; 0x2676 <free>
    2374:	8e 81       	ldd	r24, Y+6	; 0x06
    2376:	9f 81       	ldd	r25, Y+7	; 0x07
    2378:	00 97       	sbiw	r24, 0x00	; 0
    237a:	11 f0       	breq	.+4      	; 0x2380 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    237c:	0e 94 3b 13 	call	0x2676	; 0x2676 <free>
    2380:	88 81       	ld	r24, Y
    2382:	99 81       	ldd	r25, Y+1	; 0x01
    2384:	00 97       	sbiw	r24, 0x00	; 0
    2386:	11 f0       	breq	.+4      	; 0x238c <_ZN16PololuQTRSensorsD1Ev+0x2a>
    2388:	0e 94 3b 13 	call	0x2676	; 0x2676 <free>
    238c:	8c 81       	ldd	r24, Y+4	; 0x04
    238e:	9d 81       	ldd	r25, Y+5	; 0x05
    2390:	00 97       	sbiw	r24, 0x00	; 0
    2392:	11 f0       	breq	.+4      	; 0x2398 <_ZN16PololuQTRSensorsD1Ev+0x36>
    2394:	0e 94 3b 13 	call	0x2676	; 0x2676 <free>
    2398:	df 91       	pop	r29
    239a:	cf 91       	pop	r28
    239c:	08 95       	ret

0000239e <__udivmodqi4>:
    239e:	99 1b       	sub	r25, r25
    23a0:	79 e0       	ldi	r23, 0x09	; 9
    23a2:	04 c0       	rjmp	.+8      	; 0x23ac <__udivmodqi4_ep>

000023a4 <__udivmodqi4_loop>:
    23a4:	99 1f       	adc	r25, r25
    23a6:	96 17       	cp	r25, r22
    23a8:	08 f0       	brcs	.+2      	; 0x23ac <__udivmodqi4_ep>
    23aa:	96 1b       	sub	r25, r22

000023ac <__udivmodqi4_ep>:
    23ac:	88 1f       	adc	r24, r24
    23ae:	7a 95       	dec	r23
    23b0:	c9 f7       	brne	.-14     	; 0x23a4 <__udivmodqi4_loop>
    23b2:	80 95       	com	r24
    23b4:	08 95       	ret

000023b6 <__udivmodhi4>:
    23b6:	aa 1b       	sub	r26, r26
    23b8:	bb 1b       	sub	r27, r27
    23ba:	51 e1       	ldi	r21, 0x11	; 17
    23bc:	07 c0       	rjmp	.+14     	; 0x23cc <__udivmodhi4_ep>

000023be <__udivmodhi4_loop>:
    23be:	aa 1f       	adc	r26, r26
    23c0:	bb 1f       	adc	r27, r27
    23c2:	a6 17       	cp	r26, r22
    23c4:	b7 07       	cpc	r27, r23
    23c6:	10 f0       	brcs	.+4      	; 0x23cc <__udivmodhi4_ep>
    23c8:	a6 1b       	sub	r26, r22
    23ca:	b7 0b       	sbc	r27, r23

000023cc <__udivmodhi4_ep>:
    23cc:	88 1f       	adc	r24, r24
    23ce:	99 1f       	adc	r25, r25
    23d0:	5a 95       	dec	r21
    23d2:	a9 f7       	brne	.-22     	; 0x23be <__udivmodhi4_loop>
    23d4:	80 95       	com	r24
    23d6:	90 95       	com	r25
    23d8:	bc 01       	movw	r22, r24
    23da:	cd 01       	movw	r24, r26
    23dc:	08 95       	ret

000023de <__divmodhi4>:
    23de:	97 fb       	bst	r25, 7
    23e0:	07 2e       	mov	r0, r23
    23e2:	16 f4       	brtc	.+4      	; 0x23e8 <__divmodhi4+0xa>
    23e4:	00 94       	com	r0
    23e6:	07 d0       	rcall	.+14     	; 0x23f6 <__divmodhi4_neg1>
    23e8:	77 fd       	sbrc	r23, 7
    23ea:	09 d0       	rcall	.+18     	; 0x23fe <__divmodhi4_neg2>
    23ec:	0e 94 db 11 	call	0x23b6	; 0x23b6 <__udivmodhi4>
    23f0:	07 fc       	sbrc	r0, 7
    23f2:	05 d0       	rcall	.+10     	; 0x23fe <__divmodhi4_neg2>
    23f4:	3e f4       	brtc	.+14     	; 0x2404 <__divmodhi4_exit>

000023f6 <__divmodhi4_neg1>:
    23f6:	90 95       	com	r25
    23f8:	81 95       	neg	r24
    23fa:	9f 4f       	sbci	r25, 0xFF	; 255
    23fc:	08 95       	ret

000023fe <__divmodhi4_neg2>:
    23fe:	70 95       	com	r23
    2400:	61 95       	neg	r22
    2402:	7f 4f       	sbci	r23, 0xFF	; 255

00002404 <__divmodhi4_exit>:
    2404:	08 95       	ret

00002406 <__udivmodsi4>:
    2406:	a1 e2       	ldi	r26, 0x21	; 33
    2408:	1a 2e       	mov	r1, r26
    240a:	aa 1b       	sub	r26, r26
    240c:	bb 1b       	sub	r27, r27
    240e:	fd 01       	movw	r30, r26
    2410:	0d c0       	rjmp	.+26     	; 0x242c <__udivmodsi4_ep>

00002412 <__udivmodsi4_loop>:
    2412:	aa 1f       	adc	r26, r26
    2414:	bb 1f       	adc	r27, r27
    2416:	ee 1f       	adc	r30, r30
    2418:	ff 1f       	adc	r31, r31
    241a:	a2 17       	cp	r26, r18
    241c:	b3 07       	cpc	r27, r19
    241e:	e4 07       	cpc	r30, r20
    2420:	f5 07       	cpc	r31, r21
    2422:	20 f0       	brcs	.+8      	; 0x242c <__udivmodsi4_ep>
    2424:	a2 1b       	sub	r26, r18
    2426:	b3 0b       	sbc	r27, r19
    2428:	e4 0b       	sbc	r30, r20
    242a:	f5 0b       	sbc	r31, r21

0000242c <__udivmodsi4_ep>:
    242c:	66 1f       	adc	r22, r22
    242e:	77 1f       	adc	r23, r23
    2430:	88 1f       	adc	r24, r24
    2432:	99 1f       	adc	r25, r25
    2434:	1a 94       	dec	r1
    2436:	69 f7       	brne	.-38     	; 0x2412 <__udivmodsi4_loop>
    2438:	60 95       	com	r22
    243a:	70 95       	com	r23
    243c:	80 95       	com	r24
    243e:	90 95       	com	r25
    2440:	9b 01       	movw	r18, r22
    2442:	ac 01       	movw	r20, r24
    2444:	bd 01       	movw	r22, r26
    2446:	cf 01       	movw	r24, r30
    2448:	08 95       	ret

0000244a <__divmodsi4>:
    244a:	05 2e       	mov	r0, r21
    244c:	97 fb       	bst	r25, 7
    244e:	1e f4       	brtc	.+6      	; 0x2456 <__divmodsi4+0xc>
    2450:	00 94       	com	r0
    2452:	0e 94 3c 12 	call	0x2478	; 0x2478 <__negsi2>
    2456:	57 fd       	sbrc	r21, 7
    2458:	07 d0       	rcall	.+14     	; 0x2468 <__divmodsi4_neg2>
    245a:	0e 94 03 12 	call	0x2406	; 0x2406 <__udivmodsi4>
    245e:	07 fc       	sbrc	r0, 7
    2460:	03 d0       	rcall	.+6      	; 0x2468 <__divmodsi4_neg2>
    2462:	4e f4       	brtc	.+18     	; 0x2476 <__divmodsi4_exit>
    2464:	0c 94 3c 12 	jmp	0x2478	; 0x2478 <__negsi2>

00002468 <__divmodsi4_neg2>:
    2468:	50 95       	com	r21
    246a:	40 95       	com	r20
    246c:	30 95       	com	r19
    246e:	21 95       	neg	r18
    2470:	3f 4f       	sbci	r19, 0xFF	; 255
    2472:	4f 4f       	sbci	r20, 0xFF	; 255
    2474:	5f 4f       	sbci	r21, 0xFF	; 255

00002476 <__divmodsi4_exit>:
    2476:	08 95       	ret

00002478 <__negsi2>:
    2478:	90 95       	com	r25
    247a:	80 95       	com	r24
    247c:	70 95       	com	r23
    247e:	61 95       	neg	r22
    2480:	7f 4f       	sbci	r23, 0xFF	; 255
    2482:	8f 4f       	sbci	r24, 0xFF	; 255
    2484:	9f 4f       	sbci	r25, 0xFF	; 255
    2486:	08 95       	ret

00002488 <__tablejump2__>:
    2488:	ee 0f       	add	r30, r30
    248a:	ff 1f       	adc	r31, r31
    248c:	05 90       	lpm	r0, Z+
    248e:	f4 91       	lpm	r31, Z
    2490:	e0 2d       	mov	r30, r0
    2492:	09 94       	ijmp

00002494 <__umulhisi3>:
    2494:	a2 9f       	mul	r26, r18
    2496:	b0 01       	movw	r22, r0
    2498:	b3 9f       	mul	r27, r19
    249a:	c0 01       	movw	r24, r0
    249c:	a3 9f       	mul	r26, r19
    249e:	70 0d       	add	r23, r0
    24a0:	81 1d       	adc	r24, r1
    24a2:	11 24       	eor	r1, r1
    24a4:	91 1d       	adc	r25, r1
    24a6:	b2 9f       	mul	r27, r18
    24a8:	70 0d       	add	r23, r0
    24aa:	81 1d       	adc	r24, r1
    24ac:	11 24       	eor	r1, r1
    24ae:	91 1d       	adc	r25, r1
    24b0:	08 95       	ret

000024b2 <__muluhisi3>:
    24b2:	0e 94 4a 12 	call	0x2494	; 0x2494 <__umulhisi3>
    24b6:	a5 9f       	mul	r26, r21
    24b8:	90 0d       	add	r25, r0
    24ba:	b4 9f       	mul	r27, r20
    24bc:	90 0d       	add	r25, r0
    24be:	a4 9f       	mul	r26, r20
    24c0:	80 0d       	add	r24, r0
    24c2:	91 1d       	adc	r25, r1
    24c4:	11 24       	eor	r1, r1
    24c6:	08 95       	ret

000024c8 <__mulshisi3>:
    24c8:	b7 ff       	sbrs	r27, 7
    24ca:	0c 94 59 12 	jmp	0x24b2	; 0x24b2 <__muluhisi3>

000024ce <__mulohisi3>:
    24ce:	0e 94 59 12 	call	0x24b2	; 0x24b2 <__muluhisi3>
    24d2:	82 1b       	sub	r24, r18
    24d4:	93 0b       	sbc	r25, r19
    24d6:	08 95       	ret

000024d8 <__prologue_saves__>:
    24d8:	2f 92       	push	r2
    24da:	3f 92       	push	r3
    24dc:	4f 92       	push	r4
    24de:	5f 92       	push	r5
    24e0:	6f 92       	push	r6
    24e2:	7f 92       	push	r7
    24e4:	8f 92       	push	r8
    24e6:	9f 92       	push	r9
    24e8:	af 92       	push	r10
    24ea:	bf 92       	push	r11
    24ec:	cf 92       	push	r12
    24ee:	df 92       	push	r13
    24f0:	ef 92       	push	r14
    24f2:	ff 92       	push	r15
    24f4:	0f 93       	push	r16
    24f6:	1f 93       	push	r17
    24f8:	cf 93       	push	r28
    24fa:	df 93       	push	r29
    24fc:	cd b7       	in	r28, 0x3d	; 61
    24fe:	de b7       	in	r29, 0x3e	; 62
    2500:	ca 1b       	sub	r28, r26
    2502:	db 0b       	sbc	r29, r27
    2504:	0f b6       	in	r0, 0x3f	; 63
    2506:	f8 94       	cli
    2508:	de bf       	out	0x3e, r29	; 62
    250a:	0f be       	out	0x3f, r0	; 63
    250c:	cd bf       	out	0x3d, r28	; 61
    250e:	09 94       	ijmp

00002510 <__epilogue_restores__>:
    2510:	2a 88       	ldd	r2, Y+18	; 0x12
    2512:	39 88       	ldd	r3, Y+17	; 0x11
    2514:	48 88       	ldd	r4, Y+16	; 0x10
    2516:	5f 84       	ldd	r5, Y+15	; 0x0f
    2518:	6e 84       	ldd	r6, Y+14	; 0x0e
    251a:	7d 84       	ldd	r7, Y+13	; 0x0d
    251c:	8c 84       	ldd	r8, Y+12	; 0x0c
    251e:	9b 84       	ldd	r9, Y+11	; 0x0b
    2520:	aa 84       	ldd	r10, Y+10	; 0x0a
    2522:	b9 84       	ldd	r11, Y+9	; 0x09
    2524:	c8 84       	ldd	r12, Y+8	; 0x08
    2526:	df 80       	ldd	r13, Y+7	; 0x07
    2528:	ee 80       	ldd	r14, Y+6	; 0x06
    252a:	fd 80       	ldd	r15, Y+5	; 0x05
    252c:	0c 81       	ldd	r16, Y+4	; 0x04
    252e:	1b 81       	ldd	r17, Y+3	; 0x03
    2530:	aa 81       	ldd	r26, Y+2	; 0x02
    2532:	b9 81       	ldd	r27, Y+1	; 0x01
    2534:	ce 0f       	add	r28, r30
    2536:	d1 1d       	adc	r29, r1
    2538:	0f b6       	in	r0, 0x3f	; 63
    253a:	f8 94       	cli
    253c:	de bf       	out	0x3e, r29	; 62
    253e:	0f be       	out	0x3f, r0	; 63
    2540:	cd bf       	out	0x3d, r28	; 61
    2542:	ed 01       	movw	r28, r26
    2544:	08 95       	ret

00002546 <malloc>:
    2546:	0f 93       	push	r16
    2548:	1f 93       	push	r17
    254a:	cf 93       	push	r28
    254c:	df 93       	push	r29
    254e:	82 30       	cpi	r24, 0x02	; 2
    2550:	91 05       	cpc	r25, r1
    2552:	10 f4       	brcc	.+4      	; 0x2558 <malloc+0x12>
    2554:	82 e0       	ldi	r24, 0x02	; 2
    2556:	90 e0       	ldi	r25, 0x00	; 0
    2558:	e0 91 bd 01 	lds	r30, 0x01BD	; 0x8001bd <__flp>
    255c:	f0 91 be 01 	lds	r31, 0x01BE	; 0x8001be <__flp+0x1>
    2560:	20 e0       	ldi	r18, 0x00	; 0
    2562:	30 e0       	ldi	r19, 0x00	; 0
    2564:	a0 e0       	ldi	r26, 0x00	; 0
    2566:	b0 e0       	ldi	r27, 0x00	; 0
    2568:	30 97       	sbiw	r30, 0x00	; 0
    256a:	19 f1       	breq	.+70     	; 0x25b2 <malloc+0x6c>
    256c:	40 81       	ld	r20, Z
    256e:	51 81       	ldd	r21, Z+1	; 0x01
    2570:	02 81       	ldd	r16, Z+2	; 0x02
    2572:	13 81       	ldd	r17, Z+3	; 0x03
    2574:	48 17       	cp	r20, r24
    2576:	59 07       	cpc	r21, r25
    2578:	c8 f0       	brcs	.+50     	; 0x25ac <malloc+0x66>
    257a:	84 17       	cp	r24, r20
    257c:	95 07       	cpc	r25, r21
    257e:	69 f4       	brne	.+26     	; 0x259a <malloc+0x54>
    2580:	10 97       	sbiw	r26, 0x00	; 0
    2582:	31 f0       	breq	.+12     	; 0x2590 <malloc+0x4a>
    2584:	12 96       	adiw	r26, 0x02	; 2
    2586:	0c 93       	st	X, r16
    2588:	12 97       	sbiw	r26, 0x02	; 2
    258a:	13 96       	adiw	r26, 0x03	; 3
    258c:	1c 93       	st	X, r17
    258e:	27 c0       	rjmp	.+78     	; 0x25de <malloc+0x98>
    2590:	00 93 bd 01 	sts	0x01BD, r16	; 0x8001bd <__flp>
    2594:	10 93 be 01 	sts	0x01BE, r17	; 0x8001be <__flp+0x1>
    2598:	22 c0       	rjmp	.+68     	; 0x25de <malloc+0x98>
    259a:	21 15       	cp	r18, r1
    259c:	31 05       	cpc	r19, r1
    259e:	19 f0       	breq	.+6      	; 0x25a6 <malloc+0x60>
    25a0:	42 17       	cp	r20, r18
    25a2:	53 07       	cpc	r21, r19
    25a4:	18 f4       	brcc	.+6      	; 0x25ac <malloc+0x66>
    25a6:	9a 01       	movw	r18, r20
    25a8:	bd 01       	movw	r22, r26
    25aa:	ef 01       	movw	r28, r30
    25ac:	df 01       	movw	r26, r30
    25ae:	f8 01       	movw	r30, r16
    25b0:	db cf       	rjmp	.-74     	; 0x2568 <malloc+0x22>
    25b2:	21 15       	cp	r18, r1
    25b4:	31 05       	cpc	r19, r1
    25b6:	f9 f0       	breq	.+62     	; 0x25f6 <malloc+0xb0>
    25b8:	28 1b       	sub	r18, r24
    25ba:	39 0b       	sbc	r19, r25
    25bc:	24 30       	cpi	r18, 0x04	; 4
    25be:	31 05       	cpc	r19, r1
    25c0:	80 f4       	brcc	.+32     	; 0x25e2 <malloc+0x9c>
    25c2:	8a 81       	ldd	r24, Y+2	; 0x02
    25c4:	9b 81       	ldd	r25, Y+3	; 0x03
    25c6:	61 15       	cp	r22, r1
    25c8:	71 05       	cpc	r23, r1
    25ca:	21 f0       	breq	.+8      	; 0x25d4 <malloc+0x8e>
    25cc:	fb 01       	movw	r30, r22
    25ce:	93 83       	std	Z+3, r25	; 0x03
    25d0:	82 83       	std	Z+2, r24	; 0x02
    25d2:	04 c0       	rjmp	.+8      	; 0x25dc <malloc+0x96>
    25d4:	90 93 be 01 	sts	0x01BE, r25	; 0x8001be <__flp+0x1>
    25d8:	80 93 bd 01 	sts	0x01BD, r24	; 0x8001bd <__flp>
    25dc:	fe 01       	movw	r30, r28
    25de:	32 96       	adiw	r30, 0x02	; 2
    25e0:	44 c0       	rjmp	.+136    	; 0x266a <malloc+0x124>
    25e2:	fe 01       	movw	r30, r28
    25e4:	e2 0f       	add	r30, r18
    25e6:	f3 1f       	adc	r31, r19
    25e8:	81 93       	st	Z+, r24
    25ea:	91 93       	st	Z+, r25
    25ec:	22 50       	subi	r18, 0x02	; 2
    25ee:	31 09       	sbc	r19, r1
    25f0:	39 83       	std	Y+1, r19	; 0x01
    25f2:	28 83       	st	Y, r18
    25f4:	3a c0       	rjmp	.+116    	; 0x266a <malloc+0x124>
    25f6:	20 91 bb 01 	lds	r18, 0x01BB	; 0x8001bb <__brkval>
    25fa:	30 91 bc 01 	lds	r19, 0x01BC	; 0x8001bc <__brkval+0x1>
    25fe:	23 2b       	or	r18, r19
    2600:	41 f4       	brne	.+16     	; 0x2612 <malloc+0xcc>
    2602:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__malloc_heap_start>
    2606:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__malloc_heap_start+0x1>
    260a:	30 93 bc 01 	sts	0x01BC, r19	; 0x8001bc <__brkval+0x1>
    260e:	20 93 bb 01 	sts	0x01BB, r18	; 0x8001bb <__brkval>
    2612:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_end>
    2616:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_end+0x1>
    261a:	21 15       	cp	r18, r1
    261c:	31 05       	cpc	r19, r1
    261e:	41 f4       	brne	.+16     	; 0x2630 <malloc+0xea>
    2620:	2d b7       	in	r18, 0x3d	; 61
    2622:	3e b7       	in	r19, 0x3e	; 62
    2624:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <__malloc_margin>
    2628:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <__malloc_margin+0x1>
    262c:	24 1b       	sub	r18, r20
    262e:	35 0b       	sbc	r19, r21
    2630:	e0 91 bb 01 	lds	r30, 0x01BB	; 0x8001bb <__brkval>
    2634:	f0 91 bc 01 	lds	r31, 0x01BC	; 0x8001bc <__brkval+0x1>
    2638:	e2 17       	cp	r30, r18
    263a:	f3 07       	cpc	r31, r19
    263c:	a0 f4       	brcc	.+40     	; 0x2666 <malloc+0x120>
    263e:	2e 1b       	sub	r18, r30
    2640:	3f 0b       	sbc	r19, r31
    2642:	28 17       	cp	r18, r24
    2644:	39 07       	cpc	r19, r25
    2646:	78 f0       	brcs	.+30     	; 0x2666 <malloc+0x120>
    2648:	ac 01       	movw	r20, r24
    264a:	4e 5f       	subi	r20, 0xFE	; 254
    264c:	5f 4f       	sbci	r21, 0xFF	; 255
    264e:	24 17       	cp	r18, r20
    2650:	35 07       	cpc	r19, r21
    2652:	48 f0       	brcs	.+18     	; 0x2666 <malloc+0x120>
    2654:	4e 0f       	add	r20, r30
    2656:	5f 1f       	adc	r21, r31
    2658:	50 93 bc 01 	sts	0x01BC, r21	; 0x8001bc <__brkval+0x1>
    265c:	40 93 bb 01 	sts	0x01BB, r20	; 0x8001bb <__brkval>
    2660:	81 93       	st	Z+, r24
    2662:	91 93       	st	Z+, r25
    2664:	02 c0       	rjmp	.+4      	; 0x266a <malloc+0x124>
    2666:	e0 e0       	ldi	r30, 0x00	; 0
    2668:	f0 e0       	ldi	r31, 0x00	; 0
    266a:	cf 01       	movw	r24, r30
    266c:	df 91       	pop	r29
    266e:	cf 91       	pop	r28
    2670:	1f 91       	pop	r17
    2672:	0f 91       	pop	r16
    2674:	08 95       	ret

00002676 <free>:
    2676:	cf 93       	push	r28
    2678:	df 93       	push	r29
    267a:	00 97       	sbiw	r24, 0x00	; 0
    267c:	09 f4       	brne	.+2      	; 0x2680 <free+0xa>
    267e:	81 c0       	rjmp	.+258    	; 0x2782 <free+0x10c>
    2680:	fc 01       	movw	r30, r24
    2682:	32 97       	sbiw	r30, 0x02	; 2
    2684:	13 82       	std	Z+3, r1	; 0x03
    2686:	12 82       	std	Z+2, r1	; 0x02
    2688:	a0 91 bd 01 	lds	r26, 0x01BD	; 0x8001bd <__flp>
    268c:	b0 91 be 01 	lds	r27, 0x01BE	; 0x8001be <__flp+0x1>
    2690:	10 97       	sbiw	r26, 0x00	; 0
    2692:	81 f4       	brne	.+32     	; 0x26b4 <free+0x3e>
    2694:	20 81       	ld	r18, Z
    2696:	31 81       	ldd	r19, Z+1	; 0x01
    2698:	82 0f       	add	r24, r18
    269a:	93 1f       	adc	r25, r19
    269c:	20 91 bb 01 	lds	r18, 0x01BB	; 0x8001bb <__brkval>
    26a0:	30 91 bc 01 	lds	r19, 0x01BC	; 0x8001bc <__brkval+0x1>
    26a4:	28 17       	cp	r18, r24
    26a6:	39 07       	cpc	r19, r25
    26a8:	51 f5       	brne	.+84     	; 0x26fe <free+0x88>
    26aa:	f0 93 bc 01 	sts	0x01BC, r31	; 0x8001bc <__brkval+0x1>
    26ae:	e0 93 bb 01 	sts	0x01BB, r30	; 0x8001bb <__brkval>
    26b2:	67 c0       	rjmp	.+206    	; 0x2782 <free+0x10c>
    26b4:	ed 01       	movw	r28, r26
    26b6:	20 e0       	ldi	r18, 0x00	; 0
    26b8:	30 e0       	ldi	r19, 0x00	; 0
    26ba:	ce 17       	cp	r28, r30
    26bc:	df 07       	cpc	r29, r31
    26be:	40 f4       	brcc	.+16     	; 0x26d0 <free+0x5a>
    26c0:	4a 81       	ldd	r20, Y+2	; 0x02
    26c2:	5b 81       	ldd	r21, Y+3	; 0x03
    26c4:	9e 01       	movw	r18, r28
    26c6:	41 15       	cp	r20, r1
    26c8:	51 05       	cpc	r21, r1
    26ca:	f1 f0       	breq	.+60     	; 0x2708 <free+0x92>
    26cc:	ea 01       	movw	r28, r20
    26ce:	f5 cf       	rjmp	.-22     	; 0x26ba <free+0x44>
    26d0:	d3 83       	std	Z+3, r29	; 0x03
    26d2:	c2 83       	std	Z+2, r28	; 0x02
    26d4:	40 81       	ld	r20, Z
    26d6:	51 81       	ldd	r21, Z+1	; 0x01
    26d8:	84 0f       	add	r24, r20
    26da:	95 1f       	adc	r25, r21
    26dc:	c8 17       	cp	r28, r24
    26de:	d9 07       	cpc	r29, r25
    26e0:	59 f4       	brne	.+22     	; 0x26f8 <free+0x82>
    26e2:	88 81       	ld	r24, Y
    26e4:	99 81       	ldd	r25, Y+1	; 0x01
    26e6:	84 0f       	add	r24, r20
    26e8:	95 1f       	adc	r25, r21
    26ea:	02 96       	adiw	r24, 0x02	; 2
    26ec:	91 83       	std	Z+1, r25	; 0x01
    26ee:	80 83       	st	Z, r24
    26f0:	8a 81       	ldd	r24, Y+2	; 0x02
    26f2:	9b 81       	ldd	r25, Y+3	; 0x03
    26f4:	93 83       	std	Z+3, r25	; 0x03
    26f6:	82 83       	std	Z+2, r24	; 0x02
    26f8:	21 15       	cp	r18, r1
    26fa:	31 05       	cpc	r19, r1
    26fc:	29 f4       	brne	.+10     	; 0x2708 <free+0x92>
    26fe:	f0 93 be 01 	sts	0x01BE, r31	; 0x8001be <__flp+0x1>
    2702:	e0 93 bd 01 	sts	0x01BD, r30	; 0x8001bd <__flp>
    2706:	3d c0       	rjmp	.+122    	; 0x2782 <free+0x10c>
    2708:	e9 01       	movw	r28, r18
    270a:	fb 83       	std	Y+3, r31	; 0x03
    270c:	ea 83       	std	Y+2, r30	; 0x02
    270e:	49 91       	ld	r20, Y+
    2710:	59 91       	ld	r21, Y+
    2712:	c4 0f       	add	r28, r20
    2714:	d5 1f       	adc	r29, r21
    2716:	ec 17       	cp	r30, r28
    2718:	fd 07       	cpc	r31, r29
    271a:	61 f4       	brne	.+24     	; 0x2734 <free+0xbe>
    271c:	80 81       	ld	r24, Z
    271e:	91 81       	ldd	r25, Z+1	; 0x01
    2720:	84 0f       	add	r24, r20
    2722:	95 1f       	adc	r25, r21
    2724:	02 96       	adiw	r24, 0x02	; 2
    2726:	e9 01       	movw	r28, r18
    2728:	99 83       	std	Y+1, r25	; 0x01
    272a:	88 83       	st	Y, r24
    272c:	82 81       	ldd	r24, Z+2	; 0x02
    272e:	93 81       	ldd	r25, Z+3	; 0x03
    2730:	9b 83       	std	Y+3, r25	; 0x03
    2732:	8a 83       	std	Y+2, r24	; 0x02
    2734:	e0 e0       	ldi	r30, 0x00	; 0
    2736:	f0 e0       	ldi	r31, 0x00	; 0
    2738:	12 96       	adiw	r26, 0x02	; 2
    273a:	8d 91       	ld	r24, X+
    273c:	9c 91       	ld	r25, X
    273e:	13 97       	sbiw	r26, 0x03	; 3
    2740:	00 97       	sbiw	r24, 0x00	; 0
    2742:	19 f0       	breq	.+6      	; 0x274a <free+0xd4>
    2744:	fd 01       	movw	r30, r26
    2746:	dc 01       	movw	r26, r24
    2748:	f7 cf       	rjmp	.-18     	; 0x2738 <free+0xc2>
    274a:	8d 91       	ld	r24, X+
    274c:	9c 91       	ld	r25, X
    274e:	11 97       	sbiw	r26, 0x01	; 1
    2750:	9d 01       	movw	r18, r26
    2752:	2e 5f       	subi	r18, 0xFE	; 254
    2754:	3f 4f       	sbci	r19, 0xFF	; 255
    2756:	82 0f       	add	r24, r18
    2758:	93 1f       	adc	r25, r19
    275a:	20 91 bb 01 	lds	r18, 0x01BB	; 0x8001bb <__brkval>
    275e:	30 91 bc 01 	lds	r19, 0x01BC	; 0x8001bc <__brkval+0x1>
    2762:	28 17       	cp	r18, r24
    2764:	39 07       	cpc	r19, r25
    2766:	69 f4       	brne	.+26     	; 0x2782 <free+0x10c>
    2768:	30 97       	sbiw	r30, 0x00	; 0
    276a:	29 f4       	brne	.+10     	; 0x2776 <free+0x100>
    276c:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <__flp+0x1>
    2770:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <__flp>
    2774:	02 c0       	rjmp	.+4      	; 0x277a <free+0x104>
    2776:	13 82       	std	Z+3, r1	; 0x03
    2778:	12 82       	std	Z+2, r1	; 0x02
    277a:	b0 93 bc 01 	sts	0x01BC, r27	; 0x8001bc <__brkval+0x1>
    277e:	a0 93 bb 01 	sts	0x01BB, r26	; 0x8001bb <__brkval>
    2782:	df 91       	pop	r29
    2784:	cf 91       	pop	r28
    2786:	08 95       	ret

00002788 <strncat>:
    2788:	fb 01       	movw	r30, r22
    278a:	dc 01       	movw	r26, r24
    278c:	0d 90       	ld	r0, X+
    278e:	00 20       	and	r0, r0
    2790:	e9 f7       	brne	.-6      	; 0x278c <strncat+0x4>
    2792:	11 97       	sbiw	r26, 0x01	; 1
    2794:	41 50       	subi	r20, 0x01	; 1
    2796:	50 40       	sbci	r21, 0x00	; 0
    2798:	28 f0       	brcs	.+10     	; 0x27a4 <strncat+0x1c>
    279a:	01 90       	ld	r0, Z+
    279c:	00 20       	and	r0, r0
    279e:	0d 92       	st	X+, r0
    27a0:	c9 f7       	brne	.-14     	; 0x2794 <strncat+0xc>
    27a2:	08 95       	ret
    27a4:	1c 92       	st	X, r1
    27a6:	08 95       	ret

000027a8 <__do_global_dtors>:
    27a8:	10 e0       	ldi	r17, 0x00	; 0
    27aa:	c2 e4       	ldi	r28, 0x42	; 66
    27ac:	d0 e0       	ldi	r29, 0x00	; 0
    27ae:	04 c0       	rjmp	.+8      	; 0x27b8 <__do_global_dtors+0x10>
    27b0:	fe 01       	movw	r30, r28
    27b2:	0e 94 44 12 	call	0x2488	; 0x2488 <__tablejump2__>
    27b6:	21 96       	adiw	r28, 0x01	; 1
    27b8:	c3 34       	cpi	r28, 0x43	; 67
    27ba:	d1 07       	cpc	r29, r17
    27bc:	c9 f7       	brne	.-14     	; 0x27b0 <__do_global_dtors+0x8>
    27be:	f8 94       	cli

000027c0 <__stop_program>:
    27c0:	ff cf       	rjmp	.-2      	; 0x27c0 <__stop_program>
