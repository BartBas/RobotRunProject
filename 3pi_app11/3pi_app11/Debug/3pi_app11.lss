
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  00001d38  00001dcc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d38  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000070  00800138  00800138  00001e04  2**0
                  ALLOC
  3 .stab         00005af0  00000000  00000000  00001e04  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000084be  00000000  00000000  000078f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  0000fdb2  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000fdf4  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000080  00000000  00000000  0000fe34  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   0000143e  00000000  00000000  0000feb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000906  00000000  00000000  000112f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00000cac  00000000  00000000  00011bf8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  0000010c  00000000  00000000  000128a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    000005b2  00000000  00000000  000129b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00000205  00000000  00000000  00012f62  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000060  00000000  00000000  00013167  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 45 00 	jmp	0x8a	; 0x8a <__dtors_end>
       4:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
       8:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
       c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      10:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      14:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      18:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      1c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      20:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      24:	0c 94 ea 06 	jmp	0xdd4	; 0xdd4 <__vector_9>
      28:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      2c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      30:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      34:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      38:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      3c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      40:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      44:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      48:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      4c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      50:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      54:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      58:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      5c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      60:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      64:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
      68:	a6 00       	.word	0x00a6	; ????
      6a:	b6 00       	.word	0x00b6	; ????
      6c:	71 00       	.word	0x0071	; ????
      6e:	86 00       	.word	0x0086	; ????
      70:	96 00       	.word	0x0096	; ????
      72:	a6 00       	.word	0x00a6	; ????
      74:	86 00       	.word	0x0086	; ????
      76:	86 00       	.word	0x0086	; ????
      78:	86 00       	.word	0x0086	; ????

0000007a <__trampolines_end>:
      7a:	00 00       	nop
      7c:	00 00       	nop
      7e:	00 00       	nop
      80:	00 1f       	adc	r16, r16
      82:	1f 1f       	adc	r17, r31
      84:	1f 1f       	adc	r17, r31
      86:	1f 1f       	adc	r17, r31

00000088 <__ctors_end>:
      88:	ae 07       	cpc	r26, r30

0000008a <__dtors_end>:
      8a:	11 24       	eor	r1, r1
      8c:	1f be       	out	0x3f, r1	; 63
      8e:	cf ef       	ldi	r28, 0xFF	; 255
      90:	d8 e0       	ldi	r29, 0x08	; 8
      92:	de bf       	out	0x3e, r29	; 62
      94:	cd bf       	out	0x3d, r28	; 61

00000096 <__do_copy_data>:
      96:	11 e0       	ldi	r17, 0x01	; 1
      98:	a0 e0       	ldi	r26, 0x00	; 0
      9a:	b1 e0       	ldi	r27, 0x01	; 1
      9c:	e8 e3       	ldi	r30, 0x38	; 56
      9e:	fd e1       	ldi	r31, 0x1D	; 29
      a0:	02 c0       	rjmp	.+4      	; 0xa6 <__do_copy_data+0x10>
      a2:	05 90       	lpm	r0, Z+
      a4:	0d 92       	st	X+, r0
      a6:	a8 33       	cpi	r26, 0x38	; 56
      a8:	b1 07       	cpc	r27, r17
      aa:	d9 f7       	brne	.-10     	; 0xa2 <__do_copy_data+0xc>

000000ac <__do_clear_bss>:
      ac:	21 e0       	ldi	r18, 0x01	; 1
      ae:	a8 e3       	ldi	r26, 0x38	; 56
      b0:	b1 e0       	ldi	r27, 0x01	; 1
      b2:	01 c0       	rjmp	.+2      	; 0xb6 <.do_clear_bss_start>

000000b4 <.do_clear_bss_loop>:
      b4:	1d 92       	st	X+, r1

000000b6 <.do_clear_bss_start>:
      b6:	a8 3a       	cpi	r26, 0xA8	; 168
      b8:	b2 07       	cpc	r27, r18
      ba:	e1 f7       	brne	.-8      	; 0xb4 <.do_clear_bss_loop>
      bc:	0e 94 c6 00 	call	0x18c	; 0x18c <main>
      c0:	0c 94 8f 0e 	jmp	0x1d1e	; 0x1d1e <__do_global_dtors>

000000c4 <__bad_interrupt>:
      c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c8 <parcour>:

Junctions situatie = Straight;

void parcour() {
	while(1) {
		situatie = direction();
      c8:	0e 94 9a 02 	call	0x534	; 0x534 <direction>
      cc:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <situatie>
	
 		switch (situatie) {
      d0:	e8 2f       	mov	r30, r24
      d2:	f0 e0       	ldi	r31, 0x00	; 0
      d4:	e9 30       	cpi	r30, 0x09	; 9
      d6:	f1 05       	cpc	r31, r1
      d8:	b8 f7       	brcc	.-18     	; 0xc8 <parcour>
      da:	ec 5c       	subi	r30, 0xCC	; 204
      dc:	ff 4f       	sbci	r31, 0xFF	; 255
      de:	0c 94 0f 0d 	jmp	0x1a1e	; 0x1a1e <__tablejump2__>
			case Barcode: // end of parcour
				clear();
      e2:	0e 94 67 05 	call	0xace	; 0xace <clear>
				lcd_goto_xy(0, 0);
      e6:	60 e0       	ldi	r22, 0x00	; 0
      e8:	80 e0       	ldi	r24, 0x00	; 0
      ea:	0e 94 ee 05 	call	0xbdc	; 0xbdc <lcd_goto_xy>
				print("bar code");
      ee:	89 e1       	ldi	r24, 0x19	; 25
      f0:	91 e0       	ldi	r25, 0x01	; 1
      f2:	0e 94 76 05 	call	0xaec	; 0xaec <print>
				set_motors(0,0);
      f6:	60 e0       	ldi	r22, 0x00	; 0
      f8:	70 e0       	ldi	r23, 0x00	; 0
      fa:	80 e0       	ldi	r24, 0x00	; 0
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     102:	88 ee       	ldi	r24, 0xE8	; 232
     104:	93 e0       	ldi	r25, 0x03	; 3
     106:	0e 94 32 07 	call	0xe64	; 0xe64 <delay_ms>
     10a:	de cf       	rjmp	.-68     	; 0xc8 <parcour>
				
			case X_junction:
			case Left_corner:
			case T_junction:
			case Straight_left_junction:
				clear();
     10c:	0e 94 67 05 	call	0xace	; 0xace <clear>
				lcd_goto_xy(0, 0);
     110:	60 e0       	ldi	r22, 0x00	; 0
     112:	80 e0       	ldi	r24, 0x00	; 0
     114:	0e 94 ee 05 	call	0xbdc	; 0xbdc <lcd_goto_xy>
				print("L");
     118:	82 e2       	ldi	r24, 0x22	; 34
     11a:	91 e0       	ldi	r25, 0x01	; 1
     11c:	0e 94 76 05 	call	0xaec	; 0xaec <print>
		 		motorControl('L');
     120:	8c e4       	ldi	r24, 0x4C	; 76
     122:	0e 94 d7 01 	call	0x3ae	; 0x3ae <motorControl>
				clear();
     126:	0e 94 67 05 	call	0xace	; 0xace <clear>
		 		break;
     12a:	ce cf       	rjmp	.-100    	; 0xc8 <parcour>
					 
 			case Right_corner:
				clear();
     12c:	0e 94 67 05 	call	0xace	; 0xace <clear>
				lcd_goto_xy(0, 0);
     130:	60 e0       	ldi	r22, 0x00	; 0
     132:	80 e0       	ldi	r24, 0x00	; 0
     134:	0e 94 ee 05 	call	0xbdc	; 0xbdc <lcd_goto_xy>
				print("R");
     138:	84 e2       	ldi	r24, 0x24	; 36
     13a:	91 e0       	ldi	r25, 0x01	; 1
     13c:	0e 94 76 05 	call	0xaec	; 0xaec <print>
 				motorControl('R');
     140:	82 e5       	ldi	r24, 0x52	; 82
     142:	0e 94 d7 01 	call	0x3ae	; 0x3ae <motorControl>
				clear();
     146:	0e 94 67 05 	call	0xace	; 0xace <clear>
				break;
     14a:	be cf       	rjmp	.-132    	; 0xc8 <parcour>
				
			case Straight_right_junction:
			case Straight:
				clear();
     14c:	0e 94 67 05 	call	0xace	; 0xace <clear>
				lcd_goto_xy(0, 0);
     150:	60 e0       	ldi	r22, 0x00	; 0
     152:	80 e0       	ldi	r24, 0x00	; 0
     154:	0e 94 ee 05 	call	0xbdc	; 0xbdc <lcd_goto_xy>
				print("S");
     158:	86 e2       	ldi	r24, 0x26	; 38
     15a:	91 e0       	ldi	r25, 0x01	; 1
     15c:	0e 94 76 05 	call	0xaec	; 0xaec <print>
				motorControl('S');
     160:	83 e5       	ldi	r24, 0x53	; 83
     162:	0e 94 d7 01 	call	0x3ae	; 0x3ae <motorControl>
				clear();
     166:	0e 94 67 05 	call	0xace	; 0xace <clear>
				break;
     16a:	ae cf       	rjmp	.-164    	; 0xc8 <parcour>
				
			case Line_end:
				clear();
     16c:	0e 94 67 05 	call	0xace	; 0xace <clear>
				lcd_goto_xy(0, 0);
     170:	60 e0       	ldi	r22, 0x00	; 0
     172:	80 e0       	ldi	r24, 0x00	; 0
     174:	0e 94 ee 05 	call	0xbdc	; 0xbdc <lcd_goto_xy>
				print("End");
     178:	88 e2       	ldi	r24, 0x28	; 40
     17a:	91 e0       	ldi	r25, 0x01	; 1
     17c:	0e 94 76 05 	call	0xaec	; 0xaec <print>
				motorControl('T');
     180:	84 e5       	ldi	r24, 0x54	; 84
     182:	0e 94 d7 01 	call	0x3ae	; 0x3ae <motorControl>
				clear();
     186:	0e 94 67 05 	call	0xace	; 0xace <clear>
				break;
     18a:	9e cf       	rjmp	.-196    	; 0xc8 <parcour>

0000018c <main>:
}


int main()
{
	pololu_3pi_init(2000);
     18c:	80 ed       	ldi	r24, 0xD0	; 208
     18e:	97 e0       	ldi	r25, 0x07	; 7
     190:	0e 94 aa 07 	call	0xf54	; 0xf54 <pololu_3pi_init>
	initialize();
     194:	0e 94 37 01 	call	0x26e	; 0x26e <initialize>
	parcour();
     198:	0e 94 64 00 	call	0xc8	; 0xc8 <parcour>

0000019c <load_custom_characters>:
	0b11111
};

void load_custom_characters()
{
	lcd_load_custom_character(levels+0,0); // no offset, e.g. one bar
     19c:	60 e0       	ldi	r22, 0x00	; 0
     19e:	8a e7       	ldi	r24, 0x7A	; 122
     1a0:	90 e0       	ldi	r25, 0x00	; 0
     1a2:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <lcd_load_custom_character>
	lcd_load_custom_character(levels+1,1); // two bars
     1a6:	61 e0       	ldi	r22, 0x01	; 1
     1a8:	8b e7       	ldi	r24, 0x7B	; 123
     1aa:	90 e0       	ldi	r25, 0x00	; 0
     1ac:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <lcd_load_custom_character>
	lcd_load_custom_character(levels+2,2); // etc...
     1b0:	62 e0       	ldi	r22, 0x02	; 2
     1b2:	8c e7       	ldi	r24, 0x7C	; 124
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <lcd_load_custom_character>
	lcd_load_custom_character(levels+3,3);
     1ba:	63 e0       	ldi	r22, 0x03	; 3
     1bc:	8d e7       	ldi	r24, 0x7D	; 125
     1be:	90 e0       	ldi	r25, 0x00	; 0
     1c0:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <lcd_load_custom_character>
	lcd_load_custom_character(levels+4,4);
     1c4:	64 e0       	ldi	r22, 0x04	; 4
     1c6:	8e e7       	ldi	r24, 0x7E	; 126
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <lcd_load_custom_character>
	lcd_load_custom_character(levels+5,5);
     1ce:	65 e0       	ldi	r22, 0x05	; 5
     1d0:	8f e7       	ldi	r24, 0x7F	; 127
     1d2:	90 e0       	ldi	r25, 0x00	; 0
     1d4:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <lcd_load_custom_character>
	lcd_load_custom_character(levels+6,6);
     1d8:	66 e0       	ldi	r22, 0x06	; 6
     1da:	80 e8       	ldi	r24, 0x80	; 128
     1dc:	90 e0       	ldi	r25, 0x00	; 0
     1de:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <lcd_load_custom_character>
	clear(); // the LCD must be cleared for the characters to take effect
     1e2:	0e 94 67 05 	call	0xace	; 0xace <clear>
     1e6:	08 95       	ret

000001e8 <display_readings>:
}

void display_readings(const unsigned int *calibrated_values)
{
     1e8:	ef 92       	push	r14
     1ea:	ff 92       	push	r15
     1ec:	1f 93       	push	r17
     1ee:	cf 93       	push	r28
     1f0:	df 93       	push	r29
     1f2:	cd b7       	in	r28, 0x3d	; 61
     1f4:	de b7       	in	r29, 0x3e	; 62
     1f6:	2a 97       	sbiw	r28, 0x0a	; 10
     1f8:	0f b6       	in	r0, 0x3f	; 63
     1fa:	f8 94       	cli
     1fc:	de bf       	out	0x3e, r29	; 62
     1fe:	0f be       	out	0x3f, r0	; 63
     200:	cd bf       	out	0x3d, r28	; 61
     202:	7c 01       	movw	r14, r24
	unsigned char i;
	
	for(i=0;i<5;i++) {
     204:	10 e0       	ldi	r17, 0x00	; 0
     206:	25 c0       	rjmp	.+74     	; 0x252 <display_readings+0x6a>
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};		// Initialize the array of characters that we will use for the
     208:	8a e0       	ldi	r24, 0x0A	; 10
     20a:	ea e0       	ldi	r30, 0x0A	; 10
     20c:	f1 e0       	ldi	r31, 0x01	; 1
     20e:	de 01       	movw	r26, r28
     210:	11 96       	adiw	r26, 0x01	; 1
     212:	01 90       	ld	r0, Z+
     214:	0d 92       	st	X+, r0
     216:	8a 95       	dec	r24
     218:	e1 f7       	brne	.-8      	; 0x212 <display_readings+0x2a>
		char c = display_characters[calibrated_values[i]/101];			    // The variable c will have values from 0 to 9, since
     21a:	e1 2f       	mov	r30, r17
     21c:	f0 e0       	ldi	r31, 0x00	; 0
     21e:	ee 0f       	add	r30, r30
     220:	ff 1f       	adc	r31, r31
     222:	ee 0d       	add	r30, r14
     224:	ff 1d       	adc	r31, r15
     226:	20 81       	ld	r18, Z
     228:	31 81       	ldd	r19, Z+1	; 0x01
     22a:	a7 e4       	ldi	r26, 0x47	; 71
     22c:	b4 e1       	ldi	r27, 0x14	; 20
     22e:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <__umulhisi3>
     232:	96 95       	lsr	r25
     234:	87 95       	ror	r24
     236:	96 95       	lsr	r25
     238:	87 95       	ror	r24
     23a:	96 95       	lsr	r25
     23c:	87 95       	ror	r24
     23e:	e1 e0       	ldi	r30, 0x01	; 1
     240:	f0 e0       	ldi	r31, 0x00	; 0
     242:	ec 0f       	add	r30, r28
     244:	fd 1f       	adc	r31, r29
     246:	e8 0f       	add	r30, r24
     248:	f9 1f       	adc	r31, r25
		print_character(c);
     24a:	80 81       	ld	r24, Z
     24c:	0e 94 f7 04 	call	0x9ee	; 0x9ee <print_character>

void display_readings(const unsigned int *calibrated_values)
{
	unsigned char i;
	
	for(i=0;i<5;i++) {
     250:	1f 5f       	subi	r17, 0xFF	; 255
     252:	15 30       	cpi	r17, 0x05	; 5
     254:	c8 f2       	brcs	.-78     	; 0x208 <display_readings+0x20>
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};		// Initialize the array of characters that we will use for the
		char c = display_characters[calibrated_values[i]/101];			    // The variable c will have values from 0 to 9, since
		print_character(c);
	}
}
     256:	2a 96       	adiw	r28, 0x0a	; 10
     258:	0f b6       	in	r0, 0x3f	; 63
     25a:	f8 94       	cli
     25c:	de bf       	out	0x3e, r29	; 62
     25e:	0f be       	out	0x3f, r0	; 63
     260:	cd bf       	out	0x3d, r28	; 61
     262:	df 91       	pop	r29
     264:	cf 91       	pop	r28
     266:	1f 91       	pop	r17
     268:	ff 90       	pop	r15
     26a:	ef 90       	pop	r14
     26c:	08 95       	ret

0000026e <initialize>:

void initialize()
{
     26e:	0f 93       	push	r16
     270:	1f 93       	push	r17
     272:	cf 93       	push	r28
     274:	df 93       	push	r29
     276:	cd b7       	in	r28, 0x3d	; 61
     278:	de b7       	in	r29, 0x3e	; 62
     27a:	2a 97       	sbiw	r28, 0x0a	; 10
     27c:	0f b6       	in	r0, 0x3f	; 63
     27e:	f8 94       	cli
     280:	de bf       	out	0x3e, r29	; 62
     282:	0f be       	out	0x3f, r0	; 63
     284:	cd bf       	out	0x3d, r28	; 61
	unsigned int counter; // used as a simple timer
	unsigned int sensors[5]; // an array to hold sensor values
	
	pololu_3pi_init(2000);
     286:	80 ed       	ldi	r24, 0xD0	; 208
     288:	97 e0       	ldi	r25, 0x07	; 7
     28a:	0e 94 aa 07 	call	0xf54	; 0xf54 <pololu_3pi_init>
	load_custom_characters(); // load the custom characters
     28e:	0e 94 ce 00 	call	0x19c	; 0x19c <load_custom_characters>
	
	while(!button_is_pressed(BUTTON_B))
     292:	1b c0       	rjmp	.+54     	; 0x2ca <initialize+0x5c>
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     294:	0e 94 34 04 	call	0x868	; 0x868 <read_battery_millivolts_3pi>
     298:	8c 01       	movw	r16, r24
	{
		int bat = read_battery_millivolts();
		
		clear();
     29a:	0e 94 67 05 	call	0xace	; 0xace <clear>
		print_long(bat);
     29e:	b8 01       	movw	r22, r16
     2a0:	11 0f       	add	r17, r17
     2a2:	88 0b       	sbc	r24, r24
     2a4:	99 0b       	sbc	r25, r25
     2a6:	0e 94 cb 05 	call	0xb96	; 0xb96 <print_long>
		print("mV");
     2aa:	8c e2       	ldi	r24, 0x2C	; 44
     2ac:	91 e0       	ldi	r25, 0x01	; 1
     2ae:	0e 94 76 05 	call	0xaec	; 0xaec <print>
		lcd_goto_xy(0,1);
     2b2:	61 e0       	ldi	r22, 0x01	; 1
     2b4:	80 e0       	ldi	r24, 0x00	; 0
     2b6:	0e 94 ee 05 	call	0xbdc	; 0xbdc <lcd_goto_xy>
		print("Press B");
     2ba:	8f e2       	ldi	r24, 0x2F	; 47
     2bc:	91 e0       	ldi	r25, 0x01	; 1
     2be:	0e 94 76 05 	call	0xaec	; 0xaec <print>
		
		delay_ms(100);
     2c2:	84 e6       	ldi	r24, 0x64	; 100
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	0e 94 32 07 	call	0xe64	; 0xe64 <delay_ms>
	unsigned int sensors[5]; // an array to hold sensor values
	
	pololu_3pi_init(2000);
	load_custom_characters(); // load the custom characters
	
	while(!button_is_pressed(BUTTON_B))
     2ca:	80 e1       	ldi	r24, 0x10	; 16
     2cc:	0e 94 e7 06 	call	0xdce	; 0xdce <button_is_pressed>
     2d0:	88 23       	and	r24, r24
     2d2:	01 f3       	breq	.-64     	; 0x294 <initialize+0x26>
		print("Press B");
		
		delay_ms(100);
	}
	
	wait_for_button_release(BUTTON_B);
     2d4:	80 e1       	ldi	r24, 0x10	; 16
     2d6:	0e 94 d3 06 	call	0xda6	; 0xda6 <wait_for_button_release>
	delay_ms(1000);
     2da:	88 ee       	ldi	r24, 0xE8	; 232
     2dc:	93 e0       	ldi	r25, 0x03	; 3
     2de:	0e 94 32 07 	call	0xe64	; 0xe64 <delay_ms>

	for(counter=0;counter<80;counter++)
     2e2:	00 e0       	ldi	r16, 0x00	; 0
     2e4:	10 e0       	ldi	r17, 0x00	; 0
     2e6:	1a c0       	rjmp	.+52     	; 0x31c <initialize+0xae>
	{
		if(counter < 20 || counter >= 60)
     2e8:	c8 01       	movw	r24, r16
     2ea:	44 97       	sbiw	r24, 0x14	; 20
     2ec:	88 97       	sbiw	r24, 0x28	; 40
     2ee:	38 f0       	brcs	.+14     	; 0x2fe <initialize+0x90>
		set_motors(40,-40);
     2f0:	68 ed       	ldi	r22, 0xD8	; 216
     2f2:	7f ef       	ldi	r23, 0xFF	; 255
     2f4:	88 e2       	ldi	r24, 0x28	; 40
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
     2fc:	06 c0       	rjmp	.+12     	; 0x30a <initialize+0x9c>
		else
		set_motors(-40,40);
     2fe:	68 e2       	ldi	r22, 0x28	; 40
     300:	70 e0       	ldi	r23, 0x00	; 0
     302:	88 ed       	ldi	r24, 0xD8	; 216
     304:	9f ef       	ldi	r25, 0xFF	; 255
     306:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
		calibrate_line_sensors(IR_EMITTERS_ON);
     30a:	81 e0       	ldi	r24, 0x01	; 1
     30c:	0e 94 6e 07 	call	0xedc	; 0xedc <calibrate_line_sensors>

		delay_ms(20);
     310:	84 e1       	ldi	r24, 0x14	; 20
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	0e 94 32 07 	call	0xe64	; 0xe64 <delay_ms>
	}
	
	wait_for_button_release(BUTTON_B);
	delay_ms(1000);

	for(counter=0;counter<80;counter++)
     318:	0f 5f       	subi	r16, 0xFF	; 255
     31a:	1f 4f       	sbci	r17, 0xFF	; 255
     31c:	00 35       	cpi	r16, 0x50	; 80
     31e:	11 05       	cpc	r17, r1
     320:	18 f3       	brcs	.-58     	; 0x2e8 <initialize+0x7a>
		set_motors(-40,40);
		calibrate_line_sensors(IR_EMITTERS_ON);

		delay_ms(20);
	}
	set_motors(0,0);
     322:	60 e0       	ldi	r22, 0x00	; 0
     324:	70 e0       	ldi	r23, 0x00	; 0
     326:	80 e0       	ldi	r24, 0x00	; 0
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
	
	// Display calibrated values as a bar graph.
	while(!button_is_pressed(BUTTON_B))
     32e:	19 c0       	rjmp	.+50     	; 0x362 <initialize+0xf4>
	{
		// Read the sensor values and get the position measurement.
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     330:	61 e0       	ldi	r22, 0x01	; 1
     332:	ce 01       	movw	r24, r28
     334:	01 96       	adiw	r24, 0x01	; 1
     336:	0e 94 74 07 	call	0xee8	; 0xee8 <read_line>
     33a:	8c 01       	movw	r16, r24
		// Display the position measurement, which will go from 0
		// (when the leftmost sensor is over the line) to 4000 (when
		// the rightmost sensor is over the line) on the 3pi, along
		// with a bar graph of the sensor readings.  This allows you
		// to make sure the robot is ready to go.
		clear();
     33c:	0e 94 67 05 	call	0xace	; 0xace <clear>
		print_long(position);
     340:	b8 01       	movw	r22, r16
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	0e 94 cb 05 	call	0xb96	; 0xb96 <print_long>
		lcd_goto_xy(0,1);
     34a:	61 e0       	ldi	r22, 0x01	; 1
     34c:	80 e0       	ldi	r24, 0x00	; 0
     34e:	0e 94 ee 05 	call	0xbdc	; 0xbdc <lcd_goto_xy>
		display_readings(sensors);
     352:	ce 01       	movw	r24, r28
     354:	01 96       	adiw	r24, 0x01	; 1
     356:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <display_readings>
		
		delay_ms(100);
     35a:	84 e6       	ldi	r24, 0x64	; 100
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	0e 94 32 07 	call	0xe64	; 0xe64 <delay_ms>
		delay_ms(20);
	}
	set_motors(0,0);
	
	// Display calibrated values as a bar graph.
	while(!button_is_pressed(BUTTON_B))
     362:	80 e1       	ldi	r24, 0x10	; 16
     364:	0e 94 e7 06 	call	0xdce	; 0xdce <button_is_pressed>
     368:	88 23       	and	r24, r24
     36a:	11 f3       	breq	.-60     	; 0x330 <initialize+0xc2>
		lcd_goto_xy(0,1);
		display_readings(sensors);
		
		delay_ms(100);
	}
	wait_for_button_release(BUTTON_B);
     36c:	80 e1       	ldi	r24, 0x10	; 16
     36e:	0e 94 d3 06 	call	0xda6	; 0xda6 <wait_for_button_release>
	
	clear();
     372:	0e 94 67 05 	call	0xace	; 0xace <clear>
	
	
}
     376:	2a 96       	adiw	r28, 0x0a	; 10
     378:	0f b6       	in	r0, 0x3f	; 63
     37a:	f8 94       	cli
     37c:	de bf       	out	0x3e, r29	; 62
     37e:	0f be       	out	0x3f, r0	; 63
     380:	cd bf       	out	0x3d, r28	; 61
     382:	df 91       	pop	r29
     384:	cf 91       	pop	r28
     386:	1f 91       	pop	r17
     388:	0f 91       	pop	r16
     38a:	08 95       	ret

0000038c <inch>:

void inch(){
	set_motors(50,50);
     38c:	62 e3       	ldi	r22, 0x32	; 50
     38e:	70 e0       	ldi	r23, 0x00	; 0
     390:	82 e3       	ldi	r24, 0x32	; 50
     392:	90 e0       	ldi	r25, 0x00	; 0
     394:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
     398:	86 e9       	ldi	r24, 0x96	; 150
     39a:	90 e0       	ldi	r25, 0x00	; 0
     39c:	0e 94 32 07 	call	0xe64	; 0xe64 <delay_ms>
	delay(150);
	set_motors(0,0);
     3a0:	60 e0       	ldi	r22, 0x00	; 0
     3a2:	70 e0       	ldi	r23, 0x00	; 0
     3a4:	80 e0       	ldi	r24, 0x00	; 0
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
     3ac:	08 95       	ret

000003ae <motorControl>:
		
	}
}


void motorControl(char x){
     3ae:	cf 93       	push	r28
     3b0:	c8 2f       	mov	r28, r24
	read_line(sensors,IR_EMITTERS_ON);
     3b2:	61 e0       	ldi	r22, 0x01	; 1
     3b4:	8a e9       	ldi	r24, 0x9A	; 154
     3b6:	91 e0       	ldi	r25, 0x01	; 1
     3b8:	0e 94 74 07 	call	0xee8	; 0xee8 <read_line>
	
	if(x == 'N')
     3bc:	ce 34       	cpi	r28, 0x4E	; 78
     3be:	39 f4       	brne	.+14     	; 0x3ce <motorControl+0x20>
	set_motors(0,0);
     3c0:	60 e0       	ldi	r22, 0x00	; 0
     3c2:	70 e0       	ldi	r23, 0x00	; 0
     3c4:	80 e0       	ldi	r24, 0x00	; 0
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
     3cc:	b1 c0       	rjmp	.+354    	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
	
	
	else if(x == 'L'){										//turn left
     3ce:	cc 34       	cpi	r28, 0x4C	; 76
     3d0:	09 f5       	brne	.+66     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
		set_motors(-50,50);
     3d2:	62 e3       	ldi	r22, 0x32	; 50
     3d4:	70 e0       	ldi	r23, 0x00	; 0
     3d6:	8e ec       	ldi	r24, 0xCE	; 206
     3d8:	9f ef       	ldi	r25, 0xFF	; 255
     3da:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
		while (sensors[2] >=500){
     3de:	05 c0       	rjmp	.+10     	; 0x3ea <motorControl+0x3c>
			read_line(sensors,IR_EMITTERS_ON);
     3e0:	61 e0       	ldi	r22, 0x01	; 1
     3e2:	8a e9       	ldi	r24, 0x9A	; 154
     3e4:	91 e0       	ldi	r25, 0x01	; 1
     3e6:	0e 94 74 07 	call	0xee8	; 0xee8 <read_line>
	set_motors(0,0);
	
	
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
     3ea:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     3ee:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     3f2:	84 3f       	cpi	r24, 0xF4	; 244
     3f4:	91 40       	sbci	r25, 0x01	; 1
     3f6:	a0 f7       	brcc	.-24     	; 0x3e0 <motorControl+0x32>
     3f8:	05 c0       	rjmp	.+10     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     3fa:	61 e0       	ldi	r22, 0x01	; 1
     3fc:	8a e9       	ldi	r24, 0x9A	; 154
     3fe:	91 e0       	ldi	r25, 0x01	; 1
     400:	0e 94 74 07 	call	0xee8	; 0xee8 <read_line>
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     404:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     408:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     40c:	85 3f       	cpi	r24, 0xF5	; 245
     40e:	91 40       	sbci	r25, 0x01	; 1
     410:	a0 f3       	brcs	.-24     	; 0x3fa <motorControl+0x4c>
     412:	8e c0       	rjmp	.+284    	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'R'){									//turn right
     414:	c2 35       	cpi	r28, 0x52	; 82
     416:	09 f5       	brne	.+66     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
		set_motors(50,-50);
     418:	6e ec       	ldi	r22, 0xCE	; 206
     41a:	7f ef       	ldi	r23, 0xFF	; 255
     41c:	82 e3       	ldi	r24, 0x32	; 50
     41e:	90 e0       	ldi	r25, 0x00	; 0
     420:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
		while (sensors[2] >=500){
     424:	05 c0       	rjmp	.+10     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
			read_line(sensors,IR_EMITTERS_ON);
     426:	61 e0       	ldi	r22, 0x01	; 1
     428:	8a e9       	ldi	r24, 0x9A	; 154
     42a:	91 e0       	ldi	r25, 0x01	; 1
     42c:	0e 94 74 07 	call	0xee8	; 0xee8 <read_line>
		}
	}
	
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
     430:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     434:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     438:	84 3f       	cpi	r24, 0xF4	; 244
     43a:	91 40       	sbci	r25, 0x01	; 1
     43c:	a0 f7       	brcc	.-24     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
     43e:	05 c0       	rjmp	.+10     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     440:	61 e0       	ldi	r22, 0x01	; 1
     442:	8a e9       	ldi	r24, 0x9A	; 154
     444:	91 e0       	ldi	r25, 0x01	; 1
     446:	0e 94 74 07 	call	0xee8	; 0xee8 <read_line>
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     44a:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     44e:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     452:	85 3f       	cpi	r24, 0xF5	; 245
     454:	91 40       	sbci	r25, 0x01	; 1
     456:	a0 f3       	brcs	.-24     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
     458:	6b c0       	rjmp	.+214    	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'S'){									//drive straight and corrects the adjusment of the robot if it aint straight
     45a:	c3 35       	cpi	r28, 0x53	; 83
     45c:	89 f5       	brne	.+98     	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
		set_motors(50,50);
     45e:	62 e3       	ldi	r22, 0x32	; 50
     460:	70 e0       	ldi	r23, 0x00	; 0
     462:	82 e3       	ldi	r24, 0x32	; 50
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
		
		if (sensors[3] >=400  && sensors[4] <=400 )
     46a:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x6>
     46e:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x7>
     472:	80 39       	cpi	r24, 0x90	; 144
     474:	91 40       	sbci	r25, 0x01	; 1
     476:	68 f0       	brcs	.+26     	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
     478:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <sensors+0x8>
     47c:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <sensors+0x9>
     480:	81 39       	cpi	r24, 0x91	; 145
     482:	91 40       	sbci	r25, 0x01	; 1
     484:	30 f4       	brcc	.+12     	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
		set_motors(100,40);
     486:	68 e2       	ldi	r22, 0x28	; 40
     488:	70 e0       	ldi	r23, 0x00	; 0
     48a:	84 e6       	ldi	r24, 0x64	; 100
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
		if (sensors[1] >=400 && sensors[0] <=400  )
     492:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors+0x2>
     496:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x3>
     49a:	80 39       	cpi	r24, 0x90	; 144
     49c:	91 40       	sbci	r25, 0x01	; 1
     49e:	08 f4       	brcc	.+2      	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
     4a0:	47 c0       	rjmp	.+142    	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
     4a2:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <sensors>
     4a6:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <sensors+0x1>
     4aa:	81 39       	cpi	r24, 0x91	; 145
     4ac:	91 40       	sbci	r25, 0x01	; 1
     4ae:	08 f0       	brcs	.+2      	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
     4b0:	3f c0       	rjmp	.+126    	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
		set_motors(40,100);
     4b2:	64 e6       	ldi	r22, 0x64	; 100
     4b4:	70 e0       	ldi	r23, 0x00	; 0
     4b6:	88 e2       	ldi	r24, 0x28	; 40
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
     4be:	38 c0       	rjmp	.+112    	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
	}
	
	else if(x == 'B'){									// reverse
     4c0:	c2 34       	cpi	r28, 0x42	; 66
     4c2:	09 f5       	brne	.+66     	; 0x506 <__EEPROM_REGION_LENGTH__+0x106>
		set_motors(-50,-50);
     4c4:	6e ec       	ldi	r22, 0xCE	; 206
     4c6:	7f ef       	ldi	r23, 0xFF	; 255
     4c8:	8e ec       	ldi	r24, 0xCE	; 206
     4ca:	9f ef       	ldi	r25, 0xFF	; 255
     4cc:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
		if (sensors[3] >=400)
     4d0:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x6>
     4d4:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x7>
     4d8:	80 39       	cpi	r24, 0x90	; 144
     4da:	91 40       	sbci	r25, 0x01	; 1
     4dc:	30 f0       	brcs	.+12     	; 0x4ea <__EEPROM_REGION_LENGTH__+0xea>
		set_motors(-50,-55);
     4de:	69 ec       	ldi	r22, 0xC9	; 201
     4e0:	7f ef       	ldi	r23, 0xFF	; 255
     4e2:	8e ec       	ldi	r24, 0xCE	; 206
     4e4:	9f ef       	ldi	r25, 0xFF	; 255
     4e6:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
		if (sensors[1] >=400)
     4ea:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors+0x2>
     4ee:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x3>
     4f2:	80 39       	cpi	r24, 0x90	; 144
     4f4:	91 40       	sbci	r25, 0x01	; 1
     4f6:	e0 f0       	brcs	.+56     	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
		set_motors(-55,-50);
     4f8:	6e ec       	ldi	r22, 0xCE	; 206
     4fa:	7f ef       	ldi	r23, 0xFF	; 255
     4fc:	89 ec       	ldi	r24, 0xC9	; 201
     4fe:	9f ef       	ldi	r25, 0xFF	; 255
     500:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
     504:	15 c0       	rjmp	.+42     	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
	}
	else if(x == 'T'){
     506:	c4 35       	cpi	r28, 0x54	; 84
     508:	99 f4       	brne	.+38     	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
		set_motors(-75,75);
     50a:	6b e4       	ldi	r22, 0x4B	; 75
     50c:	70 e0       	ldi	r23, 0x00	; 0
     50e:	85 eb       	ldi	r24, 0xB5	; 181
     510:	9f ef       	ldi	r25, 0xFF	; 255
     512:	0e 94 a4 06 	call	0xd48	; 0xd48 <set_motors>
		while (sensors[2] >=500){
     516:	05 c0       	rjmp	.+10     	; 0x522 <__EEPROM_REGION_LENGTH__+0x122>
			read_line(sensors,IR_EMITTERS_ON);
     518:	61 e0       	ldi	r22, 0x01	; 1
     51a:	8a e9       	ldi	r24, 0x9A	; 154
     51c:	91 e0       	ldi	r25, 0x01	; 1
     51e:	0e 94 74 07 	call	0xee8	; 0xee8 <read_line>
		if (sensors[1] >=400)
		set_motors(-55,-50);
	}
	else if(x == 'T'){
		set_motors(-75,75);
		while (sensors[2] >=500){
     522:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     526:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     52a:	84 3f       	cpi	r24, 0xF4	; 244
     52c:	91 40       	sbci	r25, 0x01	; 1
     52e:	a0 f7       	brcc	.-24     	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
     530:	cf 91       	pop	r28
     532:	08 95       	ret

00000534 <direction>:
	set_motors(0,0);
}

char direction(){																											// function that returns the type of junction it detects
	while(1){																												// >= 500 = black line		<=500 = white
		read_line(sensors,IR_EMITTERS_ON);
     534:	61 e0       	ldi	r22, 0x01	; 1
     536:	8a e9       	ldi	r24, 0x9A	; 154
     538:	91 e0       	ldi	r25, 0x01	; 1
     53a:	0e 94 74 07 	call	0xee8	; 0xee8 <read_line>
		
		if (sensors[1] >=500 && sensors[3] >= 500){																			// this checks if its a X junction or a T junction
     53e:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors+0x2>
     542:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x3>
     546:	84 3f       	cpi	r24, 0xF4	; 244
     548:	21 e0       	ldi	r18, 0x01	; 1
     54a:	92 07       	cpc	r25, r18
     54c:	c0 f0       	brcs	.+48     	; 0x57e <direction+0x4a>
     54e:	20 91 a0 01 	lds	r18, 0x01A0	; 0x8001a0 <sensors+0x6>
     552:	30 91 a1 01 	lds	r19, 0x01A1	; 0x8001a1 <sensors+0x7>
     556:	24 3f       	cpi	r18, 0xF4	; 244
     558:	31 40       	sbci	r19, 0x01	; 1
     55a:	88 f0       	brcs	.+34     	; 0x57e <direction+0x4a>
			inch();
     55c:	0e 94 c6 01 	call	0x38c	; 0x38c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     560:	61 e0       	ldi	r22, 0x01	; 1
     562:	8a e9       	ldi	r24, 0x9A	; 154
     564:	91 e0       	ldi	r25, 0x01	; 1
     566:	0e 94 74 07 	call	0xee8	; 0xee8 <read_line>
			
			if (sensors[2] >=500)
     56a:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     56e:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     572:	84 3f       	cpi	r24, 0xF4	; 244
     574:	91 40       	sbci	r25, 0x01	; 1
     576:	08 f4       	brcc	.+2      	; 0x57a <direction+0x46>
     578:	90 c0       	rjmp	.+288    	; 0x69a <direction+0x166>
			return X_junction;
     57a:	88 e0       	ldi	r24, 0x08	; 8
     57c:	08 95       	ret
			else
			return T_junction;
		}
		
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
     57e:	84 3f       	cpi	r24, 0xF4	; 244
     580:	21 e0       	ldi	r18, 0x01	; 1
     582:	92 07       	cpc	r25, r18
     584:	00 f1       	brcs	.+64     	; 0x5c6 <direction+0x92>
     586:	20 91 9a 01 	lds	r18, 0x019A	; 0x80019a <sensors>
     58a:	30 91 9b 01 	lds	r19, 0x019B	; 0x80019b <sensors+0x1>
     58e:	24 3f       	cpi	r18, 0xF4	; 244
     590:	31 40       	sbci	r19, 0x01	; 1
     592:	c8 f0       	brcs	.+50     	; 0x5c6 <direction+0x92>
			inch();
     594:	0e 94 c6 01 	call	0x38c	; 0x38c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     598:	61 e0       	ldi	r22, 0x01	; 1
     59a:	8a e9       	ldi	r24, 0x9A	; 154
     59c:	91 e0       	ldi	r25, 0x01	; 1
     59e:	0e 94 74 07 	call	0xee8	; 0xee8 <read_line>
			
			if (sensors[2] >= 500 || sensors[3] >=500)
     5a2:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     5a6:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     5aa:	84 3f       	cpi	r24, 0xF4	; 244
     5ac:	91 40       	sbci	r25, 0x01	; 1
     5ae:	08 f0       	brcs	.+2      	; 0x5b2 <direction+0x7e>
     5b0:	76 c0       	rjmp	.+236    	; 0x69e <direction+0x16a>
     5b2:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x6>
     5b6:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x7>
     5ba:	84 3f       	cpi	r24, 0xF4	; 244
     5bc:	91 40       	sbci	r25, 0x01	; 1
     5be:	08 f4       	brcc	.+2      	; 0x5c2 <direction+0x8e>
     5c0:	70 c0       	rjmp	.+224    	; 0x6a2 <direction+0x16e>
			return Straight_left_junction;
     5c2:	86 e0       	ldi	r24, 0x06	; 6
     5c4:	08 95       	ret
			else
			return Left_corner;
		}
		
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
     5c6:	40 91 a0 01 	lds	r20, 0x01A0	; 0x8001a0 <sensors+0x6>
     5ca:	50 91 a1 01 	lds	r21, 0x01A1	; 0x8001a1 <sensors+0x7>
     5ce:	44 3f       	cpi	r20, 0xF4	; 244
     5d0:	61 e0       	ldi	r22, 0x01	; 1
     5d2:	56 07       	cpc	r21, r22
     5d4:	00 f1       	brcs	.+64     	; 0x616 <direction+0xe2>
     5d6:	20 91 a2 01 	lds	r18, 0x01A2	; 0x8001a2 <sensors+0x8>
     5da:	30 91 a3 01 	lds	r19, 0x01A3	; 0x8001a3 <sensors+0x9>
     5de:	24 3f       	cpi	r18, 0xF4	; 244
     5e0:	31 40       	sbci	r19, 0x01	; 1
     5e2:	c8 f0       	brcs	.+50     	; 0x616 <direction+0xe2>
			inch();
     5e4:	0e 94 c6 01 	call	0x38c	; 0x38c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     5e8:	61 e0       	ldi	r22, 0x01	; 1
     5ea:	8a e9       	ldi	r24, 0x9A	; 154
     5ec:	91 e0       	ldi	r25, 0x01	; 1
     5ee:	0e 94 74 07 	call	0xee8	; 0xee8 <read_line>
			
			if (sensors[2] >= 500 || sensors[1] >=500)
     5f2:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x4>
     5f6:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x5>
     5fa:	84 3f       	cpi	r24, 0xF4	; 244
     5fc:	91 40       	sbci	r25, 0x01	; 1
     5fe:	08 f0       	brcs	.+2      	; 0x602 <direction+0xce>
     600:	52 c0       	rjmp	.+164    	; 0x6a6 <direction+0x172>
     602:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors+0x2>
     606:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x3>
     60a:	84 3f       	cpi	r24, 0xF4	; 244
     60c:	91 40       	sbci	r25, 0x01	; 1
     60e:	08 f4       	brcc	.+2      	; 0x612 <direction+0xde>
     610:	4c c0       	rjmp	.+152    	; 0x6aa <direction+0x176>
			return Straight_right_junction;
     612:	85 e0       	ldi	r24, 0x05	; 5
     614:	08 95       	ret
			else
			return Right_corner;
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
     616:	20 91 9e 01 	lds	r18, 0x019E	; 0x80019e <sensors+0x4>
     61a:	30 91 9f 01 	lds	r19, 0x019F	; 0x80019f <sensors+0x5>
     61e:	29 3c       	cpi	r18, 0xC9	; 201
     620:	31 05       	cpc	r19, r1
     622:	08 f4       	brcc	.+2      	; 0x626 <direction+0xf2>
     624:	44 c0       	rjmp	.+136    	; 0x6ae <direction+0x17a>
			return Line_end;
		}

		
		else if (sensors[2] >=500){
     626:	24 3f       	cpi	r18, 0xF4	; 244
     628:	61 e0       	ldi	r22, 0x01	; 1
     62a:	36 07       	cpc	r19, r22
     62c:	08 f4       	brcc	.+2      	; 0x630 <direction+0xfc>
     62e:	82 cf       	rjmp	.-252    	; 0x534 <direction>
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
     630:	24 3f       	cpi	r18, 0xF4	; 244
     632:	61 e0       	ldi	r22, 0x01	; 1
     634:	36 07       	cpc	r19, r22
     636:	e8 f1       	brcs	.+122    	; 0x6b2 <direction+0x17e>
     638:	45 3f       	cpi	r20, 0xF5	; 245
     63a:	51 40       	sbci	r21, 0x01	; 1
     63c:	e0 f5       	brcc	.+120    	; 0x6b6 <direction+0x182>
     63e:	40 91 a2 01 	lds	r20, 0x01A2	; 0x8001a2 <sensors+0x8>
     642:	50 91 a3 01 	lds	r21, 0x01A3	; 0x8001a3 <sensors+0x9>
     646:	44 3f       	cpi	r20, 0xF4	; 244
     648:	51 40       	sbci	r21, 0x01	; 1
     64a:	b8 f1       	brcs	.+110    	; 0x6ba <direction+0x186>
     64c:	40 91 9a 01 	lds	r20, 0x019A	; 0x80019a <sensors>
     650:	50 91 9b 01 	lds	r21, 0x019B	; 0x80019b <sensors+0x1>
     654:	44 3f       	cpi	r20, 0xF4	; 244
     656:	51 40       	sbci	r21, 0x01	; 1
     658:	90 f1       	brcs	.+100    	; 0x6be <direction+0x18a>
     65a:	85 3f       	cpi	r24, 0xF5	; 245
     65c:	91 40       	sbci	r25, 0x01	; 1
     65e:	88 f5       	brcc	.+98     	; 0x6c2 <direction+0x18e>
     660:	24 3f       	cpi	r18, 0xF4	; 244
     662:	31 40       	sbci	r19, 0x01	; 1
     664:	50 f4       	brcc	.+20     	; 0x67a <direction+0x146>
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
			}
			else
			return Straight;																						// check if its straight without any corners
     666:	80 e0       	ldi	r24, 0x00	; 0
     668:	08 95       	ret

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
					read_line(sensors,IR_EMITTERS_ON);
     66a:	61 e0       	ldi	r22, 0x01	; 1
     66c:	8a e9       	ldi	r24, 0x9A	; 154
     66e:	91 e0       	ldi	r25, 0x01	; 1
     670:	0e 94 74 07 	call	0xee8	; 0xee8 <read_line>
					motorControl('S');
     674:	83 e5       	ldi	r24, 0x53	; 83
     676:	0e 94 d7 01 	call	0x3ae	; 0x3ae <motorControl>
		}

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
     67a:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <sensors+0x8>
     67e:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <sensors+0x9>
     682:	80 39       	cpi	r24, 0x90	; 144
     684:	91 40       	sbci	r25, 0x01	; 1
     686:	88 f7       	brcc	.-30     	; 0x66a <direction+0x136>
     688:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <sensors>
     68c:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <sensors+0x1>
     690:	80 39       	cpi	r24, 0x90	; 144
     692:	91 40       	sbci	r25, 0x01	; 1
     694:	50 f7       	brcc	.-44     	; 0x66a <direction+0x136>
					read_line(sensors,IR_EMITTERS_ON);
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
     696:	82 e0       	ldi	r24, 0x02	; 2
     698:	08 95       	ret
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >=500)
			return X_junction;
			else
			return T_junction;
     69a:	87 e0       	ldi	r24, 0x07	; 7
     69c:	08 95       	ret
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[3] >=500)
			return Straight_left_junction;
     69e:	86 e0       	ldi	r24, 0x06	; 6
     6a0:	08 95       	ret
			else
			return Left_corner;
     6a2:	83 e0       	ldi	r24, 0x03	; 3
     6a4:	08 95       	ret
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[1] >=500)
			return Straight_right_junction;
     6a6:	85 e0       	ldi	r24, 0x05	; 5
     6a8:	08 95       	ret
			else
			return Right_corner;
     6aa:	84 e0       	ldi	r24, 0x04	; 4
     6ac:	08 95       	ret
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
			return Line_end;
     6ae:	81 e0       	ldi	r24, 0x01	; 1
     6b0:	08 95       	ret
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
			}
			else
			return Straight;																						// check if its straight without any corners
     6b2:	80 e0       	ldi	r24, 0x00	; 0
     6b4:	08 95       	ret
     6b6:	80 e0       	ldi	r24, 0x00	; 0
     6b8:	08 95       	ret
     6ba:	80 e0       	ldi	r24, 0x00	; 0
     6bc:	08 95       	ret
     6be:	80 e0       	ldi	r24, 0x00	; 0
     6c0:	08 95       	ret
     6c2:	80 e0       	ldi	r24, 0x00	; 0
			
		}
		
	}
}
     6c4:	08 95       	ret

000006c6 <_ZN15OrangutanAnalog7setModeEh.part.0>:
     6c6:	ec e7       	ldi	r30, 0x7C	; 124
     6c8:	f0 e0       	ldi	r31, 0x00	; 0
     6ca:	80 81       	ld	r24, Z
     6cc:	8f 7d       	andi	r24, 0xDF	; 223
     6ce:	80 83       	st	Z, r24
     6d0:	08 95       	ret

000006d2 <_ZN15OrangutanAnalog7setModeEh>:
     6d2:	81 11       	cpse	r24, r1
     6d4:	03 c0       	rjmp	.+6      	; 0x6dc <_ZN15OrangutanAnalog7setModeEh+0xa>
     6d6:	0e 94 63 03 	call	0x6c6	; 0x6c6 <_ZN15OrangutanAnalog7setModeEh.part.0>
     6da:	08 95       	ret
     6dc:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     6e0:	80 62       	ori	r24, 0x20	; 32
     6e2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     6e6:	08 95       	ret

000006e8 <_ZN15OrangutanAnalog7getModeEv>:
     6e8:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     6ec:	85 fb       	bst	r24, 5
     6ee:	88 27       	eor	r24, r24
     6f0:	80 f9       	bld	r24, 0
     6f2:	08 95       	ret

000006f4 <_ZN15OrangutanAnalog16conversionResultEv>:
     6f4:	0e 94 74 03 	call	0x6e8	; 0x6e8 <_ZN15OrangutanAnalog7getModeEv>
     6f8:	88 23       	and	r24, r24
     6fa:	21 f0       	breq	.+8      	; 0x704 <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     6fc:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     700:	90 e0       	ldi	r25, 0x00	; 0
     702:	08 95       	ret
     704:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     708:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     70c:	08 95       	ret

0000070e <_ZN15OrangutanAnalog15startConversionEhh>:
     70e:	80 32       	cpi	r24, 0x20	; 32
     710:	a0 f4       	brcc	.+40     	; 0x73a <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
     712:	97 e8       	ldi	r25, 0x87	; 135
     714:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     718:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     71c:	66 23       	and	r22, r22
     71e:	11 f0       	breq	.+4      	; 0x724 <_ZN15OrangutanAnalog15startConversionEhh+0x16>
     720:	90 6c       	ori	r25, 0xC0	; 192
     722:	02 c0       	rjmp	.+4      	; 0x728 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
     724:	9f 77       	andi	r25, 0x7F	; 127
     726:	90 64       	ori	r25, 0x40	; 64
     728:	90 7e       	andi	r25, 0xE0	; 224
     72a:	98 2b       	or	r25, r24
     72c:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     730:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     734:	80 64       	ori	r24, 0x40	; 64
     736:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     73a:	08 95       	ret

0000073c <_ZN15OrangutanAnalog11readAverageEhj>:
     73c:	a0 e0       	ldi	r26, 0x00	; 0
     73e:	b0 e0       	ldi	r27, 0x00	; 0
     740:	e4 ea       	ldi	r30, 0xA4	; 164
     742:	f3 e0       	ldi	r31, 0x03	; 3
     744:	0c 94 41 0d 	jmp	0x1a82	; 0x1a82 <__prologue_saves__+0x14>
     748:	eb 01       	movw	r28, r22
     74a:	60 e0       	ldi	r22, 0x00	; 0
     74c:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN15OrangutanAnalog15startConversionEhh>
     750:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     754:	86 fd       	sbrc	r24, 6
     756:	fc cf       	rjmp	.-8      	; 0x750 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
     758:	8e 01       	movw	r16, r28
     75a:	c1 2c       	mov	r12, r1
     75c:	d1 2c       	mov	r13, r1
     75e:	76 01       	movw	r14, r12
     760:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     764:	80 64       	ori	r24, 0x40	; 64
     766:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     76a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     76e:	86 fd       	sbrc	r24, 6
     770:	fc cf       	rjmp	.-8      	; 0x76a <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
     772:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <_ZN15OrangutanAnalog16conversionResultEv>
     776:	c8 0e       	add	r12, r24
     778:	d9 1e       	adc	r13, r25
     77a:	e1 1c       	adc	r14, r1
     77c:	f1 1c       	adc	r15, r1
     77e:	01 50       	subi	r16, 0x01	; 1
     780:	11 09       	sbc	r17, r1
     782:	01 15       	cp	r16, r1
     784:	11 05       	cpc	r17, r1
     786:	61 f7       	brne	.-40     	; 0x760 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
     788:	ce 01       	movw	r24, r28
     78a:	96 95       	lsr	r25
     78c:	87 95       	ror	r24
     78e:	c0 34       	cpi	r28, 0x40	; 64
     790:	d1 05       	cpc	r29, r1
     792:	38 f4       	brcc	.+14     	; 0x7a2 <_ZN15OrangutanAnalog11readAverageEhj+0x66>
     794:	8c 0d       	add	r24, r12
     796:	9d 1d       	adc	r25, r13
     798:	be 01       	movw	r22, r28
     79a:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__udivmodhi4>
     79e:	cb 01       	movw	r24, r22
     7a0:	0e c0       	rjmp	.+28     	; 0x7be <_ZN15OrangutanAnalog11readAverageEhj+0x82>
     7a2:	a7 01       	movw	r20, r14
     7a4:	96 01       	movw	r18, r12
     7a6:	28 0f       	add	r18, r24
     7a8:	39 1f       	adc	r19, r25
     7aa:	41 1d       	adc	r20, r1
     7ac:	51 1d       	adc	r21, r1
     7ae:	ca 01       	movw	r24, r20
     7b0:	b9 01       	movw	r22, r18
     7b2:	9e 01       	movw	r18, r28
     7b4:	40 e0       	ldi	r20, 0x00	; 0
     7b6:	50 e0       	ldi	r21, 0x00	; 0
     7b8:	0e 94 ce 0c 	call	0x199c	; 0x199c <__udivmodsi4>
     7bc:	c9 01       	movw	r24, r18
     7be:	cd b7       	in	r28, 0x3d	; 61
     7c0:	de b7       	in	r29, 0x3e	; 62
     7c2:	e8 e0       	ldi	r30, 0x08	; 8
     7c4:	0c 94 5d 0d 	jmp	0x1aba	; 0x1aba <__epilogue_restores__+0x14>

000007c8 <_ZN15OrangutanAnalog12toMillivoltsEj>:
     7c8:	cf 92       	push	r12
     7ca:	df 92       	push	r13
     7cc:	ef 92       	push	r14
     7ce:	ff 92       	push	r15
     7d0:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7d4:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7d8:	9c 01       	movw	r18, r24
     7da:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <__umulhisi3>
     7de:	6b 01       	movw	r12, r22
     7e0:	7c 01       	movw	r14, r24
     7e2:	0e 94 74 03 	call	0x6e8	; 0x6e8 <_ZN15OrangutanAnalog7getModeEv>
     7e6:	88 23       	and	r24, r24
     7e8:	59 f0       	breq	.+22     	; 0x800 <__DATA_REGION_LENGTH__>
     7ea:	c7 01       	movw	r24, r14
     7ec:	b6 01       	movw	r22, r12
     7ee:	61 58       	subi	r22, 0x81	; 129
     7f0:	7f 4f       	sbci	r23, 0xFF	; 255
     7f2:	8f 4f       	sbci	r24, 0xFF	; 255
     7f4:	9f 4f       	sbci	r25, 0xFF	; 255
     7f6:	2f ef       	ldi	r18, 0xFF	; 255
     7f8:	30 e0       	ldi	r19, 0x00	; 0
     7fa:	40 e0       	ldi	r20, 0x00	; 0
     7fc:	50 e0       	ldi	r21, 0x00	; 0
     7fe:	0a c0       	rjmp	.+20     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     800:	c7 01       	movw	r24, r14
     802:	b6 01       	movw	r22, r12
     804:	61 50       	subi	r22, 0x01	; 1
     806:	7e 4f       	sbci	r23, 0xFE	; 254
     808:	8f 4f       	sbci	r24, 0xFF	; 255
     80a:	9f 4f       	sbci	r25, 0xFF	; 255
     80c:	2f ef       	ldi	r18, 0xFF	; 255
     80e:	33 e0       	ldi	r19, 0x03	; 3
     810:	40 e0       	ldi	r20, 0x00	; 0
     812:	50 e0       	ldi	r21, 0x00	; 0
     814:	0e 94 ce 0c 	call	0x199c	; 0x199c <__udivmodsi4>
     818:	c9 01       	movw	r24, r18
     81a:	ff 90       	pop	r15
     81c:	ef 90       	pop	r14
     81e:	df 90       	pop	r13
     820:	cf 90       	pop	r12
     822:	08 95       	ret

00000824 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
     824:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN15OrangutanAnalog11readAverageEhj>
     828:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <_ZN15OrangutanAnalog12toMillivoltsEj>
     82c:	08 95       	ret

0000082e <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
     82e:	1f 93       	push	r17
     830:	cf 93       	push	r28
     832:	df 93       	push	r29
     834:	0e 94 74 03 	call	0x6e8	; 0x6e8 <_ZN15OrangutanAnalog7getModeEv>
     838:	18 2f       	mov	r17, r24
     83a:	0e 94 63 03 	call	0x6c6	; 0x6c6 <_ZN15OrangutanAnalog7setModeEh.part.0>
     83e:	6a e0       	ldi	r22, 0x0A	; 10
     840:	70 e0       	ldi	r23, 0x00	; 0
     842:	86 e0       	ldi	r24, 0x06	; 6
     844:	0e 94 12 04 	call	0x824	; 0x824 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
     848:	ec 01       	movw	r28, r24
     84a:	81 2f       	mov	r24, r17
     84c:	0e 94 69 03 	call	0x6d2	; 0x6d2 <_ZN15OrangutanAnalog7setModeEh>
     850:	ce 01       	movw	r24, r28
     852:	88 0f       	add	r24, r24
     854:	99 1f       	adc	r25, r25
     856:	8c 0f       	add	r24, r28
     858:	9d 1f       	adc	r25, r29
     85a:	01 96       	adiw	r24, 0x01	; 1
     85c:	96 95       	lsr	r25
     85e:	87 95       	ror	r24
     860:	df 91       	pop	r29
     862:	cf 91       	pop	r28
     864:	1f 91       	pop	r17
     866:	08 95       	ret

00000868 <read_battery_millivolts_3pi>:
     868:	0e 94 17 04 	call	0x82e	; 0x82e <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
     86c:	08 95       	ret

0000086e <delay_us.constprop.0>:
     86e:	81 e0       	ldi	r24, 0x01	; 1
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	6f 93       	push	r22
     874:	64 e0       	ldi	r22, 0x04	; 4
     876:	6a 95       	dec	r22
     878:	f1 f7       	brne	.-4      	; 0x876 <delay_us.constprop.0+0x8>
     87a:	6f 91       	pop	r22
     87c:	01 97       	sbiw	r24, 0x01	; 1
     87e:	c9 f7       	brne	.-14     	; 0x872 <delay_us.constprop.0+0x4>
     880:	08 95       	ret

00000882 <_ZN12OrangutanLCD8busyWaitEv>:
     882:	0f 93       	push	r16
     884:	1f 93       	push	r17
     886:	cf 93       	push	r28
     888:	df 93       	push	r29
     88a:	1a b1       	in	r17, 0x0a	; 10
     88c:	57 98       	cbi	0x0a, 7	; 10
     88e:	5a 98       	cbi	0x0b, 2	; 11
     890:	28 9a       	sbi	0x05, 0	; 5
     892:	c0 e0       	ldi	r28, 0x00	; 0
     894:	d0 e0       	ldi	r29, 0x00	; 0
     896:	0e 94 37 04 	call	0x86e	; 0x86e <delay_us.constprop.0>
     89a:	5c 9a       	sbi	0x0b, 4	; 11
     89c:	0e 94 37 04 	call	0x86e	; 0x86e <delay_us.constprop.0>
     8a0:	09 b1       	in	r16, 0x09	; 9
     8a2:	5c 98       	cbi	0x0b, 4	; 11
     8a4:	0e 94 37 04 	call	0x86e	; 0x86e <delay_us.constprop.0>
     8a8:	5c 9a       	sbi	0x0b, 4	; 11
     8aa:	0e 94 37 04 	call	0x86e	; 0x86e <delay_us.constprop.0>
     8ae:	5c 98       	cbi	0x0b, 4	; 11
     8b0:	24 96       	adiw	r28, 0x04	; 4
     8b2:	07 ff       	sbrs	r16, 7
     8b4:	10 c0       	rjmp	.+32     	; 0x8d6 <_ZN12OrangutanLCD8busyWaitEv+0x54>
     8b6:	ae 01       	movw	r20, r28
     8b8:	60 e0       	ldi	r22, 0x00	; 0
     8ba:	70 e0       	ldi	r23, 0x00	; 0
     8bc:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     8c0:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <__data_end+0x1>
     8c4:	a0 91 3a 01 	lds	r26, 0x013A	; 0x80013a <__data_end+0x2>
     8c8:	b0 91 3b 01 	lds	r27, 0x013B	; 0x80013b <__data_end+0x3>
     8cc:	48 17       	cp	r20, r24
     8ce:	59 07       	cpc	r21, r25
     8d0:	6a 07       	cpc	r22, r26
     8d2:	7b 07       	cpc	r23, r27
     8d4:	00 f3       	brcs	.-64     	; 0x896 <_ZN12OrangutanLCD8busyWaitEv+0x14>
     8d6:	1a b9       	out	0x0a, r17	; 10
     8d8:	df 91       	pop	r29
     8da:	cf 91       	pop	r28
     8dc:	1f 91       	pop	r17
     8de:	0f 91       	pop	r16
     8e0:	08 95       	ret

000008e2 <_ZN12OrangutanLCD8sendDataEh>:
     8e2:	95 b1       	in	r25, 0x05	; 5
     8e4:	28 2f       	mov	r18, r24
     8e6:	21 70       	andi	r18, 0x01	; 1
     8e8:	30 e0       	ldi	r19, 0x00	; 0
     8ea:	22 0f       	add	r18, r18
     8ec:	33 1f       	adc	r19, r19
     8ee:	48 2f       	mov	r20, r24
     8f0:	46 70       	andi	r20, 0x06	; 6
     8f2:	68 e0       	ldi	r22, 0x08	; 8
     8f4:	46 9f       	mul	r20, r22
     8f6:	a0 01       	movw	r20, r0
     8f8:	11 24       	eor	r1, r1
     8fa:	24 2b       	or	r18, r20
     8fc:	9d 7c       	andi	r25, 0xCD	; 205
     8fe:	29 2b       	or	r18, r25
     900:	25 b9       	out	0x05, r18	; 5
     902:	9b b1       	in	r25, 0x0b	; 11
     904:	88 70       	andi	r24, 0x08	; 8
     906:	82 95       	swap	r24
     908:	80 7f       	andi	r24, 0xF0	; 240
     90a:	9f 77       	andi	r25, 0x7F	; 127
     90c:	89 2b       	or	r24, r25
     90e:	8b b9       	out	0x0b, r24	; 11
     910:	5c 9a       	sbi	0x0b, 4	; 11
     912:	0e 94 37 04 	call	0x86e	; 0x86e <delay_us.constprop.0>
     916:	5c 98       	cbi	0x0b, 4	; 11
     918:	0e 94 37 04 	call	0x86e	; 0x86e <delay_us.constprop.0>
     91c:	08 95       	ret

0000091e <_ZN12OrangutanLCD4sendEhhh>:
     91e:	a0 e0       	ldi	r26, 0x00	; 0
     920:	b0 e0       	ldi	r27, 0x00	; 0
     922:	e5 e9       	ldi	r30, 0x95	; 149
     924:	f4 e0       	ldi	r31, 0x04	; 4
     926:	0c 94 42 0d 	jmp	0x1a84	; 0x1a84 <__prologue_saves__+0x16>
     92a:	c8 2f       	mov	r28, r24
     92c:	d6 2e       	mov	r13, r22
     92e:	e4 2e       	mov	r14, r20
     930:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <_ZZN12OrangutanLCD4initEvE11initialized>
     934:	81 11       	cpse	r24, r1
     936:	05 c0       	rjmp	.+10     	; 0x942 <_ZN12OrangutanLCD4sendEhhh+0x24>
     938:	81 e0       	ldi	r24, 0x01	; 1
     93a:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <_ZZN12OrangutanLCD4initEvE11initialized>
     93e:	0e 94 ff 04 	call	0x9fe	; 0x9fe <_ZN12OrangutanLCD5init2Ev>
     942:	0e 94 41 04 	call	0x882	; 0x882 <_ZN12OrangutanLCD8busyWaitEv>
     946:	14 b1       	in	r17, 0x04	; 4
     948:	d5 b1       	in	r29, 0x05	; 5
     94a:	fa b0       	in	r15, 0x0a	; 10
     94c:	0b b1       	in	r16, 0x0b	; 11
     94e:	28 98       	cbi	0x05, 0	; 5
     950:	dd 20       	and	r13, r13
     952:	11 f0       	breq	.+4      	; 0x958 <_ZN12OrangutanLCD4sendEhhh+0x3a>
     954:	5a 9a       	sbi	0x0b, 2	; 11
     956:	01 c0       	rjmp	.+2      	; 0x95a <_ZN12OrangutanLCD4sendEhhh+0x3c>
     958:	5a 98       	cbi	0x0b, 2	; 11
     95a:	94 b1       	in	r25, 0x04	; 4
     95c:	92 63       	ori	r25, 0x32	; 50
     95e:	94 b9       	out	0x04, r25	; 4
     960:	57 9a       	sbi	0x0a, 7	; 10
     962:	81 e0       	ldi	r24, 0x01	; 1
     964:	e8 16       	cp	r14, r24
     966:	29 f0       	breq	.+10     	; 0x972 <_ZN12OrangutanLCD4sendEhhh+0x54>
     968:	8c 2f       	mov	r24, r28
     96a:	82 95       	swap	r24
     96c:	8f 70       	andi	r24, 0x0F	; 15
     96e:	0e 94 71 04 	call	0x8e2	; 0x8e2 <_ZN12OrangutanLCD8sendDataEh>
     972:	8c 2f       	mov	r24, r28
     974:	8f 70       	andi	r24, 0x0F	; 15
     976:	0e 94 71 04 	call	0x8e2	; 0x8e2 <_ZN12OrangutanLCD8sendDataEh>
     97a:	fa b8       	out	0x0a, r15	; 10
     97c:	0b b9       	out	0x0b, r16	; 11
     97e:	14 b9       	out	0x04, r17	; 4
     980:	d5 b9       	out	0x05, r29	; 5
     982:	cd b7       	in	r28, 0x3d	; 61
     984:	de b7       	in	r29, 0x3e	; 62
     986:	e7 e0       	ldi	r30, 0x07	; 7
     988:	0c 94 5e 0d 	jmp	0x1abc	; 0x1abc <__epilogue_restores__+0x16>

0000098c <_ZN12OrangutanLCD8send_cmdEh>:
     98c:	42 e0       	ldi	r20, 0x02	; 2
     98e:	60 e0       	ldi	r22, 0x00	; 0
     990:	0e 94 8f 04 	call	0x91e	; 0x91e <_ZN12OrangutanLCD4sendEhhh>
     994:	08 95       	ret

00000996 <_ZN12OrangutanLCD9send_dataEh>:
     996:	42 e0       	ldi	r20, 0x02	; 2
     998:	61 e0       	ldi	r22, 0x01	; 1
     99a:	0e 94 8f 04 	call	0x91e	; 0x91e <_ZN12OrangutanLCD4sendEhhh>
     99e:	08 95       	ret

000009a0 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>:
     9a0:	a1 e0       	ldi	r26, 0x01	; 1
     9a2:	b0 e0       	ldi	r27, 0x00	; 0
     9a4:	e6 ed       	ldi	r30, 0xD6	; 214
     9a6:	f4 e0       	ldi	r31, 0x04	; 4
     9a8:	0c 94 43 0d 	jmp	0x1a86	; 0x1a86 <__prologue_saves__+0x18>
     9ac:	8c 01       	movw	r16, r24
     9ae:	66 0f       	add	r22, r22
     9b0:	66 0f       	add	r22, r22
     9b2:	66 0f       	add	r22, r22
     9b4:	e1 2c       	mov	r14, r1
     9b6:	f1 2c       	mov	r15, r1
     9b8:	8e 2d       	mov	r24, r14
     9ba:	86 0f       	add	r24, r22
     9bc:	80 64       	ori	r24, 0x40	; 64
     9be:	69 83       	std	Y+1, r22	; 0x01
     9c0:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZN12OrangutanLCD8send_cmdEh>
     9c4:	f8 01       	movw	r30, r16
     9c6:	ee 0d       	add	r30, r14
     9c8:	ff 1d       	adc	r31, r15
     9ca:	84 91       	lpm	r24, Z
     9cc:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD9send_dataEh>
     9d0:	8f ef       	ldi	r24, 0xFF	; 255
     9d2:	e8 1a       	sub	r14, r24
     9d4:	f8 0a       	sbc	r15, r24
     9d6:	69 81       	ldd	r22, Y+1	; 0x01
     9d8:	e8 e0       	ldi	r30, 0x08	; 8
     9da:	ee 16       	cp	r14, r30
     9dc:	f1 04       	cpc	r15, r1
     9de:	61 f7       	brne	.-40     	; 0x9b8 <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x18>
     9e0:	21 96       	adiw	r28, 0x01	; 1
     9e2:	e6 e0       	ldi	r30, 0x06	; 6
     9e4:	0c 94 5f 0d 	jmp	0x1abe	; 0x1abe <__epilogue_restores__+0x18>

000009e8 <lcd_load_custom_character>:
     9e8:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>
     9ec:	08 95       	ret

000009ee <print_character>:
     9ee:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD9send_dataEh>
     9f2:	08 95       	ret

000009f4 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
     9f4:	41 e0       	ldi	r20, 0x01	; 1
     9f6:	60 e0       	ldi	r22, 0x00	; 0
     9f8:	0e 94 8f 04 	call	0x91e	; 0x91e <_ZN12OrangutanLCD4sendEhhh>
     9fc:	08 95       	ret

000009fe <_ZN12OrangutanLCD5init2Ev>:
     9fe:	80 e1       	ldi	r24, 0x10	; 16
     a00:	97 e2       	ldi	r25, 0x27	; 39
     a02:	a0 e0       	ldi	r26, 0x00	; 0
     a04:	b0 e0       	ldi	r27, 0x00	; 0
     a06:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <__data_end>
     a0a:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <__data_end+0x1>
     a0e:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <__data_end+0x2>
     a12:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <__data_end+0x3>
     a16:	52 9a       	sbi	0x0a, 2	; 10
     a18:	20 9a       	sbi	0x04, 0	; 4
     a1a:	54 9a       	sbi	0x0a, 4	; 10
     a1c:	8e e1       	ldi	r24, 0x1E	; 30
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	0e 94 32 07 	call	0xe64	; 0xe64 <delay_ms>
     a24:	83 e0       	ldi	r24, 0x03	; 3
     a26:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     a2a:	86 e0       	ldi	r24, 0x06	; 6
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	0e 94 32 07 	call	0xe64	; 0xe64 <delay_ms>
     a32:	83 e0       	ldi	r24, 0x03	; 3
     a34:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     a38:	82 e0       	ldi	r24, 0x02	; 2
     a3a:	90 e0       	ldi	r25, 0x00	; 0
     a3c:	0e 94 32 07 	call	0xe64	; 0xe64 <delay_ms>
     a40:	83 e0       	ldi	r24, 0x03	; 3
     a42:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     a46:	82 e0       	ldi	r24, 0x02	; 2
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	0e 94 32 07 	call	0xe64	; 0xe64 <delay_ms>
     a4e:	82 e0       	ldi	r24, 0x02	; 2
     a50:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     a54:	82 e0       	ldi	r24, 0x02	; 2
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	0e 94 32 07 	call	0xe64	; 0xe64 <delay_ms>
     a5c:	88 e2       	ldi	r24, 0x28	; 40
     a5e:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZN12OrangutanLCD8send_cmdEh>
     a62:	88 e0       	ldi	r24, 0x08	; 8
     a64:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZN12OrangutanLCD8send_cmdEh>
     a68:	81 e0       	ldi	r24, 0x01	; 1
     a6a:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZN12OrangutanLCD8send_cmdEh>
     a6e:	86 e0       	ldi	r24, 0x06	; 6
     a70:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZN12OrangutanLCD8send_cmdEh>
     a74:	8c e0       	ldi	r24, 0x0C	; 12
     a76:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZN12OrangutanLCD8send_cmdEh>
     a7a:	08 95       	ret

00000a7c <_ZN12OrangutanLCD5clearEv>:
     a7c:	81 e0       	ldi	r24, 0x01	; 1
     a7e:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZN12OrangutanLCD8send_cmdEh>
     a82:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <printf_chars>
     a86:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <printf_chars+0x1>
     a8a:	89 2b       	or	r24, r25
     a8c:	f9 f0       	breq	.+62     	; 0xacc <_ZN12OrangutanLCD5clearEv+0x50>
     a8e:	60 e0       	ldi	r22, 0x00	; 0
     a90:	a0 e2       	ldi	r26, 0x20	; 32
     a92:	26 2f       	mov	r18, r22
     a94:	30 e0       	ldi	r19, 0x00	; 0
     a96:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <numLCDCols>
     a9a:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <numLCDRows>
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	01 97       	sbiw	r24, 0x01	; 1
     aa2:	78 9f       	mul	r23, r24
     aa4:	a0 01       	movw	r20, r0
     aa6:	79 9f       	mul	r23, r25
     aa8:	50 0d       	add	r21, r0
     aaa:	11 24       	eor	r1, r1
     aac:	24 17       	cp	r18, r20
     aae:	35 07       	cpc	r19, r21
     ab0:	4c f4       	brge	.+18     	; 0xac4 <_ZN12OrangutanLCD5clearEv+0x48>
     ab2:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <printf_chars>
     ab6:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <printf_chars+0x1>
     aba:	e2 0f       	add	r30, r18
     abc:	f3 1f       	adc	r31, r19
     abe:	a0 83       	st	Z, r26
     ac0:	6f 5f       	subi	r22, 0xFF	; 255
     ac2:	e7 cf       	rjmp	.-50     	; 0xa92 <_ZN12OrangutanLCD5clearEv+0x16>
     ac4:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <col>
     ac8:	10 92 3d 01 	sts	0x013D, r1	; 0x80013d <row>
     acc:	08 95       	ret

00000ace <clear>:
     ace:	0e 94 3e 05 	call	0xa7c	; 0xa7c <_ZN12OrangutanLCD5clearEv>
     ad2:	08 95       	ret

00000ad4 <_ZN12OrangutanLCD5printEPKc>:
     ad4:	cf 93       	push	r28
     ad6:	df 93       	push	r29
     ad8:	ec 01       	movw	r28, r24
     ada:	89 91       	ld	r24, Y+
     adc:	88 23       	and	r24, r24
     ade:	19 f0       	breq	.+6      	; 0xae6 <_ZN12OrangutanLCD5printEPKc+0x12>
     ae0:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD9send_dataEh>
     ae4:	fa cf       	rjmp	.-12     	; 0xada <_ZN12OrangutanLCD5printEPKc+0x6>
     ae6:	df 91       	pop	r29
     ae8:	cf 91       	pop	r28
     aea:	08 95       	ret

00000aec <print>:
     aec:	0e 94 6a 05 	call	0xad4	; 0xad4 <_ZN12OrangutanLCD5printEPKc>
     af0:	08 95       	ret

00000af2 <_ZN12OrangutanLCD5printEm>:
     af2:	aa e0       	ldi	r26, 0x0A	; 10
     af4:	b0 e0       	ldi	r27, 0x00	; 0
     af6:	ef e7       	ldi	r30, 0x7F	; 127
     af8:	f5 e0       	ldi	r31, 0x05	; 5
     afa:	0c 94 41 0d 	jmp	0x1a82	; 0x1a82 <__prologue_saves__+0x14>
     afe:	1a e0       	ldi	r17, 0x0A	; 10
     b00:	5a e0       	ldi	r21, 0x0A	; 10
     b02:	c5 2e       	mov	r12, r21
     b04:	d1 2c       	mov	r13, r1
     b06:	e1 2c       	mov	r14, r1
     b08:	f1 2c       	mov	r15, r1
     b0a:	06 2f       	mov	r16, r22
     b0c:	a7 01       	movw	r20, r14
     b0e:	96 01       	movw	r18, r12
     b10:	0e 94 ce 0c 	call	0x199c	; 0x199c <__udivmodsi4>
     b14:	ca 01       	movw	r24, r20
     b16:	b9 01       	movw	r22, r18
     b18:	11 50       	subi	r17, 0x01	; 1
     b1a:	e1 e0       	ldi	r30, 0x01	; 1
     b1c:	f0 e0       	ldi	r31, 0x00	; 0
     b1e:	ec 0f       	add	r30, r28
     b20:	fd 1f       	adc	r31, r29
     b22:	e1 0f       	add	r30, r17
     b24:	f1 1d       	adc	r31, r1
     b26:	00 5d       	subi	r16, 0xD0	; 208
     b28:	2a e0       	ldi	r18, 0x0A	; 10
     b2a:	62 9f       	mul	r22, r18
     b2c:	00 19       	sub	r16, r0
     b2e:	11 24       	eor	r1, r1
     b30:	00 83       	st	Z, r16
     b32:	61 15       	cp	r22, r1
     b34:	71 05       	cpc	r23, r1
     b36:	81 05       	cpc	r24, r1
     b38:	91 05       	cpc	r25, r1
     b3a:	39 f7       	brne	.-50     	; 0xb0a <_ZN12OrangutanLCD5printEm+0x18>
     b3c:	1a 30       	cpi	r17, 0x0A	; 10
     b3e:	58 f4       	brcc	.+22     	; 0xb56 <_ZN12OrangutanLCD5printEm+0x64>
     b40:	e1 e0       	ldi	r30, 0x01	; 1
     b42:	f0 e0       	ldi	r31, 0x00	; 0
     b44:	ec 0f       	add	r30, r28
     b46:	fd 1f       	adc	r31, r29
     b48:	e1 0f       	add	r30, r17
     b4a:	f1 1d       	adc	r31, r1
     b4c:	80 81       	ld	r24, Z
     b4e:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD9send_dataEh>
     b52:	1f 5f       	subi	r17, 0xFF	; 255
     b54:	f3 cf       	rjmp	.-26     	; 0xb3c <_ZN12OrangutanLCD5printEm+0x4a>
     b56:	2a 96       	adiw	r28, 0x0a	; 10
     b58:	e8 e0       	ldi	r30, 0x08	; 8
     b5a:	0c 94 5d 0d 	jmp	0x1aba	; 0x1aba <__epilogue_restores__+0x14>

00000b5e <_ZN12OrangutanLCD5printEl>:
     b5e:	cf 92       	push	r12
     b60:	df 92       	push	r13
     b62:	ef 92       	push	r14
     b64:	ff 92       	push	r15
     b66:	6b 01       	movw	r12, r22
     b68:	7c 01       	movw	r14, r24
     b6a:	97 ff       	sbrs	r25, 7
     b6c:	0b c0       	rjmp	.+22     	; 0xb84 <_ZN12OrangutanLCD5printEl+0x26>
     b6e:	f0 94       	com	r15
     b70:	e0 94       	com	r14
     b72:	d0 94       	com	r13
     b74:	c0 94       	com	r12
     b76:	c1 1c       	adc	r12, r1
     b78:	d1 1c       	adc	r13, r1
     b7a:	e1 1c       	adc	r14, r1
     b7c:	f1 1c       	adc	r15, r1
     b7e:	8d e2       	ldi	r24, 0x2D	; 45
     b80:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN12OrangutanLCD9send_dataEh>
     b84:	c7 01       	movw	r24, r14
     b86:	b6 01       	movw	r22, r12
     b88:	0e 94 79 05 	call	0xaf2	; 0xaf2 <_ZN12OrangutanLCD5printEm>
     b8c:	ff 90       	pop	r15
     b8e:	ef 90       	pop	r14
     b90:	df 90       	pop	r13
     b92:	cf 90       	pop	r12
     b94:	08 95       	ret

00000b96 <print_long>:
     b96:	0e 94 af 05 	call	0xb5e	; 0xb5e <_ZN12OrangutanLCD5printEl>
     b9a:	08 95       	ret

00000b9c <_ZN12OrangutanLCD6gotoXYEhh>:
     b9c:	a5 e0       	ldi	r26, 0x05	; 5
     b9e:	b0 e0       	ldi	r27, 0x00	; 0
     ba0:	e4 ed       	ldi	r30, 0xD4	; 212
     ba2:	f5 e0       	ldi	r31, 0x05	; 5
     ba4:	0c 94 46 0d 	jmp	0x1a8c	; 0x1a8c <__prologue_saves__+0x1e>
     ba8:	18 2f       	mov	r17, r24
     baa:	80 e8       	ldi	r24, 0x80	; 128
     bac:	89 83       	std	Y+1, r24	; 0x01
     bae:	80 ec       	ldi	r24, 0xC0	; 192
     bb0:	8a 83       	std	Y+2, r24	; 0x02
     bb2:	84 e9       	ldi	r24, 0x94	; 148
     bb4:	8b 83       	std	Y+3, r24	; 0x03
     bb6:	84 ed       	ldi	r24, 0xD4	; 212
     bb8:	8c 83       	std	Y+4, r24	; 0x04
     bba:	fe 01       	movw	r30, r28
     bbc:	e6 0f       	add	r30, r22
     bbe:	f1 1d       	adc	r31, r1
     bc0:	81 81       	ldd	r24, Z+1	; 0x01
     bc2:	81 0f       	add	r24, r17
     bc4:	6d 83       	std	Y+5, r22	; 0x05
     bc6:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZN12OrangutanLCD8send_cmdEh>
     bca:	10 93 3c 01 	sts	0x013C, r17	; 0x80013c <col>
     bce:	6d 81       	ldd	r22, Y+5	; 0x05
     bd0:	60 93 3d 01 	sts	0x013D, r22	; 0x80013d <row>
     bd4:	25 96       	adiw	r28, 0x05	; 5
     bd6:	e3 e0       	ldi	r30, 0x03	; 3
     bd8:	0c 94 62 0d 	jmp	0x1ac4	; 0x1ac4 <__epilogue_restores__+0x1e>

00000bdc <lcd_goto_xy>:
     bdc:	0e 94 ce 05 	call	0xb9c	; 0xb9c <_ZN12OrangutanLCD6gotoXYEhh>
     be0:	08 95       	ret

00000be2 <_ZN16OrangutanDigital9setOutputEhh>:
     be2:	88 30       	cpi	r24, 0x08	; 8
     be4:	58 f4       	brcc	.+22     	; 0xbfc <_ZN16OrangutanDigital9setOutputEhh+0x1a>
     be6:	91 e0       	ldi	r25, 0x01	; 1
     be8:	01 c0       	rjmp	.+2      	; 0xbec <_ZN16OrangutanDigital9setOutputEhh+0xa>
     bea:	99 0f       	add	r25, r25
     bec:	8a 95       	dec	r24
     bee:	ea f7       	brpl	.-6      	; 0xbea <_ZN16OrangutanDigital9setOutputEhh+0x8>
     bf0:	89 2f       	mov	r24, r25
     bf2:	aa e2       	ldi	r26, 0x2A	; 42
     bf4:	b0 e0       	ldi	r27, 0x00	; 0
     bf6:	eb e2       	ldi	r30, 0x2B	; 43
     bf8:	f0 e0       	ldi	r31, 0x00	; 0
     bfa:	21 c0       	rjmp	.+66     	; 0xc3e <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     bfc:	8e 30       	cpi	r24, 0x0E	; 14
     bfe:	60 f4       	brcc	.+24     	; 0xc18 <_ZN16OrangutanDigital9setOutputEhh+0x36>
     c00:	98 ef       	ldi	r25, 0xF8	; 248
     c02:	98 0f       	add	r25, r24
     c04:	81 e0       	ldi	r24, 0x01	; 1
     c06:	01 c0       	rjmp	.+2      	; 0xc0a <_ZN16OrangutanDigital9setOutputEhh+0x28>
     c08:	88 0f       	add	r24, r24
     c0a:	9a 95       	dec	r25
     c0c:	ea f7       	brpl	.-6      	; 0xc08 <_ZN16OrangutanDigital9setOutputEhh+0x26>
     c0e:	a4 e2       	ldi	r26, 0x24	; 36
     c10:	b0 e0       	ldi	r27, 0x00	; 0
     c12:	e5 e2       	ldi	r30, 0x25	; 37
     c14:	f0 e0       	ldi	r31, 0x00	; 0
     c16:	13 c0       	rjmp	.+38     	; 0xc3e <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     c18:	85 31       	cpi	r24, 0x15	; 21
     c1a:	60 f4       	brcc	.+24     	; 0xc34 <_ZN16OrangutanDigital9setOutputEhh+0x52>
     c1c:	92 ef       	ldi	r25, 0xF2	; 242
     c1e:	98 0f       	add	r25, r24
     c20:	81 e0       	ldi	r24, 0x01	; 1
     c22:	01 c0       	rjmp	.+2      	; 0xc26 <_ZN16OrangutanDigital9setOutputEhh+0x44>
     c24:	88 0f       	add	r24, r24
     c26:	9a 95       	dec	r25
     c28:	ea f7       	brpl	.-6      	; 0xc24 <_ZN16OrangutanDigital9setOutputEhh+0x42>
     c2a:	a7 e2       	ldi	r26, 0x27	; 39
     c2c:	b0 e0       	ldi	r27, 0x00	; 0
     c2e:	e8 e2       	ldi	r30, 0x28	; 40
     c30:	f0 e0       	ldi	r31, 0x00	; 0
     c32:	05 c0       	rjmp	.+10     	; 0xc3e <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     c34:	80 e0       	ldi	r24, 0x00	; 0
     c36:	a0 e0       	ldi	r26, 0x00	; 0
     c38:	b0 e0       	ldi	r27, 0x00	; 0
     c3a:	e0 e0       	ldi	r30, 0x00	; 0
     c3c:	f0 e0       	ldi	r31, 0x00	; 0
     c3e:	6f 3f       	cpi	r22, 0xFF	; 255
     c40:	19 f4       	brne	.+6      	; 0xc48 <_ZN16OrangutanDigital9setOutputEhh+0x66>
     c42:	90 81       	ld	r25, Z
     c44:	98 27       	eor	r25, r24
     c46:	09 c0       	rjmp	.+18     	; 0xc5a <_ZN16OrangutanDigital9setOutputEhh+0x78>
     c48:	66 23       	and	r22, r22
     c4a:	19 f0       	breq	.+6      	; 0xc52 <_ZN16OrangutanDigital9setOutputEhh+0x70>
     c4c:	90 81       	ld	r25, Z
     c4e:	98 2b       	or	r25, r24
     c50:	04 c0       	rjmp	.+8      	; 0xc5a <_ZN16OrangutanDigital9setOutputEhh+0x78>
     c52:	20 81       	ld	r18, Z
     c54:	98 2f       	mov	r25, r24
     c56:	90 95       	com	r25
     c58:	92 23       	and	r25, r18
     c5a:	90 83       	st	Z, r25
     c5c:	9c 91       	ld	r25, X
     c5e:	98 2b       	or	r25, r24
     c60:	9c 93       	st	X, r25
     c62:	08 95       	ret

00000c64 <_ZN15OrangutanMotors5init2Ev>:
     c64:	83 ef       	ldi	r24, 0xF3	; 243
     c66:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     c6a:	84 bd       	out	0x24, r24	; 36
     c6c:	82 e0       	ldi	r24, 0x02	; 2
     c6e:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
     c72:	85 bd       	out	0x25, r24	; 37
     c74:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     c78:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     c7c:	18 bc       	out	0x28, r1	; 40
     c7e:	17 bc       	out	0x27, r1	; 39
     c80:	60 e0       	ldi	r22, 0x00	; 0
     c82:	86 e0       	ldi	r24, 0x06	; 6
     c84:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <_ZN16OrangutanDigital9setOutputEhh>
     c88:	60 e0       	ldi	r22, 0x00	; 0
     c8a:	85 e0       	ldi	r24, 0x05	; 5
     c8c:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <_ZN16OrangutanDigital9setOutputEhh>
     c90:	60 e0       	ldi	r22, 0x00	; 0
     c92:	8b e0       	ldi	r24, 0x0B	; 11
     c94:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <_ZN16OrangutanDigital9setOutputEhh>
     c98:	60 e0       	ldi	r22, 0x00	; 0
     c9a:	83 e0       	ldi	r24, 0x03	; 3
     c9c:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <_ZN16OrangutanDigital9setOutputEhh>
     ca0:	08 95       	ret

00000ca2 <_ZN15OrangutanMotors4initEv>:
     ca2:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <_ZZN15OrangutanMotors4initEvE11initialized>
     ca6:	81 11       	cpse	r24, r1
     ca8:	05 c0       	rjmp	.+10     	; 0xcb4 <_ZN15OrangutanMotors4initEv+0x12>
     caa:	81 e0       	ldi	r24, 0x01	; 1
     cac:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <_ZZN15OrangutanMotors4initEvE11initialized>
     cb0:	0e 94 32 06 	call	0xc64	; 0xc64 <_ZN15OrangutanMotors5init2Ev>
     cb4:	08 95       	ret

00000cb6 <_ZN15OrangutanMotors10setM1SpeedEi>:
     cb6:	cf 93       	push	r28
     cb8:	df 93       	push	r29
     cba:	ec 01       	movw	r28, r24
     cbc:	0e 94 51 06 	call	0xca2	; 0xca2 <_ZN15OrangutanMotors4initEv>
     cc0:	d7 ff       	sbrs	r29, 7
     cc2:	05 c0       	rjmp	.+10     	; 0xcce <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
     cc4:	d1 95       	neg	r29
     cc6:	c1 95       	neg	r28
     cc8:	d1 09       	sbc	r29, r1
     cca:	81 e0       	ldi	r24, 0x01	; 1
     ccc:	01 c0       	rjmp	.+2      	; 0xcd0 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
     cce:	80 e0       	ldi	r24, 0x00	; 0
     cd0:	cf 3f       	cpi	r28, 0xFF	; 255
     cd2:	d1 05       	cpc	r29, r1
     cd4:	19 f0       	breq	.+6      	; 0xcdc <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     cd6:	14 f0       	brlt	.+4      	; 0xcdc <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     cd8:	cf ef       	ldi	r28, 0xFF	; 255
     cda:	d0 e0       	ldi	r29, 0x00	; 0
     cdc:	88 23       	and	r24, r24
     cde:	19 f0       	breq	.+6      	; 0xce6 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
     ce0:	18 bc       	out	0x28, r1	; 40
     ce2:	c7 bd       	out	0x27, r28	; 39
     ce4:	02 c0       	rjmp	.+4      	; 0xcea <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
     ce6:	c8 bd       	out	0x28, r28	; 40
     ce8:	17 bc       	out	0x27, r1	; 39
     cea:	df 91       	pop	r29
     cec:	cf 91       	pop	r28
     cee:	08 95       	ret

00000cf0 <_ZN15OrangutanMotors10setM2SpeedEi>:
     cf0:	cf 93       	push	r28
     cf2:	df 93       	push	r29
     cf4:	ec 01       	movw	r28, r24
     cf6:	0e 94 51 06 	call	0xca2	; 0xca2 <_ZN15OrangutanMotors4initEv>
     cfa:	d7 ff       	sbrs	r29, 7
     cfc:	05 c0       	rjmp	.+10     	; 0xd08 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
     cfe:	d1 95       	neg	r29
     d00:	c1 95       	neg	r28
     d02:	d1 09       	sbc	r29, r1
     d04:	81 e0       	ldi	r24, 0x01	; 1
     d06:	01 c0       	rjmp	.+2      	; 0xd0a <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
     d08:	80 e0       	ldi	r24, 0x00	; 0
     d0a:	cf 3f       	cpi	r28, 0xFF	; 255
     d0c:	d1 05       	cpc	r29, r1
     d0e:	19 f0       	breq	.+6      	; 0xd16 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     d10:	14 f0       	brlt	.+4      	; 0xd16 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     d12:	cf ef       	ldi	r28, 0xFF	; 255
     d14:	d0 e0       	ldi	r29, 0x00	; 0
     d16:	88 23       	and	r24, r24
     d18:	29 f0       	breq	.+10     	; 0xd24 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
     d1a:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     d1e:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     d22:	04 c0       	rjmp	.+8      	; 0xd2c <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
     d24:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     d28:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     d2c:	df 91       	pop	r29
     d2e:	cf 91       	pop	r28
     d30:	08 95       	ret

00000d32 <_ZN15OrangutanMotors9setSpeedsEii>:
     d32:	cf 93       	push	r28
     d34:	df 93       	push	r29
     d36:	eb 01       	movw	r28, r22
     d38:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <_ZN15OrangutanMotors10setM1SpeedEi>
     d3c:	ce 01       	movw	r24, r28
     d3e:	0e 94 78 06 	call	0xcf0	; 0xcf0 <_ZN15OrangutanMotors10setM2SpeedEi>
     d42:	df 91       	pop	r29
     d44:	cf 91       	pop	r28
     d46:	08 95       	ret

00000d48 <set_motors>:
     d48:	0e 94 99 06 	call	0xd32	; 0xd32 <_ZN15OrangutanMotors9setSpeedsEii>
     d4c:	08 95       	ret

00000d4e <_ZN20OrangutanPushbuttons5init2Ev>:
     d4e:	84 b1       	in	r24, 0x04	; 4
     d50:	8d 7c       	andi	r24, 0xCD	; 205
     d52:	84 b9       	out	0x04, r24	; 4
     d54:	85 b1       	in	r24, 0x05	; 5
     d56:	82 63       	ori	r24, 0x32	; 50
     d58:	85 b9       	out	0x05, r24	; 5
     d5a:	85 e0       	ldi	r24, 0x05	; 5
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	6f 93       	push	r22
     d60:	64 e0       	ldi	r22, 0x04	; 4
     d62:	6a 95       	dec	r22
     d64:	f1 f7       	brne	.-4      	; 0xd62 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
     d66:	6f 91       	pop	r22
     d68:	01 97       	sbiw	r24, 0x01	; 1
     d6a:	c9 f7       	brne	.-14     	; 0xd5e <_ZN20OrangutanPushbuttons5init2Ev+0x10>
     d6c:	08 95       	ret

00000d6e <_ZN20OrangutanPushbuttons4initEv>:
     d6e:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
     d72:	81 11       	cpse	r24, r1
     d74:	05 c0       	rjmp	.+10     	; 0xd80 <_ZN20OrangutanPushbuttons4initEv+0x12>
     d76:	81 e0       	ldi	r24, 0x01	; 1
     d78:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
     d7c:	0e 94 a7 06 	call	0xd4e	; 0xd4e <_ZN20OrangutanPushbuttons5init2Ev>
     d80:	08 95       	ret

00000d82 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
     d82:	cf 93       	push	r28
     d84:	c8 2f       	mov	r28, r24
     d86:	0e 94 b7 06 	call	0xd6e	; 0xd6e <_ZN20OrangutanPushbuttons4initEv>
     d8a:	83 b1       	in	r24, 0x03	; 3
     d8c:	8c 23       	and	r24, r28
     d8e:	e9 f3       	breq	.-6      	; 0xd8a <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
     d90:	8a e0       	ldi	r24, 0x0A	; 10
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	0e 94 32 07 	call	0xe64	; 0xe64 <delay_ms>
     d98:	83 b1       	in	r24, 0x03	; 3
     d9a:	8c 23       	and	r24, r28
     d9c:	b1 f3       	breq	.-20     	; 0xd8a <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
     d9e:	83 b1       	in	r24, 0x03	; 3
     da0:	8c 23       	and	r24, r28
     da2:	cf 91       	pop	r28
     da4:	08 95       	ret

00000da6 <wait_for_button_release>:
     da6:	0e 94 c1 06 	call	0xd82	; 0xd82 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
     daa:	08 95       	ret

00000dac <_ZN20OrangutanPushbuttons9isPressedEh>:
     dac:	a1 e0       	ldi	r26, 0x01	; 1
     dae:	b0 e0       	ldi	r27, 0x00	; 0
     db0:	ec ed       	ldi	r30, 0xDC	; 220
     db2:	f6 e0       	ldi	r31, 0x06	; 6
     db4:	0c 94 47 0d 	jmp	0x1a8e	; 0x1a8e <__prologue_saves__+0x20>
     db8:	89 83       	std	Y+1, r24	; 0x01
     dba:	0e 94 b7 06 	call	0xd6e	; 0xd6e <_ZN20OrangutanPushbuttons4initEv>
     dbe:	93 b1       	in	r25, 0x03	; 3
     dc0:	90 95       	com	r25
     dc2:	89 81       	ldd	r24, Y+1	; 0x01
     dc4:	89 23       	and	r24, r25
     dc6:	21 96       	adiw	r28, 0x01	; 1
     dc8:	e2 e0       	ldi	r30, 0x02	; 2
     dca:	0c 94 63 0d 	jmp	0x1ac6	; 0x1ac6 <__epilogue_restores__+0x20>

00000dce <button_is_pressed>:
     dce:	0e 94 d6 06 	call	0xdac	; 0xdac <_ZN20OrangutanPushbuttons9isPressedEh>
     dd2:	08 95       	ret

00000dd4 <__vector_9>:
     dd4:	2f 92       	push	r2
     dd6:	8f 93       	push	r24
     dd8:	9f 93       	push	r25
     dda:	2f b6       	in	r2, 0x3f	; 63
     ddc:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <tickCount+0x1>
     de0:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <tickCount+0x2>
     de4:	01 96       	adiw	r24, 0x01	; 1
     de6:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <tickCount+0x1>
     dea:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <tickCount+0x2>
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <tickCount+0x3>
     df4:	89 1f       	adc	r24, r25
     df6:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <tickCount+0x3>
     dfa:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <us_over_10+0x1>
     dfe:	9c 5f       	subi	r25, 0xFC	; 252
     e00:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <us_over_10+0x1>
     e04:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <us_over_10>
     e08:	80 51       	subi	r24, 0x10	; 16
     e0a:	97 42       	sbci	r25, 0x27	; 39
     e0c:	c0 f0       	brcs	.+48     	; 0xe3e <end>
     e0e:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <us_over_10+0x1>
     e12:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <us_over_10>
     e16:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <msCounter>
     e1a:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <msCounter+0x1>
     e1e:	01 96       	adiw	r24, 0x01	; 1
     e20:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <msCounter>
     e24:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <msCounter+0x1>
     e28:	90 e0       	ldi	r25, 0x00	; 0
     e2a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <msCounter+0x2>
     e2e:	89 1f       	adc	r24, r25
     e30:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <msCounter+0x2>
     e34:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <msCounter+0x3>
     e38:	89 1f       	adc	r24, r25
     e3a:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <msCounter+0x3>

00000e3e <end>:
     e3e:	2f be       	out	0x3f, r2	; 63
     e40:	9f 91       	pop	r25
     e42:	8f 91       	pop	r24
     e44:	2f 90       	pop	r2
     e46:	18 95       	reti

00000e48 <_ZN13OrangutanTime17delayMillisecondsEj>:
     e48:	28 ee       	ldi	r18, 0xE8	; 232
     e4a:	33 e0       	ldi	r19, 0x03	; 3
     e4c:	01 97       	sbiw	r24, 0x01	; 1
     e4e:	48 f0       	brcs	.+18     	; 0xe62 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
     e50:	f9 01       	movw	r30, r18
     e52:	6f 93       	push	r22
     e54:	64 e0       	ldi	r22, 0x04	; 4
     e56:	6a 95       	dec	r22
     e58:	f1 f7       	brne	.-4      	; 0xe56 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
     e5a:	6f 91       	pop	r22
     e5c:	31 97       	sbiw	r30, 0x01	; 1
     e5e:	c9 f7       	brne	.-14     	; 0xe52 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
     e60:	f5 cf       	rjmp	.-22     	; 0xe4c <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
     e62:	08 95       	ret

00000e64 <delay_ms>:
     e64:	0e 94 24 07 	call	0xe48	; 0xe48 <_ZN13OrangutanTime17delayMillisecondsEj>
     e68:	08 95       	ret

00000e6a <_ZN13OrangutanTime5init2Ev>:
     e6a:	e0 e7       	ldi	r30, 0x70	; 112
     e6c:	f0 e0       	ldi	r31, 0x00	; 0
     e6e:	80 81       	ld	r24, Z
     e70:	8e 7f       	andi	r24, 0xFE	; 254
     e72:	80 83       	st	Z, r24
     e74:	a0 eb       	ldi	r26, 0xB0	; 176
     e76:	b0 e0       	ldi	r27, 0x00	; 0
     e78:	8c 91       	ld	r24, X
     e7a:	83 60       	ori	r24, 0x03	; 3
     e7c:	8c 93       	st	X, r24
     e7e:	a1 eb       	ldi	r26, 0xB1	; 177
     e80:	b0 e0       	ldi	r27, 0x00	; 0
     e82:	8c 91       	ld	r24, X
     e84:	80 7f       	andi	r24, 0xF0	; 240
     e86:	8c 93       	st	X, r24
     e88:	8c 91       	ld	r24, X
     e8a:	82 60       	ori	r24, 0x02	; 2
     e8c:	8c 93       	st	X, r24
     e8e:	b8 9a       	sbi	0x17, 0	; 23
     e90:	80 81       	ld	r24, Z
     e92:	81 60       	ori	r24, 0x01	; 1
     e94:	80 83       	st	Z, r24
     e96:	78 94       	sei
     e98:	08 95       	ret

00000e9a <_ZN13OrangutanTime4initEv>:
     e9a:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <_ZZN13OrangutanTime4initEvE11initialized>
     e9e:	81 11       	cpse	r24, r1
     ea0:	05 c0       	rjmp	.+10     	; 0xeac <_ZN13OrangutanTime4initEv+0x12>
     ea2:	81 e0       	ldi	r24, 0x01	; 1
     ea4:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <_ZZN13OrangutanTime4initEvE11initialized>
     ea8:	0e 94 35 07 	call	0xe6a	; 0xe6a <_ZN13OrangutanTime5init2Ev>
     eac:	08 95       	ret

00000eae <_ZN13OrangutanTime5resetEv>:
     eae:	0e 94 4d 07 	call	0xe9a	; 0xe9a <_ZN13OrangutanTime4initEv>
     eb2:	e0 e7       	ldi	r30, 0x70	; 112
     eb4:	f0 e0       	ldi	r31, 0x00	; 0
     eb6:	80 81       	ld	r24, Z
     eb8:	8e 7f       	andi	r24, 0xFE	; 254
     eba:	80 83       	st	Z, r24
     ebc:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <msCounter>
     ec0:	10 92 43 01 	sts	0x0143, r1	; 0x800143 <msCounter+0x1>
     ec4:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <msCounter+0x2>
     ec8:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <msCounter+0x3>
     ecc:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <us_over_10+0x1>
     ed0:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <us_over_10>
     ed4:	80 81       	ld	r24, Z
     ed6:	81 60       	ori	r24, 0x01	; 1
     ed8:	80 83       	st	Z, r24
     eda:	08 95       	ret

00000edc <calibrate_line_sensors>:
     edc:	68 2f       	mov	r22, r24
     ede:	8a e4       	ldi	r24, 0x4A	; 74
     ee0:	91 e0       	ldi	r25, 0x01	; 1
     ee2:	0e 94 56 0b 	call	0x16ac	; 0x16ac <_ZN16PololuQTRSensors9calibrateEh>
     ee6:	08 95       	ret

00000ee8 <read_line>:
     ee8:	46 2f       	mov	r20, r22
     eea:	20 e0       	ldi	r18, 0x00	; 0
     eec:	bc 01       	movw	r22, r24
     eee:	8a e4       	ldi	r24, 0x4A	; 74
     ef0:	91 e0       	ldi	r25, 0x01	; 1
     ef2:	0e 94 27 0c 	call	0x184e	; 0x184e <_ZN16PololuQTRSensors8readLineEPjhh>
     ef6:	08 95       	ret

00000ef8 <_ZN9Pololu3pi4initEjh>:
     ef8:	0f 93       	push	r16
     efa:	cf 93       	push	r28
     efc:	df 93       	push	r29
     efe:	00 d0       	rcall	.+0      	; 0xf00 <_ZN9Pololu3pi4initEjh+0x8>
     f00:	00 d0       	rcall	.+0      	; 0xf02 <_ZN9Pololu3pi4initEjh+0xa>
     f02:	1f 92       	push	r1
     f04:	cd b7       	in	r28, 0x3d	; 61
     f06:	de b7       	in	r29, 0x3e	; 62
     f08:	9c 01       	movw	r18, r24
     f0a:	85 e0       	ldi	r24, 0x05	; 5
     f0c:	e4 e1       	ldi	r30, 0x14	; 20
     f0e:	f1 e0       	ldi	r31, 0x01	; 1
     f10:	de 01       	movw	r26, r28
     f12:	11 96       	adiw	r26, 0x01	; 1
     f14:	01 90       	ld	r0, Z+
     f16:	0d 92       	st	X+, r0
     f18:	8a 95       	dec	r24
     f1a:	e1 f7       	brne	.-8      	; 0xf14 <_ZN9Pololu3pi4initEjh+0x1c>
     f1c:	66 23       	and	r22, r22
     f1e:	11 f0       	breq	.+4      	; 0xf24 <_ZN9Pololu3pi4initEjh+0x2c>
     f20:	0f ef       	ldi	r16, 0xFF	; 255
     f22:	01 c0       	rjmp	.+2      	; 0xf26 <_ZN9Pololu3pi4initEjh+0x2e>
     f24:	03 e1       	ldi	r16, 0x13	; 19
     f26:	45 e0       	ldi	r20, 0x05	; 5
     f28:	be 01       	movw	r22, r28
     f2a:	6f 5f       	subi	r22, 0xFF	; 255
     f2c:	7f 4f       	sbci	r23, 0xFF	; 255
     f2e:	8a e4       	ldi	r24, 0x4A	; 74
     f30:	91 e0       	ldi	r25, 0x01	; 1
     f32:	0e 94 4e 08 	call	0x109c	; 0x109c <_ZN18PololuQTRSensorsRC4initEPhhjh>
     f36:	8a e4       	ldi	r24, 0x4A	; 74
     f38:	91 e0       	ldi	r25, 0x01	; 1
     f3a:	0e 94 25 08 	call	0x104a	; 0x104a <_ZN16PololuQTRSensors11emittersOffEv>
     f3e:	0e 94 57 07 	call	0xeae	; 0xeae <_ZN13OrangutanTime5resetEv>
     f42:	0f 90       	pop	r0
     f44:	0f 90       	pop	r0
     f46:	0f 90       	pop	r0
     f48:	0f 90       	pop	r0
     f4a:	0f 90       	pop	r0
     f4c:	df 91       	pop	r29
     f4e:	cf 91       	pop	r28
     f50:	0f 91       	pop	r16
     f52:	08 95       	ret

00000f54 <pololu_3pi_init>:
     f54:	60 e0       	ldi	r22, 0x00	; 0
     f56:	0e 94 7c 07 	call	0xef8	; 0xef8 <_ZN9Pololu3pi4initEjh>
     f5a:	08 95       	ret

00000f5c <_GLOBAL__sub_D_pololu_3pi_init>:
     f5c:	8a e4       	ldi	r24, 0x4A	; 74
     f5e:	91 e0       	ldi	r25, 0x01	; 1
     f60:	0e 94 9c 0c 	call	0x1938	; 0x1938 <_ZN16PololuQTRSensorsD1Ev>
     f64:	08 95       	ret

00000f66 <delay_us>:
     f66:	6f 93       	push	r22
     f68:	64 e0       	ldi	r22, 0x04	; 4
     f6a:	6a 95       	dec	r22
     f6c:	f1 f7       	brne	.-4      	; 0xf6a <delay_us+0x4>
     f6e:	6f 91       	pop	r22
     f70:	01 97       	sbiw	r24, 0x01	; 1
     f72:	c9 f7       	brne	.-14     	; 0xf66 <delay_us>
     f74:	08 95       	ret

00000f76 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
     f76:	fc 01       	movw	r30, r24
     f78:	11 82       	std	Z+1, r1	; 0x01
     f7a:	10 82       	st	Z, r1
     f7c:	13 82       	std	Z+3, r1	; 0x03
     f7e:	12 82       	std	Z+2, r1	; 0x02
     f80:	15 82       	std	Z+5, r1	; 0x05
     f82:	14 82       	std	Z+4, r1	; 0x04
     f84:	16 82       	std	Z+6, r1	; 0x06
     f86:	68 30       	cpi	r22, 0x08	; 8
     f88:	68 f4       	brcc	.+26     	; 0xfa4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
     f8a:	89 e2       	ldi	r24, 0x29	; 41
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	91 83       	std	Z+1, r25	; 0x01
     f90:	80 83       	st	Z, r24
     f92:	8b e2       	ldi	r24, 0x2B	; 43
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	93 83       	std	Z+3, r25	; 0x03
     f98:	82 83       	std	Z+2, r24	; 0x02
     f9a:	8a e2       	ldi	r24, 0x2A	; 42
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	95 83       	std	Z+5, r25	; 0x05
     fa0:	84 83       	std	Z+4, r24	; 0x04
     fa2:	1f c0       	rjmp	.+62     	; 0xfe2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
     fa4:	6e 30       	cpi	r22, 0x0E	; 14
     fa6:	70 f4       	brcc	.+28     	; 0xfc4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
     fa8:	83 e2       	ldi	r24, 0x23	; 35
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	91 83       	std	Z+1, r25	; 0x01
     fae:	80 83       	st	Z, r24
     fb0:	85 e2       	ldi	r24, 0x25	; 37
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	93 83       	std	Z+3, r25	; 0x03
     fb6:	82 83       	std	Z+2, r24	; 0x02
     fb8:	84 e2       	ldi	r24, 0x24	; 36
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	95 83       	std	Z+5, r25	; 0x05
     fbe:	84 83       	std	Z+4, r24	; 0x04
     fc0:	68 50       	subi	r22, 0x08	; 8
     fc2:	0f c0       	rjmp	.+30     	; 0xfe2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
     fc4:	65 31       	cpi	r22, 0x15	; 21
     fc6:	98 f4       	brcc	.+38     	; 0xfee <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
     fc8:	86 e2       	ldi	r24, 0x26	; 38
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	91 83       	std	Z+1, r25	; 0x01
     fce:	80 83       	st	Z, r24
     fd0:	88 e2       	ldi	r24, 0x28	; 40
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	93 83       	std	Z+3, r25	; 0x03
     fd6:	82 83       	std	Z+2, r24	; 0x02
     fd8:	87 e2       	ldi	r24, 0x27	; 39
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	95 83       	std	Z+5, r25	; 0x05
     fde:	84 83       	std	Z+4, r24	; 0x04
     fe0:	6e 50       	subi	r22, 0x0E	; 14
     fe2:	81 e0       	ldi	r24, 0x01	; 1
     fe4:	01 c0       	rjmp	.+2      	; 0xfe8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
     fe6:	88 0f       	add	r24, r24
     fe8:	6a 95       	dec	r22
     fea:	ea f7       	brpl	.-6      	; 0xfe6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
     fec:	86 83       	std	Z+6, r24	; 0x06
     fee:	08 95       	ret

00000ff0 <_ZN16PololuQTRSensors4initEhhh>:
     ff0:	a7 e0       	ldi	r26, 0x07	; 7
     ff2:	b0 e0       	ldi	r27, 0x00	; 0
     ff4:	ee ef       	ldi	r30, 0xFE	; 254
     ff6:	f7 e0       	ldi	r31, 0x07	; 7
     ff8:	0c 94 45 0d 	jmp	0x1a8a	; 0x1a8a <__prologue_saves__+0x1c>
     ffc:	8c 01       	movw	r16, r24
     ffe:	fc 01       	movw	r30, r24
    1000:	11 82       	std	Z+1, r1	; 0x01
    1002:	10 82       	st	Z, r1
    1004:	13 82       	std	Z+3, r1	; 0x03
    1006:	12 82       	std	Z+2, r1	; 0x02
    1008:	15 82       	std	Z+5, r1	; 0x05
    100a:	14 82       	std	Z+4, r1	; 0x04
    100c:	17 82       	std	Z+7, r1	; 0x07
    100e:	16 82       	std	Z+6, r1	; 0x06
    1010:	61 31       	cpi	r22, 0x11	; 17
    1012:	18 f0       	brcs	.+6      	; 0x101a <_ZN16PololuQTRSensors4initEhhh+0x2a>
    1014:	80 e1       	ldi	r24, 0x10	; 16
    1016:	80 87       	std	Z+8, r24	; 0x08
    1018:	02 c0       	rjmp	.+4      	; 0x101e <_ZN16PololuQTRSensors4initEhhh+0x2e>
    101a:	fc 01       	movw	r30, r24
    101c:	60 87       	std	Z+8, r22	; 0x08
    101e:	f8 01       	movw	r30, r16
    1020:	20 8b       	std	Z+16, r18	; 0x10
    1022:	64 2f       	mov	r22, r20
    1024:	ce 01       	movw	r24, r28
    1026:	01 96       	adiw	r24, 0x01	; 1
    1028:	0e 94 bb 07 	call	0xf76	; 0xf76 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    102c:	8f 81       	ldd	r24, Y+7	; 0x07
    102e:	f8 01       	movw	r30, r16
    1030:	81 87       	std	Z+9, r24	; 0x09
    1032:	8b 81       	ldd	r24, Y+3	; 0x03
    1034:	9c 81       	ldd	r25, Y+4	; 0x04
    1036:	93 87       	std	Z+11, r25	; 0x0b
    1038:	82 87       	std	Z+10, r24	; 0x0a
    103a:	8d 81       	ldd	r24, Y+5	; 0x05
    103c:	9e 81       	ldd	r25, Y+6	; 0x06
    103e:	95 87       	std	Z+13, r25	; 0x0d
    1040:	84 87       	std	Z+12, r24	; 0x0c
    1042:	27 96       	adiw	r28, 0x07	; 7
    1044:	e4 e0       	ldi	r30, 0x04	; 4
    1046:	0c 94 61 0d 	jmp	0x1ac2	; 0x1ac2 <__epilogue_restores__+0x1c>

0000104a <_ZN16PololuQTRSensors11emittersOffEv>:
    104a:	fc 01       	movw	r30, r24
    104c:	a4 85       	ldd	r26, Z+12	; 0x0c
    104e:	b5 85       	ldd	r27, Z+13	; 0x0d
    1050:	10 97       	sbiw	r26, 0x00	; 0
    1052:	79 f0       	breq	.+30     	; 0x1072 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    1054:	8c 91       	ld	r24, X
    1056:	91 85       	ldd	r25, Z+9	; 0x09
    1058:	89 2b       	or	r24, r25
    105a:	8c 93       	st	X, r24
    105c:	a2 85       	ldd	r26, Z+10	; 0x0a
    105e:	b3 85       	ldd	r27, Z+11	; 0x0b
    1060:	9c 91       	ld	r25, X
    1062:	81 85       	ldd	r24, Z+9	; 0x09
    1064:	80 95       	com	r24
    1066:	89 23       	and	r24, r25
    1068:	8c 93       	st	X, r24
    106a:	88 ec       	ldi	r24, 0xC8	; 200
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	0e 94 b3 07 	call	0xf66	; 0xf66 <delay_us>
    1072:	08 95       	ret

00001074 <_ZN16PololuQTRSensors10emittersOnEv>:
    1074:	fc 01       	movw	r30, r24
    1076:	a4 85       	ldd	r26, Z+12	; 0x0c
    1078:	b5 85       	ldd	r27, Z+13	; 0x0d
    107a:	10 97       	sbiw	r26, 0x00	; 0
    107c:	71 f0       	breq	.+28     	; 0x109a <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    107e:	8c 91       	ld	r24, X
    1080:	91 85       	ldd	r25, Z+9	; 0x09
    1082:	89 2b       	or	r24, r25
    1084:	8c 93       	st	X, r24
    1086:	a2 85       	ldd	r26, Z+10	; 0x0a
    1088:	b3 85       	ldd	r27, Z+11	; 0x0b
    108a:	8c 91       	ld	r24, X
    108c:	91 85       	ldd	r25, Z+9	; 0x09
    108e:	89 2b       	or	r24, r25
    1090:	8c 93       	st	X, r24
    1092:	88 ec       	ldi	r24, 0xC8	; 200
    1094:	90 e0       	ldi	r25, 0x00	; 0
    1096:	0e 94 b3 07 	call	0xf66	; 0xf66 <delay_us>
    109a:	08 95       	ret

0000109c <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    109c:	a7 e0       	ldi	r26, 0x07	; 7
    109e:	b0 e0       	ldi	r27, 0x00	; 0
    10a0:	e4 e5       	ldi	r30, 0x54	; 84
    10a2:	f8 e0       	ldi	r31, 0x08	; 8
    10a4:	0c 94 3a 0d 	jmp	0x1a74	; 0x1a74 <__prologue_saves__+0x6>
    10a8:	7c 01       	movw	r14, r24
    10aa:	4b 01       	movw	r8, r22
    10ac:	64 2f       	mov	r22, r20
    10ae:	39 01       	movw	r6, r18
    10b0:	40 2f       	mov	r20, r16
    10b2:	20 e0       	ldi	r18, 0x00	; 0
    10b4:	0e 94 f8 07 	call	0xff0	; 0xff0 <_ZN16PololuQTRSensors4initEhhh>
    10b8:	87 01       	movw	r16, r14
    10ba:	0f 5b       	subi	r16, 0xBF	; 191
    10bc:	1f 4f       	sbci	r17, 0xFF	; 255
    10be:	f8 01       	movw	r30, r16
    10c0:	10 82       	st	Z, r1
    10c2:	67 01       	movw	r12, r14
    10c4:	f2 e4       	ldi	r31, 0x42	; 66
    10c6:	cf 0e       	add	r12, r31
    10c8:	d1 1c       	adc	r13, r1
    10ca:	f6 01       	movw	r30, r12
    10cc:	10 82       	st	Z, r1
    10ce:	57 01       	movw	r10, r14
    10d0:	f3 e4       	ldi	r31, 0x43	; 67
    10d2:	af 0e       	add	r10, r31
    10d4:	b1 1c       	adc	r11, r1
    10d6:	f5 01       	movw	r30, r10
    10d8:	10 82       	st	Z, r1
    10da:	f7 01       	movw	r30, r14
    10dc:	77 86       	std	Z+15, r7	; 0x0f
    10de:	66 86       	std	Z+14, r6	; 0x0e
    10e0:	51 2c       	mov	r5, r1
    10e2:	f7 01       	movw	r30, r14
    10e4:	80 85       	ldd	r24, Z+8	; 0x08
    10e6:	58 16       	cp	r5, r24
    10e8:	50 f5       	brcc	.+84     	; 0x113e <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    10ea:	65 2c       	mov	r6, r5
    10ec:	71 2c       	mov	r7, r1
    10ee:	f4 01       	movw	r30, r8
    10f0:	e6 0d       	add	r30, r6
    10f2:	f7 1d       	adc	r31, r7
    10f4:	60 81       	ld	r22, Z
    10f6:	ce 01       	movw	r24, r28
    10f8:	01 96       	adiw	r24, 0x01	; 1
    10fa:	0e 94 bb 07 	call	0xf76	; 0xf76 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    10fe:	2f 81       	ldd	r18, Y+7	; 0x07
    1100:	f7 01       	movw	r30, r14
    1102:	e6 0d       	add	r30, r6
    1104:	f7 1d       	adc	r31, r7
    1106:	21 8b       	std	Z+17, r18	; 0x11
    1108:	89 81       	ldd	r24, Y+1	; 0x01
    110a:	9a 81       	ldd	r25, Y+2	; 0x02
    110c:	f3 01       	movw	r30, r6
    110e:	ee 0f       	add	r30, r30
    1110:	ff 1f       	adc	r31, r31
    1112:	ee 0d       	add	r30, r14
    1114:	ff 1d       	adc	r31, r15
    1116:	92 a3       	std	Z+34, r25	; 0x22
    1118:	81 a3       	std	Z+33, r24	; 0x21
    111a:	83 32       	cpi	r24, 0x23	; 35
    111c:	91 05       	cpc	r25, r1
    111e:	11 f4       	brne	.+4      	; 0x1124 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    1120:	f8 01       	movw	r30, r16
    1122:	08 c0       	rjmp	.+16     	; 0x1134 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    1124:	86 32       	cpi	r24, 0x26	; 38
    1126:	91 05       	cpc	r25, r1
    1128:	11 f4       	brne	.+4      	; 0x112e <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    112a:	f6 01       	movw	r30, r12
    112c:	03 c0       	rjmp	.+6      	; 0x1134 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    112e:	89 97       	sbiw	r24, 0x29	; 41
    1130:	21 f4       	brne	.+8      	; 0x113a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    1132:	f5 01       	movw	r30, r10
    1134:	80 81       	ld	r24, Z
    1136:	82 2b       	or	r24, r18
    1138:	80 83       	st	Z, r24
    113a:	53 94       	inc	r5
    113c:	d2 cf       	rjmp	.-92     	; 0x10e2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    113e:	27 96       	adiw	r28, 0x07	; 7
    1140:	ef e0       	ldi	r30, 0x0F	; 15
    1142:	0c 94 56 0d 	jmp	0x1aac	; 0x1aac <__epilogue_restores__+0x6>

00001146 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1146:	a0 e0       	ldi	r26, 0x00	; 0
    1148:	b0 e0       	ldi	r27, 0x00	; 0
    114a:	e9 ea       	ldi	r30, 0xA9	; 169
    114c:	f8 e0       	ldi	r31, 0x08	; 8
    114e:	0c 94 3c 0d 	jmp	0x1a78	; 0x1a78 <__prologue_saves__+0xa>
    1152:	ec 01       	movw	r28, r24
    1154:	5b 01       	movw	r10, r22
    1156:	6c 01       	movw	r12, r24
    1158:	81 e4       	ldi	r24, 0x41	; 65
    115a:	c8 0e       	add	r12, r24
    115c:	d1 1c       	adc	r13, r1
    115e:	f6 01       	movw	r30, r12
    1160:	80 80       	ld	r8, Z
    1162:	7e 01       	movw	r14, r28
    1164:	f2 e4       	ldi	r31, 0x42	; 66
    1166:	ef 0e       	add	r14, r31
    1168:	f1 1c       	adc	r15, r1
    116a:	f7 01       	movw	r30, r14
    116c:	70 80       	ld	r7, Z
    116e:	8e 01       	movw	r16, r28
    1170:	0d 5b       	subi	r16, 0xBD	; 189
    1172:	1f 4f       	sbci	r17, 0xFF	; 255
    1174:	f8 01       	movw	r30, r16
    1176:	90 80       	ld	r9, Z
    1178:	80 e0       	ldi	r24, 0x00	; 0
    117a:	98 85       	ldd	r25, Y+8	; 0x08
    117c:	89 17       	cp	r24, r25
    117e:	48 f4       	brcc	.+18     	; 0x1192 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    1180:	f5 01       	movw	r30, r10
    1182:	e8 0f       	add	r30, r24
    1184:	f1 1d       	adc	r31, r1
    1186:	e8 0f       	add	r30, r24
    1188:	f1 1d       	adc	r31, r1
    118a:	11 82       	std	Z+1, r1	; 0x01
    118c:	10 82       	st	Z, r1
    118e:	8f 5f       	subi	r24, 0xFF	; 255
    1190:	f4 cf       	rjmp	.-24     	; 0x117a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    1192:	84 b1       	in	r24, 0x04	; 4
    1194:	f6 01       	movw	r30, r12
    1196:	90 81       	ld	r25, Z
    1198:	89 2b       	or	r24, r25
    119a:	84 b9       	out	0x04, r24	; 4
    119c:	87 b1       	in	r24, 0x07	; 7
    119e:	f7 01       	movw	r30, r14
    11a0:	90 81       	ld	r25, Z
    11a2:	89 2b       	or	r24, r25
    11a4:	87 b9       	out	0x07, r24	; 7
    11a6:	8a b1       	in	r24, 0x0a	; 10
    11a8:	f8 01       	movw	r30, r16
    11aa:	90 81       	ld	r25, Z
    11ac:	89 2b       	or	r24, r25
    11ae:	8a b9       	out	0x0a, r24	; 10
    11b0:	85 b1       	in	r24, 0x05	; 5
    11b2:	f6 01       	movw	r30, r12
    11b4:	90 81       	ld	r25, Z
    11b6:	89 2b       	or	r24, r25
    11b8:	85 b9       	out	0x05, r24	; 5
    11ba:	88 b1       	in	r24, 0x08	; 8
    11bc:	f7 01       	movw	r30, r14
    11be:	90 81       	ld	r25, Z
    11c0:	89 2b       	or	r24, r25
    11c2:	88 b9       	out	0x08, r24	; 8
    11c4:	8b b1       	in	r24, 0x0b	; 11
    11c6:	f8 01       	movw	r30, r16
    11c8:	90 81       	ld	r25, Z
    11ca:	89 2b       	or	r24, r25
    11cc:	8b b9       	out	0x0b, r24	; 11
    11ce:	8a e0       	ldi	r24, 0x0A	; 10
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	0e 94 b3 07 	call	0xf66	; 0xf66 <delay_us>
    11d6:	94 b1       	in	r25, 0x04	; 4
    11d8:	f6 01       	movw	r30, r12
    11da:	80 81       	ld	r24, Z
    11dc:	80 95       	com	r24
    11de:	89 23       	and	r24, r25
    11e0:	84 b9       	out	0x04, r24	; 4
    11e2:	97 b1       	in	r25, 0x07	; 7
    11e4:	f7 01       	movw	r30, r14
    11e6:	80 81       	ld	r24, Z
    11e8:	80 95       	com	r24
    11ea:	89 23       	and	r24, r25
    11ec:	87 b9       	out	0x07, r24	; 7
    11ee:	9a b1       	in	r25, 0x0a	; 10
    11f0:	f8 01       	movw	r30, r16
    11f2:	80 81       	ld	r24, Z
    11f4:	80 95       	com	r24
    11f6:	89 23       	and	r24, r25
    11f8:	8a b9       	out	0x0a, r24	; 10
    11fa:	95 b1       	in	r25, 0x05	; 5
    11fc:	f6 01       	movw	r30, r12
    11fe:	80 81       	ld	r24, Z
    1200:	80 95       	com	r24
    1202:	89 23       	and	r24, r25
    1204:	85 b9       	out	0x05, r24	; 5
    1206:	98 b1       	in	r25, 0x08	; 8
    1208:	f7 01       	movw	r30, r14
    120a:	80 81       	ld	r24, Z
    120c:	80 95       	com	r24
    120e:	89 23       	and	r24, r25
    1210:	88 b9       	out	0x08, r24	; 8
    1212:	9b b1       	in	r25, 0x0b	; 11
    1214:	f8 01       	movw	r30, r16
    1216:	80 81       	ld	r24, Z
    1218:	80 95       	com	r24
    121a:	89 23       	and	r24, r25
    121c:	8b b9       	out	0x0b, r24	; 11
    121e:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1222:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1226:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    122a:	83 60       	ori	r24, 0x03	; 3
    122c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1230:	82 e0       	ldi	r24, 0x02	; 2
    1232:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1236:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    123a:	80 e0       	ldi	r24, 0x00	; 0
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	2e 85       	ldd	r18, Y+14	; 0x0e
    1240:	3f 85       	ldd	r19, Y+15	; 0x0f
    1242:	82 17       	cp	r24, r18
    1244:	93 07       	cpc	r25, r19
    1246:	20 f5       	brcc	.+72     	; 0x1290 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    1248:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    124c:	2c 2d       	mov	r18, r12
    124e:	24 1b       	sub	r18, r20
    1250:	82 0f       	add	r24, r18
    1252:	91 1d       	adc	r25, r1
    1254:	03 b1       	in	r16, 0x03	; 3
    1256:	08 11       	cpse	r16, r8
    1258:	32 c0       	rjmp	.+100    	; 0x12be <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    125a:	f6 b0       	in	r15, 0x06	; 6
    125c:	f7 10       	cpse	r15, r7
    125e:	2f c0       	rjmp	.+94     	; 0x12be <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1260:	29 b1       	in	r18, 0x09	; 9
    1262:	29 11       	cpse	r18, r9
    1264:	2c c0       	rjmp	.+88     	; 0x12be <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1266:	10 c0       	rjmp	.+32     	; 0x1288 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    1268:	21 2f       	mov	r18, r17
    126a:	30 e0       	ldi	r19, 0x00	; 0
    126c:	a9 01       	movw	r20, r18
    126e:	44 0f       	add	r20, r20
    1270:	55 1f       	adc	r21, r21
    1272:	f5 01       	movw	r30, r10
    1274:	e4 0f       	add	r30, r20
    1276:	f5 1f       	adc	r31, r21
    1278:	60 81       	ld	r22, Z
    127a:	71 81       	ldd	r23, Z+1	; 0x01
    127c:	67 2b       	or	r22, r23
    127e:	21 f1       	breq	.+72     	; 0x12c8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    1280:	1f 5f       	subi	r17, 0xFF	; 255
    1282:	28 85       	ldd	r18, Y+8	; 0x08
    1284:	12 17       	cp	r17, r18
    1286:	80 f3       	brcs	.-32     	; 0x1268 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    1288:	7f 2c       	mov	r7, r15
    128a:	80 2e       	mov	r8, r16
    128c:	4c 2d       	mov	r20, r12
    128e:	d7 cf       	rjmp	.-82     	; 0x123e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    1290:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1294:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1298:	20 e0       	ldi	r18, 0x00	; 0
    129a:	88 85       	ldd	r24, Y+8	; 0x08
    129c:	28 17       	cp	r18, r24
    129e:	30 f5       	brcc	.+76     	; 0x12ec <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    12a0:	f5 01       	movw	r30, r10
    12a2:	e2 0f       	add	r30, r18
    12a4:	f1 1d       	adc	r31, r1
    12a6:	e2 0f       	add	r30, r18
    12a8:	f1 1d       	adc	r31, r1
    12aa:	80 81       	ld	r24, Z
    12ac:	91 81       	ldd	r25, Z+1	; 0x01
    12ae:	89 2b       	or	r24, r25
    12b0:	21 f4       	brne	.+8      	; 0x12ba <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    12b2:	8e 85       	ldd	r24, Y+14	; 0x0e
    12b4:	9f 85       	ldd	r25, Y+15	; 0x0f
    12b6:	91 83       	std	Z+1, r25	; 0x01
    12b8:	80 83       	st	Z, r24
    12ba:	2f 5f       	subi	r18, 0xFF	; 255
    12bc:	ee cf       	rjmp	.-36     	; 0x129a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    12be:	03 b1       	in	r16, 0x03	; 3
    12c0:	f6 b0       	in	r15, 0x06	; 6
    12c2:	99 b0       	in	r9, 0x09	; 9
    12c4:	10 e0       	ldi	r17, 0x00	; 0
    12c6:	dd cf       	rjmp	.-70     	; 0x1282 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    12c8:	de 01       	movw	r26, r28
    12ca:	a4 0f       	add	r26, r20
    12cc:	b5 1f       	adc	r27, r21
    12ce:	91 96       	adiw	r26, 0x21	; 33
    12d0:	0d 90       	ld	r0, X+
    12d2:	bc 91       	ld	r27, X
    12d4:	a0 2d       	mov	r26, r0
    12d6:	4c 91       	ld	r20, X
    12d8:	de 01       	movw	r26, r28
    12da:	a2 0f       	add	r26, r18
    12dc:	b3 1f       	adc	r27, r19
    12de:	51 96       	adiw	r26, 0x11	; 17
    12e0:	2c 91       	ld	r18, X
    12e2:	42 23       	and	r20, r18
    12e4:	69 f6       	brne	.-102    	; 0x1280 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    12e6:	91 83       	std	Z+1, r25	; 0x01
    12e8:	80 83       	st	Z, r24
    12ea:	ca cf       	rjmp	.-108    	; 0x1280 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    12ec:	cd b7       	in	r28, 0x3d	; 61
    12ee:	de b7       	in	r29, 0x3e	; 62
    12f0:	ed e0       	ldi	r30, 0x0D	; 13
    12f2:	0c 94 58 0d 	jmp	0x1ab0	; 0x1ab0 <__epilogue_restores__+0xa>

000012f6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    12f6:	ef 92       	push	r14
    12f8:	ff 92       	push	r15
    12fa:	0f 93       	push	r16
    12fc:	1f 93       	push	r17
    12fe:	cf 93       	push	r28
    1300:	df 93       	push	r29
    1302:	fc 01       	movw	r30, r24
    1304:	9b 01       	movw	r18, r22
    1306:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    130a:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    130e:	47 b1       	in	r20, 0x07	; 7
    1310:	18 b1       	in	r17, 0x08	; 8
    1312:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1316:	86 fd       	sbrc	r24, 6
    1318:	fc cf       	rjmp	.-8      	; 0x1312 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    131a:	80 e0       	ldi	r24, 0x00	; 0
    131c:	90 85       	ldd	r25, Z+8	; 0x08
    131e:	89 17       	cp	r24, r25
    1320:	48 f4       	brcc	.+18     	; 0x1334 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    1322:	d9 01       	movw	r26, r18
    1324:	a8 0f       	add	r26, r24
    1326:	b1 1d       	adc	r27, r1
    1328:	a8 0f       	add	r26, r24
    132a:	b1 1d       	adc	r27, r1
    132c:	1d 92       	st	X+, r1
    132e:	1c 92       	st	X, r1
    1330:	8f 5f       	subi	r24, 0xFF	; 255
    1332:	f4 cf       	rjmp	.-24     	; 0x131c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    1334:	97 b1       	in	r25, 0x07	; 7
    1336:	82 a1       	ldd	r24, Z+34	; 0x22
    1338:	80 95       	com	r24
    133a:	89 23       	and	r24, r25
    133c:	87 b9       	out	0x07, r24	; 7
    133e:	98 b1       	in	r25, 0x08	; 8
    1340:	82 a1       	ldd	r24, Z+34	; 0x22
    1342:	80 95       	com	r24
    1344:	89 23       	and	r24, r25
    1346:	88 b9       	out	0x08, r24	; 8
    1348:	87 e8       	ldi	r24, 0x87	; 135
    134a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    134e:	e1 2c       	mov	r14, r1
    1350:	81 a1       	ldd	r24, Z+33	; 0x21
    1352:	e8 16       	cp	r14, r24
    1354:	10 f0       	brcs	.+4      	; 0x135a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    1356:	e1 2c       	mov	r14, r1
    1358:	29 c0       	rjmp	.+82     	; 0x13ac <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    135a:	50 e0       	ldi	r21, 0x00	; 0
    135c:	80 85       	ldd	r24, Z+8	; 0x08
    135e:	58 17       	cp	r21, r24
    1360:	18 f5       	brcc	.+70     	; 0x13a8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1362:	a5 2f       	mov	r26, r21
    1364:	b0 e0       	ldi	r27, 0x00	; 0
    1366:	ef 01       	movw	r28, r30
    1368:	ca 0f       	add	r28, r26
    136a:	db 1f       	adc	r29, r27
    136c:	89 89       	ldd	r24, Y+17	; 0x11
    136e:	80 64       	ori	r24, 0x40	; 64
    1370:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1374:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1378:	80 64       	ori	r24, 0x40	; 64
    137a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    137e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1382:	86 fd       	sbrc	r24, 6
    1384:	fc cf       	rjmp	.-8      	; 0x137e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    1386:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    138a:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    138e:	aa 0f       	add	r26, r26
    1390:	bb 1f       	adc	r27, r27
    1392:	a2 0f       	add	r26, r18
    1394:	b3 1f       	adc	r27, r19
    1396:	8d 91       	ld	r24, X+
    1398:	9c 91       	ld	r25, X
    139a:	11 97       	sbiw	r26, 0x01	; 1
    139c:	86 0f       	add	r24, r22
    139e:	97 1f       	adc	r25, r23
    13a0:	8d 93       	st	X+, r24
    13a2:	9c 93       	st	X, r25
    13a4:	5f 5f       	subi	r21, 0xFF	; 255
    13a6:	da cf       	rjmp	.-76     	; 0x135c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    13a8:	e3 94       	inc	r14
    13aa:	d2 cf       	rjmp	.-92     	; 0x1350 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    13ac:	80 85       	ldd	r24, Z+8	; 0x08
    13ae:	e8 16       	cp	r14, r24
    13b0:	a0 f4       	brcc	.+40     	; 0x13da <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    13b2:	e9 01       	movw	r28, r18
    13b4:	ce 0d       	add	r28, r14
    13b6:	d1 1d       	adc	r29, r1
    13b8:	ce 0d       	add	r28, r14
    13ba:	d1 1d       	adc	r29, r1
    13bc:	61 a1       	ldd	r22, Z+33	; 0x21
    13be:	70 e0       	ldi	r23, 0x00	; 0
    13c0:	cb 01       	movw	r24, r22
    13c2:	95 95       	asr	r25
    13c4:	87 95       	ror	r24
    13c6:	a8 81       	ld	r26, Y
    13c8:	b9 81       	ldd	r27, Y+1	; 0x01
    13ca:	8a 0f       	add	r24, r26
    13cc:	9b 1f       	adc	r25, r27
    13ce:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__udivmodhi4>
    13d2:	79 83       	std	Y+1, r23	; 0x01
    13d4:	68 83       	st	Y, r22
    13d6:	e3 94       	inc	r14
    13d8:	e9 cf       	rjmp	.-46     	; 0x13ac <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    13da:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    13de:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    13e2:	18 b9       	out	0x08, r17	; 8
    13e4:	47 b9       	out	0x07, r20	; 7
    13e6:	cd b7       	in	r28, 0x3d	; 61
    13e8:	de b7       	in	r29, 0x3e	; 62
    13ea:	e6 e0       	ldi	r30, 0x06	; 6
    13ec:	0c 94 5f 0d 	jmp	0x1abe	; 0x1abe <__epilogue_restores__+0x18>

000013f0 <_ZN16PololuQTRSensors4readEPjh>:
    13f0:	a0 e2       	ldi	r26, 0x20	; 32
    13f2:	b0 e0       	ldi	r27, 0x00	; 0
    13f4:	ee ef       	ldi	r30, 0xFE	; 254
    13f6:	f9 e0       	ldi	r31, 0x09	; 9
    13f8:	0c 94 42 0d 	jmp	0x1a84	; 0x1a84 <__prologue_saves__+0x16>
    13fc:	8c 01       	movw	r16, r24
    13fe:	7b 01       	movw	r14, r22
    1400:	d4 2e       	mov	r13, r20
    1402:	8f ef       	ldi	r24, 0xFF	; 255
    1404:	84 0f       	add	r24, r20
    1406:	82 30       	cpi	r24, 0x02	; 2
    1408:	18 f4       	brcc	.+6      	; 0x1410 <_ZN16PololuQTRSensors4readEPjh+0x20>
    140a:	c8 01       	movw	r24, r16
    140c:	0e 94 3a 08 	call	0x1074	; 0x1074 <_ZN16PololuQTRSensors10emittersOnEv>
    1410:	d8 01       	movw	r26, r16
    1412:	50 96       	adiw	r26, 0x10	; 16
    1414:	8c 91       	ld	r24, X
    1416:	b7 01       	movw	r22, r14
    1418:	81 11       	cpse	r24, r1
    141a:	10 c0       	rjmp	.+32     	; 0x143c <_ZN16PololuQTRSensors4readEPjh+0x4c>
    141c:	c8 01       	movw	r24, r16
    141e:	0e 94 a3 08 	call	0x1146	; 0x1146 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1422:	c8 01       	movw	r24, r16
    1424:	0e 94 25 08 	call	0x104a	; 0x104a <_ZN16PololuQTRSensors11emittersOffEv>
    1428:	b2 e0       	ldi	r27, 0x02	; 2
    142a:	db 12       	cpse	r13, r27
    142c:	3a c0       	rjmp	.+116    	; 0x14a2 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    142e:	be 01       	movw	r22, r28
    1430:	6f 5f       	subi	r22, 0xFF	; 255
    1432:	7f 4f       	sbci	r23, 0xFF	; 255
    1434:	c8 01       	movw	r24, r16
    1436:	0e 94 a3 08 	call	0x1146	; 0x1146 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    143a:	0f c0       	rjmp	.+30     	; 0x145a <_ZN16PololuQTRSensors4readEPjh+0x6a>
    143c:	c8 01       	movw	r24, r16
    143e:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1442:	c8 01       	movw	r24, r16
    1444:	0e 94 25 08 	call	0x104a	; 0x104a <_ZN16PololuQTRSensors11emittersOffEv>
    1448:	e2 e0       	ldi	r30, 0x02	; 2
    144a:	de 12       	cpse	r13, r30
    144c:	2a c0       	rjmp	.+84     	; 0x14a2 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    144e:	be 01       	movw	r22, r28
    1450:	6f 5f       	subi	r22, 0xFF	; 255
    1452:	7f 4f       	sbci	r23, 0xFF	; 255
    1454:	c8 01       	movw	r24, r16
    1456:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    145a:	40 e0       	ldi	r20, 0x00	; 0
    145c:	f8 01       	movw	r30, r16
    145e:	80 85       	ldd	r24, Z+8	; 0x08
    1460:	48 17       	cp	r20, r24
    1462:	f8 f4       	brcc	.+62     	; 0x14a2 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1464:	84 2f       	mov	r24, r20
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	88 0f       	add	r24, r24
    146a:	99 1f       	adc	r25, r25
    146c:	f7 01       	movw	r30, r14
    146e:	e8 0f       	add	r30, r24
    1470:	f9 1f       	adc	r31, r25
    1472:	21 e0       	ldi	r18, 0x01	; 1
    1474:	30 e0       	ldi	r19, 0x00	; 0
    1476:	2c 0f       	add	r18, r28
    1478:	3d 1f       	adc	r19, r29
    147a:	82 0f       	add	r24, r18
    147c:	93 1f       	adc	r25, r19
    147e:	d8 01       	movw	r26, r16
    1480:	1e 96       	adiw	r26, 0x0e	; 14
    1482:	2d 91       	ld	r18, X+
    1484:	3c 91       	ld	r19, X
    1486:	1f 97       	sbiw	r26, 0x0f	; 15
    1488:	dc 01       	movw	r26, r24
    148a:	8d 91       	ld	r24, X+
    148c:	9c 91       	ld	r25, X
    148e:	28 1b       	sub	r18, r24
    1490:	39 0b       	sbc	r19, r25
    1492:	80 81       	ld	r24, Z
    1494:	91 81       	ldd	r25, Z+1	; 0x01
    1496:	82 0f       	add	r24, r18
    1498:	93 1f       	adc	r25, r19
    149a:	91 83       	std	Z+1, r25	; 0x01
    149c:	80 83       	st	Z, r24
    149e:	4f 5f       	subi	r20, 0xFF	; 255
    14a0:	dd cf       	rjmp	.-70     	; 0x145c <_ZN16PololuQTRSensors4readEPjh+0x6c>
    14a2:	a0 96       	adiw	r28, 0x20	; 32
    14a4:	e7 e0       	ldi	r30, 0x07	; 7
    14a6:	0c 94 5e 0d 	jmp	0x1abc	; 0x1abc <__epilogue_restores__+0x16>

000014aa <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    14aa:	2f 92       	push	r2
    14ac:	3f 92       	push	r3
    14ae:	5f 92       	push	r5
    14b0:	6f 92       	push	r6
    14b2:	7f 92       	push	r7
    14b4:	8f 92       	push	r8
    14b6:	9f 92       	push	r9
    14b8:	af 92       	push	r10
    14ba:	bf 92       	push	r11
    14bc:	cf 92       	push	r12
    14be:	df 92       	push	r13
    14c0:	ef 92       	push	r14
    14c2:	ff 92       	push	r15
    14c4:	0f 93       	push	r16
    14c6:	1f 93       	push	r17
    14c8:	cf 93       	push	r28
    14ca:	df 93       	push	r29
    14cc:	cd b7       	in	r28, 0x3d	; 61
    14ce:	de b7       	in	r29, 0x3e	; 62
    14d0:	c0 56       	subi	r28, 0x60	; 96
    14d2:	d1 09       	sbc	r29, r1
    14d4:	0f b6       	in	r0, 0x3f	; 63
    14d6:	f8 94       	cli
    14d8:	de bf       	out	0x3e, r29	; 62
    14da:	0f be       	out	0x3f, r0	; 63
    14dc:	cd bf       	out	0x3d, r28	; 61
    14de:	8c 01       	movw	r16, r24
    14e0:	4b 01       	movw	r8, r22
    14e2:	5a 01       	movw	r10, r20
    14e4:	52 2e       	mov	r5, r18
    14e6:	da 01       	movw	r26, r20
    14e8:	8d 91       	ld	r24, X+
    14ea:	9c 91       	ld	r25, X
    14ec:	89 2b       	or	r24, r25
    14ee:	31 f0       	breq	.+12     	; 0x14fc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    14f0:	f4 01       	movw	r30, r8
    14f2:	80 81       	ld	r24, Z
    14f4:	91 81       	ldd	r25, Z+1	; 0x01
    14f6:	89 2b       	or	r24, r25
    14f8:	f1 f4       	brne	.+60     	; 0x1536 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    14fa:	24 c0       	rjmp	.+72     	; 0x1544 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    14fc:	d8 01       	movw	r26, r16
    14fe:	18 96       	adiw	r26, 0x08	; 8
    1500:	8c 91       	ld	r24, X
    1502:	90 e0       	ldi	r25, 0x00	; 0
    1504:	88 0f       	add	r24, r24
    1506:	99 1f       	adc	r25, r25
    1508:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <malloc>
    150c:	f5 01       	movw	r30, r10
    150e:	91 83       	std	Z+1, r25	; 0x01
    1510:	80 83       	st	Z, r24
    1512:	00 97       	sbiw	r24, 0x00	; 0
    1514:	09 f4       	brne	.+2      	; 0x1518 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    1516:	b1 c0       	rjmp	.+354    	; 0x167a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1518:	fc 01       	movw	r30, r24
    151a:	20 e0       	ldi	r18, 0x00	; 0
    151c:	30 e0       	ldi	r19, 0x00	; 0
    151e:	d8 01       	movw	r26, r16
    1520:	18 96       	adiw	r26, 0x08	; 8
    1522:	8c 91       	ld	r24, X
    1524:	90 e0       	ldi	r25, 0x00	; 0
    1526:	28 17       	cp	r18, r24
    1528:	39 07       	cpc	r19, r25
    152a:	14 f7       	brge	.-60     	; 0x14f0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    152c:	11 92       	st	Z+, r1
    152e:	11 92       	st	Z+, r1
    1530:	2f 5f       	subi	r18, 0xFF	; 255
    1532:	3f 4f       	sbci	r19, 0xFF	; 255
    1534:	f4 cf       	rjmp	.-24     	; 0x151e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    1536:	e1 2c       	mov	r14, r1
    1538:	f1 2c       	mov	r15, r1
    153a:	6e 01       	movw	r12, r28
    153c:	b1 e2       	ldi	r27, 0x21	; 33
    153e:	cb 0e       	add	r12, r27
    1540:	d1 1c       	adc	r13, r1
    1542:	21 c0       	rjmp	.+66     	; 0x1586 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    1544:	f8 01       	movw	r30, r16
    1546:	80 85       	ldd	r24, Z+8	; 0x08
    1548:	90 e0       	ldi	r25, 0x00	; 0
    154a:	88 0f       	add	r24, r24
    154c:	99 1f       	adc	r25, r25
    154e:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <malloc>
    1552:	d4 01       	movw	r26, r8
    1554:	8d 93       	st	X+, r24
    1556:	9c 93       	st	X, r25
    1558:	00 97       	sbiw	r24, 0x00	; 0
    155a:	09 f4       	brne	.+2      	; 0x155e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    155c:	8e c0       	rjmp	.+284    	; 0x167a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    155e:	fc 01       	movw	r30, r24
    1560:	20 e0       	ldi	r18, 0x00	; 0
    1562:	30 e0       	ldi	r19, 0x00	; 0
    1564:	d8 01       	movw	r26, r16
    1566:	18 96       	adiw	r26, 0x08	; 8
    1568:	8c 91       	ld	r24, X
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	28 17       	cp	r18, r24
    156e:	39 07       	cpc	r19, r25
    1570:	14 f7       	brge	.-60     	; 0x1536 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1572:	d8 01       	movw	r26, r16
    1574:	1e 96       	adiw	r26, 0x0e	; 14
    1576:	8d 91       	ld	r24, X+
    1578:	9c 91       	ld	r25, X
    157a:	1f 97       	sbiw	r26, 0x0f	; 15
    157c:	81 93       	st	Z+, r24
    157e:	91 93       	st	Z+, r25
    1580:	2f 5f       	subi	r18, 0xFF	; 255
    1582:	3f 4f       	sbci	r19, 0xFF	; 255
    1584:	ef cf       	rjmp	.-34     	; 0x1564 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    1586:	45 2d       	mov	r20, r5
    1588:	be 01       	movw	r22, r28
    158a:	6f 5b       	subi	r22, 0xBF	; 191
    158c:	7f 4f       	sbci	r23, 0xFF	; 255
    158e:	c8 01       	movw	r24, r16
    1590:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <_ZN16PololuQTRSensors4readEPjh>
    1594:	f8 01       	movw	r30, r16
    1596:	60 84       	ldd	r6, Z+8	; 0x08
    1598:	71 2c       	mov	r7, r1
    159a:	fe 01       	movw	r30, r28
    159c:	ef 5b       	subi	r30, 0xBF	; 191
    159e:	ff 4f       	sbci	r31, 0xFF	; 255
    15a0:	c6 01       	movw	r24, r12
    15a2:	9e 01       	movw	r18, r28
    15a4:	2f 5f       	subi	r18, 0xFF	; 255
    15a6:	3f 4f       	sbci	r19, 0xFF	; 255
    15a8:	19 01       	movw	r2, r18
    15aa:	20 e0       	ldi	r18, 0x00	; 0
    15ac:	30 e0       	ldi	r19, 0x00	; 0
    15ae:	26 15       	cp	r18, r6
    15b0:	37 05       	cpc	r19, r7
    15b2:	4c f5       	brge	.+82     	; 0x1606 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    15b4:	e1 14       	cp	r14, r1
    15b6:	f1 04       	cpc	r15, r1
    15b8:	89 f0       	breq	.+34     	; 0x15dc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    15ba:	dc 01       	movw	r26, r24
    15bc:	6d 91       	ld	r22, X+
    15be:	7c 91       	ld	r23, X
    15c0:	40 81       	ld	r20, Z
    15c2:	51 81       	ldd	r21, Z+1	; 0x01
    15c4:	64 17       	cp	r22, r20
    15c6:	75 07       	cpc	r23, r21
    15c8:	48 f0       	brcs	.+18     	; 0x15dc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    15ca:	d1 01       	movw	r26, r2
    15cc:	6d 91       	ld	r22, X+
    15ce:	7c 91       	ld	r23, X
    15d0:	40 81       	ld	r20, Z
    15d2:	51 81       	ldd	r21, Z+1	; 0x01
    15d4:	46 17       	cp	r20, r22
    15d6:	57 07       	cpc	r21, r23
    15d8:	48 f0       	brcs	.+18     	; 0x15ec <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    15da:	0d c0       	rjmp	.+26     	; 0x15f6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    15dc:	40 81       	ld	r20, Z
    15de:	51 81       	ldd	r21, Z+1	; 0x01
    15e0:	dc 01       	movw	r26, r24
    15e2:	4d 93       	st	X+, r20
    15e4:	5c 93       	st	X, r21
    15e6:	e1 14       	cp	r14, r1
    15e8:	f1 04       	cpc	r15, r1
    15ea:	79 f7       	brne	.-34     	; 0x15ca <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    15ec:	40 81       	ld	r20, Z
    15ee:	51 81       	ldd	r21, Z+1	; 0x01
    15f0:	d1 01       	movw	r26, r2
    15f2:	4d 93       	st	X+, r20
    15f4:	5c 93       	st	X, r21
    15f6:	2f 5f       	subi	r18, 0xFF	; 255
    15f8:	3f 4f       	sbci	r19, 0xFF	; 255
    15fa:	b2 e0       	ldi	r27, 0x02	; 2
    15fc:	2b 0e       	add	r2, r27
    15fe:	31 1c       	adc	r3, r1
    1600:	32 96       	adiw	r30, 0x02	; 2
    1602:	02 96       	adiw	r24, 0x02	; 2
    1604:	d4 cf       	rjmp	.-88     	; 0x15ae <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    1606:	ef ef       	ldi	r30, 0xFF	; 255
    1608:	ee 1a       	sub	r14, r30
    160a:	fe 0a       	sbc	r15, r30
    160c:	fa e0       	ldi	r31, 0x0A	; 10
    160e:	ef 16       	cp	r14, r31
    1610:	f1 04       	cpc	r15, r1
    1612:	09 f0       	breq	.+2      	; 0x1616 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    1614:	b8 cf       	rjmp	.-144    	; 0x1586 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    1616:	9e 01       	movw	r18, r28
    1618:	2f 5f       	subi	r18, 0xFF	; 255
    161a:	3f 4f       	sbci	r19, 0xFF	; 255
    161c:	79 01       	movw	r14, r18
    161e:	36 01       	movw	r6, r12
    1620:	80 e0       	ldi	r24, 0x00	; 0
    1622:	90 e0       	ldi	r25, 0x00	; 0
    1624:	f8 01       	movw	r30, r16
    1626:	20 85       	ldd	r18, Z+8	; 0x08
    1628:	30 e0       	ldi	r19, 0x00	; 0
    162a:	82 17       	cp	r24, r18
    162c:	93 07       	cpc	r25, r19
    162e:	2c f5       	brge	.+74     	; 0x167a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1630:	d7 01       	movw	r26, r14
    1632:	2d 91       	ld	r18, X+
    1634:	3d 91       	ld	r19, X+
    1636:	7d 01       	movw	r14, r26
    1638:	b3 01       	movw	r22, r6
    163a:	6c 19       	sub	r22, r12
    163c:	7d 09       	sbc	r23, r13
    163e:	d5 01       	movw	r26, r10
    1640:	ed 91       	ld	r30, X+
    1642:	fc 91       	ld	r31, X
    1644:	e6 0f       	add	r30, r22
    1646:	f7 1f       	adc	r31, r23
    1648:	40 81       	ld	r20, Z
    164a:	51 81       	ldd	r21, Z+1	; 0x01
    164c:	42 17       	cp	r20, r18
    164e:	53 07       	cpc	r21, r19
    1650:	10 f4       	brcc	.+4      	; 0x1656 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    1652:	31 83       	std	Z+1, r19	; 0x01
    1654:	20 83       	st	Z, r18
    1656:	f3 01       	movw	r30, r6
    1658:	21 91       	ld	r18, Z+
    165a:	31 91       	ld	r19, Z+
    165c:	3f 01       	movw	r6, r30
    165e:	d4 01       	movw	r26, r8
    1660:	ed 91       	ld	r30, X+
    1662:	fc 91       	ld	r31, X
    1664:	e6 0f       	add	r30, r22
    1666:	f7 1f       	adc	r31, r23
    1668:	40 81       	ld	r20, Z
    166a:	51 81       	ldd	r21, Z+1	; 0x01
    166c:	24 17       	cp	r18, r20
    166e:	35 07       	cpc	r19, r21
    1670:	10 f4       	brcc	.+4      	; 0x1676 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    1672:	31 83       	std	Z+1, r19	; 0x01
    1674:	20 83       	st	Z, r18
    1676:	01 96       	adiw	r24, 0x01	; 1
    1678:	d5 cf       	rjmp	.-86     	; 0x1624 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    167a:	c0 5a       	subi	r28, 0xA0	; 160
    167c:	df 4f       	sbci	r29, 0xFF	; 255
    167e:	0f b6       	in	r0, 0x3f	; 63
    1680:	f8 94       	cli
    1682:	de bf       	out	0x3e, r29	; 62
    1684:	0f be       	out	0x3f, r0	; 63
    1686:	cd bf       	out	0x3d, r28	; 61
    1688:	df 91       	pop	r29
    168a:	cf 91       	pop	r28
    168c:	1f 91       	pop	r17
    168e:	0f 91       	pop	r16
    1690:	ff 90       	pop	r15
    1692:	ef 90       	pop	r14
    1694:	df 90       	pop	r13
    1696:	cf 90       	pop	r12
    1698:	bf 90       	pop	r11
    169a:	af 90       	pop	r10
    169c:	9f 90       	pop	r9
    169e:	8f 90       	pop	r8
    16a0:	7f 90       	pop	r7
    16a2:	6f 90       	pop	r6
    16a4:	5f 90       	pop	r5
    16a6:	3f 90       	pop	r3
    16a8:	2f 90       	pop	r2
    16aa:	08 95       	ret

000016ac <_ZN16PololuQTRSensors9calibrateEh>:
    16ac:	1f 93       	push	r17
    16ae:	cf 93       	push	r28
    16b0:	df 93       	push	r29
    16b2:	ec 01       	movw	r28, r24
    16b4:	16 2f       	mov	r17, r22
    16b6:	8f ef       	ldi	r24, 0xFF	; 255
    16b8:	86 0f       	add	r24, r22
    16ba:	82 30       	cpi	r24, 0x02	; 2
    16bc:	18 f0       	brcs	.+6      	; 0x16c4 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    16be:	66 23       	and	r22, r22
    16c0:	59 f0       	breq	.+22     	; 0x16d8 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    16c2:	14 c0       	rjmp	.+40     	; 0x16ec <_ZN16PololuQTRSensors9calibrateEh+0x40>
    16c4:	21 e0       	ldi	r18, 0x01	; 1
    16c6:	ae 01       	movw	r20, r28
    16c8:	4e 5f       	subi	r20, 0xFE	; 254
    16ca:	5f 4f       	sbci	r21, 0xFF	; 255
    16cc:	be 01       	movw	r22, r28
    16ce:	ce 01       	movw	r24, r28
    16d0:	0e 94 55 0a 	call	0x14aa	; 0x14aa <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    16d4:	12 30       	cpi	r17, 0x02	; 2
    16d6:	51 f4       	brne	.+20     	; 0x16ec <_ZN16PololuQTRSensors9calibrateEh+0x40>
    16d8:	ae 01       	movw	r20, r28
    16da:	4a 5f       	subi	r20, 0xFA	; 250
    16dc:	5f 4f       	sbci	r21, 0xFF	; 255
    16de:	be 01       	movw	r22, r28
    16e0:	6c 5f       	subi	r22, 0xFC	; 252
    16e2:	7f 4f       	sbci	r23, 0xFF	; 255
    16e4:	20 e0       	ldi	r18, 0x00	; 0
    16e6:	ce 01       	movw	r24, r28
    16e8:	0e 94 55 0a 	call	0x14aa	; 0x14aa <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    16ec:	df 91       	pop	r29
    16ee:	cf 91       	pop	r28
    16f0:	1f 91       	pop	r17
    16f2:	08 95       	ret

000016f4 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    16f4:	a0 e0       	ldi	r26, 0x00	; 0
    16f6:	b0 e0       	ldi	r27, 0x00	; 0
    16f8:	e0 e8       	ldi	r30, 0x80	; 128
    16fa:	fb e0       	ldi	r31, 0x0B	; 11
    16fc:	0c 94 40 0d 	jmp	0x1a80	; 0x1a80 <__prologue_saves__+0x12>
    1700:	ec 01       	movw	r28, r24
    1702:	8b 01       	movw	r16, r22
    1704:	b4 2e       	mov	r11, r20
    1706:	84 2f       	mov	r24, r20
    1708:	8d 7f       	andi	r24, 0xFD	; 253
    170a:	51 f4       	brne	.+20     	; 0x1720 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    170c:	8c 81       	ldd	r24, Y+4	; 0x04
    170e:	9d 81       	ldd	r25, Y+5	; 0x05
    1710:	89 2b       	or	r24, r25
    1712:	09 f4       	brne	.+2      	; 0x1716 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    1714:	97 c0       	rjmp	.+302    	; 0x1844 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1716:	8e 81       	ldd	r24, Y+6	; 0x06
    1718:	9f 81       	ldd	r25, Y+7	; 0x07
    171a:	89 2b       	or	r24, r25
    171c:	09 f4       	brne	.+2      	; 0x1720 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    171e:	92 c0       	rjmp	.+292    	; 0x1844 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1720:	8f ef       	ldi	r24, 0xFF	; 255
    1722:	8b 0d       	add	r24, r11
    1724:	82 30       	cpi	r24, 0x02	; 2
    1726:	50 f4       	brcc	.+20     	; 0x173c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    1728:	88 81       	ld	r24, Y
    172a:	99 81       	ldd	r25, Y+1	; 0x01
    172c:	89 2b       	or	r24, r25
    172e:	09 f4       	brne	.+2      	; 0x1732 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    1730:	89 c0       	rjmp	.+274    	; 0x1844 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1732:	8a 81       	ldd	r24, Y+2	; 0x02
    1734:	9b 81       	ldd	r25, Y+3	; 0x03
    1736:	89 2b       	or	r24, r25
    1738:	09 f4       	brne	.+2      	; 0x173c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    173a:	84 c0       	rjmp	.+264    	; 0x1844 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    173c:	4b 2d       	mov	r20, r11
    173e:	b8 01       	movw	r22, r16
    1740:	ce 01       	movw	r24, r28
    1742:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <_ZN16PololuQTRSensors4readEPjh>
    1746:	78 01       	movw	r14, r16
    1748:	00 e0       	ldi	r16, 0x00	; 0
    174a:	10 e0       	ldi	r17, 0x00	; 0
    174c:	c1 2c       	mov	r12, r1
    174e:	d1 2c       	mov	r13, r1
    1750:	88 85       	ldd	r24, Y+8	; 0x08
    1752:	90 e0       	ldi	r25, 0x00	; 0
    1754:	c8 16       	cp	r12, r24
    1756:	d9 06       	cpc	r13, r25
    1758:	0c f0       	brlt	.+2      	; 0x175c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    175a:	74 c0       	rjmp	.+232    	; 0x1844 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    175c:	81 e0       	ldi	r24, 0x01	; 1
    175e:	b8 12       	cpse	r11, r24
    1760:	0a c0       	rjmp	.+20     	; 0x1776 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    1762:	ea 81       	ldd	r30, Y+2	; 0x02
    1764:	fb 81       	ldd	r31, Y+3	; 0x03
    1766:	e0 0f       	add	r30, r16
    1768:	f1 1f       	adc	r31, r17
    176a:	01 90       	ld	r0, Z+
    176c:	f0 81       	ld	r31, Z
    176e:	e0 2d       	mov	r30, r0
    1770:	a8 81       	ld	r26, Y
    1772:	b9 81       	ldd	r27, Y+1	; 0x01
    1774:	0d c0       	rjmp	.+26     	; 0x1790 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    1776:	8c 81       	ldd	r24, Y+4	; 0x04
    1778:	9d 81       	ldd	r25, Y+5	; 0x05
    177a:	2e 81       	ldd	r18, Y+6	; 0x06
    177c:	3f 81       	ldd	r19, Y+7	; 0x07
    177e:	b1 10       	cpse	r11, r1
    1780:	0c c0       	rjmp	.+24     	; 0x179a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    1782:	f9 01       	movw	r30, r18
    1784:	e0 0f       	add	r30, r16
    1786:	f1 1f       	adc	r31, r17
    1788:	01 90       	ld	r0, Z+
    178a:	f0 81       	ld	r31, Z
    178c:	e0 2d       	mov	r30, r0
    178e:	dc 01       	movw	r26, r24
    1790:	a0 0f       	add	r26, r16
    1792:	b1 1f       	adc	r27, r17
    1794:	8d 91       	ld	r24, X+
    1796:	9c 91       	ld	r25, X
    1798:	28 c0       	rjmp	.+80     	; 0x17ea <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    179a:	fc 01       	movw	r30, r24
    179c:	e0 0f       	add	r30, r16
    179e:	f1 1f       	adc	r31, r17
    17a0:	40 81       	ld	r20, Z
    17a2:	51 81       	ldd	r21, Z+1	; 0x01
    17a4:	e8 81       	ld	r30, Y
    17a6:	f9 81       	ldd	r31, Y+1	; 0x01
    17a8:	e0 0f       	add	r30, r16
    17aa:	f1 1f       	adc	r31, r17
    17ac:	80 81       	ld	r24, Z
    17ae:	91 81       	ldd	r25, Z+1	; 0x01
    17b0:	ee 85       	ldd	r30, Y+14	; 0x0e
    17b2:	ff 85       	ldd	r31, Y+15	; 0x0f
    17b4:	48 17       	cp	r20, r24
    17b6:	59 07       	cpc	r21, r25
    17b8:	10 f4       	brcc	.+4      	; 0x17be <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    17ba:	cf 01       	movw	r24, r30
    17bc:	04 c0       	rjmp	.+8      	; 0x17c6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    17be:	8e 0f       	add	r24, r30
    17c0:	9f 1f       	adc	r25, r31
    17c2:	84 1b       	sub	r24, r20
    17c4:	95 0b       	sbc	r25, r21
    17c6:	d9 01       	movw	r26, r18
    17c8:	a0 0f       	add	r26, r16
    17ca:	b1 1f       	adc	r27, r17
    17cc:	2d 91       	ld	r18, X+
    17ce:	3c 91       	ld	r19, X
    17d0:	aa 81       	ldd	r26, Y+2	; 0x02
    17d2:	bb 81       	ldd	r27, Y+3	; 0x03
    17d4:	a0 0f       	add	r26, r16
    17d6:	b1 1f       	adc	r27, r17
    17d8:	4d 91       	ld	r20, X+
    17da:	5c 91       	ld	r21, X
    17dc:	24 17       	cp	r18, r20
    17de:	35 07       	cpc	r19, r21
    17e0:	20 f0       	brcs	.+8      	; 0x17ea <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    17e2:	e4 0f       	add	r30, r20
    17e4:	f5 1f       	adc	r31, r21
    17e6:	e2 1b       	sub	r30, r18
    17e8:	f3 0b       	sbc	r31, r19
    17ea:	e8 1b       	sub	r30, r24
    17ec:	f9 0b       	sbc	r31, r25
    17ee:	a9 f0       	breq	.+42     	; 0x181a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    17f0:	d7 01       	movw	r26, r14
    17f2:	2d 91       	ld	r18, X+
    17f4:	3c 91       	ld	r19, X
    17f6:	40 e0       	ldi	r20, 0x00	; 0
    17f8:	50 e0       	ldi	r21, 0x00	; 0
    17fa:	28 1b       	sub	r18, r24
    17fc:	39 0b       	sbc	r19, r25
    17fe:	41 09       	sbc	r20, r1
    1800:	51 09       	sbc	r21, r1
    1802:	a8 ee       	ldi	r26, 0xE8	; 232
    1804:	b3 e0       	ldi	r27, 0x03	; 3
    1806:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <__muluhisi3>
    180a:	9f 01       	movw	r18, r30
    180c:	40 e0       	ldi	r20, 0x00	; 0
    180e:	50 e0       	ldi	r21, 0x00	; 0
    1810:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__divmodsi4>
    1814:	37 fd       	sbrc	r19, 7
    1816:	0a c0       	rjmp	.+20     	; 0x182c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    1818:	02 c0       	rjmp	.+4      	; 0x181e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    181a:	20 e0       	ldi	r18, 0x00	; 0
    181c:	30 e0       	ldi	r19, 0x00	; 0
    181e:	29 3e       	cpi	r18, 0xE9	; 233
    1820:	b3 e0       	ldi	r27, 0x03	; 3
    1822:	3b 07       	cpc	r19, r27
    1824:	2c f0       	brlt	.+10     	; 0x1830 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1826:	28 ee       	ldi	r18, 0xE8	; 232
    1828:	33 e0       	ldi	r19, 0x03	; 3
    182a:	02 c0       	rjmp	.+4      	; 0x1830 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    182c:	20 e0       	ldi	r18, 0x00	; 0
    182e:	30 e0       	ldi	r19, 0x00	; 0
    1830:	f7 01       	movw	r30, r14
    1832:	21 93       	st	Z+, r18
    1834:	31 93       	st	Z+, r19
    1836:	7f 01       	movw	r14, r30
    1838:	ff ef       	ldi	r31, 0xFF	; 255
    183a:	cf 1a       	sub	r12, r31
    183c:	df 0a       	sbc	r13, r31
    183e:	0e 5f       	subi	r16, 0xFE	; 254
    1840:	1f 4f       	sbci	r17, 0xFF	; 255
    1842:	86 cf       	rjmp	.-244    	; 0x1750 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    1844:	cd b7       	in	r28, 0x3d	; 61
    1846:	de b7       	in	r29, 0x3e	; 62
    1848:	e9 e0       	ldi	r30, 0x09	; 9
    184a:	0c 94 5c 0d 	jmp	0x1ab8	; 0x1ab8 <__epilogue_restores__+0x12>

0000184e <_ZN16PololuQTRSensors8readLineEPjhh>:
    184e:	a0 e0       	ldi	r26, 0x00	; 0
    1850:	b0 e0       	ldi	r27, 0x00	; 0
    1852:	ed e2       	ldi	r30, 0x2D	; 45
    1854:	fc e0       	ldi	r31, 0x0C	; 12
    1856:	0c 94 37 0d 	jmp	0x1a6e	; 0x1a6e <__prologue_saves__>
    185a:	ec 01       	movw	r28, r24
    185c:	8b 01       	movw	r16, r22
    185e:	82 2e       	mov	r8, r18
    1860:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    1864:	28 84       	ldd	r2, Y+8	; 0x08
    1866:	e8 01       	movw	r28, r16
    1868:	41 2c       	mov	r4, r1
    186a:	51 2c       	mov	r5, r1
    186c:	32 01       	movw	r6, r4
    186e:	00 e0       	ldi	r16, 0x00	; 0
    1870:	10 e0       	ldi	r17, 0x00	; 0
    1872:	c1 2c       	mov	r12, r1
    1874:	d1 2c       	mov	r13, r1
    1876:	76 01       	movw	r14, r12
    1878:	31 2c       	mov	r3, r1
    187a:	91 2c       	mov	r9, r1
    187c:	58 ee       	ldi	r21, 0xE8	; 232
    187e:	a5 2e       	mov	r10, r21
    1880:	53 e0       	ldi	r21, 0x03	; 3
    1882:	b5 2e       	mov	r11, r21
    1884:	92 14       	cp	r9, r2
    1886:	21 f1       	breq	.+72     	; 0x18d0 <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    1888:	e9 91       	ld	r30, Y+
    188a:	f9 91       	ld	r31, Y+
    188c:	88 20       	and	r8, r8
    188e:	21 f0       	breq	.+8      	; 0x1898 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    1890:	c5 01       	movw	r24, r10
    1892:	8e 1b       	sub	r24, r30
    1894:	9f 0b       	sbc	r25, r31
    1896:	fc 01       	movw	r30, r24
    1898:	e9 3c       	cpi	r30, 0xC9	; 201
    189a:	f1 05       	cpc	r31, r1
    189c:	24 f4       	brge	.+8      	; 0x18a6 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    189e:	e3 33       	cpi	r30, 0x33	; 51
    18a0:	f1 05       	cpc	r31, r1
    18a2:	74 f0       	brlt	.+28     	; 0x18c0 <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    18a4:	02 c0       	rjmp	.+4      	; 0x18aa <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    18a6:	33 24       	eor	r3, r3
    18a8:	33 94       	inc	r3
    18aa:	df 01       	movw	r26, r30
    18ac:	a3 01       	movw	r20, r6
    18ae:	92 01       	movw	r18, r4
    18b0:	0e 94 2f 0d 	call	0x1a5e	; 0x1a5e <__mulshisi3>
    18b4:	c6 0e       	add	r12, r22
    18b6:	d7 1e       	adc	r13, r23
    18b8:	e8 1e       	adc	r14, r24
    18ba:	f9 1e       	adc	r15, r25
    18bc:	0e 0f       	add	r16, r30
    18be:	1f 1f       	adc	r17, r31
    18c0:	93 94       	inc	r9
    18c2:	98 ee       	ldi	r25, 0xE8	; 232
    18c4:	49 0e       	add	r4, r25
    18c6:	93 e0       	ldi	r25, 0x03	; 3
    18c8:	59 1e       	adc	r5, r25
    18ca:	61 1c       	adc	r6, r1
    18cc:	71 1c       	adc	r7, r1
    18ce:	da cf       	rjmp	.-76     	; 0x1884 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    18d0:	31 10       	cpse	r3, r1
    18d2:	1e c0       	rjmp	.+60     	; 0x1910 <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    18d4:	49 2d       	mov	r20, r9
    18d6:	50 e0       	ldi	r21, 0x00	; 0
    18d8:	41 50       	subi	r20, 0x01	; 1
    18da:	51 09       	sbc	r21, r1
    18dc:	24 ef       	ldi	r18, 0xF4	; 244
    18de:	31 e0       	ldi	r19, 0x01	; 1
    18e0:	42 9f       	mul	r20, r18
    18e2:	c0 01       	movw	r24, r0
    18e4:	43 9f       	mul	r20, r19
    18e6:	90 0d       	add	r25, r0
    18e8:	52 9f       	mul	r21, r18
    18ea:	90 0d       	add	r25, r0
    18ec:	11 24       	eor	r1, r1
    18ee:	20 91 8e 01 	lds	r18, 0x018E	; 0x80018e <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    18f2:	30 91 8f 01 	lds	r19, 0x018F	; 0x80018f <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    18f6:	28 17       	cp	r18, r24
    18f8:	39 07       	cpc	r19, r25
    18fa:	b4 f0       	brlt	.+44     	; 0x1928 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    18fc:	88 ee       	ldi	r24, 0xE8	; 232
    18fe:	93 e0       	ldi	r25, 0x03	; 3
    1900:	48 9f       	mul	r20, r24
    1902:	90 01       	movw	r18, r0
    1904:	49 9f       	mul	r20, r25
    1906:	30 0d       	add	r19, r0
    1908:	58 9f       	mul	r21, r24
    190a:	30 0d       	add	r19, r0
    190c:	11 24       	eor	r1, r1
    190e:	0e c0       	rjmp	.+28     	; 0x192c <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    1910:	98 01       	movw	r18, r16
    1912:	40 e0       	ldi	r20, 0x00	; 0
    1914:	50 e0       	ldi	r21, 0x00	; 0
    1916:	c7 01       	movw	r24, r14
    1918:	b6 01       	movw	r22, r12
    191a:	0e 94 ce 0c 	call	0x199c	; 0x199c <__udivmodsi4>
    191e:	30 93 8f 01 	sts	0x018F, r19	; 0x80018f <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    1922:	20 93 8e 01 	sts	0x018E, r18	; 0x80018e <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    1926:	02 c0       	rjmp	.+4      	; 0x192c <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    1928:	20 e0       	ldi	r18, 0x00	; 0
    192a:	30 e0       	ldi	r19, 0x00	; 0
    192c:	c9 01       	movw	r24, r18
    192e:	cd b7       	in	r28, 0x3d	; 61
    1930:	de b7       	in	r29, 0x3e	; 62
    1932:	e2 e1       	ldi	r30, 0x12	; 18
    1934:	0c 94 53 0d 	jmp	0x1aa6	; 0x1aa6 <__epilogue_restores__>

00001938 <_ZN16PololuQTRSensorsD1Ev>:
    1938:	cf 93       	push	r28
    193a:	df 93       	push	r29
    193c:	ec 01       	movw	r28, r24
    193e:	8a 81       	ldd	r24, Y+2	; 0x02
    1940:	9b 81       	ldd	r25, Y+3	; 0x03
    1942:	00 97       	sbiw	r24, 0x00	; 0
    1944:	11 f0       	breq	.+4      	; 0x194a <_ZN16PololuQTRSensorsD1Ev+0x12>
    1946:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <free>
    194a:	8e 81       	ldd	r24, Y+6	; 0x06
    194c:	9f 81       	ldd	r25, Y+7	; 0x07
    194e:	00 97       	sbiw	r24, 0x00	; 0
    1950:	11 f0       	breq	.+4      	; 0x1956 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    1952:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <free>
    1956:	88 81       	ld	r24, Y
    1958:	99 81       	ldd	r25, Y+1	; 0x01
    195a:	00 97       	sbiw	r24, 0x00	; 0
    195c:	11 f0       	breq	.+4      	; 0x1962 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    195e:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <free>
    1962:	8c 81       	ldd	r24, Y+4	; 0x04
    1964:	9d 81       	ldd	r25, Y+5	; 0x05
    1966:	00 97       	sbiw	r24, 0x00	; 0
    1968:	11 f0       	breq	.+4      	; 0x196e <_ZN16PololuQTRSensorsD1Ev+0x36>
    196a:	0e 94 06 0e 	call	0x1c0c	; 0x1c0c <free>
    196e:	df 91       	pop	r29
    1970:	cf 91       	pop	r28
    1972:	08 95       	ret

00001974 <__udivmodhi4>:
    1974:	aa 1b       	sub	r26, r26
    1976:	bb 1b       	sub	r27, r27
    1978:	51 e1       	ldi	r21, 0x11	; 17
    197a:	07 c0       	rjmp	.+14     	; 0x198a <__udivmodhi4_ep>

0000197c <__udivmodhi4_loop>:
    197c:	aa 1f       	adc	r26, r26
    197e:	bb 1f       	adc	r27, r27
    1980:	a6 17       	cp	r26, r22
    1982:	b7 07       	cpc	r27, r23
    1984:	10 f0       	brcs	.+4      	; 0x198a <__udivmodhi4_ep>
    1986:	a6 1b       	sub	r26, r22
    1988:	b7 0b       	sbc	r27, r23

0000198a <__udivmodhi4_ep>:
    198a:	88 1f       	adc	r24, r24
    198c:	99 1f       	adc	r25, r25
    198e:	5a 95       	dec	r21
    1990:	a9 f7       	brne	.-22     	; 0x197c <__udivmodhi4_loop>
    1992:	80 95       	com	r24
    1994:	90 95       	com	r25
    1996:	bc 01       	movw	r22, r24
    1998:	cd 01       	movw	r24, r26
    199a:	08 95       	ret

0000199c <__udivmodsi4>:
    199c:	a1 e2       	ldi	r26, 0x21	; 33
    199e:	1a 2e       	mov	r1, r26
    19a0:	aa 1b       	sub	r26, r26
    19a2:	bb 1b       	sub	r27, r27
    19a4:	fd 01       	movw	r30, r26
    19a6:	0d c0       	rjmp	.+26     	; 0x19c2 <__udivmodsi4_ep>

000019a8 <__udivmodsi4_loop>:
    19a8:	aa 1f       	adc	r26, r26
    19aa:	bb 1f       	adc	r27, r27
    19ac:	ee 1f       	adc	r30, r30
    19ae:	ff 1f       	adc	r31, r31
    19b0:	a2 17       	cp	r26, r18
    19b2:	b3 07       	cpc	r27, r19
    19b4:	e4 07       	cpc	r30, r20
    19b6:	f5 07       	cpc	r31, r21
    19b8:	20 f0       	brcs	.+8      	; 0x19c2 <__udivmodsi4_ep>
    19ba:	a2 1b       	sub	r26, r18
    19bc:	b3 0b       	sbc	r27, r19
    19be:	e4 0b       	sbc	r30, r20
    19c0:	f5 0b       	sbc	r31, r21

000019c2 <__udivmodsi4_ep>:
    19c2:	66 1f       	adc	r22, r22
    19c4:	77 1f       	adc	r23, r23
    19c6:	88 1f       	adc	r24, r24
    19c8:	99 1f       	adc	r25, r25
    19ca:	1a 94       	dec	r1
    19cc:	69 f7       	brne	.-38     	; 0x19a8 <__udivmodsi4_loop>
    19ce:	60 95       	com	r22
    19d0:	70 95       	com	r23
    19d2:	80 95       	com	r24
    19d4:	90 95       	com	r25
    19d6:	9b 01       	movw	r18, r22
    19d8:	ac 01       	movw	r20, r24
    19da:	bd 01       	movw	r22, r26
    19dc:	cf 01       	movw	r24, r30
    19de:	08 95       	ret

000019e0 <__divmodsi4>:
    19e0:	05 2e       	mov	r0, r21
    19e2:	97 fb       	bst	r25, 7
    19e4:	1e f4       	brtc	.+6      	; 0x19ec <__divmodsi4+0xc>
    19e6:	00 94       	com	r0
    19e8:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <__negsi2>
    19ec:	57 fd       	sbrc	r21, 7
    19ee:	07 d0       	rcall	.+14     	; 0x19fe <__divmodsi4_neg2>
    19f0:	0e 94 ce 0c 	call	0x199c	; 0x199c <__udivmodsi4>
    19f4:	07 fc       	sbrc	r0, 7
    19f6:	03 d0       	rcall	.+6      	; 0x19fe <__divmodsi4_neg2>
    19f8:	4e f4       	brtc	.+18     	; 0x1a0c <__divmodsi4_exit>
    19fa:	0c 94 07 0d 	jmp	0x1a0e	; 0x1a0e <__negsi2>

000019fe <__divmodsi4_neg2>:
    19fe:	50 95       	com	r21
    1a00:	40 95       	com	r20
    1a02:	30 95       	com	r19
    1a04:	21 95       	neg	r18
    1a06:	3f 4f       	sbci	r19, 0xFF	; 255
    1a08:	4f 4f       	sbci	r20, 0xFF	; 255
    1a0a:	5f 4f       	sbci	r21, 0xFF	; 255

00001a0c <__divmodsi4_exit>:
    1a0c:	08 95       	ret

00001a0e <__negsi2>:
    1a0e:	90 95       	com	r25
    1a10:	80 95       	com	r24
    1a12:	70 95       	com	r23
    1a14:	61 95       	neg	r22
    1a16:	7f 4f       	sbci	r23, 0xFF	; 255
    1a18:	8f 4f       	sbci	r24, 0xFF	; 255
    1a1a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a1c:	08 95       	ret

00001a1e <__tablejump2__>:
    1a1e:	ee 0f       	add	r30, r30
    1a20:	ff 1f       	adc	r31, r31
    1a22:	05 90       	lpm	r0, Z+
    1a24:	f4 91       	lpm	r31, Z
    1a26:	e0 2d       	mov	r30, r0
    1a28:	09 94       	ijmp

00001a2a <__umulhisi3>:
    1a2a:	a2 9f       	mul	r26, r18
    1a2c:	b0 01       	movw	r22, r0
    1a2e:	b3 9f       	mul	r27, r19
    1a30:	c0 01       	movw	r24, r0
    1a32:	a3 9f       	mul	r26, r19
    1a34:	70 0d       	add	r23, r0
    1a36:	81 1d       	adc	r24, r1
    1a38:	11 24       	eor	r1, r1
    1a3a:	91 1d       	adc	r25, r1
    1a3c:	b2 9f       	mul	r27, r18
    1a3e:	70 0d       	add	r23, r0
    1a40:	81 1d       	adc	r24, r1
    1a42:	11 24       	eor	r1, r1
    1a44:	91 1d       	adc	r25, r1
    1a46:	08 95       	ret

00001a48 <__muluhisi3>:
    1a48:	0e 94 15 0d 	call	0x1a2a	; 0x1a2a <__umulhisi3>
    1a4c:	a5 9f       	mul	r26, r21
    1a4e:	90 0d       	add	r25, r0
    1a50:	b4 9f       	mul	r27, r20
    1a52:	90 0d       	add	r25, r0
    1a54:	a4 9f       	mul	r26, r20
    1a56:	80 0d       	add	r24, r0
    1a58:	91 1d       	adc	r25, r1
    1a5a:	11 24       	eor	r1, r1
    1a5c:	08 95       	ret

00001a5e <__mulshisi3>:
    1a5e:	b7 ff       	sbrs	r27, 7
    1a60:	0c 94 24 0d 	jmp	0x1a48	; 0x1a48 <__muluhisi3>

00001a64 <__mulohisi3>:
    1a64:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <__muluhisi3>
    1a68:	82 1b       	sub	r24, r18
    1a6a:	93 0b       	sbc	r25, r19
    1a6c:	08 95       	ret

00001a6e <__prologue_saves__>:
    1a6e:	2f 92       	push	r2
    1a70:	3f 92       	push	r3
    1a72:	4f 92       	push	r4
    1a74:	5f 92       	push	r5
    1a76:	6f 92       	push	r6
    1a78:	7f 92       	push	r7
    1a7a:	8f 92       	push	r8
    1a7c:	9f 92       	push	r9
    1a7e:	af 92       	push	r10
    1a80:	bf 92       	push	r11
    1a82:	cf 92       	push	r12
    1a84:	df 92       	push	r13
    1a86:	ef 92       	push	r14
    1a88:	ff 92       	push	r15
    1a8a:	0f 93       	push	r16
    1a8c:	1f 93       	push	r17
    1a8e:	cf 93       	push	r28
    1a90:	df 93       	push	r29
    1a92:	cd b7       	in	r28, 0x3d	; 61
    1a94:	de b7       	in	r29, 0x3e	; 62
    1a96:	ca 1b       	sub	r28, r26
    1a98:	db 0b       	sbc	r29, r27
    1a9a:	0f b6       	in	r0, 0x3f	; 63
    1a9c:	f8 94       	cli
    1a9e:	de bf       	out	0x3e, r29	; 62
    1aa0:	0f be       	out	0x3f, r0	; 63
    1aa2:	cd bf       	out	0x3d, r28	; 61
    1aa4:	09 94       	ijmp

00001aa6 <__epilogue_restores__>:
    1aa6:	2a 88       	ldd	r2, Y+18	; 0x12
    1aa8:	39 88       	ldd	r3, Y+17	; 0x11
    1aaa:	48 88       	ldd	r4, Y+16	; 0x10
    1aac:	5f 84       	ldd	r5, Y+15	; 0x0f
    1aae:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ab0:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ab2:	8c 84       	ldd	r8, Y+12	; 0x0c
    1ab4:	9b 84       	ldd	r9, Y+11	; 0x0b
    1ab6:	aa 84       	ldd	r10, Y+10	; 0x0a
    1ab8:	b9 84       	ldd	r11, Y+9	; 0x09
    1aba:	c8 84       	ldd	r12, Y+8	; 0x08
    1abc:	df 80       	ldd	r13, Y+7	; 0x07
    1abe:	ee 80       	ldd	r14, Y+6	; 0x06
    1ac0:	fd 80       	ldd	r15, Y+5	; 0x05
    1ac2:	0c 81       	ldd	r16, Y+4	; 0x04
    1ac4:	1b 81       	ldd	r17, Y+3	; 0x03
    1ac6:	aa 81       	ldd	r26, Y+2	; 0x02
    1ac8:	b9 81       	ldd	r27, Y+1	; 0x01
    1aca:	ce 0f       	add	r28, r30
    1acc:	d1 1d       	adc	r29, r1
    1ace:	0f b6       	in	r0, 0x3f	; 63
    1ad0:	f8 94       	cli
    1ad2:	de bf       	out	0x3e, r29	; 62
    1ad4:	0f be       	out	0x3f, r0	; 63
    1ad6:	cd bf       	out	0x3d, r28	; 61
    1ad8:	ed 01       	movw	r28, r26
    1ada:	08 95       	ret

00001adc <malloc>:
    1adc:	0f 93       	push	r16
    1ade:	1f 93       	push	r17
    1ae0:	cf 93       	push	r28
    1ae2:	df 93       	push	r29
    1ae4:	82 30       	cpi	r24, 0x02	; 2
    1ae6:	91 05       	cpc	r25, r1
    1ae8:	10 f4       	brcc	.+4      	; 0x1aee <malloc+0x12>
    1aea:	82 e0       	ldi	r24, 0x02	; 2
    1aec:	90 e0       	ldi	r25, 0x00	; 0
    1aee:	e0 91 a6 01 	lds	r30, 0x01A6	; 0x8001a6 <__flp>
    1af2:	f0 91 a7 01 	lds	r31, 0x01A7	; 0x8001a7 <__flp+0x1>
    1af6:	20 e0       	ldi	r18, 0x00	; 0
    1af8:	30 e0       	ldi	r19, 0x00	; 0
    1afa:	a0 e0       	ldi	r26, 0x00	; 0
    1afc:	b0 e0       	ldi	r27, 0x00	; 0
    1afe:	30 97       	sbiw	r30, 0x00	; 0
    1b00:	19 f1       	breq	.+70     	; 0x1b48 <malloc+0x6c>
    1b02:	40 81       	ld	r20, Z
    1b04:	51 81       	ldd	r21, Z+1	; 0x01
    1b06:	02 81       	ldd	r16, Z+2	; 0x02
    1b08:	13 81       	ldd	r17, Z+3	; 0x03
    1b0a:	48 17       	cp	r20, r24
    1b0c:	59 07       	cpc	r21, r25
    1b0e:	c8 f0       	brcs	.+50     	; 0x1b42 <malloc+0x66>
    1b10:	84 17       	cp	r24, r20
    1b12:	95 07       	cpc	r25, r21
    1b14:	69 f4       	brne	.+26     	; 0x1b30 <malloc+0x54>
    1b16:	10 97       	sbiw	r26, 0x00	; 0
    1b18:	31 f0       	breq	.+12     	; 0x1b26 <malloc+0x4a>
    1b1a:	12 96       	adiw	r26, 0x02	; 2
    1b1c:	0c 93       	st	X, r16
    1b1e:	12 97       	sbiw	r26, 0x02	; 2
    1b20:	13 96       	adiw	r26, 0x03	; 3
    1b22:	1c 93       	st	X, r17
    1b24:	27 c0       	rjmp	.+78     	; 0x1b74 <malloc+0x98>
    1b26:	00 93 a6 01 	sts	0x01A6, r16	; 0x8001a6 <__flp>
    1b2a:	10 93 a7 01 	sts	0x01A7, r17	; 0x8001a7 <__flp+0x1>
    1b2e:	22 c0       	rjmp	.+68     	; 0x1b74 <malloc+0x98>
    1b30:	21 15       	cp	r18, r1
    1b32:	31 05       	cpc	r19, r1
    1b34:	19 f0       	breq	.+6      	; 0x1b3c <malloc+0x60>
    1b36:	42 17       	cp	r20, r18
    1b38:	53 07       	cpc	r21, r19
    1b3a:	18 f4       	brcc	.+6      	; 0x1b42 <malloc+0x66>
    1b3c:	9a 01       	movw	r18, r20
    1b3e:	bd 01       	movw	r22, r26
    1b40:	ef 01       	movw	r28, r30
    1b42:	df 01       	movw	r26, r30
    1b44:	f8 01       	movw	r30, r16
    1b46:	db cf       	rjmp	.-74     	; 0x1afe <malloc+0x22>
    1b48:	21 15       	cp	r18, r1
    1b4a:	31 05       	cpc	r19, r1
    1b4c:	f9 f0       	breq	.+62     	; 0x1b8c <malloc+0xb0>
    1b4e:	28 1b       	sub	r18, r24
    1b50:	39 0b       	sbc	r19, r25
    1b52:	24 30       	cpi	r18, 0x04	; 4
    1b54:	31 05       	cpc	r19, r1
    1b56:	80 f4       	brcc	.+32     	; 0x1b78 <malloc+0x9c>
    1b58:	8a 81       	ldd	r24, Y+2	; 0x02
    1b5a:	9b 81       	ldd	r25, Y+3	; 0x03
    1b5c:	61 15       	cp	r22, r1
    1b5e:	71 05       	cpc	r23, r1
    1b60:	21 f0       	breq	.+8      	; 0x1b6a <malloc+0x8e>
    1b62:	fb 01       	movw	r30, r22
    1b64:	93 83       	std	Z+3, r25	; 0x03
    1b66:	82 83       	std	Z+2, r24	; 0x02
    1b68:	04 c0       	rjmp	.+8      	; 0x1b72 <malloc+0x96>
    1b6a:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <__flp+0x1>
    1b6e:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <__flp>
    1b72:	fe 01       	movw	r30, r28
    1b74:	32 96       	adiw	r30, 0x02	; 2
    1b76:	44 c0       	rjmp	.+136    	; 0x1c00 <malloc+0x124>
    1b78:	fe 01       	movw	r30, r28
    1b7a:	e2 0f       	add	r30, r18
    1b7c:	f3 1f       	adc	r31, r19
    1b7e:	81 93       	st	Z+, r24
    1b80:	91 93       	st	Z+, r25
    1b82:	22 50       	subi	r18, 0x02	; 2
    1b84:	31 09       	sbc	r19, r1
    1b86:	39 83       	std	Y+1, r19	; 0x01
    1b88:	28 83       	st	Y, r18
    1b8a:	3a c0       	rjmp	.+116    	; 0x1c00 <malloc+0x124>
    1b8c:	20 91 a4 01 	lds	r18, 0x01A4	; 0x8001a4 <__brkval>
    1b90:	30 91 a5 01 	lds	r19, 0x01A5	; 0x8001a5 <__brkval+0x1>
    1b94:	23 2b       	or	r18, r19
    1b96:	41 f4       	brne	.+16     	; 0x1ba8 <malloc+0xcc>
    1b98:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    1b9c:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    1ba0:	30 93 a5 01 	sts	0x01A5, r19	; 0x8001a5 <__brkval+0x1>
    1ba4:	20 93 a4 01 	sts	0x01A4, r18	; 0x8001a4 <__brkval>
    1ba8:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    1bac:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    1bb0:	21 15       	cp	r18, r1
    1bb2:	31 05       	cpc	r19, r1
    1bb4:	41 f4       	brne	.+16     	; 0x1bc6 <malloc+0xea>
    1bb6:	2d b7       	in	r18, 0x3d	; 61
    1bb8:	3e b7       	in	r19, 0x3e	; 62
    1bba:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    1bbe:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    1bc2:	24 1b       	sub	r18, r20
    1bc4:	35 0b       	sbc	r19, r21
    1bc6:	e0 91 a4 01 	lds	r30, 0x01A4	; 0x8001a4 <__brkval>
    1bca:	f0 91 a5 01 	lds	r31, 0x01A5	; 0x8001a5 <__brkval+0x1>
    1bce:	e2 17       	cp	r30, r18
    1bd0:	f3 07       	cpc	r31, r19
    1bd2:	a0 f4       	brcc	.+40     	; 0x1bfc <malloc+0x120>
    1bd4:	2e 1b       	sub	r18, r30
    1bd6:	3f 0b       	sbc	r19, r31
    1bd8:	28 17       	cp	r18, r24
    1bda:	39 07       	cpc	r19, r25
    1bdc:	78 f0       	brcs	.+30     	; 0x1bfc <malloc+0x120>
    1bde:	ac 01       	movw	r20, r24
    1be0:	4e 5f       	subi	r20, 0xFE	; 254
    1be2:	5f 4f       	sbci	r21, 0xFF	; 255
    1be4:	24 17       	cp	r18, r20
    1be6:	35 07       	cpc	r19, r21
    1be8:	48 f0       	brcs	.+18     	; 0x1bfc <malloc+0x120>
    1bea:	4e 0f       	add	r20, r30
    1bec:	5f 1f       	adc	r21, r31
    1bee:	50 93 a5 01 	sts	0x01A5, r21	; 0x8001a5 <__brkval+0x1>
    1bf2:	40 93 a4 01 	sts	0x01A4, r20	; 0x8001a4 <__brkval>
    1bf6:	81 93       	st	Z+, r24
    1bf8:	91 93       	st	Z+, r25
    1bfa:	02 c0       	rjmp	.+4      	; 0x1c00 <malloc+0x124>
    1bfc:	e0 e0       	ldi	r30, 0x00	; 0
    1bfe:	f0 e0       	ldi	r31, 0x00	; 0
    1c00:	cf 01       	movw	r24, r30
    1c02:	df 91       	pop	r29
    1c04:	cf 91       	pop	r28
    1c06:	1f 91       	pop	r17
    1c08:	0f 91       	pop	r16
    1c0a:	08 95       	ret

00001c0c <free>:
    1c0c:	cf 93       	push	r28
    1c0e:	df 93       	push	r29
    1c10:	00 97       	sbiw	r24, 0x00	; 0
    1c12:	09 f4       	brne	.+2      	; 0x1c16 <free+0xa>
    1c14:	81 c0       	rjmp	.+258    	; 0x1d18 <free+0x10c>
    1c16:	fc 01       	movw	r30, r24
    1c18:	32 97       	sbiw	r30, 0x02	; 2
    1c1a:	13 82       	std	Z+3, r1	; 0x03
    1c1c:	12 82       	std	Z+2, r1	; 0x02
    1c1e:	a0 91 a6 01 	lds	r26, 0x01A6	; 0x8001a6 <__flp>
    1c22:	b0 91 a7 01 	lds	r27, 0x01A7	; 0x8001a7 <__flp+0x1>
    1c26:	10 97       	sbiw	r26, 0x00	; 0
    1c28:	81 f4       	brne	.+32     	; 0x1c4a <free+0x3e>
    1c2a:	20 81       	ld	r18, Z
    1c2c:	31 81       	ldd	r19, Z+1	; 0x01
    1c2e:	82 0f       	add	r24, r18
    1c30:	93 1f       	adc	r25, r19
    1c32:	20 91 a4 01 	lds	r18, 0x01A4	; 0x8001a4 <__brkval>
    1c36:	30 91 a5 01 	lds	r19, 0x01A5	; 0x8001a5 <__brkval+0x1>
    1c3a:	28 17       	cp	r18, r24
    1c3c:	39 07       	cpc	r19, r25
    1c3e:	51 f5       	brne	.+84     	; 0x1c94 <free+0x88>
    1c40:	f0 93 a5 01 	sts	0x01A5, r31	; 0x8001a5 <__brkval+0x1>
    1c44:	e0 93 a4 01 	sts	0x01A4, r30	; 0x8001a4 <__brkval>
    1c48:	67 c0       	rjmp	.+206    	; 0x1d18 <free+0x10c>
    1c4a:	ed 01       	movw	r28, r26
    1c4c:	20 e0       	ldi	r18, 0x00	; 0
    1c4e:	30 e0       	ldi	r19, 0x00	; 0
    1c50:	ce 17       	cp	r28, r30
    1c52:	df 07       	cpc	r29, r31
    1c54:	40 f4       	brcc	.+16     	; 0x1c66 <free+0x5a>
    1c56:	4a 81       	ldd	r20, Y+2	; 0x02
    1c58:	5b 81       	ldd	r21, Y+3	; 0x03
    1c5a:	9e 01       	movw	r18, r28
    1c5c:	41 15       	cp	r20, r1
    1c5e:	51 05       	cpc	r21, r1
    1c60:	f1 f0       	breq	.+60     	; 0x1c9e <free+0x92>
    1c62:	ea 01       	movw	r28, r20
    1c64:	f5 cf       	rjmp	.-22     	; 0x1c50 <free+0x44>
    1c66:	d3 83       	std	Z+3, r29	; 0x03
    1c68:	c2 83       	std	Z+2, r28	; 0x02
    1c6a:	40 81       	ld	r20, Z
    1c6c:	51 81       	ldd	r21, Z+1	; 0x01
    1c6e:	84 0f       	add	r24, r20
    1c70:	95 1f       	adc	r25, r21
    1c72:	c8 17       	cp	r28, r24
    1c74:	d9 07       	cpc	r29, r25
    1c76:	59 f4       	brne	.+22     	; 0x1c8e <free+0x82>
    1c78:	88 81       	ld	r24, Y
    1c7a:	99 81       	ldd	r25, Y+1	; 0x01
    1c7c:	84 0f       	add	r24, r20
    1c7e:	95 1f       	adc	r25, r21
    1c80:	02 96       	adiw	r24, 0x02	; 2
    1c82:	91 83       	std	Z+1, r25	; 0x01
    1c84:	80 83       	st	Z, r24
    1c86:	8a 81       	ldd	r24, Y+2	; 0x02
    1c88:	9b 81       	ldd	r25, Y+3	; 0x03
    1c8a:	93 83       	std	Z+3, r25	; 0x03
    1c8c:	82 83       	std	Z+2, r24	; 0x02
    1c8e:	21 15       	cp	r18, r1
    1c90:	31 05       	cpc	r19, r1
    1c92:	29 f4       	brne	.+10     	; 0x1c9e <free+0x92>
    1c94:	f0 93 a7 01 	sts	0x01A7, r31	; 0x8001a7 <__flp+0x1>
    1c98:	e0 93 a6 01 	sts	0x01A6, r30	; 0x8001a6 <__flp>
    1c9c:	3d c0       	rjmp	.+122    	; 0x1d18 <free+0x10c>
    1c9e:	e9 01       	movw	r28, r18
    1ca0:	fb 83       	std	Y+3, r31	; 0x03
    1ca2:	ea 83       	std	Y+2, r30	; 0x02
    1ca4:	49 91       	ld	r20, Y+
    1ca6:	59 91       	ld	r21, Y+
    1ca8:	c4 0f       	add	r28, r20
    1caa:	d5 1f       	adc	r29, r21
    1cac:	ec 17       	cp	r30, r28
    1cae:	fd 07       	cpc	r31, r29
    1cb0:	61 f4       	brne	.+24     	; 0x1cca <free+0xbe>
    1cb2:	80 81       	ld	r24, Z
    1cb4:	91 81       	ldd	r25, Z+1	; 0x01
    1cb6:	84 0f       	add	r24, r20
    1cb8:	95 1f       	adc	r25, r21
    1cba:	02 96       	adiw	r24, 0x02	; 2
    1cbc:	e9 01       	movw	r28, r18
    1cbe:	99 83       	std	Y+1, r25	; 0x01
    1cc0:	88 83       	st	Y, r24
    1cc2:	82 81       	ldd	r24, Z+2	; 0x02
    1cc4:	93 81       	ldd	r25, Z+3	; 0x03
    1cc6:	9b 83       	std	Y+3, r25	; 0x03
    1cc8:	8a 83       	std	Y+2, r24	; 0x02
    1cca:	e0 e0       	ldi	r30, 0x00	; 0
    1ccc:	f0 e0       	ldi	r31, 0x00	; 0
    1cce:	12 96       	adiw	r26, 0x02	; 2
    1cd0:	8d 91       	ld	r24, X+
    1cd2:	9c 91       	ld	r25, X
    1cd4:	13 97       	sbiw	r26, 0x03	; 3
    1cd6:	00 97       	sbiw	r24, 0x00	; 0
    1cd8:	19 f0       	breq	.+6      	; 0x1ce0 <free+0xd4>
    1cda:	fd 01       	movw	r30, r26
    1cdc:	dc 01       	movw	r26, r24
    1cde:	f7 cf       	rjmp	.-18     	; 0x1cce <free+0xc2>
    1ce0:	8d 91       	ld	r24, X+
    1ce2:	9c 91       	ld	r25, X
    1ce4:	11 97       	sbiw	r26, 0x01	; 1
    1ce6:	9d 01       	movw	r18, r26
    1ce8:	2e 5f       	subi	r18, 0xFE	; 254
    1cea:	3f 4f       	sbci	r19, 0xFF	; 255
    1cec:	82 0f       	add	r24, r18
    1cee:	93 1f       	adc	r25, r19
    1cf0:	20 91 a4 01 	lds	r18, 0x01A4	; 0x8001a4 <__brkval>
    1cf4:	30 91 a5 01 	lds	r19, 0x01A5	; 0x8001a5 <__brkval+0x1>
    1cf8:	28 17       	cp	r18, r24
    1cfa:	39 07       	cpc	r19, r25
    1cfc:	69 f4       	brne	.+26     	; 0x1d18 <free+0x10c>
    1cfe:	30 97       	sbiw	r30, 0x00	; 0
    1d00:	29 f4       	brne	.+10     	; 0x1d0c <free+0x100>
    1d02:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <__flp+0x1>
    1d06:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <__flp>
    1d0a:	02 c0       	rjmp	.+4      	; 0x1d10 <free+0x104>
    1d0c:	13 82       	std	Z+3, r1	; 0x03
    1d0e:	12 82       	std	Z+2, r1	; 0x02
    1d10:	b0 93 a5 01 	sts	0x01A5, r27	; 0x8001a5 <__brkval+0x1>
    1d14:	a0 93 a4 01 	sts	0x01A4, r26	; 0x8001a4 <__brkval>
    1d18:	df 91       	pop	r29
    1d1a:	cf 91       	pop	r28
    1d1c:	08 95       	ret

00001d1e <__do_global_dtors>:
    1d1e:	10 e0       	ldi	r17, 0x00	; 0
    1d20:	c4 e4       	ldi	r28, 0x44	; 68
    1d22:	d0 e0       	ldi	r29, 0x00	; 0
    1d24:	04 c0       	rjmp	.+8      	; 0x1d2e <__do_global_dtors+0x10>
    1d26:	fe 01       	movw	r30, r28
    1d28:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__tablejump2__>
    1d2c:	21 96       	adiw	r28, 0x01	; 1
    1d2e:	c5 34       	cpi	r28, 0x45	; 69
    1d30:	d1 07       	cpc	r29, r17
    1d32:	c9 f7       	brne	.-14     	; 0x1d26 <__do_global_dtors+0x8>
    1d34:	f8 94       	cli

00001d36 <__stop_program>:
    1d36:	ff cf       	rjmp	.-2      	; 0x1d36 <__stop_program>
