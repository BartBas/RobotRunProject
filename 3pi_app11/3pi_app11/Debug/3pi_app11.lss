
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00002350  000023e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002350  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006f  0080013a  0080013a  0000241e  2**0
                  ALLOC
  3 .stab         000059c4  00000000  00000000  00002420  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000084be  00000000  00000000  00007de4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  000102a2  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000102e4  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000108  00000000  00000000  00010324  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00001a47  00000000  00000000  0001042c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000c17  00000000  00000000  00011e73  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00001153  00000000  00000000  00012a8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000002dc  00000000  00000000  00013be0  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    000007a4  00000000  00000000  00013ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00000985  00000000  00000000  00014660  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000000e0  00000000  00000000  00014fe5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__dtors_end>
       4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
       8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
       c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      24:	0c 94 e2 09 	jmp	0x13c4	; 0x13c4 <__vector_9>
      28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	a6 0a       	sbc	r10, r22

0000006a <__dtors_end>:
      6a:	11 24       	eor	r1, r1
      6c:	1f be       	out	0x3f, r1	; 63
      6e:	cf ef       	ldi	r28, 0xFF	; 255
      70:	d8 e0       	ldi	r29, 0x08	; 8
      72:	de bf       	out	0x3e, r29	; 62
      74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e0       	ldi	r26, 0x00	; 0
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	e0 e5       	ldi	r30, 0x50	; 80
      7e:	f3 e2       	ldi	r31, 0x23	; 35
      80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
      82:	05 90       	lpm	r0, Z+
      84:	0d 92       	st	X+, r0
      86:	aa 33       	cpi	r26, 0x3A	; 58
      88:	b1 07       	cpc	r27, r17
      8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
      8c:	21 e0       	ldi	r18, 0x01	; 1
      8e:	aa e3       	ldi	r26, 0x3A	; 58
      90:	b1 e0       	ldi	r27, 0x01	; 1
      92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
      94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
      96:	a9 3a       	cpi	r26, 0xA9	; 169
      98:	b2 07       	cpc	r27, r18
      9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>
      9c:	0e 94 b5 00 	call	0x16a	; 0x16a <main>
      a0:	0c 94 9b 11 	jmp	0x2336	; 0x2336 <__do_global_dtors>

000000a4 <__bad_interrupt>:
      a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <batteryPercentage>:
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
      a8:	0e 94 56 07 	call	0xeac	; 0xeac <read_battery_millivolts_3pi>

int batteryPercentage()//Should this function be in main or in display.c or something else?
{
	
	int milliVolts = read_battery_millivolts();
	int batteryPercent = milliVolts/50;
      ac:	62 e3       	ldi	r22, 0x32	; 50
      ae:	70 e0       	ldi	r23, 0x00	; 0
      b0:	0e 94 c6 0f 	call	0x1f8c	; 0x1f8c <__divmodhi4>
      b4:	cb 01       	movw	r24, r22
	return batteryPercent;
}
      b6:	08 95       	ret

000000b8 <updateDisplay>:

void updateDisplay(int orderPercent, int batteryPercent, robotStates currentState)
{
      b8:	ef 92       	push	r14
      ba:	ff 92       	push	r15
      bc:	0f 93       	push	r16
      be:	1f 93       	push	r17
      c0:	cf 93       	push	r28
      c2:	7c 01       	movw	r14, r24
      c4:	8b 01       	movw	r16, r22
      c6:	c4 2f       	mov	r28, r20
	clear();
      c8:	0e 94 5f 08 	call	0x10be	; 0x10be <clear>
	lcd_goto_xy(0,0);
      cc:	60 e0       	ldi	r22, 0x00	; 0
      ce:	80 e0       	ldi	r24, 0x00	; 0
      d0:	0e 94 e6 08 	call	0x11cc	; 0x11cc <lcd_goto_xy>
	print("Task:");
      d4:	83 e2       	ldi	r24, 0x23	; 35
      d6:	91 e0       	ldi	r25, 0x01	; 1
      d8:	0e 94 6e 08 	call	0x10dc	; 0x10dc <print>
	print_long(orderPercent);
      dc:	b7 01       	movw	r22, r14
      de:	ff 0c       	add	r15, r15
      e0:	88 0b       	sbc	r24, r24
      e2:	99 0b       	sbc	r25, r25
      e4:	0e 94 c3 08 	call	0x1186	; 0x1186 <print_long>
	print("%");
      e8:	89 e2       	ldi	r24, 0x29	; 41
      ea:	91 e0       	ldi	r25, 0x01	; 1
      ec:	0e 94 6e 08 	call	0x10dc	; 0x10dc <print>
	
	lcd_goto_xy(0,1);
      f0:	61 e0       	ldi	r22, 0x01	; 1
      f2:	80 e0       	ldi	r24, 0x00	; 0
      f4:	0e 94 e6 08 	call	0x11cc	; 0x11cc <lcd_goto_xy>
	print("Bat:");
      f8:	8b e2       	ldi	r24, 0x2B	; 43
      fa:	91 e0       	ldi	r25, 0x01	; 1
      fc:	0e 94 6e 08 	call	0x10dc	; 0x10dc <print>
	print_long(batteryPercent);
     100:	b8 01       	movw	r22, r16
     102:	11 0f       	add	r17, r17
     104:	88 0b       	sbc	r24, r24
     106:	99 0b       	sbc	r25, r25
     108:	0e 94 c3 08 	call	0x1186	; 0x1186 <print_long>
	print("%");
     10c:	89 e2       	ldi	r24, 0x29	; 41
     10e:	91 e0       	ldi	r25, 0x01	; 1
     110:	0e 94 6e 08 	call	0x10dc	; 0x10dc <print>
	switch(currentState)
     114:	c2 30       	cpi	r28, 0x02	; 2
     116:	a9 f0       	breq	.+42     	; 0x142 <updateDisplay+0x8a>
     118:	28 f4       	brcc	.+10     	; 0x124 <updateDisplay+0x6c>
     11a:	cc 23       	and	r28, r28
     11c:	41 f0       	breq	.+16     	; 0x12e <updateDisplay+0x76>
     11e:	c1 30       	cpi	r28, 0x01	; 1
     120:	59 f0       	breq	.+22     	; 0x138 <updateDisplay+0x80>
     122:	1d c0       	rjmp	.+58     	; 0x15e <updateDisplay+0xa6>
     124:	c3 30       	cpi	r28, 0x03	; 3
     126:	91 f0       	breq	.+36     	; 0x14c <updateDisplay+0x94>
     128:	c4 30       	cpi	r28, 0x04	; 4
     12a:	a9 f0       	breq	.+42     	; 0x156 <updateDisplay+0x9e>
     12c:	18 c0       	rjmp	.+48     	; 0x15e <updateDisplay+0xa6>
	{
		case manualControl:
		print("M");//M for Manual
     12e:	80 e3       	ldi	r24, 0x30	; 48
     130:	91 e0       	ldi	r25, 0x01	; 1
     132:	0e 94 6e 08 	call	0x10dc	; 0x10dc <print>
		break;
     136:	13 c0       	rjmp	.+38     	; 0x15e <updateDisplay+0xa6>
		case mazeSolver:
		print("P");//P for Parcours
     138:	82 e3       	ldi	r24, 0x32	; 50
     13a:	91 e0       	ldi	r25, 0x01	; 1
     13c:	0e 94 6e 08 	call	0x10dc	; 0x10dc <print>
		break;
     140:	0e c0       	rjmp	.+28     	; 0x15e <updateDisplay+0xa6>
		case logicsBot:
		print("O");//O for Order
     142:	84 e3       	ldi	r24, 0x34	; 52
     144:	91 e0       	ldi	r25, 0x01	; 1
     146:	0e 94 6e 08 	call	0x10dc	; 0x10dc <print>
		break;
     14a:	09 c0       	rjmp	.+18     	; 0x15e <updateDisplay+0xa6>
		case chargeMode:
		print("C");//C for Charge
     14c:	86 e3       	ldi	r24, 0x36	; 54
     14e:	91 e0       	ldi	r25, 0x01	; 1
     150:	0e 94 6e 08 	call	0x10dc	; 0x10dc <print>
		break;
     154:	04 c0       	rjmp	.+8      	; 0x15e <updateDisplay+0xa6>
		case homingMode:
		print("H");//H for Homing
     156:	88 e3       	ldi	r24, 0x38	; 56
     158:	91 e0       	ldi	r25, 0x01	; 1
     15a:	0e 94 6e 08 	call	0x10dc	; 0x10dc <print>
		break;
	}
}
     15e:	cf 91       	pop	r28
     160:	1f 91       	pop	r17
     162:	0f 91       	pop	r16
     164:	ff 90       	pop	r15
     166:	ef 90       	pop	r14
     168:	08 95       	ret

0000016a <main>:
     16a:	0e 94 5f 08 	call	0x10be	; 0x10be <clear>
     16e:	80 ed       	ldi	r24, 0xD0	; 208
     170:	97 e0       	ldi	r25, 0x07	; 7
     172:	0e 94 a2 0a 	call	0x1544	; 0x1544 <pololu_3pi_init>
     176:	0e 94 c2 00 	call	0x184	; 0x184 <initialize>
     17a:	0e 94 3d 04 	call	0x87a	; 0x87a <warehouse>
     17e:	80 e0       	ldi	r24, 0x00	; 0
     180:	90 e0       	ldi	r25, 0x00	; 0
     182:	08 95       	ret

00000184 <initialize>:
		print_character(c);
	}
}

void initialize()
{
     184:	cf 93       	push	r28
     186:	df 93       	push	r29
	unsigned int counter; // used as a simple timer
	
	pololu_3pi_init(2000);
     188:	80 ed       	ldi	r24, 0xD0	; 208
     18a:	97 e0       	ldi	r25, 0x07	; 7
     18c:	0e 94 a2 0a 	call	0x1544	; 0x1544 <pololu_3pi_init>
	
	while(!button_is_pressed(BUTTON_B)){}	
     190:	80 e1       	ldi	r24, 0x10	; 16
     192:	0e 94 df 09 	call	0x13be	; 0x13be <button_is_pressed>
     196:	88 23       	and	r24, r24
     198:	d9 f3       	breq	.-10     	; 0x190 <initialize+0xc>
	wait_for_button_release(BUTTON_B);
     19a:	80 e1       	ldi	r24, 0x10	; 16
     19c:	0e 94 cb 09 	call	0x1396	; 0x1396 <wait_for_button_release>
	delay_ms(1000);
     1a0:	88 ee       	ldi	r24, 0xE8	; 232
     1a2:	93 e0       	ldi	r25, 0x03	; 3
     1a4:	0e 94 2a 0a 	call	0x1454	; 0x1454 <delay_ms>

	for(counter=0;counter<80;counter++)
     1a8:	c0 e0       	ldi	r28, 0x00	; 0
     1aa:	d0 e0       	ldi	r29, 0x00	; 0
     1ac:	19 c0       	rjmp	.+50     	; 0x1e0 <initialize+0x5c>
	{
		if(counter < 20 || counter >= 60)
     1ae:	ce 01       	movw	r24, r28
     1b0:	44 97       	sbiw	r24, 0x14	; 20
     1b2:	88 97       	sbiw	r24, 0x28	; 40
     1b4:	38 f0       	brcs	.+14     	; 0x1c4 <initialize+0x40>
		set_motors(40,-40);
     1b6:	68 ed       	ldi	r22, 0xD8	; 216
     1b8:	7f ef       	ldi	r23, 0xFF	; 255
     1ba:	88 e2       	ldi	r24, 0x28	; 40
     1bc:	90 e0       	ldi	r25, 0x00	; 0
     1be:	0e 94 9c 09 	call	0x1338	; 0x1338 <set_motors>
     1c2:	06 c0       	rjmp	.+12     	; 0x1d0 <initialize+0x4c>
		else
		set_motors(-40,40);
     1c4:	68 e2       	ldi	r22, 0x28	; 40
     1c6:	70 e0       	ldi	r23, 0x00	; 0
     1c8:	88 ed       	ldi	r24, 0xD8	; 216
     1ca:	9f ef       	ldi	r25, 0xFF	; 255
     1cc:	0e 94 9c 09 	call	0x1338	; 0x1338 <set_motors>
		calibrate_line_sensors(IR_EMITTERS_ON);
     1d0:	81 e0       	ldi	r24, 0x01	; 1
     1d2:	0e 94 66 0a 	call	0x14cc	; 0x14cc <calibrate_line_sensors>
		
		delay_ms(20);
     1d6:	84 e1       	ldi	r24, 0x14	; 20
     1d8:	90 e0       	ldi	r25, 0x00	; 0
     1da:	0e 94 2a 0a 	call	0x1454	; 0x1454 <delay_ms>
	
	while(!button_is_pressed(BUTTON_B)){}	
	wait_for_button_release(BUTTON_B);
	delay_ms(1000);

	for(counter=0;counter<80;counter++)
     1de:	21 96       	adiw	r28, 0x01	; 1
     1e0:	c0 35       	cpi	r28, 0x50	; 80
     1e2:	d1 05       	cpc	r29, r1
     1e4:	20 f3       	brcs	.-56     	; 0x1ae <initialize+0x2a>
		set_motors(-40,40);
		calibrate_line_sensors(IR_EMITTERS_ON);
		
		delay_ms(20);
	}
	set_motors(0,0);
     1e6:	60 e0       	ldi	r22, 0x00	; 0
     1e8:	70 e0       	ldi	r23, 0x00	; 0
     1ea:	80 e0       	ldi	r24, 0x00	; 0
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	0e 94 9c 09 	call	0x1338	; 0x1338 <set_motors>
	
	while(!button_is_pressed(BUTTON_B)){}
     1f2:	80 e1       	ldi	r24, 0x10	; 16
     1f4:	0e 94 df 09 	call	0x13be	; 0x13be <button_is_pressed>
     1f8:	88 23       	and	r24, r24
     1fa:	d9 f3       	breq	.-10     	; 0x1f2 <initialize+0x6e>
	wait_for_button_release(BUTTON_B);
     1fc:	80 e1       	ldi	r24, 0x10	; 16
     1fe:	0e 94 cb 09 	call	0x1396	; 0x1396 <wait_for_button_release>
	
	clear();
     202:	0e 94 5f 08 	call	0x10be	; 0x10be <clear>
}
     206:	df 91       	pop	r29
     208:	cf 91       	pop	r28
     20a:	08 95       	ret

0000020c <inch>:

void inch(){
	set_motors(50,50);
     20c:	62 e3       	ldi	r22, 0x32	; 50
     20e:	70 e0       	ldi	r23, 0x00	; 0
     210:	82 e3       	ldi	r24, 0x32	; 50
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	0e 94 9c 09 	call	0x1338	; 0x1338 <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     218:	88 ec       	ldi	r24, 0xC8	; 200
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	0e 94 2a 0a 	call	0x1454	; 0x1454 <delay_ms>
	delay(200);
	set_motors(0,0);
     220:	60 e0       	ldi	r22, 0x00	; 0
     222:	70 e0       	ldi	r23, 0x00	; 0
     224:	80 e0       	ldi	r24, 0x00	; 0
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	0e 94 9c 09 	call	0x1338	; 0x1338 <set_motors>
     22c:	08 95       	ret

0000022e <motorControl>:
		
	}
}


void motorControl(char x){
     22e:	cf 93       	push	r28
     230:	c8 2f       	mov	r28, r24
	read_line(sensors,IR_EMITTERS_ON);
     232:	61 e0       	ldi	r22, 0x01	; 1
     234:	8b e9       	ldi	r24, 0x9B	; 155
     236:	91 e0       	ldi	r25, 0x01	; 1
     238:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <read_line>
	
	if(x == 'N')
     23c:	ce 34       	cpi	r28, 0x4E	; 78
     23e:	39 f4       	brne	.+14     	; 0x24e <motorControl+0x20>
	set_motors(0,0);
     240:	60 e0       	ldi	r22, 0x00	; 0
     242:	70 e0       	ldi	r23, 0x00	; 0
     244:	80 e0       	ldi	r24, 0x00	; 0
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	0e 94 9c 09 	call	0x1338	; 0x1338 <set_motors>
     24c:	a2 c0       	rjmp	.+324    	; 0x392 <motorControl+0x164>
	
	
	else if(x == 'L'){										//turn left
     24e:	cc 34       	cpi	r28, 0x4C	; 76
     250:	09 f5       	brne	.+66     	; 0x294 <motorControl+0x66>
		set_motors(-50,50);
     252:	62 e3       	ldi	r22, 0x32	; 50
     254:	70 e0       	ldi	r23, 0x00	; 0
     256:	8e ec       	ldi	r24, 0xCE	; 206
     258:	9f ef       	ldi	r25, 0xFF	; 255
     25a:	0e 94 9c 09 	call	0x1338	; 0x1338 <set_motors>
		while (sensors[2] >=500){
     25e:	05 c0       	rjmp	.+10     	; 0x26a <motorControl+0x3c>
			read_line(sensors,IR_EMITTERS_ON);
     260:	61 e0       	ldi	r22, 0x01	; 1
     262:	8b e9       	ldi	r24, 0x9B	; 155
     264:	91 e0       	ldi	r25, 0x01	; 1
     266:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <read_line>
	set_motors(0,0);
	
	
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
     26a:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     26e:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     272:	84 3f       	cpi	r24, 0xF4	; 244
     274:	91 40       	sbci	r25, 0x01	; 1
     276:	a0 f7       	brcc	.-24     	; 0x260 <motorControl+0x32>
     278:	05 c0       	rjmp	.+10     	; 0x284 <motorControl+0x56>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     27a:	61 e0       	ldi	r22, 0x01	; 1
     27c:	8b e9       	ldi	r24, 0x9B	; 155
     27e:	91 e0       	ldi	r25, 0x01	; 1
     280:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <read_line>
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     284:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     288:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     28c:	85 3f       	cpi	r24, 0xF5	; 245
     28e:	91 40       	sbci	r25, 0x01	; 1
     290:	a0 f3       	brcs	.-24     	; 0x27a <motorControl+0x4c>
     292:	7f c0       	rjmp	.+254    	; 0x392 <motorControl+0x164>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'R'){									//turn right
     294:	c2 35       	cpi	r28, 0x52	; 82
     296:	09 f5       	brne	.+66     	; 0x2da <motorControl+0xac>
		set_motors(50,-50);
     298:	6e ec       	ldi	r22, 0xCE	; 206
     29a:	7f ef       	ldi	r23, 0xFF	; 255
     29c:	82 e3       	ldi	r24, 0x32	; 50
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	0e 94 9c 09 	call	0x1338	; 0x1338 <set_motors>
		while (sensors[2] >=500){
     2a4:	05 c0       	rjmp	.+10     	; 0x2b0 <motorControl+0x82>
			read_line(sensors,IR_EMITTERS_ON);
     2a6:	61 e0       	ldi	r22, 0x01	; 1
     2a8:	8b e9       	ldi	r24, 0x9B	; 155
     2aa:	91 e0       	ldi	r25, 0x01	; 1
     2ac:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <read_line>
		}
	}
	
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
     2b0:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     2b4:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     2b8:	84 3f       	cpi	r24, 0xF4	; 244
     2ba:	91 40       	sbci	r25, 0x01	; 1
     2bc:	a0 f7       	brcc	.-24     	; 0x2a6 <motorControl+0x78>
     2be:	05 c0       	rjmp	.+10     	; 0x2ca <motorControl+0x9c>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     2c0:	61 e0       	ldi	r22, 0x01	; 1
     2c2:	8b e9       	ldi	r24, 0x9B	; 155
     2c4:	91 e0       	ldi	r25, 0x01	; 1
     2c6:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <read_line>
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     2ca:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     2ce:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     2d2:	85 3f       	cpi	r24, 0xF5	; 245
     2d4:	91 40       	sbci	r25, 0x01	; 1
     2d6:	a0 f3       	brcs	.-24     	; 0x2c0 <motorControl+0x92>
     2d8:	5c c0       	rjmp	.+184    	; 0x392 <motorControl+0x164>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'S'){									//drive straight and corrects the adjusment of the robot if it aint straight
     2da:	c3 35       	cpi	r28, 0x53	; 83
     2dc:	11 f5       	brne	.+68     	; 0x322 <motorControl+0xf4>
		set_motors(50,50);
     2de:	62 e3       	ldi	r22, 0x32	; 50
     2e0:	70 e0       	ldi	r23, 0x00	; 0
     2e2:	82 e3       	ldi	r24, 0x32	; 50
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	0e 94 9c 09 	call	0x1338	; 0x1338 <set_motors>
		
		if (sensors[3] >=800)
     2ea:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <sensors+0x6>
     2ee:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <sensors+0x7>
     2f2:	80 32       	cpi	r24, 0x20	; 32
     2f4:	93 40       	sbci	r25, 0x03	; 3
     2f6:	30 f0       	brcs	.+12     	; 0x304 <motorControl+0xd6>
		set_motors(100,40);
     2f8:	68 e2       	ldi	r22, 0x28	; 40
     2fa:	70 e0       	ldi	r23, 0x00	; 0
     2fc:	84 e6       	ldi	r24, 0x64	; 100
     2fe:	90 e0       	ldi	r25, 0x00	; 0
     300:	0e 94 9c 09 	call	0x1338	; 0x1338 <set_motors>
		if (sensors[1] >=800)
     304:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     308:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     30c:	80 32       	cpi	r24, 0x20	; 32
     30e:	93 40       	sbci	r25, 0x03	; 3
     310:	08 f4       	brcc	.+2      	; 0x314 <motorControl+0xe6>
     312:	3f c0       	rjmp	.+126    	; 0x392 <motorControl+0x164>
		set_motors(40,100);
     314:	64 e6       	ldi	r22, 0x64	; 100
     316:	70 e0       	ldi	r23, 0x00	; 0
     318:	88 e2       	ldi	r24, 0x28	; 40
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	0e 94 9c 09 	call	0x1338	; 0x1338 <set_motors>
     320:	38 c0       	rjmp	.+112    	; 0x392 <motorControl+0x164>
	}
	
	else if(x == 'B'){									// reverse
     322:	c2 34       	cpi	r28, 0x42	; 66
     324:	09 f5       	brne	.+66     	; 0x368 <motorControl+0x13a>
		set_motors(-50,-50);
     326:	6e ec       	ldi	r22, 0xCE	; 206
     328:	7f ef       	ldi	r23, 0xFF	; 255
     32a:	8e ec       	ldi	r24, 0xCE	; 206
     32c:	9f ef       	ldi	r25, 0xFF	; 255
     32e:	0e 94 9c 09 	call	0x1338	; 0x1338 <set_motors>
		if (sensors[3] >=400)
     332:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <sensors+0x6>
     336:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <sensors+0x7>
     33a:	80 39       	cpi	r24, 0x90	; 144
     33c:	91 40       	sbci	r25, 0x01	; 1
     33e:	30 f0       	brcs	.+12     	; 0x34c <motorControl+0x11e>
		set_motors(-50,-55);
     340:	69 ec       	ldi	r22, 0xC9	; 201
     342:	7f ef       	ldi	r23, 0xFF	; 255
     344:	8e ec       	ldi	r24, 0xCE	; 206
     346:	9f ef       	ldi	r25, 0xFF	; 255
     348:	0e 94 9c 09 	call	0x1338	; 0x1338 <set_motors>
		if (sensors[1] >=400)
     34c:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     350:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     354:	80 39       	cpi	r24, 0x90	; 144
     356:	91 40       	sbci	r25, 0x01	; 1
     358:	e0 f0       	brcs	.+56     	; 0x392 <motorControl+0x164>
		set_motors(-55,-50);
     35a:	6e ec       	ldi	r22, 0xCE	; 206
     35c:	7f ef       	ldi	r23, 0xFF	; 255
     35e:	89 ec       	ldi	r24, 0xC9	; 201
     360:	9f ef       	ldi	r25, 0xFF	; 255
     362:	0e 94 9c 09 	call	0x1338	; 0x1338 <set_motors>
     366:	15 c0       	rjmp	.+42     	; 0x392 <motorControl+0x164>
	}
	else if(x == 'T'){									// Turn around
     368:	c4 35       	cpi	r28, 0x54	; 84
     36a:	99 f4       	brne	.+38     	; 0x392 <motorControl+0x164>
		set_motors(-75,75);
     36c:	6b e4       	ldi	r22, 0x4B	; 75
     36e:	70 e0       	ldi	r23, 0x00	; 0
     370:	85 eb       	ldi	r24, 0xB5	; 181
     372:	9f ef       	ldi	r25, 0xFF	; 255
     374:	0e 94 9c 09 	call	0x1338	; 0x1338 <set_motors>
		while (sensors[2] >=500){
     378:	05 c0       	rjmp	.+10     	; 0x384 <motorControl+0x156>
			read_line(sensors,IR_EMITTERS_ON);
     37a:	61 e0       	ldi	r22, 0x01	; 1
     37c:	8b e9       	ldi	r24, 0x9B	; 155
     37e:	91 e0       	ldi	r25, 0x01	; 1
     380:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <read_line>
		if (sensors[1] >=400)
		set_motors(-55,-50);
	}
	else if(x == 'T'){									// Turn around
		set_motors(-75,75);
		while (sensors[2] >=500){
     384:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     388:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     38c:	84 3f       	cpi	r24, 0xF4	; 244
     38e:	91 40       	sbci	r25, 0x01	; 1
     390:	a0 f7       	brcc	.-24     	; 0x37a <motorControl+0x14c>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
     392:	cf 91       	pop	r28
     394:	08 95       	ret

00000396 <lineType>:
	set_motors(0,0);
}

char lineType(){																											// function that returns the type of junction it detects
	while(1){																												// >= 500 = black line		<=500 = white
		read_line(sensors,IR_EMITTERS_ON);
     396:	61 e0       	ldi	r22, 0x01	; 1
     398:	8b e9       	ldi	r24, 0x9B	; 155
     39a:	91 e0       	ldi	r25, 0x01	; 1
     39c:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <read_line>
		
		if (sensors[1] >=500 && sensors[3] >= 500){																			// this checks if its a X junction or a T junction
     3a0:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     3a4:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     3a8:	84 3f       	cpi	r24, 0xF4	; 244
     3aa:	21 e0       	ldi	r18, 0x01	; 1
     3ac:	92 07       	cpc	r25, r18
     3ae:	c0 f0       	brcs	.+48     	; 0x3e0 <lineType+0x4a>
     3b0:	20 91 a1 01 	lds	r18, 0x01A1	; 0x8001a1 <sensors+0x6>
     3b4:	30 91 a2 01 	lds	r19, 0x01A2	; 0x8001a2 <sensors+0x7>
     3b8:	24 3f       	cpi	r18, 0xF4	; 244
     3ba:	31 40       	sbci	r19, 0x01	; 1
     3bc:	88 f0       	brcs	.+34     	; 0x3e0 <lineType+0x4a>
			inch();
     3be:	0e 94 06 01 	call	0x20c	; 0x20c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     3c2:	61 e0       	ldi	r22, 0x01	; 1
     3c4:	8b e9       	ldi	r24, 0x9B	; 155
     3c6:	91 e0       	ldi	r25, 0x01	; 1
     3c8:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <read_line>
			
			if (sensors[2] >=500)
     3cc:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     3d0:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     3d4:	84 3f       	cpi	r24, 0xF4	; 244
     3d6:	91 40       	sbci	r25, 0x01	; 1
     3d8:	08 f4       	brcc	.+2      	; 0x3dc <lineType+0x46>
     3da:	90 c0       	rjmp	.+288    	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
			return X_junction;
     3dc:	88 e0       	ldi	r24, 0x08	; 8
     3de:	08 95       	ret
			else
			return T_junction;
		}
		
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
     3e0:	84 3f       	cpi	r24, 0xF4	; 244
     3e2:	21 e0       	ldi	r18, 0x01	; 1
     3e4:	92 07       	cpc	r25, r18
     3e6:	00 f1       	brcs	.+64     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     3e8:	20 91 9b 01 	lds	r18, 0x019B	; 0x80019b <sensors>
     3ec:	30 91 9c 01 	lds	r19, 0x019C	; 0x80019c <sensors+0x1>
     3f0:	24 3f       	cpi	r18, 0xF4	; 244
     3f2:	31 40       	sbci	r19, 0x01	; 1
     3f4:	c8 f0       	brcs	.+50     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
			inch();
     3f6:	0e 94 06 01 	call	0x20c	; 0x20c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     3fa:	61 e0       	ldi	r22, 0x01	; 1
     3fc:	8b e9       	ldi	r24, 0x9B	; 155
     3fe:	91 e0       	ldi	r25, 0x01	; 1
     400:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <read_line>
			
			if (sensors[2] >= 500 || sensors[3] >=500)
     404:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     408:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     40c:	84 3f       	cpi	r24, 0xF4	; 244
     40e:	91 40       	sbci	r25, 0x01	; 1
     410:	08 f0       	brcs	.+2      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     412:	76 c0       	rjmp	.+236    	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
     414:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <sensors+0x6>
     418:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <sensors+0x7>
     41c:	84 3f       	cpi	r24, 0xF4	; 244
     41e:	91 40       	sbci	r25, 0x01	; 1
     420:	08 f4       	brcc	.+2      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
     422:	70 c0       	rjmp	.+224    	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
			return Straight_left_junction;
     424:	86 e0       	ldi	r24, 0x06	; 6
     426:	08 95       	ret
			else
			return Left_corner;
		}
		
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
     428:	40 91 a1 01 	lds	r20, 0x01A1	; 0x8001a1 <sensors+0x6>
     42c:	50 91 a2 01 	lds	r21, 0x01A2	; 0x8001a2 <sensors+0x7>
     430:	44 3f       	cpi	r20, 0xF4	; 244
     432:	61 e0       	ldi	r22, 0x01	; 1
     434:	56 07       	cpc	r21, r22
     436:	00 f1       	brcs	.+64     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
     438:	20 91 a3 01 	lds	r18, 0x01A3	; 0x8001a3 <sensors+0x8>
     43c:	30 91 a4 01 	lds	r19, 0x01A4	; 0x8001a4 <sensors+0x9>
     440:	24 3f       	cpi	r18, 0xF4	; 244
     442:	31 40       	sbci	r19, 0x01	; 1
     444:	c8 f0       	brcs	.+50     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
			inch();
     446:	0e 94 06 01 	call	0x20c	; 0x20c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     44a:	61 e0       	ldi	r22, 0x01	; 1
     44c:	8b e9       	ldi	r24, 0x9B	; 155
     44e:	91 e0       	ldi	r25, 0x01	; 1
     450:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <read_line>
			
			if (sensors[2] >= 500 || sensors[1] >=500)
     454:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     458:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     45c:	84 3f       	cpi	r24, 0xF4	; 244
     45e:	91 40       	sbci	r25, 0x01	; 1
     460:	08 f0       	brcs	.+2      	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
     462:	52 c0       	rjmp	.+164    	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
     464:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     468:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     46c:	84 3f       	cpi	r24, 0xF4	; 244
     46e:	91 40       	sbci	r25, 0x01	; 1
     470:	08 f4       	brcc	.+2      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
     472:	4c c0       	rjmp	.+152    	; 0x50c <__EEPROM_REGION_LENGTH__+0x10c>
			return Straight_right_junction;
     474:	85 e0       	ldi	r24, 0x05	; 5
     476:	08 95       	ret
			else
			return Right_corner;
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
     478:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <sensors+0x4>
     47c:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <sensors+0x5>
     480:	29 3c       	cpi	r18, 0xC9	; 201
     482:	31 05       	cpc	r19, r1
     484:	08 f4       	brcc	.+2      	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
     486:	44 c0       	rjmp	.+136    	; 0x510 <__EEPROM_REGION_LENGTH__+0x110>
			return Line_end;
		}

		
		else if (sensors[2] >=500){
     488:	24 3f       	cpi	r18, 0xF4	; 244
     48a:	61 e0       	ldi	r22, 0x01	; 1
     48c:	36 07       	cpc	r19, r22
     48e:	08 f4       	brcc	.+2      	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
     490:	82 cf       	rjmp	.-252    	; 0x396 <lineType>
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
     492:	24 3f       	cpi	r18, 0xF4	; 244
     494:	61 e0       	ldi	r22, 0x01	; 1
     496:	36 07       	cpc	r19, r22
     498:	e8 f1       	brcs	.+122    	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
     49a:	45 3f       	cpi	r20, 0xF5	; 245
     49c:	51 40       	sbci	r21, 0x01	; 1
     49e:	e0 f5       	brcc	.+120    	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
     4a0:	40 91 a3 01 	lds	r20, 0x01A3	; 0x8001a3 <sensors+0x8>
     4a4:	50 91 a4 01 	lds	r21, 0x01A4	; 0x8001a4 <sensors+0x9>
     4a8:	44 3f       	cpi	r20, 0xF4	; 244
     4aa:	51 40       	sbci	r21, 0x01	; 1
     4ac:	b8 f1       	brcs	.+110    	; 0x51c <__EEPROM_REGION_LENGTH__+0x11c>
     4ae:	40 91 9b 01 	lds	r20, 0x019B	; 0x80019b <sensors>
     4b2:	50 91 9c 01 	lds	r21, 0x019C	; 0x80019c <sensors+0x1>
     4b6:	44 3f       	cpi	r20, 0xF4	; 244
     4b8:	51 40       	sbci	r21, 0x01	; 1
     4ba:	90 f1       	brcs	.+100    	; 0x520 <__EEPROM_REGION_LENGTH__+0x120>
     4bc:	85 3f       	cpi	r24, 0xF5	; 245
     4be:	91 40       	sbci	r25, 0x01	; 1
     4c0:	88 f5       	brcc	.+98     	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
     4c2:	24 3f       	cpi	r18, 0xF4	; 244
     4c4:	31 40       	sbci	r19, 0x01	; 1
     4c6:	50 f4       	brcc	.+20     	; 0x4dc <__EEPROM_REGION_LENGTH__+0xdc>
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
			}
			else
			return Straight;																						// check if its straight without any corners
     4c8:	80 e0       	ldi	r24, 0x00	; 0
     4ca:	08 95       	ret

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
					read_line(sensors,IR_EMITTERS_ON);
     4cc:	61 e0       	ldi	r22, 0x01	; 1
     4ce:	8b e9       	ldi	r24, 0x9B	; 155
     4d0:	91 e0       	ldi	r25, 0x01	; 1
     4d2:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <read_line>
					motorControl('S');
     4d6:	83 e5       	ldi	r24, 0x53	; 83
     4d8:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
		}

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
     4dc:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <sensors+0x8>
     4e0:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <sensors+0x9>
     4e4:	80 39       	cpi	r24, 0x90	; 144
     4e6:	91 40       	sbci	r25, 0x01	; 1
     4e8:	88 f7       	brcc	.-30     	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
     4ea:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <sensors>
     4ee:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <sensors+0x1>
     4f2:	80 39       	cpi	r24, 0x90	; 144
     4f4:	91 40       	sbci	r25, 0x01	; 1
     4f6:	50 f7       	brcc	.-44     	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
					read_line(sensors,IR_EMITTERS_ON);
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
     4f8:	82 e0       	ldi	r24, 0x02	; 2
     4fa:	08 95       	ret
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >=500)
			return X_junction;
			else
			return T_junction;
     4fc:	87 e0       	ldi	r24, 0x07	; 7
     4fe:	08 95       	ret
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[3] >=500)
			return Straight_left_junction;
     500:	86 e0       	ldi	r24, 0x06	; 6
     502:	08 95       	ret
			else
			return Left_corner;
     504:	83 e0       	ldi	r24, 0x03	; 3
     506:	08 95       	ret
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[1] >=500)
			return Straight_right_junction;
     508:	85 e0       	ldi	r24, 0x05	; 5
     50a:	08 95       	ret
			else
			return Right_corner;
     50c:	84 e0       	ldi	r24, 0x04	; 4
     50e:	08 95       	ret
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
			return Line_end;
     510:	81 e0       	ldi	r24, 0x01	; 1
     512:	08 95       	ret
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
			}
			else
			return Straight;																						// check if its straight without any corners
     514:	80 e0       	ldi	r24, 0x00	; 0
     516:	08 95       	ret
     518:	80 e0       	ldi	r24, 0x00	; 0
     51a:	08 95       	ret
     51c:	80 e0       	ldi	r24, 0x00	; 0
     51e:	08 95       	ret
     520:	80 e0       	ldi	r24, 0x00	; 0
     522:	08 95       	ret
     524:	80 e0       	ldi	r24, 0x00	; 0
			
		}
		
	}
}
     526:	08 95       	ret

00000528 <swap>:
     528:	fc 01       	movw	r30, r24
     52a:	20 81       	ld	r18, Z
     52c:	31 81       	ldd	r19, Z+1	; 0x01
     52e:	fb 01       	movw	r30, r22
     530:	40 81       	ld	r20, Z
     532:	51 81       	ldd	r21, Z+1	; 0x01
     534:	fc 01       	movw	r30, r24
     536:	51 83       	std	Z+1, r21	; 0x01
     538:	40 83       	st	Z, r20
     53a:	fb 01       	movw	r30, r22
     53c:	31 83       	std	Z+1, r19	; 0x01
     53e:	20 83       	st	Z, r18
     540:	08 95       	ret

00000542 <bubbleSort>:
     542:	6f 92       	push	r6
     544:	7f 92       	push	r7
     546:	8f 92       	push	r8
     548:	9f 92       	push	r9
     54a:	af 92       	push	r10
     54c:	bf 92       	push	r11
     54e:	cf 92       	push	r12
     550:	df 92       	push	r13
     552:	ef 92       	push	r14
     554:	ff 92       	push	r15
     556:	0f 93       	push	r16
     558:	1f 93       	push	r17
     55a:	cf 93       	push	r28
     55c:	df 93       	push	r29
     55e:	6c 01       	movw	r12, r24
     560:	3b 01       	movw	r6, r22
     562:	4a 01       	movw	r8, r20
     564:	a1 2c       	mov	r10, r1
     566:	b1 2c       	mov	r11, r1
     568:	30 c0       	rjmp	.+96     	; 0x5ca <bubbleSort+0x88>
     56a:	7e 01       	movw	r14, r28
     56c:	ee 0c       	add	r14, r14
     56e:	ff 1c       	adc	r15, r15
     570:	f6 01       	movw	r30, r12
     572:	ee 0d       	add	r30, r14
     574:	ff 1d       	adc	r31, r15
     576:	20 81       	ld	r18, Z
     578:	31 81       	ldd	r19, Z+1	; 0x01
     57a:	8e 01       	movw	r16, r28
     57c:	0f 5f       	subi	r16, 0xFF	; 255
     57e:	1f 4f       	sbci	r17, 0xFF	; 255
     580:	00 0f       	add	r16, r16
     582:	11 1f       	adc	r17, r17
     584:	d6 01       	movw	r26, r12
     586:	a0 0f       	add	r26, r16
     588:	b1 1f       	adc	r27, r17
     58a:	8d 91       	ld	r24, X+
     58c:	9c 91       	ld	r25, X
     58e:	11 97       	sbiw	r26, 0x01	; 1
     590:	82 17       	cp	r24, r18
     592:	93 07       	cpc	r25, r19
     594:	64 f4       	brge	.+24     	; 0x5ae <bubbleSort+0x6c>
     596:	bd 01       	movw	r22, r26
     598:	cf 01       	movw	r24, r30
     59a:	0e 94 94 02 	call	0x528	; 0x528 <swap>
     59e:	b3 01       	movw	r22, r6
     5a0:	60 0f       	add	r22, r16
     5a2:	71 1f       	adc	r23, r17
     5a4:	c3 01       	movw	r24, r6
     5a6:	8e 0d       	add	r24, r14
     5a8:	9f 1d       	adc	r25, r15
     5aa:	0e 94 94 02 	call	0x528	; 0x528 <swap>
     5ae:	21 96       	adiw	r28, 0x01	; 1
     5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <bubbleSort+0x74>
     5b2:	c0 e0       	ldi	r28, 0x00	; 0
     5b4:	d0 e0       	ldi	r29, 0x00	; 0
     5b6:	c4 01       	movw	r24, r8
     5b8:	8a 19       	sub	r24, r10
     5ba:	9b 09       	sbc	r25, r11
     5bc:	01 97       	sbiw	r24, 0x01	; 1
     5be:	c8 17       	cp	r28, r24
     5c0:	d9 07       	cpc	r29, r25
     5c2:	9c f2       	brlt	.-90     	; 0x56a <bubbleSort+0x28>
     5c4:	8f ef       	ldi	r24, 0xFF	; 255
     5c6:	a8 1a       	sub	r10, r24
     5c8:	b8 0a       	sbc	r11, r24
     5ca:	c4 01       	movw	r24, r8
     5cc:	01 97       	sbiw	r24, 0x01	; 1
     5ce:	a8 16       	cp	r10, r24
     5d0:	b9 06       	cpc	r11, r25
     5d2:	7c f3       	brlt	.-34     	; 0x5b2 <bubbleSort+0x70>
     5d4:	df 91       	pop	r29
     5d6:	cf 91       	pop	r28
     5d8:	1f 91       	pop	r17
     5da:	0f 91       	pop	r16
     5dc:	ff 90       	pop	r15
     5de:	ef 90       	pop	r14
     5e0:	df 90       	pop	r13
     5e2:	cf 90       	pop	r12
     5e4:	bf 90       	pop	r11
     5e6:	af 90       	pop	r10
     5e8:	9f 90       	pop	r9
     5ea:	8f 90       	pop	r8
     5ec:	7f 90       	pop	r7
     5ee:	6f 90       	pop	r6
     5f0:	08 95       	ret

000005f2 <drive>:
     5f2:	ef 92       	push	r14
     5f4:	ff 92       	push	r15
     5f6:	0f 93       	push	r16
     5f8:	1f 93       	push	r17
     5fa:	cf 93       	push	r28
     5fc:	df 93       	push	r29
     5fe:	7c 01       	movw	r14, r24
     600:	83 e5       	ldi	r24, 0x53	; 83
     602:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     606:	00 e0       	ldi	r16, 0x00	; 0
     608:	10 e0       	ldi	r17, 0x00	; 0
     60a:	c1 e0       	ldi	r28, 0x01	; 1
     60c:	d0 e0       	ldi	r29, 0x00	; 0
     60e:	1a c0       	rjmp	.+52     	; 0x644 <drive+0x52>
     610:	0e 94 cb 01 	call	0x396	; 0x396 <lineType>
     614:	99 27       	eor	r25, r25
     616:	00 97       	sbiw	r24, 0x00	; 0
     618:	21 f0       	breq	.+8      	; 0x622 <drive+0x30>
     61a:	03 97       	sbiw	r24, 0x03	; 3
     61c:	06 97       	sbiw	r24, 0x06	; 6
     61e:	28 f0       	brcs	.+10     	; 0x62a <drive+0x38>
     620:	11 c0       	rjmp	.+34     	; 0x644 <drive+0x52>
     622:	83 e5       	ldi	r24, 0x53	; 83
     624:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     628:	0d c0       	rjmp	.+26     	; 0x644 <drive+0x52>
     62a:	0f 5f       	subi	r16, 0xFF	; 255
     62c:	1f 4f       	sbci	r17, 0xFF	; 255
     62e:	83 e5       	ldi	r24, 0x53	; 83
     630:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     634:	0e 15       	cp	r16, r14
     636:	1f 05       	cpc	r17, r15
     638:	29 f4       	brne	.+10     	; 0x644 <drive+0x52>
     63a:	8e e4       	ldi	r24, 0x4E	; 78
     63c:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     640:	c0 e0       	ldi	r28, 0x00	; 0
     642:	d0 e0       	ldi	r29, 0x00	; 0
     644:	20 97       	sbiw	r28, 0x00	; 0
     646:	21 f7       	brne	.-56     	; 0x610 <drive+0x1e>
     648:	df 91       	pop	r29
     64a:	cf 91       	pop	r28
     64c:	1f 91       	pop	r17
     64e:	0f 91       	pop	r16
     650:	ff 90       	pop	r15
     652:	ef 90       	pop	r14
     654:	08 95       	ret

00000656 <waitForTurn>:
     656:	cf 93       	push	r28
     658:	8f e0       	ldi	r24, 0x0F	; 15
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	0e 94 2a 0a 	call	0x1454	; 0x1454 <delay_ms>
     660:	03 c0       	rjmp	.+6      	; 0x668 <waitForTurn+0x12>
     662:	0e 94 cb 01 	call	0x396	; 0x396 <lineType>
     666:	c8 2f       	mov	r28, r24
     668:	c1 11       	cpse	r28, r1
     66a:	fb cf       	rjmp	.-10     	; 0x662 <waitForTurn+0xc>
     66c:	8e e4       	ldi	r24, 0x4E	; 78
     66e:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     672:	cf 91       	pop	r28
     674:	08 95       	ret

00000676 <turnRobot>:
     676:	ef 92       	push	r14
     678:	ff 92       	push	r15
     67a:	0f 93       	push	r16
     67c:	1f 93       	push	r17
     67e:	cf 93       	push	r28
     680:	c8 2f       	mov	r28, r24
     682:	8b 01       	movw	r16, r22
     684:	ee 24       	eor	r14, r14
     686:	e3 94       	inc	r14
     688:	f1 2c       	mov	r15, r1
     68a:	9a c0       	rjmp	.+308    	; 0x7c0 <turnRobot+0x14a>
     68c:	f8 01       	movw	r30, r16
     68e:	84 81       	ldd	r24, Z+4	; 0x04
     690:	8e 34       	cpi	r24, 0x4E	; 78
     692:	59 f0       	breq	.+22     	; 0x6aa <turnRobot+0x34>
     694:	18 f4       	brcc	.+6      	; 0x69c <turnRobot+0x26>
     696:	85 34       	cpi	r24, 0x45	; 69
     698:	51 f1       	breq	.+84     	; 0x6ee <turnRobot+0x78>
     69a:	8c c0       	rjmp	.+280    	; 0x7b4 <turnRobot+0x13e>
     69c:	83 35       	cpi	r24, 0x53	; 83
     69e:	09 f4       	brne	.+2      	; 0x6a2 <turnRobot+0x2c>
     6a0:	48 c0       	rjmp	.+144    	; 0x732 <turnRobot+0xbc>
     6a2:	87 35       	cpi	r24, 0x57	; 87
     6a4:	09 f4       	brne	.+2      	; 0x6a8 <turnRobot+0x32>
     6a6:	66 c0       	rjmp	.+204    	; 0x774 <turnRobot+0xfe>
     6a8:	85 c0       	rjmp	.+266    	; 0x7b4 <turnRobot+0x13e>
     6aa:	c5 34       	cpi	r28, 0x45	; 69
     6ac:	49 f4       	brne	.+18     	; 0x6c0 <turnRobot+0x4a>
     6ae:	82 e5       	ldi	r24, 0x52	; 82
     6b0:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     6b4:	0e 94 2b 03 	call	0x656	; 0x656 <waitForTurn>
     6b8:	85 e4       	ldi	r24, 0x45	; 69
     6ba:	f8 01       	movw	r30, r16
     6bc:	84 83       	std	Z+4, r24	; 0x04
     6be:	7a c0       	rjmp	.+244    	; 0x7b4 <turnRobot+0x13e>
     6c0:	c7 35       	cpi	r28, 0x57	; 87
     6c2:	49 f4       	brne	.+18     	; 0x6d6 <turnRobot+0x60>
     6c4:	8c e4       	ldi	r24, 0x4C	; 76
     6c6:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     6ca:	0e 94 2b 03 	call	0x656	; 0x656 <waitForTurn>
     6ce:	87 e5       	ldi	r24, 0x57	; 87
     6d0:	f8 01       	movw	r30, r16
     6d2:	84 83       	std	Z+4, r24	; 0x04
     6d4:	6f c0       	rjmp	.+222    	; 0x7b4 <turnRobot+0x13e>
     6d6:	c3 35       	cpi	r28, 0x53	; 83
     6d8:	09 f0       	breq	.+2      	; 0x6dc <turnRobot+0x66>
     6da:	6c c0       	rjmp	.+216    	; 0x7b4 <turnRobot+0x13e>
     6dc:	84 e5       	ldi	r24, 0x54	; 84
     6de:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     6e2:	0e 94 2b 03 	call	0x656	; 0x656 <waitForTurn>
     6e6:	83 e5       	ldi	r24, 0x53	; 83
     6e8:	f8 01       	movw	r30, r16
     6ea:	84 83       	std	Z+4, r24	; 0x04
     6ec:	63 c0       	rjmp	.+198    	; 0x7b4 <turnRobot+0x13e>
     6ee:	c3 35       	cpi	r28, 0x53	; 83
     6f0:	49 f4       	brne	.+18     	; 0x704 <turnRobot+0x8e>
     6f2:	82 e5       	ldi	r24, 0x52	; 82
     6f4:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     6f8:	0e 94 2b 03 	call	0x656	; 0x656 <waitForTurn>
     6fc:	83 e5       	ldi	r24, 0x53	; 83
     6fe:	f8 01       	movw	r30, r16
     700:	84 83       	std	Z+4, r24	; 0x04
     702:	58 c0       	rjmp	.+176    	; 0x7b4 <turnRobot+0x13e>
     704:	c7 35       	cpi	r28, 0x57	; 87
     706:	49 f4       	brne	.+18     	; 0x71a <turnRobot+0xa4>
     708:	8c e4       	ldi	r24, 0x4C	; 76
     70a:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     70e:	0e 94 2b 03 	call	0x656	; 0x656 <waitForTurn>
     712:	87 e5       	ldi	r24, 0x57	; 87
     714:	f8 01       	movw	r30, r16
     716:	84 83       	std	Z+4, r24	; 0x04
     718:	4d c0       	rjmp	.+154    	; 0x7b4 <turnRobot+0x13e>
     71a:	c3 35       	cpi	r28, 0x53	; 83
     71c:	09 f0       	breq	.+2      	; 0x720 <turnRobot+0xaa>
     71e:	4a c0       	rjmp	.+148    	; 0x7b4 <turnRobot+0x13e>
     720:	84 e5       	ldi	r24, 0x54	; 84
     722:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     726:	0e 94 2b 03 	call	0x656	; 0x656 <waitForTurn>
     72a:	83 e5       	ldi	r24, 0x53	; 83
     72c:	f8 01       	movw	r30, r16
     72e:	84 83       	std	Z+4, r24	; 0x04
     730:	41 c0       	rjmp	.+130    	; 0x7b4 <turnRobot+0x13e>
     732:	c7 35       	cpi	r28, 0x57	; 87
     734:	49 f4       	brne	.+18     	; 0x748 <turnRobot+0xd2>
     736:	82 e5       	ldi	r24, 0x52	; 82
     738:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     73c:	0e 94 2b 03 	call	0x656	; 0x656 <waitForTurn>
     740:	87 e5       	ldi	r24, 0x57	; 87
     742:	f8 01       	movw	r30, r16
     744:	84 83       	std	Z+4, r24	; 0x04
     746:	36 c0       	rjmp	.+108    	; 0x7b4 <turnRobot+0x13e>
     748:	c5 34       	cpi	r28, 0x45	; 69
     74a:	49 f4       	brne	.+18     	; 0x75e <turnRobot+0xe8>
     74c:	8c e4       	ldi	r24, 0x4C	; 76
     74e:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     752:	0e 94 2b 03 	call	0x656	; 0x656 <waitForTurn>
     756:	85 e4       	ldi	r24, 0x45	; 69
     758:	f8 01       	movw	r30, r16
     75a:	84 83       	std	Z+4, r24	; 0x04
     75c:	2b c0       	rjmp	.+86     	; 0x7b4 <turnRobot+0x13e>
     75e:	ce 34       	cpi	r28, 0x4E	; 78
     760:	49 f5       	brne	.+82     	; 0x7b4 <turnRobot+0x13e>
     762:	84 e5       	ldi	r24, 0x54	; 84
     764:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     768:	0e 94 2b 03 	call	0x656	; 0x656 <waitForTurn>
     76c:	8e e4       	ldi	r24, 0x4E	; 78
     76e:	f8 01       	movw	r30, r16
     770:	84 83       	std	Z+4, r24	; 0x04
     772:	20 c0       	rjmp	.+64     	; 0x7b4 <turnRobot+0x13e>
     774:	ce 34       	cpi	r28, 0x4E	; 78
     776:	49 f4       	brne	.+18     	; 0x78a <turnRobot+0x114>
     778:	82 e5       	ldi	r24, 0x52	; 82
     77a:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     77e:	0e 94 2b 03 	call	0x656	; 0x656 <waitForTurn>
     782:	8e e4       	ldi	r24, 0x4E	; 78
     784:	f8 01       	movw	r30, r16
     786:	84 83       	std	Z+4, r24	; 0x04
     788:	15 c0       	rjmp	.+42     	; 0x7b4 <turnRobot+0x13e>
     78a:	c3 35       	cpi	r28, 0x53	; 83
     78c:	49 f4       	brne	.+18     	; 0x7a0 <turnRobot+0x12a>
     78e:	8c e4       	ldi	r24, 0x4C	; 76
     790:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     794:	0e 94 2b 03 	call	0x656	; 0x656 <waitForTurn>
     798:	83 e5       	ldi	r24, 0x53	; 83
     79a:	f8 01       	movw	r30, r16
     79c:	84 83       	std	Z+4, r24	; 0x04
     79e:	0a c0       	rjmp	.+20     	; 0x7b4 <turnRobot+0x13e>
     7a0:	c5 34       	cpi	r28, 0x45	; 69
     7a2:	41 f4       	brne	.+16     	; 0x7b4 <turnRobot+0x13e>
     7a4:	84 e5       	ldi	r24, 0x54	; 84
     7a6:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     7aa:	0e 94 2b 03 	call	0x656	; 0x656 <waitForTurn>
     7ae:	85 e4       	ldi	r24, 0x45	; 69
     7b0:	f8 01       	movw	r30, r16
     7b2:	84 83       	std	Z+4, r24	; 0x04
     7b4:	f8 01       	movw	r30, r16
     7b6:	84 81       	ldd	r24, Z+4	; 0x04
     7b8:	c8 13       	cpse	r28, r24
     7ba:	02 c0       	rjmp	.+4      	; 0x7c0 <turnRobot+0x14a>
     7bc:	e1 2c       	mov	r14, r1
     7be:	f1 2c       	mov	r15, r1
     7c0:	f1 e0       	ldi	r31, 0x01	; 1
     7c2:	ef 16       	cp	r14, r31
     7c4:	f1 04       	cpc	r15, r1
     7c6:	09 f4       	brne	.+2      	; 0x7ca <turnRobot+0x154>
     7c8:	61 cf       	rjmp	.-318    	; 0x68c <turnRobot+0x16>
     7ca:	cf 91       	pop	r28
     7cc:	1f 91       	pop	r17
     7ce:	0f 91       	pop	r16
     7d0:	ff 90       	pop	r15
     7d2:	ef 90       	pop	r14
     7d4:	08 95       	ret

000007d6 <moveX>:
     7d6:	0f 93       	push	r16
     7d8:	1f 93       	push	r17
     7da:	cf 93       	push	r28
     7dc:	df 93       	push	r29
     7de:	fb 01       	movw	r30, r22
     7e0:	20 81       	ld	r18, Z
     7e2:	31 81       	ldd	r19, Z+1	; 0x01
     7e4:	28 17       	cp	r18, r24
     7e6:	39 07       	cpc	r19, r25
     7e8:	d1 f0       	breq	.+52     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7ea:	8b 01       	movw	r16, r22
     7ec:	ec 01       	movw	r28, r24
     7ee:	28 17       	cp	r18, r24
     7f0:	39 07       	cpc	r19, r25
     7f2:	5c f4       	brge	.+22     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     7f4:	87 e5       	ldi	r24, 0x57	; 87
     7f6:	0e 94 3b 03 	call	0x676	; 0x676 <turnRobot>
     7fa:	f8 01       	movw	r30, r16
     7fc:	80 81       	ld	r24, Z
     7fe:	91 81       	ldd	r25, Z+1	; 0x01
     800:	9e 01       	movw	r18, r28
     802:	28 1b       	sub	r18, r24
     804:	39 0b       	sbc	r19, r25
     806:	c9 01       	movw	r24, r18
     808:	08 c0       	rjmp	.+16     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
     80a:	85 e4       	ldi	r24, 0x45	; 69
     80c:	0e 94 3b 03 	call	0x676	; 0x676 <turnRobot>
     810:	f8 01       	movw	r30, r16
     812:	80 81       	ld	r24, Z
     814:	91 81       	ldd	r25, Z+1	; 0x01
     816:	8c 1b       	sub	r24, r28
     818:	9d 0b       	sbc	r25, r29
     81a:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <drive>
     81e:	df 91       	pop	r29
     820:	cf 91       	pop	r28
     822:	1f 91       	pop	r17
     824:	0f 91       	pop	r16
     826:	08 95       	ret

00000828 <moveY>:
     828:	0f 93       	push	r16
     82a:	1f 93       	push	r17
     82c:	cf 93       	push	r28
     82e:	df 93       	push	r29
     830:	fb 01       	movw	r30, r22
     832:	22 81       	ldd	r18, Z+2	; 0x02
     834:	33 81       	ldd	r19, Z+3	; 0x03
     836:	28 17       	cp	r18, r24
     838:	39 07       	cpc	r19, r25
     83a:	d1 f0       	breq	.+52     	; 0x870 <moveY+0x48>
     83c:	8b 01       	movw	r16, r22
     83e:	ec 01       	movw	r28, r24
     840:	28 17       	cp	r18, r24
     842:	39 07       	cpc	r19, r25
     844:	5c f4       	brge	.+22     	; 0x85c <moveY+0x34>
     846:	8e e4       	ldi	r24, 0x4E	; 78
     848:	0e 94 3b 03 	call	0x676	; 0x676 <turnRobot>
     84c:	f8 01       	movw	r30, r16
     84e:	82 81       	ldd	r24, Z+2	; 0x02
     850:	93 81       	ldd	r25, Z+3	; 0x03
     852:	9e 01       	movw	r18, r28
     854:	28 1b       	sub	r18, r24
     856:	39 0b       	sbc	r19, r25
     858:	c9 01       	movw	r24, r18
     85a:	08 c0       	rjmp	.+16     	; 0x86c <moveY+0x44>
     85c:	83 e5       	ldi	r24, 0x53	; 83
     85e:	0e 94 3b 03 	call	0x676	; 0x676 <turnRobot>
     862:	f8 01       	movw	r30, r16
     864:	82 81       	ldd	r24, Z+2	; 0x02
     866:	93 81       	ldd	r25, Z+3	; 0x03
     868:	8c 1b       	sub	r24, r28
     86a:	9d 0b       	sbc	r25, r29
     86c:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <drive>
     870:	df 91       	pop	r29
     872:	cf 91       	pop	r28
     874:	1f 91       	pop	r17
     876:	0f 91       	pop	r16
     878:	08 95       	ret

0000087a <warehouse>:
     87a:	8f 92       	push	r8
     87c:	9f 92       	push	r9
     87e:	af 92       	push	r10
     880:	bf 92       	push	r11
     882:	ef 92       	push	r14
     884:	ff 92       	push	r15
     886:	0f 93       	push	r16
     888:	1f 93       	push	r17
     88a:	cf 93       	push	r28
     88c:	df 93       	push	r29
     88e:	cd b7       	in	r28, 0x3d	; 61
     890:	de b7       	in	r29, 0x3e	; 62
     892:	69 97       	sbiw	r28, 0x19	; 25
     894:	0f b6       	in	r0, 0x3f	; 63
     896:	f8 94       	cli
     898:	de bf       	out	0x3e, r29	; 62
     89a:	0f be       	out	0x3f, r0	; 63
     89c:	cd bf       	out	0x3d, r28	; 61
     89e:	87 e5       	ldi	r24, 0x57	; 87
     8a0:	8d 83       	std	Y+5, r24	; 0x05
     8a2:	8f ef       	ldi	r24, 0xFF	; 255
     8a4:	9f ef       	ldi	r25, 0xFF	; 255
     8a6:	9a 83       	std	Y+2, r25	; 0x02
     8a8:	89 83       	std	Y+1, r24	; 0x01
     8aa:	1c 82       	std	Y+4, r1	; 0x04
     8ac:	1b 82       	std	Y+3, r1	; 0x03
     8ae:	8a e0       	ldi	r24, 0x0A	; 10
     8b0:	ea e0       	ldi	r30, 0x0A	; 10
     8b2:	f1 e0       	ldi	r31, 0x01	; 1
     8b4:	de 01       	movw	r26, r28
     8b6:	16 96       	adiw	r26, 0x06	; 6
     8b8:	01 90       	ld	r0, Z+
     8ba:	0d 92       	st	X+, r0
     8bc:	8a 95       	dec	r24
     8be:	e1 f7       	brne	.-8      	; 0x8b8 <warehouse+0x3e>
     8c0:	8a e0       	ldi	r24, 0x0A	; 10
     8c2:	e4 e1       	ldi	r30, 0x14	; 20
     8c4:	f1 e0       	ldi	r31, 0x01	; 1
     8c6:	de 01       	movw	r26, r28
     8c8:	50 96       	adiw	r26, 0x10	; 16
     8ca:	01 90       	ld	r0, Z+
     8cc:	0d 92       	st	X+, r0
     8ce:	8a 95       	dec	r24
     8d0:	e1 f7       	brne	.-8      	; 0x8ca <warehouse+0x50>
     8d2:	45 e0       	ldi	r20, 0x05	; 5
     8d4:	50 e0       	ldi	r21, 0x00	; 0
     8d6:	be 01       	movw	r22, r28
     8d8:	60 5f       	subi	r22, 0xF0	; 240
     8da:	7f 4f       	sbci	r23, 0xFF	; 255
     8dc:	ce 01       	movw	r24, r28
     8de:	06 96       	adiw	r24, 0x06	; 6
     8e0:	0e 94 a1 02 	call	0x542	; 0x542 <bubbleSort>
     8e4:	e1 2c       	mov	r14, r1
     8e6:	f1 2c       	mov	r15, r1
     8e8:	49 c0       	rjmp	.+146    	; 0x97c <__stack+0x7d>
     8ea:	b7 01       	movw	r22, r14
     8ec:	0f 2c       	mov	r0, r15
     8ee:	00 0c       	add	r0, r0
     8f0:	88 0b       	sbc	r24, r24
     8f2:	99 0b       	sbc	r25, r25
     8f4:	0e 94 8c 05 	call	0xb18	; 0xb18 <__floatsisf>
     8f8:	4b 01       	movw	r8, r22
     8fa:	5c 01       	movw	r10, r24
     8fc:	87 01       	movw	r16, r14
     8fe:	00 0f       	add	r16, r16
     900:	11 1f       	adc	r17, r17
     902:	81 e0       	ldi	r24, 0x01	; 1
     904:	90 e0       	ldi	r25, 0x00	; 0
     906:	8c 0f       	add	r24, r28
     908:	9d 1f       	adc	r25, r29
     90a:	08 0f       	add	r16, r24
     90c:	19 1f       	adc	r17, r25
     90e:	bc 01       	movw	r22, r24
     910:	f8 01       	movw	r30, r16
     912:	85 81       	ldd	r24, Z+5	; 0x05
     914:	96 81       	ldd	r25, Z+6	; 0x06
     916:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <moveX>
     91a:	f8 01       	movw	r30, r16
     91c:	85 81       	ldd	r24, Z+5	; 0x05
     91e:	96 81       	ldd	r25, Z+6	; 0x06
     920:	9a 83       	std	Y+2, r25	; 0x02
     922:	89 83       	std	Y+1, r24	; 0x01
     924:	be 01       	movw	r22, r28
     926:	6f 5f       	subi	r22, 0xFF	; 255
     928:	7f 4f       	sbci	r23, 0xFF	; 255
     92a:	87 85       	ldd	r24, Z+15	; 0x0f
     92c:	90 89       	ldd	r25, Z+16	; 0x10
     92e:	0e 94 14 04 	call	0x828	; 0x828 <moveY>
     932:	f8 01       	movw	r30, r16
     934:	87 85       	ldd	r24, Z+15	; 0x0f
     936:	90 89       	ldd	r25, Z+16	; 0x10
     938:	9c 83       	std	Y+4, r25	; 0x04
     93a:	8b 83       	std	Y+3, r24	; 0x03
     93c:	88 ee       	ldi	r24, 0xE8	; 232
     93e:	93 e0       	ldi	r25, 0x03	; 3
     940:	0e 94 2a 0a 	call	0x1454	; 0x1454 <delay_ms>
     944:	0e 94 54 00 	call	0xa8	; 0xa8 <batteryPercentage>
     948:	8c 01       	movw	r16, r24
     94a:	20 e0       	ldi	r18, 0x00	; 0
     94c:	30 e0       	ldi	r19, 0x00	; 0
     94e:	40 ea       	ldi	r20, 0xA0	; 160
     950:	50 e4       	ldi	r21, 0x40	; 64
     952:	c5 01       	movw	r24, r10
     954:	b4 01       	movw	r22, r8
     956:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <__divsf3>
     95a:	20 e0       	ldi	r18, 0x00	; 0
     95c:	30 e0       	ldi	r19, 0x00	; 0
     95e:	48 ec       	ldi	r20, 0xC8	; 200
     960:	52 e4       	ldi	r21, 0x42	; 66
     962:	0e 94 18 06 	call	0xc30	; 0xc30 <__mulsf3>
     966:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__fixsfsi>
     96a:	dc 01       	movw	r26, r24
     96c:	cb 01       	movw	r24, r22
     96e:	42 e0       	ldi	r20, 0x02	; 2
     970:	b8 01       	movw	r22, r16
     972:	0e 94 5c 00 	call	0xb8	; 0xb8 <updateDisplay>
     976:	ff ef       	ldi	r31, 0xFF	; 255
     978:	ef 1a       	sub	r14, r31
     97a:	ff 0a       	sbc	r15, r31
     97c:	85 e0       	ldi	r24, 0x05	; 5
     97e:	e8 16       	cp	r14, r24
     980:	f1 04       	cpc	r15, r1
     982:	0c f4       	brge	.+2      	; 0x986 <__stack+0x87>
     984:	b2 cf       	rjmp	.-156    	; 0x8ea <warehouse+0x70>
     986:	be 01       	movw	r22, r28
     988:	6f 5f       	subi	r22, 0xFF	; 255
     98a:	7f 4f       	sbci	r23, 0xFF	; 255
     98c:	80 e0       	ldi	r24, 0x00	; 0
     98e:	90 e0       	ldi	r25, 0x00	; 0
     990:	0e 94 14 04 	call	0x828	; 0x828 <moveY>
     994:	be 01       	movw	r22, r28
     996:	6f 5f       	subi	r22, 0xFF	; 255
     998:	7f 4f       	sbci	r23, 0xFF	; 255
     99a:	80 e0       	ldi	r24, 0x00	; 0
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <moveX>
     9a2:	69 96       	adiw	r28, 0x19	; 25
     9a4:	0f b6       	in	r0, 0x3f	; 63
     9a6:	f8 94       	cli
     9a8:	de bf       	out	0x3e, r29	; 62
     9aa:	0f be       	out	0x3f, r0	; 63
     9ac:	cd bf       	out	0x3d, r28	; 61
     9ae:	df 91       	pop	r29
     9b0:	cf 91       	pop	r28
     9b2:	1f 91       	pop	r17
     9b4:	0f 91       	pop	r16
     9b6:	ff 90       	pop	r15
     9b8:	ef 90       	pop	r14
     9ba:	bf 90       	pop	r11
     9bc:	af 90       	pop	r10
     9be:	9f 90       	pop	r9
     9c0:	8f 90       	pop	r8
     9c2:	08 95       	ret

000009c4 <__divsf3>:
     9c4:	0e 94 f6 04 	call	0x9ec	; 0x9ec <__divsf3x>
     9c8:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__fp_round>
     9cc:	0e 94 d7 05 	call	0xbae	; 0xbae <__fp_pscB>
     9d0:	58 f0       	brcs	.+22     	; 0x9e8 <__divsf3+0x24>
     9d2:	0e 94 d0 05 	call	0xba0	; 0xba0 <__fp_pscA>
     9d6:	40 f0       	brcs	.+16     	; 0x9e8 <__divsf3+0x24>
     9d8:	29 f4       	brne	.+10     	; 0x9e4 <__divsf3+0x20>
     9da:	5f 3f       	cpi	r21, 0xFF	; 255
     9dc:	29 f0       	breq	.+10     	; 0x9e8 <__divsf3+0x24>
     9de:	0c 94 c7 05 	jmp	0xb8e	; 0xb8e <__fp_inf>
     9e2:	51 11       	cpse	r21, r1
     9e4:	0c 94 12 06 	jmp	0xc24	; 0xc24 <__fp_szero>
     9e8:	0c 94 cd 05 	jmp	0xb9a	; 0xb9a <__fp_nan>

000009ec <__divsf3x>:
     9ec:	0e 94 ef 05 	call	0xbde	; 0xbde <__fp_split3>
     9f0:	68 f3       	brcs	.-38     	; 0x9cc <__divsf3+0x8>

000009f2 <__divsf3_pse>:
     9f2:	99 23       	and	r25, r25
     9f4:	b1 f3       	breq	.-20     	; 0x9e2 <__divsf3+0x1e>
     9f6:	55 23       	and	r21, r21
     9f8:	91 f3       	breq	.-28     	; 0x9de <__divsf3+0x1a>
     9fa:	95 1b       	sub	r25, r21
     9fc:	55 0b       	sbc	r21, r21
     9fe:	bb 27       	eor	r27, r27
     a00:	aa 27       	eor	r26, r26
     a02:	62 17       	cp	r22, r18
     a04:	73 07       	cpc	r23, r19
     a06:	84 07       	cpc	r24, r20
     a08:	38 f0       	brcs	.+14     	; 0xa18 <__divsf3_pse+0x26>
     a0a:	9f 5f       	subi	r25, 0xFF	; 255
     a0c:	5f 4f       	sbci	r21, 0xFF	; 255
     a0e:	22 0f       	add	r18, r18
     a10:	33 1f       	adc	r19, r19
     a12:	44 1f       	adc	r20, r20
     a14:	aa 1f       	adc	r26, r26
     a16:	a9 f3       	breq	.-22     	; 0xa02 <__divsf3_pse+0x10>
     a18:	35 d0       	rcall	.+106    	; 0xa84 <__divsf3_pse+0x92>
     a1a:	0e 2e       	mov	r0, r30
     a1c:	3a f0       	brmi	.+14     	; 0xa2c <__divsf3_pse+0x3a>
     a1e:	e0 e8       	ldi	r30, 0x80	; 128
     a20:	32 d0       	rcall	.+100    	; 0xa86 <__divsf3_pse+0x94>
     a22:	91 50       	subi	r25, 0x01	; 1
     a24:	50 40       	sbci	r21, 0x00	; 0
     a26:	e6 95       	lsr	r30
     a28:	00 1c       	adc	r0, r0
     a2a:	ca f7       	brpl	.-14     	; 0xa1e <__divsf3_pse+0x2c>
     a2c:	2b d0       	rcall	.+86     	; 0xa84 <__divsf3_pse+0x92>
     a2e:	fe 2f       	mov	r31, r30
     a30:	29 d0       	rcall	.+82     	; 0xa84 <__divsf3_pse+0x92>
     a32:	66 0f       	add	r22, r22
     a34:	77 1f       	adc	r23, r23
     a36:	88 1f       	adc	r24, r24
     a38:	bb 1f       	adc	r27, r27
     a3a:	26 17       	cp	r18, r22
     a3c:	37 07       	cpc	r19, r23
     a3e:	48 07       	cpc	r20, r24
     a40:	ab 07       	cpc	r26, r27
     a42:	b0 e8       	ldi	r27, 0x80	; 128
     a44:	09 f0       	breq	.+2      	; 0xa48 <__divsf3_pse+0x56>
     a46:	bb 0b       	sbc	r27, r27
     a48:	80 2d       	mov	r24, r0
     a4a:	bf 01       	movw	r22, r30
     a4c:	ff 27       	eor	r31, r31
     a4e:	93 58       	subi	r25, 0x83	; 131
     a50:	5f 4f       	sbci	r21, 0xFF	; 255
     a52:	3a f0       	brmi	.+14     	; 0xa62 <__divsf3_pse+0x70>
     a54:	9e 3f       	cpi	r25, 0xFE	; 254
     a56:	51 05       	cpc	r21, r1
     a58:	78 f0       	brcs	.+30     	; 0xa78 <__divsf3_pse+0x86>
     a5a:	0c 94 c7 05 	jmp	0xb8e	; 0xb8e <__fp_inf>
     a5e:	0c 94 12 06 	jmp	0xc24	; 0xc24 <__fp_szero>
     a62:	5f 3f       	cpi	r21, 0xFF	; 255
     a64:	e4 f3       	brlt	.-8      	; 0xa5e <__divsf3_pse+0x6c>
     a66:	98 3e       	cpi	r25, 0xE8	; 232
     a68:	d4 f3       	brlt	.-12     	; 0xa5e <__divsf3_pse+0x6c>
     a6a:	86 95       	lsr	r24
     a6c:	77 95       	ror	r23
     a6e:	67 95       	ror	r22
     a70:	b7 95       	ror	r27
     a72:	f7 95       	ror	r31
     a74:	9f 5f       	subi	r25, 0xFF	; 255
     a76:	c9 f7       	brne	.-14     	; 0xa6a <__divsf3_pse+0x78>
     a78:	88 0f       	add	r24, r24
     a7a:	91 1d       	adc	r25, r1
     a7c:	96 95       	lsr	r25
     a7e:	87 95       	ror	r24
     a80:	97 f9       	bld	r25, 7
     a82:	08 95       	ret
     a84:	e1 e0       	ldi	r30, 0x01	; 1
     a86:	66 0f       	add	r22, r22
     a88:	77 1f       	adc	r23, r23
     a8a:	88 1f       	adc	r24, r24
     a8c:	bb 1f       	adc	r27, r27
     a8e:	62 17       	cp	r22, r18
     a90:	73 07       	cpc	r23, r19
     a92:	84 07       	cpc	r24, r20
     a94:	ba 07       	cpc	r27, r26
     a96:	20 f0       	brcs	.+8      	; 0xaa0 <__divsf3_pse+0xae>
     a98:	62 1b       	sub	r22, r18
     a9a:	73 0b       	sbc	r23, r19
     a9c:	84 0b       	sbc	r24, r20
     a9e:	ba 0b       	sbc	r27, r26
     aa0:	ee 1f       	adc	r30, r30
     aa2:	88 f7       	brcc	.-30     	; 0xa86 <__divsf3_pse+0x94>
     aa4:	e0 95       	com	r30
     aa6:	08 95       	ret

00000aa8 <__fixsfsi>:
     aa8:	0e 94 5b 05 	call	0xab6	; 0xab6 <__fixunssfsi>
     aac:	68 94       	set
     aae:	b1 11       	cpse	r27, r1
     ab0:	0c 94 12 06 	jmp	0xc24	; 0xc24 <__fp_szero>
     ab4:	08 95       	ret

00000ab6 <__fixunssfsi>:
     ab6:	0e 94 f7 05 	call	0xbee	; 0xbee <__fp_splitA>
     aba:	88 f0       	brcs	.+34     	; 0xade <__fixunssfsi+0x28>
     abc:	9f 57       	subi	r25, 0x7F	; 127
     abe:	98 f0       	brcs	.+38     	; 0xae6 <__fixunssfsi+0x30>
     ac0:	b9 2f       	mov	r27, r25
     ac2:	99 27       	eor	r25, r25
     ac4:	b7 51       	subi	r27, 0x17	; 23
     ac6:	b0 f0       	brcs	.+44     	; 0xaf4 <__fixunssfsi+0x3e>
     ac8:	e1 f0       	breq	.+56     	; 0xb02 <__fixunssfsi+0x4c>
     aca:	66 0f       	add	r22, r22
     acc:	77 1f       	adc	r23, r23
     ace:	88 1f       	adc	r24, r24
     ad0:	99 1f       	adc	r25, r25
     ad2:	1a f0       	brmi	.+6      	; 0xada <__fixunssfsi+0x24>
     ad4:	ba 95       	dec	r27
     ad6:	c9 f7       	brne	.-14     	; 0xaca <__fixunssfsi+0x14>
     ad8:	14 c0       	rjmp	.+40     	; 0xb02 <__fixunssfsi+0x4c>
     ada:	b1 30       	cpi	r27, 0x01	; 1
     adc:	91 f0       	breq	.+36     	; 0xb02 <__fixunssfsi+0x4c>
     ade:	0e 94 11 06 	call	0xc22	; 0xc22 <__fp_zero>
     ae2:	b1 e0       	ldi	r27, 0x01	; 1
     ae4:	08 95       	ret
     ae6:	0c 94 11 06 	jmp	0xc22	; 0xc22 <__fp_zero>
     aea:	67 2f       	mov	r22, r23
     aec:	78 2f       	mov	r23, r24
     aee:	88 27       	eor	r24, r24
     af0:	b8 5f       	subi	r27, 0xF8	; 248
     af2:	39 f0       	breq	.+14     	; 0xb02 <__fixunssfsi+0x4c>
     af4:	b9 3f       	cpi	r27, 0xF9	; 249
     af6:	cc f3       	brlt	.-14     	; 0xaea <__fixunssfsi+0x34>
     af8:	86 95       	lsr	r24
     afa:	77 95       	ror	r23
     afc:	67 95       	ror	r22
     afe:	b3 95       	inc	r27
     b00:	d9 f7       	brne	.-10     	; 0xaf8 <__fixunssfsi+0x42>
     b02:	3e f4       	brtc	.+14     	; 0xb12 <__fixunssfsi+0x5c>
     b04:	90 95       	com	r25
     b06:	80 95       	com	r24
     b08:	70 95       	com	r23
     b0a:	61 95       	neg	r22
     b0c:	7f 4f       	sbci	r23, 0xFF	; 255
     b0e:	8f 4f       	sbci	r24, 0xFF	; 255
     b10:	9f 4f       	sbci	r25, 0xFF	; 255
     b12:	08 95       	ret

00000b14 <__floatunsisf>:
     b14:	e8 94       	clt
     b16:	09 c0       	rjmp	.+18     	; 0xb2a <__floatsisf+0x12>

00000b18 <__floatsisf>:
     b18:	97 fb       	bst	r25, 7
     b1a:	3e f4       	brtc	.+14     	; 0xb2a <__floatsisf+0x12>
     b1c:	90 95       	com	r25
     b1e:	80 95       	com	r24
     b20:	70 95       	com	r23
     b22:	61 95       	neg	r22
     b24:	7f 4f       	sbci	r23, 0xFF	; 255
     b26:	8f 4f       	sbci	r24, 0xFF	; 255
     b28:	9f 4f       	sbci	r25, 0xFF	; 255
     b2a:	99 23       	and	r25, r25
     b2c:	a9 f0       	breq	.+42     	; 0xb58 <__floatsisf+0x40>
     b2e:	f9 2f       	mov	r31, r25
     b30:	96 e9       	ldi	r25, 0x96	; 150
     b32:	bb 27       	eor	r27, r27
     b34:	93 95       	inc	r25
     b36:	f6 95       	lsr	r31
     b38:	87 95       	ror	r24
     b3a:	77 95       	ror	r23
     b3c:	67 95       	ror	r22
     b3e:	b7 95       	ror	r27
     b40:	f1 11       	cpse	r31, r1
     b42:	f8 cf       	rjmp	.-16     	; 0xb34 <__floatsisf+0x1c>
     b44:	fa f4       	brpl	.+62     	; 0xb84 <__floatsisf+0x6c>
     b46:	bb 0f       	add	r27, r27
     b48:	11 f4       	brne	.+4      	; 0xb4e <__floatsisf+0x36>
     b4a:	60 ff       	sbrs	r22, 0
     b4c:	1b c0       	rjmp	.+54     	; 0xb84 <__floatsisf+0x6c>
     b4e:	6f 5f       	subi	r22, 0xFF	; 255
     b50:	7f 4f       	sbci	r23, 0xFF	; 255
     b52:	8f 4f       	sbci	r24, 0xFF	; 255
     b54:	9f 4f       	sbci	r25, 0xFF	; 255
     b56:	16 c0       	rjmp	.+44     	; 0xb84 <__floatsisf+0x6c>
     b58:	88 23       	and	r24, r24
     b5a:	11 f0       	breq	.+4      	; 0xb60 <__floatsisf+0x48>
     b5c:	96 e9       	ldi	r25, 0x96	; 150
     b5e:	11 c0       	rjmp	.+34     	; 0xb82 <__floatsisf+0x6a>
     b60:	77 23       	and	r23, r23
     b62:	21 f0       	breq	.+8      	; 0xb6c <__floatsisf+0x54>
     b64:	9e e8       	ldi	r25, 0x8E	; 142
     b66:	87 2f       	mov	r24, r23
     b68:	76 2f       	mov	r23, r22
     b6a:	05 c0       	rjmp	.+10     	; 0xb76 <__floatsisf+0x5e>
     b6c:	66 23       	and	r22, r22
     b6e:	71 f0       	breq	.+28     	; 0xb8c <__floatsisf+0x74>
     b70:	96 e8       	ldi	r25, 0x86	; 134
     b72:	86 2f       	mov	r24, r22
     b74:	70 e0       	ldi	r23, 0x00	; 0
     b76:	60 e0       	ldi	r22, 0x00	; 0
     b78:	2a f0       	brmi	.+10     	; 0xb84 <__floatsisf+0x6c>
     b7a:	9a 95       	dec	r25
     b7c:	66 0f       	add	r22, r22
     b7e:	77 1f       	adc	r23, r23
     b80:	88 1f       	adc	r24, r24
     b82:	da f7       	brpl	.-10     	; 0xb7a <__floatsisf+0x62>
     b84:	88 0f       	add	r24, r24
     b86:	96 95       	lsr	r25
     b88:	87 95       	ror	r24
     b8a:	97 f9       	bld	r25, 7
     b8c:	08 95       	ret

00000b8e <__fp_inf>:
     b8e:	97 f9       	bld	r25, 7
     b90:	9f 67       	ori	r25, 0x7F	; 127
     b92:	80 e8       	ldi	r24, 0x80	; 128
     b94:	70 e0       	ldi	r23, 0x00	; 0
     b96:	60 e0       	ldi	r22, 0x00	; 0
     b98:	08 95       	ret

00000b9a <__fp_nan>:
     b9a:	9f ef       	ldi	r25, 0xFF	; 255
     b9c:	80 ec       	ldi	r24, 0xC0	; 192
     b9e:	08 95       	ret

00000ba0 <__fp_pscA>:
     ba0:	00 24       	eor	r0, r0
     ba2:	0a 94       	dec	r0
     ba4:	16 16       	cp	r1, r22
     ba6:	17 06       	cpc	r1, r23
     ba8:	18 06       	cpc	r1, r24
     baa:	09 06       	cpc	r0, r25
     bac:	08 95       	ret

00000bae <__fp_pscB>:
     bae:	00 24       	eor	r0, r0
     bb0:	0a 94       	dec	r0
     bb2:	12 16       	cp	r1, r18
     bb4:	13 06       	cpc	r1, r19
     bb6:	14 06       	cpc	r1, r20
     bb8:	05 06       	cpc	r0, r21
     bba:	08 95       	ret

00000bbc <__fp_round>:
     bbc:	09 2e       	mov	r0, r25
     bbe:	03 94       	inc	r0
     bc0:	00 0c       	add	r0, r0
     bc2:	11 f4       	brne	.+4      	; 0xbc8 <__fp_round+0xc>
     bc4:	88 23       	and	r24, r24
     bc6:	52 f0       	brmi	.+20     	; 0xbdc <__fp_round+0x20>
     bc8:	bb 0f       	add	r27, r27
     bca:	40 f4       	brcc	.+16     	; 0xbdc <__fp_round+0x20>
     bcc:	bf 2b       	or	r27, r31
     bce:	11 f4       	brne	.+4      	; 0xbd4 <__fp_round+0x18>
     bd0:	60 ff       	sbrs	r22, 0
     bd2:	04 c0       	rjmp	.+8      	; 0xbdc <__fp_round+0x20>
     bd4:	6f 5f       	subi	r22, 0xFF	; 255
     bd6:	7f 4f       	sbci	r23, 0xFF	; 255
     bd8:	8f 4f       	sbci	r24, 0xFF	; 255
     bda:	9f 4f       	sbci	r25, 0xFF	; 255
     bdc:	08 95       	ret

00000bde <__fp_split3>:
     bde:	57 fd       	sbrc	r21, 7
     be0:	90 58       	subi	r25, 0x80	; 128
     be2:	44 0f       	add	r20, r20
     be4:	55 1f       	adc	r21, r21
     be6:	59 f0       	breq	.+22     	; 0xbfe <__fp_splitA+0x10>
     be8:	5f 3f       	cpi	r21, 0xFF	; 255
     bea:	71 f0       	breq	.+28     	; 0xc08 <__fp_splitA+0x1a>
     bec:	47 95       	ror	r20

00000bee <__fp_splitA>:
     bee:	88 0f       	add	r24, r24
     bf0:	97 fb       	bst	r25, 7
     bf2:	99 1f       	adc	r25, r25
     bf4:	61 f0       	breq	.+24     	; 0xc0e <__fp_splitA+0x20>
     bf6:	9f 3f       	cpi	r25, 0xFF	; 255
     bf8:	79 f0       	breq	.+30     	; 0xc18 <__fp_splitA+0x2a>
     bfa:	87 95       	ror	r24
     bfc:	08 95       	ret
     bfe:	12 16       	cp	r1, r18
     c00:	13 06       	cpc	r1, r19
     c02:	14 06       	cpc	r1, r20
     c04:	55 1f       	adc	r21, r21
     c06:	f2 cf       	rjmp	.-28     	; 0xbec <__fp_split3+0xe>
     c08:	46 95       	lsr	r20
     c0a:	f1 df       	rcall	.-30     	; 0xbee <__fp_splitA>
     c0c:	08 c0       	rjmp	.+16     	; 0xc1e <__fp_splitA+0x30>
     c0e:	16 16       	cp	r1, r22
     c10:	17 06       	cpc	r1, r23
     c12:	18 06       	cpc	r1, r24
     c14:	99 1f       	adc	r25, r25
     c16:	f1 cf       	rjmp	.-30     	; 0xbfa <__fp_splitA+0xc>
     c18:	86 95       	lsr	r24
     c1a:	71 05       	cpc	r23, r1
     c1c:	61 05       	cpc	r22, r1
     c1e:	08 94       	sec
     c20:	08 95       	ret

00000c22 <__fp_zero>:
     c22:	e8 94       	clt

00000c24 <__fp_szero>:
     c24:	bb 27       	eor	r27, r27
     c26:	66 27       	eor	r22, r22
     c28:	77 27       	eor	r23, r23
     c2a:	cb 01       	movw	r24, r22
     c2c:	97 f9       	bld	r25, 7
     c2e:	08 95       	ret

00000c30 <__mulsf3>:
     c30:	0e 94 2b 06 	call	0xc56	; 0xc56 <__mulsf3x>
     c34:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__fp_round>
     c38:	0e 94 d0 05 	call	0xba0	; 0xba0 <__fp_pscA>
     c3c:	38 f0       	brcs	.+14     	; 0xc4c <__mulsf3+0x1c>
     c3e:	0e 94 d7 05 	call	0xbae	; 0xbae <__fp_pscB>
     c42:	20 f0       	brcs	.+8      	; 0xc4c <__mulsf3+0x1c>
     c44:	95 23       	and	r25, r21
     c46:	11 f0       	breq	.+4      	; 0xc4c <__mulsf3+0x1c>
     c48:	0c 94 c7 05 	jmp	0xb8e	; 0xb8e <__fp_inf>
     c4c:	0c 94 cd 05 	jmp	0xb9a	; 0xb9a <__fp_nan>
     c50:	11 24       	eor	r1, r1
     c52:	0c 94 12 06 	jmp	0xc24	; 0xc24 <__fp_szero>

00000c56 <__mulsf3x>:
     c56:	0e 94 ef 05 	call	0xbde	; 0xbde <__fp_split3>
     c5a:	70 f3       	brcs	.-36     	; 0xc38 <__mulsf3+0x8>

00000c5c <__mulsf3_pse>:
     c5c:	95 9f       	mul	r25, r21
     c5e:	c1 f3       	breq	.-16     	; 0xc50 <__mulsf3+0x20>
     c60:	95 0f       	add	r25, r21
     c62:	50 e0       	ldi	r21, 0x00	; 0
     c64:	55 1f       	adc	r21, r21
     c66:	62 9f       	mul	r22, r18
     c68:	f0 01       	movw	r30, r0
     c6a:	72 9f       	mul	r23, r18
     c6c:	bb 27       	eor	r27, r27
     c6e:	f0 0d       	add	r31, r0
     c70:	b1 1d       	adc	r27, r1
     c72:	63 9f       	mul	r22, r19
     c74:	aa 27       	eor	r26, r26
     c76:	f0 0d       	add	r31, r0
     c78:	b1 1d       	adc	r27, r1
     c7a:	aa 1f       	adc	r26, r26
     c7c:	64 9f       	mul	r22, r20
     c7e:	66 27       	eor	r22, r22
     c80:	b0 0d       	add	r27, r0
     c82:	a1 1d       	adc	r26, r1
     c84:	66 1f       	adc	r22, r22
     c86:	82 9f       	mul	r24, r18
     c88:	22 27       	eor	r18, r18
     c8a:	b0 0d       	add	r27, r0
     c8c:	a1 1d       	adc	r26, r1
     c8e:	62 1f       	adc	r22, r18
     c90:	73 9f       	mul	r23, r19
     c92:	b0 0d       	add	r27, r0
     c94:	a1 1d       	adc	r26, r1
     c96:	62 1f       	adc	r22, r18
     c98:	83 9f       	mul	r24, r19
     c9a:	a0 0d       	add	r26, r0
     c9c:	61 1d       	adc	r22, r1
     c9e:	22 1f       	adc	r18, r18
     ca0:	74 9f       	mul	r23, r20
     ca2:	33 27       	eor	r19, r19
     ca4:	a0 0d       	add	r26, r0
     ca6:	61 1d       	adc	r22, r1
     ca8:	23 1f       	adc	r18, r19
     caa:	84 9f       	mul	r24, r20
     cac:	60 0d       	add	r22, r0
     cae:	21 1d       	adc	r18, r1
     cb0:	82 2f       	mov	r24, r18
     cb2:	76 2f       	mov	r23, r22
     cb4:	6a 2f       	mov	r22, r26
     cb6:	11 24       	eor	r1, r1
     cb8:	9f 57       	subi	r25, 0x7F	; 127
     cba:	50 40       	sbci	r21, 0x00	; 0
     cbc:	9a f0       	brmi	.+38     	; 0xce4 <__mulsf3_pse+0x88>
     cbe:	f1 f0       	breq	.+60     	; 0xcfc <__mulsf3_pse+0xa0>
     cc0:	88 23       	and	r24, r24
     cc2:	4a f0       	brmi	.+18     	; 0xcd6 <__mulsf3_pse+0x7a>
     cc4:	ee 0f       	add	r30, r30
     cc6:	ff 1f       	adc	r31, r31
     cc8:	bb 1f       	adc	r27, r27
     cca:	66 1f       	adc	r22, r22
     ccc:	77 1f       	adc	r23, r23
     cce:	88 1f       	adc	r24, r24
     cd0:	91 50       	subi	r25, 0x01	; 1
     cd2:	50 40       	sbci	r21, 0x00	; 0
     cd4:	a9 f7       	brne	.-22     	; 0xcc0 <__mulsf3_pse+0x64>
     cd6:	9e 3f       	cpi	r25, 0xFE	; 254
     cd8:	51 05       	cpc	r21, r1
     cda:	80 f0       	brcs	.+32     	; 0xcfc <__mulsf3_pse+0xa0>
     cdc:	0c 94 c7 05 	jmp	0xb8e	; 0xb8e <__fp_inf>
     ce0:	0c 94 12 06 	jmp	0xc24	; 0xc24 <__fp_szero>
     ce4:	5f 3f       	cpi	r21, 0xFF	; 255
     ce6:	e4 f3       	brlt	.-8      	; 0xce0 <__mulsf3_pse+0x84>
     ce8:	98 3e       	cpi	r25, 0xE8	; 232
     cea:	d4 f3       	brlt	.-12     	; 0xce0 <__mulsf3_pse+0x84>
     cec:	86 95       	lsr	r24
     cee:	77 95       	ror	r23
     cf0:	67 95       	ror	r22
     cf2:	b7 95       	ror	r27
     cf4:	f7 95       	ror	r31
     cf6:	e7 95       	ror	r30
     cf8:	9f 5f       	subi	r25, 0xFF	; 255
     cfa:	c1 f7       	brne	.-16     	; 0xcec <__mulsf3_pse+0x90>
     cfc:	fe 2b       	or	r31, r30
     cfe:	88 0f       	add	r24, r24
     d00:	91 1d       	adc	r25, r1
     d02:	96 95       	lsr	r25
     d04:	87 95       	ror	r24
     d06:	97 f9       	bld	r25, 7
     d08:	08 95       	ret

00000d0a <_ZN15OrangutanAnalog7setModeEh.part.0>:
     d0a:	ec e7       	ldi	r30, 0x7C	; 124
     d0c:	f0 e0       	ldi	r31, 0x00	; 0
     d0e:	80 81       	ld	r24, Z
     d10:	8f 7d       	andi	r24, 0xDF	; 223
     d12:	80 83       	st	Z, r24
     d14:	08 95       	ret

00000d16 <_ZN15OrangutanAnalog7setModeEh>:
     d16:	81 11       	cpse	r24, r1
     d18:	03 c0       	rjmp	.+6      	; 0xd20 <_ZN15OrangutanAnalog7setModeEh+0xa>
     d1a:	0e 94 85 06 	call	0xd0a	; 0xd0a <_ZN15OrangutanAnalog7setModeEh.part.0>
     d1e:	08 95       	ret
     d20:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     d24:	80 62       	ori	r24, 0x20	; 32
     d26:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     d2a:	08 95       	ret

00000d2c <_ZN15OrangutanAnalog7getModeEv>:
     d2c:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     d30:	85 fb       	bst	r24, 5
     d32:	88 27       	eor	r24, r24
     d34:	80 f9       	bld	r24, 0
     d36:	08 95       	ret

00000d38 <_ZN15OrangutanAnalog16conversionResultEv>:
     d38:	0e 94 96 06 	call	0xd2c	; 0xd2c <_ZN15OrangutanAnalog7getModeEv>
     d3c:	88 23       	and	r24, r24
     d3e:	21 f0       	breq	.+8      	; 0xd48 <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     d40:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	08 95       	ret
     d48:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     d4c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     d50:	08 95       	ret

00000d52 <_ZN15OrangutanAnalog15startConversionEhh>:
     d52:	80 32       	cpi	r24, 0x20	; 32
     d54:	a0 f4       	brcc	.+40     	; 0xd7e <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
     d56:	97 e8       	ldi	r25, 0x87	; 135
     d58:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     d5c:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     d60:	66 23       	and	r22, r22
     d62:	11 f0       	breq	.+4      	; 0xd68 <_ZN15OrangutanAnalog15startConversionEhh+0x16>
     d64:	90 6c       	ori	r25, 0xC0	; 192
     d66:	02 c0       	rjmp	.+4      	; 0xd6c <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
     d68:	9f 77       	andi	r25, 0x7F	; 127
     d6a:	90 64       	ori	r25, 0x40	; 64
     d6c:	90 7e       	andi	r25, 0xE0	; 224
     d6e:	98 2b       	or	r25, r24
     d70:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     d74:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     d78:	80 64       	ori	r24, 0x40	; 64
     d7a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     d7e:	08 95       	ret

00000d80 <_ZN15OrangutanAnalog11readAverageEhj>:
     d80:	a0 e0       	ldi	r26, 0x00	; 0
     d82:	b0 e0       	ldi	r27, 0x00	; 0
     d84:	e6 ec       	ldi	r30, 0xC6	; 198
     d86:	f6 e0       	ldi	r31, 0x06	; 6
     d88:	0c 94 4d 10 	jmp	0x209a	; 0x209a <__prologue_saves__+0x14>
     d8c:	eb 01       	movw	r28, r22
     d8e:	60 e0       	ldi	r22, 0x00	; 0
     d90:	0e 94 a9 06 	call	0xd52	; 0xd52 <_ZN15OrangutanAnalog15startConversionEhh>
     d94:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     d98:	86 fd       	sbrc	r24, 6
     d9a:	fc cf       	rjmp	.-8      	; 0xd94 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
     d9c:	8e 01       	movw	r16, r28
     d9e:	c1 2c       	mov	r12, r1
     da0:	d1 2c       	mov	r13, r1
     da2:	76 01       	movw	r14, r12
     da4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     da8:	80 64       	ori	r24, 0x40	; 64
     daa:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     dae:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     db2:	86 fd       	sbrc	r24, 6
     db4:	fc cf       	rjmp	.-8      	; 0xdae <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
     db6:	0e 94 9c 06 	call	0xd38	; 0xd38 <_ZN15OrangutanAnalog16conversionResultEv>
     dba:	c8 0e       	add	r12, r24
     dbc:	d9 1e       	adc	r13, r25
     dbe:	e1 1c       	adc	r14, r1
     dc0:	f1 1c       	adc	r15, r1
     dc2:	01 50       	subi	r16, 0x01	; 1
     dc4:	11 09       	sbc	r17, r1
     dc6:	01 15       	cp	r16, r1
     dc8:	11 05       	cpc	r17, r1
     dca:	61 f7       	brne	.-40     	; 0xda4 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
     dcc:	ce 01       	movw	r24, r28
     dce:	96 95       	lsr	r25
     dd0:	87 95       	ror	r24
     dd2:	c0 34       	cpi	r28, 0x40	; 64
     dd4:	d1 05       	cpc	r29, r1
     dd6:	38 f4       	brcc	.+14     	; 0xde6 <_ZN15OrangutanAnalog11readAverageEhj+0x66>
     dd8:	8c 0d       	add	r24, r12
     dda:	9d 1d       	adc	r25, r13
     ddc:	be 01       	movw	r22, r28
     dde:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <__udivmodhi4>
     de2:	cb 01       	movw	r24, r22
     de4:	0e c0       	rjmp	.+28     	; 0xe02 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
     de6:	a7 01       	movw	r20, r14
     de8:	96 01       	movw	r18, r12
     dea:	28 0f       	add	r18, r24
     dec:	39 1f       	adc	r19, r25
     dee:	41 1d       	adc	r20, r1
     df0:	51 1d       	adc	r21, r1
     df2:	ca 01       	movw	r24, r20
     df4:	b9 01       	movw	r22, r18
     df6:	9e 01       	movw	r18, r28
     df8:	40 e0       	ldi	r20, 0x00	; 0
     dfa:	50 e0       	ldi	r21, 0x00	; 0
     dfc:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <__udivmodsi4>
     e00:	c9 01       	movw	r24, r18
     e02:	cd b7       	in	r28, 0x3d	; 61
     e04:	de b7       	in	r29, 0x3e	; 62
     e06:	e8 e0       	ldi	r30, 0x08	; 8
     e08:	0c 94 69 10 	jmp	0x20d2	; 0x20d2 <__epilogue_restores__+0x14>

00000e0c <_ZN15OrangutanAnalog12toMillivoltsEj>:
     e0c:	cf 92       	push	r12
     e0e:	df 92       	push	r13
     e10:	ef 92       	push	r14
     e12:	ff 92       	push	r15
     e14:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e18:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     e1c:	9c 01       	movw	r18, r24
     e1e:	0e 94 21 10 	call	0x2042	; 0x2042 <__umulhisi3>
     e22:	6b 01       	movw	r12, r22
     e24:	7c 01       	movw	r14, r24
     e26:	0e 94 96 06 	call	0xd2c	; 0xd2c <_ZN15OrangutanAnalog7getModeEv>
     e2a:	88 23       	and	r24, r24
     e2c:	59 f0       	breq	.+22     	; 0xe44 <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
     e2e:	c7 01       	movw	r24, r14
     e30:	b6 01       	movw	r22, r12
     e32:	61 58       	subi	r22, 0x81	; 129
     e34:	7f 4f       	sbci	r23, 0xFF	; 255
     e36:	8f 4f       	sbci	r24, 0xFF	; 255
     e38:	9f 4f       	sbci	r25, 0xFF	; 255
     e3a:	2f ef       	ldi	r18, 0xFF	; 255
     e3c:	30 e0       	ldi	r19, 0x00	; 0
     e3e:	40 e0       	ldi	r20, 0x00	; 0
     e40:	50 e0       	ldi	r21, 0x00	; 0
     e42:	0a c0       	rjmp	.+20     	; 0xe58 <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
     e44:	c7 01       	movw	r24, r14
     e46:	b6 01       	movw	r22, r12
     e48:	61 50       	subi	r22, 0x01	; 1
     e4a:	7e 4f       	sbci	r23, 0xFE	; 254
     e4c:	8f 4f       	sbci	r24, 0xFF	; 255
     e4e:	9f 4f       	sbci	r25, 0xFF	; 255
     e50:	2f ef       	ldi	r18, 0xFF	; 255
     e52:	33 e0       	ldi	r19, 0x03	; 3
     e54:	40 e0       	ldi	r20, 0x00	; 0
     e56:	50 e0       	ldi	r21, 0x00	; 0
     e58:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <__udivmodsi4>
     e5c:	c9 01       	movw	r24, r18
     e5e:	ff 90       	pop	r15
     e60:	ef 90       	pop	r14
     e62:	df 90       	pop	r13
     e64:	cf 90       	pop	r12
     e66:	08 95       	ret

00000e68 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
     e68:	0e 94 c0 06 	call	0xd80	; 0xd80 <_ZN15OrangutanAnalog11readAverageEhj>
     e6c:	0e 94 06 07 	call	0xe0c	; 0xe0c <_ZN15OrangutanAnalog12toMillivoltsEj>
     e70:	08 95       	ret

00000e72 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
     e72:	1f 93       	push	r17
     e74:	cf 93       	push	r28
     e76:	df 93       	push	r29
     e78:	0e 94 96 06 	call	0xd2c	; 0xd2c <_ZN15OrangutanAnalog7getModeEv>
     e7c:	18 2f       	mov	r17, r24
     e7e:	0e 94 85 06 	call	0xd0a	; 0xd0a <_ZN15OrangutanAnalog7setModeEh.part.0>
     e82:	6a e0       	ldi	r22, 0x0A	; 10
     e84:	70 e0       	ldi	r23, 0x00	; 0
     e86:	86 e0       	ldi	r24, 0x06	; 6
     e88:	0e 94 34 07 	call	0xe68	; 0xe68 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
     e8c:	ec 01       	movw	r28, r24
     e8e:	81 2f       	mov	r24, r17
     e90:	0e 94 8b 06 	call	0xd16	; 0xd16 <_ZN15OrangutanAnalog7setModeEh>
     e94:	ce 01       	movw	r24, r28
     e96:	88 0f       	add	r24, r24
     e98:	99 1f       	adc	r25, r25
     e9a:	8c 0f       	add	r24, r28
     e9c:	9d 1f       	adc	r25, r29
     e9e:	01 96       	adiw	r24, 0x01	; 1
     ea0:	96 95       	lsr	r25
     ea2:	87 95       	ror	r24
     ea4:	df 91       	pop	r29
     ea6:	cf 91       	pop	r28
     ea8:	1f 91       	pop	r17
     eaa:	08 95       	ret

00000eac <read_battery_millivolts_3pi>:
     eac:	0e 94 39 07 	call	0xe72	; 0xe72 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
     eb0:	08 95       	ret

00000eb2 <delay_us.constprop.0>:
     eb2:	81 e0       	ldi	r24, 0x01	; 1
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	6f 93       	push	r22
     eb8:	64 e0       	ldi	r22, 0x04	; 4
     eba:	6a 95       	dec	r22
     ebc:	f1 f7       	brne	.-4      	; 0xeba <delay_us.constprop.0+0x8>
     ebe:	6f 91       	pop	r22
     ec0:	01 97       	sbiw	r24, 0x01	; 1
     ec2:	c9 f7       	brne	.-14     	; 0xeb6 <delay_us.constprop.0+0x4>
     ec4:	08 95       	ret

00000ec6 <_ZN12OrangutanLCD8busyWaitEv>:
     ec6:	0f 93       	push	r16
     ec8:	1f 93       	push	r17
     eca:	cf 93       	push	r28
     ecc:	df 93       	push	r29
     ece:	1a b1       	in	r17, 0x0a	; 10
     ed0:	57 98       	cbi	0x0a, 7	; 10
     ed2:	5a 98       	cbi	0x0b, 2	; 11
     ed4:	28 9a       	sbi	0x05, 0	; 5
     ed6:	c0 e0       	ldi	r28, 0x00	; 0
     ed8:	d0 e0       	ldi	r29, 0x00	; 0
     eda:	0e 94 59 07 	call	0xeb2	; 0xeb2 <delay_us.constprop.0>
     ede:	5c 9a       	sbi	0x0b, 4	; 11
     ee0:	0e 94 59 07 	call	0xeb2	; 0xeb2 <delay_us.constprop.0>
     ee4:	09 b1       	in	r16, 0x09	; 9
     ee6:	5c 98       	cbi	0x0b, 4	; 11
     ee8:	0e 94 59 07 	call	0xeb2	; 0xeb2 <delay_us.constprop.0>
     eec:	5c 9a       	sbi	0x0b, 4	; 11
     eee:	0e 94 59 07 	call	0xeb2	; 0xeb2 <delay_us.constprop.0>
     ef2:	5c 98       	cbi	0x0b, 4	; 11
     ef4:	24 96       	adiw	r28, 0x04	; 4
     ef6:	07 ff       	sbrs	r16, 7
     ef8:	10 c0       	rjmp	.+32     	; 0xf1a <_ZN12OrangutanLCD8busyWaitEv+0x54>
     efa:	ae 01       	movw	r20, r28
     efc:	60 e0       	ldi	r22, 0x00	; 0
     efe:	70 e0       	ldi	r23, 0x00	; 0
     f00:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
     f04:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <__data_end+0x1>
     f08:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <__data_end+0x2>
     f0c:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <__data_end+0x3>
     f10:	48 17       	cp	r20, r24
     f12:	59 07       	cpc	r21, r25
     f14:	6a 07       	cpc	r22, r26
     f16:	7b 07       	cpc	r23, r27
     f18:	00 f3       	brcs	.-64     	; 0xeda <_ZN12OrangutanLCD8busyWaitEv+0x14>
     f1a:	1a b9       	out	0x0a, r17	; 10
     f1c:	df 91       	pop	r29
     f1e:	cf 91       	pop	r28
     f20:	1f 91       	pop	r17
     f22:	0f 91       	pop	r16
     f24:	08 95       	ret

00000f26 <_ZN12OrangutanLCD8sendDataEh>:
     f26:	95 b1       	in	r25, 0x05	; 5
     f28:	28 2f       	mov	r18, r24
     f2a:	21 70       	andi	r18, 0x01	; 1
     f2c:	30 e0       	ldi	r19, 0x00	; 0
     f2e:	22 0f       	add	r18, r18
     f30:	33 1f       	adc	r19, r19
     f32:	48 2f       	mov	r20, r24
     f34:	46 70       	andi	r20, 0x06	; 6
     f36:	68 e0       	ldi	r22, 0x08	; 8
     f38:	46 9f       	mul	r20, r22
     f3a:	a0 01       	movw	r20, r0
     f3c:	11 24       	eor	r1, r1
     f3e:	24 2b       	or	r18, r20
     f40:	9d 7c       	andi	r25, 0xCD	; 205
     f42:	29 2b       	or	r18, r25
     f44:	25 b9       	out	0x05, r18	; 5
     f46:	9b b1       	in	r25, 0x0b	; 11
     f48:	88 70       	andi	r24, 0x08	; 8
     f4a:	82 95       	swap	r24
     f4c:	80 7f       	andi	r24, 0xF0	; 240
     f4e:	9f 77       	andi	r25, 0x7F	; 127
     f50:	89 2b       	or	r24, r25
     f52:	8b b9       	out	0x0b, r24	; 11
     f54:	5c 9a       	sbi	0x0b, 4	; 11
     f56:	0e 94 59 07 	call	0xeb2	; 0xeb2 <delay_us.constprop.0>
     f5a:	5c 98       	cbi	0x0b, 4	; 11
     f5c:	0e 94 59 07 	call	0xeb2	; 0xeb2 <delay_us.constprop.0>
     f60:	08 95       	ret

00000f62 <_ZN12OrangutanLCD4sendEhhh>:
     f62:	a0 e0       	ldi	r26, 0x00	; 0
     f64:	b0 e0       	ldi	r27, 0x00	; 0
     f66:	e7 eb       	ldi	r30, 0xB7	; 183
     f68:	f7 e0       	ldi	r31, 0x07	; 7
     f6a:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__prologue_saves__+0x16>
     f6e:	c8 2f       	mov	r28, r24
     f70:	d6 2e       	mov	r13, r22
     f72:	e4 2e       	mov	r14, r20
     f74:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <_ZZN12OrangutanLCD4initEvE11initialized>
     f78:	81 11       	cpse	r24, r1
     f7a:	05 c0       	rjmp	.+10     	; 0xf86 <_ZN12OrangutanLCD4sendEhhh+0x24>
     f7c:	81 e0       	ldi	r24, 0x01	; 1
     f7e:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <_ZZN12OrangutanLCD4initEvE11initialized>
     f82:	0e 94 f7 07 	call	0xfee	; 0xfee <_ZN12OrangutanLCD5init2Ev>
     f86:	0e 94 63 07 	call	0xec6	; 0xec6 <_ZN12OrangutanLCD8busyWaitEv>
     f8a:	14 b1       	in	r17, 0x04	; 4
     f8c:	d5 b1       	in	r29, 0x05	; 5
     f8e:	fa b0       	in	r15, 0x0a	; 10
     f90:	0b b1       	in	r16, 0x0b	; 11
     f92:	28 98       	cbi	0x05, 0	; 5
     f94:	dd 20       	and	r13, r13
     f96:	11 f0       	breq	.+4      	; 0xf9c <_ZN12OrangutanLCD4sendEhhh+0x3a>
     f98:	5a 9a       	sbi	0x0b, 2	; 11
     f9a:	01 c0       	rjmp	.+2      	; 0xf9e <_ZN12OrangutanLCD4sendEhhh+0x3c>
     f9c:	5a 98       	cbi	0x0b, 2	; 11
     f9e:	94 b1       	in	r25, 0x04	; 4
     fa0:	92 63       	ori	r25, 0x32	; 50
     fa2:	94 b9       	out	0x04, r25	; 4
     fa4:	57 9a       	sbi	0x0a, 7	; 10
     fa6:	81 e0       	ldi	r24, 0x01	; 1
     fa8:	e8 16       	cp	r14, r24
     faa:	29 f0       	breq	.+10     	; 0xfb6 <_ZN12OrangutanLCD4sendEhhh+0x54>
     fac:	8c 2f       	mov	r24, r28
     fae:	82 95       	swap	r24
     fb0:	8f 70       	andi	r24, 0x0F	; 15
     fb2:	0e 94 93 07 	call	0xf26	; 0xf26 <_ZN12OrangutanLCD8sendDataEh>
     fb6:	8c 2f       	mov	r24, r28
     fb8:	8f 70       	andi	r24, 0x0F	; 15
     fba:	0e 94 93 07 	call	0xf26	; 0xf26 <_ZN12OrangutanLCD8sendDataEh>
     fbe:	fa b8       	out	0x0a, r15	; 10
     fc0:	0b b9       	out	0x0b, r16	; 11
     fc2:	14 b9       	out	0x04, r17	; 4
     fc4:	d5 b9       	out	0x05, r29	; 5
     fc6:	cd b7       	in	r28, 0x3d	; 61
     fc8:	de b7       	in	r29, 0x3e	; 62
     fca:	e7 e0       	ldi	r30, 0x07	; 7
     fcc:	0c 94 6a 10 	jmp	0x20d4	; 0x20d4 <__epilogue_restores__+0x16>

00000fd0 <_ZN12OrangutanLCD8send_cmdEh>:
     fd0:	42 e0       	ldi	r20, 0x02	; 2
     fd2:	60 e0       	ldi	r22, 0x00	; 0
     fd4:	0e 94 b1 07 	call	0xf62	; 0xf62 <_ZN12OrangutanLCD4sendEhhh>
     fd8:	08 95       	ret

00000fda <_ZN12OrangutanLCD9send_dataEh>:
     fda:	42 e0       	ldi	r20, 0x02	; 2
     fdc:	61 e0       	ldi	r22, 0x01	; 1
     fde:	0e 94 b1 07 	call	0xf62	; 0xf62 <_ZN12OrangutanLCD4sendEhhh>
     fe2:	08 95       	ret

00000fe4 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
     fe4:	41 e0       	ldi	r20, 0x01	; 1
     fe6:	60 e0       	ldi	r22, 0x00	; 0
     fe8:	0e 94 b1 07 	call	0xf62	; 0xf62 <_ZN12OrangutanLCD4sendEhhh>
     fec:	08 95       	ret

00000fee <_ZN12OrangutanLCD5init2Ev>:
     fee:	80 e1       	ldi	r24, 0x10	; 16
     ff0:	97 e2       	ldi	r25, 0x27	; 39
     ff2:	a0 e0       	ldi	r26, 0x00	; 0
     ff4:	b0 e0       	ldi	r27, 0x00	; 0
     ff6:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
     ffa:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <__data_end+0x1>
     ffe:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <__data_end+0x2>
    1002:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <__data_end+0x3>
    1006:	52 9a       	sbi	0x0a, 2	; 10
    1008:	20 9a       	sbi	0x04, 0	; 4
    100a:	54 9a       	sbi	0x0a, 4	; 10
    100c:	8e e1       	ldi	r24, 0x1E	; 30
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	0e 94 2a 0a 	call	0x1454	; 0x1454 <delay_ms>
    1014:	83 e0       	ldi	r24, 0x03	; 3
    1016:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    101a:	86 e0       	ldi	r24, 0x06	; 6
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	0e 94 2a 0a 	call	0x1454	; 0x1454 <delay_ms>
    1022:	83 e0       	ldi	r24, 0x03	; 3
    1024:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1028:	82 e0       	ldi	r24, 0x02	; 2
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	0e 94 2a 0a 	call	0x1454	; 0x1454 <delay_ms>
    1030:	83 e0       	ldi	r24, 0x03	; 3
    1032:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1036:	82 e0       	ldi	r24, 0x02	; 2
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	0e 94 2a 0a 	call	0x1454	; 0x1454 <delay_ms>
    103e:	82 e0       	ldi	r24, 0x02	; 2
    1040:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1044:	82 e0       	ldi	r24, 0x02	; 2
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	0e 94 2a 0a 	call	0x1454	; 0x1454 <delay_ms>
    104c:	88 e2       	ldi	r24, 0x28	; 40
    104e:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <_ZN12OrangutanLCD8send_cmdEh>
    1052:	88 e0       	ldi	r24, 0x08	; 8
    1054:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <_ZN12OrangutanLCD8send_cmdEh>
    1058:	81 e0       	ldi	r24, 0x01	; 1
    105a:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <_ZN12OrangutanLCD8send_cmdEh>
    105e:	86 e0       	ldi	r24, 0x06	; 6
    1060:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <_ZN12OrangutanLCD8send_cmdEh>
    1064:	8c e0       	ldi	r24, 0x0C	; 12
    1066:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <_ZN12OrangutanLCD8send_cmdEh>
    106a:	08 95       	ret

0000106c <_ZN12OrangutanLCD5clearEv>:
    106c:	81 e0       	ldi	r24, 0x01	; 1
    106e:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <_ZN12OrangutanLCD8send_cmdEh>
    1072:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <printf_chars>
    1076:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <printf_chars+0x1>
    107a:	89 2b       	or	r24, r25
    107c:	f9 f0       	breq	.+62     	; 0x10bc <_ZN12OrangutanLCD5clearEv+0x50>
    107e:	60 e0       	ldi	r22, 0x00	; 0
    1080:	a0 e2       	ldi	r26, 0x20	; 32
    1082:	26 2f       	mov	r18, r22
    1084:	30 e0       	ldi	r19, 0x00	; 0
    1086:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <numLCDCols>
    108a:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <numLCDRows>
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	01 97       	sbiw	r24, 0x01	; 1
    1092:	78 9f       	mul	r23, r24
    1094:	a0 01       	movw	r20, r0
    1096:	79 9f       	mul	r23, r25
    1098:	50 0d       	add	r21, r0
    109a:	11 24       	eor	r1, r1
    109c:	24 17       	cp	r18, r20
    109e:	35 07       	cpc	r19, r21
    10a0:	4c f4       	brge	.+18     	; 0x10b4 <_ZN12OrangutanLCD5clearEv+0x48>
    10a2:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <printf_chars>
    10a6:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <printf_chars+0x1>
    10aa:	e2 0f       	add	r30, r18
    10ac:	f3 1f       	adc	r31, r19
    10ae:	a0 83       	st	Z, r26
    10b0:	6f 5f       	subi	r22, 0xFF	; 255
    10b2:	e7 cf       	rjmp	.-50     	; 0x1082 <_ZN12OrangutanLCD5clearEv+0x16>
    10b4:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <col>
    10b8:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <row>
    10bc:	08 95       	ret

000010be <clear>:
    10be:	0e 94 36 08 	call	0x106c	; 0x106c <_ZN12OrangutanLCD5clearEv>
    10c2:	08 95       	ret

000010c4 <_ZN12OrangutanLCD5printEPKc>:
    10c4:	cf 93       	push	r28
    10c6:	df 93       	push	r29
    10c8:	ec 01       	movw	r28, r24
    10ca:	89 91       	ld	r24, Y+
    10cc:	88 23       	and	r24, r24
    10ce:	19 f0       	breq	.+6      	; 0x10d6 <_ZN12OrangutanLCD5printEPKc+0x12>
    10d0:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN12OrangutanLCD9send_dataEh>
    10d4:	fa cf       	rjmp	.-12     	; 0x10ca <_ZN12OrangutanLCD5printEPKc+0x6>
    10d6:	df 91       	pop	r29
    10d8:	cf 91       	pop	r28
    10da:	08 95       	ret

000010dc <print>:
    10dc:	0e 94 62 08 	call	0x10c4	; 0x10c4 <_ZN12OrangutanLCD5printEPKc>
    10e0:	08 95       	ret

000010e2 <_ZN12OrangutanLCD5printEm>:
    10e2:	aa e0       	ldi	r26, 0x0A	; 10
    10e4:	b0 e0       	ldi	r27, 0x00	; 0
    10e6:	e7 e7       	ldi	r30, 0x77	; 119
    10e8:	f8 e0       	ldi	r31, 0x08	; 8
    10ea:	0c 94 4d 10 	jmp	0x209a	; 0x209a <__prologue_saves__+0x14>
    10ee:	1a e0       	ldi	r17, 0x0A	; 10
    10f0:	5a e0       	ldi	r21, 0x0A	; 10
    10f2:	c5 2e       	mov	r12, r21
    10f4:	d1 2c       	mov	r13, r1
    10f6:	e1 2c       	mov	r14, r1
    10f8:	f1 2c       	mov	r15, r1
    10fa:	06 2f       	mov	r16, r22
    10fc:	a7 01       	movw	r20, r14
    10fe:	96 01       	movw	r18, r12
    1100:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <__udivmodsi4>
    1104:	ca 01       	movw	r24, r20
    1106:	b9 01       	movw	r22, r18
    1108:	11 50       	subi	r17, 0x01	; 1
    110a:	e1 e0       	ldi	r30, 0x01	; 1
    110c:	f0 e0       	ldi	r31, 0x00	; 0
    110e:	ec 0f       	add	r30, r28
    1110:	fd 1f       	adc	r31, r29
    1112:	e1 0f       	add	r30, r17
    1114:	f1 1d       	adc	r31, r1
    1116:	00 5d       	subi	r16, 0xD0	; 208
    1118:	2a e0       	ldi	r18, 0x0A	; 10
    111a:	62 9f       	mul	r22, r18
    111c:	00 19       	sub	r16, r0
    111e:	11 24       	eor	r1, r1
    1120:	00 83       	st	Z, r16
    1122:	61 15       	cp	r22, r1
    1124:	71 05       	cpc	r23, r1
    1126:	81 05       	cpc	r24, r1
    1128:	91 05       	cpc	r25, r1
    112a:	39 f7       	brne	.-50     	; 0x10fa <_ZN12OrangutanLCD5printEm+0x18>
    112c:	1a 30       	cpi	r17, 0x0A	; 10
    112e:	58 f4       	brcc	.+22     	; 0x1146 <_ZN12OrangutanLCD5printEm+0x64>
    1130:	e1 e0       	ldi	r30, 0x01	; 1
    1132:	f0 e0       	ldi	r31, 0x00	; 0
    1134:	ec 0f       	add	r30, r28
    1136:	fd 1f       	adc	r31, r29
    1138:	e1 0f       	add	r30, r17
    113a:	f1 1d       	adc	r31, r1
    113c:	80 81       	ld	r24, Z
    113e:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN12OrangutanLCD9send_dataEh>
    1142:	1f 5f       	subi	r17, 0xFF	; 255
    1144:	f3 cf       	rjmp	.-26     	; 0x112c <_ZN12OrangutanLCD5printEm+0x4a>
    1146:	2a 96       	adiw	r28, 0x0a	; 10
    1148:	e8 e0       	ldi	r30, 0x08	; 8
    114a:	0c 94 69 10 	jmp	0x20d2	; 0x20d2 <__epilogue_restores__+0x14>

0000114e <_ZN12OrangutanLCD5printEl>:
    114e:	cf 92       	push	r12
    1150:	df 92       	push	r13
    1152:	ef 92       	push	r14
    1154:	ff 92       	push	r15
    1156:	6b 01       	movw	r12, r22
    1158:	7c 01       	movw	r14, r24
    115a:	97 ff       	sbrs	r25, 7
    115c:	0b c0       	rjmp	.+22     	; 0x1174 <_ZN12OrangutanLCD5printEl+0x26>
    115e:	f0 94       	com	r15
    1160:	e0 94       	com	r14
    1162:	d0 94       	com	r13
    1164:	c0 94       	com	r12
    1166:	c1 1c       	adc	r12, r1
    1168:	d1 1c       	adc	r13, r1
    116a:	e1 1c       	adc	r14, r1
    116c:	f1 1c       	adc	r15, r1
    116e:	8d e2       	ldi	r24, 0x2D	; 45
    1170:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN12OrangutanLCD9send_dataEh>
    1174:	c7 01       	movw	r24, r14
    1176:	b6 01       	movw	r22, r12
    1178:	0e 94 71 08 	call	0x10e2	; 0x10e2 <_ZN12OrangutanLCD5printEm>
    117c:	ff 90       	pop	r15
    117e:	ef 90       	pop	r14
    1180:	df 90       	pop	r13
    1182:	cf 90       	pop	r12
    1184:	08 95       	ret

00001186 <print_long>:
    1186:	0e 94 a7 08 	call	0x114e	; 0x114e <_ZN12OrangutanLCD5printEl>
    118a:	08 95       	ret

0000118c <_ZN12OrangutanLCD6gotoXYEhh>:
    118c:	a5 e0       	ldi	r26, 0x05	; 5
    118e:	b0 e0       	ldi	r27, 0x00	; 0
    1190:	ec ec       	ldi	r30, 0xCC	; 204
    1192:	f8 e0       	ldi	r31, 0x08	; 8
    1194:	0c 94 52 10 	jmp	0x20a4	; 0x20a4 <__prologue_saves__+0x1e>
    1198:	18 2f       	mov	r17, r24
    119a:	80 e8       	ldi	r24, 0x80	; 128
    119c:	89 83       	std	Y+1, r24	; 0x01
    119e:	80 ec       	ldi	r24, 0xC0	; 192
    11a0:	8a 83       	std	Y+2, r24	; 0x02
    11a2:	84 e9       	ldi	r24, 0x94	; 148
    11a4:	8b 83       	std	Y+3, r24	; 0x03
    11a6:	84 ed       	ldi	r24, 0xD4	; 212
    11a8:	8c 83       	std	Y+4, r24	; 0x04
    11aa:	fe 01       	movw	r30, r28
    11ac:	e6 0f       	add	r30, r22
    11ae:	f1 1d       	adc	r31, r1
    11b0:	81 81       	ldd	r24, Z+1	; 0x01
    11b2:	81 0f       	add	r24, r17
    11b4:	6d 83       	std	Y+5, r22	; 0x05
    11b6:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <_ZN12OrangutanLCD8send_cmdEh>
    11ba:	10 93 3e 01 	sts	0x013E, r17	; 0x80013e <col>
    11be:	6d 81       	ldd	r22, Y+5	; 0x05
    11c0:	60 93 3f 01 	sts	0x013F, r22	; 0x80013f <row>
    11c4:	25 96       	adiw	r28, 0x05	; 5
    11c6:	e3 e0       	ldi	r30, 0x03	; 3
    11c8:	0c 94 6e 10 	jmp	0x20dc	; 0x20dc <__epilogue_restores__+0x1e>

000011cc <lcd_goto_xy>:
    11cc:	0e 94 c6 08 	call	0x118c	; 0x118c <_ZN12OrangutanLCD6gotoXYEhh>
    11d0:	08 95       	ret

000011d2 <_ZN16OrangutanDigital9setOutputEhh>:
    11d2:	88 30       	cpi	r24, 0x08	; 8
    11d4:	58 f4       	brcc	.+22     	; 0x11ec <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    11d6:	91 e0       	ldi	r25, 0x01	; 1
    11d8:	01 c0       	rjmp	.+2      	; 0x11dc <_ZN16OrangutanDigital9setOutputEhh+0xa>
    11da:	99 0f       	add	r25, r25
    11dc:	8a 95       	dec	r24
    11de:	ea f7       	brpl	.-6      	; 0x11da <_ZN16OrangutanDigital9setOutputEhh+0x8>
    11e0:	89 2f       	mov	r24, r25
    11e2:	aa e2       	ldi	r26, 0x2A	; 42
    11e4:	b0 e0       	ldi	r27, 0x00	; 0
    11e6:	eb e2       	ldi	r30, 0x2B	; 43
    11e8:	f0 e0       	ldi	r31, 0x00	; 0
    11ea:	21 c0       	rjmp	.+66     	; 0x122e <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    11ec:	8e 30       	cpi	r24, 0x0E	; 14
    11ee:	60 f4       	brcc	.+24     	; 0x1208 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    11f0:	98 ef       	ldi	r25, 0xF8	; 248
    11f2:	98 0f       	add	r25, r24
    11f4:	81 e0       	ldi	r24, 0x01	; 1
    11f6:	01 c0       	rjmp	.+2      	; 0x11fa <_ZN16OrangutanDigital9setOutputEhh+0x28>
    11f8:	88 0f       	add	r24, r24
    11fa:	9a 95       	dec	r25
    11fc:	ea f7       	brpl	.-6      	; 0x11f8 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    11fe:	a4 e2       	ldi	r26, 0x24	; 36
    1200:	b0 e0       	ldi	r27, 0x00	; 0
    1202:	e5 e2       	ldi	r30, 0x25	; 37
    1204:	f0 e0       	ldi	r31, 0x00	; 0
    1206:	13 c0       	rjmp	.+38     	; 0x122e <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1208:	85 31       	cpi	r24, 0x15	; 21
    120a:	60 f4       	brcc	.+24     	; 0x1224 <_ZN16OrangutanDigital9setOutputEhh+0x52>
    120c:	92 ef       	ldi	r25, 0xF2	; 242
    120e:	98 0f       	add	r25, r24
    1210:	81 e0       	ldi	r24, 0x01	; 1
    1212:	01 c0       	rjmp	.+2      	; 0x1216 <_ZN16OrangutanDigital9setOutputEhh+0x44>
    1214:	88 0f       	add	r24, r24
    1216:	9a 95       	dec	r25
    1218:	ea f7       	brpl	.-6      	; 0x1214 <_ZN16OrangutanDigital9setOutputEhh+0x42>
    121a:	a7 e2       	ldi	r26, 0x27	; 39
    121c:	b0 e0       	ldi	r27, 0x00	; 0
    121e:	e8 e2       	ldi	r30, 0x28	; 40
    1220:	f0 e0       	ldi	r31, 0x00	; 0
    1222:	05 c0       	rjmp	.+10     	; 0x122e <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1224:	80 e0       	ldi	r24, 0x00	; 0
    1226:	a0 e0       	ldi	r26, 0x00	; 0
    1228:	b0 e0       	ldi	r27, 0x00	; 0
    122a:	e0 e0       	ldi	r30, 0x00	; 0
    122c:	f0 e0       	ldi	r31, 0x00	; 0
    122e:	6f 3f       	cpi	r22, 0xFF	; 255
    1230:	19 f4       	brne	.+6      	; 0x1238 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    1232:	90 81       	ld	r25, Z
    1234:	98 27       	eor	r25, r24
    1236:	09 c0       	rjmp	.+18     	; 0x124a <_ZN16OrangutanDigital9setOutputEhh+0x78>
    1238:	66 23       	and	r22, r22
    123a:	19 f0       	breq	.+6      	; 0x1242 <_ZN16OrangutanDigital9setOutputEhh+0x70>
    123c:	90 81       	ld	r25, Z
    123e:	98 2b       	or	r25, r24
    1240:	04 c0       	rjmp	.+8      	; 0x124a <_ZN16OrangutanDigital9setOutputEhh+0x78>
    1242:	20 81       	ld	r18, Z
    1244:	98 2f       	mov	r25, r24
    1246:	90 95       	com	r25
    1248:	92 23       	and	r25, r18
    124a:	90 83       	st	Z, r25
    124c:	9c 91       	ld	r25, X
    124e:	98 2b       	or	r25, r24
    1250:	9c 93       	st	X, r25
    1252:	08 95       	ret

00001254 <_ZN15OrangutanMotors5init2Ev>:
    1254:	83 ef       	ldi	r24, 0xF3	; 243
    1256:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    125a:	84 bd       	out	0x24, r24	; 36
    125c:	82 e0       	ldi	r24, 0x02	; 2
    125e:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1262:	85 bd       	out	0x25, r24	; 37
    1264:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    1268:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    126c:	18 bc       	out	0x28, r1	; 40
    126e:	17 bc       	out	0x27, r1	; 39
    1270:	60 e0       	ldi	r22, 0x00	; 0
    1272:	86 e0       	ldi	r24, 0x06	; 6
    1274:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <_ZN16OrangutanDigital9setOutputEhh>
    1278:	60 e0       	ldi	r22, 0x00	; 0
    127a:	85 e0       	ldi	r24, 0x05	; 5
    127c:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <_ZN16OrangutanDigital9setOutputEhh>
    1280:	60 e0       	ldi	r22, 0x00	; 0
    1282:	8b e0       	ldi	r24, 0x0B	; 11
    1284:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <_ZN16OrangutanDigital9setOutputEhh>
    1288:	60 e0       	ldi	r22, 0x00	; 0
    128a:	83 e0       	ldi	r24, 0x03	; 3
    128c:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <_ZN16OrangutanDigital9setOutputEhh>
    1290:	08 95       	ret

00001292 <_ZN15OrangutanMotors4initEv>:
    1292:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <_ZZN15OrangutanMotors4initEvE11initialized>
    1296:	81 11       	cpse	r24, r1
    1298:	05 c0       	rjmp	.+10     	; 0x12a4 <_ZN15OrangutanMotors4initEv+0x12>
    129a:	81 e0       	ldi	r24, 0x01	; 1
    129c:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <_ZZN15OrangutanMotors4initEvE11initialized>
    12a0:	0e 94 2a 09 	call	0x1254	; 0x1254 <_ZN15OrangutanMotors5init2Ev>
    12a4:	08 95       	ret

000012a6 <_ZN15OrangutanMotors10setM1SpeedEi>:
    12a6:	cf 93       	push	r28
    12a8:	df 93       	push	r29
    12aa:	ec 01       	movw	r28, r24
    12ac:	0e 94 49 09 	call	0x1292	; 0x1292 <_ZN15OrangutanMotors4initEv>
    12b0:	d7 ff       	sbrs	r29, 7
    12b2:	05 c0       	rjmp	.+10     	; 0x12be <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    12b4:	d1 95       	neg	r29
    12b6:	c1 95       	neg	r28
    12b8:	d1 09       	sbc	r29, r1
    12ba:	81 e0       	ldi	r24, 0x01	; 1
    12bc:	01 c0       	rjmp	.+2      	; 0x12c0 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    12be:	80 e0       	ldi	r24, 0x00	; 0
    12c0:	cf 3f       	cpi	r28, 0xFF	; 255
    12c2:	d1 05       	cpc	r29, r1
    12c4:	19 f0       	breq	.+6      	; 0x12cc <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    12c6:	14 f0       	brlt	.+4      	; 0x12cc <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    12c8:	cf ef       	ldi	r28, 0xFF	; 255
    12ca:	d0 e0       	ldi	r29, 0x00	; 0
    12cc:	88 23       	and	r24, r24
    12ce:	19 f0       	breq	.+6      	; 0x12d6 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    12d0:	18 bc       	out	0x28, r1	; 40
    12d2:	c7 bd       	out	0x27, r28	; 39
    12d4:	02 c0       	rjmp	.+4      	; 0x12da <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    12d6:	c8 bd       	out	0x28, r28	; 40
    12d8:	17 bc       	out	0x27, r1	; 39
    12da:	df 91       	pop	r29
    12dc:	cf 91       	pop	r28
    12de:	08 95       	ret

000012e0 <_ZN15OrangutanMotors10setM2SpeedEi>:
    12e0:	cf 93       	push	r28
    12e2:	df 93       	push	r29
    12e4:	ec 01       	movw	r28, r24
    12e6:	0e 94 49 09 	call	0x1292	; 0x1292 <_ZN15OrangutanMotors4initEv>
    12ea:	d7 ff       	sbrs	r29, 7
    12ec:	05 c0       	rjmp	.+10     	; 0x12f8 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    12ee:	d1 95       	neg	r29
    12f0:	c1 95       	neg	r28
    12f2:	d1 09       	sbc	r29, r1
    12f4:	81 e0       	ldi	r24, 0x01	; 1
    12f6:	01 c0       	rjmp	.+2      	; 0x12fa <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    12f8:	80 e0       	ldi	r24, 0x00	; 0
    12fa:	cf 3f       	cpi	r28, 0xFF	; 255
    12fc:	d1 05       	cpc	r29, r1
    12fe:	19 f0       	breq	.+6      	; 0x1306 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1300:	14 f0       	brlt	.+4      	; 0x1306 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1302:	cf ef       	ldi	r28, 0xFF	; 255
    1304:	d0 e0       	ldi	r29, 0x00	; 0
    1306:	88 23       	and	r24, r24
    1308:	29 f0       	breq	.+10     	; 0x1314 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    130a:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    130e:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    1312:	04 c0       	rjmp	.+8      	; 0x131c <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    1314:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    1318:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    131c:	df 91       	pop	r29
    131e:	cf 91       	pop	r28
    1320:	08 95       	ret

00001322 <_ZN15OrangutanMotors9setSpeedsEii>:
    1322:	cf 93       	push	r28
    1324:	df 93       	push	r29
    1326:	eb 01       	movw	r28, r22
    1328:	0e 94 53 09 	call	0x12a6	; 0x12a6 <_ZN15OrangutanMotors10setM1SpeedEi>
    132c:	ce 01       	movw	r24, r28
    132e:	0e 94 70 09 	call	0x12e0	; 0x12e0 <_ZN15OrangutanMotors10setM2SpeedEi>
    1332:	df 91       	pop	r29
    1334:	cf 91       	pop	r28
    1336:	08 95       	ret

00001338 <set_motors>:
    1338:	0e 94 91 09 	call	0x1322	; 0x1322 <_ZN15OrangutanMotors9setSpeedsEii>
    133c:	08 95       	ret

0000133e <_ZN20OrangutanPushbuttons5init2Ev>:
    133e:	84 b1       	in	r24, 0x04	; 4
    1340:	8d 7c       	andi	r24, 0xCD	; 205
    1342:	84 b9       	out	0x04, r24	; 4
    1344:	85 b1       	in	r24, 0x05	; 5
    1346:	82 63       	ori	r24, 0x32	; 50
    1348:	85 b9       	out	0x05, r24	; 5
    134a:	85 e0       	ldi	r24, 0x05	; 5
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	6f 93       	push	r22
    1350:	64 e0       	ldi	r22, 0x04	; 4
    1352:	6a 95       	dec	r22
    1354:	f1 f7       	brne	.-4      	; 0x1352 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    1356:	6f 91       	pop	r22
    1358:	01 97       	sbiw	r24, 0x01	; 1
    135a:	c9 f7       	brne	.-14     	; 0x134e <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    135c:	08 95       	ret

0000135e <_ZN20OrangutanPushbuttons4initEv>:
    135e:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    1362:	81 11       	cpse	r24, r1
    1364:	05 c0       	rjmp	.+10     	; 0x1370 <_ZN20OrangutanPushbuttons4initEv+0x12>
    1366:	81 e0       	ldi	r24, 0x01	; 1
    1368:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    136c:	0e 94 9f 09 	call	0x133e	; 0x133e <_ZN20OrangutanPushbuttons5init2Ev>
    1370:	08 95       	ret

00001372 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    1372:	cf 93       	push	r28
    1374:	c8 2f       	mov	r28, r24
    1376:	0e 94 af 09 	call	0x135e	; 0x135e <_ZN20OrangutanPushbuttons4initEv>
    137a:	83 b1       	in	r24, 0x03	; 3
    137c:	8c 23       	and	r24, r28
    137e:	e9 f3       	breq	.-6      	; 0x137a <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1380:	8a e0       	ldi	r24, 0x0A	; 10
    1382:	90 e0       	ldi	r25, 0x00	; 0
    1384:	0e 94 2a 0a 	call	0x1454	; 0x1454 <delay_ms>
    1388:	83 b1       	in	r24, 0x03	; 3
    138a:	8c 23       	and	r24, r28
    138c:	b1 f3       	breq	.-20     	; 0x137a <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    138e:	83 b1       	in	r24, 0x03	; 3
    1390:	8c 23       	and	r24, r28
    1392:	cf 91       	pop	r28
    1394:	08 95       	ret

00001396 <wait_for_button_release>:
    1396:	0e 94 b9 09 	call	0x1372	; 0x1372 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    139a:	08 95       	ret

0000139c <_ZN20OrangutanPushbuttons9isPressedEh>:
    139c:	a1 e0       	ldi	r26, 0x01	; 1
    139e:	b0 e0       	ldi	r27, 0x00	; 0
    13a0:	e4 ed       	ldi	r30, 0xD4	; 212
    13a2:	f9 e0       	ldi	r31, 0x09	; 9
    13a4:	0c 94 53 10 	jmp	0x20a6	; 0x20a6 <__prologue_saves__+0x20>
    13a8:	89 83       	std	Y+1, r24	; 0x01
    13aa:	0e 94 af 09 	call	0x135e	; 0x135e <_ZN20OrangutanPushbuttons4initEv>
    13ae:	93 b1       	in	r25, 0x03	; 3
    13b0:	90 95       	com	r25
    13b2:	89 81       	ldd	r24, Y+1	; 0x01
    13b4:	89 23       	and	r24, r25
    13b6:	21 96       	adiw	r28, 0x01	; 1
    13b8:	e2 e0       	ldi	r30, 0x02	; 2
    13ba:	0c 94 6f 10 	jmp	0x20de	; 0x20de <__epilogue_restores__+0x20>

000013be <button_is_pressed>:
    13be:	0e 94 ce 09 	call	0x139c	; 0x139c <_ZN20OrangutanPushbuttons9isPressedEh>
    13c2:	08 95       	ret

000013c4 <__vector_9>:
    13c4:	2f 92       	push	r2
    13c6:	8f 93       	push	r24
    13c8:	9f 93       	push	r25
    13ca:	2f b6       	in	r2, 0x3f	; 63
    13cc:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <tickCount+0x1>
    13d0:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <tickCount+0x2>
    13d4:	01 96       	adiw	r24, 0x01	; 1
    13d6:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <tickCount+0x1>
    13da:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <tickCount+0x2>
    13de:	90 e0       	ldi	r25, 0x00	; 0
    13e0:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <tickCount+0x3>
    13e4:	89 1f       	adc	r24, r25
    13e6:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <tickCount+0x3>
    13ea:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <us_over_10+0x1>
    13ee:	9c 5f       	subi	r25, 0xFC	; 252
    13f0:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <us_over_10+0x1>
    13f4:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <us_over_10>
    13f8:	80 51       	subi	r24, 0x10	; 16
    13fa:	97 42       	sbci	r25, 0x27	; 39
    13fc:	c0 f0       	brcs	.+48     	; 0x142e <end>
    13fe:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <us_over_10+0x1>
    1402:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <us_over_10>
    1406:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <msCounter>
    140a:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <msCounter+0x1>
    140e:	01 96       	adiw	r24, 0x01	; 1
    1410:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <msCounter>
    1414:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <msCounter+0x1>
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <msCounter+0x2>
    141e:	89 1f       	adc	r24, r25
    1420:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <msCounter+0x2>
    1424:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <msCounter+0x3>
    1428:	89 1f       	adc	r24, r25
    142a:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <msCounter+0x3>

0000142e <end>:
    142e:	2f be       	out	0x3f, r2	; 63
    1430:	9f 91       	pop	r25
    1432:	8f 91       	pop	r24
    1434:	2f 90       	pop	r2
    1436:	18 95       	reti

00001438 <_ZN13OrangutanTime17delayMillisecondsEj>:
    1438:	28 ee       	ldi	r18, 0xE8	; 232
    143a:	33 e0       	ldi	r19, 0x03	; 3
    143c:	01 97       	sbiw	r24, 0x01	; 1
    143e:	48 f0       	brcs	.+18     	; 0x1452 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    1440:	f9 01       	movw	r30, r18
    1442:	6f 93       	push	r22
    1444:	64 e0       	ldi	r22, 0x04	; 4
    1446:	6a 95       	dec	r22
    1448:	f1 f7       	brne	.-4      	; 0x1446 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    144a:	6f 91       	pop	r22
    144c:	31 97       	sbiw	r30, 0x01	; 1
    144e:	c9 f7       	brne	.-14     	; 0x1442 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    1450:	f5 cf       	rjmp	.-22     	; 0x143c <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    1452:	08 95       	ret

00001454 <delay_ms>:
    1454:	0e 94 1c 0a 	call	0x1438	; 0x1438 <_ZN13OrangutanTime17delayMillisecondsEj>
    1458:	08 95       	ret

0000145a <_ZN13OrangutanTime5init2Ev>:
    145a:	e0 e7       	ldi	r30, 0x70	; 112
    145c:	f0 e0       	ldi	r31, 0x00	; 0
    145e:	80 81       	ld	r24, Z
    1460:	8e 7f       	andi	r24, 0xFE	; 254
    1462:	80 83       	st	Z, r24
    1464:	a0 eb       	ldi	r26, 0xB0	; 176
    1466:	b0 e0       	ldi	r27, 0x00	; 0
    1468:	8c 91       	ld	r24, X
    146a:	83 60       	ori	r24, 0x03	; 3
    146c:	8c 93       	st	X, r24
    146e:	a1 eb       	ldi	r26, 0xB1	; 177
    1470:	b0 e0       	ldi	r27, 0x00	; 0
    1472:	8c 91       	ld	r24, X
    1474:	80 7f       	andi	r24, 0xF0	; 240
    1476:	8c 93       	st	X, r24
    1478:	8c 91       	ld	r24, X
    147a:	82 60       	ori	r24, 0x02	; 2
    147c:	8c 93       	st	X, r24
    147e:	b8 9a       	sbi	0x17, 0	; 23
    1480:	80 81       	ld	r24, Z
    1482:	81 60       	ori	r24, 0x01	; 1
    1484:	80 83       	st	Z, r24
    1486:	78 94       	sei
    1488:	08 95       	ret

0000148a <_ZN13OrangutanTime4initEv>:
    148a:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <_ZZN13OrangutanTime4initEvE11initialized>
    148e:	81 11       	cpse	r24, r1
    1490:	05 c0       	rjmp	.+10     	; 0x149c <_ZN13OrangutanTime4initEv+0x12>
    1492:	81 e0       	ldi	r24, 0x01	; 1
    1494:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <_ZZN13OrangutanTime4initEvE11initialized>
    1498:	0e 94 2d 0a 	call	0x145a	; 0x145a <_ZN13OrangutanTime5init2Ev>
    149c:	08 95       	ret

0000149e <_ZN13OrangutanTime5resetEv>:
    149e:	0e 94 45 0a 	call	0x148a	; 0x148a <_ZN13OrangutanTime4initEv>
    14a2:	e0 e7       	ldi	r30, 0x70	; 112
    14a4:	f0 e0       	ldi	r31, 0x00	; 0
    14a6:	80 81       	ld	r24, Z
    14a8:	8e 7f       	andi	r24, 0xFE	; 254
    14aa:	80 83       	st	Z, r24
    14ac:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <msCounter>
    14b0:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <msCounter+0x1>
    14b4:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <msCounter+0x2>
    14b8:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <msCounter+0x3>
    14bc:	10 92 43 01 	sts	0x0143, r1	; 0x800143 <us_over_10+0x1>
    14c0:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <us_over_10>
    14c4:	80 81       	ld	r24, Z
    14c6:	81 60       	ori	r24, 0x01	; 1
    14c8:	80 83       	st	Z, r24
    14ca:	08 95       	ret

000014cc <calibrate_line_sensors>:
    14cc:	68 2f       	mov	r22, r24
    14ce:	8c e4       	ldi	r24, 0x4C	; 76
    14d0:	91 e0       	ldi	r25, 0x01	; 1
    14d2:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <_ZN16PololuQTRSensors9calibrateEh>
    14d6:	08 95       	ret

000014d8 <read_line>:
    14d8:	46 2f       	mov	r20, r22
    14da:	20 e0       	ldi	r18, 0x00	; 0
    14dc:	bc 01       	movw	r22, r24
    14de:	8c e4       	ldi	r24, 0x4C	; 76
    14e0:	91 e0       	ldi	r25, 0x01	; 1
    14e2:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <_ZN16PololuQTRSensors8readLineEPjhh>
    14e6:	08 95       	ret

000014e8 <_ZN9Pololu3pi4initEjh>:
    14e8:	0f 93       	push	r16
    14ea:	cf 93       	push	r28
    14ec:	df 93       	push	r29
    14ee:	00 d0       	rcall	.+0      	; 0x14f0 <_ZN9Pololu3pi4initEjh+0x8>
    14f0:	00 d0       	rcall	.+0      	; 0x14f2 <_ZN9Pololu3pi4initEjh+0xa>
    14f2:	1f 92       	push	r1
    14f4:	cd b7       	in	r28, 0x3d	; 61
    14f6:	de b7       	in	r29, 0x3e	; 62
    14f8:	9c 01       	movw	r18, r24
    14fa:	85 e0       	ldi	r24, 0x05	; 5
    14fc:	ee e1       	ldi	r30, 0x1E	; 30
    14fe:	f1 e0       	ldi	r31, 0x01	; 1
    1500:	de 01       	movw	r26, r28
    1502:	11 96       	adiw	r26, 0x01	; 1
    1504:	01 90       	ld	r0, Z+
    1506:	0d 92       	st	X+, r0
    1508:	8a 95       	dec	r24
    150a:	e1 f7       	brne	.-8      	; 0x1504 <_ZN9Pololu3pi4initEjh+0x1c>
    150c:	66 23       	and	r22, r22
    150e:	11 f0       	breq	.+4      	; 0x1514 <_ZN9Pololu3pi4initEjh+0x2c>
    1510:	0f ef       	ldi	r16, 0xFF	; 255
    1512:	01 c0       	rjmp	.+2      	; 0x1516 <_ZN9Pololu3pi4initEjh+0x2e>
    1514:	03 e1       	ldi	r16, 0x13	; 19
    1516:	45 e0       	ldi	r20, 0x05	; 5
    1518:	be 01       	movw	r22, r28
    151a:	6f 5f       	subi	r22, 0xFF	; 255
    151c:	7f 4f       	sbci	r23, 0xFF	; 255
    151e:	8c e4       	ldi	r24, 0x4C	; 76
    1520:	91 e0       	ldi	r25, 0x01	; 1
    1522:	0e 94 46 0b 	call	0x168c	; 0x168c <_ZN18PololuQTRSensorsRC4initEPhhjh>
    1526:	8c e4       	ldi	r24, 0x4C	; 76
    1528:	91 e0       	ldi	r25, 0x01	; 1
    152a:	0e 94 1d 0b 	call	0x163a	; 0x163a <_ZN16PololuQTRSensors11emittersOffEv>
    152e:	0e 94 4f 0a 	call	0x149e	; 0x149e <_ZN13OrangutanTime5resetEv>
    1532:	0f 90       	pop	r0
    1534:	0f 90       	pop	r0
    1536:	0f 90       	pop	r0
    1538:	0f 90       	pop	r0
    153a:	0f 90       	pop	r0
    153c:	df 91       	pop	r29
    153e:	cf 91       	pop	r28
    1540:	0f 91       	pop	r16
    1542:	08 95       	ret

00001544 <pololu_3pi_init>:
    1544:	60 e0       	ldi	r22, 0x00	; 0
    1546:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <_ZN9Pololu3pi4initEjh>
    154a:	08 95       	ret

0000154c <_GLOBAL__sub_D_pololu_3pi_init>:
    154c:	8c e4       	ldi	r24, 0x4C	; 76
    154e:	91 e0       	ldi	r25, 0x01	; 1
    1550:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <_ZN16PololuQTRSensorsD1Ev>
    1554:	08 95       	ret

00001556 <delay_us>:
    1556:	6f 93       	push	r22
    1558:	64 e0       	ldi	r22, 0x04	; 4
    155a:	6a 95       	dec	r22
    155c:	f1 f7       	brne	.-4      	; 0x155a <delay_us+0x4>
    155e:	6f 91       	pop	r22
    1560:	01 97       	sbiw	r24, 0x01	; 1
    1562:	c9 f7       	brne	.-14     	; 0x1556 <delay_us>
    1564:	08 95       	ret

00001566 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    1566:	fc 01       	movw	r30, r24
    1568:	11 82       	std	Z+1, r1	; 0x01
    156a:	10 82       	st	Z, r1
    156c:	13 82       	std	Z+3, r1	; 0x03
    156e:	12 82       	std	Z+2, r1	; 0x02
    1570:	15 82       	std	Z+5, r1	; 0x05
    1572:	14 82       	std	Z+4, r1	; 0x04
    1574:	16 82       	std	Z+6, r1	; 0x06
    1576:	68 30       	cpi	r22, 0x08	; 8
    1578:	68 f4       	brcc	.+26     	; 0x1594 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    157a:	89 e2       	ldi	r24, 0x29	; 41
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	91 83       	std	Z+1, r25	; 0x01
    1580:	80 83       	st	Z, r24
    1582:	8b e2       	ldi	r24, 0x2B	; 43
    1584:	90 e0       	ldi	r25, 0x00	; 0
    1586:	93 83       	std	Z+3, r25	; 0x03
    1588:	82 83       	std	Z+2, r24	; 0x02
    158a:	8a e2       	ldi	r24, 0x2A	; 42
    158c:	90 e0       	ldi	r25, 0x00	; 0
    158e:	95 83       	std	Z+5, r25	; 0x05
    1590:	84 83       	std	Z+4, r24	; 0x04
    1592:	1f c0       	rjmp	.+62     	; 0x15d2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    1594:	6e 30       	cpi	r22, 0x0E	; 14
    1596:	70 f4       	brcc	.+28     	; 0x15b4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    1598:	83 e2       	ldi	r24, 0x23	; 35
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	91 83       	std	Z+1, r25	; 0x01
    159e:	80 83       	st	Z, r24
    15a0:	85 e2       	ldi	r24, 0x25	; 37
    15a2:	90 e0       	ldi	r25, 0x00	; 0
    15a4:	93 83       	std	Z+3, r25	; 0x03
    15a6:	82 83       	std	Z+2, r24	; 0x02
    15a8:	84 e2       	ldi	r24, 0x24	; 36
    15aa:	90 e0       	ldi	r25, 0x00	; 0
    15ac:	95 83       	std	Z+5, r25	; 0x05
    15ae:	84 83       	std	Z+4, r24	; 0x04
    15b0:	68 50       	subi	r22, 0x08	; 8
    15b2:	0f c0       	rjmp	.+30     	; 0x15d2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    15b4:	65 31       	cpi	r22, 0x15	; 21
    15b6:	98 f4       	brcc	.+38     	; 0x15de <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    15b8:	86 e2       	ldi	r24, 0x26	; 38
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	91 83       	std	Z+1, r25	; 0x01
    15be:	80 83       	st	Z, r24
    15c0:	88 e2       	ldi	r24, 0x28	; 40
    15c2:	90 e0       	ldi	r25, 0x00	; 0
    15c4:	93 83       	std	Z+3, r25	; 0x03
    15c6:	82 83       	std	Z+2, r24	; 0x02
    15c8:	87 e2       	ldi	r24, 0x27	; 39
    15ca:	90 e0       	ldi	r25, 0x00	; 0
    15cc:	95 83       	std	Z+5, r25	; 0x05
    15ce:	84 83       	std	Z+4, r24	; 0x04
    15d0:	6e 50       	subi	r22, 0x0E	; 14
    15d2:	81 e0       	ldi	r24, 0x01	; 1
    15d4:	01 c0       	rjmp	.+2      	; 0x15d8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    15d6:	88 0f       	add	r24, r24
    15d8:	6a 95       	dec	r22
    15da:	ea f7       	brpl	.-6      	; 0x15d6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    15dc:	86 83       	std	Z+6, r24	; 0x06
    15de:	08 95       	ret

000015e0 <_ZN16PololuQTRSensors4initEhhh>:
    15e0:	a7 e0       	ldi	r26, 0x07	; 7
    15e2:	b0 e0       	ldi	r27, 0x00	; 0
    15e4:	e6 ef       	ldi	r30, 0xF6	; 246
    15e6:	fa e0       	ldi	r31, 0x0A	; 10
    15e8:	0c 94 51 10 	jmp	0x20a2	; 0x20a2 <__prologue_saves__+0x1c>
    15ec:	8c 01       	movw	r16, r24
    15ee:	fc 01       	movw	r30, r24
    15f0:	11 82       	std	Z+1, r1	; 0x01
    15f2:	10 82       	st	Z, r1
    15f4:	13 82       	std	Z+3, r1	; 0x03
    15f6:	12 82       	std	Z+2, r1	; 0x02
    15f8:	15 82       	std	Z+5, r1	; 0x05
    15fa:	14 82       	std	Z+4, r1	; 0x04
    15fc:	17 82       	std	Z+7, r1	; 0x07
    15fe:	16 82       	std	Z+6, r1	; 0x06
    1600:	61 31       	cpi	r22, 0x11	; 17
    1602:	18 f0       	brcs	.+6      	; 0x160a <_ZN16PololuQTRSensors4initEhhh+0x2a>
    1604:	80 e1       	ldi	r24, 0x10	; 16
    1606:	80 87       	std	Z+8, r24	; 0x08
    1608:	02 c0       	rjmp	.+4      	; 0x160e <_ZN16PololuQTRSensors4initEhhh+0x2e>
    160a:	fc 01       	movw	r30, r24
    160c:	60 87       	std	Z+8, r22	; 0x08
    160e:	f8 01       	movw	r30, r16
    1610:	20 8b       	std	Z+16, r18	; 0x10
    1612:	64 2f       	mov	r22, r20
    1614:	ce 01       	movw	r24, r28
    1616:	01 96       	adiw	r24, 0x01	; 1
    1618:	0e 94 b3 0a 	call	0x1566	; 0x1566 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    161c:	8f 81       	ldd	r24, Y+7	; 0x07
    161e:	f8 01       	movw	r30, r16
    1620:	81 87       	std	Z+9, r24	; 0x09
    1622:	8b 81       	ldd	r24, Y+3	; 0x03
    1624:	9c 81       	ldd	r25, Y+4	; 0x04
    1626:	93 87       	std	Z+11, r25	; 0x0b
    1628:	82 87       	std	Z+10, r24	; 0x0a
    162a:	8d 81       	ldd	r24, Y+5	; 0x05
    162c:	9e 81       	ldd	r25, Y+6	; 0x06
    162e:	95 87       	std	Z+13, r25	; 0x0d
    1630:	84 87       	std	Z+12, r24	; 0x0c
    1632:	27 96       	adiw	r28, 0x07	; 7
    1634:	e4 e0       	ldi	r30, 0x04	; 4
    1636:	0c 94 6d 10 	jmp	0x20da	; 0x20da <__epilogue_restores__+0x1c>

0000163a <_ZN16PololuQTRSensors11emittersOffEv>:
    163a:	fc 01       	movw	r30, r24
    163c:	a4 85       	ldd	r26, Z+12	; 0x0c
    163e:	b5 85       	ldd	r27, Z+13	; 0x0d
    1640:	10 97       	sbiw	r26, 0x00	; 0
    1642:	79 f0       	breq	.+30     	; 0x1662 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    1644:	8c 91       	ld	r24, X
    1646:	91 85       	ldd	r25, Z+9	; 0x09
    1648:	89 2b       	or	r24, r25
    164a:	8c 93       	st	X, r24
    164c:	a2 85       	ldd	r26, Z+10	; 0x0a
    164e:	b3 85       	ldd	r27, Z+11	; 0x0b
    1650:	9c 91       	ld	r25, X
    1652:	81 85       	ldd	r24, Z+9	; 0x09
    1654:	80 95       	com	r24
    1656:	89 23       	and	r24, r25
    1658:	8c 93       	st	X, r24
    165a:	88 ec       	ldi	r24, 0xC8	; 200
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	0e 94 ab 0a 	call	0x1556	; 0x1556 <delay_us>
    1662:	08 95       	ret

00001664 <_ZN16PololuQTRSensors10emittersOnEv>:
    1664:	fc 01       	movw	r30, r24
    1666:	a4 85       	ldd	r26, Z+12	; 0x0c
    1668:	b5 85       	ldd	r27, Z+13	; 0x0d
    166a:	10 97       	sbiw	r26, 0x00	; 0
    166c:	71 f0       	breq	.+28     	; 0x168a <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    166e:	8c 91       	ld	r24, X
    1670:	91 85       	ldd	r25, Z+9	; 0x09
    1672:	89 2b       	or	r24, r25
    1674:	8c 93       	st	X, r24
    1676:	a2 85       	ldd	r26, Z+10	; 0x0a
    1678:	b3 85       	ldd	r27, Z+11	; 0x0b
    167a:	8c 91       	ld	r24, X
    167c:	91 85       	ldd	r25, Z+9	; 0x09
    167e:	89 2b       	or	r24, r25
    1680:	8c 93       	st	X, r24
    1682:	88 ec       	ldi	r24, 0xC8	; 200
    1684:	90 e0       	ldi	r25, 0x00	; 0
    1686:	0e 94 ab 0a 	call	0x1556	; 0x1556 <delay_us>
    168a:	08 95       	ret

0000168c <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    168c:	a7 e0       	ldi	r26, 0x07	; 7
    168e:	b0 e0       	ldi	r27, 0x00	; 0
    1690:	ec e4       	ldi	r30, 0x4C	; 76
    1692:	fb e0       	ldi	r31, 0x0B	; 11
    1694:	0c 94 46 10 	jmp	0x208c	; 0x208c <__prologue_saves__+0x6>
    1698:	7c 01       	movw	r14, r24
    169a:	4b 01       	movw	r8, r22
    169c:	64 2f       	mov	r22, r20
    169e:	39 01       	movw	r6, r18
    16a0:	40 2f       	mov	r20, r16
    16a2:	20 e0       	ldi	r18, 0x00	; 0
    16a4:	0e 94 f0 0a 	call	0x15e0	; 0x15e0 <_ZN16PololuQTRSensors4initEhhh>
    16a8:	87 01       	movw	r16, r14
    16aa:	0f 5b       	subi	r16, 0xBF	; 191
    16ac:	1f 4f       	sbci	r17, 0xFF	; 255
    16ae:	f8 01       	movw	r30, r16
    16b0:	10 82       	st	Z, r1
    16b2:	67 01       	movw	r12, r14
    16b4:	f2 e4       	ldi	r31, 0x42	; 66
    16b6:	cf 0e       	add	r12, r31
    16b8:	d1 1c       	adc	r13, r1
    16ba:	f6 01       	movw	r30, r12
    16bc:	10 82       	st	Z, r1
    16be:	57 01       	movw	r10, r14
    16c0:	f3 e4       	ldi	r31, 0x43	; 67
    16c2:	af 0e       	add	r10, r31
    16c4:	b1 1c       	adc	r11, r1
    16c6:	f5 01       	movw	r30, r10
    16c8:	10 82       	st	Z, r1
    16ca:	f7 01       	movw	r30, r14
    16cc:	77 86       	std	Z+15, r7	; 0x0f
    16ce:	66 86       	std	Z+14, r6	; 0x0e
    16d0:	51 2c       	mov	r5, r1
    16d2:	f7 01       	movw	r30, r14
    16d4:	80 85       	ldd	r24, Z+8	; 0x08
    16d6:	58 16       	cp	r5, r24
    16d8:	50 f5       	brcc	.+84     	; 0x172e <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    16da:	65 2c       	mov	r6, r5
    16dc:	71 2c       	mov	r7, r1
    16de:	f4 01       	movw	r30, r8
    16e0:	e6 0d       	add	r30, r6
    16e2:	f7 1d       	adc	r31, r7
    16e4:	60 81       	ld	r22, Z
    16e6:	ce 01       	movw	r24, r28
    16e8:	01 96       	adiw	r24, 0x01	; 1
    16ea:	0e 94 b3 0a 	call	0x1566	; 0x1566 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    16ee:	2f 81       	ldd	r18, Y+7	; 0x07
    16f0:	f7 01       	movw	r30, r14
    16f2:	e6 0d       	add	r30, r6
    16f4:	f7 1d       	adc	r31, r7
    16f6:	21 8b       	std	Z+17, r18	; 0x11
    16f8:	89 81       	ldd	r24, Y+1	; 0x01
    16fa:	9a 81       	ldd	r25, Y+2	; 0x02
    16fc:	f3 01       	movw	r30, r6
    16fe:	ee 0f       	add	r30, r30
    1700:	ff 1f       	adc	r31, r31
    1702:	ee 0d       	add	r30, r14
    1704:	ff 1d       	adc	r31, r15
    1706:	92 a3       	std	Z+34, r25	; 0x22
    1708:	81 a3       	std	Z+33, r24	; 0x21
    170a:	83 32       	cpi	r24, 0x23	; 35
    170c:	91 05       	cpc	r25, r1
    170e:	11 f4       	brne	.+4      	; 0x1714 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    1710:	f8 01       	movw	r30, r16
    1712:	08 c0       	rjmp	.+16     	; 0x1724 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    1714:	86 32       	cpi	r24, 0x26	; 38
    1716:	91 05       	cpc	r25, r1
    1718:	11 f4       	brne	.+4      	; 0x171e <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    171a:	f6 01       	movw	r30, r12
    171c:	03 c0       	rjmp	.+6      	; 0x1724 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    171e:	89 97       	sbiw	r24, 0x29	; 41
    1720:	21 f4       	brne	.+8      	; 0x172a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    1722:	f5 01       	movw	r30, r10
    1724:	80 81       	ld	r24, Z
    1726:	82 2b       	or	r24, r18
    1728:	80 83       	st	Z, r24
    172a:	53 94       	inc	r5
    172c:	d2 cf       	rjmp	.-92     	; 0x16d2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    172e:	27 96       	adiw	r28, 0x07	; 7
    1730:	ef e0       	ldi	r30, 0x0F	; 15
    1732:	0c 94 62 10 	jmp	0x20c4	; 0x20c4 <__epilogue_restores__+0x6>

00001736 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1736:	a0 e0       	ldi	r26, 0x00	; 0
    1738:	b0 e0       	ldi	r27, 0x00	; 0
    173a:	e1 ea       	ldi	r30, 0xA1	; 161
    173c:	fb e0       	ldi	r31, 0x0B	; 11
    173e:	0c 94 48 10 	jmp	0x2090	; 0x2090 <__prologue_saves__+0xa>
    1742:	ec 01       	movw	r28, r24
    1744:	5b 01       	movw	r10, r22
    1746:	6c 01       	movw	r12, r24
    1748:	81 e4       	ldi	r24, 0x41	; 65
    174a:	c8 0e       	add	r12, r24
    174c:	d1 1c       	adc	r13, r1
    174e:	f6 01       	movw	r30, r12
    1750:	80 80       	ld	r8, Z
    1752:	7e 01       	movw	r14, r28
    1754:	f2 e4       	ldi	r31, 0x42	; 66
    1756:	ef 0e       	add	r14, r31
    1758:	f1 1c       	adc	r15, r1
    175a:	f7 01       	movw	r30, r14
    175c:	70 80       	ld	r7, Z
    175e:	8e 01       	movw	r16, r28
    1760:	0d 5b       	subi	r16, 0xBD	; 189
    1762:	1f 4f       	sbci	r17, 0xFF	; 255
    1764:	f8 01       	movw	r30, r16
    1766:	90 80       	ld	r9, Z
    1768:	80 e0       	ldi	r24, 0x00	; 0
    176a:	98 85       	ldd	r25, Y+8	; 0x08
    176c:	89 17       	cp	r24, r25
    176e:	48 f4       	brcc	.+18     	; 0x1782 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    1770:	f5 01       	movw	r30, r10
    1772:	e8 0f       	add	r30, r24
    1774:	f1 1d       	adc	r31, r1
    1776:	e8 0f       	add	r30, r24
    1778:	f1 1d       	adc	r31, r1
    177a:	11 82       	std	Z+1, r1	; 0x01
    177c:	10 82       	st	Z, r1
    177e:	8f 5f       	subi	r24, 0xFF	; 255
    1780:	f4 cf       	rjmp	.-24     	; 0x176a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    1782:	84 b1       	in	r24, 0x04	; 4
    1784:	f6 01       	movw	r30, r12
    1786:	90 81       	ld	r25, Z
    1788:	89 2b       	or	r24, r25
    178a:	84 b9       	out	0x04, r24	; 4
    178c:	87 b1       	in	r24, 0x07	; 7
    178e:	f7 01       	movw	r30, r14
    1790:	90 81       	ld	r25, Z
    1792:	89 2b       	or	r24, r25
    1794:	87 b9       	out	0x07, r24	; 7
    1796:	8a b1       	in	r24, 0x0a	; 10
    1798:	f8 01       	movw	r30, r16
    179a:	90 81       	ld	r25, Z
    179c:	89 2b       	or	r24, r25
    179e:	8a b9       	out	0x0a, r24	; 10
    17a0:	85 b1       	in	r24, 0x05	; 5
    17a2:	f6 01       	movw	r30, r12
    17a4:	90 81       	ld	r25, Z
    17a6:	89 2b       	or	r24, r25
    17a8:	85 b9       	out	0x05, r24	; 5
    17aa:	88 b1       	in	r24, 0x08	; 8
    17ac:	f7 01       	movw	r30, r14
    17ae:	90 81       	ld	r25, Z
    17b0:	89 2b       	or	r24, r25
    17b2:	88 b9       	out	0x08, r24	; 8
    17b4:	8b b1       	in	r24, 0x0b	; 11
    17b6:	f8 01       	movw	r30, r16
    17b8:	90 81       	ld	r25, Z
    17ba:	89 2b       	or	r24, r25
    17bc:	8b b9       	out	0x0b, r24	; 11
    17be:	8a e0       	ldi	r24, 0x0A	; 10
    17c0:	90 e0       	ldi	r25, 0x00	; 0
    17c2:	0e 94 ab 0a 	call	0x1556	; 0x1556 <delay_us>
    17c6:	94 b1       	in	r25, 0x04	; 4
    17c8:	f6 01       	movw	r30, r12
    17ca:	80 81       	ld	r24, Z
    17cc:	80 95       	com	r24
    17ce:	89 23       	and	r24, r25
    17d0:	84 b9       	out	0x04, r24	; 4
    17d2:	97 b1       	in	r25, 0x07	; 7
    17d4:	f7 01       	movw	r30, r14
    17d6:	80 81       	ld	r24, Z
    17d8:	80 95       	com	r24
    17da:	89 23       	and	r24, r25
    17dc:	87 b9       	out	0x07, r24	; 7
    17de:	9a b1       	in	r25, 0x0a	; 10
    17e0:	f8 01       	movw	r30, r16
    17e2:	80 81       	ld	r24, Z
    17e4:	80 95       	com	r24
    17e6:	89 23       	and	r24, r25
    17e8:	8a b9       	out	0x0a, r24	; 10
    17ea:	95 b1       	in	r25, 0x05	; 5
    17ec:	f6 01       	movw	r30, r12
    17ee:	80 81       	ld	r24, Z
    17f0:	80 95       	com	r24
    17f2:	89 23       	and	r24, r25
    17f4:	85 b9       	out	0x05, r24	; 5
    17f6:	98 b1       	in	r25, 0x08	; 8
    17f8:	f7 01       	movw	r30, r14
    17fa:	80 81       	ld	r24, Z
    17fc:	80 95       	com	r24
    17fe:	89 23       	and	r24, r25
    1800:	88 b9       	out	0x08, r24	; 8
    1802:	9b b1       	in	r25, 0x0b	; 11
    1804:	f8 01       	movw	r30, r16
    1806:	80 81       	ld	r24, Z
    1808:	80 95       	com	r24
    180a:	89 23       	and	r24, r25
    180c:	8b b9       	out	0x0b, r24	; 11
    180e:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1812:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1816:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    181a:	83 60       	ori	r24, 0x03	; 3
    181c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1820:	82 e0       	ldi	r24, 0x02	; 2
    1822:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1826:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    182a:	80 e0       	ldi	r24, 0x00	; 0
    182c:	90 e0       	ldi	r25, 0x00	; 0
    182e:	2e 85       	ldd	r18, Y+14	; 0x0e
    1830:	3f 85       	ldd	r19, Y+15	; 0x0f
    1832:	82 17       	cp	r24, r18
    1834:	93 07       	cpc	r25, r19
    1836:	20 f5       	brcc	.+72     	; 0x1880 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    1838:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    183c:	2c 2d       	mov	r18, r12
    183e:	24 1b       	sub	r18, r20
    1840:	82 0f       	add	r24, r18
    1842:	91 1d       	adc	r25, r1
    1844:	03 b1       	in	r16, 0x03	; 3
    1846:	08 11       	cpse	r16, r8
    1848:	32 c0       	rjmp	.+100    	; 0x18ae <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    184a:	f6 b0       	in	r15, 0x06	; 6
    184c:	f7 10       	cpse	r15, r7
    184e:	2f c0       	rjmp	.+94     	; 0x18ae <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1850:	29 b1       	in	r18, 0x09	; 9
    1852:	29 11       	cpse	r18, r9
    1854:	2c c0       	rjmp	.+88     	; 0x18ae <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1856:	10 c0       	rjmp	.+32     	; 0x1878 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    1858:	21 2f       	mov	r18, r17
    185a:	30 e0       	ldi	r19, 0x00	; 0
    185c:	a9 01       	movw	r20, r18
    185e:	44 0f       	add	r20, r20
    1860:	55 1f       	adc	r21, r21
    1862:	f5 01       	movw	r30, r10
    1864:	e4 0f       	add	r30, r20
    1866:	f5 1f       	adc	r31, r21
    1868:	60 81       	ld	r22, Z
    186a:	71 81       	ldd	r23, Z+1	; 0x01
    186c:	67 2b       	or	r22, r23
    186e:	21 f1       	breq	.+72     	; 0x18b8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    1870:	1f 5f       	subi	r17, 0xFF	; 255
    1872:	28 85       	ldd	r18, Y+8	; 0x08
    1874:	12 17       	cp	r17, r18
    1876:	80 f3       	brcs	.-32     	; 0x1858 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    1878:	7f 2c       	mov	r7, r15
    187a:	80 2e       	mov	r8, r16
    187c:	4c 2d       	mov	r20, r12
    187e:	d7 cf       	rjmp	.-82     	; 0x182e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    1880:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1884:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1888:	20 e0       	ldi	r18, 0x00	; 0
    188a:	88 85       	ldd	r24, Y+8	; 0x08
    188c:	28 17       	cp	r18, r24
    188e:	30 f5       	brcc	.+76     	; 0x18dc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    1890:	f5 01       	movw	r30, r10
    1892:	e2 0f       	add	r30, r18
    1894:	f1 1d       	adc	r31, r1
    1896:	e2 0f       	add	r30, r18
    1898:	f1 1d       	adc	r31, r1
    189a:	80 81       	ld	r24, Z
    189c:	91 81       	ldd	r25, Z+1	; 0x01
    189e:	89 2b       	or	r24, r25
    18a0:	21 f4       	brne	.+8      	; 0x18aa <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    18a2:	8e 85       	ldd	r24, Y+14	; 0x0e
    18a4:	9f 85       	ldd	r25, Y+15	; 0x0f
    18a6:	91 83       	std	Z+1, r25	; 0x01
    18a8:	80 83       	st	Z, r24
    18aa:	2f 5f       	subi	r18, 0xFF	; 255
    18ac:	ee cf       	rjmp	.-36     	; 0x188a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    18ae:	03 b1       	in	r16, 0x03	; 3
    18b0:	f6 b0       	in	r15, 0x06	; 6
    18b2:	99 b0       	in	r9, 0x09	; 9
    18b4:	10 e0       	ldi	r17, 0x00	; 0
    18b6:	dd cf       	rjmp	.-70     	; 0x1872 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    18b8:	de 01       	movw	r26, r28
    18ba:	a4 0f       	add	r26, r20
    18bc:	b5 1f       	adc	r27, r21
    18be:	91 96       	adiw	r26, 0x21	; 33
    18c0:	0d 90       	ld	r0, X+
    18c2:	bc 91       	ld	r27, X
    18c4:	a0 2d       	mov	r26, r0
    18c6:	4c 91       	ld	r20, X
    18c8:	de 01       	movw	r26, r28
    18ca:	a2 0f       	add	r26, r18
    18cc:	b3 1f       	adc	r27, r19
    18ce:	51 96       	adiw	r26, 0x11	; 17
    18d0:	2c 91       	ld	r18, X
    18d2:	42 23       	and	r20, r18
    18d4:	69 f6       	brne	.-102    	; 0x1870 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    18d6:	91 83       	std	Z+1, r25	; 0x01
    18d8:	80 83       	st	Z, r24
    18da:	ca cf       	rjmp	.-108    	; 0x1870 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    18dc:	cd b7       	in	r28, 0x3d	; 61
    18de:	de b7       	in	r29, 0x3e	; 62
    18e0:	ed e0       	ldi	r30, 0x0D	; 13
    18e2:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__epilogue_restores__+0xa>

000018e6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    18e6:	ef 92       	push	r14
    18e8:	ff 92       	push	r15
    18ea:	0f 93       	push	r16
    18ec:	1f 93       	push	r17
    18ee:	cf 93       	push	r28
    18f0:	df 93       	push	r29
    18f2:	fc 01       	movw	r30, r24
    18f4:	9b 01       	movw	r18, r22
    18f6:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    18fa:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    18fe:	47 b1       	in	r20, 0x07	; 7
    1900:	18 b1       	in	r17, 0x08	; 8
    1902:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1906:	86 fd       	sbrc	r24, 6
    1908:	fc cf       	rjmp	.-8      	; 0x1902 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    190a:	80 e0       	ldi	r24, 0x00	; 0
    190c:	90 85       	ldd	r25, Z+8	; 0x08
    190e:	89 17       	cp	r24, r25
    1910:	48 f4       	brcc	.+18     	; 0x1924 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    1912:	d9 01       	movw	r26, r18
    1914:	a8 0f       	add	r26, r24
    1916:	b1 1d       	adc	r27, r1
    1918:	a8 0f       	add	r26, r24
    191a:	b1 1d       	adc	r27, r1
    191c:	1d 92       	st	X+, r1
    191e:	1c 92       	st	X, r1
    1920:	8f 5f       	subi	r24, 0xFF	; 255
    1922:	f4 cf       	rjmp	.-24     	; 0x190c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    1924:	97 b1       	in	r25, 0x07	; 7
    1926:	82 a1       	ldd	r24, Z+34	; 0x22
    1928:	80 95       	com	r24
    192a:	89 23       	and	r24, r25
    192c:	87 b9       	out	0x07, r24	; 7
    192e:	98 b1       	in	r25, 0x08	; 8
    1930:	82 a1       	ldd	r24, Z+34	; 0x22
    1932:	80 95       	com	r24
    1934:	89 23       	and	r24, r25
    1936:	88 b9       	out	0x08, r24	; 8
    1938:	87 e8       	ldi	r24, 0x87	; 135
    193a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    193e:	e1 2c       	mov	r14, r1
    1940:	81 a1       	ldd	r24, Z+33	; 0x21
    1942:	e8 16       	cp	r14, r24
    1944:	10 f0       	brcs	.+4      	; 0x194a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    1946:	e1 2c       	mov	r14, r1
    1948:	29 c0       	rjmp	.+82     	; 0x199c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    194a:	50 e0       	ldi	r21, 0x00	; 0
    194c:	80 85       	ldd	r24, Z+8	; 0x08
    194e:	58 17       	cp	r21, r24
    1950:	18 f5       	brcc	.+70     	; 0x1998 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1952:	a5 2f       	mov	r26, r21
    1954:	b0 e0       	ldi	r27, 0x00	; 0
    1956:	ef 01       	movw	r28, r30
    1958:	ca 0f       	add	r28, r26
    195a:	db 1f       	adc	r29, r27
    195c:	89 89       	ldd	r24, Y+17	; 0x11
    195e:	80 64       	ori	r24, 0x40	; 64
    1960:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1964:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1968:	80 64       	ori	r24, 0x40	; 64
    196a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    196e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1972:	86 fd       	sbrc	r24, 6
    1974:	fc cf       	rjmp	.-8      	; 0x196e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    1976:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    197a:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    197e:	aa 0f       	add	r26, r26
    1980:	bb 1f       	adc	r27, r27
    1982:	a2 0f       	add	r26, r18
    1984:	b3 1f       	adc	r27, r19
    1986:	8d 91       	ld	r24, X+
    1988:	9c 91       	ld	r25, X
    198a:	11 97       	sbiw	r26, 0x01	; 1
    198c:	86 0f       	add	r24, r22
    198e:	97 1f       	adc	r25, r23
    1990:	8d 93       	st	X+, r24
    1992:	9c 93       	st	X, r25
    1994:	5f 5f       	subi	r21, 0xFF	; 255
    1996:	da cf       	rjmp	.-76     	; 0x194c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    1998:	e3 94       	inc	r14
    199a:	d2 cf       	rjmp	.-92     	; 0x1940 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    199c:	80 85       	ldd	r24, Z+8	; 0x08
    199e:	e8 16       	cp	r14, r24
    19a0:	a0 f4       	brcc	.+40     	; 0x19ca <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    19a2:	e9 01       	movw	r28, r18
    19a4:	ce 0d       	add	r28, r14
    19a6:	d1 1d       	adc	r29, r1
    19a8:	ce 0d       	add	r28, r14
    19aa:	d1 1d       	adc	r29, r1
    19ac:	61 a1       	ldd	r22, Z+33	; 0x21
    19ae:	70 e0       	ldi	r23, 0x00	; 0
    19b0:	cb 01       	movw	r24, r22
    19b2:	95 95       	asr	r25
    19b4:	87 95       	ror	r24
    19b6:	a8 81       	ld	r26, Y
    19b8:	b9 81       	ldd	r27, Y+1	; 0x01
    19ba:	8a 0f       	add	r24, r26
    19bc:	9b 1f       	adc	r25, r27
    19be:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <__udivmodhi4>
    19c2:	79 83       	std	Y+1, r23	; 0x01
    19c4:	68 83       	st	Y, r22
    19c6:	e3 94       	inc	r14
    19c8:	e9 cf       	rjmp	.-46     	; 0x199c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    19ca:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    19ce:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    19d2:	18 b9       	out	0x08, r17	; 8
    19d4:	47 b9       	out	0x07, r20	; 7
    19d6:	cd b7       	in	r28, 0x3d	; 61
    19d8:	de b7       	in	r29, 0x3e	; 62
    19da:	e6 e0       	ldi	r30, 0x06	; 6
    19dc:	0c 94 6b 10 	jmp	0x20d6	; 0x20d6 <__epilogue_restores__+0x18>

000019e0 <_ZN16PololuQTRSensors4readEPjh>:
    19e0:	a0 e2       	ldi	r26, 0x20	; 32
    19e2:	b0 e0       	ldi	r27, 0x00	; 0
    19e4:	e6 ef       	ldi	r30, 0xF6	; 246
    19e6:	fc e0       	ldi	r31, 0x0C	; 12
    19e8:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__prologue_saves__+0x16>
    19ec:	8c 01       	movw	r16, r24
    19ee:	7b 01       	movw	r14, r22
    19f0:	d4 2e       	mov	r13, r20
    19f2:	8f ef       	ldi	r24, 0xFF	; 255
    19f4:	84 0f       	add	r24, r20
    19f6:	82 30       	cpi	r24, 0x02	; 2
    19f8:	18 f4       	brcc	.+6      	; 0x1a00 <_ZN16PololuQTRSensors4readEPjh+0x20>
    19fa:	c8 01       	movw	r24, r16
    19fc:	0e 94 32 0b 	call	0x1664	; 0x1664 <_ZN16PololuQTRSensors10emittersOnEv>
    1a00:	d8 01       	movw	r26, r16
    1a02:	50 96       	adiw	r26, 0x10	; 16
    1a04:	8c 91       	ld	r24, X
    1a06:	b7 01       	movw	r22, r14
    1a08:	81 11       	cpse	r24, r1
    1a0a:	10 c0       	rjmp	.+32     	; 0x1a2c <_ZN16PololuQTRSensors4readEPjh+0x4c>
    1a0c:	c8 01       	movw	r24, r16
    1a0e:	0e 94 9b 0b 	call	0x1736	; 0x1736 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1a12:	c8 01       	movw	r24, r16
    1a14:	0e 94 1d 0b 	call	0x163a	; 0x163a <_ZN16PololuQTRSensors11emittersOffEv>
    1a18:	b2 e0       	ldi	r27, 0x02	; 2
    1a1a:	db 12       	cpse	r13, r27
    1a1c:	3a c0       	rjmp	.+116    	; 0x1a92 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1a1e:	be 01       	movw	r22, r28
    1a20:	6f 5f       	subi	r22, 0xFF	; 255
    1a22:	7f 4f       	sbci	r23, 0xFF	; 255
    1a24:	c8 01       	movw	r24, r16
    1a26:	0e 94 9b 0b 	call	0x1736	; 0x1736 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1a2a:	0f c0       	rjmp	.+30     	; 0x1a4a <_ZN16PololuQTRSensors4readEPjh+0x6a>
    1a2c:	c8 01       	movw	r24, r16
    1a2e:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1a32:	c8 01       	movw	r24, r16
    1a34:	0e 94 1d 0b 	call	0x163a	; 0x163a <_ZN16PololuQTRSensors11emittersOffEv>
    1a38:	e2 e0       	ldi	r30, 0x02	; 2
    1a3a:	de 12       	cpse	r13, r30
    1a3c:	2a c0       	rjmp	.+84     	; 0x1a92 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1a3e:	be 01       	movw	r22, r28
    1a40:	6f 5f       	subi	r22, 0xFF	; 255
    1a42:	7f 4f       	sbci	r23, 0xFF	; 255
    1a44:	c8 01       	movw	r24, r16
    1a46:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1a4a:	40 e0       	ldi	r20, 0x00	; 0
    1a4c:	f8 01       	movw	r30, r16
    1a4e:	80 85       	ldd	r24, Z+8	; 0x08
    1a50:	48 17       	cp	r20, r24
    1a52:	f8 f4       	brcc	.+62     	; 0x1a92 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1a54:	84 2f       	mov	r24, r20
    1a56:	90 e0       	ldi	r25, 0x00	; 0
    1a58:	88 0f       	add	r24, r24
    1a5a:	99 1f       	adc	r25, r25
    1a5c:	f7 01       	movw	r30, r14
    1a5e:	e8 0f       	add	r30, r24
    1a60:	f9 1f       	adc	r31, r25
    1a62:	21 e0       	ldi	r18, 0x01	; 1
    1a64:	30 e0       	ldi	r19, 0x00	; 0
    1a66:	2c 0f       	add	r18, r28
    1a68:	3d 1f       	adc	r19, r29
    1a6a:	82 0f       	add	r24, r18
    1a6c:	93 1f       	adc	r25, r19
    1a6e:	d8 01       	movw	r26, r16
    1a70:	1e 96       	adiw	r26, 0x0e	; 14
    1a72:	2d 91       	ld	r18, X+
    1a74:	3c 91       	ld	r19, X
    1a76:	1f 97       	sbiw	r26, 0x0f	; 15
    1a78:	dc 01       	movw	r26, r24
    1a7a:	8d 91       	ld	r24, X+
    1a7c:	9c 91       	ld	r25, X
    1a7e:	28 1b       	sub	r18, r24
    1a80:	39 0b       	sbc	r19, r25
    1a82:	80 81       	ld	r24, Z
    1a84:	91 81       	ldd	r25, Z+1	; 0x01
    1a86:	82 0f       	add	r24, r18
    1a88:	93 1f       	adc	r25, r19
    1a8a:	91 83       	std	Z+1, r25	; 0x01
    1a8c:	80 83       	st	Z, r24
    1a8e:	4f 5f       	subi	r20, 0xFF	; 255
    1a90:	dd cf       	rjmp	.-70     	; 0x1a4c <_ZN16PololuQTRSensors4readEPjh+0x6c>
    1a92:	a0 96       	adiw	r28, 0x20	; 32
    1a94:	e7 e0       	ldi	r30, 0x07	; 7
    1a96:	0c 94 6a 10 	jmp	0x20d4	; 0x20d4 <__epilogue_restores__+0x16>

00001a9a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    1a9a:	2f 92       	push	r2
    1a9c:	3f 92       	push	r3
    1a9e:	5f 92       	push	r5
    1aa0:	6f 92       	push	r6
    1aa2:	7f 92       	push	r7
    1aa4:	8f 92       	push	r8
    1aa6:	9f 92       	push	r9
    1aa8:	af 92       	push	r10
    1aaa:	bf 92       	push	r11
    1aac:	cf 92       	push	r12
    1aae:	df 92       	push	r13
    1ab0:	ef 92       	push	r14
    1ab2:	ff 92       	push	r15
    1ab4:	0f 93       	push	r16
    1ab6:	1f 93       	push	r17
    1ab8:	cf 93       	push	r28
    1aba:	df 93       	push	r29
    1abc:	cd b7       	in	r28, 0x3d	; 61
    1abe:	de b7       	in	r29, 0x3e	; 62
    1ac0:	c0 56       	subi	r28, 0x60	; 96
    1ac2:	d1 09       	sbc	r29, r1
    1ac4:	0f b6       	in	r0, 0x3f	; 63
    1ac6:	f8 94       	cli
    1ac8:	de bf       	out	0x3e, r29	; 62
    1aca:	0f be       	out	0x3f, r0	; 63
    1acc:	cd bf       	out	0x3d, r28	; 61
    1ace:	8c 01       	movw	r16, r24
    1ad0:	4b 01       	movw	r8, r22
    1ad2:	5a 01       	movw	r10, r20
    1ad4:	52 2e       	mov	r5, r18
    1ad6:	da 01       	movw	r26, r20
    1ad8:	8d 91       	ld	r24, X+
    1ada:	9c 91       	ld	r25, X
    1adc:	89 2b       	or	r24, r25
    1ade:	31 f0       	breq	.+12     	; 0x1aec <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    1ae0:	f4 01       	movw	r30, r8
    1ae2:	80 81       	ld	r24, Z
    1ae4:	91 81       	ldd	r25, Z+1	; 0x01
    1ae6:	89 2b       	or	r24, r25
    1ae8:	f1 f4       	brne	.+60     	; 0x1b26 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1aea:	24 c0       	rjmp	.+72     	; 0x1b34 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    1aec:	d8 01       	movw	r26, r16
    1aee:	18 96       	adiw	r26, 0x08	; 8
    1af0:	8c 91       	ld	r24, X
    1af2:	90 e0       	ldi	r25, 0x00	; 0
    1af4:	88 0f       	add	r24, r24
    1af6:	99 1f       	adc	r25, r25
    1af8:	0e 94 7a 10 	call	0x20f4	; 0x20f4 <malloc>
    1afc:	f5 01       	movw	r30, r10
    1afe:	91 83       	std	Z+1, r25	; 0x01
    1b00:	80 83       	st	Z, r24
    1b02:	00 97       	sbiw	r24, 0x00	; 0
    1b04:	09 f4       	brne	.+2      	; 0x1b08 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    1b06:	b1 c0       	rjmp	.+354    	; 0x1c6a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1b08:	fc 01       	movw	r30, r24
    1b0a:	20 e0       	ldi	r18, 0x00	; 0
    1b0c:	30 e0       	ldi	r19, 0x00	; 0
    1b0e:	d8 01       	movw	r26, r16
    1b10:	18 96       	adiw	r26, 0x08	; 8
    1b12:	8c 91       	ld	r24, X
    1b14:	90 e0       	ldi	r25, 0x00	; 0
    1b16:	28 17       	cp	r18, r24
    1b18:	39 07       	cpc	r19, r25
    1b1a:	14 f7       	brge	.-60     	; 0x1ae0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    1b1c:	11 92       	st	Z+, r1
    1b1e:	11 92       	st	Z+, r1
    1b20:	2f 5f       	subi	r18, 0xFF	; 255
    1b22:	3f 4f       	sbci	r19, 0xFF	; 255
    1b24:	f4 cf       	rjmp	.-24     	; 0x1b0e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    1b26:	e1 2c       	mov	r14, r1
    1b28:	f1 2c       	mov	r15, r1
    1b2a:	6e 01       	movw	r12, r28
    1b2c:	b1 e2       	ldi	r27, 0x21	; 33
    1b2e:	cb 0e       	add	r12, r27
    1b30:	d1 1c       	adc	r13, r1
    1b32:	21 c0       	rjmp	.+66     	; 0x1b76 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    1b34:	f8 01       	movw	r30, r16
    1b36:	80 85       	ldd	r24, Z+8	; 0x08
    1b38:	90 e0       	ldi	r25, 0x00	; 0
    1b3a:	88 0f       	add	r24, r24
    1b3c:	99 1f       	adc	r25, r25
    1b3e:	0e 94 7a 10 	call	0x20f4	; 0x20f4 <malloc>
    1b42:	d4 01       	movw	r26, r8
    1b44:	8d 93       	st	X+, r24
    1b46:	9c 93       	st	X, r25
    1b48:	00 97       	sbiw	r24, 0x00	; 0
    1b4a:	09 f4       	brne	.+2      	; 0x1b4e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    1b4c:	8e c0       	rjmp	.+284    	; 0x1c6a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1b4e:	fc 01       	movw	r30, r24
    1b50:	20 e0       	ldi	r18, 0x00	; 0
    1b52:	30 e0       	ldi	r19, 0x00	; 0
    1b54:	d8 01       	movw	r26, r16
    1b56:	18 96       	adiw	r26, 0x08	; 8
    1b58:	8c 91       	ld	r24, X
    1b5a:	90 e0       	ldi	r25, 0x00	; 0
    1b5c:	28 17       	cp	r18, r24
    1b5e:	39 07       	cpc	r19, r25
    1b60:	14 f7       	brge	.-60     	; 0x1b26 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1b62:	d8 01       	movw	r26, r16
    1b64:	1e 96       	adiw	r26, 0x0e	; 14
    1b66:	8d 91       	ld	r24, X+
    1b68:	9c 91       	ld	r25, X
    1b6a:	1f 97       	sbiw	r26, 0x0f	; 15
    1b6c:	81 93       	st	Z+, r24
    1b6e:	91 93       	st	Z+, r25
    1b70:	2f 5f       	subi	r18, 0xFF	; 255
    1b72:	3f 4f       	sbci	r19, 0xFF	; 255
    1b74:	ef cf       	rjmp	.-34     	; 0x1b54 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    1b76:	45 2d       	mov	r20, r5
    1b78:	be 01       	movw	r22, r28
    1b7a:	6f 5b       	subi	r22, 0xBF	; 191
    1b7c:	7f 4f       	sbci	r23, 0xFF	; 255
    1b7e:	c8 01       	movw	r24, r16
    1b80:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <_ZN16PololuQTRSensors4readEPjh>
    1b84:	f8 01       	movw	r30, r16
    1b86:	60 84       	ldd	r6, Z+8	; 0x08
    1b88:	71 2c       	mov	r7, r1
    1b8a:	fe 01       	movw	r30, r28
    1b8c:	ef 5b       	subi	r30, 0xBF	; 191
    1b8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b90:	c6 01       	movw	r24, r12
    1b92:	9e 01       	movw	r18, r28
    1b94:	2f 5f       	subi	r18, 0xFF	; 255
    1b96:	3f 4f       	sbci	r19, 0xFF	; 255
    1b98:	19 01       	movw	r2, r18
    1b9a:	20 e0       	ldi	r18, 0x00	; 0
    1b9c:	30 e0       	ldi	r19, 0x00	; 0
    1b9e:	26 15       	cp	r18, r6
    1ba0:	37 05       	cpc	r19, r7
    1ba2:	4c f5       	brge	.+82     	; 0x1bf6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    1ba4:	e1 14       	cp	r14, r1
    1ba6:	f1 04       	cpc	r15, r1
    1ba8:	89 f0       	breq	.+34     	; 0x1bcc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1baa:	dc 01       	movw	r26, r24
    1bac:	6d 91       	ld	r22, X+
    1bae:	7c 91       	ld	r23, X
    1bb0:	40 81       	ld	r20, Z
    1bb2:	51 81       	ldd	r21, Z+1	; 0x01
    1bb4:	64 17       	cp	r22, r20
    1bb6:	75 07       	cpc	r23, r21
    1bb8:	48 f0       	brcs	.+18     	; 0x1bcc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1bba:	d1 01       	movw	r26, r2
    1bbc:	6d 91       	ld	r22, X+
    1bbe:	7c 91       	ld	r23, X
    1bc0:	40 81       	ld	r20, Z
    1bc2:	51 81       	ldd	r21, Z+1	; 0x01
    1bc4:	46 17       	cp	r20, r22
    1bc6:	57 07       	cpc	r21, r23
    1bc8:	48 f0       	brcs	.+18     	; 0x1bdc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    1bca:	0d c0       	rjmp	.+26     	; 0x1be6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    1bcc:	40 81       	ld	r20, Z
    1bce:	51 81       	ldd	r21, Z+1	; 0x01
    1bd0:	dc 01       	movw	r26, r24
    1bd2:	4d 93       	st	X+, r20
    1bd4:	5c 93       	st	X, r21
    1bd6:	e1 14       	cp	r14, r1
    1bd8:	f1 04       	cpc	r15, r1
    1bda:	79 f7       	brne	.-34     	; 0x1bba <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    1bdc:	40 81       	ld	r20, Z
    1bde:	51 81       	ldd	r21, Z+1	; 0x01
    1be0:	d1 01       	movw	r26, r2
    1be2:	4d 93       	st	X+, r20
    1be4:	5c 93       	st	X, r21
    1be6:	2f 5f       	subi	r18, 0xFF	; 255
    1be8:	3f 4f       	sbci	r19, 0xFF	; 255
    1bea:	b2 e0       	ldi	r27, 0x02	; 2
    1bec:	2b 0e       	add	r2, r27
    1bee:	31 1c       	adc	r3, r1
    1bf0:	32 96       	adiw	r30, 0x02	; 2
    1bf2:	02 96       	adiw	r24, 0x02	; 2
    1bf4:	d4 cf       	rjmp	.-88     	; 0x1b9e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    1bf6:	ef ef       	ldi	r30, 0xFF	; 255
    1bf8:	ee 1a       	sub	r14, r30
    1bfa:	fe 0a       	sbc	r15, r30
    1bfc:	fa e0       	ldi	r31, 0x0A	; 10
    1bfe:	ef 16       	cp	r14, r31
    1c00:	f1 04       	cpc	r15, r1
    1c02:	09 f0       	breq	.+2      	; 0x1c06 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    1c04:	b8 cf       	rjmp	.-144    	; 0x1b76 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    1c06:	9e 01       	movw	r18, r28
    1c08:	2f 5f       	subi	r18, 0xFF	; 255
    1c0a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c0c:	79 01       	movw	r14, r18
    1c0e:	36 01       	movw	r6, r12
    1c10:	80 e0       	ldi	r24, 0x00	; 0
    1c12:	90 e0       	ldi	r25, 0x00	; 0
    1c14:	f8 01       	movw	r30, r16
    1c16:	20 85       	ldd	r18, Z+8	; 0x08
    1c18:	30 e0       	ldi	r19, 0x00	; 0
    1c1a:	82 17       	cp	r24, r18
    1c1c:	93 07       	cpc	r25, r19
    1c1e:	2c f5       	brge	.+74     	; 0x1c6a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1c20:	d7 01       	movw	r26, r14
    1c22:	2d 91       	ld	r18, X+
    1c24:	3d 91       	ld	r19, X+
    1c26:	7d 01       	movw	r14, r26
    1c28:	b3 01       	movw	r22, r6
    1c2a:	6c 19       	sub	r22, r12
    1c2c:	7d 09       	sbc	r23, r13
    1c2e:	d5 01       	movw	r26, r10
    1c30:	ed 91       	ld	r30, X+
    1c32:	fc 91       	ld	r31, X
    1c34:	e6 0f       	add	r30, r22
    1c36:	f7 1f       	adc	r31, r23
    1c38:	40 81       	ld	r20, Z
    1c3a:	51 81       	ldd	r21, Z+1	; 0x01
    1c3c:	42 17       	cp	r20, r18
    1c3e:	53 07       	cpc	r21, r19
    1c40:	10 f4       	brcc	.+4      	; 0x1c46 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    1c42:	31 83       	std	Z+1, r19	; 0x01
    1c44:	20 83       	st	Z, r18
    1c46:	f3 01       	movw	r30, r6
    1c48:	21 91       	ld	r18, Z+
    1c4a:	31 91       	ld	r19, Z+
    1c4c:	3f 01       	movw	r6, r30
    1c4e:	d4 01       	movw	r26, r8
    1c50:	ed 91       	ld	r30, X+
    1c52:	fc 91       	ld	r31, X
    1c54:	e6 0f       	add	r30, r22
    1c56:	f7 1f       	adc	r31, r23
    1c58:	40 81       	ld	r20, Z
    1c5a:	51 81       	ldd	r21, Z+1	; 0x01
    1c5c:	24 17       	cp	r18, r20
    1c5e:	35 07       	cpc	r19, r21
    1c60:	10 f4       	brcc	.+4      	; 0x1c66 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    1c62:	31 83       	std	Z+1, r19	; 0x01
    1c64:	20 83       	st	Z, r18
    1c66:	01 96       	adiw	r24, 0x01	; 1
    1c68:	d5 cf       	rjmp	.-86     	; 0x1c14 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    1c6a:	c0 5a       	subi	r28, 0xA0	; 160
    1c6c:	df 4f       	sbci	r29, 0xFF	; 255
    1c6e:	0f b6       	in	r0, 0x3f	; 63
    1c70:	f8 94       	cli
    1c72:	de bf       	out	0x3e, r29	; 62
    1c74:	0f be       	out	0x3f, r0	; 63
    1c76:	cd bf       	out	0x3d, r28	; 61
    1c78:	df 91       	pop	r29
    1c7a:	cf 91       	pop	r28
    1c7c:	1f 91       	pop	r17
    1c7e:	0f 91       	pop	r16
    1c80:	ff 90       	pop	r15
    1c82:	ef 90       	pop	r14
    1c84:	df 90       	pop	r13
    1c86:	cf 90       	pop	r12
    1c88:	bf 90       	pop	r11
    1c8a:	af 90       	pop	r10
    1c8c:	9f 90       	pop	r9
    1c8e:	8f 90       	pop	r8
    1c90:	7f 90       	pop	r7
    1c92:	6f 90       	pop	r6
    1c94:	5f 90       	pop	r5
    1c96:	3f 90       	pop	r3
    1c98:	2f 90       	pop	r2
    1c9a:	08 95       	ret

00001c9c <_ZN16PololuQTRSensors9calibrateEh>:
    1c9c:	1f 93       	push	r17
    1c9e:	cf 93       	push	r28
    1ca0:	df 93       	push	r29
    1ca2:	ec 01       	movw	r28, r24
    1ca4:	16 2f       	mov	r17, r22
    1ca6:	8f ef       	ldi	r24, 0xFF	; 255
    1ca8:	86 0f       	add	r24, r22
    1caa:	82 30       	cpi	r24, 0x02	; 2
    1cac:	18 f0       	brcs	.+6      	; 0x1cb4 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    1cae:	66 23       	and	r22, r22
    1cb0:	59 f0       	breq	.+22     	; 0x1cc8 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    1cb2:	14 c0       	rjmp	.+40     	; 0x1cdc <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1cb4:	21 e0       	ldi	r18, 0x01	; 1
    1cb6:	ae 01       	movw	r20, r28
    1cb8:	4e 5f       	subi	r20, 0xFE	; 254
    1cba:	5f 4f       	sbci	r21, 0xFF	; 255
    1cbc:	be 01       	movw	r22, r28
    1cbe:	ce 01       	movw	r24, r28
    1cc0:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1cc4:	12 30       	cpi	r17, 0x02	; 2
    1cc6:	51 f4       	brne	.+20     	; 0x1cdc <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1cc8:	ae 01       	movw	r20, r28
    1cca:	4a 5f       	subi	r20, 0xFA	; 250
    1ccc:	5f 4f       	sbci	r21, 0xFF	; 255
    1cce:	be 01       	movw	r22, r28
    1cd0:	6c 5f       	subi	r22, 0xFC	; 252
    1cd2:	7f 4f       	sbci	r23, 0xFF	; 255
    1cd4:	20 e0       	ldi	r18, 0x00	; 0
    1cd6:	ce 01       	movw	r24, r28
    1cd8:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1cdc:	df 91       	pop	r29
    1cde:	cf 91       	pop	r28
    1ce0:	1f 91       	pop	r17
    1ce2:	08 95       	ret

00001ce4 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    1ce4:	a0 e0       	ldi	r26, 0x00	; 0
    1ce6:	b0 e0       	ldi	r27, 0x00	; 0
    1ce8:	e8 e7       	ldi	r30, 0x78	; 120
    1cea:	fe e0       	ldi	r31, 0x0E	; 14
    1cec:	0c 94 4c 10 	jmp	0x2098	; 0x2098 <__prologue_saves__+0x12>
    1cf0:	ec 01       	movw	r28, r24
    1cf2:	8b 01       	movw	r16, r22
    1cf4:	b4 2e       	mov	r11, r20
    1cf6:	84 2f       	mov	r24, r20
    1cf8:	8d 7f       	andi	r24, 0xFD	; 253
    1cfa:	51 f4       	brne	.+20     	; 0x1d10 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    1cfc:	8c 81       	ldd	r24, Y+4	; 0x04
    1cfe:	9d 81       	ldd	r25, Y+5	; 0x05
    1d00:	89 2b       	or	r24, r25
    1d02:	09 f4       	brne	.+2      	; 0x1d06 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    1d04:	97 c0       	rjmp	.+302    	; 0x1e34 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1d06:	8e 81       	ldd	r24, Y+6	; 0x06
    1d08:	9f 81       	ldd	r25, Y+7	; 0x07
    1d0a:	89 2b       	or	r24, r25
    1d0c:	09 f4       	brne	.+2      	; 0x1d10 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    1d0e:	92 c0       	rjmp	.+292    	; 0x1e34 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1d10:	8f ef       	ldi	r24, 0xFF	; 255
    1d12:	8b 0d       	add	r24, r11
    1d14:	82 30       	cpi	r24, 0x02	; 2
    1d16:	50 f4       	brcc	.+20     	; 0x1d2c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    1d18:	88 81       	ld	r24, Y
    1d1a:	99 81       	ldd	r25, Y+1	; 0x01
    1d1c:	89 2b       	or	r24, r25
    1d1e:	09 f4       	brne	.+2      	; 0x1d22 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    1d20:	89 c0       	rjmp	.+274    	; 0x1e34 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1d22:	8a 81       	ldd	r24, Y+2	; 0x02
    1d24:	9b 81       	ldd	r25, Y+3	; 0x03
    1d26:	89 2b       	or	r24, r25
    1d28:	09 f4       	brne	.+2      	; 0x1d2c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    1d2a:	84 c0       	rjmp	.+264    	; 0x1e34 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1d2c:	4b 2d       	mov	r20, r11
    1d2e:	b8 01       	movw	r22, r16
    1d30:	ce 01       	movw	r24, r28
    1d32:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <_ZN16PololuQTRSensors4readEPjh>
    1d36:	78 01       	movw	r14, r16
    1d38:	00 e0       	ldi	r16, 0x00	; 0
    1d3a:	10 e0       	ldi	r17, 0x00	; 0
    1d3c:	c1 2c       	mov	r12, r1
    1d3e:	d1 2c       	mov	r13, r1
    1d40:	88 85       	ldd	r24, Y+8	; 0x08
    1d42:	90 e0       	ldi	r25, 0x00	; 0
    1d44:	c8 16       	cp	r12, r24
    1d46:	d9 06       	cpc	r13, r25
    1d48:	0c f0       	brlt	.+2      	; 0x1d4c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    1d4a:	74 c0       	rjmp	.+232    	; 0x1e34 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1d4c:	81 e0       	ldi	r24, 0x01	; 1
    1d4e:	b8 12       	cpse	r11, r24
    1d50:	0a c0       	rjmp	.+20     	; 0x1d66 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    1d52:	ea 81       	ldd	r30, Y+2	; 0x02
    1d54:	fb 81       	ldd	r31, Y+3	; 0x03
    1d56:	e0 0f       	add	r30, r16
    1d58:	f1 1f       	adc	r31, r17
    1d5a:	01 90       	ld	r0, Z+
    1d5c:	f0 81       	ld	r31, Z
    1d5e:	e0 2d       	mov	r30, r0
    1d60:	a8 81       	ld	r26, Y
    1d62:	b9 81       	ldd	r27, Y+1	; 0x01
    1d64:	0d c0       	rjmp	.+26     	; 0x1d80 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    1d66:	8c 81       	ldd	r24, Y+4	; 0x04
    1d68:	9d 81       	ldd	r25, Y+5	; 0x05
    1d6a:	2e 81       	ldd	r18, Y+6	; 0x06
    1d6c:	3f 81       	ldd	r19, Y+7	; 0x07
    1d6e:	b1 10       	cpse	r11, r1
    1d70:	0c c0       	rjmp	.+24     	; 0x1d8a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    1d72:	f9 01       	movw	r30, r18
    1d74:	e0 0f       	add	r30, r16
    1d76:	f1 1f       	adc	r31, r17
    1d78:	01 90       	ld	r0, Z+
    1d7a:	f0 81       	ld	r31, Z
    1d7c:	e0 2d       	mov	r30, r0
    1d7e:	dc 01       	movw	r26, r24
    1d80:	a0 0f       	add	r26, r16
    1d82:	b1 1f       	adc	r27, r17
    1d84:	8d 91       	ld	r24, X+
    1d86:	9c 91       	ld	r25, X
    1d88:	28 c0       	rjmp	.+80     	; 0x1dda <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    1d8a:	fc 01       	movw	r30, r24
    1d8c:	e0 0f       	add	r30, r16
    1d8e:	f1 1f       	adc	r31, r17
    1d90:	40 81       	ld	r20, Z
    1d92:	51 81       	ldd	r21, Z+1	; 0x01
    1d94:	e8 81       	ld	r30, Y
    1d96:	f9 81       	ldd	r31, Y+1	; 0x01
    1d98:	e0 0f       	add	r30, r16
    1d9a:	f1 1f       	adc	r31, r17
    1d9c:	80 81       	ld	r24, Z
    1d9e:	91 81       	ldd	r25, Z+1	; 0x01
    1da0:	ee 85       	ldd	r30, Y+14	; 0x0e
    1da2:	ff 85       	ldd	r31, Y+15	; 0x0f
    1da4:	48 17       	cp	r20, r24
    1da6:	59 07       	cpc	r21, r25
    1da8:	10 f4       	brcc	.+4      	; 0x1dae <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    1daa:	cf 01       	movw	r24, r30
    1dac:	04 c0       	rjmp	.+8      	; 0x1db6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    1dae:	8e 0f       	add	r24, r30
    1db0:	9f 1f       	adc	r25, r31
    1db2:	84 1b       	sub	r24, r20
    1db4:	95 0b       	sbc	r25, r21
    1db6:	d9 01       	movw	r26, r18
    1db8:	a0 0f       	add	r26, r16
    1dba:	b1 1f       	adc	r27, r17
    1dbc:	2d 91       	ld	r18, X+
    1dbe:	3c 91       	ld	r19, X
    1dc0:	aa 81       	ldd	r26, Y+2	; 0x02
    1dc2:	bb 81       	ldd	r27, Y+3	; 0x03
    1dc4:	a0 0f       	add	r26, r16
    1dc6:	b1 1f       	adc	r27, r17
    1dc8:	4d 91       	ld	r20, X+
    1dca:	5c 91       	ld	r21, X
    1dcc:	24 17       	cp	r18, r20
    1dce:	35 07       	cpc	r19, r21
    1dd0:	20 f0       	brcs	.+8      	; 0x1dda <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    1dd2:	e4 0f       	add	r30, r20
    1dd4:	f5 1f       	adc	r31, r21
    1dd6:	e2 1b       	sub	r30, r18
    1dd8:	f3 0b       	sbc	r31, r19
    1dda:	e8 1b       	sub	r30, r24
    1ddc:	f9 0b       	sbc	r31, r25
    1dde:	a9 f0       	breq	.+42     	; 0x1e0a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    1de0:	d7 01       	movw	r26, r14
    1de2:	2d 91       	ld	r18, X+
    1de4:	3c 91       	ld	r19, X
    1de6:	40 e0       	ldi	r20, 0x00	; 0
    1de8:	50 e0       	ldi	r21, 0x00	; 0
    1dea:	28 1b       	sub	r18, r24
    1dec:	39 0b       	sbc	r19, r25
    1dee:	41 09       	sbc	r20, r1
    1df0:	51 09       	sbc	r21, r1
    1df2:	a8 ee       	ldi	r26, 0xE8	; 232
    1df4:	b3 e0       	ldi	r27, 0x03	; 3
    1df6:	0e 94 30 10 	call	0x2060	; 0x2060 <__muluhisi3>
    1dfa:	9f 01       	movw	r18, r30
    1dfc:	40 e0       	ldi	r20, 0x00	; 0
    1dfe:	50 e0       	ldi	r21, 0x00	; 0
    1e00:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <__divmodsi4>
    1e04:	37 fd       	sbrc	r19, 7
    1e06:	0a c0       	rjmp	.+20     	; 0x1e1c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    1e08:	02 c0       	rjmp	.+4      	; 0x1e0e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    1e0a:	20 e0       	ldi	r18, 0x00	; 0
    1e0c:	30 e0       	ldi	r19, 0x00	; 0
    1e0e:	29 3e       	cpi	r18, 0xE9	; 233
    1e10:	b3 e0       	ldi	r27, 0x03	; 3
    1e12:	3b 07       	cpc	r19, r27
    1e14:	2c f0       	brlt	.+10     	; 0x1e20 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1e16:	28 ee       	ldi	r18, 0xE8	; 232
    1e18:	33 e0       	ldi	r19, 0x03	; 3
    1e1a:	02 c0       	rjmp	.+4      	; 0x1e20 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1e1c:	20 e0       	ldi	r18, 0x00	; 0
    1e1e:	30 e0       	ldi	r19, 0x00	; 0
    1e20:	f7 01       	movw	r30, r14
    1e22:	21 93       	st	Z+, r18
    1e24:	31 93       	st	Z+, r19
    1e26:	7f 01       	movw	r14, r30
    1e28:	ff ef       	ldi	r31, 0xFF	; 255
    1e2a:	cf 1a       	sub	r12, r31
    1e2c:	df 0a       	sbc	r13, r31
    1e2e:	0e 5f       	subi	r16, 0xFE	; 254
    1e30:	1f 4f       	sbci	r17, 0xFF	; 255
    1e32:	86 cf       	rjmp	.-244    	; 0x1d40 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    1e34:	cd b7       	in	r28, 0x3d	; 61
    1e36:	de b7       	in	r29, 0x3e	; 62
    1e38:	e9 e0       	ldi	r30, 0x09	; 9
    1e3a:	0c 94 68 10 	jmp	0x20d0	; 0x20d0 <__epilogue_restores__+0x12>

00001e3e <_ZN16PololuQTRSensors8readLineEPjhh>:
    1e3e:	a0 e0       	ldi	r26, 0x00	; 0
    1e40:	b0 e0       	ldi	r27, 0x00	; 0
    1e42:	e5 e2       	ldi	r30, 0x25	; 37
    1e44:	ff e0       	ldi	r31, 0x0F	; 15
    1e46:	0c 94 43 10 	jmp	0x2086	; 0x2086 <__prologue_saves__>
    1e4a:	ec 01       	movw	r28, r24
    1e4c:	8b 01       	movw	r16, r22
    1e4e:	82 2e       	mov	r8, r18
    1e50:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    1e54:	28 84       	ldd	r2, Y+8	; 0x08
    1e56:	e8 01       	movw	r28, r16
    1e58:	41 2c       	mov	r4, r1
    1e5a:	51 2c       	mov	r5, r1
    1e5c:	32 01       	movw	r6, r4
    1e5e:	00 e0       	ldi	r16, 0x00	; 0
    1e60:	10 e0       	ldi	r17, 0x00	; 0
    1e62:	c1 2c       	mov	r12, r1
    1e64:	d1 2c       	mov	r13, r1
    1e66:	76 01       	movw	r14, r12
    1e68:	31 2c       	mov	r3, r1
    1e6a:	91 2c       	mov	r9, r1
    1e6c:	58 ee       	ldi	r21, 0xE8	; 232
    1e6e:	a5 2e       	mov	r10, r21
    1e70:	53 e0       	ldi	r21, 0x03	; 3
    1e72:	b5 2e       	mov	r11, r21
    1e74:	92 14       	cp	r9, r2
    1e76:	21 f1       	breq	.+72     	; 0x1ec0 <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    1e78:	e9 91       	ld	r30, Y+
    1e7a:	f9 91       	ld	r31, Y+
    1e7c:	88 20       	and	r8, r8
    1e7e:	21 f0       	breq	.+8      	; 0x1e88 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    1e80:	c5 01       	movw	r24, r10
    1e82:	8e 1b       	sub	r24, r30
    1e84:	9f 0b       	sbc	r25, r31
    1e86:	fc 01       	movw	r30, r24
    1e88:	e9 3c       	cpi	r30, 0xC9	; 201
    1e8a:	f1 05       	cpc	r31, r1
    1e8c:	24 f4       	brge	.+8      	; 0x1e96 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    1e8e:	e3 33       	cpi	r30, 0x33	; 51
    1e90:	f1 05       	cpc	r31, r1
    1e92:	74 f0       	brlt	.+28     	; 0x1eb0 <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    1e94:	02 c0       	rjmp	.+4      	; 0x1e9a <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    1e96:	33 24       	eor	r3, r3
    1e98:	33 94       	inc	r3
    1e9a:	df 01       	movw	r26, r30
    1e9c:	a3 01       	movw	r20, r6
    1e9e:	92 01       	movw	r18, r4
    1ea0:	0e 94 3b 10 	call	0x2076	; 0x2076 <__mulshisi3>
    1ea4:	c6 0e       	add	r12, r22
    1ea6:	d7 1e       	adc	r13, r23
    1ea8:	e8 1e       	adc	r14, r24
    1eaa:	f9 1e       	adc	r15, r25
    1eac:	0e 0f       	add	r16, r30
    1eae:	1f 1f       	adc	r17, r31
    1eb0:	93 94       	inc	r9
    1eb2:	98 ee       	ldi	r25, 0xE8	; 232
    1eb4:	49 0e       	add	r4, r25
    1eb6:	93 e0       	ldi	r25, 0x03	; 3
    1eb8:	59 1e       	adc	r5, r25
    1eba:	61 1c       	adc	r6, r1
    1ebc:	71 1c       	adc	r7, r1
    1ebe:	da cf       	rjmp	.-76     	; 0x1e74 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    1ec0:	31 10       	cpse	r3, r1
    1ec2:	1e c0       	rjmp	.+60     	; 0x1f00 <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    1ec4:	49 2d       	mov	r20, r9
    1ec6:	50 e0       	ldi	r21, 0x00	; 0
    1ec8:	41 50       	subi	r20, 0x01	; 1
    1eca:	51 09       	sbc	r21, r1
    1ecc:	24 ef       	ldi	r18, 0xF4	; 244
    1ece:	31 e0       	ldi	r19, 0x01	; 1
    1ed0:	42 9f       	mul	r20, r18
    1ed2:	c0 01       	movw	r24, r0
    1ed4:	43 9f       	mul	r20, r19
    1ed6:	90 0d       	add	r25, r0
    1ed8:	52 9f       	mul	r21, r18
    1eda:	90 0d       	add	r25, r0
    1edc:	11 24       	eor	r1, r1
    1ede:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    1ee2:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    1ee6:	28 17       	cp	r18, r24
    1ee8:	39 07       	cpc	r19, r25
    1eea:	b4 f0       	brlt	.+44     	; 0x1f18 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    1eec:	88 ee       	ldi	r24, 0xE8	; 232
    1eee:	93 e0       	ldi	r25, 0x03	; 3
    1ef0:	48 9f       	mul	r20, r24
    1ef2:	90 01       	movw	r18, r0
    1ef4:	49 9f       	mul	r20, r25
    1ef6:	30 0d       	add	r19, r0
    1ef8:	58 9f       	mul	r21, r24
    1efa:	30 0d       	add	r19, r0
    1efc:	11 24       	eor	r1, r1
    1efe:	0e c0       	rjmp	.+28     	; 0x1f1c <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    1f00:	98 01       	movw	r18, r16
    1f02:	40 e0       	ldi	r20, 0x00	; 0
    1f04:	50 e0       	ldi	r21, 0x00	; 0
    1f06:	c7 01       	movw	r24, r14
    1f08:	b6 01       	movw	r22, r12
    1f0a:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <__udivmodsi4>
    1f0e:	30 93 91 01 	sts	0x0191, r19	; 0x800191 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    1f12:	20 93 90 01 	sts	0x0190, r18	; 0x800190 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    1f16:	02 c0       	rjmp	.+4      	; 0x1f1c <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    1f18:	20 e0       	ldi	r18, 0x00	; 0
    1f1a:	30 e0       	ldi	r19, 0x00	; 0
    1f1c:	c9 01       	movw	r24, r18
    1f1e:	cd b7       	in	r28, 0x3d	; 61
    1f20:	de b7       	in	r29, 0x3e	; 62
    1f22:	e2 e1       	ldi	r30, 0x12	; 18
    1f24:	0c 94 5f 10 	jmp	0x20be	; 0x20be <__epilogue_restores__>

00001f28 <_ZN16PololuQTRSensorsD1Ev>:
    1f28:	cf 93       	push	r28
    1f2a:	df 93       	push	r29
    1f2c:	ec 01       	movw	r28, r24
    1f2e:	8a 81       	ldd	r24, Y+2	; 0x02
    1f30:	9b 81       	ldd	r25, Y+3	; 0x03
    1f32:	00 97       	sbiw	r24, 0x00	; 0
    1f34:	11 f0       	breq	.+4      	; 0x1f3a <_ZN16PololuQTRSensorsD1Ev+0x12>
    1f36:	0e 94 12 11 	call	0x2224	; 0x2224 <free>
    1f3a:	8e 81       	ldd	r24, Y+6	; 0x06
    1f3c:	9f 81       	ldd	r25, Y+7	; 0x07
    1f3e:	00 97       	sbiw	r24, 0x00	; 0
    1f40:	11 f0       	breq	.+4      	; 0x1f46 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    1f42:	0e 94 12 11 	call	0x2224	; 0x2224 <free>
    1f46:	88 81       	ld	r24, Y
    1f48:	99 81       	ldd	r25, Y+1	; 0x01
    1f4a:	00 97       	sbiw	r24, 0x00	; 0
    1f4c:	11 f0       	breq	.+4      	; 0x1f52 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    1f4e:	0e 94 12 11 	call	0x2224	; 0x2224 <free>
    1f52:	8c 81       	ldd	r24, Y+4	; 0x04
    1f54:	9d 81       	ldd	r25, Y+5	; 0x05
    1f56:	00 97       	sbiw	r24, 0x00	; 0
    1f58:	11 f0       	breq	.+4      	; 0x1f5e <_ZN16PololuQTRSensorsD1Ev+0x36>
    1f5a:	0e 94 12 11 	call	0x2224	; 0x2224 <free>
    1f5e:	df 91       	pop	r29
    1f60:	cf 91       	pop	r28
    1f62:	08 95       	ret

00001f64 <__udivmodhi4>:
    1f64:	aa 1b       	sub	r26, r26
    1f66:	bb 1b       	sub	r27, r27
    1f68:	51 e1       	ldi	r21, 0x11	; 17
    1f6a:	07 c0       	rjmp	.+14     	; 0x1f7a <__udivmodhi4_ep>

00001f6c <__udivmodhi4_loop>:
    1f6c:	aa 1f       	adc	r26, r26
    1f6e:	bb 1f       	adc	r27, r27
    1f70:	a6 17       	cp	r26, r22
    1f72:	b7 07       	cpc	r27, r23
    1f74:	10 f0       	brcs	.+4      	; 0x1f7a <__udivmodhi4_ep>
    1f76:	a6 1b       	sub	r26, r22
    1f78:	b7 0b       	sbc	r27, r23

00001f7a <__udivmodhi4_ep>:
    1f7a:	88 1f       	adc	r24, r24
    1f7c:	99 1f       	adc	r25, r25
    1f7e:	5a 95       	dec	r21
    1f80:	a9 f7       	brne	.-22     	; 0x1f6c <__udivmodhi4_loop>
    1f82:	80 95       	com	r24
    1f84:	90 95       	com	r25
    1f86:	bc 01       	movw	r22, r24
    1f88:	cd 01       	movw	r24, r26
    1f8a:	08 95       	ret

00001f8c <__divmodhi4>:
    1f8c:	97 fb       	bst	r25, 7
    1f8e:	07 2e       	mov	r0, r23
    1f90:	16 f4       	brtc	.+4      	; 0x1f96 <__divmodhi4+0xa>
    1f92:	00 94       	com	r0
    1f94:	07 d0       	rcall	.+14     	; 0x1fa4 <__divmodhi4_neg1>
    1f96:	77 fd       	sbrc	r23, 7
    1f98:	09 d0       	rcall	.+18     	; 0x1fac <__divmodhi4_neg2>
    1f9a:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <__udivmodhi4>
    1f9e:	07 fc       	sbrc	r0, 7
    1fa0:	05 d0       	rcall	.+10     	; 0x1fac <__divmodhi4_neg2>
    1fa2:	3e f4       	brtc	.+14     	; 0x1fb2 <__divmodhi4_exit>

00001fa4 <__divmodhi4_neg1>:
    1fa4:	90 95       	com	r25
    1fa6:	81 95       	neg	r24
    1fa8:	9f 4f       	sbci	r25, 0xFF	; 255
    1faa:	08 95       	ret

00001fac <__divmodhi4_neg2>:
    1fac:	70 95       	com	r23
    1fae:	61 95       	neg	r22
    1fb0:	7f 4f       	sbci	r23, 0xFF	; 255

00001fb2 <__divmodhi4_exit>:
    1fb2:	08 95       	ret

00001fb4 <__udivmodsi4>:
    1fb4:	a1 e2       	ldi	r26, 0x21	; 33
    1fb6:	1a 2e       	mov	r1, r26
    1fb8:	aa 1b       	sub	r26, r26
    1fba:	bb 1b       	sub	r27, r27
    1fbc:	fd 01       	movw	r30, r26
    1fbe:	0d c0       	rjmp	.+26     	; 0x1fda <__udivmodsi4_ep>

00001fc0 <__udivmodsi4_loop>:
    1fc0:	aa 1f       	adc	r26, r26
    1fc2:	bb 1f       	adc	r27, r27
    1fc4:	ee 1f       	adc	r30, r30
    1fc6:	ff 1f       	adc	r31, r31
    1fc8:	a2 17       	cp	r26, r18
    1fca:	b3 07       	cpc	r27, r19
    1fcc:	e4 07       	cpc	r30, r20
    1fce:	f5 07       	cpc	r31, r21
    1fd0:	20 f0       	brcs	.+8      	; 0x1fda <__udivmodsi4_ep>
    1fd2:	a2 1b       	sub	r26, r18
    1fd4:	b3 0b       	sbc	r27, r19
    1fd6:	e4 0b       	sbc	r30, r20
    1fd8:	f5 0b       	sbc	r31, r21

00001fda <__udivmodsi4_ep>:
    1fda:	66 1f       	adc	r22, r22
    1fdc:	77 1f       	adc	r23, r23
    1fde:	88 1f       	adc	r24, r24
    1fe0:	99 1f       	adc	r25, r25
    1fe2:	1a 94       	dec	r1
    1fe4:	69 f7       	brne	.-38     	; 0x1fc0 <__udivmodsi4_loop>
    1fe6:	60 95       	com	r22
    1fe8:	70 95       	com	r23
    1fea:	80 95       	com	r24
    1fec:	90 95       	com	r25
    1fee:	9b 01       	movw	r18, r22
    1ff0:	ac 01       	movw	r20, r24
    1ff2:	bd 01       	movw	r22, r26
    1ff4:	cf 01       	movw	r24, r30
    1ff6:	08 95       	ret

00001ff8 <__divmodsi4>:
    1ff8:	05 2e       	mov	r0, r21
    1ffa:	97 fb       	bst	r25, 7
    1ffc:	1e f4       	brtc	.+6      	; 0x2004 <__divmodsi4+0xc>
    1ffe:	00 94       	com	r0
    2000:	0e 94 13 10 	call	0x2026	; 0x2026 <__negsi2>
    2004:	57 fd       	sbrc	r21, 7
    2006:	07 d0       	rcall	.+14     	; 0x2016 <__divmodsi4_neg2>
    2008:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <__udivmodsi4>
    200c:	07 fc       	sbrc	r0, 7
    200e:	03 d0       	rcall	.+6      	; 0x2016 <__divmodsi4_neg2>
    2010:	4e f4       	brtc	.+18     	; 0x2024 <__divmodsi4_exit>
    2012:	0c 94 13 10 	jmp	0x2026	; 0x2026 <__negsi2>

00002016 <__divmodsi4_neg2>:
    2016:	50 95       	com	r21
    2018:	40 95       	com	r20
    201a:	30 95       	com	r19
    201c:	21 95       	neg	r18
    201e:	3f 4f       	sbci	r19, 0xFF	; 255
    2020:	4f 4f       	sbci	r20, 0xFF	; 255
    2022:	5f 4f       	sbci	r21, 0xFF	; 255

00002024 <__divmodsi4_exit>:
    2024:	08 95       	ret

00002026 <__negsi2>:
    2026:	90 95       	com	r25
    2028:	80 95       	com	r24
    202a:	70 95       	com	r23
    202c:	61 95       	neg	r22
    202e:	7f 4f       	sbci	r23, 0xFF	; 255
    2030:	8f 4f       	sbci	r24, 0xFF	; 255
    2032:	9f 4f       	sbci	r25, 0xFF	; 255
    2034:	08 95       	ret

00002036 <__tablejump2__>:
    2036:	ee 0f       	add	r30, r30
    2038:	ff 1f       	adc	r31, r31
    203a:	05 90       	lpm	r0, Z+
    203c:	f4 91       	lpm	r31, Z
    203e:	e0 2d       	mov	r30, r0
    2040:	09 94       	ijmp

00002042 <__umulhisi3>:
    2042:	a2 9f       	mul	r26, r18
    2044:	b0 01       	movw	r22, r0
    2046:	b3 9f       	mul	r27, r19
    2048:	c0 01       	movw	r24, r0
    204a:	a3 9f       	mul	r26, r19
    204c:	70 0d       	add	r23, r0
    204e:	81 1d       	adc	r24, r1
    2050:	11 24       	eor	r1, r1
    2052:	91 1d       	adc	r25, r1
    2054:	b2 9f       	mul	r27, r18
    2056:	70 0d       	add	r23, r0
    2058:	81 1d       	adc	r24, r1
    205a:	11 24       	eor	r1, r1
    205c:	91 1d       	adc	r25, r1
    205e:	08 95       	ret

00002060 <__muluhisi3>:
    2060:	0e 94 21 10 	call	0x2042	; 0x2042 <__umulhisi3>
    2064:	a5 9f       	mul	r26, r21
    2066:	90 0d       	add	r25, r0
    2068:	b4 9f       	mul	r27, r20
    206a:	90 0d       	add	r25, r0
    206c:	a4 9f       	mul	r26, r20
    206e:	80 0d       	add	r24, r0
    2070:	91 1d       	adc	r25, r1
    2072:	11 24       	eor	r1, r1
    2074:	08 95       	ret

00002076 <__mulshisi3>:
    2076:	b7 ff       	sbrs	r27, 7
    2078:	0c 94 30 10 	jmp	0x2060	; 0x2060 <__muluhisi3>

0000207c <__mulohisi3>:
    207c:	0e 94 30 10 	call	0x2060	; 0x2060 <__muluhisi3>
    2080:	82 1b       	sub	r24, r18
    2082:	93 0b       	sbc	r25, r19
    2084:	08 95       	ret

00002086 <__prologue_saves__>:
    2086:	2f 92       	push	r2
    2088:	3f 92       	push	r3
    208a:	4f 92       	push	r4
    208c:	5f 92       	push	r5
    208e:	6f 92       	push	r6
    2090:	7f 92       	push	r7
    2092:	8f 92       	push	r8
    2094:	9f 92       	push	r9
    2096:	af 92       	push	r10
    2098:	bf 92       	push	r11
    209a:	cf 92       	push	r12
    209c:	df 92       	push	r13
    209e:	ef 92       	push	r14
    20a0:	ff 92       	push	r15
    20a2:	0f 93       	push	r16
    20a4:	1f 93       	push	r17
    20a6:	cf 93       	push	r28
    20a8:	df 93       	push	r29
    20aa:	cd b7       	in	r28, 0x3d	; 61
    20ac:	de b7       	in	r29, 0x3e	; 62
    20ae:	ca 1b       	sub	r28, r26
    20b0:	db 0b       	sbc	r29, r27
    20b2:	0f b6       	in	r0, 0x3f	; 63
    20b4:	f8 94       	cli
    20b6:	de bf       	out	0x3e, r29	; 62
    20b8:	0f be       	out	0x3f, r0	; 63
    20ba:	cd bf       	out	0x3d, r28	; 61
    20bc:	09 94       	ijmp

000020be <__epilogue_restores__>:
    20be:	2a 88       	ldd	r2, Y+18	; 0x12
    20c0:	39 88       	ldd	r3, Y+17	; 0x11
    20c2:	48 88       	ldd	r4, Y+16	; 0x10
    20c4:	5f 84       	ldd	r5, Y+15	; 0x0f
    20c6:	6e 84       	ldd	r6, Y+14	; 0x0e
    20c8:	7d 84       	ldd	r7, Y+13	; 0x0d
    20ca:	8c 84       	ldd	r8, Y+12	; 0x0c
    20cc:	9b 84       	ldd	r9, Y+11	; 0x0b
    20ce:	aa 84       	ldd	r10, Y+10	; 0x0a
    20d0:	b9 84       	ldd	r11, Y+9	; 0x09
    20d2:	c8 84       	ldd	r12, Y+8	; 0x08
    20d4:	df 80       	ldd	r13, Y+7	; 0x07
    20d6:	ee 80       	ldd	r14, Y+6	; 0x06
    20d8:	fd 80       	ldd	r15, Y+5	; 0x05
    20da:	0c 81       	ldd	r16, Y+4	; 0x04
    20dc:	1b 81       	ldd	r17, Y+3	; 0x03
    20de:	aa 81       	ldd	r26, Y+2	; 0x02
    20e0:	b9 81       	ldd	r27, Y+1	; 0x01
    20e2:	ce 0f       	add	r28, r30
    20e4:	d1 1d       	adc	r29, r1
    20e6:	0f b6       	in	r0, 0x3f	; 63
    20e8:	f8 94       	cli
    20ea:	de bf       	out	0x3e, r29	; 62
    20ec:	0f be       	out	0x3f, r0	; 63
    20ee:	cd bf       	out	0x3d, r28	; 61
    20f0:	ed 01       	movw	r28, r26
    20f2:	08 95       	ret

000020f4 <malloc>:
    20f4:	0f 93       	push	r16
    20f6:	1f 93       	push	r17
    20f8:	cf 93       	push	r28
    20fa:	df 93       	push	r29
    20fc:	82 30       	cpi	r24, 0x02	; 2
    20fe:	91 05       	cpc	r25, r1
    2100:	10 f4       	brcc	.+4      	; 0x2106 <malloc+0x12>
    2102:	82 e0       	ldi	r24, 0x02	; 2
    2104:	90 e0       	ldi	r25, 0x00	; 0
    2106:	e0 91 a7 01 	lds	r30, 0x01A7	; 0x8001a7 <__flp>
    210a:	f0 91 a8 01 	lds	r31, 0x01A8	; 0x8001a8 <__flp+0x1>
    210e:	20 e0       	ldi	r18, 0x00	; 0
    2110:	30 e0       	ldi	r19, 0x00	; 0
    2112:	a0 e0       	ldi	r26, 0x00	; 0
    2114:	b0 e0       	ldi	r27, 0x00	; 0
    2116:	30 97       	sbiw	r30, 0x00	; 0
    2118:	19 f1       	breq	.+70     	; 0x2160 <malloc+0x6c>
    211a:	40 81       	ld	r20, Z
    211c:	51 81       	ldd	r21, Z+1	; 0x01
    211e:	02 81       	ldd	r16, Z+2	; 0x02
    2120:	13 81       	ldd	r17, Z+3	; 0x03
    2122:	48 17       	cp	r20, r24
    2124:	59 07       	cpc	r21, r25
    2126:	c8 f0       	brcs	.+50     	; 0x215a <malloc+0x66>
    2128:	84 17       	cp	r24, r20
    212a:	95 07       	cpc	r25, r21
    212c:	69 f4       	brne	.+26     	; 0x2148 <malloc+0x54>
    212e:	10 97       	sbiw	r26, 0x00	; 0
    2130:	31 f0       	breq	.+12     	; 0x213e <malloc+0x4a>
    2132:	12 96       	adiw	r26, 0x02	; 2
    2134:	0c 93       	st	X, r16
    2136:	12 97       	sbiw	r26, 0x02	; 2
    2138:	13 96       	adiw	r26, 0x03	; 3
    213a:	1c 93       	st	X, r17
    213c:	27 c0       	rjmp	.+78     	; 0x218c <malloc+0x98>
    213e:	00 93 a7 01 	sts	0x01A7, r16	; 0x8001a7 <__flp>
    2142:	10 93 a8 01 	sts	0x01A8, r17	; 0x8001a8 <__flp+0x1>
    2146:	22 c0       	rjmp	.+68     	; 0x218c <malloc+0x98>
    2148:	21 15       	cp	r18, r1
    214a:	31 05       	cpc	r19, r1
    214c:	19 f0       	breq	.+6      	; 0x2154 <malloc+0x60>
    214e:	42 17       	cp	r20, r18
    2150:	53 07       	cpc	r21, r19
    2152:	18 f4       	brcc	.+6      	; 0x215a <malloc+0x66>
    2154:	9a 01       	movw	r18, r20
    2156:	bd 01       	movw	r22, r26
    2158:	ef 01       	movw	r28, r30
    215a:	df 01       	movw	r26, r30
    215c:	f8 01       	movw	r30, r16
    215e:	db cf       	rjmp	.-74     	; 0x2116 <malloc+0x22>
    2160:	21 15       	cp	r18, r1
    2162:	31 05       	cpc	r19, r1
    2164:	f9 f0       	breq	.+62     	; 0x21a4 <malloc+0xb0>
    2166:	28 1b       	sub	r18, r24
    2168:	39 0b       	sbc	r19, r25
    216a:	24 30       	cpi	r18, 0x04	; 4
    216c:	31 05       	cpc	r19, r1
    216e:	80 f4       	brcc	.+32     	; 0x2190 <malloc+0x9c>
    2170:	8a 81       	ldd	r24, Y+2	; 0x02
    2172:	9b 81       	ldd	r25, Y+3	; 0x03
    2174:	61 15       	cp	r22, r1
    2176:	71 05       	cpc	r23, r1
    2178:	21 f0       	breq	.+8      	; 0x2182 <malloc+0x8e>
    217a:	fb 01       	movw	r30, r22
    217c:	93 83       	std	Z+3, r25	; 0x03
    217e:	82 83       	std	Z+2, r24	; 0x02
    2180:	04 c0       	rjmp	.+8      	; 0x218a <malloc+0x96>
    2182:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <__flp+0x1>
    2186:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <__flp>
    218a:	fe 01       	movw	r30, r28
    218c:	32 96       	adiw	r30, 0x02	; 2
    218e:	44 c0       	rjmp	.+136    	; 0x2218 <malloc+0x124>
    2190:	fe 01       	movw	r30, r28
    2192:	e2 0f       	add	r30, r18
    2194:	f3 1f       	adc	r31, r19
    2196:	81 93       	st	Z+, r24
    2198:	91 93       	st	Z+, r25
    219a:	22 50       	subi	r18, 0x02	; 2
    219c:	31 09       	sbc	r19, r1
    219e:	39 83       	std	Y+1, r19	; 0x01
    21a0:	28 83       	st	Y, r18
    21a2:	3a c0       	rjmp	.+116    	; 0x2218 <malloc+0x124>
    21a4:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <__brkval>
    21a8:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <__brkval+0x1>
    21ac:	23 2b       	or	r18, r19
    21ae:	41 f4       	brne	.+16     	; 0x21c0 <malloc+0xcc>
    21b0:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    21b4:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    21b8:	30 93 a6 01 	sts	0x01A6, r19	; 0x8001a6 <__brkval+0x1>
    21bc:	20 93 a5 01 	sts	0x01A5, r18	; 0x8001a5 <__brkval>
    21c0:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    21c4:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    21c8:	21 15       	cp	r18, r1
    21ca:	31 05       	cpc	r19, r1
    21cc:	41 f4       	brne	.+16     	; 0x21de <malloc+0xea>
    21ce:	2d b7       	in	r18, 0x3d	; 61
    21d0:	3e b7       	in	r19, 0x3e	; 62
    21d2:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    21d6:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    21da:	24 1b       	sub	r18, r20
    21dc:	35 0b       	sbc	r19, r21
    21de:	e0 91 a5 01 	lds	r30, 0x01A5	; 0x8001a5 <__brkval>
    21e2:	f0 91 a6 01 	lds	r31, 0x01A6	; 0x8001a6 <__brkval+0x1>
    21e6:	e2 17       	cp	r30, r18
    21e8:	f3 07       	cpc	r31, r19
    21ea:	a0 f4       	brcc	.+40     	; 0x2214 <malloc+0x120>
    21ec:	2e 1b       	sub	r18, r30
    21ee:	3f 0b       	sbc	r19, r31
    21f0:	28 17       	cp	r18, r24
    21f2:	39 07       	cpc	r19, r25
    21f4:	78 f0       	brcs	.+30     	; 0x2214 <malloc+0x120>
    21f6:	ac 01       	movw	r20, r24
    21f8:	4e 5f       	subi	r20, 0xFE	; 254
    21fa:	5f 4f       	sbci	r21, 0xFF	; 255
    21fc:	24 17       	cp	r18, r20
    21fe:	35 07       	cpc	r19, r21
    2200:	48 f0       	brcs	.+18     	; 0x2214 <malloc+0x120>
    2202:	4e 0f       	add	r20, r30
    2204:	5f 1f       	adc	r21, r31
    2206:	50 93 a6 01 	sts	0x01A6, r21	; 0x8001a6 <__brkval+0x1>
    220a:	40 93 a5 01 	sts	0x01A5, r20	; 0x8001a5 <__brkval>
    220e:	81 93       	st	Z+, r24
    2210:	91 93       	st	Z+, r25
    2212:	02 c0       	rjmp	.+4      	; 0x2218 <malloc+0x124>
    2214:	e0 e0       	ldi	r30, 0x00	; 0
    2216:	f0 e0       	ldi	r31, 0x00	; 0
    2218:	cf 01       	movw	r24, r30
    221a:	df 91       	pop	r29
    221c:	cf 91       	pop	r28
    221e:	1f 91       	pop	r17
    2220:	0f 91       	pop	r16
    2222:	08 95       	ret

00002224 <free>:
    2224:	cf 93       	push	r28
    2226:	df 93       	push	r29
    2228:	00 97       	sbiw	r24, 0x00	; 0
    222a:	09 f4       	brne	.+2      	; 0x222e <free+0xa>
    222c:	81 c0       	rjmp	.+258    	; 0x2330 <free+0x10c>
    222e:	fc 01       	movw	r30, r24
    2230:	32 97       	sbiw	r30, 0x02	; 2
    2232:	13 82       	std	Z+3, r1	; 0x03
    2234:	12 82       	std	Z+2, r1	; 0x02
    2236:	a0 91 a7 01 	lds	r26, 0x01A7	; 0x8001a7 <__flp>
    223a:	b0 91 a8 01 	lds	r27, 0x01A8	; 0x8001a8 <__flp+0x1>
    223e:	10 97       	sbiw	r26, 0x00	; 0
    2240:	81 f4       	brne	.+32     	; 0x2262 <free+0x3e>
    2242:	20 81       	ld	r18, Z
    2244:	31 81       	ldd	r19, Z+1	; 0x01
    2246:	82 0f       	add	r24, r18
    2248:	93 1f       	adc	r25, r19
    224a:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <__brkval>
    224e:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <__brkval+0x1>
    2252:	28 17       	cp	r18, r24
    2254:	39 07       	cpc	r19, r25
    2256:	51 f5       	brne	.+84     	; 0x22ac <free+0x88>
    2258:	f0 93 a6 01 	sts	0x01A6, r31	; 0x8001a6 <__brkval+0x1>
    225c:	e0 93 a5 01 	sts	0x01A5, r30	; 0x8001a5 <__brkval>
    2260:	67 c0       	rjmp	.+206    	; 0x2330 <free+0x10c>
    2262:	ed 01       	movw	r28, r26
    2264:	20 e0       	ldi	r18, 0x00	; 0
    2266:	30 e0       	ldi	r19, 0x00	; 0
    2268:	ce 17       	cp	r28, r30
    226a:	df 07       	cpc	r29, r31
    226c:	40 f4       	brcc	.+16     	; 0x227e <free+0x5a>
    226e:	4a 81       	ldd	r20, Y+2	; 0x02
    2270:	5b 81       	ldd	r21, Y+3	; 0x03
    2272:	9e 01       	movw	r18, r28
    2274:	41 15       	cp	r20, r1
    2276:	51 05       	cpc	r21, r1
    2278:	f1 f0       	breq	.+60     	; 0x22b6 <free+0x92>
    227a:	ea 01       	movw	r28, r20
    227c:	f5 cf       	rjmp	.-22     	; 0x2268 <free+0x44>
    227e:	d3 83       	std	Z+3, r29	; 0x03
    2280:	c2 83       	std	Z+2, r28	; 0x02
    2282:	40 81       	ld	r20, Z
    2284:	51 81       	ldd	r21, Z+1	; 0x01
    2286:	84 0f       	add	r24, r20
    2288:	95 1f       	adc	r25, r21
    228a:	c8 17       	cp	r28, r24
    228c:	d9 07       	cpc	r29, r25
    228e:	59 f4       	brne	.+22     	; 0x22a6 <free+0x82>
    2290:	88 81       	ld	r24, Y
    2292:	99 81       	ldd	r25, Y+1	; 0x01
    2294:	84 0f       	add	r24, r20
    2296:	95 1f       	adc	r25, r21
    2298:	02 96       	adiw	r24, 0x02	; 2
    229a:	91 83       	std	Z+1, r25	; 0x01
    229c:	80 83       	st	Z, r24
    229e:	8a 81       	ldd	r24, Y+2	; 0x02
    22a0:	9b 81       	ldd	r25, Y+3	; 0x03
    22a2:	93 83       	std	Z+3, r25	; 0x03
    22a4:	82 83       	std	Z+2, r24	; 0x02
    22a6:	21 15       	cp	r18, r1
    22a8:	31 05       	cpc	r19, r1
    22aa:	29 f4       	brne	.+10     	; 0x22b6 <free+0x92>
    22ac:	f0 93 a8 01 	sts	0x01A8, r31	; 0x8001a8 <__flp+0x1>
    22b0:	e0 93 a7 01 	sts	0x01A7, r30	; 0x8001a7 <__flp>
    22b4:	3d c0       	rjmp	.+122    	; 0x2330 <free+0x10c>
    22b6:	e9 01       	movw	r28, r18
    22b8:	fb 83       	std	Y+3, r31	; 0x03
    22ba:	ea 83       	std	Y+2, r30	; 0x02
    22bc:	49 91       	ld	r20, Y+
    22be:	59 91       	ld	r21, Y+
    22c0:	c4 0f       	add	r28, r20
    22c2:	d5 1f       	adc	r29, r21
    22c4:	ec 17       	cp	r30, r28
    22c6:	fd 07       	cpc	r31, r29
    22c8:	61 f4       	brne	.+24     	; 0x22e2 <free+0xbe>
    22ca:	80 81       	ld	r24, Z
    22cc:	91 81       	ldd	r25, Z+1	; 0x01
    22ce:	84 0f       	add	r24, r20
    22d0:	95 1f       	adc	r25, r21
    22d2:	02 96       	adiw	r24, 0x02	; 2
    22d4:	e9 01       	movw	r28, r18
    22d6:	99 83       	std	Y+1, r25	; 0x01
    22d8:	88 83       	st	Y, r24
    22da:	82 81       	ldd	r24, Z+2	; 0x02
    22dc:	93 81       	ldd	r25, Z+3	; 0x03
    22de:	9b 83       	std	Y+3, r25	; 0x03
    22e0:	8a 83       	std	Y+2, r24	; 0x02
    22e2:	e0 e0       	ldi	r30, 0x00	; 0
    22e4:	f0 e0       	ldi	r31, 0x00	; 0
    22e6:	12 96       	adiw	r26, 0x02	; 2
    22e8:	8d 91       	ld	r24, X+
    22ea:	9c 91       	ld	r25, X
    22ec:	13 97       	sbiw	r26, 0x03	; 3
    22ee:	00 97       	sbiw	r24, 0x00	; 0
    22f0:	19 f0       	breq	.+6      	; 0x22f8 <free+0xd4>
    22f2:	fd 01       	movw	r30, r26
    22f4:	dc 01       	movw	r26, r24
    22f6:	f7 cf       	rjmp	.-18     	; 0x22e6 <free+0xc2>
    22f8:	8d 91       	ld	r24, X+
    22fa:	9c 91       	ld	r25, X
    22fc:	11 97       	sbiw	r26, 0x01	; 1
    22fe:	9d 01       	movw	r18, r26
    2300:	2e 5f       	subi	r18, 0xFE	; 254
    2302:	3f 4f       	sbci	r19, 0xFF	; 255
    2304:	82 0f       	add	r24, r18
    2306:	93 1f       	adc	r25, r19
    2308:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <__brkval>
    230c:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <__brkval+0x1>
    2310:	28 17       	cp	r18, r24
    2312:	39 07       	cpc	r19, r25
    2314:	69 f4       	brne	.+26     	; 0x2330 <free+0x10c>
    2316:	30 97       	sbiw	r30, 0x00	; 0
    2318:	29 f4       	brne	.+10     	; 0x2324 <free+0x100>
    231a:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <__flp+0x1>
    231e:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <__flp>
    2322:	02 c0       	rjmp	.+4      	; 0x2328 <free+0x104>
    2324:	13 82       	std	Z+3, r1	; 0x03
    2326:	12 82       	std	Z+2, r1	; 0x02
    2328:	b0 93 a6 01 	sts	0x01A6, r27	; 0x8001a6 <__brkval+0x1>
    232c:	a0 93 a5 01 	sts	0x01A5, r26	; 0x8001a5 <__brkval>
    2330:	df 91       	pop	r29
    2332:	cf 91       	pop	r28
    2334:	08 95       	ret

00002336 <__do_global_dtors>:
    2336:	10 e0       	ldi	r17, 0x00	; 0
    2338:	c4 e3       	ldi	r28, 0x34	; 52
    233a:	d0 e0       	ldi	r29, 0x00	; 0
    233c:	04 c0       	rjmp	.+8      	; 0x2346 <__do_global_dtors+0x10>
    233e:	fe 01       	movw	r30, r28
    2340:	0e 94 1b 10 	call	0x2036	; 0x2036 <__tablejump2__>
    2344:	21 96       	adiw	r28, 0x01	; 1
    2346:	c5 33       	cpi	r28, 0x35	; 53
    2348:	d1 07       	cpc	r29, r17
    234a:	c9 f7       	brne	.-14     	; 0x233e <__do_global_dtors+0x8>
    234c:	f8 94       	cli

0000234e <__stop_program>:
    234e:	ff cf       	rjmp	.-2      	; 0x234e <__stop_program>
