
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  000019b8  00001a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000019b8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000071  0080010e  0080010e  00001a5a  2**0
                  ALLOC
  3 .stab         00004ba8  00000000  00000000  00001a5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000084be  00000000  00000000  00006604  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  0000eac2  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000eb04  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000098  00000000  00000000  0000eb44  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   000011b3  00000000  00000000  0000ebdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000996  00000000  00000000  0000fd8f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00000c8e  00000000  00000000  00010725  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  0000012c  00000000  00000000  000113b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0000055e  00000000  00000000  000114e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00000239  00000000  00000000  00011a3e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000068  00000000  00000000  00011c77  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__dtors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 1a 05 	jmp	0xa34	; 0xa34 <__vector_9>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	9d 02       	muls	r25, r29
      6a:	a1 02       	muls	r26, r17
      6c:	ff 02       	muls	r31, r31
      6e:	77 02       	muls	r23, r23
      70:	85 02       	muls	r24, r21
      72:	93 02       	muls	r25, r19
      74:	77 02       	muls	r23, r23
      76:	77 02       	muls	r23, r23
      78:	77 02       	muls	r23, r23

0000007a <__ctors_end>:
      7a:	de 05       	cpc	r29, r14

0000007c <__dtors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d8 e0       	ldi	r29, 0x08	; 8
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	11 e0       	ldi	r17, 0x01	; 1
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	e8 eb       	ldi	r30, 0xB8	; 184
      90:	f9 e1       	ldi	r31, 0x19	; 25
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	ae 30       	cpi	r26, 0x0E	; 14
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	21 e0       	ldi	r18, 0x01	; 1
      a0:	ae e0       	ldi	r26, 0x0E	; 14
      a2:	b1 e0       	ldi	r27, 0x01	; 1
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	af 37       	cpi	r26, 0x7F	; 127
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 5d 00 	call	0xba	; 0xba <main>
      b2:	0c 94 cf 0c 	jmp	0x199e	; 0x199e <__do_global_dtors>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <main>:
#include <pololu/3pi.h>
#include <avr/pgmspace.h>


int main()
{
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
      be:	cd b7       	in	r28, 0x3d	; 61
      c0:	de b7       	in	r29, 0x3e	; 62
      c2:	64 97       	sbiw	r28, 0x14	; 20
      c4:	0f b6       	in	r0, 0x3f	; 63
      c6:	f8 94       	cli
      c8:	de bf       	out	0x3e, r29	; 62
      ca:	0f be       	out	0x3f, r0	; 63
      cc:	cd bf       	out	0x3d, r28	; 61
	pololu_3pi_init(2000);
      ce:	80 ed       	ldi	r24, 0xD0	; 208
      d0:	97 e0       	ldi	r25, 0x07	; 7
      d2:	0e 94 da 05 	call	0xbb4	; 0xbb4 <pololu_3pi_init>
	initialize();
      d6:	0e 94 80 00 	call	0x100	; 0x100 <initialize>
	char parecour[20];
	parcour(parecour);
      da:	ce 01       	movw	r24, r28
      dc:	01 96       	adiw	r24, 0x01	; 1
      de:	0e 94 67 02 	call	0x4ce	; 0x4ce <parcour>
	print(parecour);
      e2:	ce 01       	movw	r24, r28
      e4:	01 96       	adiw	r24, 0x01	; 1
      e6:	0e 94 1e 04 	call	0x83c	; 0x83c <print>
}
      ea:	80 e0       	ldi	r24, 0x00	; 0
      ec:	90 e0       	ldi	r25, 0x00	; 0
      ee:	64 96       	adiw	r28, 0x14	; 20
      f0:	0f b6       	in	r0, 0x3f	; 63
      f2:	f8 94       	cli
      f4:	de bf       	out	0x3e, r29	; 62
      f6:	0f be       	out	0x3f, r0	; 63
      f8:	cd bf       	out	0x3d, r28	; 61
      fa:	df 91       	pop	r29
      fc:	cf 91       	pop	r28
      fe:	08 95       	ret

00000100 <initialize>:
		print_character(c);
	}
}

void initialize()
{
     100:	cf 93       	push	r28
     102:	df 93       	push	r29
	unsigned int counter; // used as a simple timer
	
	pololu_3pi_init(2000);
     104:	80 ed       	ldi	r24, 0xD0	; 208
     106:	97 e0       	ldi	r25, 0x07	; 7
     108:	0e 94 da 05 	call	0xbb4	; 0xbb4 <pololu_3pi_init>
	
	while(!button_is_pressed(BUTTON_B)){}	
     10c:	80 e1       	ldi	r24, 0x10	; 16
     10e:	0e 94 17 05 	call	0xa2e	; 0xa2e <button_is_pressed>
     112:	88 23       	and	r24, r24
     114:	d9 f3       	breq	.-10     	; 0x10c <initialize+0xc>
	wait_for_button_release(BUTTON_B);
     116:	80 e1       	ldi	r24, 0x10	; 16
     118:	0e 94 03 05 	call	0xa06	; 0xa06 <wait_for_button_release>
	delay_ms(1000);
     11c:	88 ee       	ldi	r24, 0xE8	; 232
     11e:	93 e0       	ldi	r25, 0x03	; 3
     120:	0e 94 62 05 	call	0xac4	; 0xac4 <delay_ms>

	for(counter=0;counter<80;counter++)
     124:	c0 e0       	ldi	r28, 0x00	; 0
     126:	d0 e0       	ldi	r29, 0x00	; 0
     128:	19 c0       	rjmp	.+50     	; 0x15c <initialize+0x5c>
	{
		if(counter < 20 || counter >= 60)
     12a:	ce 01       	movw	r24, r28
     12c:	44 97       	sbiw	r24, 0x14	; 20
     12e:	88 97       	sbiw	r24, 0x28	; 40
     130:	38 f0       	brcs	.+14     	; 0x140 <initialize+0x40>
		set_motors(40,-40);
     132:	68 ed       	ldi	r22, 0xD8	; 216
     134:	7f ef       	ldi	r23, 0xFF	; 255
     136:	88 e2       	ldi	r24, 0x28	; 40
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
     13e:	06 c0       	rjmp	.+12     	; 0x14c <initialize+0x4c>
		else
		set_motors(-40,40);
     140:	68 e2       	ldi	r22, 0x28	; 40
     142:	70 e0       	ldi	r23, 0x00	; 0
     144:	88 ed       	ldi	r24, 0xD8	; 216
     146:	9f ef       	ldi	r25, 0xFF	; 255
     148:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
		calibrate_line_sensors(IR_EMITTERS_ON);
     14c:	81 e0       	ldi	r24, 0x01	; 1
     14e:	0e 94 9e 05 	call	0xb3c	; 0xb3c <calibrate_line_sensors>
		
		delay_ms(20);
     152:	84 e1       	ldi	r24, 0x14	; 20
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	0e 94 62 05 	call	0xac4	; 0xac4 <delay_ms>
	
	while(!button_is_pressed(BUTTON_B)){}	
	wait_for_button_release(BUTTON_B);
	delay_ms(1000);

	for(counter=0;counter<80;counter++)
     15a:	21 96       	adiw	r28, 0x01	; 1
     15c:	c0 35       	cpi	r28, 0x50	; 80
     15e:	d1 05       	cpc	r29, r1
     160:	20 f3       	brcs	.-56     	; 0x12a <initialize+0x2a>
		set_motors(-40,40);
		calibrate_line_sensors(IR_EMITTERS_ON);
		
		delay_ms(20);
	}
	set_motors(0,0);
     162:	60 e0       	ldi	r22, 0x00	; 0
     164:	70 e0       	ldi	r23, 0x00	; 0
     166:	80 e0       	ldi	r24, 0x00	; 0
     168:	90 e0       	ldi	r25, 0x00	; 0
     16a:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
	
	while(!button_is_pressed(BUTTON_B)){}
     16e:	80 e1       	ldi	r24, 0x10	; 16
     170:	0e 94 17 05 	call	0xa2e	; 0xa2e <button_is_pressed>
     174:	88 23       	and	r24, r24
     176:	d9 f3       	breq	.-10     	; 0x16e <initialize+0x6e>
	wait_for_button_release(BUTTON_B);
     178:	80 e1       	ldi	r24, 0x10	; 16
     17a:	0e 94 03 05 	call	0xa06	; 0xa06 <wait_for_button_release>
	
	clear();
     17e:	0e 94 0f 04 	call	0x81e	; 0x81e <clear>
}
     182:	df 91       	pop	r29
     184:	cf 91       	pop	r28
     186:	08 95       	ret

00000188 <inch>:

void inch(){
	set_motors(50,50);
     188:	62 e3       	ldi	r22, 0x32	; 50
     18a:	70 e0       	ldi	r23, 0x00	; 0
     18c:	82 e3       	ldi	r24, 0x32	; 50
     18e:	90 e0       	ldi	r25, 0x00	; 0
     190:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     194:	88 ec       	ldi	r24, 0xC8	; 200
     196:	90 e0       	ldi	r25, 0x00	; 0
     198:	0e 94 62 05 	call	0xac4	; 0xac4 <delay_ms>
	delay(200);
	set_motors(0,0);
     19c:	60 e0       	ldi	r22, 0x00	; 0
     19e:	70 e0       	ldi	r23, 0x00	; 0
     1a0:	80 e0       	ldi	r24, 0x00	; 0
     1a2:	90 e0       	ldi	r25, 0x00	; 0
     1a4:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
     1a8:	08 95       	ret

000001aa <motorControl>:
		
	}
}


void motorControl(char x){
     1aa:	cf 93       	push	r28
     1ac:	c8 2f       	mov	r28, r24
	read_line(sensors,IR_EMITTERS_ON);
     1ae:	61 e0       	ldi	r22, 0x01	; 1
     1b0:	80 e7       	ldi	r24, 0x70	; 112
     1b2:	91 e0       	ldi	r25, 0x01	; 1
     1b4:	0e 94 a4 05 	call	0xb48	; 0xb48 <read_line>
	
	if(x == 'N')
     1b8:	ce 34       	cpi	r28, 0x4E	; 78
     1ba:	39 f4       	brne	.+14     	; 0x1ca <motorControl+0x20>
	set_motors(0,0);
     1bc:	60 e0       	ldi	r22, 0x00	; 0
     1be:	70 e0       	ldi	r23, 0x00	; 0
     1c0:	80 e0       	ldi	r24, 0x00	; 0
     1c2:	90 e0       	ldi	r25, 0x00	; 0
     1c4:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
     1c8:	b7 c0       	rjmp	.+366    	; 0x338 <motorControl+0x18e>
	
	
	else if(x == 'L'){										//turn left
     1ca:	cc 34       	cpi	r28, 0x4C	; 76
     1cc:	09 f5       	brne	.+66     	; 0x210 <motorControl+0x66>
		set_motors(-50,50);
     1ce:	62 e3       	ldi	r22, 0x32	; 50
     1d0:	70 e0       	ldi	r23, 0x00	; 0
     1d2:	8e ec       	ldi	r24, 0xCE	; 206
     1d4:	9f ef       	ldi	r25, 0xFF	; 255
     1d6:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
		while (sensors[2] >=500){
     1da:	05 c0       	rjmp	.+10     	; 0x1e6 <motorControl+0x3c>
			read_line(sensors,IR_EMITTERS_ON);
     1dc:	61 e0       	ldi	r22, 0x01	; 1
     1de:	80 e7       	ldi	r24, 0x70	; 112
     1e0:	91 e0       	ldi	r25, 0x01	; 1
     1e2:	0e 94 a4 05 	call	0xb48	; 0xb48 <read_line>
	set_motors(0,0);
	
	
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
     1e6:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     1ea:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     1ee:	84 3f       	cpi	r24, 0xF4	; 244
     1f0:	91 40       	sbci	r25, 0x01	; 1
     1f2:	a0 f7       	brcc	.-24     	; 0x1dc <motorControl+0x32>
     1f4:	05 c0       	rjmp	.+10     	; 0x200 <motorControl+0x56>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     1f6:	61 e0       	ldi	r22, 0x01	; 1
     1f8:	80 e7       	ldi	r24, 0x70	; 112
     1fa:	91 e0       	ldi	r25, 0x01	; 1
     1fc:	0e 94 a4 05 	call	0xb48	; 0xb48 <read_line>
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     200:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     204:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     208:	85 3f       	cpi	r24, 0xF5	; 245
     20a:	91 40       	sbci	r25, 0x01	; 1
     20c:	a0 f3       	brcs	.-24     	; 0x1f6 <motorControl+0x4c>
     20e:	94 c0       	rjmp	.+296    	; 0x338 <motorControl+0x18e>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'R'){									//turn right
     210:	c2 35       	cpi	r28, 0x52	; 82
     212:	09 f5       	brne	.+66     	; 0x256 <motorControl+0xac>
		set_motors(50,-50);
     214:	6e ec       	ldi	r22, 0xCE	; 206
     216:	7f ef       	ldi	r23, 0xFF	; 255
     218:	82 e3       	ldi	r24, 0x32	; 50
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
		while (sensors[2] >=500){
     220:	05 c0       	rjmp	.+10     	; 0x22c <motorControl+0x82>
			read_line(sensors,IR_EMITTERS_ON);
     222:	61 e0       	ldi	r22, 0x01	; 1
     224:	80 e7       	ldi	r24, 0x70	; 112
     226:	91 e0       	ldi	r25, 0x01	; 1
     228:	0e 94 a4 05 	call	0xb48	; 0xb48 <read_line>
		}
	}
	
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
     22c:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     230:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     234:	84 3f       	cpi	r24, 0xF4	; 244
     236:	91 40       	sbci	r25, 0x01	; 1
     238:	a0 f7       	brcc	.-24     	; 0x222 <motorControl+0x78>
     23a:	05 c0       	rjmp	.+10     	; 0x246 <motorControl+0x9c>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     23c:	61 e0       	ldi	r22, 0x01	; 1
     23e:	80 e7       	ldi	r24, 0x70	; 112
     240:	91 e0       	ldi	r25, 0x01	; 1
     242:	0e 94 a4 05 	call	0xb48	; 0xb48 <read_line>
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     246:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     24a:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     24e:	85 3f       	cpi	r24, 0xF5	; 245
     250:	91 40       	sbci	r25, 0x01	; 1
     252:	a0 f3       	brcs	.-24     	; 0x23c <motorControl+0x92>
     254:	71 c0       	rjmp	.+226    	; 0x338 <motorControl+0x18e>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'S'){									//drive straight and corrects the adjusment of the robot if it aint straight
     256:	c3 35       	cpi	r28, 0x53	; 83
     258:	89 f5       	brne	.+98     	; 0x2bc <motorControl+0x112>
		set_motors(50,50);
     25a:	62 e3       	ldi	r22, 0x32	; 50
     25c:	70 e0       	ldi	r23, 0x00	; 0
     25e:	82 e3       	ldi	r24, 0x32	; 50
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
		
		if (sensors[3] >=400  && sensors[4] <=400 )
     266:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <sensors+0x6>
     26a:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <sensors+0x7>
     26e:	80 39       	cpi	r24, 0x90	; 144
     270:	91 40       	sbci	r25, 0x01	; 1
     272:	68 f0       	brcs	.+26     	; 0x28e <motorControl+0xe4>
     274:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <sensors+0x8>
     278:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <sensors+0x9>
     27c:	81 39       	cpi	r24, 0x91	; 145
     27e:	91 40       	sbci	r25, 0x01	; 1
     280:	30 f4       	brcc	.+12     	; 0x28e <motorControl+0xe4>
		set_motors(100,40);
     282:	68 e2       	ldi	r22, 0x28	; 40
     284:	70 e0       	ldi	r23, 0x00	; 0
     286:	84 e6       	ldi	r24, 0x64	; 100
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
		if (sensors[1] >=400 && sensors[0] <=400  )
     28e:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sensors+0x2>
     292:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <sensors+0x3>
     296:	80 39       	cpi	r24, 0x90	; 144
     298:	91 40       	sbci	r25, 0x01	; 1
     29a:	08 f4       	brcc	.+2      	; 0x29e <motorControl+0xf4>
     29c:	4d c0       	rjmp	.+154    	; 0x338 <motorControl+0x18e>
     29e:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <sensors>
     2a2:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <sensors+0x1>
     2a6:	81 39       	cpi	r24, 0x91	; 145
     2a8:	91 40       	sbci	r25, 0x01	; 1
     2aa:	08 f0       	brcs	.+2      	; 0x2ae <motorControl+0x104>
     2ac:	45 c0       	rjmp	.+138    	; 0x338 <motorControl+0x18e>
		set_motors(40,100);
     2ae:	64 e6       	ldi	r22, 0x64	; 100
     2b0:	70 e0       	ldi	r23, 0x00	; 0
     2b2:	88 e2       	ldi	r24, 0x28	; 40
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
     2ba:	3e c0       	rjmp	.+124    	; 0x338 <motorControl+0x18e>
	}
	
	else if(x == 'B'){									// reverse
     2bc:	c2 34       	cpi	r28, 0x42	; 66
     2be:	09 f5       	brne	.+66     	; 0x302 <motorControl+0x158>
		set_motors(-50,-50);
     2c0:	6e ec       	ldi	r22, 0xCE	; 206
     2c2:	7f ef       	ldi	r23, 0xFF	; 255
     2c4:	8e ec       	ldi	r24, 0xCE	; 206
     2c6:	9f ef       	ldi	r25, 0xFF	; 255
     2c8:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
		if (sensors[3] >=400)
     2cc:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <sensors+0x6>
     2d0:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <sensors+0x7>
     2d4:	80 39       	cpi	r24, 0x90	; 144
     2d6:	91 40       	sbci	r25, 0x01	; 1
     2d8:	30 f0       	brcs	.+12     	; 0x2e6 <motorControl+0x13c>
		set_motors(-50,-55);
     2da:	69 ec       	ldi	r22, 0xC9	; 201
     2dc:	7f ef       	ldi	r23, 0xFF	; 255
     2de:	8e ec       	ldi	r24, 0xCE	; 206
     2e0:	9f ef       	ldi	r25, 0xFF	; 255
     2e2:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
		if (sensors[1] >=400)
     2e6:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sensors+0x2>
     2ea:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <sensors+0x3>
     2ee:	80 39       	cpi	r24, 0x90	; 144
     2f0:	91 40       	sbci	r25, 0x01	; 1
     2f2:	10 f1       	brcs	.+68     	; 0x338 <motorControl+0x18e>
		set_motors(-55,-50);
     2f4:	6e ec       	ldi	r22, 0xCE	; 206
     2f6:	7f ef       	ldi	r23, 0xFF	; 255
     2f8:	89 ec       	ldi	r24, 0xC9	; 201
     2fa:	9f ef       	ldi	r25, 0xFF	; 255
     2fc:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
     300:	1b c0       	rjmp	.+54     	; 0x338 <motorControl+0x18e>
	}
	else if(x == 'T'){									// Turn around
     302:	c4 35       	cpi	r28, 0x54	; 84
     304:	c9 f4       	brne	.+50     	; 0x338 <motorControl+0x18e>
		set_motors(-75,75);
     306:	6b e4       	ldi	r22, 0x4B	; 75
     308:	70 e0       	ldi	r23, 0x00	; 0
     30a:	85 eb       	ldi	r24, 0xB5	; 181
     30c:	9f ef       	ldi	r25, 0xFF	; 255
     30e:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
		while (sensors[2] <=500){
     312:	05 c0       	rjmp	.+10     	; 0x31e <motorControl+0x174>
			read_line(sensors,IR_EMITTERS_ON);
     314:	61 e0       	ldi	r22, 0x01	; 1
     316:	80 e7       	ldi	r24, 0x70	; 112
     318:	91 e0       	ldi	r25, 0x01	; 1
     31a:	0e 94 a4 05 	call	0xb48	; 0xb48 <read_line>
		if (sensors[1] >=400)
		set_motors(-55,-50);
	}
	else if(x == 'T'){									// Turn around
		set_motors(-75,75);
		while (sensors[2] <=500){
     31e:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     322:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     326:	85 3f       	cpi	r24, 0xF5	; 245
     328:	91 40       	sbci	r25, 0x01	; 1
     32a:	a0 f3       	brcs	.-24     	; 0x314 <motorControl+0x16a>
			read_line(sensors,IR_EMITTERS_ON);
		}
		set_motors(0,0);
     32c:	60 e0       	ldi	r22, 0x00	; 0
     32e:	70 e0       	ldi	r23, 0x00	; 0
     330:	80 e0       	ldi	r24, 0x00	; 0
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
	}
     338:	cf 91       	pop	r28
     33a:	08 95       	ret

0000033c <direction>:
	set_motors(0,0);
}

char direction(){																											// function that returns the type of junction it detects
	while(1){																												// >= 500 = black line		<=500 = white
		read_line(sensors,IR_EMITTERS_ON);
     33c:	61 e0       	ldi	r22, 0x01	; 1
     33e:	80 e7       	ldi	r24, 0x70	; 112
     340:	91 e0       	ldi	r25, 0x01	; 1
     342:	0e 94 a4 05 	call	0xb48	; 0xb48 <read_line>
		
		if (sensors[1] >=500 && sensors[3] >= 500){																			// this checks if its a X junction or a T junction
     346:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sensors+0x2>
     34a:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <sensors+0x3>
     34e:	84 3f       	cpi	r24, 0xF4	; 244
     350:	21 e0       	ldi	r18, 0x01	; 1
     352:	92 07       	cpc	r25, r18
     354:	c0 f0       	brcs	.+48     	; 0x386 <direction+0x4a>
     356:	20 91 76 01 	lds	r18, 0x0176	; 0x800176 <sensors+0x6>
     35a:	30 91 77 01 	lds	r19, 0x0177	; 0x800177 <sensors+0x7>
     35e:	24 3f       	cpi	r18, 0xF4	; 244
     360:	31 40       	sbci	r19, 0x01	; 1
     362:	88 f0       	brcs	.+34     	; 0x386 <direction+0x4a>
			inch();
     364:	0e 94 c4 00 	call	0x188	; 0x188 <inch>
			read_line(sensors,IR_EMITTERS_ON);
     368:	61 e0       	ldi	r22, 0x01	; 1
     36a:	80 e7       	ldi	r24, 0x70	; 112
     36c:	91 e0       	ldi	r25, 0x01	; 1
     36e:	0e 94 a4 05 	call	0xb48	; 0xb48 <read_line>
			
			if (sensors[2] >=500)
     372:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     376:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     37a:	84 3f       	cpi	r24, 0xF4	; 244
     37c:	91 40       	sbci	r25, 0x01	; 1
     37e:	08 f4       	brcc	.+2      	; 0x382 <direction+0x46>
     380:	90 c0       	rjmp	.+288    	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
			return X_junction;
     382:	88 e0       	ldi	r24, 0x08	; 8
     384:	08 95       	ret
			else
			return T_junction;
		}
		
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
     386:	84 3f       	cpi	r24, 0xF4	; 244
     388:	21 e0       	ldi	r18, 0x01	; 1
     38a:	92 07       	cpc	r25, r18
     38c:	00 f1       	brcs	.+64     	; 0x3ce <direction+0x92>
     38e:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <sensors>
     392:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <sensors+0x1>
     396:	24 3f       	cpi	r18, 0xF4	; 244
     398:	31 40       	sbci	r19, 0x01	; 1
     39a:	c8 f0       	brcs	.+50     	; 0x3ce <direction+0x92>
			inch();
     39c:	0e 94 c4 00 	call	0x188	; 0x188 <inch>
			read_line(sensors,IR_EMITTERS_ON);
     3a0:	61 e0       	ldi	r22, 0x01	; 1
     3a2:	80 e7       	ldi	r24, 0x70	; 112
     3a4:	91 e0       	ldi	r25, 0x01	; 1
     3a6:	0e 94 a4 05 	call	0xb48	; 0xb48 <read_line>
			
			if (sensors[2] >= 500 || sensors[3] >=500)
     3aa:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     3ae:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     3b2:	84 3f       	cpi	r24, 0xF4	; 244
     3b4:	91 40       	sbci	r25, 0x01	; 1
     3b6:	08 f0       	brcs	.+2      	; 0x3ba <direction+0x7e>
     3b8:	76 c0       	rjmp	.+236    	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
     3ba:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <sensors+0x6>
     3be:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <sensors+0x7>
     3c2:	84 3f       	cpi	r24, 0xF4	; 244
     3c4:	91 40       	sbci	r25, 0x01	; 1
     3c6:	08 f4       	brcc	.+2      	; 0x3ca <direction+0x8e>
     3c8:	70 c0       	rjmp	.+224    	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
			return Straight_left_junction;
     3ca:	86 e0       	ldi	r24, 0x06	; 6
     3cc:	08 95       	ret
			else
			return Left_corner;
		}
		
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
     3ce:	40 91 76 01 	lds	r20, 0x0176	; 0x800176 <sensors+0x6>
     3d2:	50 91 77 01 	lds	r21, 0x0177	; 0x800177 <sensors+0x7>
     3d6:	44 3f       	cpi	r20, 0xF4	; 244
     3d8:	61 e0       	ldi	r22, 0x01	; 1
     3da:	56 07       	cpc	r21, r22
     3dc:	00 f1       	brcs	.+64     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
     3de:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <sensors+0x8>
     3e2:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <sensors+0x9>
     3e6:	24 3f       	cpi	r18, 0xF4	; 244
     3e8:	31 40       	sbci	r19, 0x01	; 1
     3ea:	c8 f0       	brcs	.+50     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
			inch();
     3ec:	0e 94 c4 00 	call	0x188	; 0x188 <inch>
			read_line(sensors,IR_EMITTERS_ON);
     3f0:	61 e0       	ldi	r22, 0x01	; 1
     3f2:	80 e7       	ldi	r24, 0x70	; 112
     3f4:	91 e0       	ldi	r25, 0x01	; 1
     3f6:	0e 94 a4 05 	call	0xb48	; 0xb48 <read_line>
			
			if (sensors[2] >= 500 || sensors[1] >=500)
     3fa:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <sensors+0x4>
     3fe:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <sensors+0x5>
     402:	84 3f       	cpi	r24, 0xF4	; 244
     404:	91 40       	sbci	r25, 0x01	; 1
     406:	08 f0       	brcs	.+2      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
     408:	52 c0       	rjmp	.+164    	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
     40a:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sensors+0x2>
     40e:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <sensors+0x3>
     412:	84 3f       	cpi	r24, 0xF4	; 244
     414:	91 40       	sbci	r25, 0x01	; 1
     416:	08 f4       	brcc	.+2      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     418:	4c c0       	rjmp	.+152    	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
			return Straight_right_junction;
     41a:	85 e0       	ldi	r24, 0x05	; 5
     41c:	08 95       	ret
			else
			return Right_corner;
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
     41e:	20 91 74 01 	lds	r18, 0x0174	; 0x800174 <sensors+0x4>
     422:	30 91 75 01 	lds	r19, 0x0175	; 0x800175 <sensors+0x5>
     426:	29 3c       	cpi	r18, 0xC9	; 201
     428:	31 05       	cpc	r19, r1
     42a:	08 f4       	brcc	.+2      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     42c:	44 c0       	rjmp	.+136    	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
			return Line_end;
		}

		
		else if (sensors[2] >=500){
     42e:	24 3f       	cpi	r18, 0xF4	; 244
     430:	61 e0       	ldi	r22, 0x01	; 1
     432:	36 07       	cpc	r19, r22
     434:	08 f4       	brcc	.+2      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
     436:	82 cf       	rjmp	.-252    	; 0x33c <direction>
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
     438:	24 3f       	cpi	r18, 0xF4	; 244
     43a:	61 e0       	ldi	r22, 0x01	; 1
     43c:	36 07       	cpc	r19, r22
     43e:	e8 f1       	brcs	.+122    	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
     440:	45 3f       	cpi	r20, 0xF5	; 245
     442:	51 40       	sbci	r21, 0x01	; 1
     444:	e0 f5       	brcc	.+120    	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
     446:	40 91 78 01 	lds	r20, 0x0178	; 0x800178 <sensors+0x8>
     44a:	50 91 79 01 	lds	r21, 0x0179	; 0x800179 <sensors+0x9>
     44e:	44 3f       	cpi	r20, 0xF4	; 244
     450:	51 40       	sbci	r21, 0x01	; 1
     452:	b8 f1       	brcs	.+110    	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>
     454:	40 91 70 01 	lds	r20, 0x0170	; 0x800170 <sensors>
     458:	50 91 71 01 	lds	r21, 0x0171	; 0x800171 <sensors+0x1>
     45c:	44 3f       	cpi	r20, 0xF4	; 244
     45e:	51 40       	sbci	r21, 0x01	; 1
     460:	90 f1       	brcs	.+100    	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
     462:	85 3f       	cpi	r24, 0xF5	; 245
     464:	91 40       	sbci	r25, 0x01	; 1
     466:	88 f5       	brcc	.+98     	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
     468:	24 3f       	cpi	r18, 0xF4	; 244
     46a:	31 40       	sbci	r19, 0x01	; 1
     46c:	50 f4       	brcc	.+20     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
			}
			else
			return Straight;																						// check if its straight without any corners
     46e:	80 e0       	ldi	r24, 0x00	; 0
     470:	08 95       	ret

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
					read_line(sensors,IR_EMITTERS_ON);
     472:	61 e0       	ldi	r22, 0x01	; 1
     474:	80 e7       	ldi	r24, 0x70	; 112
     476:	91 e0       	ldi	r25, 0x01	; 1
     478:	0e 94 a4 05 	call	0xb48	; 0xb48 <read_line>
					motorControl('S');
     47c:	83 e5       	ldi	r24, 0x53	; 83
     47e:	0e 94 d5 00 	call	0x1aa	; 0x1aa <motorControl>
		}

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
     482:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <sensors+0x8>
     486:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <sensors+0x9>
     48a:	80 39       	cpi	r24, 0x90	; 144
     48c:	91 40       	sbci	r25, 0x01	; 1
     48e:	88 f7       	brcc	.-30     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
     490:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <sensors>
     494:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <sensors+0x1>
     498:	80 39       	cpi	r24, 0x90	; 144
     49a:	91 40       	sbci	r25, 0x01	; 1
     49c:	50 f7       	brcc	.-44     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
					read_line(sensors,IR_EMITTERS_ON);
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
     49e:	82 e0       	ldi	r24, 0x02	; 2
     4a0:	08 95       	ret
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >=500)
			return X_junction;
			else
			return T_junction;
     4a2:	87 e0       	ldi	r24, 0x07	; 7
     4a4:	08 95       	ret
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[3] >=500)
			return Straight_left_junction;
     4a6:	86 e0       	ldi	r24, 0x06	; 6
     4a8:	08 95       	ret
			else
			return Left_corner;
     4aa:	83 e0       	ldi	r24, 0x03	; 3
     4ac:	08 95       	ret
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[1] >=500)
			return Straight_right_junction;
     4ae:	85 e0       	ldi	r24, 0x05	; 5
     4b0:	08 95       	ret
			else
			return Right_corner;
     4b2:	84 e0       	ldi	r24, 0x04	; 4
     4b4:	08 95       	ret
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
			return Line_end;
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	08 95       	ret
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
			}
			else
			return Straight;																						// check if its straight without any corners
     4ba:	80 e0       	ldi	r24, 0x00	; 0
     4bc:	08 95       	ret
     4be:	80 e0       	ldi	r24, 0x00	; 0
     4c0:	08 95       	ret
     4c2:	80 e0       	ldi	r24, 0x00	; 0
     4c4:	08 95       	ret
     4c6:	80 e0       	ldi	r24, 0x00	; 0
     4c8:	08 95       	ret
     4ca:	80 e0       	ldi	r24, 0x00	; 0
			
		}
		
	}
}
     4cc:	08 95       	ret

000004ce <parcour>:

char richting;

Junctions situatie = Straight;

char parcour(char *route) {
     4ce:	cf 93       	push	r28
     4d0:	df 93       	push	r29
     4d2:	ec 01       	movw	r28, r24
	while(1) {
		situatie = direction();
     4d4:	0e 94 9e 01 	call	0x33c	; 0x33c <direction>
     4d8:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <situatie>
		
		switch (situatie) {
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	89 30       	cpi	r24, 0x09	; 9
     4e0:	91 05       	cpc	r25, r1
     4e2:	e0 f5       	brcc	.+120    	; 0x55c <parcour+0x8e>
     4e4:	fc 01       	movw	r30, r24
     4e6:	ec 5c       	subi	r30, 0xCC	; 204
     4e8:	ff 4f       	sbci	r31, 0xFF	; 255
     4ea:	0c 94 3f 0b 	jmp	0x167e	; 0x167e <__tablejump2__>
			
			case X_junction:
			case Left_corner:
			case T_junction:
			case Straight_left_junction:
				motorControl('L');
     4ee:	8c e4       	ldi	r24, 0x4C	; 76
     4f0:	0e 94 d5 00 	call	0x1aa	; 0x1aa <motorControl>
				richting = 'L';
     4f4:	8c e4       	ldi	r24, 0x4C	; 76
     4f6:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
				strncat(route, &richting, 1);
     4fa:	41 e0       	ldi	r20, 0x01	; 1
     4fc:	50 e0       	ldi	r21, 0x00	; 0
     4fe:	6a e7       	ldi	r22, 0x7A	; 122
     500:	71 e0       	ldi	r23, 0x01	; 1
     502:	ce 01       	movw	r24, r28
     504:	0e 94 bf 0c 	call	0x197e	; 0x197e <strncat>
				break;
     508:	29 c0       	rjmp	.+82     	; 0x55c <parcour+0x8e>
			
			case Right_corner:
				motorControl('R');
     50a:	82 e5       	ldi	r24, 0x52	; 82
     50c:	0e 94 d5 00 	call	0x1aa	; 0x1aa <motorControl>
				richting = 'R';
     510:	82 e5       	ldi	r24, 0x52	; 82
     512:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
				strncat(route, &richting, 1);
     516:	41 e0       	ldi	r20, 0x01	; 1
     518:	50 e0       	ldi	r21, 0x00	; 0
     51a:	6a e7       	ldi	r22, 0x7A	; 122
     51c:	71 e0       	ldi	r23, 0x01	; 1
     51e:	ce 01       	movw	r24, r28
     520:	0e 94 bf 0c 	call	0x197e	; 0x197e <strncat>
				break;
     524:	1b c0       	rjmp	.+54     	; 0x55c <parcour+0x8e>
			
			case Straight_right_junction:
				richting = 'S';
     526:	83 e5       	ldi	r24, 0x53	; 83
     528:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
				strncat(route, &richting, 1);
     52c:	41 e0       	ldi	r20, 0x01	; 1
     52e:	50 e0       	ldi	r21, 0x00	; 0
     530:	6a e7       	ldi	r22, 0x7A	; 122
     532:	71 e0       	ldi	r23, 0x01	; 1
     534:	ce 01       	movw	r24, r28
     536:	0e 94 bf 0c 	call	0x197e	; 0x197e <strncat>
			case Straight:
				motorControl('S');
     53a:	83 e5       	ldi	r24, 0x53	; 83
     53c:	0e 94 d5 00 	call	0x1aa	; 0x1aa <motorControl>
				break;
     540:	0d c0       	rjmp	.+26     	; 0x55c <parcour+0x8e>
			
			case Line_end:
				motorControl('T');
     542:	84 e5       	ldi	r24, 0x54	; 84
     544:	0e 94 d5 00 	call	0x1aa	; 0x1aa <motorControl>
				richting = 'T';
     548:	84 e5       	ldi	r24, 0x54	; 84
     54a:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
				strncat(route, &richting, 1);
     54e:	41 e0       	ldi	r20, 0x01	; 1
     550:	50 e0       	ldi	r21, 0x00	; 0
     552:	6a e7       	ldi	r22, 0x7A	; 122
     554:	71 e0       	ldi	r23, 0x01	; 1
     556:	ce 01       	movw	r24, r28
     558:	0e 94 bf 0c 	call	0x197e	; 0x197e <strncat>
				break;
		}
		
		
		if (route[-2] == 'T') {
     55c:	fe 01       	movw	r30, r28
     55e:	32 97       	sbiw	r30, 0x02	; 2
     560:	80 81       	ld	r24, Z
     562:	84 35       	cpi	r24, 0x54	; 84
     564:	09 f0       	breq	.+2      	; 0x568 <parcour+0x9a>
     566:	b6 cf       	rjmp	.-148    	; 0x4d4 <parcour+0x6>
			route[strlen(route)-3] = '\0';
     568:	fe 01       	movw	r30, r28
     56a:	01 90       	ld	r0, Z+
     56c:	00 20       	and	r0, r0
     56e:	e9 f7       	brne	.-6      	; 0x56a <parcour+0x9c>
     570:	31 97       	sbiw	r30, 0x01	; 1
     572:	ec 1b       	sub	r30, r28
     574:	fd 0b       	sbc	r31, r29
     576:	33 97       	sbiw	r30, 0x03	; 3
     578:	ec 0f       	add	r30, r28
     57a:	fd 1f       	adc	r31, r29
     57c:	10 82       	st	Z, r1
			if (route[-3] == 'L' && route[-1] == 'L') {
     57e:	fe 01       	movw	r30, r28
     580:	33 97       	sbiw	r30, 0x03	; 3
     582:	80 81       	ld	r24, Z
     584:	8c 34       	cpi	r24, 0x4C	; 76
     586:	41 f4       	brne	.+16     	; 0x598 <parcour+0xca>
     588:	32 96       	adiw	r30, 0x02	; 2
     58a:	90 81       	ld	r25, Z
     58c:	9c 34       	cpi	r25, 0x4C	; 76
     58e:	21 f4       	brne	.+8      	; 0x598 <parcour+0xca>
				richting = 'S';
     590:	83 e5       	ldi	r24, 0x53	; 83
     592:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
     596:	2b c0       	rjmp	.+86     	; 0x5ee <parcour+0x120>
			} else if (route[-3] == 'S' && route[-1] == 'L'){
     598:	83 35       	cpi	r24, 0x53	; 83
     59a:	49 f4       	brne	.+18     	; 0x5ae <parcour+0xe0>
     59c:	fe 01       	movw	r30, r28
     59e:	31 97       	sbiw	r30, 0x01	; 1
     5a0:	90 81       	ld	r25, Z
     5a2:	9c 34       	cpi	r25, 0x4C	; 76
     5a4:	21 f4       	brne	.+8      	; 0x5ae <parcour+0xe0>
				richting = 'R';			
     5a6:	82 e5       	ldi	r24, 0x52	; 82
     5a8:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
     5ac:	20 c0       	rjmp	.+64     	; 0x5ee <parcour+0x120>
			} else if (route[-3] == 'R' && route[-1] == 'L'){
     5ae:	82 35       	cpi	r24, 0x52	; 82
     5b0:	49 f4       	brne	.+18     	; 0x5c4 <parcour+0xf6>
     5b2:	fe 01       	movw	r30, r28
     5b4:	31 97       	sbiw	r30, 0x01	; 1
     5b6:	90 81       	ld	r25, Z
     5b8:	9c 34       	cpi	r25, 0x4C	; 76
     5ba:	21 f4       	brne	.+8      	; 0x5c4 <parcour+0xf6>
				richting = 'T';			
     5bc:	84 e5       	ldi	r24, 0x54	; 84
     5be:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
     5c2:	15 c0       	rjmp	.+42     	; 0x5ee <parcour+0x120>
			} else if (route[-3] == 'L' && route[-1] == 'R'){
     5c4:	8c 34       	cpi	r24, 0x4C	; 76
     5c6:	49 f4       	brne	.+18     	; 0x5da <parcour+0x10c>
     5c8:	fe 01       	movw	r30, r28
     5ca:	31 97       	sbiw	r30, 0x01	; 1
     5cc:	90 81       	ld	r25, Z
     5ce:	92 35       	cpi	r25, 0x52	; 82
     5d0:	21 f4       	brne	.+8      	; 0x5da <parcour+0x10c>
				richting = 'T';			
     5d2:	84 e5       	ldi	r24, 0x54	; 84
     5d4:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
     5d8:	0a c0       	rjmp	.+20     	; 0x5ee <parcour+0x120>
			} else if (route[-3] == 'L' && route[-1] == 'S'){
     5da:	8c 34       	cpi	r24, 0x4C	; 76
     5dc:	41 f4       	brne	.+16     	; 0x5ee <parcour+0x120>
     5de:	fe 01       	movw	r30, r28
     5e0:	31 97       	sbiw	r30, 0x01	; 1
     5e2:	80 81       	ld	r24, Z
     5e4:	83 35       	cpi	r24, 0x53	; 83
     5e6:	19 f4       	brne	.+6      	; 0x5ee <parcour+0x120>
				richting = 'R';			
     5e8:	82 e5       	ldi	r24, 0x52	; 82
     5ea:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <richting>
			}
			strncat(route, &richting, 1);				
     5ee:	41 e0       	ldi	r20, 0x01	; 1
     5f0:	50 e0       	ldi	r21, 0x00	; 0
     5f2:	6a e7       	ldi	r22, 0x7A	; 122
     5f4:	71 e0       	ldi	r23, 0x01	; 1
     5f6:	ce 01       	movw	r24, r28
     5f8:	0e 94 bf 0c 	call	0x197e	; 0x197e <strncat>
     5fc:	6b cf       	rjmp	.-298    	; 0x4d4 <parcour+0x6>
	while(1) {
		situatie = direction();
		
		switch (situatie) {
			case Barcode: // end of parcour
				set_motors(0,0);
     5fe:	60 e0       	ldi	r22, 0x00	; 0
     600:	70 e0       	ldi	r23, 0x00	; 0
     602:	80 e0       	ldi	r24, 0x00	; 0
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <set_motors>
			}
			strncat(route, &richting, 1);				
		}
	}
	return 0;
     60a:	80 e0       	ldi	r24, 0x00	; 0
     60c:	df 91       	pop	r29
     60e:	cf 91       	pop	r28
     610:	08 95       	ret

00000612 <delay_us.constprop.0>:
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	90 e0       	ldi	r25, 0x00	; 0
     616:	6f 93       	push	r22
     618:	64 e0       	ldi	r22, 0x04	; 4
     61a:	6a 95       	dec	r22
     61c:	f1 f7       	brne	.-4      	; 0x61a <delay_us.constprop.0+0x8>
     61e:	6f 91       	pop	r22
     620:	01 97       	sbiw	r24, 0x01	; 1
     622:	c9 f7       	brne	.-14     	; 0x616 <delay_us.constprop.0+0x4>
     624:	08 95       	ret

00000626 <_ZN12OrangutanLCD8busyWaitEv>:
     626:	0f 93       	push	r16
     628:	1f 93       	push	r17
     62a:	cf 93       	push	r28
     62c:	df 93       	push	r29
     62e:	1a b1       	in	r17, 0x0a	; 10
     630:	57 98       	cbi	0x0a, 7	; 10
     632:	5a 98       	cbi	0x0b, 2	; 11
     634:	28 9a       	sbi	0x05, 0	; 5
     636:	c0 e0       	ldi	r28, 0x00	; 0
     638:	d0 e0       	ldi	r29, 0x00	; 0
     63a:	0e 94 09 03 	call	0x612	; 0x612 <delay_us.constprop.0>
     63e:	5c 9a       	sbi	0x0b, 4	; 11
     640:	0e 94 09 03 	call	0x612	; 0x612 <delay_us.constprop.0>
     644:	09 b1       	in	r16, 0x09	; 9
     646:	5c 98       	cbi	0x0b, 4	; 11
     648:	0e 94 09 03 	call	0x612	; 0x612 <delay_us.constprop.0>
     64c:	5c 9a       	sbi	0x0b, 4	; 11
     64e:	0e 94 09 03 	call	0x612	; 0x612 <delay_us.constprop.0>
     652:	5c 98       	cbi	0x0b, 4	; 11
     654:	24 96       	adiw	r28, 0x04	; 4
     656:	07 ff       	sbrs	r16, 7
     658:	10 c0       	rjmp	.+32     	; 0x67a <_ZN12OrangutanLCD8busyWaitEv+0x54>
     65a:	ae 01       	movw	r20, r28
     65c:	60 e0       	ldi	r22, 0x00	; 0
     65e:	70 e0       	ldi	r23, 0x00	; 0
     660:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
     664:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <__data_end+0x1>
     668:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <__data_end+0x2>
     66c:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <__data_end+0x3>
     670:	48 17       	cp	r20, r24
     672:	59 07       	cpc	r21, r25
     674:	6a 07       	cpc	r22, r26
     676:	7b 07       	cpc	r23, r27
     678:	00 f3       	brcs	.-64     	; 0x63a <_ZN12OrangutanLCD8busyWaitEv+0x14>
     67a:	1a b9       	out	0x0a, r17	; 10
     67c:	df 91       	pop	r29
     67e:	cf 91       	pop	r28
     680:	1f 91       	pop	r17
     682:	0f 91       	pop	r16
     684:	08 95       	ret

00000686 <_ZN12OrangutanLCD8sendDataEh>:
     686:	95 b1       	in	r25, 0x05	; 5
     688:	28 2f       	mov	r18, r24
     68a:	21 70       	andi	r18, 0x01	; 1
     68c:	30 e0       	ldi	r19, 0x00	; 0
     68e:	22 0f       	add	r18, r18
     690:	33 1f       	adc	r19, r19
     692:	48 2f       	mov	r20, r24
     694:	46 70       	andi	r20, 0x06	; 6
     696:	68 e0       	ldi	r22, 0x08	; 8
     698:	46 9f       	mul	r20, r22
     69a:	a0 01       	movw	r20, r0
     69c:	11 24       	eor	r1, r1
     69e:	24 2b       	or	r18, r20
     6a0:	9d 7c       	andi	r25, 0xCD	; 205
     6a2:	29 2b       	or	r18, r25
     6a4:	25 b9       	out	0x05, r18	; 5
     6a6:	9b b1       	in	r25, 0x0b	; 11
     6a8:	88 70       	andi	r24, 0x08	; 8
     6aa:	82 95       	swap	r24
     6ac:	80 7f       	andi	r24, 0xF0	; 240
     6ae:	9f 77       	andi	r25, 0x7F	; 127
     6b0:	89 2b       	or	r24, r25
     6b2:	8b b9       	out	0x0b, r24	; 11
     6b4:	5c 9a       	sbi	0x0b, 4	; 11
     6b6:	0e 94 09 03 	call	0x612	; 0x612 <delay_us.constprop.0>
     6ba:	5c 98       	cbi	0x0b, 4	; 11
     6bc:	0e 94 09 03 	call	0x612	; 0x612 <delay_us.constprop.0>
     6c0:	08 95       	ret

000006c2 <_ZN12OrangutanLCD4sendEhhh>:
     6c2:	a0 e0       	ldi	r26, 0x00	; 0
     6c4:	b0 e0       	ldi	r27, 0x00	; 0
     6c6:	e7 e6       	ldi	r30, 0x67	; 103
     6c8:	f3 e0       	ldi	r31, 0x03	; 3
     6ca:	0c 94 72 0b 	jmp	0x16e4	; 0x16e4 <__prologue_saves__+0x16>
     6ce:	c8 2f       	mov	r28, r24
     6d0:	d6 2e       	mov	r13, r22
     6d2:	e4 2e       	mov	r14, r20
     6d4:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <_ZZN12OrangutanLCD4initEvE11initialized>
     6d8:	81 11       	cpse	r24, r1
     6da:	05 c0       	rjmp	.+10     	; 0x6e6 <_ZN12OrangutanLCD4sendEhhh+0x24>
     6dc:	81 e0       	ldi	r24, 0x01	; 1
     6de:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <_ZZN12OrangutanLCD4initEvE11initialized>
     6e2:	0e 94 a7 03 	call	0x74e	; 0x74e <_ZN12OrangutanLCD5init2Ev>
     6e6:	0e 94 13 03 	call	0x626	; 0x626 <_ZN12OrangutanLCD8busyWaitEv>
     6ea:	14 b1       	in	r17, 0x04	; 4
     6ec:	d5 b1       	in	r29, 0x05	; 5
     6ee:	fa b0       	in	r15, 0x0a	; 10
     6f0:	0b b1       	in	r16, 0x0b	; 11
     6f2:	28 98       	cbi	0x05, 0	; 5
     6f4:	dd 20       	and	r13, r13
     6f6:	11 f0       	breq	.+4      	; 0x6fc <_ZN12OrangutanLCD4sendEhhh+0x3a>
     6f8:	5a 9a       	sbi	0x0b, 2	; 11
     6fa:	01 c0       	rjmp	.+2      	; 0x6fe <_ZN12OrangutanLCD4sendEhhh+0x3c>
     6fc:	5a 98       	cbi	0x0b, 2	; 11
     6fe:	94 b1       	in	r25, 0x04	; 4
     700:	92 63       	ori	r25, 0x32	; 50
     702:	94 b9       	out	0x04, r25	; 4
     704:	57 9a       	sbi	0x0a, 7	; 10
     706:	81 e0       	ldi	r24, 0x01	; 1
     708:	e8 16       	cp	r14, r24
     70a:	29 f0       	breq	.+10     	; 0x716 <_ZN12OrangutanLCD4sendEhhh+0x54>
     70c:	8c 2f       	mov	r24, r28
     70e:	82 95       	swap	r24
     710:	8f 70       	andi	r24, 0x0F	; 15
     712:	0e 94 43 03 	call	0x686	; 0x686 <_ZN12OrangutanLCD8sendDataEh>
     716:	8c 2f       	mov	r24, r28
     718:	8f 70       	andi	r24, 0x0F	; 15
     71a:	0e 94 43 03 	call	0x686	; 0x686 <_ZN12OrangutanLCD8sendDataEh>
     71e:	fa b8       	out	0x0a, r15	; 10
     720:	0b b9       	out	0x0b, r16	; 11
     722:	14 b9       	out	0x04, r17	; 4
     724:	d5 b9       	out	0x05, r29	; 5
     726:	cd b7       	in	r28, 0x3d	; 61
     728:	de b7       	in	r29, 0x3e	; 62
     72a:	e7 e0       	ldi	r30, 0x07	; 7
     72c:	0c 94 8e 0b 	jmp	0x171c	; 0x171c <__epilogue_restores__+0x16>

00000730 <_ZN12OrangutanLCD8send_cmdEh>:
     730:	42 e0       	ldi	r20, 0x02	; 2
     732:	60 e0       	ldi	r22, 0x00	; 0
     734:	0e 94 61 03 	call	0x6c2	; 0x6c2 <_ZN12OrangutanLCD4sendEhhh>
     738:	08 95       	ret

0000073a <_ZN12OrangutanLCD9send_dataEh>:
     73a:	42 e0       	ldi	r20, 0x02	; 2
     73c:	61 e0       	ldi	r22, 0x01	; 1
     73e:	0e 94 61 03 	call	0x6c2	; 0x6c2 <_ZN12OrangutanLCD4sendEhhh>
     742:	08 95       	ret

00000744 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
     744:	41 e0       	ldi	r20, 0x01	; 1
     746:	60 e0       	ldi	r22, 0x00	; 0
     748:	0e 94 61 03 	call	0x6c2	; 0x6c2 <_ZN12OrangutanLCD4sendEhhh>
     74c:	08 95       	ret

0000074e <_ZN12OrangutanLCD5init2Ev>:
     74e:	80 e1       	ldi	r24, 0x10	; 16
     750:	97 e2       	ldi	r25, 0x27	; 39
     752:	a0 e0       	ldi	r26, 0x00	; 0
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
     75a:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <__data_end+0x1>
     75e:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <__data_end+0x2>
     762:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <__data_end+0x3>
     766:	52 9a       	sbi	0x0a, 2	; 10
     768:	20 9a       	sbi	0x04, 0	; 4
     76a:	54 9a       	sbi	0x0a, 4	; 10
     76c:	8e e1       	ldi	r24, 0x1E	; 30
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	0e 94 62 05 	call	0xac4	; 0xac4 <delay_ms>
     774:	83 e0       	ldi	r24, 0x03	; 3
     776:	0e 94 a2 03 	call	0x744	; 0x744 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     77a:	86 e0       	ldi	r24, 0x06	; 6
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	0e 94 62 05 	call	0xac4	; 0xac4 <delay_ms>
     782:	83 e0       	ldi	r24, 0x03	; 3
     784:	0e 94 a2 03 	call	0x744	; 0x744 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     788:	82 e0       	ldi	r24, 0x02	; 2
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	0e 94 62 05 	call	0xac4	; 0xac4 <delay_ms>
     790:	83 e0       	ldi	r24, 0x03	; 3
     792:	0e 94 a2 03 	call	0x744	; 0x744 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     796:	82 e0       	ldi	r24, 0x02	; 2
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	0e 94 62 05 	call	0xac4	; 0xac4 <delay_ms>
     79e:	82 e0       	ldi	r24, 0x02	; 2
     7a0:	0e 94 a2 03 	call	0x744	; 0x744 <_ZN12OrangutanLCD13send_4bit_cmdEh>
     7a4:	82 e0       	ldi	r24, 0x02	; 2
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	0e 94 62 05 	call	0xac4	; 0xac4 <delay_ms>
     7ac:	88 e2       	ldi	r24, 0x28	; 40
     7ae:	0e 94 98 03 	call	0x730	; 0x730 <_ZN12OrangutanLCD8send_cmdEh>
     7b2:	88 e0       	ldi	r24, 0x08	; 8
     7b4:	0e 94 98 03 	call	0x730	; 0x730 <_ZN12OrangutanLCD8send_cmdEh>
     7b8:	81 e0       	ldi	r24, 0x01	; 1
     7ba:	0e 94 98 03 	call	0x730	; 0x730 <_ZN12OrangutanLCD8send_cmdEh>
     7be:	86 e0       	ldi	r24, 0x06	; 6
     7c0:	0e 94 98 03 	call	0x730	; 0x730 <_ZN12OrangutanLCD8send_cmdEh>
     7c4:	8c e0       	ldi	r24, 0x0C	; 12
     7c6:	0e 94 98 03 	call	0x730	; 0x730 <_ZN12OrangutanLCD8send_cmdEh>
     7ca:	08 95       	ret

000007cc <_ZN12OrangutanLCD5clearEv>:
     7cc:	81 e0       	ldi	r24, 0x01	; 1
     7ce:	0e 94 98 03 	call	0x730	; 0x730 <_ZN12OrangutanLCD8send_cmdEh>
     7d2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <printf_chars>
     7d6:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <printf_chars+0x1>
     7da:	89 2b       	or	r24, r25
     7dc:	f9 f0       	breq	.+62     	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
     7de:	60 e0       	ldi	r22, 0x00	; 0
     7e0:	a0 e2       	ldi	r26, 0x20	; 32
     7e2:	26 2f       	mov	r18, r22
     7e4:	30 e0       	ldi	r19, 0x00	; 0
     7e6:	70 91 00 01 	lds	r23, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7ea:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <numLCDRows>
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	01 97       	sbiw	r24, 0x01	; 1
     7f2:	78 9f       	mul	r23, r24
     7f4:	a0 01       	movw	r20, r0
     7f6:	79 9f       	mul	r23, r25
     7f8:	50 0d       	add	r21, r0
     7fa:	11 24       	eor	r1, r1
     7fc:	24 17       	cp	r18, r20
     7fe:	35 07       	cpc	r19, r21
     800:	4c f4       	brge	.+18     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     802:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <printf_chars>
     806:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <printf_chars+0x1>
     80a:	e2 0f       	add	r30, r18
     80c:	f3 1f       	adc	r31, r19
     80e:	a0 83       	st	Z, r26
     810:	6f 5f       	subi	r22, 0xFF	; 255
     812:	e7 cf       	rjmp	.-50     	; 0x7e2 <_ZN12OrangutanLCD5clearEv+0x16>
     814:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <col>
     818:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <row>
     81c:	08 95       	ret

0000081e <clear>:
     81e:	0e 94 e6 03 	call	0x7cc	; 0x7cc <_ZN12OrangutanLCD5clearEv>
     822:	08 95       	ret

00000824 <_ZN12OrangutanLCD5printEPKc>:
     824:	cf 93       	push	r28
     826:	df 93       	push	r29
     828:	ec 01       	movw	r28, r24
     82a:	89 91       	ld	r24, Y+
     82c:	88 23       	and	r24, r24
     82e:	19 f0       	breq	.+6      	; 0x836 <_ZN12OrangutanLCD5printEPKc+0x12>
     830:	0e 94 9d 03 	call	0x73a	; 0x73a <_ZN12OrangutanLCD9send_dataEh>
     834:	fa cf       	rjmp	.-12     	; 0x82a <_ZN12OrangutanLCD5printEPKc+0x6>
     836:	df 91       	pop	r29
     838:	cf 91       	pop	r28
     83a:	08 95       	ret

0000083c <print>:
     83c:	0e 94 12 04 	call	0x824	; 0x824 <_ZN12OrangutanLCD5printEPKc>
     840:	08 95       	ret

00000842 <_ZN16OrangutanDigital9setOutputEhh>:
     842:	88 30       	cpi	r24, 0x08	; 8
     844:	58 f4       	brcc	.+22     	; 0x85c <_ZN16OrangutanDigital9setOutputEhh+0x1a>
     846:	91 e0       	ldi	r25, 0x01	; 1
     848:	01 c0       	rjmp	.+2      	; 0x84c <_ZN16OrangutanDigital9setOutputEhh+0xa>
     84a:	99 0f       	add	r25, r25
     84c:	8a 95       	dec	r24
     84e:	ea f7       	brpl	.-6      	; 0x84a <_ZN16OrangutanDigital9setOutputEhh+0x8>
     850:	89 2f       	mov	r24, r25
     852:	aa e2       	ldi	r26, 0x2A	; 42
     854:	b0 e0       	ldi	r27, 0x00	; 0
     856:	eb e2       	ldi	r30, 0x2B	; 43
     858:	f0 e0       	ldi	r31, 0x00	; 0
     85a:	21 c0       	rjmp	.+66     	; 0x89e <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     85c:	8e 30       	cpi	r24, 0x0E	; 14
     85e:	60 f4       	brcc	.+24     	; 0x878 <_ZN16OrangutanDigital9setOutputEhh+0x36>
     860:	98 ef       	ldi	r25, 0xF8	; 248
     862:	98 0f       	add	r25, r24
     864:	81 e0       	ldi	r24, 0x01	; 1
     866:	01 c0       	rjmp	.+2      	; 0x86a <_ZN16OrangutanDigital9setOutputEhh+0x28>
     868:	88 0f       	add	r24, r24
     86a:	9a 95       	dec	r25
     86c:	ea f7       	brpl	.-6      	; 0x868 <_ZN16OrangutanDigital9setOutputEhh+0x26>
     86e:	a4 e2       	ldi	r26, 0x24	; 36
     870:	b0 e0       	ldi	r27, 0x00	; 0
     872:	e5 e2       	ldi	r30, 0x25	; 37
     874:	f0 e0       	ldi	r31, 0x00	; 0
     876:	13 c0       	rjmp	.+38     	; 0x89e <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     878:	85 31       	cpi	r24, 0x15	; 21
     87a:	60 f4       	brcc	.+24     	; 0x894 <_ZN16OrangutanDigital9setOutputEhh+0x52>
     87c:	92 ef       	ldi	r25, 0xF2	; 242
     87e:	98 0f       	add	r25, r24
     880:	81 e0       	ldi	r24, 0x01	; 1
     882:	01 c0       	rjmp	.+2      	; 0x886 <_ZN16OrangutanDigital9setOutputEhh+0x44>
     884:	88 0f       	add	r24, r24
     886:	9a 95       	dec	r25
     888:	ea f7       	brpl	.-6      	; 0x884 <_ZN16OrangutanDigital9setOutputEhh+0x42>
     88a:	a7 e2       	ldi	r26, 0x27	; 39
     88c:	b0 e0       	ldi	r27, 0x00	; 0
     88e:	e8 e2       	ldi	r30, 0x28	; 40
     890:	f0 e0       	ldi	r31, 0x00	; 0
     892:	05 c0       	rjmp	.+10     	; 0x89e <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     894:	80 e0       	ldi	r24, 0x00	; 0
     896:	a0 e0       	ldi	r26, 0x00	; 0
     898:	b0 e0       	ldi	r27, 0x00	; 0
     89a:	e0 e0       	ldi	r30, 0x00	; 0
     89c:	f0 e0       	ldi	r31, 0x00	; 0
     89e:	6f 3f       	cpi	r22, 0xFF	; 255
     8a0:	19 f4       	brne	.+6      	; 0x8a8 <_ZN16OrangutanDigital9setOutputEhh+0x66>
     8a2:	90 81       	ld	r25, Z
     8a4:	98 27       	eor	r25, r24
     8a6:	09 c0       	rjmp	.+18     	; 0x8ba <_ZN16OrangutanDigital9setOutputEhh+0x78>
     8a8:	66 23       	and	r22, r22
     8aa:	19 f0       	breq	.+6      	; 0x8b2 <_ZN16OrangutanDigital9setOutputEhh+0x70>
     8ac:	90 81       	ld	r25, Z
     8ae:	98 2b       	or	r25, r24
     8b0:	04 c0       	rjmp	.+8      	; 0x8ba <_ZN16OrangutanDigital9setOutputEhh+0x78>
     8b2:	20 81       	ld	r18, Z
     8b4:	98 2f       	mov	r25, r24
     8b6:	90 95       	com	r25
     8b8:	92 23       	and	r25, r18
     8ba:	90 83       	st	Z, r25
     8bc:	9c 91       	ld	r25, X
     8be:	98 2b       	or	r25, r24
     8c0:	9c 93       	st	X, r25
     8c2:	08 95       	ret

000008c4 <_ZN15OrangutanMotors5init2Ev>:
     8c4:	83 ef       	ldi	r24, 0xF3	; 243
     8c6:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     8ca:	84 bd       	out	0x24, r24	; 36
     8cc:	82 e0       	ldi	r24, 0x02	; 2
     8ce:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
     8d2:	85 bd       	out	0x25, r24	; 37
     8d4:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     8d8:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     8dc:	18 bc       	out	0x28, r1	; 40
     8de:	17 bc       	out	0x27, r1	; 39
     8e0:	60 e0       	ldi	r22, 0x00	; 0
     8e2:	86 e0       	ldi	r24, 0x06	; 6
     8e4:	0e 94 21 04 	call	0x842	; 0x842 <_ZN16OrangutanDigital9setOutputEhh>
     8e8:	60 e0       	ldi	r22, 0x00	; 0
     8ea:	85 e0       	ldi	r24, 0x05	; 5
     8ec:	0e 94 21 04 	call	0x842	; 0x842 <_ZN16OrangutanDigital9setOutputEhh>
     8f0:	60 e0       	ldi	r22, 0x00	; 0
     8f2:	8b e0       	ldi	r24, 0x0B	; 11
     8f4:	0e 94 21 04 	call	0x842	; 0x842 <_ZN16OrangutanDigital9setOutputEhh>
     8f8:	60 e0       	ldi	r22, 0x00	; 0
     8fa:	83 e0       	ldi	r24, 0x03	; 3
     8fc:	0e 94 21 04 	call	0x842	; 0x842 <_ZN16OrangutanDigital9setOutputEhh>
     900:	08 95       	ret

00000902 <_ZN15OrangutanMotors4initEv>:
     902:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <_ZZN15OrangutanMotors4initEvE11initialized>
     906:	81 11       	cpse	r24, r1
     908:	05 c0       	rjmp	.+10     	; 0x914 <_ZN15OrangutanMotors4initEv+0x12>
     90a:	81 e0       	ldi	r24, 0x01	; 1
     90c:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <_ZZN15OrangutanMotors4initEvE11initialized>
     910:	0e 94 62 04 	call	0x8c4	; 0x8c4 <_ZN15OrangutanMotors5init2Ev>
     914:	08 95       	ret

00000916 <_ZN15OrangutanMotors10setM1SpeedEi>:
     916:	cf 93       	push	r28
     918:	df 93       	push	r29
     91a:	ec 01       	movw	r28, r24
     91c:	0e 94 81 04 	call	0x902	; 0x902 <_ZN15OrangutanMotors4initEv>
     920:	d7 ff       	sbrs	r29, 7
     922:	05 c0       	rjmp	.+10     	; 0x92e <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
     924:	d1 95       	neg	r29
     926:	c1 95       	neg	r28
     928:	d1 09       	sbc	r29, r1
     92a:	81 e0       	ldi	r24, 0x01	; 1
     92c:	01 c0       	rjmp	.+2      	; 0x930 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
     92e:	80 e0       	ldi	r24, 0x00	; 0
     930:	cf 3f       	cpi	r28, 0xFF	; 255
     932:	d1 05       	cpc	r29, r1
     934:	19 f0       	breq	.+6      	; 0x93c <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     936:	14 f0       	brlt	.+4      	; 0x93c <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     938:	cf ef       	ldi	r28, 0xFF	; 255
     93a:	d0 e0       	ldi	r29, 0x00	; 0
     93c:	88 23       	and	r24, r24
     93e:	19 f0       	breq	.+6      	; 0x946 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
     940:	18 bc       	out	0x28, r1	; 40
     942:	c7 bd       	out	0x27, r28	; 39
     944:	02 c0       	rjmp	.+4      	; 0x94a <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
     946:	c8 bd       	out	0x28, r28	; 40
     948:	17 bc       	out	0x27, r1	; 39
     94a:	df 91       	pop	r29
     94c:	cf 91       	pop	r28
     94e:	08 95       	ret

00000950 <_ZN15OrangutanMotors10setM2SpeedEi>:
     950:	cf 93       	push	r28
     952:	df 93       	push	r29
     954:	ec 01       	movw	r28, r24
     956:	0e 94 81 04 	call	0x902	; 0x902 <_ZN15OrangutanMotors4initEv>
     95a:	d7 ff       	sbrs	r29, 7
     95c:	05 c0       	rjmp	.+10     	; 0x968 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
     95e:	d1 95       	neg	r29
     960:	c1 95       	neg	r28
     962:	d1 09       	sbc	r29, r1
     964:	81 e0       	ldi	r24, 0x01	; 1
     966:	01 c0       	rjmp	.+2      	; 0x96a <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
     968:	80 e0       	ldi	r24, 0x00	; 0
     96a:	cf 3f       	cpi	r28, 0xFF	; 255
     96c:	d1 05       	cpc	r29, r1
     96e:	19 f0       	breq	.+6      	; 0x976 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     970:	14 f0       	brlt	.+4      	; 0x976 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     972:	cf ef       	ldi	r28, 0xFF	; 255
     974:	d0 e0       	ldi	r29, 0x00	; 0
     976:	88 23       	and	r24, r24
     978:	29 f0       	breq	.+10     	; 0x984 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
     97a:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     97e:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     982:	04 c0       	rjmp	.+8      	; 0x98c <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
     984:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     988:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     98c:	df 91       	pop	r29
     98e:	cf 91       	pop	r28
     990:	08 95       	ret

00000992 <_ZN15OrangutanMotors9setSpeedsEii>:
     992:	cf 93       	push	r28
     994:	df 93       	push	r29
     996:	eb 01       	movw	r28, r22
     998:	0e 94 8b 04 	call	0x916	; 0x916 <_ZN15OrangutanMotors10setM1SpeedEi>
     99c:	ce 01       	movw	r24, r28
     99e:	0e 94 a8 04 	call	0x950	; 0x950 <_ZN15OrangutanMotors10setM2SpeedEi>
     9a2:	df 91       	pop	r29
     9a4:	cf 91       	pop	r28
     9a6:	08 95       	ret

000009a8 <set_motors>:
     9a8:	0e 94 c9 04 	call	0x992	; 0x992 <_ZN15OrangutanMotors9setSpeedsEii>
     9ac:	08 95       	ret

000009ae <_ZN20OrangutanPushbuttons5init2Ev>:
     9ae:	84 b1       	in	r24, 0x04	; 4
     9b0:	8d 7c       	andi	r24, 0xCD	; 205
     9b2:	84 b9       	out	0x04, r24	; 4
     9b4:	85 b1       	in	r24, 0x05	; 5
     9b6:	82 63       	ori	r24, 0x32	; 50
     9b8:	85 b9       	out	0x05, r24	; 5
     9ba:	85 e0       	ldi	r24, 0x05	; 5
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	6f 93       	push	r22
     9c0:	64 e0       	ldi	r22, 0x04	; 4
     9c2:	6a 95       	dec	r22
     9c4:	f1 f7       	brne	.-4      	; 0x9c2 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
     9c6:	6f 91       	pop	r22
     9c8:	01 97       	sbiw	r24, 0x01	; 1
     9ca:	c9 f7       	brne	.-14     	; 0x9be <_ZN20OrangutanPushbuttons5init2Ev+0x10>
     9cc:	08 95       	ret

000009ce <_ZN20OrangutanPushbuttons4initEv>:
     9ce:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <_ZZN20OrangutanPushbuttons4initEvE11initialized>
     9d2:	81 11       	cpse	r24, r1
     9d4:	05 c0       	rjmp	.+10     	; 0x9e0 <_ZN20OrangutanPushbuttons4initEv+0x12>
     9d6:	81 e0       	ldi	r24, 0x01	; 1
     9d8:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <_ZZN20OrangutanPushbuttons4initEvE11initialized>
     9dc:	0e 94 d7 04 	call	0x9ae	; 0x9ae <_ZN20OrangutanPushbuttons5init2Ev>
     9e0:	08 95       	ret

000009e2 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
     9e2:	cf 93       	push	r28
     9e4:	c8 2f       	mov	r28, r24
     9e6:	0e 94 e7 04 	call	0x9ce	; 0x9ce <_ZN20OrangutanPushbuttons4initEv>
     9ea:	83 b1       	in	r24, 0x03	; 3
     9ec:	8c 23       	and	r24, r28
     9ee:	e9 f3       	breq	.-6      	; 0x9ea <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
     9f0:	8a e0       	ldi	r24, 0x0A	; 10
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	0e 94 62 05 	call	0xac4	; 0xac4 <delay_ms>
     9f8:	83 b1       	in	r24, 0x03	; 3
     9fa:	8c 23       	and	r24, r28
     9fc:	b1 f3       	breq	.-20     	; 0x9ea <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
     9fe:	83 b1       	in	r24, 0x03	; 3
     a00:	8c 23       	and	r24, r28
     a02:	cf 91       	pop	r28
     a04:	08 95       	ret

00000a06 <wait_for_button_release>:
     a06:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
     a0a:	08 95       	ret

00000a0c <_ZN20OrangutanPushbuttons9isPressedEh>:
     a0c:	a1 e0       	ldi	r26, 0x01	; 1
     a0e:	b0 e0       	ldi	r27, 0x00	; 0
     a10:	ec e0       	ldi	r30, 0x0C	; 12
     a12:	f5 e0       	ldi	r31, 0x05	; 5
     a14:	0c 94 77 0b 	jmp	0x16ee	; 0x16ee <__prologue_saves__+0x20>
     a18:	89 83       	std	Y+1, r24	; 0x01
     a1a:	0e 94 e7 04 	call	0x9ce	; 0x9ce <_ZN20OrangutanPushbuttons4initEv>
     a1e:	93 b1       	in	r25, 0x03	; 3
     a20:	90 95       	com	r25
     a22:	89 81       	ldd	r24, Y+1	; 0x01
     a24:	89 23       	and	r24, r25
     a26:	21 96       	adiw	r28, 0x01	; 1
     a28:	e2 e0       	ldi	r30, 0x02	; 2
     a2a:	0c 94 93 0b 	jmp	0x1726	; 0x1726 <__epilogue_restores__+0x20>

00000a2e <button_is_pressed>:
     a2e:	0e 94 06 05 	call	0xa0c	; 0xa0c <_ZN20OrangutanPushbuttons9isPressedEh>
     a32:	08 95       	ret

00000a34 <__vector_9>:
     a34:	2f 92       	push	r2
     a36:	8f 93       	push	r24
     a38:	9f 93       	push	r25
     a3a:	2f b6       	in	r2, 0x3f	; 63
     a3c:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <tickCount+0x1>
     a40:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <tickCount+0x2>
     a44:	01 96       	adiw	r24, 0x01	; 1
     a46:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <tickCount+0x1>
     a4a:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <tickCount+0x2>
     a4e:	90 e0       	ldi	r25, 0x00	; 0
     a50:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <tickCount+0x3>
     a54:	89 1f       	adc	r24, r25
     a56:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <tickCount+0x3>
     a5a:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <us_over_10+0x1>
     a5e:	9c 5f       	subi	r25, 0xFC	; 252
     a60:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <us_over_10+0x1>
     a64:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <us_over_10>
     a68:	80 51       	subi	r24, 0x10	; 16
     a6a:	97 42       	sbci	r25, 0x27	; 39
     a6c:	c0 f0       	brcs	.+48     	; 0xa9e <end>
     a6e:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <us_over_10+0x1>
     a72:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <us_over_10>
     a76:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <msCounter>
     a7a:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <msCounter+0x1>
     a7e:	01 96       	adiw	r24, 0x01	; 1
     a80:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <msCounter>
     a84:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <msCounter+0x1>
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <msCounter+0x2>
     a8e:	89 1f       	adc	r24, r25
     a90:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <msCounter+0x2>
     a94:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <msCounter+0x3>
     a98:	89 1f       	adc	r24, r25
     a9a:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <msCounter+0x3>

00000a9e <end>:
     a9e:	2f be       	out	0x3f, r2	; 63
     aa0:	9f 91       	pop	r25
     aa2:	8f 91       	pop	r24
     aa4:	2f 90       	pop	r2
     aa6:	18 95       	reti

00000aa8 <_ZN13OrangutanTime17delayMillisecondsEj>:
     aa8:	28 ee       	ldi	r18, 0xE8	; 232
     aaa:	33 e0       	ldi	r19, 0x03	; 3
     aac:	01 97       	sbiw	r24, 0x01	; 1
     aae:	48 f0       	brcs	.+18     	; 0xac2 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
     ab0:	f9 01       	movw	r30, r18
     ab2:	6f 93       	push	r22
     ab4:	64 e0       	ldi	r22, 0x04	; 4
     ab6:	6a 95       	dec	r22
     ab8:	f1 f7       	brne	.-4      	; 0xab6 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
     aba:	6f 91       	pop	r22
     abc:	31 97       	sbiw	r30, 0x01	; 1
     abe:	c9 f7       	brne	.-14     	; 0xab2 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
     ac0:	f5 cf       	rjmp	.-22     	; 0xaac <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
     ac2:	08 95       	ret

00000ac4 <delay_ms>:
     ac4:	0e 94 54 05 	call	0xaa8	; 0xaa8 <_ZN13OrangutanTime17delayMillisecondsEj>
     ac8:	08 95       	ret

00000aca <_ZN13OrangutanTime5init2Ev>:
     aca:	e0 e7       	ldi	r30, 0x70	; 112
     acc:	f0 e0       	ldi	r31, 0x00	; 0
     ace:	80 81       	ld	r24, Z
     ad0:	8e 7f       	andi	r24, 0xFE	; 254
     ad2:	80 83       	st	Z, r24
     ad4:	a0 eb       	ldi	r26, 0xB0	; 176
     ad6:	b0 e0       	ldi	r27, 0x00	; 0
     ad8:	8c 91       	ld	r24, X
     ada:	83 60       	ori	r24, 0x03	; 3
     adc:	8c 93       	st	X, r24
     ade:	a1 eb       	ldi	r26, 0xB1	; 177
     ae0:	b0 e0       	ldi	r27, 0x00	; 0
     ae2:	8c 91       	ld	r24, X
     ae4:	80 7f       	andi	r24, 0xF0	; 240
     ae6:	8c 93       	st	X, r24
     ae8:	8c 91       	ld	r24, X
     aea:	82 60       	ori	r24, 0x02	; 2
     aec:	8c 93       	st	X, r24
     aee:	b8 9a       	sbi	0x17, 0	; 23
     af0:	80 81       	ld	r24, Z
     af2:	81 60       	ori	r24, 0x01	; 1
     af4:	80 83       	st	Z, r24
     af6:	78 94       	sei
     af8:	08 95       	ret

00000afa <_ZN13OrangutanTime4initEv>:
     afa:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <_ZZN13OrangutanTime4initEvE11initialized>
     afe:	81 11       	cpse	r24, r1
     b00:	05 c0       	rjmp	.+10     	; 0xb0c <_ZN13OrangutanTime4initEv+0x12>
     b02:	81 e0       	ldi	r24, 0x01	; 1
     b04:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <_ZZN13OrangutanTime4initEvE11initialized>
     b08:	0e 94 65 05 	call	0xaca	; 0xaca <_ZN13OrangutanTime5init2Ev>
     b0c:	08 95       	ret

00000b0e <_ZN13OrangutanTime5resetEv>:
     b0e:	0e 94 7d 05 	call	0xafa	; 0xafa <_ZN13OrangutanTime4initEv>
     b12:	e0 e7       	ldi	r30, 0x70	; 112
     b14:	f0 e0       	ldi	r31, 0x00	; 0
     b16:	80 81       	ld	r24, Z
     b18:	8e 7f       	andi	r24, 0xFE	; 254
     b1a:	80 83       	st	Z, r24
     b1c:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <msCounter>
     b20:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <msCounter+0x1>
     b24:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <msCounter+0x2>
     b28:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <msCounter+0x3>
     b2c:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <us_over_10+0x1>
     b30:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <us_over_10>
     b34:	80 81       	ld	r24, Z
     b36:	81 60       	ori	r24, 0x01	; 1
     b38:	80 83       	st	Z, r24
     b3a:	08 95       	ret

00000b3c <calibrate_line_sensors>:
     b3c:	68 2f       	mov	r22, r24
     b3e:	80 e2       	ldi	r24, 0x20	; 32
     b40:	91 e0       	ldi	r25, 0x01	; 1
     b42:	0e 94 86 09 	call	0x130c	; 0x130c <_ZN16PololuQTRSensors9calibrateEh>
     b46:	08 95       	ret

00000b48 <read_line>:
     b48:	46 2f       	mov	r20, r22
     b4a:	20 e0       	ldi	r18, 0x00	; 0
     b4c:	bc 01       	movw	r22, r24
     b4e:	80 e2       	ldi	r24, 0x20	; 32
     b50:	91 e0       	ldi	r25, 0x01	; 1
     b52:	0e 94 57 0a 	call	0x14ae	; 0x14ae <_ZN16PololuQTRSensors8readLineEPjhh>
     b56:	08 95       	ret

00000b58 <_ZN9Pololu3pi4initEjh>:
     b58:	0f 93       	push	r16
     b5a:	cf 93       	push	r28
     b5c:	df 93       	push	r29
     b5e:	00 d0       	rcall	.+0      	; 0xb60 <_ZN9Pololu3pi4initEjh+0x8>
     b60:	00 d0       	rcall	.+0      	; 0xb62 <_ZN9Pololu3pi4initEjh+0xa>
     b62:	1f 92       	push	r1
     b64:	cd b7       	in	r28, 0x3d	; 61
     b66:	de b7       	in	r29, 0x3e	; 62
     b68:	9c 01       	movw	r18, r24
     b6a:	85 e0       	ldi	r24, 0x05	; 5
     b6c:	e8 e0       	ldi	r30, 0x08	; 8
     b6e:	f1 e0       	ldi	r31, 0x01	; 1
     b70:	de 01       	movw	r26, r28
     b72:	11 96       	adiw	r26, 0x01	; 1
     b74:	01 90       	ld	r0, Z+
     b76:	0d 92       	st	X+, r0
     b78:	8a 95       	dec	r24
     b7a:	e1 f7       	brne	.-8      	; 0xb74 <_ZN9Pololu3pi4initEjh+0x1c>
     b7c:	66 23       	and	r22, r22
     b7e:	11 f0       	breq	.+4      	; 0xb84 <_ZN9Pololu3pi4initEjh+0x2c>
     b80:	0f ef       	ldi	r16, 0xFF	; 255
     b82:	01 c0       	rjmp	.+2      	; 0xb86 <_ZN9Pololu3pi4initEjh+0x2e>
     b84:	03 e1       	ldi	r16, 0x13	; 19
     b86:	45 e0       	ldi	r20, 0x05	; 5
     b88:	be 01       	movw	r22, r28
     b8a:	6f 5f       	subi	r22, 0xFF	; 255
     b8c:	7f 4f       	sbci	r23, 0xFF	; 255
     b8e:	80 e2       	ldi	r24, 0x20	; 32
     b90:	91 e0       	ldi	r25, 0x01	; 1
     b92:	0e 94 7e 06 	call	0xcfc	; 0xcfc <_ZN18PololuQTRSensorsRC4initEPhhjh>
     b96:	80 e2       	ldi	r24, 0x20	; 32
     b98:	91 e0       	ldi	r25, 0x01	; 1
     b9a:	0e 94 55 06 	call	0xcaa	; 0xcaa <_ZN16PololuQTRSensors11emittersOffEv>
     b9e:	0e 94 87 05 	call	0xb0e	; 0xb0e <_ZN13OrangutanTime5resetEv>
     ba2:	0f 90       	pop	r0
     ba4:	0f 90       	pop	r0
     ba6:	0f 90       	pop	r0
     ba8:	0f 90       	pop	r0
     baa:	0f 90       	pop	r0
     bac:	df 91       	pop	r29
     bae:	cf 91       	pop	r28
     bb0:	0f 91       	pop	r16
     bb2:	08 95       	ret

00000bb4 <pololu_3pi_init>:
     bb4:	60 e0       	ldi	r22, 0x00	; 0
     bb6:	0e 94 ac 05 	call	0xb58	; 0xb58 <_ZN9Pololu3pi4initEjh>
     bba:	08 95       	ret

00000bbc <_GLOBAL__sub_D_pololu_3pi_init>:
     bbc:	80 e2       	ldi	r24, 0x20	; 32
     bbe:	91 e0       	ldi	r25, 0x01	; 1
     bc0:	0e 94 cc 0a 	call	0x1598	; 0x1598 <_ZN16PololuQTRSensorsD1Ev>
     bc4:	08 95       	ret

00000bc6 <delay_us>:
     bc6:	6f 93       	push	r22
     bc8:	64 e0       	ldi	r22, 0x04	; 4
     bca:	6a 95       	dec	r22
     bcc:	f1 f7       	brne	.-4      	; 0xbca <delay_us+0x4>
     bce:	6f 91       	pop	r22
     bd0:	01 97       	sbiw	r24, 0x01	; 1
     bd2:	c9 f7       	brne	.-14     	; 0xbc6 <delay_us>
     bd4:	08 95       	ret

00000bd6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
     bd6:	fc 01       	movw	r30, r24
     bd8:	11 82       	std	Z+1, r1	; 0x01
     bda:	10 82       	st	Z, r1
     bdc:	13 82       	std	Z+3, r1	; 0x03
     bde:	12 82       	std	Z+2, r1	; 0x02
     be0:	15 82       	std	Z+5, r1	; 0x05
     be2:	14 82       	std	Z+4, r1	; 0x04
     be4:	16 82       	std	Z+6, r1	; 0x06
     be6:	68 30       	cpi	r22, 0x08	; 8
     be8:	68 f4       	brcc	.+26     	; 0xc04 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
     bea:	89 e2       	ldi	r24, 0x29	; 41
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	91 83       	std	Z+1, r25	; 0x01
     bf0:	80 83       	st	Z, r24
     bf2:	8b e2       	ldi	r24, 0x2B	; 43
     bf4:	90 e0       	ldi	r25, 0x00	; 0
     bf6:	93 83       	std	Z+3, r25	; 0x03
     bf8:	82 83       	std	Z+2, r24	; 0x02
     bfa:	8a e2       	ldi	r24, 0x2A	; 42
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	95 83       	std	Z+5, r25	; 0x05
     c00:	84 83       	std	Z+4, r24	; 0x04
     c02:	1f c0       	rjmp	.+62     	; 0xc42 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
     c04:	6e 30       	cpi	r22, 0x0E	; 14
     c06:	70 f4       	brcc	.+28     	; 0xc24 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
     c08:	83 e2       	ldi	r24, 0x23	; 35
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	91 83       	std	Z+1, r25	; 0x01
     c0e:	80 83       	st	Z, r24
     c10:	85 e2       	ldi	r24, 0x25	; 37
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	93 83       	std	Z+3, r25	; 0x03
     c16:	82 83       	std	Z+2, r24	; 0x02
     c18:	84 e2       	ldi	r24, 0x24	; 36
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	95 83       	std	Z+5, r25	; 0x05
     c1e:	84 83       	std	Z+4, r24	; 0x04
     c20:	68 50       	subi	r22, 0x08	; 8
     c22:	0f c0       	rjmp	.+30     	; 0xc42 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
     c24:	65 31       	cpi	r22, 0x15	; 21
     c26:	98 f4       	brcc	.+38     	; 0xc4e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
     c28:	86 e2       	ldi	r24, 0x26	; 38
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	91 83       	std	Z+1, r25	; 0x01
     c2e:	80 83       	st	Z, r24
     c30:	88 e2       	ldi	r24, 0x28	; 40
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	93 83       	std	Z+3, r25	; 0x03
     c36:	82 83       	std	Z+2, r24	; 0x02
     c38:	87 e2       	ldi	r24, 0x27	; 39
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	95 83       	std	Z+5, r25	; 0x05
     c3e:	84 83       	std	Z+4, r24	; 0x04
     c40:	6e 50       	subi	r22, 0x0E	; 14
     c42:	81 e0       	ldi	r24, 0x01	; 1
     c44:	01 c0       	rjmp	.+2      	; 0xc48 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
     c46:	88 0f       	add	r24, r24
     c48:	6a 95       	dec	r22
     c4a:	ea f7       	brpl	.-6      	; 0xc46 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
     c4c:	86 83       	std	Z+6, r24	; 0x06
     c4e:	08 95       	ret

00000c50 <_ZN16PololuQTRSensors4initEhhh>:
     c50:	a7 e0       	ldi	r26, 0x07	; 7
     c52:	b0 e0       	ldi	r27, 0x00	; 0
     c54:	ee e2       	ldi	r30, 0x2E	; 46
     c56:	f6 e0       	ldi	r31, 0x06	; 6
     c58:	0c 94 75 0b 	jmp	0x16ea	; 0x16ea <__prologue_saves__+0x1c>
     c5c:	8c 01       	movw	r16, r24
     c5e:	fc 01       	movw	r30, r24
     c60:	11 82       	std	Z+1, r1	; 0x01
     c62:	10 82       	st	Z, r1
     c64:	13 82       	std	Z+3, r1	; 0x03
     c66:	12 82       	std	Z+2, r1	; 0x02
     c68:	15 82       	std	Z+5, r1	; 0x05
     c6a:	14 82       	std	Z+4, r1	; 0x04
     c6c:	17 82       	std	Z+7, r1	; 0x07
     c6e:	16 82       	std	Z+6, r1	; 0x06
     c70:	61 31       	cpi	r22, 0x11	; 17
     c72:	18 f0       	brcs	.+6      	; 0xc7a <_ZN16PololuQTRSensors4initEhhh+0x2a>
     c74:	80 e1       	ldi	r24, 0x10	; 16
     c76:	80 87       	std	Z+8, r24	; 0x08
     c78:	02 c0       	rjmp	.+4      	; 0xc7e <_ZN16PololuQTRSensors4initEhhh+0x2e>
     c7a:	fc 01       	movw	r30, r24
     c7c:	60 87       	std	Z+8, r22	; 0x08
     c7e:	f8 01       	movw	r30, r16
     c80:	20 8b       	std	Z+16, r18	; 0x10
     c82:	64 2f       	mov	r22, r20
     c84:	ce 01       	movw	r24, r28
     c86:	01 96       	adiw	r24, 0x01	; 1
     c88:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
     c8c:	8f 81       	ldd	r24, Y+7	; 0x07
     c8e:	f8 01       	movw	r30, r16
     c90:	81 87       	std	Z+9, r24	; 0x09
     c92:	8b 81       	ldd	r24, Y+3	; 0x03
     c94:	9c 81       	ldd	r25, Y+4	; 0x04
     c96:	93 87       	std	Z+11, r25	; 0x0b
     c98:	82 87       	std	Z+10, r24	; 0x0a
     c9a:	8d 81       	ldd	r24, Y+5	; 0x05
     c9c:	9e 81       	ldd	r25, Y+6	; 0x06
     c9e:	95 87       	std	Z+13, r25	; 0x0d
     ca0:	84 87       	std	Z+12, r24	; 0x0c
     ca2:	27 96       	adiw	r28, 0x07	; 7
     ca4:	e4 e0       	ldi	r30, 0x04	; 4
     ca6:	0c 94 91 0b 	jmp	0x1722	; 0x1722 <__epilogue_restores__+0x1c>

00000caa <_ZN16PololuQTRSensors11emittersOffEv>:
     caa:	fc 01       	movw	r30, r24
     cac:	a4 85       	ldd	r26, Z+12	; 0x0c
     cae:	b5 85       	ldd	r27, Z+13	; 0x0d
     cb0:	10 97       	sbiw	r26, 0x00	; 0
     cb2:	79 f0       	breq	.+30     	; 0xcd2 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
     cb4:	8c 91       	ld	r24, X
     cb6:	91 85       	ldd	r25, Z+9	; 0x09
     cb8:	89 2b       	or	r24, r25
     cba:	8c 93       	st	X, r24
     cbc:	a2 85       	ldd	r26, Z+10	; 0x0a
     cbe:	b3 85       	ldd	r27, Z+11	; 0x0b
     cc0:	9c 91       	ld	r25, X
     cc2:	81 85       	ldd	r24, Z+9	; 0x09
     cc4:	80 95       	com	r24
     cc6:	89 23       	and	r24, r25
     cc8:	8c 93       	st	X, r24
     cca:	88 ec       	ldi	r24, 0xC8	; 200
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <delay_us>
     cd2:	08 95       	ret

00000cd4 <_ZN16PololuQTRSensors10emittersOnEv>:
     cd4:	fc 01       	movw	r30, r24
     cd6:	a4 85       	ldd	r26, Z+12	; 0x0c
     cd8:	b5 85       	ldd	r27, Z+13	; 0x0d
     cda:	10 97       	sbiw	r26, 0x00	; 0
     cdc:	71 f0       	breq	.+28     	; 0xcfa <_ZN16PololuQTRSensors10emittersOnEv+0x26>
     cde:	8c 91       	ld	r24, X
     ce0:	91 85       	ldd	r25, Z+9	; 0x09
     ce2:	89 2b       	or	r24, r25
     ce4:	8c 93       	st	X, r24
     ce6:	a2 85       	ldd	r26, Z+10	; 0x0a
     ce8:	b3 85       	ldd	r27, Z+11	; 0x0b
     cea:	8c 91       	ld	r24, X
     cec:	91 85       	ldd	r25, Z+9	; 0x09
     cee:	89 2b       	or	r24, r25
     cf0:	8c 93       	st	X, r24
     cf2:	88 ec       	ldi	r24, 0xC8	; 200
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <delay_us>
     cfa:	08 95       	ret

00000cfc <_ZN18PololuQTRSensorsRC4initEPhhjh>:
     cfc:	a7 e0       	ldi	r26, 0x07	; 7
     cfe:	b0 e0       	ldi	r27, 0x00	; 0
     d00:	e4 e8       	ldi	r30, 0x84	; 132
     d02:	f6 e0       	ldi	r31, 0x06	; 6
     d04:	0c 94 6a 0b 	jmp	0x16d4	; 0x16d4 <__prologue_saves__+0x6>
     d08:	7c 01       	movw	r14, r24
     d0a:	4b 01       	movw	r8, r22
     d0c:	64 2f       	mov	r22, r20
     d0e:	39 01       	movw	r6, r18
     d10:	40 2f       	mov	r20, r16
     d12:	20 e0       	ldi	r18, 0x00	; 0
     d14:	0e 94 28 06 	call	0xc50	; 0xc50 <_ZN16PololuQTRSensors4initEhhh>
     d18:	87 01       	movw	r16, r14
     d1a:	0f 5b       	subi	r16, 0xBF	; 191
     d1c:	1f 4f       	sbci	r17, 0xFF	; 255
     d1e:	f8 01       	movw	r30, r16
     d20:	10 82       	st	Z, r1
     d22:	67 01       	movw	r12, r14
     d24:	f2 e4       	ldi	r31, 0x42	; 66
     d26:	cf 0e       	add	r12, r31
     d28:	d1 1c       	adc	r13, r1
     d2a:	f6 01       	movw	r30, r12
     d2c:	10 82       	st	Z, r1
     d2e:	57 01       	movw	r10, r14
     d30:	f3 e4       	ldi	r31, 0x43	; 67
     d32:	af 0e       	add	r10, r31
     d34:	b1 1c       	adc	r11, r1
     d36:	f5 01       	movw	r30, r10
     d38:	10 82       	st	Z, r1
     d3a:	f7 01       	movw	r30, r14
     d3c:	77 86       	std	Z+15, r7	; 0x0f
     d3e:	66 86       	std	Z+14, r6	; 0x0e
     d40:	51 2c       	mov	r5, r1
     d42:	f7 01       	movw	r30, r14
     d44:	80 85       	ldd	r24, Z+8	; 0x08
     d46:	58 16       	cp	r5, r24
     d48:	50 f5       	brcc	.+84     	; 0xd9e <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
     d4a:	65 2c       	mov	r6, r5
     d4c:	71 2c       	mov	r7, r1
     d4e:	f4 01       	movw	r30, r8
     d50:	e6 0d       	add	r30, r6
     d52:	f7 1d       	adc	r31, r7
     d54:	60 81       	ld	r22, Z
     d56:	ce 01       	movw	r24, r28
     d58:	01 96       	adiw	r24, 0x01	; 1
     d5a:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
     d5e:	2f 81       	ldd	r18, Y+7	; 0x07
     d60:	f7 01       	movw	r30, r14
     d62:	e6 0d       	add	r30, r6
     d64:	f7 1d       	adc	r31, r7
     d66:	21 8b       	std	Z+17, r18	; 0x11
     d68:	89 81       	ldd	r24, Y+1	; 0x01
     d6a:	9a 81       	ldd	r25, Y+2	; 0x02
     d6c:	f3 01       	movw	r30, r6
     d6e:	ee 0f       	add	r30, r30
     d70:	ff 1f       	adc	r31, r31
     d72:	ee 0d       	add	r30, r14
     d74:	ff 1d       	adc	r31, r15
     d76:	92 a3       	std	Z+34, r25	; 0x22
     d78:	81 a3       	std	Z+33, r24	; 0x21
     d7a:	83 32       	cpi	r24, 0x23	; 35
     d7c:	91 05       	cpc	r25, r1
     d7e:	11 f4       	brne	.+4      	; 0xd84 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
     d80:	f8 01       	movw	r30, r16
     d82:	08 c0       	rjmp	.+16     	; 0xd94 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
     d84:	86 32       	cpi	r24, 0x26	; 38
     d86:	91 05       	cpc	r25, r1
     d88:	11 f4       	brne	.+4      	; 0xd8e <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
     d8a:	f6 01       	movw	r30, r12
     d8c:	03 c0       	rjmp	.+6      	; 0xd94 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
     d8e:	89 97       	sbiw	r24, 0x29	; 41
     d90:	21 f4       	brne	.+8      	; 0xd9a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
     d92:	f5 01       	movw	r30, r10
     d94:	80 81       	ld	r24, Z
     d96:	82 2b       	or	r24, r18
     d98:	80 83       	st	Z, r24
     d9a:	53 94       	inc	r5
     d9c:	d2 cf       	rjmp	.-92     	; 0xd42 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
     d9e:	27 96       	adiw	r28, 0x07	; 7
     da0:	ef e0       	ldi	r30, 0x0F	; 15
     da2:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__epilogue_restores__+0x6>

00000da6 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
     da6:	a0 e0       	ldi	r26, 0x00	; 0
     da8:	b0 e0       	ldi	r27, 0x00	; 0
     daa:	e9 ed       	ldi	r30, 0xD9	; 217
     dac:	f6 e0       	ldi	r31, 0x06	; 6
     dae:	0c 94 6c 0b 	jmp	0x16d8	; 0x16d8 <__prologue_saves__+0xa>
     db2:	ec 01       	movw	r28, r24
     db4:	5b 01       	movw	r10, r22
     db6:	6c 01       	movw	r12, r24
     db8:	81 e4       	ldi	r24, 0x41	; 65
     dba:	c8 0e       	add	r12, r24
     dbc:	d1 1c       	adc	r13, r1
     dbe:	f6 01       	movw	r30, r12
     dc0:	80 80       	ld	r8, Z
     dc2:	7e 01       	movw	r14, r28
     dc4:	f2 e4       	ldi	r31, 0x42	; 66
     dc6:	ef 0e       	add	r14, r31
     dc8:	f1 1c       	adc	r15, r1
     dca:	f7 01       	movw	r30, r14
     dcc:	70 80       	ld	r7, Z
     dce:	8e 01       	movw	r16, r28
     dd0:	0d 5b       	subi	r16, 0xBD	; 189
     dd2:	1f 4f       	sbci	r17, 0xFF	; 255
     dd4:	f8 01       	movw	r30, r16
     dd6:	90 80       	ld	r9, Z
     dd8:	80 e0       	ldi	r24, 0x00	; 0
     dda:	98 85       	ldd	r25, Y+8	; 0x08
     ddc:	89 17       	cp	r24, r25
     dde:	48 f4       	brcc	.+18     	; 0xdf2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
     de0:	f5 01       	movw	r30, r10
     de2:	e8 0f       	add	r30, r24
     de4:	f1 1d       	adc	r31, r1
     de6:	e8 0f       	add	r30, r24
     de8:	f1 1d       	adc	r31, r1
     dea:	11 82       	std	Z+1, r1	; 0x01
     dec:	10 82       	st	Z, r1
     dee:	8f 5f       	subi	r24, 0xFF	; 255
     df0:	f4 cf       	rjmp	.-24     	; 0xdda <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
     df2:	84 b1       	in	r24, 0x04	; 4
     df4:	f6 01       	movw	r30, r12
     df6:	90 81       	ld	r25, Z
     df8:	89 2b       	or	r24, r25
     dfa:	84 b9       	out	0x04, r24	; 4
     dfc:	87 b1       	in	r24, 0x07	; 7
     dfe:	f7 01       	movw	r30, r14
     e00:	90 81       	ld	r25, Z
     e02:	89 2b       	or	r24, r25
     e04:	87 b9       	out	0x07, r24	; 7
     e06:	8a b1       	in	r24, 0x0a	; 10
     e08:	f8 01       	movw	r30, r16
     e0a:	90 81       	ld	r25, Z
     e0c:	89 2b       	or	r24, r25
     e0e:	8a b9       	out	0x0a, r24	; 10
     e10:	85 b1       	in	r24, 0x05	; 5
     e12:	f6 01       	movw	r30, r12
     e14:	90 81       	ld	r25, Z
     e16:	89 2b       	or	r24, r25
     e18:	85 b9       	out	0x05, r24	; 5
     e1a:	88 b1       	in	r24, 0x08	; 8
     e1c:	f7 01       	movw	r30, r14
     e1e:	90 81       	ld	r25, Z
     e20:	89 2b       	or	r24, r25
     e22:	88 b9       	out	0x08, r24	; 8
     e24:	8b b1       	in	r24, 0x0b	; 11
     e26:	f8 01       	movw	r30, r16
     e28:	90 81       	ld	r25, Z
     e2a:	89 2b       	or	r24, r25
     e2c:	8b b9       	out	0x0b, r24	; 11
     e2e:	8a e0       	ldi	r24, 0x0A	; 10
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <delay_us>
     e36:	94 b1       	in	r25, 0x04	; 4
     e38:	f6 01       	movw	r30, r12
     e3a:	80 81       	ld	r24, Z
     e3c:	80 95       	com	r24
     e3e:	89 23       	and	r24, r25
     e40:	84 b9       	out	0x04, r24	; 4
     e42:	97 b1       	in	r25, 0x07	; 7
     e44:	f7 01       	movw	r30, r14
     e46:	80 81       	ld	r24, Z
     e48:	80 95       	com	r24
     e4a:	89 23       	and	r24, r25
     e4c:	87 b9       	out	0x07, r24	; 7
     e4e:	9a b1       	in	r25, 0x0a	; 10
     e50:	f8 01       	movw	r30, r16
     e52:	80 81       	ld	r24, Z
     e54:	80 95       	com	r24
     e56:	89 23       	and	r24, r25
     e58:	8a b9       	out	0x0a, r24	; 10
     e5a:	95 b1       	in	r25, 0x05	; 5
     e5c:	f6 01       	movw	r30, r12
     e5e:	80 81       	ld	r24, Z
     e60:	80 95       	com	r24
     e62:	89 23       	and	r24, r25
     e64:	85 b9       	out	0x05, r24	; 5
     e66:	98 b1       	in	r25, 0x08	; 8
     e68:	f7 01       	movw	r30, r14
     e6a:	80 81       	ld	r24, Z
     e6c:	80 95       	com	r24
     e6e:	89 23       	and	r24, r25
     e70:	88 b9       	out	0x08, r24	; 8
     e72:	9b b1       	in	r25, 0x0b	; 11
     e74:	f8 01       	movw	r30, r16
     e76:	80 81       	ld	r24, Z
     e78:	80 95       	com	r24
     e7a:	89 23       	and	r24, r25
     e7c:	8b b9       	out	0x0b, r24	; 11
     e7e:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     e82:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
     e86:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     e8a:	83 60       	ori	r24, 0x03	; 3
     e8c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     e90:	82 e0       	ldi	r24, 0x02	; 2
     e92:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
     e96:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
     e9a:	80 e0       	ldi	r24, 0x00	; 0
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	2e 85       	ldd	r18, Y+14	; 0x0e
     ea0:	3f 85       	ldd	r19, Y+15	; 0x0f
     ea2:	82 17       	cp	r24, r18
     ea4:	93 07       	cpc	r25, r19
     ea6:	20 f5       	brcc	.+72     	; 0xef0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
     ea8:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
     eac:	2c 2d       	mov	r18, r12
     eae:	24 1b       	sub	r18, r20
     eb0:	82 0f       	add	r24, r18
     eb2:	91 1d       	adc	r25, r1
     eb4:	03 b1       	in	r16, 0x03	; 3
     eb6:	08 11       	cpse	r16, r8
     eb8:	32 c0       	rjmp	.+100    	; 0xf1e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
     eba:	f6 b0       	in	r15, 0x06	; 6
     ebc:	f7 10       	cpse	r15, r7
     ebe:	2f c0       	rjmp	.+94     	; 0xf1e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
     ec0:	29 b1       	in	r18, 0x09	; 9
     ec2:	29 11       	cpse	r18, r9
     ec4:	2c c0       	rjmp	.+88     	; 0xf1e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
     ec6:	10 c0       	rjmp	.+32     	; 0xee8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
     ec8:	21 2f       	mov	r18, r17
     eca:	30 e0       	ldi	r19, 0x00	; 0
     ecc:	a9 01       	movw	r20, r18
     ece:	44 0f       	add	r20, r20
     ed0:	55 1f       	adc	r21, r21
     ed2:	f5 01       	movw	r30, r10
     ed4:	e4 0f       	add	r30, r20
     ed6:	f5 1f       	adc	r31, r21
     ed8:	60 81       	ld	r22, Z
     eda:	71 81       	ldd	r23, Z+1	; 0x01
     edc:	67 2b       	or	r22, r23
     ede:	21 f1       	breq	.+72     	; 0xf28 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
     ee0:	1f 5f       	subi	r17, 0xFF	; 255
     ee2:	28 85       	ldd	r18, Y+8	; 0x08
     ee4:	12 17       	cp	r17, r18
     ee6:	80 f3       	brcs	.-32     	; 0xec8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
     ee8:	7f 2c       	mov	r7, r15
     eea:	80 2e       	mov	r8, r16
     eec:	4c 2d       	mov	r20, r12
     eee:	d7 cf       	rjmp	.-82     	; 0xe9e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
     ef0:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     ef4:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
     ef8:	20 e0       	ldi	r18, 0x00	; 0
     efa:	88 85       	ldd	r24, Y+8	; 0x08
     efc:	28 17       	cp	r18, r24
     efe:	30 f5       	brcc	.+76     	; 0xf4c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
     f00:	f5 01       	movw	r30, r10
     f02:	e2 0f       	add	r30, r18
     f04:	f1 1d       	adc	r31, r1
     f06:	e2 0f       	add	r30, r18
     f08:	f1 1d       	adc	r31, r1
     f0a:	80 81       	ld	r24, Z
     f0c:	91 81       	ldd	r25, Z+1	; 0x01
     f0e:	89 2b       	or	r24, r25
     f10:	21 f4       	brne	.+8      	; 0xf1a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
     f12:	8e 85       	ldd	r24, Y+14	; 0x0e
     f14:	9f 85       	ldd	r25, Y+15	; 0x0f
     f16:	91 83       	std	Z+1, r25	; 0x01
     f18:	80 83       	st	Z, r24
     f1a:	2f 5f       	subi	r18, 0xFF	; 255
     f1c:	ee cf       	rjmp	.-36     	; 0xefa <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
     f1e:	03 b1       	in	r16, 0x03	; 3
     f20:	f6 b0       	in	r15, 0x06	; 6
     f22:	99 b0       	in	r9, 0x09	; 9
     f24:	10 e0       	ldi	r17, 0x00	; 0
     f26:	dd cf       	rjmp	.-70     	; 0xee2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
     f28:	de 01       	movw	r26, r28
     f2a:	a4 0f       	add	r26, r20
     f2c:	b5 1f       	adc	r27, r21
     f2e:	91 96       	adiw	r26, 0x21	; 33
     f30:	0d 90       	ld	r0, X+
     f32:	bc 91       	ld	r27, X
     f34:	a0 2d       	mov	r26, r0
     f36:	4c 91       	ld	r20, X
     f38:	de 01       	movw	r26, r28
     f3a:	a2 0f       	add	r26, r18
     f3c:	b3 1f       	adc	r27, r19
     f3e:	51 96       	adiw	r26, 0x11	; 17
     f40:	2c 91       	ld	r18, X
     f42:	42 23       	and	r20, r18
     f44:	69 f6       	brne	.-102    	; 0xee0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
     f46:	91 83       	std	Z+1, r25	; 0x01
     f48:	80 83       	st	Z, r24
     f4a:	ca cf       	rjmp	.-108    	; 0xee0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
     f4c:	cd b7       	in	r28, 0x3d	; 61
     f4e:	de b7       	in	r29, 0x3e	; 62
     f50:	ed e0       	ldi	r30, 0x0D	; 13
     f52:	0c 94 88 0b 	jmp	0x1710	; 0x1710 <__epilogue_restores__+0xa>

00000f56 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
     f56:	ef 92       	push	r14
     f58:	ff 92       	push	r15
     f5a:	0f 93       	push	r16
     f5c:	1f 93       	push	r17
     f5e:	cf 93       	push	r28
     f60:	df 93       	push	r29
     f62:	fc 01       	movw	r30, r24
     f64:	9b 01       	movw	r18, r22
     f66:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     f6a:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     f6e:	47 b1       	in	r20, 0x07	; 7
     f70:	18 b1       	in	r17, 0x08	; 8
     f72:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     f76:	86 fd       	sbrc	r24, 6
     f78:	fc cf       	rjmp	.-8      	; 0xf72 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
     f7a:	80 e0       	ldi	r24, 0x00	; 0
     f7c:	90 85       	ldd	r25, Z+8	; 0x08
     f7e:	89 17       	cp	r24, r25
     f80:	48 f4       	brcc	.+18     	; 0xf94 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
     f82:	d9 01       	movw	r26, r18
     f84:	a8 0f       	add	r26, r24
     f86:	b1 1d       	adc	r27, r1
     f88:	a8 0f       	add	r26, r24
     f8a:	b1 1d       	adc	r27, r1
     f8c:	1d 92       	st	X+, r1
     f8e:	1c 92       	st	X, r1
     f90:	8f 5f       	subi	r24, 0xFF	; 255
     f92:	f4 cf       	rjmp	.-24     	; 0xf7c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
     f94:	97 b1       	in	r25, 0x07	; 7
     f96:	82 a1       	ldd	r24, Z+34	; 0x22
     f98:	80 95       	com	r24
     f9a:	89 23       	and	r24, r25
     f9c:	87 b9       	out	0x07, r24	; 7
     f9e:	98 b1       	in	r25, 0x08	; 8
     fa0:	82 a1       	ldd	r24, Z+34	; 0x22
     fa2:	80 95       	com	r24
     fa4:	89 23       	and	r24, r25
     fa6:	88 b9       	out	0x08, r24	; 8
     fa8:	87 e8       	ldi	r24, 0x87	; 135
     faa:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     fae:	e1 2c       	mov	r14, r1
     fb0:	81 a1       	ldd	r24, Z+33	; 0x21
     fb2:	e8 16       	cp	r14, r24
     fb4:	10 f0       	brcs	.+4      	; 0xfba <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
     fb6:	e1 2c       	mov	r14, r1
     fb8:	29 c0       	rjmp	.+82     	; 0x100c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
     fba:	50 e0       	ldi	r21, 0x00	; 0
     fbc:	80 85       	ldd	r24, Z+8	; 0x08
     fbe:	58 17       	cp	r21, r24
     fc0:	18 f5       	brcc	.+70     	; 0x1008 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
     fc2:	a5 2f       	mov	r26, r21
     fc4:	b0 e0       	ldi	r27, 0x00	; 0
     fc6:	ef 01       	movw	r28, r30
     fc8:	ca 0f       	add	r28, r26
     fca:	db 1f       	adc	r29, r27
     fcc:	89 89       	ldd	r24, Y+17	; 0x11
     fce:	80 64       	ori	r24, 0x40	; 64
     fd0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     fd4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     fd8:	80 64       	ori	r24, 0x40	; 64
     fda:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     fde:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     fe2:	86 fd       	sbrc	r24, 6
     fe4:	fc cf       	rjmp	.-8      	; 0xfde <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
     fe6:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     fea:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     fee:	aa 0f       	add	r26, r26
     ff0:	bb 1f       	adc	r27, r27
     ff2:	a2 0f       	add	r26, r18
     ff4:	b3 1f       	adc	r27, r19
     ff6:	8d 91       	ld	r24, X+
     ff8:	9c 91       	ld	r25, X
     ffa:	11 97       	sbiw	r26, 0x01	; 1
     ffc:	86 0f       	add	r24, r22
     ffe:	97 1f       	adc	r25, r23
    1000:	8d 93       	st	X+, r24
    1002:	9c 93       	st	X, r25
    1004:	5f 5f       	subi	r21, 0xFF	; 255
    1006:	da cf       	rjmp	.-76     	; 0xfbc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    1008:	e3 94       	inc	r14
    100a:	d2 cf       	rjmp	.-92     	; 0xfb0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    100c:	80 85       	ldd	r24, Z+8	; 0x08
    100e:	e8 16       	cp	r14, r24
    1010:	a0 f4       	brcc	.+40     	; 0x103a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    1012:	e9 01       	movw	r28, r18
    1014:	ce 0d       	add	r28, r14
    1016:	d1 1d       	adc	r29, r1
    1018:	ce 0d       	add	r28, r14
    101a:	d1 1d       	adc	r29, r1
    101c:	61 a1       	ldd	r22, Z+33	; 0x21
    101e:	70 e0       	ldi	r23, 0x00	; 0
    1020:	cb 01       	movw	r24, r22
    1022:	95 95       	asr	r25
    1024:	87 95       	ror	r24
    1026:	a8 81       	ld	r26, Y
    1028:	b9 81       	ldd	r27, Y+1	; 0x01
    102a:	8a 0f       	add	r24, r26
    102c:	9b 1f       	adc	r25, r27
    102e:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <__udivmodhi4>
    1032:	79 83       	std	Y+1, r23	; 0x01
    1034:	68 83       	st	Y, r22
    1036:	e3 94       	inc	r14
    1038:	e9 cf       	rjmp	.-46     	; 0x100c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    103a:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    103e:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1042:	18 b9       	out	0x08, r17	; 8
    1044:	47 b9       	out	0x07, r20	; 7
    1046:	cd b7       	in	r28, 0x3d	; 61
    1048:	de b7       	in	r29, 0x3e	; 62
    104a:	e6 e0       	ldi	r30, 0x06	; 6
    104c:	0c 94 8f 0b 	jmp	0x171e	; 0x171e <__epilogue_restores__+0x18>

00001050 <_ZN16PololuQTRSensors4readEPjh>:
    1050:	a0 e2       	ldi	r26, 0x20	; 32
    1052:	b0 e0       	ldi	r27, 0x00	; 0
    1054:	ee e2       	ldi	r30, 0x2E	; 46
    1056:	f8 e0       	ldi	r31, 0x08	; 8
    1058:	0c 94 72 0b 	jmp	0x16e4	; 0x16e4 <__prologue_saves__+0x16>
    105c:	8c 01       	movw	r16, r24
    105e:	7b 01       	movw	r14, r22
    1060:	d4 2e       	mov	r13, r20
    1062:	8f ef       	ldi	r24, 0xFF	; 255
    1064:	84 0f       	add	r24, r20
    1066:	82 30       	cpi	r24, 0x02	; 2
    1068:	18 f4       	brcc	.+6      	; 0x1070 <_ZN16PololuQTRSensors4readEPjh+0x20>
    106a:	c8 01       	movw	r24, r16
    106c:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <_ZN16PololuQTRSensors10emittersOnEv>
    1070:	d8 01       	movw	r26, r16
    1072:	50 96       	adiw	r26, 0x10	; 16
    1074:	8c 91       	ld	r24, X
    1076:	b7 01       	movw	r22, r14
    1078:	81 11       	cpse	r24, r1
    107a:	10 c0       	rjmp	.+32     	; 0x109c <_ZN16PololuQTRSensors4readEPjh+0x4c>
    107c:	c8 01       	movw	r24, r16
    107e:	0e 94 d3 06 	call	0xda6	; 0xda6 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1082:	c8 01       	movw	r24, r16
    1084:	0e 94 55 06 	call	0xcaa	; 0xcaa <_ZN16PololuQTRSensors11emittersOffEv>
    1088:	b2 e0       	ldi	r27, 0x02	; 2
    108a:	db 12       	cpse	r13, r27
    108c:	3a c0       	rjmp	.+116    	; 0x1102 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    108e:	be 01       	movw	r22, r28
    1090:	6f 5f       	subi	r22, 0xFF	; 255
    1092:	7f 4f       	sbci	r23, 0xFF	; 255
    1094:	c8 01       	movw	r24, r16
    1096:	0e 94 d3 06 	call	0xda6	; 0xda6 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    109a:	0f c0       	rjmp	.+30     	; 0x10ba <_ZN16PololuQTRSensors4readEPjh+0x6a>
    109c:	c8 01       	movw	r24, r16
    109e:	0e 94 ab 07 	call	0xf56	; 0xf56 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    10a2:	c8 01       	movw	r24, r16
    10a4:	0e 94 55 06 	call	0xcaa	; 0xcaa <_ZN16PololuQTRSensors11emittersOffEv>
    10a8:	e2 e0       	ldi	r30, 0x02	; 2
    10aa:	de 12       	cpse	r13, r30
    10ac:	2a c0       	rjmp	.+84     	; 0x1102 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    10ae:	be 01       	movw	r22, r28
    10b0:	6f 5f       	subi	r22, 0xFF	; 255
    10b2:	7f 4f       	sbci	r23, 0xFF	; 255
    10b4:	c8 01       	movw	r24, r16
    10b6:	0e 94 ab 07 	call	0xf56	; 0xf56 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    10ba:	40 e0       	ldi	r20, 0x00	; 0
    10bc:	f8 01       	movw	r30, r16
    10be:	80 85       	ldd	r24, Z+8	; 0x08
    10c0:	48 17       	cp	r20, r24
    10c2:	f8 f4       	brcc	.+62     	; 0x1102 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    10c4:	84 2f       	mov	r24, r20
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	88 0f       	add	r24, r24
    10ca:	99 1f       	adc	r25, r25
    10cc:	f7 01       	movw	r30, r14
    10ce:	e8 0f       	add	r30, r24
    10d0:	f9 1f       	adc	r31, r25
    10d2:	21 e0       	ldi	r18, 0x01	; 1
    10d4:	30 e0       	ldi	r19, 0x00	; 0
    10d6:	2c 0f       	add	r18, r28
    10d8:	3d 1f       	adc	r19, r29
    10da:	82 0f       	add	r24, r18
    10dc:	93 1f       	adc	r25, r19
    10de:	d8 01       	movw	r26, r16
    10e0:	1e 96       	adiw	r26, 0x0e	; 14
    10e2:	2d 91       	ld	r18, X+
    10e4:	3c 91       	ld	r19, X
    10e6:	1f 97       	sbiw	r26, 0x0f	; 15
    10e8:	dc 01       	movw	r26, r24
    10ea:	8d 91       	ld	r24, X+
    10ec:	9c 91       	ld	r25, X
    10ee:	28 1b       	sub	r18, r24
    10f0:	39 0b       	sbc	r19, r25
    10f2:	80 81       	ld	r24, Z
    10f4:	91 81       	ldd	r25, Z+1	; 0x01
    10f6:	82 0f       	add	r24, r18
    10f8:	93 1f       	adc	r25, r19
    10fa:	91 83       	std	Z+1, r25	; 0x01
    10fc:	80 83       	st	Z, r24
    10fe:	4f 5f       	subi	r20, 0xFF	; 255
    1100:	dd cf       	rjmp	.-70     	; 0x10bc <_ZN16PololuQTRSensors4readEPjh+0x6c>
    1102:	a0 96       	adiw	r28, 0x20	; 32
    1104:	e7 e0       	ldi	r30, 0x07	; 7
    1106:	0c 94 8e 0b 	jmp	0x171c	; 0x171c <__epilogue_restores__+0x16>

0000110a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    110a:	2f 92       	push	r2
    110c:	3f 92       	push	r3
    110e:	5f 92       	push	r5
    1110:	6f 92       	push	r6
    1112:	7f 92       	push	r7
    1114:	8f 92       	push	r8
    1116:	9f 92       	push	r9
    1118:	af 92       	push	r10
    111a:	bf 92       	push	r11
    111c:	cf 92       	push	r12
    111e:	df 92       	push	r13
    1120:	ef 92       	push	r14
    1122:	ff 92       	push	r15
    1124:	0f 93       	push	r16
    1126:	1f 93       	push	r17
    1128:	cf 93       	push	r28
    112a:	df 93       	push	r29
    112c:	cd b7       	in	r28, 0x3d	; 61
    112e:	de b7       	in	r29, 0x3e	; 62
    1130:	c0 56       	subi	r28, 0x60	; 96
    1132:	d1 09       	sbc	r29, r1
    1134:	0f b6       	in	r0, 0x3f	; 63
    1136:	f8 94       	cli
    1138:	de bf       	out	0x3e, r29	; 62
    113a:	0f be       	out	0x3f, r0	; 63
    113c:	cd bf       	out	0x3d, r28	; 61
    113e:	8c 01       	movw	r16, r24
    1140:	4b 01       	movw	r8, r22
    1142:	5a 01       	movw	r10, r20
    1144:	52 2e       	mov	r5, r18
    1146:	da 01       	movw	r26, r20
    1148:	8d 91       	ld	r24, X+
    114a:	9c 91       	ld	r25, X
    114c:	89 2b       	or	r24, r25
    114e:	31 f0       	breq	.+12     	; 0x115c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    1150:	f4 01       	movw	r30, r8
    1152:	80 81       	ld	r24, Z
    1154:	91 81       	ldd	r25, Z+1	; 0x01
    1156:	89 2b       	or	r24, r25
    1158:	f1 f4       	brne	.+60     	; 0x1196 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    115a:	24 c0       	rjmp	.+72     	; 0x11a4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    115c:	d8 01       	movw	r26, r16
    115e:	18 96       	adiw	r26, 0x08	; 8
    1160:	8c 91       	ld	r24, X
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	88 0f       	add	r24, r24
    1166:	99 1f       	adc	r25, r25
    1168:	0e 94 9e 0b 	call	0x173c	; 0x173c <malloc>
    116c:	f5 01       	movw	r30, r10
    116e:	91 83       	std	Z+1, r25	; 0x01
    1170:	80 83       	st	Z, r24
    1172:	00 97       	sbiw	r24, 0x00	; 0
    1174:	09 f4       	brne	.+2      	; 0x1178 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    1176:	b1 c0       	rjmp	.+354    	; 0x12da <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1178:	fc 01       	movw	r30, r24
    117a:	20 e0       	ldi	r18, 0x00	; 0
    117c:	30 e0       	ldi	r19, 0x00	; 0
    117e:	d8 01       	movw	r26, r16
    1180:	18 96       	adiw	r26, 0x08	; 8
    1182:	8c 91       	ld	r24, X
    1184:	90 e0       	ldi	r25, 0x00	; 0
    1186:	28 17       	cp	r18, r24
    1188:	39 07       	cpc	r19, r25
    118a:	14 f7       	brge	.-60     	; 0x1150 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    118c:	11 92       	st	Z+, r1
    118e:	11 92       	st	Z+, r1
    1190:	2f 5f       	subi	r18, 0xFF	; 255
    1192:	3f 4f       	sbci	r19, 0xFF	; 255
    1194:	f4 cf       	rjmp	.-24     	; 0x117e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    1196:	e1 2c       	mov	r14, r1
    1198:	f1 2c       	mov	r15, r1
    119a:	6e 01       	movw	r12, r28
    119c:	b1 e2       	ldi	r27, 0x21	; 33
    119e:	cb 0e       	add	r12, r27
    11a0:	d1 1c       	adc	r13, r1
    11a2:	21 c0       	rjmp	.+66     	; 0x11e6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    11a4:	f8 01       	movw	r30, r16
    11a6:	80 85       	ldd	r24, Z+8	; 0x08
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	88 0f       	add	r24, r24
    11ac:	99 1f       	adc	r25, r25
    11ae:	0e 94 9e 0b 	call	0x173c	; 0x173c <malloc>
    11b2:	d4 01       	movw	r26, r8
    11b4:	8d 93       	st	X+, r24
    11b6:	9c 93       	st	X, r25
    11b8:	00 97       	sbiw	r24, 0x00	; 0
    11ba:	09 f4       	brne	.+2      	; 0x11be <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    11bc:	8e c0       	rjmp	.+284    	; 0x12da <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    11be:	fc 01       	movw	r30, r24
    11c0:	20 e0       	ldi	r18, 0x00	; 0
    11c2:	30 e0       	ldi	r19, 0x00	; 0
    11c4:	d8 01       	movw	r26, r16
    11c6:	18 96       	adiw	r26, 0x08	; 8
    11c8:	8c 91       	ld	r24, X
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	28 17       	cp	r18, r24
    11ce:	39 07       	cpc	r19, r25
    11d0:	14 f7       	brge	.-60     	; 0x1196 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    11d2:	d8 01       	movw	r26, r16
    11d4:	1e 96       	adiw	r26, 0x0e	; 14
    11d6:	8d 91       	ld	r24, X+
    11d8:	9c 91       	ld	r25, X
    11da:	1f 97       	sbiw	r26, 0x0f	; 15
    11dc:	81 93       	st	Z+, r24
    11de:	91 93       	st	Z+, r25
    11e0:	2f 5f       	subi	r18, 0xFF	; 255
    11e2:	3f 4f       	sbci	r19, 0xFF	; 255
    11e4:	ef cf       	rjmp	.-34     	; 0x11c4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    11e6:	45 2d       	mov	r20, r5
    11e8:	be 01       	movw	r22, r28
    11ea:	6f 5b       	subi	r22, 0xBF	; 191
    11ec:	7f 4f       	sbci	r23, 0xFF	; 255
    11ee:	c8 01       	movw	r24, r16
    11f0:	0e 94 28 08 	call	0x1050	; 0x1050 <_ZN16PololuQTRSensors4readEPjh>
    11f4:	f8 01       	movw	r30, r16
    11f6:	60 84       	ldd	r6, Z+8	; 0x08
    11f8:	71 2c       	mov	r7, r1
    11fa:	fe 01       	movw	r30, r28
    11fc:	ef 5b       	subi	r30, 0xBF	; 191
    11fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1200:	c6 01       	movw	r24, r12
    1202:	9e 01       	movw	r18, r28
    1204:	2f 5f       	subi	r18, 0xFF	; 255
    1206:	3f 4f       	sbci	r19, 0xFF	; 255
    1208:	19 01       	movw	r2, r18
    120a:	20 e0       	ldi	r18, 0x00	; 0
    120c:	30 e0       	ldi	r19, 0x00	; 0
    120e:	26 15       	cp	r18, r6
    1210:	37 05       	cpc	r19, r7
    1212:	4c f5       	brge	.+82     	; 0x1266 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    1214:	e1 14       	cp	r14, r1
    1216:	f1 04       	cpc	r15, r1
    1218:	89 f0       	breq	.+34     	; 0x123c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    121a:	dc 01       	movw	r26, r24
    121c:	6d 91       	ld	r22, X+
    121e:	7c 91       	ld	r23, X
    1220:	40 81       	ld	r20, Z
    1222:	51 81       	ldd	r21, Z+1	; 0x01
    1224:	64 17       	cp	r22, r20
    1226:	75 07       	cpc	r23, r21
    1228:	48 f0       	brcs	.+18     	; 0x123c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    122a:	d1 01       	movw	r26, r2
    122c:	6d 91       	ld	r22, X+
    122e:	7c 91       	ld	r23, X
    1230:	40 81       	ld	r20, Z
    1232:	51 81       	ldd	r21, Z+1	; 0x01
    1234:	46 17       	cp	r20, r22
    1236:	57 07       	cpc	r21, r23
    1238:	48 f0       	brcs	.+18     	; 0x124c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    123a:	0d c0       	rjmp	.+26     	; 0x1256 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    123c:	40 81       	ld	r20, Z
    123e:	51 81       	ldd	r21, Z+1	; 0x01
    1240:	dc 01       	movw	r26, r24
    1242:	4d 93       	st	X+, r20
    1244:	5c 93       	st	X, r21
    1246:	e1 14       	cp	r14, r1
    1248:	f1 04       	cpc	r15, r1
    124a:	79 f7       	brne	.-34     	; 0x122a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    124c:	40 81       	ld	r20, Z
    124e:	51 81       	ldd	r21, Z+1	; 0x01
    1250:	d1 01       	movw	r26, r2
    1252:	4d 93       	st	X+, r20
    1254:	5c 93       	st	X, r21
    1256:	2f 5f       	subi	r18, 0xFF	; 255
    1258:	3f 4f       	sbci	r19, 0xFF	; 255
    125a:	b2 e0       	ldi	r27, 0x02	; 2
    125c:	2b 0e       	add	r2, r27
    125e:	31 1c       	adc	r3, r1
    1260:	32 96       	adiw	r30, 0x02	; 2
    1262:	02 96       	adiw	r24, 0x02	; 2
    1264:	d4 cf       	rjmp	.-88     	; 0x120e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    1266:	ef ef       	ldi	r30, 0xFF	; 255
    1268:	ee 1a       	sub	r14, r30
    126a:	fe 0a       	sbc	r15, r30
    126c:	fa e0       	ldi	r31, 0x0A	; 10
    126e:	ef 16       	cp	r14, r31
    1270:	f1 04       	cpc	r15, r1
    1272:	09 f0       	breq	.+2      	; 0x1276 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    1274:	b8 cf       	rjmp	.-144    	; 0x11e6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    1276:	9e 01       	movw	r18, r28
    1278:	2f 5f       	subi	r18, 0xFF	; 255
    127a:	3f 4f       	sbci	r19, 0xFF	; 255
    127c:	79 01       	movw	r14, r18
    127e:	36 01       	movw	r6, r12
    1280:	80 e0       	ldi	r24, 0x00	; 0
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	f8 01       	movw	r30, r16
    1286:	20 85       	ldd	r18, Z+8	; 0x08
    1288:	30 e0       	ldi	r19, 0x00	; 0
    128a:	82 17       	cp	r24, r18
    128c:	93 07       	cpc	r25, r19
    128e:	2c f5       	brge	.+74     	; 0x12da <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1290:	d7 01       	movw	r26, r14
    1292:	2d 91       	ld	r18, X+
    1294:	3d 91       	ld	r19, X+
    1296:	7d 01       	movw	r14, r26
    1298:	b3 01       	movw	r22, r6
    129a:	6c 19       	sub	r22, r12
    129c:	7d 09       	sbc	r23, r13
    129e:	d5 01       	movw	r26, r10
    12a0:	ed 91       	ld	r30, X+
    12a2:	fc 91       	ld	r31, X
    12a4:	e6 0f       	add	r30, r22
    12a6:	f7 1f       	adc	r31, r23
    12a8:	40 81       	ld	r20, Z
    12aa:	51 81       	ldd	r21, Z+1	; 0x01
    12ac:	42 17       	cp	r20, r18
    12ae:	53 07       	cpc	r21, r19
    12b0:	10 f4       	brcc	.+4      	; 0x12b6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    12b2:	31 83       	std	Z+1, r19	; 0x01
    12b4:	20 83       	st	Z, r18
    12b6:	f3 01       	movw	r30, r6
    12b8:	21 91       	ld	r18, Z+
    12ba:	31 91       	ld	r19, Z+
    12bc:	3f 01       	movw	r6, r30
    12be:	d4 01       	movw	r26, r8
    12c0:	ed 91       	ld	r30, X+
    12c2:	fc 91       	ld	r31, X
    12c4:	e6 0f       	add	r30, r22
    12c6:	f7 1f       	adc	r31, r23
    12c8:	40 81       	ld	r20, Z
    12ca:	51 81       	ldd	r21, Z+1	; 0x01
    12cc:	24 17       	cp	r18, r20
    12ce:	35 07       	cpc	r19, r21
    12d0:	10 f4       	brcc	.+4      	; 0x12d6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    12d2:	31 83       	std	Z+1, r19	; 0x01
    12d4:	20 83       	st	Z, r18
    12d6:	01 96       	adiw	r24, 0x01	; 1
    12d8:	d5 cf       	rjmp	.-86     	; 0x1284 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    12da:	c0 5a       	subi	r28, 0xA0	; 160
    12dc:	df 4f       	sbci	r29, 0xFF	; 255
    12de:	0f b6       	in	r0, 0x3f	; 63
    12e0:	f8 94       	cli
    12e2:	de bf       	out	0x3e, r29	; 62
    12e4:	0f be       	out	0x3f, r0	; 63
    12e6:	cd bf       	out	0x3d, r28	; 61
    12e8:	df 91       	pop	r29
    12ea:	cf 91       	pop	r28
    12ec:	1f 91       	pop	r17
    12ee:	0f 91       	pop	r16
    12f0:	ff 90       	pop	r15
    12f2:	ef 90       	pop	r14
    12f4:	df 90       	pop	r13
    12f6:	cf 90       	pop	r12
    12f8:	bf 90       	pop	r11
    12fa:	af 90       	pop	r10
    12fc:	9f 90       	pop	r9
    12fe:	8f 90       	pop	r8
    1300:	7f 90       	pop	r7
    1302:	6f 90       	pop	r6
    1304:	5f 90       	pop	r5
    1306:	3f 90       	pop	r3
    1308:	2f 90       	pop	r2
    130a:	08 95       	ret

0000130c <_ZN16PololuQTRSensors9calibrateEh>:
    130c:	1f 93       	push	r17
    130e:	cf 93       	push	r28
    1310:	df 93       	push	r29
    1312:	ec 01       	movw	r28, r24
    1314:	16 2f       	mov	r17, r22
    1316:	8f ef       	ldi	r24, 0xFF	; 255
    1318:	86 0f       	add	r24, r22
    131a:	82 30       	cpi	r24, 0x02	; 2
    131c:	18 f0       	brcs	.+6      	; 0x1324 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    131e:	66 23       	and	r22, r22
    1320:	59 f0       	breq	.+22     	; 0x1338 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    1322:	14 c0       	rjmp	.+40     	; 0x134c <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1324:	21 e0       	ldi	r18, 0x01	; 1
    1326:	ae 01       	movw	r20, r28
    1328:	4e 5f       	subi	r20, 0xFE	; 254
    132a:	5f 4f       	sbci	r21, 0xFF	; 255
    132c:	be 01       	movw	r22, r28
    132e:	ce 01       	movw	r24, r28
    1330:	0e 94 85 08 	call	0x110a	; 0x110a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1334:	12 30       	cpi	r17, 0x02	; 2
    1336:	51 f4       	brne	.+20     	; 0x134c <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1338:	ae 01       	movw	r20, r28
    133a:	4a 5f       	subi	r20, 0xFA	; 250
    133c:	5f 4f       	sbci	r21, 0xFF	; 255
    133e:	be 01       	movw	r22, r28
    1340:	6c 5f       	subi	r22, 0xFC	; 252
    1342:	7f 4f       	sbci	r23, 0xFF	; 255
    1344:	20 e0       	ldi	r18, 0x00	; 0
    1346:	ce 01       	movw	r24, r28
    1348:	0e 94 85 08 	call	0x110a	; 0x110a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    134c:	df 91       	pop	r29
    134e:	cf 91       	pop	r28
    1350:	1f 91       	pop	r17
    1352:	08 95       	ret

00001354 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    1354:	a0 e0       	ldi	r26, 0x00	; 0
    1356:	b0 e0       	ldi	r27, 0x00	; 0
    1358:	e0 eb       	ldi	r30, 0xB0	; 176
    135a:	f9 e0       	ldi	r31, 0x09	; 9
    135c:	0c 94 70 0b 	jmp	0x16e0	; 0x16e0 <__prologue_saves__+0x12>
    1360:	ec 01       	movw	r28, r24
    1362:	8b 01       	movw	r16, r22
    1364:	b4 2e       	mov	r11, r20
    1366:	84 2f       	mov	r24, r20
    1368:	8d 7f       	andi	r24, 0xFD	; 253
    136a:	51 f4       	brne	.+20     	; 0x1380 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    136c:	8c 81       	ldd	r24, Y+4	; 0x04
    136e:	9d 81       	ldd	r25, Y+5	; 0x05
    1370:	89 2b       	or	r24, r25
    1372:	09 f4       	brne	.+2      	; 0x1376 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    1374:	97 c0       	rjmp	.+302    	; 0x14a4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1376:	8e 81       	ldd	r24, Y+6	; 0x06
    1378:	9f 81       	ldd	r25, Y+7	; 0x07
    137a:	89 2b       	or	r24, r25
    137c:	09 f4       	brne	.+2      	; 0x1380 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    137e:	92 c0       	rjmp	.+292    	; 0x14a4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1380:	8f ef       	ldi	r24, 0xFF	; 255
    1382:	8b 0d       	add	r24, r11
    1384:	82 30       	cpi	r24, 0x02	; 2
    1386:	50 f4       	brcc	.+20     	; 0x139c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    1388:	88 81       	ld	r24, Y
    138a:	99 81       	ldd	r25, Y+1	; 0x01
    138c:	89 2b       	or	r24, r25
    138e:	09 f4       	brne	.+2      	; 0x1392 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    1390:	89 c0       	rjmp	.+274    	; 0x14a4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1392:	8a 81       	ldd	r24, Y+2	; 0x02
    1394:	9b 81       	ldd	r25, Y+3	; 0x03
    1396:	89 2b       	or	r24, r25
    1398:	09 f4       	brne	.+2      	; 0x139c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    139a:	84 c0       	rjmp	.+264    	; 0x14a4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    139c:	4b 2d       	mov	r20, r11
    139e:	b8 01       	movw	r22, r16
    13a0:	ce 01       	movw	r24, r28
    13a2:	0e 94 28 08 	call	0x1050	; 0x1050 <_ZN16PololuQTRSensors4readEPjh>
    13a6:	78 01       	movw	r14, r16
    13a8:	00 e0       	ldi	r16, 0x00	; 0
    13aa:	10 e0       	ldi	r17, 0x00	; 0
    13ac:	c1 2c       	mov	r12, r1
    13ae:	d1 2c       	mov	r13, r1
    13b0:	88 85       	ldd	r24, Y+8	; 0x08
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	c8 16       	cp	r12, r24
    13b6:	d9 06       	cpc	r13, r25
    13b8:	0c f0       	brlt	.+2      	; 0x13bc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    13ba:	74 c0       	rjmp	.+232    	; 0x14a4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    13bc:	81 e0       	ldi	r24, 0x01	; 1
    13be:	b8 12       	cpse	r11, r24
    13c0:	0a c0       	rjmp	.+20     	; 0x13d6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    13c2:	ea 81       	ldd	r30, Y+2	; 0x02
    13c4:	fb 81       	ldd	r31, Y+3	; 0x03
    13c6:	e0 0f       	add	r30, r16
    13c8:	f1 1f       	adc	r31, r17
    13ca:	01 90       	ld	r0, Z+
    13cc:	f0 81       	ld	r31, Z
    13ce:	e0 2d       	mov	r30, r0
    13d0:	a8 81       	ld	r26, Y
    13d2:	b9 81       	ldd	r27, Y+1	; 0x01
    13d4:	0d c0       	rjmp	.+26     	; 0x13f0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    13d6:	8c 81       	ldd	r24, Y+4	; 0x04
    13d8:	9d 81       	ldd	r25, Y+5	; 0x05
    13da:	2e 81       	ldd	r18, Y+6	; 0x06
    13dc:	3f 81       	ldd	r19, Y+7	; 0x07
    13de:	b1 10       	cpse	r11, r1
    13e0:	0c c0       	rjmp	.+24     	; 0x13fa <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    13e2:	f9 01       	movw	r30, r18
    13e4:	e0 0f       	add	r30, r16
    13e6:	f1 1f       	adc	r31, r17
    13e8:	01 90       	ld	r0, Z+
    13ea:	f0 81       	ld	r31, Z
    13ec:	e0 2d       	mov	r30, r0
    13ee:	dc 01       	movw	r26, r24
    13f0:	a0 0f       	add	r26, r16
    13f2:	b1 1f       	adc	r27, r17
    13f4:	8d 91       	ld	r24, X+
    13f6:	9c 91       	ld	r25, X
    13f8:	28 c0       	rjmp	.+80     	; 0x144a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    13fa:	fc 01       	movw	r30, r24
    13fc:	e0 0f       	add	r30, r16
    13fe:	f1 1f       	adc	r31, r17
    1400:	40 81       	ld	r20, Z
    1402:	51 81       	ldd	r21, Z+1	; 0x01
    1404:	e8 81       	ld	r30, Y
    1406:	f9 81       	ldd	r31, Y+1	; 0x01
    1408:	e0 0f       	add	r30, r16
    140a:	f1 1f       	adc	r31, r17
    140c:	80 81       	ld	r24, Z
    140e:	91 81       	ldd	r25, Z+1	; 0x01
    1410:	ee 85       	ldd	r30, Y+14	; 0x0e
    1412:	ff 85       	ldd	r31, Y+15	; 0x0f
    1414:	48 17       	cp	r20, r24
    1416:	59 07       	cpc	r21, r25
    1418:	10 f4       	brcc	.+4      	; 0x141e <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    141a:	cf 01       	movw	r24, r30
    141c:	04 c0       	rjmp	.+8      	; 0x1426 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    141e:	8e 0f       	add	r24, r30
    1420:	9f 1f       	adc	r25, r31
    1422:	84 1b       	sub	r24, r20
    1424:	95 0b       	sbc	r25, r21
    1426:	d9 01       	movw	r26, r18
    1428:	a0 0f       	add	r26, r16
    142a:	b1 1f       	adc	r27, r17
    142c:	2d 91       	ld	r18, X+
    142e:	3c 91       	ld	r19, X
    1430:	aa 81       	ldd	r26, Y+2	; 0x02
    1432:	bb 81       	ldd	r27, Y+3	; 0x03
    1434:	a0 0f       	add	r26, r16
    1436:	b1 1f       	adc	r27, r17
    1438:	4d 91       	ld	r20, X+
    143a:	5c 91       	ld	r21, X
    143c:	24 17       	cp	r18, r20
    143e:	35 07       	cpc	r19, r21
    1440:	20 f0       	brcs	.+8      	; 0x144a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    1442:	e4 0f       	add	r30, r20
    1444:	f5 1f       	adc	r31, r21
    1446:	e2 1b       	sub	r30, r18
    1448:	f3 0b       	sbc	r31, r19
    144a:	e8 1b       	sub	r30, r24
    144c:	f9 0b       	sbc	r31, r25
    144e:	a9 f0       	breq	.+42     	; 0x147a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    1450:	d7 01       	movw	r26, r14
    1452:	2d 91       	ld	r18, X+
    1454:	3c 91       	ld	r19, X
    1456:	40 e0       	ldi	r20, 0x00	; 0
    1458:	50 e0       	ldi	r21, 0x00	; 0
    145a:	28 1b       	sub	r18, r24
    145c:	39 0b       	sbc	r19, r25
    145e:	41 09       	sbc	r20, r1
    1460:	51 09       	sbc	r21, r1
    1462:	a8 ee       	ldi	r26, 0xE8	; 232
    1464:	b3 e0       	ldi	r27, 0x03	; 3
    1466:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <__muluhisi3>
    146a:	9f 01       	movw	r18, r30
    146c:	40 e0       	ldi	r20, 0x00	; 0
    146e:	50 e0       	ldi	r21, 0x00	; 0
    1470:	0e 94 20 0b 	call	0x1640	; 0x1640 <__divmodsi4>
    1474:	37 fd       	sbrc	r19, 7
    1476:	0a c0       	rjmp	.+20     	; 0x148c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    1478:	02 c0       	rjmp	.+4      	; 0x147e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    147a:	20 e0       	ldi	r18, 0x00	; 0
    147c:	30 e0       	ldi	r19, 0x00	; 0
    147e:	29 3e       	cpi	r18, 0xE9	; 233
    1480:	b3 e0       	ldi	r27, 0x03	; 3
    1482:	3b 07       	cpc	r19, r27
    1484:	2c f0       	brlt	.+10     	; 0x1490 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1486:	28 ee       	ldi	r18, 0xE8	; 232
    1488:	33 e0       	ldi	r19, 0x03	; 3
    148a:	02 c0       	rjmp	.+4      	; 0x1490 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    148c:	20 e0       	ldi	r18, 0x00	; 0
    148e:	30 e0       	ldi	r19, 0x00	; 0
    1490:	f7 01       	movw	r30, r14
    1492:	21 93       	st	Z+, r18
    1494:	31 93       	st	Z+, r19
    1496:	7f 01       	movw	r14, r30
    1498:	ff ef       	ldi	r31, 0xFF	; 255
    149a:	cf 1a       	sub	r12, r31
    149c:	df 0a       	sbc	r13, r31
    149e:	0e 5f       	subi	r16, 0xFE	; 254
    14a0:	1f 4f       	sbci	r17, 0xFF	; 255
    14a2:	86 cf       	rjmp	.-244    	; 0x13b0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    14a4:	cd b7       	in	r28, 0x3d	; 61
    14a6:	de b7       	in	r29, 0x3e	; 62
    14a8:	e9 e0       	ldi	r30, 0x09	; 9
    14aa:	0c 94 8c 0b 	jmp	0x1718	; 0x1718 <__epilogue_restores__+0x12>

000014ae <_ZN16PololuQTRSensors8readLineEPjhh>:
    14ae:	a0 e0       	ldi	r26, 0x00	; 0
    14b0:	b0 e0       	ldi	r27, 0x00	; 0
    14b2:	ed e5       	ldi	r30, 0x5D	; 93
    14b4:	fa e0       	ldi	r31, 0x0A	; 10
    14b6:	0c 94 67 0b 	jmp	0x16ce	; 0x16ce <__prologue_saves__>
    14ba:	ec 01       	movw	r28, r24
    14bc:	8b 01       	movw	r16, r22
    14be:	82 2e       	mov	r8, r18
    14c0:	0e 94 aa 09 	call	0x1354	; 0x1354 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    14c4:	28 84       	ldd	r2, Y+8	; 0x08
    14c6:	e8 01       	movw	r28, r16
    14c8:	41 2c       	mov	r4, r1
    14ca:	51 2c       	mov	r5, r1
    14cc:	32 01       	movw	r6, r4
    14ce:	00 e0       	ldi	r16, 0x00	; 0
    14d0:	10 e0       	ldi	r17, 0x00	; 0
    14d2:	c1 2c       	mov	r12, r1
    14d4:	d1 2c       	mov	r13, r1
    14d6:	76 01       	movw	r14, r12
    14d8:	31 2c       	mov	r3, r1
    14da:	91 2c       	mov	r9, r1
    14dc:	58 ee       	ldi	r21, 0xE8	; 232
    14de:	a5 2e       	mov	r10, r21
    14e0:	53 e0       	ldi	r21, 0x03	; 3
    14e2:	b5 2e       	mov	r11, r21
    14e4:	92 14       	cp	r9, r2
    14e6:	21 f1       	breq	.+72     	; 0x1530 <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    14e8:	e9 91       	ld	r30, Y+
    14ea:	f9 91       	ld	r31, Y+
    14ec:	88 20       	and	r8, r8
    14ee:	21 f0       	breq	.+8      	; 0x14f8 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    14f0:	c5 01       	movw	r24, r10
    14f2:	8e 1b       	sub	r24, r30
    14f4:	9f 0b       	sbc	r25, r31
    14f6:	fc 01       	movw	r30, r24
    14f8:	e9 3c       	cpi	r30, 0xC9	; 201
    14fa:	f1 05       	cpc	r31, r1
    14fc:	24 f4       	brge	.+8      	; 0x1506 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    14fe:	e3 33       	cpi	r30, 0x33	; 51
    1500:	f1 05       	cpc	r31, r1
    1502:	74 f0       	brlt	.+28     	; 0x1520 <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    1504:	02 c0       	rjmp	.+4      	; 0x150a <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    1506:	33 24       	eor	r3, r3
    1508:	33 94       	inc	r3
    150a:	df 01       	movw	r26, r30
    150c:	a3 01       	movw	r20, r6
    150e:	92 01       	movw	r18, r4
    1510:	0e 94 5f 0b 	call	0x16be	; 0x16be <__mulshisi3>
    1514:	c6 0e       	add	r12, r22
    1516:	d7 1e       	adc	r13, r23
    1518:	e8 1e       	adc	r14, r24
    151a:	f9 1e       	adc	r15, r25
    151c:	0e 0f       	add	r16, r30
    151e:	1f 1f       	adc	r17, r31
    1520:	93 94       	inc	r9
    1522:	98 ee       	ldi	r25, 0xE8	; 232
    1524:	49 0e       	add	r4, r25
    1526:	93 e0       	ldi	r25, 0x03	; 3
    1528:	59 1e       	adc	r5, r25
    152a:	61 1c       	adc	r6, r1
    152c:	71 1c       	adc	r7, r1
    152e:	da cf       	rjmp	.-76     	; 0x14e4 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    1530:	31 10       	cpse	r3, r1
    1532:	1e c0       	rjmp	.+60     	; 0x1570 <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    1534:	49 2d       	mov	r20, r9
    1536:	50 e0       	ldi	r21, 0x00	; 0
    1538:	41 50       	subi	r20, 0x01	; 1
    153a:	51 09       	sbc	r21, r1
    153c:	24 ef       	ldi	r18, 0xF4	; 244
    153e:	31 e0       	ldi	r19, 0x01	; 1
    1540:	42 9f       	mul	r20, r18
    1542:	c0 01       	movw	r24, r0
    1544:	43 9f       	mul	r20, r19
    1546:	90 0d       	add	r25, r0
    1548:	52 9f       	mul	r21, r18
    154a:	90 0d       	add	r25, r0
    154c:	11 24       	eor	r1, r1
    154e:	20 91 64 01 	lds	r18, 0x0164	; 0x800164 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    1552:	30 91 65 01 	lds	r19, 0x0165	; 0x800165 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    1556:	28 17       	cp	r18, r24
    1558:	39 07       	cpc	r19, r25
    155a:	b4 f0       	brlt	.+44     	; 0x1588 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    155c:	88 ee       	ldi	r24, 0xE8	; 232
    155e:	93 e0       	ldi	r25, 0x03	; 3
    1560:	48 9f       	mul	r20, r24
    1562:	90 01       	movw	r18, r0
    1564:	49 9f       	mul	r20, r25
    1566:	30 0d       	add	r19, r0
    1568:	58 9f       	mul	r21, r24
    156a:	30 0d       	add	r19, r0
    156c:	11 24       	eor	r1, r1
    156e:	0e c0       	rjmp	.+28     	; 0x158c <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    1570:	98 01       	movw	r18, r16
    1572:	40 e0       	ldi	r20, 0x00	; 0
    1574:	50 e0       	ldi	r21, 0x00	; 0
    1576:	c7 01       	movw	r24, r14
    1578:	b6 01       	movw	r22, r12
    157a:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <__udivmodsi4>
    157e:	30 93 65 01 	sts	0x0165, r19	; 0x800165 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    1582:	20 93 64 01 	sts	0x0164, r18	; 0x800164 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    1586:	02 c0       	rjmp	.+4      	; 0x158c <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    1588:	20 e0       	ldi	r18, 0x00	; 0
    158a:	30 e0       	ldi	r19, 0x00	; 0
    158c:	c9 01       	movw	r24, r18
    158e:	cd b7       	in	r28, 0x3d	; 61
    1590:	de b7       	in	r29, 0x3e	; 62
    1592:	e2 e1       	ldi	r30, 0x12	; 18
    1594:	0c 94 83 0b 	jmp	0x1706	; 0x1706 <__epilogue_restores__>

00001598 <_ZN16PololuQTRSensorsD1Ev>:
    1598:	cf 93       	push	r28
    159a:	df 93       	push	r29
    159c:	ec 01       	movw	r28, r24
    159e:	8a 81       	ldd	r24, Y+2	; 0x02
    15a0:	9b 81       	ldd	r25, Y+3	; 0x03
    15a2:	00 97       	sbiw	r24, 0x00	; 0
    15a4:	11 f0       	breq	.+4      	; 0x15aa <_ZN16PololuQTRSensorsD1Ev+0x12>
    15a6:	0e 94 36 0c 	call	0x186c	; 0x186c <free>
    15aa:	8e 81       	ldd	r24, Y+6	; 0x06
    15ac:	9f 81       	ldd	r25, Y+7	; 0x07
    15ae:	00 97       	sbiw	r24, 0x00	; 0
    15b0:	11 f0       	breq	.+4      	; 0x15b6 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    15b2:	0e 94 36 0c 	call	0x186c	; 0x186c <free>
    15b6:	88 81       	ld	r24, Y
    15b8:	99 81       	ldd	r25, Y+1	; 0x01
    15ba:	00 97       	sbiw	r24, 0x00	; 0
    15bc:	11 f0       	breq	.+4      	; 0x15c2 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    15be:	0e 94 36 0c 	call	0x186c	; 0x186c <free>
    15c2:	8c 81       	ldd	r24, Y+4	; 0x04
    15c4:	9d 81       	ldd	r25, Y+5	; 0x05
    15c6:	00 97       	sbiw	r24, 0x00	; 0
    15c8:	11 f0       	breq	.+4      	; 0x15ce <_ZN16PololuQTRSensorsD1Ev+0x36>
    15ca:	0e 94 36 0c 	call	0x186c	; 0x186c <free>
    15ce:	df 91       	pop	r29
    15d0:	cf 91       	pop	r28
    15d2:	08 95       	ret

000015d4 <__udivmodhi4>:
    15d4:	aa 1b       	sub	r26, r26
    15d6:	bb 1b       	sub	r27, r27
    15d8:	51 e1       	ldi	r21, 0x11	; 17
    15da:	07 c0       	rjmp	.+14     	; 0x15ea <__udivmodhi4_ep>

000015dc <__udivmodhi4_loop>:
    15dc:	aa 1f       	adc	r26, r26
    15de:	bb 1f       	adc	r27, r27
    15e0:	a6 17       	cp	r26, r22
    15e2:	b7 07       	cpc	r27, r23
    15e4:	10 f0       	brcs	.+4      	; 0x15ea <__udivmodhi4_ep>
    15e6:	a6 1b       	sub	r26, r22
    15e8:	b7 0b       	sbc	r27, r23

000015ea <__udivmodhi4_ep>:
    15ea:	88 1f       	adc	r24, r24
    15ec:	99 1f       	adc	r25, r25
    15ee:	5a 95       	dec	r21
    15f0:	a9 f7       	brne	.-22     	; 0x15dc <__udivmodhi4_loop>
    15f2:	80 95       	com	r24
    15f4:	90 95       	com	r25
    15f6:	bc 01       	movw	r22, r24
    15f8:	cd 01       	movw	r24, r26
    15fa:	08 95       	ret

000015fc <__udivmodsi4>:
    15fc:	a1 e2       	ldi	r26, 0x21	; 33
    15fe:	1a 2e       	mov	r1, r26
    1600:	aa 1b       	sub	r26, r26
    1602:	bb 1b       	sub	r27, r27
    1604:	fd 01       	movw	r30, r26
    1606:	0d c0       	rjmp	.+26     	; 0x1622 <__udivmodsi4_ep>

00001608 <__udivmodsi4_loop>:
    1608:	aa 1f       	adc	r26, r26
    160a:	bb 1f       	adc	r27, r27
    160c:	ee 1f       	adc	r30, r30
    160e:	ff 1f       	adc	r31, r31
    1610:	a2 17       	cp	r26, r18
    1612:	b3 07       	cpc	r27, r19
    1614:	e4 07       	cpc	r30, r20
    1616:	f5 07       	cpc	r31, r21
    1618:	20 f0       	brcs	.+8      	; 0x1622 <__udivmodsi4_ep>
    161a:	a2 1b       	sub	r26, r18
    161c:	b3 0b       	sbc	r27, r19
    161e:	e4 0b       	sbc	r30, r20
    1620:	f5 0b       	sbc	r31, r21

00001622 <__udivmodsi4_ep>:
    1622:	66 1f       	adc	r22, r22
    1624:	77 1f       	adc	r23, r23
    1626:	88 1f       	adc	r24, r24
    1628:	99 1f       	adc	r25, r25
    162a:	1a 94       	dec	r1
    162c:	69 f7       	brne	.-38     	; 0x1608 <__udivmodsi4_loop>
    162e:	60 95       	com	r22
    1630:	70 95       	com	r23
    1632:	80 95       	com	r24
    1634:	90 95       	com	r25
    1636:	9b 01       	movw	r18, r22
    1638:	ac 01       	movw	r20, r24
    163a:	bd 01       	movw	r22, r26
    163c:	cf 01       	movw	r24, r30
    163e:	08 95       	ret

00001640 <__divmodsi4>:
    1640:	05 2e       	mov	r0, r21
    1642:	97 fb       	bst	r25, 7
    1644:	1e f4       	brtc	.+6      	; 0x164c <__divmodsi4+0xc>
    1646:	00 94       	com	r0
    1648:	0e 94 37 0b 	call	0x166e	; 0x166e <__negsi2>
    164c:	57 fd       	sbrc	r21, 7
    164e:	07 d0       	rcall	.+14     	; 0x165e <__divmodsi4_neg2>
    1650:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <__udivmodsi4>
    1654:	07 fc       	sbrc	r0, 7
    1656:	03 d0       	rcall	.+6      	; 0x165e <__divmodsi4_neg2>
    1658:	4e f4       	brtc	.+18     	; 0x166c <__divmodsi4_exit>
    165a:	0c 94 37 0b 	jmp	0x166e	; 0x166e <__negsi2>

0000165e <__divmodsi4_neg2>:
    165e:	50 95       	com	r21
    1660:	40 95       	com	r20
    1662:	30 95       	com	r19
    1664:	21 95       	neg	r18
    1666:	3f 4f       	sbci	r19, 0xFF	; 255
    1668:	4f 4f       	sbci	r20, 0xFF	; 255
    166a:	5f 4f       	sbci	r21, 0xFF	; 255

0000166c <__divmodsi4_exit>:
    166c:	08 95       	ret

0000166e <__negsi2>:
    166e:	90 95       	com	r25
    1670:	80 95       	com	r24
    1672:	70 95       	com	r23
    1674:	61 95       	neg	r22
    1676:	7f 4f       	sbci	r23, 0xFF	; 255
    1678:	8f 4f       	sbci	r24, 0xFF	; 255
    167a:	9f 4f       	sbci	r25, 0xFF	; 255
    167c:	08 95       	ret

0000167e <__tablejump2__>:
    167e:	ee 0f       	add	r30, r30
    1680:	ff 1f       	adc	r31, r31
    1682:	05 90       	lpm	r0, Z+
    1684:	f4 91       	lpm	r31, Z
    1686:	e0 2d       	mov	r30, r0
    1688:	09 94       	ijmp

0000168a <__umulhisi3>:
    168a:	a2 9f       	mul	r26, r18
    168c:	b0 01       	movw	r22, r0
    168e:	b3 9f       	mul	r27, r19
    1690:	c0 01       	movw	r24, r0
    1692:	a3 9f       	mul	r26, r19
    1694:	70 0d       	add	r23, r0
    1696:	81 1d       	adc	r24, r1
    1698:	11 24       	eor	r1, r1
    169a:	91 1d       	adc	r25, r1
    169c:	b2 9f       	mul	r27, r18
    169e:	70 0d       	add	r23, r0
    16a0:	81 1d       	adc	r24, r1
    16a2:	11 24       	eor	r1, r1
    16a4:	91 1d       	adc	r25, r1
    16a6:	08 95       	ret

000016a8 <__muluhisi3>:
    16a8:	0e 94 45 0b 	call	0x168a	; 0x168a <__umulhisi3>
    16ac:	a5 9f       	mul	r26, r21
    16ae:	90 0d       	add	r25, r0
    16b0:	b4 9f       	mul	r27, r20
    16b2:	90 0d       	add	r25, r0
    16b4:	a4 9f       	mul	r26, r20
    16b6:	80 0d       	add	r24, r0
    16b8:	91 1d       	adc	r25, r1
    16ba:	11 24       	eor	r1, r1
    16bc:	08 95       	ret

000016be <__mulshisi3>:
    16be:	b7 ff       	sbrs	r27, 7
    16c0:	0c 94 54 0b 	jmp	0x16a8	; 0x16a8 <__muluhisi3>

000016c4 <__mulohisi3>:
    16c4:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <__muluhisi3>
    16c8:	82 1b       	sub	r24, r18
    16ca:	93 0b       	sbc	r25, r19
    16cc:	08 95       	ret

000016ce <__prologue_saves__>:
    16ce:	2f 92       	push	r2
    16d0:	3f 92       	push	r3
    16d2:	4f 92       	push	r4
    16d4:	5f 92       	push	r5
    16d6:	6f 92       	push	r6
    16d8:	7f 92       	push	r7
    16da:	8f 92       	push	r8
    16dc:	9f 92       	push	r9
    16de:	af 92       	push	r10
    16e0:	bf 92       	push	r11
    16e2:	cf 92       	push	r12
    16e4:	df 92       	push	r13
    16e6:	ef 92       	push	r14
    16e8:	ff 92       	push	r15
    16ea:	0f 93       	push	r16
    16ec:	1f 93       	push	r17
    16ee:	cf 93       	push	r28
    16f0:	df 93       	push	r29
    16f2:	cd b7       	in	r28, 0x3d	; 61
    16f4:	de b7       	in	r29, 0x3e	; 62
    16f6:	ca 1b       	sub	r28, r26
    16f8:	db 0b       	sbc	r29, r27
    16fa:	0f b6       	in	r0, 0x3f	; 63
    16fc:	f8 94       	cli
    16fe:	de bf       	out	0x3e, r29	; 62
    1700:	0f be       	out	0x3f, r0	; 63
    1702:	cd bf       	out	0x3d, r28	; 61
    1704:	09 94       	ijmp

00001706 <__epilogue_restores__>:
    1706:	2a 88       	ldd	r2, Y+18	; 0x12
    1708:	39 88       	ldd	r3, Y+17	; 0x11
    170a:	48 88       	ldd	r4, Y+16	; 0x10
    170c:	5f 84       	ldd	r5, Y+15	; 0x0f
    170e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1710:	7d 84       	ldd	r7, Y+13	; 0x0d
    1712:	8c 84       	ldd	r8, Y+12	; 0x0c
    1714:	9b 84       	ldd	r9, Y+11	; 0x0b
    1716:	aa 84       	ldd	r10, Y+10	; 0x0a
    1718:	b9 84       	ldd	r11, Y+9	; 0x09
    171a:	c8 84       	ldd	r12, Y+8	; 0x08
    171c:	df 80       	ldd	r13, Y+7	; 0x07
    171e:	ee 80       	ldd	r14, Y+6	; 0x06
    1720:	fd 80       	ldd	r15, Y+5	; 0x05
    1722:	0c 81       	ldd	r16, Y+4	; 0x04
    1724:	1b 81       	ldd	r17, Y+3	; 0x03
    1726:	aa 81       	ldd	r26, Y+2	; 0x02
    1728:	b9 81       	ldd	r27, Y+1	; 0x01
    172a:	ce 0f       	add	r28, r30
    172c:	d1 1d       	adc	r29, r1
    172e:	0f b6       	in	r0, 0x3f	; 63
    1730:	f8 94       	cli
    1732:	de bf       	out	0x3e, r29	; 62
    1734:	0f be       	out	0x3f, r0	; 63
    1736:	cd bf       	out	0x3d, r28	; 61
    1738:	ed 01       	movw	r28, r26
    173a:	08 95       	ret

0000173c <malloc>:
    173c:	0f 93       	push	r16
    173e:	1f 93       	push	r17
    1740:	cf 93       	push	r28
    1742:	df 93       	push	r29
    1744:	82 30       	cpi	r24, 0x02	; 2
    1746:	91 05       	cpc	r25, r1
    1748:	10 f4       	brcc	.+4      	; 0x174e <malloc+0x12>
    174a:	82 e0       	ldi	r24, 0x02	; 2
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	e0 91 7d 01 	lds	r30, 0x017D	; 0x80017d <__flp>
    1752:	f0 91 7e 01 	lds	r31, 0x017E	; 0x80017e <__flp+0x1>
    1756:	20 e0       	ldi	r18, 0x00	; 0
    1758:	30 e0       	ldi	r19, 0x00	; 0
    175a:	a0 e0       	ldi	r26, 0x00	; 0
    175c:	b0 e0       	ldi	r27, 0x00	; 0
    175e:	30 97       	sbiw	r30, 0x00	; 0
    1760:	19 f1       	breq	.+70     	; 0x17a8 <malloc+0x6c>
    1762:	40 81       	ld	r20, Z
    1764:	51 81       	ldd	r21, Z+1	; 0x01
    1766:	02 81       	ldd	r16, Z+2	; 0x02
    1768:	13 81       	ldd	r17, Z+3	; 0x03
    176a:	48 17       	cp	r20, r24
    176c:	59 07       	cpc	r21, r25
    176e:	c8 f0       	brcs	.+50     	; 0x17a2 <malloc+0x66>
    1770:	84 17       	cp	r24, r20
    1772:	95 07       	cpc	r25, r21
    1774:	69 f4       	brne	.+26     	; 0x1790 <malloc+0x54>
    1776:	10 97       	sbiw	r26, 0x00	; 0
    1778:	31 f0       	breq	.+12     	; 0x1786 <malloc+0x4a>
    177a:	12 96       	adiw	r26, 0x02	; 2
    177c:	0c 93       	st	X, r16
    177e:	12 97       	sbiw	r26, 0x02	; 2
    1780:	13 96       	adiw	r26, 0x03	; 3
    1782:	1c 93       	st	X, r17
    1784:	27 c0       	rjmp	.+78     	; 0x17d4 <malloc+0x98>
    1786:	00 93 7d 01 	sts	0x017D, r16	; 0x80017d <__flp>
    178a:	10 93 7e 01 	sts	0x017E, r17	; 0x80017e <__flp+0x1>
    178e:	22 c0       	rjmp	.+68     	; 0x17d4 <malloc+0x98>
    1790:	21 15       	cp	r18, r1
    1792:	31 05       	cpc	r19, r1
    1794:	19 f0       	breq	.+6      	; 0x179c <malloc+0x60>
    1796:	42 17       	cp	r20, r18
    1798:	53 07       	cpc	r21, r19
    179a:	18 f4       	brcc	.+6      	; 0x17a2 <malloc+0x66>
    179c:	9a 01       	movw	r18, r20
    179e:	bd 01       	movw	r22, r26
    17a0:	ef 01       	movw	r28, r30
    17a2:	df 01       	movw	r26, r30
    17a4:	f8 01       	movw	r30, r16
    17a6:	db cf       	rjmp	.-74     	; 0x175e <malloc+0x22>
    17a8:	21 15       	cp	r18, r1
    17aa:	31 05       	cpc	r19, r1
    17ac:	f9 f0       	breq	.+62     	; 0x17ec <malloc+0xb0>
    17ae:	28 1b       	sub	r18, r24
    17b0:	39 0b       	sbc	r19, r25
    17b2:	24 30       	cpi	r18, 0x04	; 4
    17b4:	31 05       	cpc	r19, r1
    17b6:	80 f4       	brcc	.+32     	; 0x17d8 <malloc+0x9c>
    17b8:	8a 81       	ldd	r24, Y+2	; 0x02
    17ba:	9b 81       	ldd	r25, Y+3	; 0x03
    17bc:	61 15       	cp	r22, r1
    17be:	71 05       	cpc	r23, r1
    17c0:	21 f0       	breq	.+8      	; 0x17ca <malloc+0x8e>
    17c2:	fb 01       	movw	r30, r22
    17c4:	93 83       	std	Z+3, r25	; 0x03
    17c6:	82 83       	std	Z+2, r24	; 0x02
    17c8:	04 c0       	rjmp	.+8      	; 0x17d2 <malloc+0x96>
    17ca:	90 93 7e 01 	sts	0x017E, r25	; 0x80017e <__flp+0x1>
    17ce:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <__flp>
    17d2:	fe 01       	movw	r30, r28
    17d4:	32 96       	adiw	r30, 0x02	; 2
    17d6:	44 c0       	rjmp	.+136    	; 0x1860 <malloc+0x124>
    17d8:	fe 01       	movw	r30, r28
    17da:	e2 0f       	add	r30, r18
    17dc:	f3 1f       	adc	r31, r19
    17de:	81 93       	st	Z+, r24
    17e0:	91 93       	st	Z+, r25
    17e2:	22 50       	subi	r18, 0x02	; 2
    17e4:	31 09       	sbc	r19, r1
    17e6:	39 83       	std	Y+1, r19	; 0x01
    17e8:	28 83       	st	Y, r18
    17ea:	3a c0       	rjmp	.+116    	; 0x1860 <malloc+0x124>
    17ec:	20 91 7b 01 	lds	r18, 0x017B	; 0x80017b <__brkval>
    17f0:	30 91 7c 01 	lds	r19, 0x017C	; 0x80017c <__brkval+0x1>
    17f4:	23 2b       	or	r18, r19
    17f6:	41 f4       	brne	.+16     	; 0x1808 <malloc+0xcc>
    17f8:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_start>
    17fc:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_start+0x1>
    1800:	30 93 7c 01 	sts	0x017C, r19	; 0x80017c <__brkval+0x1>
    1804:	20 93 7b 01 	sts	0x017B, r18	; 0x80017b <__brkval>
    1808:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_end>
    180c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_end+0x1>
    1810:	21 15       	cp	r18, r1
    1812:	31 05       	cpc	r19, r1
    1814:	41 f4       	brne	.+16     	; 0x1826 <malloc+0xea>
    1816:	2d b7       	in	r18, 0x3d	; 61
    1818:	3e b7       	in	r19, 0x3e	; 62
    181a:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <__malloc_margin>
    181e:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <__malloc_margin+0x1>
    1822:	24 1b       	sub	r18, r20
    1824:	35 0b       	sbc	r19, r21
    1826:	e0 91 7b 01 	lds	r30, 0x017B	; 0x80017b <__brkval>
    182a:	f0 91 7c 01 	lds	r31, 0x017C	; 0x80017c <__brkval+0x1>
    182e:	e2 17       	cp	r30, r18
    1830:	f3 07       	cpc	r31, r19
    1832:	a0 f4       	brcc	.+40     	; 0x185c <malloc+0x120>
    1834:	2e 1b       	sub	r18, r30
    1836:	3f 0b       	sbc	r19, r31
    1838:	28 17       	cp	r18, r24
    183a:	39 07       	cpc	r19, r25
    183c:	78 f0       	brcs	.+30     	; 0x185c <malloc+0x120>
    183e:	ac 01       	movw	r20, r24
    1840:	4e 5f       	subi	r20, 0xFE	; 254
    1842:	5f 4f       	sbci	r21, 0xFF	; 255
    1844:	24 17       	cp	r18, r20
    1846:	35 07       	cpc	r19, r21
    1848:	48 f0       	brcs	.+18     	; 0x185c <malloc+0x120>
    184a:	4e 0f       	add	r20, r30
    184c:	5f 1f       	adc	r21, r31
    184e:	50 93 7c 01 	sts	0x017C, r21	; 0x80017c <__brkval+0x1>
    1852:	40 93 7b 01 	sts	0x017B, r20	; 0x80017b <__brkval>
    1856:	81 93       	st	Z+, r24
    1858:	91 93       	st	Z+, r25
    185a:	02 c0       	rjmp	.+4      	; 0x1860 <malloc+0x124>
    185c:	e0 e0       	ldi	r30, 0x00	; 0
    185e:	f0 e0       	ldi	r31, 0x00	; 0
    1860:	cf 01       	movw	r24, r30
    1862:	df 91       	pop	r29
    1864:	cf 91       	pop	r28
    1866:	1f 91       	pop	r17
    1868:	0f 91       	pop	r16
    186a:	08 95       	ret

0000186c <free>:
    186c:	cf 93       	push	r28
    186e:	df 93       	push	r29
    1870:	00 97       	sbiw	r24, 0x00	; 0
    1872:	09 f4       	brne	.+2      	; 0x1876 <free+0xa>
    1874:	81 c0       	rjmp	.+258    	; 0x1978 <free+0x10c>
    1876:	fc 01       	movw	r30, r24
    1878:	32 97       	sbiw	r30, 0x02	; 2
    187a:	13 82       	std	Z+3, r1	; 0x03
    187c:	12 82       	std	Z+2, r1	; 0x02
    187e:	a0 91 7d 01 	lds	r26, 0x017D	; 0x80017d <__flp>
    1882:	b0 91 7e 01 	lds	r27, 0x017E	; 0x80017e <__flp+0x1>
    1886:	10 97       	sbiw	r26, 0x00	; 0
    1888:	81 f4       	brne	.+32     	; 0x18aa <free+0x3e>
    188a:	20 81       	ld	r18, Z
    188c:	31 81       	ldd	r19, Z+1	; 0x01
    188e:	82 0f       	add	r24, r18
    1890:	93 1f       	adc	r25, r19
    1892:	20 91 7b 01 	lds	r18, 0x017B	; 0x80017b <__brkval>
    1896:	30 91 7c 01 	lds	r19, 0x017C	; 0x80017c <__brkval+0x1>
    189a:	28 17       	cp	r18, r24
    189c:	39 07       	cpc	r19, r25
    189e:	51 f5       	brne	.+84     	; 0x18f4 <free+0x88>
    18a0:	f0 93 7c 01 	sts	0x017C, r31	; 0x80017c <__brkval+0x1>
    18a4:	e0 93 7b 01 	sts	0x017B, r30	; 0x80017b <__brkval>
    18a8:	67 c0       	rjmp	.+206    	; 0x1978 <free+0x10c>
    18aa:	ed 01       	movw	r28, r26
    18ac:	20 e0       	ldi	r18, 0x00	; 0
    18ae:	30 e0       	ldi	r19, 0x00	; 0
    18b0:	ce 17       	cp	r28, r30
    18b2:	df 07       	cpc	r29, r31
    18b4:	40 f4       	brcc	.+16     	; 0x18c6 <free+0x5a>
    18b6:	4a 81       	ldd	r20, Y+2	; 0x02
    18b8:	5b 81       	ldd	r21, Y+3	; 0x03
    18ba:	9e 01       	movw	r18, r28
    18bc:	41 15       	cp	r20, r1
    18be:	51 05       	cpc	r21, r1
    18c0:	f1 f0       	breq	.+60     	; 0x18fe <free+0x92>
    18c2:	ea 01       	movw	r28, r20
    18c4:	f5 cf       	rjmp	.-22     	; 0x18b0 <free+0x44>
    18c6:	d3 83       	std	Z+3, r29	; 0x03
    18c8:	c2 83       	std	Z+2, r28	; 0x02
    18ca:	40 81       	ld	r20, Z
    18cc:	51 81       	ldd	r21, Z+1	; 0x01
    18ce:	84 0f       	add	r24, r20
    18d0:	95 1f       	adc	r25, r21
    18d2:	c8 17       	cp	r28, r24
    18d4:	d9 07       	cpc	r29, r25
    18d6:	59 f4       	brne	.+22     	; 0x18ee <free+0x82>
    18d8:	88 81       	ld	r24, Y
    18da:	99 81       	ldd	r25, Y+1	; 0x01
    18dc:	84 0f       	add	r24, r20
    18de:	95 1f       	adc	r25, r21
    18e0:	02 96       	adiw	r24, 0x02	; 2
    18e2:	91 83       	std	Z+1, r25	; 0x01
    18e4:	80 83       	st	Z, r24
    18e6:	8a 81       	ldd	r24, Y+2	; 0x02
    18e8:	9b 81       	ldd	r25, Y+3	; 0x03
    18ea:	93 83       	std	Z+3, r25	; 0x03
    18ec:	82 83       	std	Z+2, r24	; 0x02
    18ee:	21 15       	cp	r18, r1
    18f0:	31 05       	cpc	r19, r1
    18f2:	29 f4       	brne	.+10     	; 0x18fe <free+0x92>
    18f4:	f0 93 7e 01 	sts	0x017E, r31	; 0x80017e <__flp+0x1>
    18f8:	e0 93 7d 01 	sts	0x017D, r30	; 0x80017d <__flp>
    18fc:	3d c0       	rjmp	.+122    	; 0x1978 <free+0x10c>
    18fe:	e9 01       	movw	r28, r18
    1900:	fb 83       	std	Y+3, r31	; 0x03
    1902:	ea 83       	std	Y+2, r30	; 0x02
    1904:	49 91       	ld	r20, Y+
    1906:	59 91       	ld	r21, Y+
    1908:	c4 0f       	add	r28, r20
    190a:	d5 1f       	adc	r29, r21
    190c:	ec 17       	cp	r30, r28
    190e:	fd 07       	cpc	r31, r29
    1910:	61 f4       	brne	.+24     	; 0x192a <free+0xbe>
    1912:	80 81       	ld	r24, Z
    1914:	91 81       	ldd	r25, Z+1	; 0x01
    1916:	84 0f       	add	r24, r20
    1918:	95 1f       	adc	r25, r21
    191a:	02 96       	adiw	r24, 0x02	; 2
    191c:	e9 01       	movw	r28, r18
    191e:	99 83       	std	Y+1, r25	; 0x01
    1920:	88 83       	st	Y, r24
    1922:	82 81       	ldd	r24, Z+2	; 0x02
    1924:	93 81       	ldd	r25, Z+3	; 0x03
    1926:	9b 83       	std	Y+3, r25	; 0x03
    1928:	8a 83       	std	Y+2, r24	; 0x02
    192a:	e0 e0       	ldi	r30, 0x00	; 0
    192c:	f0 e0       	ldi	r31, 0x00	; 0
    192e:	12 96       	adiw	r26, 0x02	; 2
    1930:	8d 91       	ld	r24, X+
    1932:	9c 91       	ld	r25, X
    1934:	13 97       	sbiw	r26, 0x03	; 3
    1936:	00 97       	sbiw	r24, 0x00	; 0
    1938:	19 f0       	breq	.+6      	; 0x1940 <free+0xd4>
    193a:	fd 01       	movw	r30, r26
    193c:	dc 01       	movw	r26, r24
    193e:	f7 cf       	rjmp	.-18     	; 0x192e <free+0xc2>
    1940:	8d 91       	ld	r24, X+
    1942:	9c 91       	ld	r25, X
    1944:	11 97       	sbiw	r26, 0x01	; 1
    1946:	9d 01       	movw	r18, r26
    1948:	2e 5f       	subi	r18, 0xFE	; 254
    194a:	3f 4f       	sbci	r19, 0xFF	; 255
    194c:	82 0f       	add	r24, r18
    194e:	93 1f       	adc	r25, r19
    1950:	20 91 7b 01 	lds	r18, 0x017B	; 0x80017b <__brkval>
    1954:	30 91 7c 01 	lds	r19, 0x017C	; 0x80017c <__brkval+0x1>
    1958:	28 17       	cp	r18, r24
    195a:	39 07       	cpc	r19, r25
    195c:	69 f4       	brne	.+26     	; 0x1978 <free+0x10c>
    195e:	30 97       	sbiw	r30, 0x00	; 0
    1960:	29 f4       	brne	.+10     	; 0x196c <free+0x100>
    1962:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <__flp+0x1>
    1966:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <__flp>
    196a:	02 c0       	rjmp	.+4      	; 0x1970 <free+0x104>
    196c:	13 82       	std	Z+3, r1	; 0x03
    196e:	12 82       	std	Z+2, r1	; 0x02
    1970:	b0 93 7c 01 	sts	0x017C, r27	; 0x80017c <__brkval+0x1>
    1974:	a0 93 7b 01 	sts	0x017B, r26	; 0x80017b <__brkval>
    1978:	df 91       	pop	r29
    197a:	cf 91       	pop	r28
    197c:	08 95       	ret

0000197e <strncat>:
    197e:	fb 01       	movw	r30, r22
    1980:	dc 01       	movw	r26, r24
    1982:	0d 90       	ld	r0, X+
    1984:	00 20       	and	r0, r0
    1986:	e9 f7       	brne	.-6      	; 0x1982 <strncat+0x4>
    1988:	11 97       	sbiw	r26, 0x01	; 1
    198a:	41 50       	subi	r20, 0x01	; 1
    198c:	50 40       	sbci	r21, 0x00	; 0
    198e:	28 f0       	brcs	.+10     	; 0x199a <strncat+0x1c>
    1990:	01 90       	ld	r0, Z+
    1992:	00 20       	and	r0, r0
    1994:	0d 92       	st	X+, r0
    1996:	c9 f7       	brne	.-14     	; 0x198a <strncat+0xc>
    1998:	08 95       	ret
    199a:	1c 92       	st	X, r1
    199c:	08 95       	ret

0000199e <__do_global_dtors>:
    199e:	10 e0       	ldi	r17, 0x00	; 0
    19a0:	cd e3       	ldi	r28, 0x3D	; 61
    19a2:	d0 e0       	ldi	r29, 0x00	; 0
    19a4:	04 c0       	rjmp	.+8      	; 0x19ae <__do_global_dtors+0x10>
    19a6:	fe 01       	movw	r30, r28
    19a8:	0e 94 3f 0b 	call	0x167e	; 0x167e <__tablejump2__>
    19ac:	21 96       	adiw	r28, 0x01	; 1
    19ae:	ce 33       	cpi	r28, 0x3E	; 62
    19b0:	d1 07       	cpc	r29, r17
    19b2:	c9 f7       	brne	.-14     	; 0x19a6 <__do_global_dtors+0x8>
    19b4:	f8 94       	cli

000019b6 <__stop_program>:
    19b6:	ff cf       	rjmp	.-2      	; 0x19b6 <__stop_program>
