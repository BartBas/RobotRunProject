
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00002018  000020ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002018  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006f  0080013a  0080013a  000020e6  2**0
                  ALLOC
  3 .stab         000059c4  00000000  00000000  000020e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000084be  00000000  00000000  00007aac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  0000ff6a  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000ffac  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000108  00000000  00000000  0000ffec  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00001a2e  00000000  00000000  000100f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000c0f  00000000  00000000  00011b22  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00001223  00000000  00000000  00012731  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000002bc  00000000  00000000  00013954  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000788  00000000  00000000  00013c10  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0000091a  00000000  00000000  00014398  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000000e0  00000000  00000000  00014cb2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__dtors_end>
       4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
       8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
       c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      24:	0c 94 46 08 	jmp	0x108c	; 0x108c <__vector_9>
      28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	0a 09       	sbc	r16, r10

0000006a <__dtors_end>:
      6a:	11 24       	eor	r1, r1
      6c:	1f be       	out	0x3f, r1	; 63
      6e:	cf ef       	ldi	r28, 0xFF	; 255
      70:	d8 e0       	ldi	r29, 0x08	; 8
      72:	de bf       	out	0x3e, r29	; 62
      74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e0       	ldi	r26, 0x00	; 0
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	e8 e1       	ldi	r30, 0x18	; 24
      7e:	f0 e2       	ldi	r31, 0x20	; 32
      80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
      82:	05 90       	lpm	r0, Z+
      84:	0d 92       	st	X+, r0
      86:	aa 33       	cpi	r26, 0x3A	; 58
      88:	b1 07       	cpc	r27, r17
      8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
      8c:	21 e0       	ldi	r18, 0x01	; 1
      8e:	aa e3       	ldi	r26, 0x3A	; 58
      90:	b1 e0       	ldi	r27, 0x01	; 1
      92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
      94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
      96:	a9 3a       	cpi	r26, 0xA9	; 169
      98:	b2 07       	cpc	r27, r18
      9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>
      9c:	0e 94 b5 00 	call	0x16a	; 0x16a <main>
      a0:	0c 94 ff 0f 	jmp	0x1ffe	; 0x1ffe <__do_global_dtors>

000000a4 <__bad_interrupt>:
      a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <batteryPercentage>:
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
      a8:	0e 94 ba 05 	call	0xb74	; 0xb74 <read_battery_millivolts_3pi>

int batteryPercentage()//Should this function be in main or in display.c or something else?
{
	
	int milliVolts = read_battery_millivolts();
	int batteryPercent = milliVolts/50;
      ac:	62 e3       	ldi	r22, 0x32	; 50
      ae:	70 e0       	ldi	r23, 0x00	; 0
      b0:	0e 94 2a 0e 	call	0x1c54	; 0x1c54 <__divmodhi4>
      b4:	cb 01       	movw	r24, r22
	return batteryPercent;
}
      b6:	08 95       	ret

000000b8 <updateDisplay>:

void updateDisplay(int orderPercent, int batteryPercent, robotStates currentState)
{
      b8:	ef 92       	push	r14
      ba:	ff 92       	push	r15
      bc:	0f 93       	push	r16
      be:	1f 93       	push	r17
      c0:	cf 93       	push	r28
      c2:	7c 01       	movw	r14, r24
      c4:	8b 01       	movw	r16, r22
      c6:	c4 2f       	mov	r28, r20
	clear();
      c8:	0e 94 c3 06 	call	0xd86	; 0xd86 <clear>
	lcd_goto_xy(0,0);
      cc:	60 e0       	ldi	r22, 0x00	; 0
      ce:	80 e0       	ldi	r24, 0x00	; 0
      d0:	0e 94 4a 07 	call	0xe94	; 0xe94 <lcd_goto_xy>
	print("Task:");
      d4:	83 e2       	ldi	r24, 0x23	; 35
      d6:	91 e0       	ldi	r25, 0x01	; 1
      d8:	0e 94 d2 06 	call	0xda4	; 0xda4 <print>
	print_long(orderPercent);
      dc:	b7 01       	movw	r22, r14
      de:	ff 0c       	add	r15, r15
      e0:	88 0b       	sbc	r24, r24
      e2:	99 0b       	sbc	r25, r25
      e4:	0e 94 27 07 	call	0xe4e	; 0xe4e <print_long>
	print("%");
      e8:	89 e2       	ldi	r24, 0x29	; 41
      ea:	91 e0       	ldi	r25, 0x01	; 1
      ec:	0e 94 d2 06 	call	0xda4	; 0xda4 <print>
	
	lcd_goto_xy(0,1);
      f0:	61 e0       	ldi	r22, 0x01	; 1
      f2:	80 e0       	ldi	r24, 0x00	; 0
      f4:	0e 94 4a 07 	call	0xe94	; 0xe94 <lcd_goto_xy>
	print("Bat:");
      f8:	8b e2       	ldi	r24, 0x2B	; 43
      fa:	91 e0       	ldi	r25, 0x01	; 1
      fc:	0e 94 d2 06 	call	0xda4	; 0xda4 <print>
	print_long(batteryPercent);
     100:	b8 01       	movw	r22, r16
     102:	11 0f       	add	r17, r17
     104:	88 0b       	sbc	r24, r24
     106:	99 0b       	sbc	r25, r25
     108:	0e 94 27 07 	call	0xe4e	; 0xe4e <print_long>
	print("%");
     10c:	89 e2       	ldi	r24, 0x29	; 41
     10e:	91 e0       	ldi	r25, 0x01	; 1
     110:	0e 94 d2 06 	call	0xda4	; 0xda4 <print>
	switch(currentState)
     114:	c2 30       	cpi	r28, 0x02	; 2
     116:	a9 f0       	breq	.+42     	; 0x142 <updateDisplay+0x8a>
     118:	28 f4       	brcc	.+10     	; 0x124 <updateDisplay+0x6c>
     11a:	cc 23       	and	r28, r28
     11c:	41 f0       	breq	.+16     	; 0x12e <updateDisplay+0x76>
     11e:	c1 30       	cpi	r28, 0x01	; 1
     120:	59 f0       	breq	.+22     	; 0x138 <updateDisplay+0x80>
     122:	1d c0       	rjmp	.+58     	; 0x15e <updateDisplay+0xa6>
     124:	c3 30       	cpi	r28, 0x03	; 3
     126:	91 f0       	breq	.+36     	; 0x14c <updateDisplay+0x94>
     128:	c4 30       	cpi	r28, 0x04	; 4
     12a:	a9 f0       	breq	.+42     	; 0x156 <updateDisplay+0x9e>
     12c:	18 c0       	rjmp	.+48     	; 0x15e <updateDisplay+0xa6>
	{
		case manualControl:
		print("M");//M for Manual
     12e:	80 e3       	ldi	r24, 0x30	; 48
     130:	91 e0       	ldi	r25, 0x01	; 1
     132:	0e 94 d2 06 	call	0xda4	; 0xda4 <print>
		break;
     136:	13 c0       	rjmp	.+38     	; 0x15e <updateDisplay+0xa6>
		case mazeSolver:
		print("P");//P for Parcours
     138:	82 e3       	ldi	r24, 0x32	; 50
     13a:	91 e0       	ldi	r25, 0x01	; 1
     13c:	0e 94 d2 06 	call	0xda4	; 0xda4 <print>
		break;
     140:	0e c0       	rjmp	.+28     	; 0x15e <updateDisplay+0xa6>
		case logicsBot:
		print("O");//O for Order
     142:	84 e3       	ldi	r24, 0x34	; 52
     144:	91 e0       	ldi	r25, 0x01	; 1
     146:	0e 94 d2 06 	call	0xda4	; 0xda4 <print>
		break;
     14a:	09 c0       	rjmp	.+18     	; 0x15e <updateDisplay+0xa6>
		case chargeMode:
		print("C");//C for Charge
     14c:	86 e3       	ldi	r24, 0x36	; 54
     14e:	91 e0       	ldi	r25, 0x01	; 1
     150:	0e 94 d2 06 	call	0xda4	; 0xda4 <print>
		break;
     154:	04 c0       	rjmp	.+8      	; 0x15e <updateDisplay+0xa6>
		case homingMode:
		print("H");//H for Homing
     156:	88 e3       	ldi	r24, 0x38	; 56
     158:	91 e0       	ldi	r25, 0x01	; 1
     15a:	0e 94 d2 06 	call	0xda4	; 0xda4 <print>
		break;
	}
}
     15e:	cf 91       	pop	r28
     160:	1f 91       	pop	r17
     162:	0f 91       	pop	r16
     164:	ff 90       	pop	r15
     166:	ef 90       	pop	r14
     168:	08 95       	ret

0000016a <main>:
     16a:	0e 94 c3 06 	call	0xd86	; 0xd86 <clear>
     16e:	80 ed       	ldi	r24, 0xD0	; 208
     170:	97 e0       	ldi	r25, 0x07	; 7
     172:	0e 94 06 09 	call	0x120c	; 0x120c <pololu_3pi_init>
     176:	0e 94 c2 00 	call	0x184	; 0x184 <initialize>
     17a:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <warehouse>
     17e:	80 e0       	ldi	r24, 0x00	; 0
     180:	90 e0       	ldi	r25, 0x00	; 0
     182:	08 95       	ret

00000184 <initialize>:
		print_character(c);
	}
}

void initialize()
{
     184:	cf 93       	push	r28
     186:	df 93       	push	r29
	unsigned int counter; // used as a simple timer
	
	pololu_3pi_init(2000);
     188:	80 ed       	ldi	r24, 0xD0	; 208
     18a:	97 e0       	ldi	r25, 0x07	; 7
     18c:	0e 94 06 09 	call	0x120c	; 0x120c <pololu_3pi_init>
	
	while(!button_is_pressed(BUTTON_B)){}	
     190:	80 e1       	ldi	r24, 0x10	; 16
     192:	0e 94 43 08 	call	0x1086	; 0x1086 <button_is_pressed>
     196:	88 23       	and	r24, r24
     198:	d9 f3       	breq	.-10     	; 0x190 <initialize+0xc>
	wait_for_button_release(BUTTON_B);
     19a:	80 e1       	ldi	r24, 0x10	; 16
     19c:	0e 94 2f 08 	call	0x105e	; 0x105e <wait_for_button_release>
	delay_ms(1000);
     1a0:	88 ee       	ldi	r24, 0xE8	; 232
     1a2:	93 e0       	ldi	r25, 0x03	; 3
     1a4:	0e 94 8e 08 	call	0x111c	; 0x111c <delay_ms>

	for(counter=0;counter<80;counter++)
     1a8:	c0 e0       	ldi	r28, 0x00	; 0
     1aa:	d0 e0       	ldi	r29, 0x00	; 0
     1ac:	19 c0       	rjmp	.+50     	; 0x1e0 <initialize+0x5c>
	{
		if(counter < 20 || counter >= 60)
     1ae:	ce 01       	movw	r24, r28
     1b0:	44 97       	sbiw	r24, 0x14	; 20
     1b2:	88 97       	sbiw	r24, 0x28	; 40
     1b4:	38 f0       	brcs	.+14     	; 0x1c4 <initialize+0x40>
		set_motors(40,-40);
     1b6:	68 ed       	ldi	r22, 0xD8	; 216
     1b8:	7f ef       	ldi	r23, 0xFF	; 255
     1ba:	88 e2       	ldi	r24, 0x28	; 40
     1bc:	90 e0       	ldi	r25, 0x00	; 0
     1be:	0e 94 00 08 	call	0x1000	; 0x1000 <set_motors>
     1c2:	06 c0       	rjmp	.+12     	; 0x1d0 <initialize+0x4c>
		else
		set_motors(-40,40);
     1c4:	68 e2       	ldi	r22, 0x28	; 40
     1c6:	70 e0       	ldi	r23, 0x00	; 0
     1c8:	88 ed       	ldi	r24, 0xD8	; 216
     1ca:	9f ef       	ldi	r25, 0xFF	; 255
     1cc:	0e 94 00 08 	call	0x1000	; 0x1000 <set_motors>
		calibrate_line_sensors(IR_EMITTERS_ON);
     1d0:	81 e0       	ldi	r24, 0x01	; 1
     1d2:	0e 94 ca 08 	call	0x1194	; 0x1194 <calibrate_line_sensors>
		
		delay_ms(20);
     1d6:	84 e1       	ldi	r24, 0x14	; 20
     1d8:	90 e0       	ldi	r25, 0x00	; 0
     1da:	0e 94 8e 08 	call	0x111c	; 0x111c <delay_ms>
	
	while(!button_is_pressed(BUTTON_B)){}	
	wait_for_button_release(BUTTON_B);
	delay_ms(1000);

	for(counter=0;counter<80;counter++)
     1de:	21 96       	adiw	r28, 0x01	; 1
     1e0:	c0 35       	cpi	r28, 0x50	; 80
     1e2:	d1 05       	cpc	r29, r1
     1e4:	20 f3       	brcs	.-56     	; 0x1ae <initialize+0x2a>
		set_motors(-40,40);
		calibrate_line_sensors(IR_EMITTERS_ON);
		
		delay_ms(20);
	}
	set_motors(0,0);
     1e6:	60 e0       	ldi	r22, 0x00	; 0
     1e8:	70 e0       	ldi	r23, 0x00	; 0
     1ea:	80 e0       	ldi	r24, 0x00	; 0
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	0e 94 00 08 	call	0x1000	; 0x1000 <set_motors>
	
	while(!button_is_pressed(BUTTON_B)){}
     1f2:	80 e1       	ldi	r24, 0x10	; 16
     1f4:	0e 94 43 08 	call	0x1086	; 0x1086 <button_is_pressed>
     1f8:	88 23       	and	r24, r24
     1fa:	d9 f3       	breq	.-10     	; 0x1f2 <initialize+0x6e>
	wait_for_button_release(BUTTON_B);
     1fc:	80 e1       	ldi	r24, 0x10	; 16
     1fe:	0e 94 2f 08 	call	0x105e	; 0x105e <wait_for_button_release>
	
	clear();
     202:	0e 94 c3 06 	call	0xd86	; 0xd86 <clear>
}
     206:	df 91       	pop	r29
     208:	cf 91       	pop	r28
     20a:	08 95       	ret

0000020c <inch>:

void inch(){
	set_motors(50,50);
     20c:	62 e3       	ldi	r22, 0x32	; 50
     20e:	70 e0       	ldi	r23, 0x00	; 0
     210:	82 e3       	ldi	r24, 0x32	; 50
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	0e 94 00 08 	call	0x1000	; 0x1000 <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     218:	88 ec       	ldi	r24, 0xC8	; 200
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	0e 94 8e 08 	call	0x111c	; 0x111c <delay_ms>
	delay(200);
	set_motors(0,0);
     220:	60 e0       	ldi	r22, 0x00	; 0
     222:	70 e0       	ldi	r23, 0x00	; 0
     224:	80 e0       	ldi	r24, 0x00	; 0
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	0e 94 00 08 	call	0x1000	; 0x1000 <set_motors>
     22c:	08 95       	ret

0000022e <motorControl>:
		
	}
}


void motorControl(char x){
     22e:	cf 93       	push	r28
     230:	c8 2f       	mov	r28, r24
	read_line(sensors,IR_EMITTERS_ON);
     232:	61 e0       	ldi	r22, 0x01	; 1
     234:	8b e9       	ldi	r24, 0x9B	; 155
     236:	91 e0       	ldi	r25, 0x01	; 1
     238:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <read_line>
	
	if(x == 'N')
     23c:	ce 34       	cpi	r28, 0x4E	; 78
     23e:	39 f4       	brne	.+14     	; 0x24e <motorControl+0x20>
	set_motors(0,0);
     240:	60 e0       	ldi	r22, 0x00	; 0
     242:	70 e0       	ldi	r23, 0x00	; 0
     244:	80 e0       	ldi	r24, 0x00	; 0
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	0e 94 00 08 	call	0x1000	; 0x1000 <set_motors>
     24c:	bb c0       	rjmp	.+374    	; 0x3c4 <motorControl+0x196>
	
	
	else if(x == 'L'){										//turn left
     24e:	cc 34       	cpi	r28, 0x4C	; 76
     250:	09 f5       	brne	.+66     	; 0x294 <motorControl+0x66>
		set_motors(-50,50);
     252:	62 e3       	ldi	r22, 0x32	; 50
     254:	70 e0       	ldi	r23, 0x00	; 0
     256:	8e ec       	ldi	r24, 0xCE	; 206
     258:	9f ef       	ldi	r25, 0xFF	; 255
     25a:	0e 94 00 08 	call	0x1000	; 0x1000 <set_motors>
		while (sensors[2] >=500){
     25e:	05 c0       	rjmp	.+10     	; 0x26a <motorControl+0x3c>
			read_line(sensors,IR_EMITTERS_ON);
     260:	61 e0       	ldi	r22, 0x01	; 1
     262:	8b e9       	ldi	r24, 0x9B	; 155
     264:	91 e0       	ldi	r25, 0x01	; 1
     266:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <read_line>
	set_motors(0,0);
	
	
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
     26a:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     26e:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     272:	84 3f       	cpi	r24, 0xF4	; 244
     274:	91 40       	sbci	r25, 0x01	; 1
     276:	a0 f7       	brcc	.-24     	; 0x260 <motorControl+0x32>
     278:	05 c0       	rjmp	.+10     	; 0x284 <motorControl+0x56>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     27a:	61 e0       	ldi	r22, 0x01	; 1
     27c:	8b e9       	ldi	r24, 0x9B	; 155
     27e:	91 e0       	ldi	r25, 0x01	; 1
     280:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <read_line>
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     284:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     288:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     28c:	85 3f       	cpi	r24, 0xF5	; 245
     28e:	91 40       	sbci	r25, 0x01	; 1
     290:	a0 f3       	brcs	.-24     	; 0x27a <motorControl+0x4c>
     292:	98 c0       	rjmp	.+304    	; 0x3c4 <motorControl+0x196>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'R'){									//turn right
     294:	c2 35       	cpi	r28, 0x52	; 82
     296:	09 f5       	brne	.+66     	; 0x2da <motorControl+0xac>
		set_motors(50,-50);
     298:	6e ec       	ldi	r22, 0xCE	; 206
     29a:	7f ef       	ldi	r23, 0xFF	; 255
     29c:	82 e3       	ldi	r24, 0x32	; 50
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	0e 94 00 08 	call	0x1000	; 0x1000 <set_motors>
		while (sensors[2] >=500){
     2a4:	05 c0       	rjmp	.+10     	; 0x2b0 <motorControl+0x82>
			read_line(sensors,IR_EMITTERS_ON);
     2a6:	61 e0       	ldi	r22, 0x01	; 1
     2a8:	8b e9       	ldi	r24, 0x9B	; 155
     2aa:	91 e0       	ldi	r25, 0x01	; 1
     2ac:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <read_line>
		}
	}
	
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
     2b0:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     2b4:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     2b8:	84 3f       	cpi	r24, 0xF4	; 244
     2ba:	91 40       	sbci	r25, 0x01	; 1
     2bc:	a0 f7       	brcc	.-24     	; 0x2a6 <motorControl+0x78>
     2be:	05 c0       	rjmp	.+10     	; 0x2ca <motorControl+0x9c>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     2c0:	61 e0       	ldi	r22, 0x01	; 1
     2c2:	8b e9       	ldi	r24, 0x9B	; 155
     2c4:	91 e0       	ldi	r25, 0x01	; 1
     2c6:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <read_line>
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     2ca:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     2ce:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     2d2:	85 3f       	cpi	r24, 0xF5	; 245
     2d4:	91 40       	sbci	r25, 0x01	; 1
     2d6:	a0 f3       	brcs	.-24     	; 0x2c0 <motorControl+0x92>
     2d8:	75 c0       	rjmp	.+234    	; 0x3c4 <motorControl+0x196>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'S'){									//drive straight and corrects the adjusment of the robot if it aint straight
     2da:	c3 35       	cpi	r28, 0x53	; 83
     2dc:	d9 f5       	brne	.+118    	; 0x354 <motorControl+0x126>
		set_motors(50,50);
     2de:	62 e3       	ldi	r22, 0x32	; 50
     2e0:	70 e0       	ldi	r23, 0x00	; 0
     2e2:	82 e3       	ldi	r24, 0x32	; 50
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	0e 94 00 08 	call	0x1000	; 0x1000 <set_motors>
		if(sensors[4] || sensors[0] <= 400){
     2ea:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <sensors+0x8>
     2ee:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <sensors+0x9>
     2f2:	00 97       	sbiw	r24, 0x00	; 0
     2f4:	41 f4       	brne	.+16     	; 0x306 <motorControl+0xd8>
     2f6:	20 91 9b 01 	lds	r18, 0x019B	; 0x80019b <sensors>
     2fa:	30 91 9c 01 	lds	r19, 0x019C	; 0x80019c <sensors+0x1>
     2fe:	21 39       	cpi	r18, 0x91	; 145
     300:	31 40       	sbci	r19, 0x01	; 1
     302:	08 f0       	brcs	.+2      	; 0x306 <motorControl+0xd8>
     304:	5f c0       	rjmp	.+190    	; 0x3c4 <motorControl+0x196>
		if (sensors[3] >=400  && sensors[4] <=400 )
     306:	20 91 a1 01 	lds	r18, 0x01A1	; 0x8001a1 <sensors+0x6>
     30a:	30 91 a2 01 	lds	r19, 0x01A2	; 0x8001a2 <sensors+0x7>
     30e:	20 39       	cpi	r18, 0x90	; 144
     310:	31 40       	sbci	r19, 0x01	; 1
     312:	48 f0       	brcs	.+18     	; 0x326 <motorControl+0xf8>
     314:	81 39       	cpi	r24, 0x91	; 145
     316:	91 40       	sbci	r25, 0x01	; 1
     318:	30 f4       	brcc	.+12     	; 0x326 <motorControl+0xf8>
		set_motors(100,40);
     31a:	68 e2       	ldi	r22, 0x28	; 40
     31c:	70 e0       	ldi	r23, 0x00	; 0
     31e:	84 e6       	ldi	r24, 0x64	; 100
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	0e 94 00 08 	call	0x1000	; 0x1000 <set_motors>
		if (sensors[1] >=400 && sensors[0] <=400  )
     326:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     32a:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     32e:	80 39       	cpi	r24, 0x90	; 144
     330:	91 40       	sbci	r25, 0x01	; 1
     332:	08 f4       	brcc	.+2      	; 0x336 <motorControl+0x108>
     334:	47 c0       	rjmp	.+142    	; 0x3c4 <motorControl+0x196>
     336:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <sensors>
     33a:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <sensors+0x1>
     33e:	81 39       	cpi	r24, 0x91	; 145
     340:	91 40       	sbci	r25, 0x01	; 1
     342:	08 f0       	brcs	.+2      	; 0x346 <motorControl+0x118>
     344:	3f c0       	rjmp	.+126    	; 0x3c4 <motorControl+0x196>
		set_motors(40,100);
     346:	64 e6       	ldi	r22, 0x64	; 100
     348:	70 e0       	ldi	r23, 0x00	; 0
     34a:	88 e2       	ldi	r24, 0x28	; 40
     34c:	90 e0       	ldi	r25, 0x00	; 0
     34e:	0e 94 00 08 	call	0x1000	; 0x1000 <set_motors>
     352:	38 c0       	rjmp	.+112    	; 0x3c4 <motorControl+0x196>
		}
	}
	
	else if(x == 'B'){									// reverse
     354:	c2 34       	cpi	r28, 0x42	; 66
     356:	09 f5       	brne	.+66     	; 0x39a <motorControl+0x16c>
		set_motors(-50,-50);
     358:	6e ec       	ldi	r22, 0xCE	; 206
     35a:	7f ef       	ldi	r23, 0xFF	; 255
     35c:	8e ec       	ldi	r24, 0xCE	; 206
     35e:	9f ef       	ldi	r25, 0xFF	; 255
     360:	0e 94 00 08 	call	0x1000	; 0x1000 <set_motors>
		if (sensors[3] >=400)
     364:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <sensors+0x6>
     368:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <sensors+0x7>
     36c:	80 39       	cpi	r24, 0x90	; 144
     36e:	91 40       	sbci	r25, 0x01	; 1
     370:	30 f0       	brcs	.+12     	; 0x37e <motorControl+0x150>
		set_motors(-50,-55);
     372:	69 ec       	ldi	r22, 0xC9	; 201
     374:	7f ef       	ldi	r23, 0xFF	; 255
     376:	8e ec       	ldi	r24, 0xCE	; 206
     378:	9f ef       	ldi	r25, 0xFF	; 255
     37a:	0e 94 00 08 	call	0x1000	; 0x1000 <set_motors>
		if (sensors[1] >=400)
     37e:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     382:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     386:	80 39       	cpi	r24, 0x90	; 144
     388:	91 40       	sbci	r25, 0x01	; 1
     38a:	e0 f0       	brcs	.+56     	; 0x3c4 <motorControl+0x196>
		set_motors(-55,-50);
     38c:	6e ec       	ldi	r22, 0xCE	; 206
     38e:	7f ef       	ldi	r23, 0xFF	; 255
     390:	89 ec       	ldi	r24, 0xC9	; 201
     392:	9f ef       	ldi	r25, 0xFF	; 255
     394:	0e 94 00 08 	call	0x1000	; 0x1000 <set_motors>
     398:	15 c0       	rjmp	.+42     	; 0x3c4 <motorControl+0x196>
	}
	else if(x == 'T'){									// Turn around
     39a:	c4 35       	cpi	r28, 0x54	; 84
     39c:	99 f4       	brne	.+38     	; 0x3c4 <motorControl+0x196>
		set_motors(-75,75);
     39e:	6b e4       	ldi	r22, 0x4B	; 75
     3a0:	70 e0       	ldi	r23, 0x00	; 0
     3a2:	85 eb       	ldi	r24, 0xB5	; 181
     3a4:	9f ef       	ldi	r25, 0xFF	; 255
     3a6:	0e 94 00 08 	call	0x1000	; 0x1000 <set_motors>
		while (sensors[2] >=500){
     3aa:	05 c0       	rjmp	.+10     	; 0x3b6 <motorControl+0x188>
			read_line(sensors,IR_EMITTERS_ON);
     3ac:	61 e0       	ldi	r22, 0x01	; 1
     3ae:	8b e9       	ldi	r24, 0x9B	; 155
     3b0:	91 e0       	ldi	r25, 0x01	; 1
     3b2:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <read_line>
		if (sensors[1] >=400)
		set_motors(-55,-50);
	}
	else if(x == 'T'){									// Turn around
		set_motors(-75,75);
		while (sensors[2] >=500){
     3b6:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     3ba:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     3be:	84 3f       	cpi	r24, 0xF4	; 244
     3c0:	91 40       	sbci	r25, 0x01	; 1
     3c2:	a0 f7       	brcc	.-24     	; 0x3ac <motorControl+0x17e>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
     3c4:	cf 91       	pop	r28
     3c6:	08 95       	ret

000003c8 <lineType>:
	set_motors(0,0);
}

char lineType(){																											// function that returns the type of junction it detects
	while(1){																												// >= 500 = black line		<=500 = white
		read_line(sensors,IR_EMITTERS_ON);
     3c8:	61 e0       	ldi	r22, 0x01	; 1
     3ca:	8b e9       	ldi	r24, 0x9B	; 155
     3cc:	91 e0       	ldi	r25, 0x01	; 1
     3ce:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <read_line>
		
		if (sensors[1] >=500 && sensors[3] >= 500){																			// this checks if its a X junction or a T junction
     3d2:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     3d6:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     3da:	84 3f       	cpi	r24, 0xF4	; 244
     3dc:	21 e0       	ldi	r18, 0x01	; 1
     3de:	92 07       	cpc	r25, r18
     3e0:	c0 f0       	brcs	.+48     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
     3e2:	20 91 a1 01 	lds	r18, 0x01A1	; 0x8001a1 <sensors+0x6>
     3e6:	30 91 a2 01 	lds	r19, 0x01A2	; 0x8001a2 <sensors+0x7>
     3ea:	24 3f       	cpi	r18, 0xF4	; 244
     3ec:	31 40       	sbci	r19, 0x01	; 1
     3ee:	88 f0       	brcs	.+34     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
			inch();
     3f0:	0e 94 06 01 	call	0x20c	; 0x20c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     3f4:	61 e0       	ldi	r22, 0x01	; 1
     3f6:	8b e9       	ldi	r24, 0x9B	; 155
     3f8:	91 e0       	ldi	r25, 0x01	; 1
     3fa:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <read_line>
			
			if (sensors[2] >=500)
     3fe:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     402:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     406:	84 3f       	cpi	r24, 0xF4	; 244
     408:	91 40       	sbci	r25, 0x01	; 1
     40a:	08 f4       	brcc	.+2      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
     40c:	90 c0       	rjmp	.+288    	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
			return X_junction;
     40e:	88 e0       	ldi	r24, 0x08	; 8
     410:	08 95       	ret
			else
			return T_junction;
		}
		
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
     412:	84 3f       	cpi	r24, 0xF4	; 244
     414:	21 e0       	ldi	r18, 0x01	; 1
     416:	92 07       	cpc	r25, r18
     418:	00 f1       	brcs	.+64     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
     41a:	20 91 9b 01 	lds	r18, 0x019B	; 0x80019b <sensors>
     41e:	30 91 9c 01 	lds	r19, 0x019C	; 0x80019c <sensors+0x1>
     422:	24 3f       	cpi	r18, 0xF4	; 244
     424:	31 40       	sbci	r19, 0x01	; 1
     426:	c8 f0       	brcs	.+50     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
			inch();
     428:	0e 94 06 01 	call	0x20c	; 0x20c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     42c:	61 e0       	ldi	r22, 0x01	; 1
     42e:	8b e9       	ldi	r24, 0x9B	; 155
     430:	91 e0       	ldi	r25, 0x01	; 1
     432:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <read_line>
			
			if (sensors[2] >= 500 || sensors[3] >=500)
     436:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     43a:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     43e:	84 3f       	cpi	r24, 0xF4	; 244
     440:	91 40       	sbci	r25, 0x01	; 1
     442:	08 f0       	brcs	.+2      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     444:	76 c0       	rjmp	.+236    	; 0x532 <__EEPROM_REGION_LENGTH__+0x132>
     446:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <sensors+0x6>
     44a:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <sensors+0x7>
     44e:	84 3f       	cpi	r24, 0xF4	; 244
     450:	91 40       	sbci	r25, 0x01	; 1
     452:	08 f4       	brcc	.+2      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
     454:	70 c0       	rjmp	.+224    	; 0x536 <__EEPROM_REGION_LENGTH__+0x136>
			return Straight_left_junction;
     456:	86 e0       	ldi	r24, 0x06	; 6
     458:	08 95       	ret
			else
			return Left_corner;
		}
		
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
     45a:	40 91 a1 01 	lds	r20, 0x01A1	; 0x8001a1 <sensors+0x6>
     45e:	50 91 a2 01 	lds	r21, 0x01A2	; 0x8001a2 <sensors+0x7>
     462:	44 3f       	cpi	r20, 0xF4	; 244
     464:	61 e0       	ldi	r22, 0x01	; 1
     466:	56 07       	cpc	r21, r22
     468:	00 f1       	brcs	.+64     	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
     46a:	20 91 a3 01 	lds	r18, 0x01A3	; 0x8001a3 <sensors+0x8>
     46e:	30 91 a4 01 	lds	r19, 0x01A4	; 0x8001a4 <sensors+0x9>
     472:	24 3f       	cpi	r18, 0xF4	; 244
     474:	31 40       	sbci	r19, 0x01	; 1
     476:	c8 f0       	brcs	.+50     	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
			inch();
     478:	0e 94 06 01 	call	0x20c	; 0x20c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     47c:	61 e0       	ldi	r22, 0x01	; 1
     47e:	8b e9       	ldi	r24, 0x9B	; 155
     480:	91 e0       	ldi	r25, 0x01	; 1
     482:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <read_line>
			
			if (sensors[2] >= 500 || sensors[1] >=500)
     486:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     48a:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     48e:	84 3f       	cpi	r24, 0xF4	; 244
     490:	91 40       	sbci	r25, 0x01	; 1
     492:	08 f0       	brcs	.+2      	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
     494:	52 c0       	rjmp	.+164    	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
     496:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     49a:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     49e:	84 3f       	cpi	r24, 0xF4	; 244
     4a0:	91 40       	sbci	r25, 0x01	; 1
     4a2:	08 f4       	brcc	.+2      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
     4a4:	4c c0       	rjmp	.+152    	; 0x53e <__EEPROM_REGION_LENGTH__+0x13e>
			return Straight_right_junction;
     4a6:	85 e0       	ldi	r24, 0x05	; 5
     4a8:	08 95       	ret
			else
			return Right_corner;
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
     4aa:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <sensors+0x4>
     4ae:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <sensors+0x5>
     4b2:	29 3c       	cpi	r18, 0xC9	; 201
     4b4:	31 05       	cpc	r19, r1
     4b6:	08 f4       	brcc	.+2      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
     4b8:	44 c0       	rjmp	.+136    	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
			return Line_end;
		}

		
		else if (sensors[2] >=500){
     4ba:	24 3f       	cpi	r18, 0xF4	; 244
     4bc:	61 e0       	ldi	r22, 0x01	; 1
     4be:	36 07       	cpc	r19, r22
     4c0:	08 f4       	brcc	.+2      	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
     4c2:	82 cf       	rjmp	.-252    	; 0x3c8 <lineType>
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
     4c4:	24 3f       	cpi	r18, 0xF4	; 244
     4c6:	61 e0       	ldi	r22, 0x01	; 1
     4c8:	36 07       	cpc	r19, r22
     4ca:	e8 f1       	brcs	.+122    	; 0x546 <__EEPROM_REGION_LENGTH__+0x146>
     4cc:	45 3f       	cpi	r20, 0xF5	; 245
     4ce:	51 40       	sbci	r21, 0x01	; 1
     4d0:	e0 f5       	brcc	.+120    	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
     4d2:	40 91 a3 01 	lds	r20, 0x01A3	; 0x8001a3 <sensors+0x8>
     4d6:	50 91 a4 01 	lds	r21, 0x01A4	; 0x8001a4 <sensors+0x9>
     4da:	44 3f       	cpi	r20, 0xF4	; 244
     4dc:	51 40       	sbci	r21, 0x01	; 1
     4de:	b8 f1       	brcs	.+110    	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
     4e0:	40 91 9b 01 	lds	r20, 0x019B	; 0x80019b <sensors>
     4e4:	50 91 9c 01 	lds	r21, 0x019C	; 0x80019c <sensors+0x1>
     4e8:	44 3f       	cpi	r20, 0xF4	; 244
     4ea:	51 40       	sbci	r21, 0x01	; 1
     4ec:	90 f1       	brcs	.+100    	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
     4ee:	85 3f       	cpi	r24, 0xF5	; 245
     4f0:	91 40       	sbci	r25, 0x01	; 1
     4f2:	88 f5       	brcc	.+98     	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
     4f4:	24 3f       	cpi	r18, 0xF4	; 244
     4f6:	31 40       	sbci	r19, 0x01	; 1
     4f8:	50 f4       	brcc	.+20     	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
			}
			else
			return Straight;																						// check if its straight without any corners
     4fa:	80 e0       	ldi	r24, 0x00	; 0
     4fc:	08 95       	ret

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
					read_line(sensors,IR_EMITTERS_ON);
     4fe:	61 e0       	ldi	r22, 0x01	; 1
     500:	8b e9       	ldi	r24, 0x9B	; 155
     502:	91 e0       	ldi	r25, 0x01	; 1
     504:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <read_line>
					motorControl('S');
     508:	83 e5       	ldi	r24, 0x53	; 83
     50a:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
		}

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
     50e:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <sensors+0x8>
     512:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <sensors+0x9>
     516:	80 39       	cpi	r24, 0x90	; 144
     518:	91 40       	sbci	r25, 0x01	; 1
     51a:	88 f7       	brcc	.-30     	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
     51c:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <sensors>
     520:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <sensors+0x1>
     524:	80 39       	cpi	r24, 0x90	; 144
     526:	91 40       	sbci	r25, 0x01	; 1
     528:	50 f7       	brcc	.-44     	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
					read_line(sensors,IR_EMITTERS_ON);
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
     52a:	82 e0       	ldi	r24, 0x02	; 2
     52c:	08 95       	ret
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >=500)
			return X_junction;
			else
			return T_junction;
     52e:	87 e0       	ldi	r24, 0x07	; 7
     530:	08 95       	ret
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[3] >=500)
			return Straight_left_junction;
     532:	86 e0       	ldi	r24, 0x06	; 6
     534:	08 95       	ret
			else
			return Left_corner;
     536:	83 e0       	ldi	r24, 0x03	; 3
     538:	08 95       	ret
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[1] >=500)
			return Straight_right_junction;
     53a:	85 e0       	ldi	r24, 0x05	; 5
     53c:	08 95       	ret
			else
			return Right_corner;
     53e:	84 e0       	ldi	r24, 0x04	; 4
     540:	08 95       	ret
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
			return Line_end;
     542:	81 e0       	ldi	r24, 0x01	; 1
     544:	08 95       	ret
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
			}
			else
			return Straight;																						// check if its straight without any corners
     546:	80 e0       	ldi	r24, 0x00	; 0
     548:	08 95       	ret
     54a:	80 e0       	ldi	r24, 0x00	; 0
     54c:	08 95       	ret
     54e:	80 e0       	ldi	r24, 0x00	; 0
     550:	08 95       	ret
     552:	80 e0       	ldi	r24, 0x00	; 0
     554:	08 95       	ret
     556:	80 e0       	ldi	r24, 0x00	; 0
			
		}
		
	}
}
     558:	08 95       	ret

0000055a <swap>:
     55a:	fc 01       	movw	r30, r24
     55c:	20 81       	ld	r18, Z
     55e:	31 81       	ldd	r19, Z+1	; 0x01
     560:	fb 01       	movw	r30, r22
     562:	40 81       	ld	r20, Z
     564:	51 81       	ldd	r21, Z+1	; 0x01
     566:	fc 01       	movw	r30, r24
     568:	51 83       	std	Z+1, r21	; 0x01
     56a:	40 83       	st	Z, r20
     56c:	fb 01       	movw	r30, r22
     56e:	31 83       	std	Z+1, r19	; 0x01
     570:	20 83       	st	Z, r18
     572:	08 95       	ret

00000574 <bubbleSort>:
     574:	6f 92       	push	r6
     576:	7f 92       	push	r7
     578:	8f 92       	push	r8
     57a:	9f 92       	push	r9
     57c:	af 92       	push	r10
     57e:	bf 92       	push	r11
     580:	cf 92       	push	r12
     582:	df 92       	push	r13
     584:	ef 92       	push	r14
     586:	ff 92       	push	r15
     588:	0f 93       	push	r16
     58a:	1f 93       	push	r17
     58c:	cf 93       	push	r28
     58e:	df 93       	push	r29
     590:	6c 01       	movw	r12, r24
     592:	3b 01       	movw	r6, r22
     594:	4a 01       	movw	r8, r20
     596:	a1 2c       	mov	r10, r1
     598:	b1 2c       	mov	r11, r1
     59a:	30 c0       	rjmp	.+96     	; 0x5fc <bubbleSort+0x88>
     59c:	7e 01       	movw	r14, r28
     59e:	ee 0c       	add	r14, r14
     5a0:	ff 1c       	adc	r15, r15
     5a2:	f6 01       	movw	r30, r12
     5a4:	ee 0d       	add	r30, r14
     5a6:	ff 1d       	adc	r31, r15
     5a8:	20 81       	ld	r18, Z
     5aa:	31 81       	ldd	r19, Z+1	; 0x01
     5ac:	8e 01       	movw	r16, r28
     5ae:	0f 5f       	subi	r16, 0xFF	; 255
     5b0:	1f 4f       	sbci	r17, 0xFF	; 255
     5b2:	00 0f       	add	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	d6 01       	movw	r26, r12
     5b8:	a0 0f       	add	r26, r16
     5ba:	b1 1f       	adc	r27, r17
     5bc:	8d 91       	ld	r24, X+
     5be:	9c 91       	ld	r25, X
     5c0:	11 97       	sbiw	r26, 0x01	; 1
     5c2:	82 17       	cp	r24, r18
     5c4:	93 07       	cpc	r25, r19
     5c6:	64 f4       	brge	.+24     	; 0x5e0 <bubbleSort+0x6c>
     5c8:	bd 01       	movw	r22, r26
     5ca:	cf 01       	movw	r24, r30
     5cc:	0e 94 ad 02 	call	0x55a	; 0x55a <swap>
     5d0:	b3 01       	movw	r22, r6
     5d2:	60 0f       	add	r22, r16
     5d4:	71 1f       	adc	r23, r17
     5d6:	c3 01       	movw	r24, r6
     5d8:	8e 0d       	add	r24, r14
     5da:	9f 1d       	adc	r25, r15
     5dc:	0e 94 ad 02 	call	0x55a	; 0x55a <swap>
     5e0:	21 96       	adiw	r28, 0x01	; 1
     5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <bubbleSort+0x74>
     5e4:	c0 e0       	ldi	r28, 0x00	; 0
     5e6:	d0 e0       	ldi	r29, 0x00	; 0
     5e8:	c4 01       	movw	r24, r8
     5ea:	8a 19       	sub	r24, r10
     5ec:	9b 09       	sbc	r25, r11
     5ee:	01 97       	sbiw	r24, 0x01	; 1
     5f0:	c8 17       	cp	r28, r24
     5f2:	d9 07       	cpc	r29, r25
     5f4:	9c f2       	brlt	.-90     	; 0x59c <bubbleSort+0x28>
     5f6:	8f ef       	ldi	r24, 0xFF	; 255
     5f8:	a8 1a       	sub	r10, r24
     5fa:	b8 0a       	sbc	r11, r24
     5fc:	c4 01       	movw	r24, r8
     5fe:	01 97       	sbiw	r24, 0x01	; 1
     600:	a8 16       	cp	r10, r24
     602:	b9 06       	cpc	r11, r25
     604:	7c f3       	brlt	.-34     	; 0x5e4 <bubbleSort+0x70>
     606:	df 91       	pop	r29
     608:	cf 91       	pop	r28
     60a:	1f 91       	pop	r17
     60c:	0f 91       	pop	r16
     60e:	ff 90       	pop	r15
     610:	ef 90       	pop	r14
     612:	df 90       	pop	r13
     614:	cf 90       	pop	r12
     616:	bf 90       	pop	r11
     618:	af 90       	pop	r10
     61a:	9f 90       	pop	r9
     61c:	8f 90       	pop	r8
     61e:	7f 90       	pop	r7
     620:	6f 90       	pop	r6
     622:	08 95       	ret

00000624 <drive>:
     624:	0f 93       	push	r16
     626:	1f 93       	push	r17
     628:	cf 93       	push	r28
     62a:	df 93       	push	r29
     62c:	83 e5       	ldi	r24, 0x53	; 83
     62e:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     632:	01 e0       	ldi	r16, 0x01	; 1
     634:	10 e0       	ldi	r17, 0x00	; 0
     636:	1b c0       	rjmp	.+54     	; 0x66e <drive+0x4a>
     638:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <lineType>
     63c:	ec 01       	movw	r28, r24
     63e:	0e 94 c3 06 	call	0xd86	; 0xd86 <clear>
     642:	ce 01       	movw	r24, r28
     644:	99 27       	eor	r25, r25
     646:	82 30       	cpi	r24, 0x02	; 2
     648:	91 05       	cpc	r25, r1
     64a:	39 f0       	breq	.+14     	; 0x65a <drive+0x36>
     64c:	1c f4       	brge	.+6      	; 0x654 <drive+0x30>
     64e:	89 2b       	or	r24, r25
     650:	41 f0       	breq	.+16     	; 0x662 <drive+0x3e>
     652:	0d c0       	rjmp	.+26     	; 0x66e <drive+0x4a>
     654:	09 97       	sbiw	r24, 0x09	; 9
     656:	4c f0       	brlt	.+18     	; 0x66a <drive+0x46>
     658:	0a c0       	rjmp	.+20     	; 0x66e <drive+0x4a>
     65a:	8e e4       	ldi	r24, 0x4E	; 78
     65c:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     660:	06 c0       	rjmp	.+12     	; 0x66e <drive+0x4a>
     662:	83 e5       	ldi	r24, 0x53	; 83
     664:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     668:	02 c0       	rjmp	.+4      	; 0x66e <drive+0x4a>
     66a:	00 e0       	ldi	r16, 0x00	; 0
     66c:	10 e0       	ldi	r17, 0x00	; 0
     66e:	01 15       	cp	r16, r1
     670:	11 05       	cpc	r17, r1
     672:	11 f7       	brne	.-60     	; 0x638 <drive+0x14>
     674:	df 91       	pop	r29
     676:	cf 91       	pop	r28
     678:	1f 91       	pop	r17
     67a:	0f 91       	pop	r16
     67c:	08 95       	ret

0000067e <waitForTurn>:
     67e:	cf 93       	push	r28
     680:	82 e3       	ldi	r24, 0x32	; 50
     682:	90 e0       	ldi	r25, 0x00	; 0
     684:	0e 94 8e 08 	call	0x111c	; 0x111c <delay_ms>
     688:	03 c0       	rjmp	.+6      	; 0x690 <waitForTurn+0x12>
     68a:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <lineType>
     68e:	c8 2f       	mov	r28, r24
     690:	c1 11       	cpse	r28, r1
     692:	fb cf       	rjmp	.-10     	; 0x68a <waitForTurn+0xc>
     694:	8e e4       	ldi	r24, 0x4E	; 78
     696:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     69a:	cf 91       	pop	r28
     69c:	08 95       	ret

0000069e <turnRobot>:
     69e:	ef 92       	push	r14
     6a0:	ff 92       	push	r15
     6a2:	0f 93       	push	r16
     6a4:	1f 93       	push	r17
     6a6:	cf 93       	push	r28
     6a8:	c8 2f       	mov	r28, r24
     6aa:	8b 01       	movw	r16, r22
     6ac:	ee 24       	eor	r14, r14
     6ae:	e3 94       	inc	r14
     6b0:	f1 2c       	mov	r15, r1
     6b2:	9a c0       	rjmp	.+308    	; 0x7e8 <turnRobot+0x14a>
     6b4:	f8 01       	movw	r30, r16
     6b6:	84 81       	ldd	r24, Z+4	; 0x04
     6b8:	8e 34       	cpi	r24, 0x4E	; 78
     6ba:	59 f0       	breq	.+22     	; 0x6d2 <turnRobot+0x34>
     6bc:	18 f4       	brcc	.+6      	; 0x6c4 <turnRobot+0x26>
     6be:	85 34       	cpi	r24, 0x45	; 69
     6c0:	51 f1       	breq	.+84     	; 0x716 <turnRobot+0x78>
     6c2:	8c c0       	rjmp	.+280    	; 0x7dc <turnRobot+0x13e>
     6c4:	83 35       	cpi	r24, 0x53	; 83
     6c6:	09 f4       	brne	.+2      	; 0x6ca <turnRobot+0x2c>
     6c8:	48 c0       	rjmp	.+144    	; 0x75a <turnRobot+0xbc>
     6ca:	87 35       	cpi	r24, 0x57	; 87
     6cc:	09 f4       	brne	.+2      	; 0x6d0 <turnRobot+0x32>
     6ce:	66 c0       	rjmp	.+204    	; 0x79c <turnRobot+0xfe>
     6d0:	85 c0       	rjmp	.+266    	; 0x7dc <turnRobot+0x13e>
     6d2:	c5 34       	cpi	r28, 0x45	; 69
     6d4:	49 f4       	brne	.+18     	; 0x6e8 <turnRobot+0x4a>
     6d6:	82 e5       	ldi	r24, 0x52	; 82
     6d8:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     6dc:	0e 94 3f 03 	call	0x67e	; 0x67e <waitForTurn>
     6e0:	85 e4       	ldi	r24, 0x45	; 69
     6e2:	f8 01       	movw	r30, r16
     6e4:	84 83       	std	Z+4, r24	; 0x04
     6e6:	7a c0       	rjmp	.+244    	; 0x7dc <turnRobot+0x13e>
     6e8:	c7 35       	cpi	r28, 0x57	; 87
     6ea:	49 f4       	brne	.+18     	; 0x6fe <turnRobot+0x60>
     6ec:	8c e4       	ldi	r24, 0x4C	; 76
     6ee:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     6f2:	0e 94 3f 03 	call	0x67e	; 0x67e <waitForTurn>
     6f6:	87 e5       	ldi	r24, 0x57	; 87
     6f8:	f8 01       	movw	r30, r16
     6fa:	84 83       	std	Z+4, r24	; 0x04
     6fc:	6f c0       	rjmp	.+222    	; 0x7dc <turnRobot+0x13e>
     6fe:	c3 35       	cpi	r28, 0x53	; 83
     700:	09 f0       	breq	.+2      	; 0x704 <turnRobot+0x66>
     702:	6c c0       	rjmp	.+216    	; 0x7dc <turnRobot+0x13e>
     704:	84 e5       	ldi	r24, 0x54	; 84
     706:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     70a:	0e 94 3f 03 	call	0x67e	; 0x67e <waitForTurn>
     70e:	83 e5       	ldi	r24, 0x53	; 83
     710:	f8 01       	movw	r30, r16
     712:	84 83       	std	Z+4, r24	; 0x04
     714:	63 c0       	rjmp	.+198    	; 0x7dc <turnRobot+0x13e>
     716:	c3 35       	cpi	r28, 0x53	; 83
     718:	49 f4       	brne	.+18     	; 0x72c <turnRobot+0x8e>
     71a:	82 e5       	ldi	r24, 0x52	; 82
     71c:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     720:	0e 94 3f 03 	call	0x67e	; 0x67e <waitForTurn>
     724:	83 e5       	ldi	r24, 0x53	; 83
     726:	f8 01       	movw	r30, r16
     728:	84 83       	std	Z+4, r24	; 0x04
     72a:	58 c0       	rjmp	.+176    	; 0x7dc <turnRobot+0x13e>
     72c:	c7 35       	cpi	r28, 0x57	; 87
     72e:	49 f4       	brne	.+18     	; 0x742 <turnRobot+0xa4>
     730:	8c e4       	ldi	r24, 0x4C	; 76
     732:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     736:	0e 94 3f 03 	call	0x67e	; 0x67e <waitForTurn>
     73a:	87 e5       	ldi	r24, 0x57	; 87
     73c:	f8 01       	movw	r30, r16
     73e:	84 83       	std	Z+4, r24	; 0x04
     740:	4d c0       	rjmp	.+154    	; 0x7dc <turnRobot+0x13e>
     742:	c3 35       	cpi	r28, 0x53	; 83
     744:	09 f0       	breq	.+2      	; 0x748 <turnRobot+0xaa>
     746:	4a c0       	rjmp	.+148    	; 0x7dc <turnRobot+0x13e>
     748:	84 e5       	ldi	r24, 0x54	; 84
     74a:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     74e:	0e 94 3f 03 	call	0x67e	; 0x67e <waitForTurn>
     752:	83 e5       	ldi	r24, 0x53	; 83
     754:	f8 01       	movw	r30, r16
     756:	84 83       	std	Z+4, r24	; 0x04
     758:	41 c0       	rjmp	.+130    	; 0x7dc <turnRobot+0x13e>
     75a:	c7 35       	cpi	r28, 0x57	; 87
     75c:	49 f4       	brne	.+18     	; 0x770 <turnRobot+0xd2>
     75e:	82 e5       	ldi	r24, 0x52	; 82
     760:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     764:	0e 94 3f 03 	call	0x67e	; 0x67e <waitForTurn>
     768:	87 e5       	ldi	r24, 0x57	; 87
     76a:	f8 01       	movw	r30, r16
     76c:	84 83       	std	Z+4, r24	; 0x04
     76e:	36 c0       	rjmp	.+108    	; 0x7dc <turnRobot+0x13e>
     770:	c5 34       	cpi	r28, 0x45	; 69
     772:	49 f4       	brne	.+18     	; 0x786 <turnRobot+0xe8>
     774:	8c e4       	ldi	r24, 0x4C	; 76
     776:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     77a:	0e 94 3f 03 	call	0x67e	; 0x67e <waitForTurn>
     77e:	85 e4       	ldi	r24, 0x45	; 69
     780:	f8 01       	movw	r30, r16
     782:	84 83       	std	Z+4, r24	; 0x04
     784:	2b c0       	rjmp	.+86     	; 0x7dc <turnRobot+0x13e>
     786:	ce 34       	cpi	r28, 0x4E	; 78
     788:	49 f5       	brne	.+82     	; 0x7dc <turnRobot+0x13e>
     78a:	84 e5       	ldi	r24, 0x54	; 84
     78c:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     790:	0e 94 3f 03 	call	0x67e	; 0x67e <waitForTurn>
     794:	8e e4       	ldi	r24, 0x4E	; 78
     796:	f8 01       	movw	r30, r16
     798:	84 83       	std	Z+4, r24	; 0x04
     79a:	20 c0       	rjmp	.+64     	; 0x7dc <turnRobot+0x13e>
     79c:	ce 34       	cpi	r28, 0x4E	; 78
     79e:	49 f4       	brne	.+18     	; 0x7b2 <turnRobot+0x114>
     7a0:	82 e5       	ldi	r24, 0x52	; 82
     7a2:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     7a6:	0e 94 3f 03 	call	0x67e	; 0x67e <waitForTurn>
     7aa:	8e e4       	ldi	r24, 0x4E	; 78
     7ac:	f8 01       	movw	r30, r16
     7ae:	84 83       	std	Z+4, r24	; 0x04
     7b0:	15 c0       	rjmp	.+42     	; 0x7dc <turnRobot+0x13e>
     7b2:	c3 35       	cpi	r28, 0x53	; 83
     7b4:	49 f4       	brne	.+18     	; 0x7c8 <turnRobot+0x12a>
     7b6:	8c e4       	ldi	r24, 0x4C	; 76
     7b8:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     7bc:	0e 94 3f 03 	call	0x67e	; 0x67e <waitForTurn>
     7c0:	83 e5       	ldi	r24, 0x53	; 83
     7c2:	f8 01       	movw	r30, r16
     7c4:	84 83       	std	Z+4, r24	; 0x04
     7c6:	0a c0       	rjmp	.+20     	; 0x7dc <turnRobot+0x13e>
     7c8:	c5 34       	cpi	r28, 0x45	; 69
     7ca:	41 f4       	brne	.+16     	; 0x7dc <turnRobot+0x13e>
     7cc:	84 e5       	ldi	r24, 0x54	; 84
     7ce:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     7d2:	0e 94 3f 03 	call	0x67e	; 0x67e <waitForTurn>
     7d6:	85 e4       	ldi	r24, 0x45	; 69
     7d8:	f8 01       	movw	r30, r16
     7da:	84 83       	std	Z+4, r24	; 0x04
     7dc:	f8 01       	movw	r30, r16
     7de:	84 81       	ldd	r24, Z+4	; 0x04
     7e0:	c8 13       	cpse	r28, r24
     7e2:	02 c0       	rjmp	.+4      	; 0x7e8 <turnRobot+0x14a>
     7e4:	e1 2c       	mov	r14, r1
     7e6:	f1 2c       	mov	r15, r1
     7e8:	f1 e0       	ldi	r31, 0x01	; 1
     7ea:	ef 16       	cp	r14, r31
     7ec:	f1 04       	cpc	r15, r1
     7ee:	09 f4       	brne	.+2      	; 0x7f2 <turnRobot+0x154>
     7f0:	61 cf       	rjmp	.-318    	; 0x6b4 <turnRobot+0x16>
     7f2:	cf 91       	pop	r28
     7f4:	1f 91       	pop	r17
     7f6:	0f 91       	pop	r16
     7f8:	ff 90       	pop	r15
     7fa:	ef 90       	pop	r14
     7fc:	08 95       	ret

000007fe <moveX>:
     7fe:	0f 93       	push	r16
     800:	1f 93       	push	r17
     802:	cf 93       	push	r28
     804:	df 93       	push	r29
     806:	fb 01       	movw	r30, r22
     808:	20 81       	ld	r18, Z
     80a:	31 81       	ldd	r19, Z+1	; 0x01
     80c:	28 17       	cp	r18, r24
     80e:	39 07       	cpc	r19, r25
     810:	f9 f0       	breq	.+62     	; 0x850 <__DATA_REGION_LENGTH__+0x50>
     812:	eb 01       	movw	r28, r22
     814:	8c 01       	movw	r16, r24
     816:	28 17       	cp	r18, r24
     818:	39 07       	cpc	r19, r25
     81a:	44 f4       	brge	.+16     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
     81c:	87 e5       	ldi	r24, 0x57	; 87
     81e:	0e 94 4f 03 	call	0x69e	; 0x69e <turnRobot>
     822:	88 81       	ld	r24, Y
     824:	99 81       	ldd	r25, Y+1	; 0x01
     826:	08 1b       	sub	r16, r24
     828:	19 0b       	sbc	r17, r25
     82a:	09 c0       	rjmp	.+18     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     82c:	85 e4       	ldi	r24, 0x45	; 69
     82e:	0e 94 4f 03 	call	0x69e	; 0x69e <turnRobot>
     832:	28 81       	ld	r18, Y
     834:	39 81       	ldd	r19, Y+1	; 0x01
     836:	c9 01       	movw	r24, r18
     838:	80 1b       	sub	r24, r16
     83a:	91 0b       	sbc	r25, r17
     83c:	8c 01       	movw	r16, r24
     83e:	c0 e0       	ldi	r28, 0x00	; 0
     840:	d0 e0       	ldi	r29, 0x00	; 0
     842:	03 c0       	rjmp	.+6      	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
     844:	0e 94 12 03 	call	0x624	; 0x624 <drive>
     848:	21 96       	adiw	r28, 0x01	; 1
     84a:	c0 17       	cp	r28, r16
     84c:	d1 07       	cpc	r29, r17
     84e:	d4 f3       	brlt	.-12     	; 0x844 <__DATA_REGION_LENGTH__+0x44>
     850:	df 91       	pop	r29
     852:	cf 91       	pop	r28
     854:	1f 91       	pop	r17
     856:	0f 91       	pop	r16
     858:	08 95       	ret

0000085a <moveY>:
     85a:	0f 93       	push	r16
     85c:	1f 93       	push	r17
     85e:	cf 93       	push	r28
     860:	df 93       	push	r29
     862:	fb 01       	movw	r30, r22
     864:	22 81       	ldd	r18, Z+2	; 0x02
     866:	33 81       	ldd	r19, Z+3	; 0x03
     868:	28 17       	cp	r18, r24
     86a:	39 07       	cpc	r19, r25
     86c:	f9 f0       	breq	.+62     	; 0x8ac <moveY+0x52>
     86e:	eb 01       	movw	r28, r22
     870:	8c 01       	movw	r16, r24
     872:	28 17       	cp	r18, r24
     874:	39 07       	cpc	r19, r25
     876:	44 f4       	brge	.+16     	; 0x888 <moveY+0x2e>
     878:	8e e4       	ldi	r24, 0x4E	; 78
     87a:	0e 94 4f 03 	call	0x69e	; 0x69e <turnRobot>
     87e:	8a 81       	ldd	r24, Y+2	; 0x02
     880:	9b 81       	ldd	r25, Y+3	; 0x03
     882:	08 1b       	sub	r16, r24
     884:	19 0b       	sbc	r17, r25
     886:	09 c0       	rjmp	.+18     	; 0x89a <moveY+0x40>
     888:	83 e5       	ldi	r24, 0x53	; 83
     88a:	0e 94 4f 03 	call	0x69e	; 0x69e <turnRobot>
     88e:	2a 81       	ldd	r18, Y+2	; 0x02
     890:	3b 81       	ldd	r19, Y+3	; 0x03
     892:	c9 01       	movw	r24, r18
     894:	80 1b       	sub	r24, r16
     896:	91 0b       	sbc	r25, r17
     898:	8c 01       	movw	r16, r24
     89a:	c0 e0       	ldi	r28, 0x00	; 0
     89c:	d0 e0       	ldi	r29, 0x00	; 0
     89e:	03 c0       	rjmp	.+6      	; 0x8a6 <moveY+0x4c>
     8a0:	0e 94 12 03 	call	0x624	; 0x624 <drive>
     8a4:	21 96       	adiw	r28, 0x01	; 1
     8a6:	c0 17       	cp	r28, r16
     8a8:	d1 07       	cpc	r29, r17
     8aa:	d4 f3       	brlt	.-12     	; 0x8a0 <moveY+0x46>
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	1f 91       	pop	r17
     8b2:	0f 91       	pop	r16
     8b4:	08 95       	ret

000008b6 <warehouse>:
     8b6:	ef 92       	push	r14
     8b8:	ff 92       	push	r15
     8ba:	0f 93       	push	r16
     8bc:	1f 93       	push	r17
     8be:	cf 93       	push	r28
     8c0:	df 93       	push	r29
     8c2:	cd b7       	in	r28, 0x3d	; 61
     8c4:	de b7       	in	r29, 0x3e	; 62
     8c6:	69 97       	sbiw	r28, 0x19	; 25
     8c8:	0f b6       	in	r0, 0x3f	; 63
     8ca:	f8 94       	cli
     8cc:	de bf       	out	0x3e, r29	; 62
     8ce:	0f be       	out	0x3f, r0	; 63
     8d0:	cd bf       	out	0x3d, r28	; 61
     8d2:	87 e5       	ldi	r24, 0x57	; 87
     8d4:	8d 83       	std	Y+5, r24	; 0x05
     8d6:	8f ef       	ldi	r24, 0xFF	; 255
     8d8:	9f ef       	ldi	r25, 0xFF	; 255
     8da:	9a 83       	std	Y+2, r25	; 0x02
     8dc:	89 83       	std	Y+1, r24	; 0x01
     8de:	1c 82       	std	Y+4, r1	; 0x04
     8e0:	1b 82       	std	Y+3, r1	; 0x03
     8e2:	8a e0       	ldi	r24, 0x0A	; 10
     8e4:	ea e0       	ldi	r30, 0x0A	; 10
     8e6:	f1 e0       	ldi	r31, 0x01	; 1
     8e8:	de 01       	movw	r26, r28
     8ea:	16 96       	adiw	r26, 0x06	; 6
     8ec:	01 90       	ld	r0, Z+
     8ee:	0d 92       	st	X+, r0
     8f0:	8a 95       	dec	r24
     8f2:	e1 f7       	brne	.-8      	; 0x8ec <warehouse+0x36>
     8f4:	8a e0       	ldi	r24, 0x0A	; 10
     8f6:	e4 e1       	ldi	r30, 0x14	; 20
     8f8:	f1 e0       	ldi	r31, 0x01	; 1
     8fa:	de 01       	movw	r26, r28
     8fc:	50 96       	adiw	r26, 0x10	; 16
     8fe:	01 90       	ld	r0, Z+
     900:	0d 92       	st	X+, r0
     902:	8a 95       	dec	r24
     904:	e1 f7       	brne	.-8      	; 0x8fe <warehouse+0x48>
     906:	45 e0       	ldi	r20, 0x05	; 5
     908:	50 e0       	ldi	r21, 0x00	; 0
     90a:	be 01       	movw	r22, r28
     90c:	60 5f       	subi	r22, 0xF0	; 240
     90e:	7f 4f       	sbci	r23, 0xFF	; 255
     910:	ce 01       	movw	r24, r28
     912:	06 96       	adiw	r24, 0x06	; 6
     914:	0e 94 ba 02 	call	0x574	; 0x574 <bubbleSort>
     918:	e1 2c       	mov	r14, r1
     91a:	f1 2c       	mov	r15, r1
     91c:	3b c0       	rjmp	.+118    	; 0x994 <__stack+0x95>
     91e:	87 01       	movw	r16, r14
     920:	00 0f       	add	r16, r16
     922:	11 1f       	adc	r17, r17
     924:	81 e0       	ldi	r24, 0x01	; 1
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	8c 0f       	add	r24, r28
     92a:	9d 1f       	adc	r25, r29
     92c:	08 0f       	add	r16, r24
     92e:	19 1f       	adc	r17, r25
     930:	bc 01       	movw	r22, r24
     932:	f8 01       	movw	r30, r16
     934:	85 81       	ldd	r24, Z+5	; 0x05
     936:	96 81       	ldd	r25, Z+6	; 0x06
     938:	0e 94 ff 03 	call	0x7fe	; 0x7fe <moveX>
     93c:	f8 01       	movw	r30, r16
     93e:	85 81       	ldd	r24, Z+5	; 0x05
     940:	96 81       	ldd	r25, Z+6	; 0x06
     942:	9a 83       	std	Y+2, r25	; 0x02
     944:	89 83       	std	Y+1, r24	; 0x01
     946:	be 01       	movw	r22, r28
     948:	6f 5f       	subi	r22, 0xFF	; 255
     94a:	7f 4f       	sbci	r23, 0xFF	; 255
     94c:	87 85       	ldd	r24, Z+15	; 0x0f
     94e:	90 89       	ldd	r25, Z+16	; 0x10
     950:	0e 94 2d 04 	call	0x85a	; 0x85a <moveY>
     954:	f8 01       	movw	r30, r16
     956:	87 85       	ldd	r24, Z+15	; 0x0f
     958:	90 89       	ldd	r25, Z+16	; 0x10
     95a:	9c 83       	std	Y+4, r25	; 0x04
     95c:	8b 83       	std	Y+3, r24	; 0x03
     95e:	88 ee       	ldi	r24, 0xE8	; 232
     960:	93 e0       	ldi	r25, 0x03	; 3
     962:	0e 94 8e 08 	call	0x111c	; 0x111c <delay_ms>
     966:	0e 94 54 00 	call	0xa8	; 0xa8 <batteryPercentage>
     96a:	9c 01       	movw	r18, r24
     96c:	c7 01       	movw	r24, r14
     96e:	65 e0       	ldi	r22, 0x05	; 5
     970:	70 e0       	ldi	r23, 0x00	; 0
     972:	0e 94 2a 0e 	call	0x1c54	; 0x1c54 <__divmodhi4>
     976:	cb 01       	movw	r24, r22
     978:	42 e0       	ldi	r20, 0x02	; 2
     97a:	b9 01       	movw	r22, r18
     97c:	24 e6       	ldi	r18, 0x64	; 100
     97e:	fc 01       	movw	r30, r24
     980:	2e 9f       	mul	r18, r30
     982:	c0 01       	movw	r24, r0
     984:	2f 9f       	mul	r18, r31
     986:	90 0d       	add	r25, r0
     988:	11 24       	eor	r1, r1
     98a:	0e 94 5c 00 	call	0xb8	; 0xb8 <updateDisplay>
     98e:	ff ef       	ldi	r31, 0xFF	; 255
     990:	ef 1a       	sub	r14, r31
     992:	ff 0a       	sbc	r15, r31
     994:	85 e0       	ldi	r24, 0x05	; 5
     996:	e8 16       	cp	r14, r24
     998:	f1 04       	cpc	r15, r1
     99a:	0c f2       	brlt	.-126    	; 0x91e <__stack+0x1f>
     99c:	be 01       	movw	r22, r28
     99e:	6f 5f       	subi	r22, 0xFF	; 255
     9a0:	7f 4f       	sbci	r23, 0xFF	; 255
     9a2:	80 e0       	ldi	r24, 0x00	; 0
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	0e 94 2d 04 	call	0x85a	; 0x85a <moveY>
     9aa:	be 01       	movw	r22, r28
     9ac:	6f 5f       	subi	r22, 0xFF	; 255
     9ae:	7f 4f       	sbci	r23, 0xFF	; 255
     9b0:	80 e0       	ldi	r24, 0x00	; 0
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	0e 94 ff 03 	call	0x7fe	; 0x7fe <moveX>
     9b8:	69 96       	adiw	r28, 0x19	; 25
     9ba:	0f b6       	in	r0, 0x3f	; 63
     9bc:	f8 94       	cli
     9be:	de bf       	out	0x3e, r29	; 62
     9c0:	0f be       	out	0x3f, r0	; 63
     9c2:	cd bf       	out	0x3d, r28	; 61
     9c4:	df 91       	pop	r29
     9c6:	cf 91       	pop	r28
     9c8:	1f 91       	pop	r17
     9ca:	0f 91       	pop	r16
     9cc:	ff 90       	pop	r15
     9ce:	ef 90       	pop	r14
     9d0:	08 95       	ret

000009d2 <_ZN15OrangutanAnalog7setModeEh.part.0>:
     9d2:	ec e7       	ldi	r30, 0x7C	; 124
     9d4:	f0 e0       	ldi	r31, 0x00	; 0
     9d6:	80 81       	ld	r24, Z
     9d8:	8f 7d       	andi	r24, 0xDF	; 223
     9da:	80 83       	st	Z, r24
     9dc:	08 95       	ret

000009de <_ZN15OrangutanAnalog7setModeEh>:
     9de:	81 11       	cpse	r24, r1
     9e0:	03 c0       	rjmp	.+6      	; 0x9e8 <_ZN15OrangutanAnalog7setModeEh+0xa>
     9e2:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <_ZN15OrangutanAnalog7setModeEh.part.0>
     9e6:	08 95       	ret
     9e8:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     9ec:	80 62       	ori	r24, 0x20	; 32
     9ee:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     9f2:	08 95       	ret

000009f4 <_ZN15OrangutanAnalog7getModeEv>:
     9f4:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     9f8:	85 fb       	bst	r24, 5
     9fa:	88 27       	eor	r24, r24
     9fc:	80 f9       	bld	r24, 0
     9fe:	08 95       	ret

00000a00 <_ZN15OrangutanAnalog16conversionResultEv>:
     a00:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <_ZN15OrangutanAnalog7getModeEv>
     a04:	88 23       	and	r24, r24
     a06:	21 f0       	breq	.+8      	; 0xa10 <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     a08:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	08 95       	ret
     a10:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     a14:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     a18:	08 95       	ret

00000a1a <_ZN15OrangutanAnalog15startConversionEhh>:
     a1a:	80 32       	cpi	r24, 0x20	; 32
     a1c:	a0 f4       	brcc	.+40     	; 0xa46 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
     a1e:	97 e8       	ldi	r25, 0x87	; 135
     a20:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     a24:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     a28:	66 23       	and	r22, r22
     a2a:	11 f0       	breq	.+4      	; 0xa30 <_ZN15OrangutanAnalog15startConversionEhh+0x16>
     a2c:	90 6c       	ori	r25, 0xC0	; 192
     a2e:	02 c0       	rjmp	.+4      	; 0xa34 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
     a30:	9f 77       	andi	r25, 0x7F	; 127
     a32:	90 64       	ori	r25, 0x40	; 64
     a34:	90 7e       	andi	r25, 0xE0	; 224
     a36:	98 2b       	or	r25, r24
     a38:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     a3c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     a40:	80 64       	ori	r24, 0x40	; 64
     a42:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     a46:	08 95       	ret

00000a48 <_ZN15OrangutanAnalog11readAverageEhj>:
     a48:	a0 e0       	ldi	r26, 0x00	; 0
     a4a:	b0 e0       	ldi	r27, 0x00	; 0
     a4c:	ea e2       	ldi	r30, 0x2A	; 42
     a4e:	f5 e0       	ldi	r31, 0x05	; 5
     a50:	0c 94 b1 0e 	jmp	0x1d62	; 0x1d62 <__prologue_saves__+0x14>
     a54:	eb 01       	movw	r28, r22
     a56:	60 e0       	ldi	r22, 0x00	; 0
     a58:	0e 94 0d 05 	call	0xa1a	; 0xa1a <_ZN15OrangutanAnalog15startConversionEhh>
     a5c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     a60:	86 fd       	sbrc	r24, 6
     a62:	fc cf       	rjmp	.-8      	; 0xa5c <_ZN15OrangutanAnalog11readAverageEhj+0x14>
     a64:	8e 01       	movw	r16, r28
     a66:	c1 2c       	mov	r12, r1
     a68:	d1 2c       	mov	r13, r1
     a6a:	76 01       	movw	r14, r12
     a6c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     a70:	80 64       	ori	r24, 0x40	; 64
     a72:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     a76:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     a7a:	86 fd       	sbrc	r24, 6
     a7c:	fc cf       	rjmp	.-8      	; 0xa76 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
     a7e:	0e 94 00 05 	call	0xa00	; 0xa00 <_ZN15OrangutanAnalog16conversionResultEv>
     a82:	c8 0e       	add	r12, r24
     a84:	d9 1e       	adc	r13, r25
     a86:	e1 1c       	adc	r14, r1
     a88:	f1 1c       	adc	r15, r1
     a8a:	01 50       	subi	r16, 0x01	; 1
     a8c:	11 09       	sbc	r17, r1
     a8e:	01 15       	cp	r16, r1
     a90:	11 05       	cpc	r17, r1
     a92:	61 f7       	brne	.-40     	; 0xa6c <_ZN15OrangutanAnalog11readAverageEhj+0x24>
     a94:	ce 01       	movw	r24, r28
     a96:	96 95       	lsr	r25
     a98:	87 95       	ror	r24
     a9a:	c0 34       	cpi	r28, 0x40	; 64
     a9c:	d1 05       	cpc	r29, r1
     a9e:	38 f4       	brcc	.+14     	; 0xaae <_ZN15OrangutanAnalog11readAverageEhj+0x66>
     aa0:	8c 0d       	add	r24, r12
     aa2:	9d 1d       	adc	r25, r13
     aa4:	be 01       	movw	r22, r28
     aa6:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <__udivmodhi4>
     aaa:	cb 01       	movw	r24, r22
     aac:	0e c0       	rjmp	.+28     	; 0xaca <_ZN15OrangutanAnalog11readAverageEhj+0x82>
     aae:	a7 01       	movw	r20, r14
     ab0:	96 01       	movw	r18, r12
     ab2:	28 0f       	add	r18, r24
     ab4:	39 1f       	adc	r19, r25
     ab6:	41 1d       	adc	r20, r1
     ab8:	51 1d       	adc	r21, r1
     aba:	ca 01       	movw	r24, r20
     abc:	b9 01       	movw	r22, r18
     abe:	9e 01       	movw	r18, r28
     ac0:	40 e0       	ldi	r20, 0x00	; 0
     ac2:	50 e0       	ldi	r21, 0x00	; 0
     ac4:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__udivmodsi4>
     ac8:	c9 01       	movw	r24, r18
     aca:	cd b7       	in	r28, 0x3d	; 61
     acc:	de b7       	in	r29, 0x3e	; 62
     ace:	e8 e0       	ldi	r30, 0x08	; 8
     ad0:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <__epilogue_restores__+0x14>

00000ad4 <_ZN15OrangutanAnalog12toMillivoltsEj>:
     ad4:	cf 92       	push	r12
     ad6:	df 92       	push	r13
     ad8:	ef 92       	push	r14
     ada:	ff 92       	push	r15
     adc:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     ae0:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     ae4:	9c 01       	movw	r18, r24
     ae6:	0e 94 85 0e 	call	0x1d0a	; 0x1d0a <__umulhisi3>
     aea:	6b 01       	movw	r12, r22
     aec:	7c 01       	movw	r14, r24
     aee:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <_ZN15OrangutanAnalog7getModeEv>
     af2:	88 23       	and	r24, r24
     af4:	59 f0       	breq	.+22     	; 0xb0c <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
     af6:	c7 01       	movw	r24, r14
     af8:	b6 01       	movw	r22, r12
     afa:	61 58       	subi	r22, 0x81	; 129
     afc:	7f 4f       	sbci	r23, 0xFF	; 255
     afe:	8f 4f       	sbci	r24, 0xFF	; 255
     b00:	9f 4f       	sbci	r25, 0xFF	; 255
     b02:	2f ef       	ldi	r18, 0xFF	; 255
     b04:	30 e0       	ldi	r19, 0x00	; 0
     b06:	40 e0       	ldi	r20, 0x00	; 0
     b08:	50 e0       	ldi	r21, 0x00	; 0
     b0a:	0a c0       	rjmp	.+20     	; 0xb20 <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
     b0c:	c7 01       	movw	r24, r14
     b0e:	b6 01       	movw	r22, r12
     b10:	61 50       	subi	r22, 0x01	; 1
     b12:	7e 4f       	sbci	r23, 0xFE	; 254
     b14:	8f 4f       	sbci	r24, 0xFF	; 255
     b16:	9f 4f       	sbci	r25, 0xFF	; 255
     b18:	2f ef       	ldi	r18, 0xFF	; 255
     b1a:	33 e0       	ldi	r19, 0x03	; 3
     b1c:	40 e0       	ldi	r20, 0x00	; 0
     b1e:	50 e0       	ldi	r21, 0x00	; 0
     b20:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__udivmodsi4>
     b24:	c9 01       	movw	r24, r18
     b26:	ff 90       	pop	r15
     b28:	ef 90       	pop	r14
     b2a:	df 90       	pop	r13
     b2c:	cf 90       	pop	r12
     b2e:	08 95       	ret

00000b30 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
     b30:	0e 94 24 05 	call	0xa48	; 0xa48 <_ZN15OrangutanAnalog11readAverageEhj>
     b34:	0e 94 6a 05 	call	0xad4	; 0xad4 <_ZN15OrangutanAnalog12toMillivoltsEj>
     b38:	08 95       	ret

00000b3a <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
     b3a:	1f 93       	push	r17
     b3c:	cf 93       	push	r28
     b3e:	df 93       	push	r29
     b40:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <_ZN15OrangutanAnalog7getModeEv>
     b44:	18 2f       	mov	r17, r24
     b46:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <_ZN15OrangutanAnalog7setModeEh.part.0>
     b4a:	6a e0       	ldi	r22, 0x0A	; 10
     b4c:	70 e0       	ldi	r23, 0x00	; 0
     b4e:	86 e0       	ldi	r24, 0x06	; 6
     b50:	0e 94 98 05 	call	0xb30	; 0xb30 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
     b54:	ec 01       	movw	r28, r24
     b56:	81 2f       	mov	r24, r17
     b58:	0e 94 ef 04 	call	0x9de	; 0x9de <_ZN15OrangutanAnalog7setModeEh>
     b5c:	ce 01       	movw	r24, r28
     b5e:	88 0f       	add	r24, r24
     b60:	99 1f       	adc	r25, r25
     b62:	8c 0f       	add	r24, r28
     b64:	9d 1f       	adc	r25, r29
     b66:	01 96       	adiw	r24, 0x01	; 1
     b68:	96 95       	lsr	r25
     b6a:	87 95       	ror	r24
     b6c:	df 91       	pop	r29
     b6e:	cf 91       	pop	r28
     b70:	1f 91       	pop	r17
     b72:	08 95       	ret

00000b74 <read_battery_millivolts_3pi>:
     b74:	0e 94 9d 05 	call	0xb3a	; 0xb3a <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
     b78:	08 95       	ret

00000b7a <delay_us.constprop.0>:
     b7a:	81 e0       	ldi	r24, 0x01	; 1
     b7c:	90 e0       	ldi	r25, 0x00	; 0
     b7e:	6f 93       	push	r22
     b80:	64 e0       	ldi	r22, 0x04	; 4
     b82:	6a 95       	dec	r22
     b84:	f1 f7       	brne	.-4      	; 0xb82 <delay_us.constprop.0+0x8>
     b86:	6f 91       	pop	r22
     b88:	01 97       	sbiw	r24, 0x01	; 1
     b8a:	c9 f7       	brne	.-14     	; 0xb7e <delay_us.constprop.0+0x4>
     b8c:	08 95       	ret

00000b8e <_ZN12OrangutanLCD8busyWaitEv>:
     b8e:	0f 93       	push	r16
     b90:	1f 93       	push	r17
     b92:	cf 93       	push	r28
     b94:	df 93       	push	r29
     b96:	1a b1       	in	r17, 0x0a	; 10
     b98:	57 98       	cbi	0x0a, 7	; 10
     b9a:	5a 98       	cbi	0x0b, 2	; 11
     b9c:	28 9a       	sbi	0x05, 0	; 5
     b9e:	c0 e0       	ldi	r28, 0x00	; 0
     ba0:	d0 e0       	ldi	r29, 0x00	; 0
     ba2:	0e 94 bd 05 	call	0xb7a	; 0xb7a <delay_us.constprop.0>
     ba6:	5c 9a       	sbi	0x0b, 4	; 11
     ba8:	0e 94 bd 05 	call	0xb7a	; 0xb7a <delay_us.constprop.0>
     bac:	09 b1       	in	r16, 0x09	; 9
     bae:	5c 98       	cbi	0x0b, 4	; 11
     bb0:	0e 94 bd 05 	call	0xb7a	; 0xb7a <delay_us.constprop.0>
     bb4:	5c 9a       	sbi	0x0b, 4	; 11
     bb6:	0e 94 bd 05 	call	0xb7a	; 0xb7a <delay_us.constprop.0>
     bba:	5c 98       	cbi	0x0b, 4	; 11
     bbc:	24 96       	adiw	r28, 0x04	; 4
     bbe:	07 ff       	sbrs	r16, 7
     bc0:	10 c0       	rjmp	.+32     	; 0xbe2 <_ZN12OrangutanLCD8busyWaitEv+0x54>
     bc2:	ae 01       	movw	r20, r28
     bc4:	60 e0       	ldi	r22, 0x00	; 0
     bc6:	70 e0       	ldi	r23, 0x00	; 0
     bc8:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
     bcc:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <__data_end+0x1>
     bd0:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <__data_end+0x2>
     bd4:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <__data_end+0x3>
     bd8:	48 17       	cp	r20, r24
     bda:	59 07       	cpc	r21, r25
     bdc:	6a 07       	cpc	r22, r26
     bde:	7b 07       	cpc	r23, r27
     be0:	00 f3       	brcs	.-64     	; 0xba2 <_ZN12OrangutanLCD8busyWaitEv+0x14>
     be2:	1a b9       	out	0x0a, r17	; 10
     be4:	df 91       	pop	r29
     be6:	cf 91       	pop	r28
     be8:	1f 91       	pop	r17
     bea:	0f 91       	pop	r16
     bec:	08 95       	ret

00000bee <_ZN12OrangutanLCD8sendDataEh>:
     bee:	95 b1       	in	r25, 0x05	; 5
     bf0:	28 2f       	mov	r18, r24
     bf2:	21 70       	andi	r18, 0x01	; 1
     bf4:	30 e0       	ldi	r19, 0x00	; 0
     bf6:	22 0f       	add	r18, r18
     bf8:	33 1f       	adc	r19, r19
     bfa:	48 2f       	mov	r20, r24
     bfc:	46 70       	andi	r20, 0x06	; 6
     bfe:	68 e0       	ldi	r22, 0x08	; 8
     c00:	46 9f       	mul	r20, r22
     c02:	a0 01       	movw	r20, r0
     c04:	11 24       	eor	r1, r1
     c06:	24 2b       	or	r18, r20
     c08:	9d 7c       	andi	r25, 0xCD	; 205
     c0a:	29 2b       	or	r18, r25
     c0c:	25 b9       	out	0x05, r18	; 5
     c0e:	9b b1       	in	r25, 0x0b	; 11
     c10:	88 70       	andi	r24, 0x08	; 8
     c12:	82 95       	swap	r24
     c14:	80 7f       	andi	r24, 0xF0	; 240
     c16:	9f 77       	andi	r25, 0x7F	; 127
     c18:	89 2b       	or	r24, r25
     c1a:	8b b9       	out	0x0b, r24	; 11
     c1c:	5c 9a       	sbi	0x0b, 4	; 11
     c1e:	0e 94 bd 05 	call	0xb7a	; 0xb7a <delay_us.constprop.0>
     c22:	5c 98       	cbi	0x0b, 4	; 11
     c24:	0e 94 bd 05 	call	0xb7a	; 0xb7a <delay_us.constprop.0>
     c28:	08 95       	ret

00000c2a <_ZN12OrangutanLCD4sendEhhh>:
     c2a:	a0 e0       	ldi	r26, 0x00	; 0
     c2c:	b0 e0       	ldi	r27, 0x00	; 0
     c2e:	eb e1       	ldi	r30, 0x1B	; 27
     c30:	f6 e0       	ldi	r31, 0x06	; 6
     c32:	0c 94 b2 0e 	jmp	0x1d64	; 0x1d64 <__prologue_saves__+0x16>
     c36:	c8 2f       	mov	r28, r24
     c38:	d6 2e       	mov	r13, r22
     c3a:	e4 2e       	mov	r14, r20
     c3c:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <_ZZN12OrangutanLCD4initEvE11initialized>
     c40:	81 11       	cpse	r24, r1
     c42:	05 c0       	rjmp	.+10     	; 0xc4e <_ZN12OrangutanLCD4sendEhhh+0x24>
     c44:	81 e0       	ldi	r24, 0x01	; 1
     c46:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <_ZZN12OrangutanLCD4initEvE11initialized>
     c4a:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <_ZN12OrangutanLCD5init2Ev>
     c4e:	0e 94 c7 05 	call	0xb8e	; 0xb8e <_ZN12OrangutanLCD8busyWaitEv>
     c52:	14 b1       	in	r17, 0x04	; 4
     c54:	d5 b1       	in	r29, 0x05	; 5
     c56:	fa b0       	in	r15, 0x0a	; 10
     c58:	0b b1       	in	r16, 0x0b	; 11
     c5a:	28 98       	cbi	0x05, 0	; 5
     c5c:	dd 20       	and	r13, r13
     c5e:	11 f0       	breq	.+4      	; 0xc64 <_ZN12OrangutanLCD4sendEhhh+0x3a>
     c60:	5a 9a       	sbi	0x0b, 2	; 11
     c62:	01 c0       	rjmp	.+2      	; 0xc66 <_ZN12OrangutanLCD4sendEhhh+0x3c>
     c64:	5a 98       	cbi	0x0b, 2	; 11
     c66:	94 b1       	in	r25, 0x04	; 4
     c68:	92 63       	ori	r25, 0x32	; 50
     c6a:	94 b9       	out	0x04, r25	; 4
     c6c:	57 9a       	sbi	0x0a, 7	; 10
     c6e:	81 e0       	ldi	r24, 0x01	; 1
     c70:	e8 16       	cp	r14, r24
     c72:	29 f0       	breq	.+10     	; 0xc7e <_ZN12OrangutanLCD4sendEhhh+0x54>
     c74:	8c 2f       	mov	r24, r28
     c76:	82 95       	swap	r24
     c78:	8f 70       	andi	r24, 0x0F	; 15
     c7a:	0e 94 f7 05 	call	0xbee	; 0xbee <_ZN12OrangutanLCD8sendDataEh>
     c7e:	8c 2f       	mov	r24, r28
     c80:	8f 70       	andi	r24, 0x0F	; 15
     c82:	0e 94 f7 05 	call	0xbee	; 0xbee <_ZN12OrangutanLCD8sendDataEh>
     c86:	fa b8       	out	0x0a, r15	; 10
     c88:	0b b9       	out	0x0b, r16	; 11
     c8a:	14 b9       	out	0x04, r17	; 4
     c8c:	d5 b9       	out	0x05, r29	; 5
     c8e:	cd b7       	in	r28, 0x3d	; 61
     c90:	de b7       	in	r29, 0x3e	; 62
     c92:	e7 e0       	ldi	r30, 0x07	; 7
     c94:	0c 94 ce 0e 	jmp	0x1d9c	; 0x1d9c <__epilogue_restores__+0x16>

00000c98 <_ZN12OrangutanLCD8send_cmdEh>:
     c98:	42 e0       	ldi	r20, 0x02	; 2
     c9a:	60 e0       	ldi	r22, 0x00	; 0
     c9c:	0e 94 15 06 	call	0xc2a	; 0xc2a <_ZN12OrangutanLCD4sendEhhh>
     ca0:	08 95       	ret

00000ca2 <_ZN12OrangutanLCD9send_dataEh>:
     ca2:	42 e0       	ldi	r20, 0x02	; 2
     ca4:	61 e0       	ldi	r22, 0x01	; 1
     ca6:	0e 94 15 06 	call	0xc2a	; 0xc2a <_ZN12OrangutanLCD4sendEhhh>
     caa:	08 95       	ret

00000cac <_ZN12OrangutanLCD13send_4bit_cmdEh>:
     cac:	41 e0       	ldi	r20, 0x01	; 1
     cae:	60 e0       	ldi	r22, 0x00	; 0
     cb0:	0e 94 15 06 	call	0xc2a	; 0xc2a <_ZN12OrangutanLCD4sendEhhh>
     cb4:	08 95       	ret

00000cb6 <_ZN12OrangutanLCD5init2Ev>:
     cb6:	80 e1       	ldi	r24, 0x10	; 16
     cb8:	97 e2       	ldi	r25, 0x27	; 39
     cba:	a0 e0       	ldi	r26, 0x00	; 0
     cbc:	b0 e0       	ldi	r27, 0x00	; 0
     cbe:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
     cc2:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <__data_end+0x1>
     cc6:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <__data_end+0x2>
     cca:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <__data_end+0x3>
     cce:	52 9a       	sbi	0x0a, 2	; 10
     cd0:	20 9a       	sbi	0x04, 0	; 4
     cd2:	54 9a       	sbi	0x0a, 4	; 10
     cd4:	8e e1       	ldi	r24, 0x1E	; 30
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	0e 94 8e 08 	call	0x111c	; 0x111c <delay_ms>
     cdc:	83 e0       	ldi	r24, 0x03	; 3
     cde:	0e 94 56 06 	call	0xcac	; 0xcac <_ZN12OrangutanLCD13send_4bit_cmdEh>
     ce2:	86 e0       	ldi	r24, 0x06	; 6
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	0e 94 8e 08 	call	0x111c	; 0x111c <delay_ms>
     cea:	83 e0       	ldi	r24, 0x03	; 3
     cec:	0e 94 56 06 	call	0xcac	; 0xcac <_ZN12OrangutanLCD13send_4bit_cmdEh>
     cf0:	82 e0       	ldi	r24, 0x02	; 2
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	0e 94 8e 08 	call	0x111c	; 0x111c <delay_ms>
     cf8:	83 e0       	ldi	r24, 0x03	; 3
     cfa:	0e 94 56 06 	call	0xcac	; 0xcac <_ZN12OrangutanLCD13send_4bit_cmdEh>
     cfe:	82 e0       	ldi	r24, 0x02	; 2
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	0e 94 8e 08 	call	0x111c	; 0x111c <delay_ms>
     d06:	82 e0       	ldi	r24, 0x02	; 2
     d08:	0e 94 56 06 	call	0xcac	; 0xcac <_ZN12OrangutanLCD13send_4bit_cmdEh>
     d0c:	82 e0       	ldi	r24, 0x02	; 2
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	0e 94 8e 08 	call	0x111c	; 0x111c <delay_ms>
     d14:	88 e2       	ldi	r24, 0x28	; 40
     d16:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN12OrangutanLCD8send_cmdEh>
     d1a:	88 e0       	ldi	r24, 0x08	; 8
     d1c:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN12OrangutanLCD8send_cmdEh>
     d20:	81 e0       	ldi	r24, 0x01	; 1
     d22:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN12OrangutanLCD8send_cmdEh>
     d26:	86 e0       	ldi	r24, 0x06	; 6
     d28:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN12OrangutanLCD8send_cmdEh>
     d2c:	8c e0       	ldi	r24, 0x0C	; 12
     d2e:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN12OrangutanLCD8send_cmdEh>
     d32:	08 95       	ret

00000d34 <_ZN12OrangutanLCD5clearEv>:
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN12OrangutanLCD8send_cmdEh>
     d3a:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <printf_chars>
     d3e:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <printf_chars+0x1>
     d42:	89 2b       	or	r24, r25
     d44:	f9 f0       	breq	.+62     	; 0xd84 <_ZN12OrangutanLCD5clearEv+0x50>
     d46:	60 e0       	ldi	r22, 0x00	; 0
     d48:	a0 e2       	ldi	r26, 0x20	; 32
     d4a:	26 2f       	mov	r18, r22
     d4c:	30 e0       	ldi	r19, 0x00	; 0
     d4e:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <numLCDCols>
     d52:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <numLCDRows>
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	01 97       	sbiw	r24, 0x01	; 1
     d5a:	78 9f       	mul	r23, r24
     d5c:	a0 01       	movw	r20, r0
     d5e:	79 9f       	mul	r23, r25
     d60:	50 0d       	add	r21, r0
     d62:	11 24       	eor	r1, r1
     d64:	24 17       	cp	r18, r20
     d66:	35 07       	cpc	r19, r21
     d68:	4c f4       	brge	.+18     	; 0xd7c <_ZN12OrangutanLCD5clearEv+0x48>
     d6a:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <printf_chars>
     d6e:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <printf_chars+0x1>
     d72:	e2 0f       	add	r30, r18
     d74:	f3 1f       	adc	r31, r19
     d76:	a0 83       	st	Z, r26
     d78:	6f 5f       	subi	r22, 0xFF	; 255
     d7a:	e7 cf       	rjmp	.-50     	; 0xd4a <_ZN12OrangutanLCD5clearEv+0x16>
     d7c:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <col>
     d80:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <row>
     d84:	08 95       	ret

00000d86 <clear>:
     d86:	0e 94 9a 06 	call	0xd34	; 0xd34 <_ZN12OrangutanLCD5clearEv>
     d8a:	08 95       	ret

00000d8c <_ZN12OrangutanLCD5printEPKc>:
     d8c:	cf 93       	push	r28
     d8e:	df 93       	push	r29
     d90:	ec 01       	movw	r28, r24
     d92:	89 91       	ld	r24, Y+
     d94:	88 23       	and	r24, r24
     d96:	19 f0       	breq	.+6      	; 0xd9e <_ZN12OrangutanLCD5printEPKc+0x12>
     d98:	0e 94 51 06 	call	0xca2	; 0xca2 <_ZN12OrangutanLCD9send_dataEh>
     d9c:	fa cf       	rjmp	.-12     	; 0xd92 <_ZN12OrangutanLCD5printEPKc+0x6>
     d9e:	df 91       	pop	r29
     da0:	cf 91       	pop	r28
     da2:	08 95       	ret

00000da4 <print>:
     da4:	0e 94 c6 06 	call	0xd8c	; 0xd8c <_ZN12OrangutanLCD5printEPKc>
     da8:	08 95       	ret

00000daa <_ZN12OrangutanLCD5printEm>:
     daa:	aa e0       	ldi	r26, 0x0A	; 10
     dac:	b0 e0       	ldi	r27, 0x00	; 0
     dae:	eb ed       	ldi	r30, 0xDB	; 219
     db0:	f6 e0       	ldi	r31, 0x06	; 6
     db2:	0c 94 b1 0e 	jmp	0x1d62	; 0x1d62 <__prologue_saves__+0x14>
     db6:	1a e0       	ldi	r17, 0x0A	; 10
     db8:	5a e0       	ldi	r21, 0x0A	; 10
     dba:	c5 2e       	mov	r12, r21
     dbc:	d1 2c       	mov	r13, r1
     dbe:	e1 2c       	mov	r14, r1
     dc0:	f1 2c       	mov	r15, r1
     dc2:	06 2f       	mov	r16, r22
     dc4:	a7 01       	movw	r20, r14
     dc6:	96 01       	movw	r18, r12
     dc8:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__udivmodsi4>
     dcc:	ca 01       	movw	r24, r20
     dce:	b9 01       	movw	r22, r18
     dd0:	11 50       	subi	r17, 0x01	; 1
     dd2:	e1 e0       	ldi	r30, 0x01	; 1
     dd4:	f0 e0       	ldi	r31, 0x00	; 0
     dd6:	ec 0f       	add	r30, r28
     dd8:	fd 1f       	adc	r31, r29
     dda:	e1 0f       	add	r30, r17
     ddc:	f1 1d       	adc	r31, r1
     dde:	00 5d       	subi	r16, 0xD0	; 208
     de0:	2a e0       	ldi	r18, 0x0A	; 10
     de2:	62 9f       	mul	r22, r18
     de4:	00 19       	sub	r16, r0
     de6:	11 24       	eor	r1, r1
     de8:	00 83       	st	Z, r16
     dea:	61 15       	cp	r22, r1
     dec:	71 05       	cpc	r23, r1
     dee:	81 05       	cpc	r24, r1
     df0:	91 05       	cpc	r25, r1
     df2:	39 f7       	brne	.-50     	; 0xdc2 <_ZN12OrangutanLCD5printEm+0x18>
     df4:	1a 30       	cpi	r17, 0x0A	; 10
     df6:	58 f4       	brcc	.+22     	; 0xe0e <_ZN12OrangutanLCD5printEm+0x64>
     df8:	e1 e0       	ldi	r30, 0x01	; 1
     dfa:	f0 e0       	ldi	r31, 0x00	; 0
     dfc:	ec 0f       	add	r30, r28
     dfe:	fd 1f       	adc	r31, r29
     e00:	e1 0f       	add	r30, r17
     e02:	f1 1d       	adc	r31, r1
     e04:	80 81       	ld	r24, Z
     e06:	0e 94 51 06 	call	0xca2	; 0xca2 <_ZN12OrangutanLCD9send_dataEh>
     e0a:	1f 5f       	subi	r17, 0xFF	; 255
     e0c:	f3 cf       	rjmp	.-26     	; 0xdf4 <_ZN12OrangutanLCD5printEm+0x4a>
     e0e:	2a 96       	adiw	r28, 0x0a	; 10
     e10:	e8 e0       	ldi	r30, 0x08	; 8
     e12:	0c 94 cd 0e 	jmp	0x1d9a	; 0x1d9a <__epilogue_restores__+0x14>

00000e16 <_ZN12OrangutanLCD5printEl>:
     e16:	cf 92       	push	r12
     e18:	df 92       	push	r13
     e1a:	ef 92       	push	r14
     e1c:	ff 92       	push	r15
     e1e:	6b 01       	movw	r12, r22
     e20:	7c 01       	movw	r14, r24
     e22:	97 ff       	sbrs	r25, 7
     e24:	0b c0       	rjmp	.+22     	; 0xe3c <_ZN12OrangutanLCD5printEl+0x26>
     e26:	f0 94       	com	r15
     e28:	e0 94       	com	r14
     e2a:	d0 94       	com	r13
     e2c:	c0 94       	com	r12
     e2e:	c1 1c       	adc	r12, r1
     e30:	d1 1c       	adc	r13, r1
     e32:	e1 1c       	adc	r14, r1
     e34:	f1 1c       	adc	r15, r1
     e36:	8d e2       	ldi	r24, 0x2D	; 45
     e38:	0e 94 51 06 	call	0xca2	; 0xca2 <_ZN12OrangutanLCD9send_dataEh>
     e3c:	c7 01       	movw	r24, r14
     e3e:	b6 01       	movw	r22, r12
     e40:	0e 94 d5 06 	call	0xdaa	; 0xdaa <_ZN12OrangutanLCD5printEm>
     e44:	ff 90       	pop	r15
     e46:	ef 90       	pop	r14
     e48:	df 90       	pop	r13
     e4a:	cf 90       	pop	r12
     e4c:	08 95       	ret

00000e4e <print_long>:
     e4e:	0e 94 0b 07 	call	0xe16	; 0xe16 <_ZN12OrangutanLCD5printEl>
     e52:	08 95       	ret

00000e54 <_ZN12OrangutanLCD6gotoXYEhh>:
     e54:	a5 e0       	ldi	r26, 0x05	; 5
     e56:	b0 e0       	ldi	r27, 0x00	; 0
     e58:	e0 e3       	ldi	r30, 0x30	; 48
     e5a:	f7 e0       	ldi	r31, 0x07	; 7
     e5c:	0c 94 b6 0e 	jmp	0x1d6c	; 0x1d6c <__prologue_saves__+0x1e>
     e60:	18 2f       	mov	r17, r24
     e62:	80 e8       	ldi	r24, 0x80	; 128
     e64:	89 83       	std	Y+1, r24	; 0x01
     e66:	80 ec       	ldi	r24, 0xC0	; 192
     e68:	8a 83       	std	Y+2, r24	; 0x02
     e6a:	84 e9       	ldi	r24, 0x94	; 148
     e6c:	8b 83       	std	Y+3, r24	; 0x03
     e6e:	84 ed       	ldi	r24, 0xD4	; 212
     e70:	8c 83       	std	Y+4, r24	; 0x04
     e72:	fe 01       	movw	r30, r28
     e74:	e6 0f       	add	r30, r22
     e76:	f1 1d       	adc	r31, r1
     e78:	81 81       	ldd	r24, Z+1	; 0x01
     e7a:	81 0f       	add	r24, r17
     e7c:	6d 83       	std	Y+5, r22	; 0x05
     e7e:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN12OrangutanLCD8send_cmdEh>
     e82:	10 93 3e 01 	sts	0x013E, r17	; 0x80013e <col>
     e86:	6d 81       	ldd	r22, Y+5	; 0x05
     e88:	60 93 3f 01 	sts	0x013F, r22	; 0x80013f <row>
     e8c:	25 96       	adiw	r28, 0x05	; 5
     e8e:	e3 e0       	ldi	r30, 0x03	; 3
     e90:	0c 94 d2 0e 	jmp	0x1da4	; 0x1da4 <__epilogue_restores__+0x1e>

00000e94 <lcd_goto_xy>:
     e94:	0e 94 2a 07 	call	0xe54	; 0xe54 <_ZN12OrangutanLCD6gotoXYEhh>
     e98:	08 95       	ret

00000e9a <_ZN16OrangutanDigital9setOutputEhh>:
     e9a:	88 30       	cpi	r24, 0x08	; 8
     e9c:	58 f4       	brcc	.+22     	; 0xeb4 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
     e9e:	91 e0       	ldi	r25, 0x01	; 1
     ea0:	01 c0       	rjmp	.+2      	; 0xea4 <_ZN16OrangutanDigital9setOutputEhh+0xa>
     ea2:	99 0f       	add	r25, r25
     ea4:	8a 95       	dec	r24
     ea6:	ea f7       	brpl	.-6      	; 0xea2 <_ZN16OrangutanDigital9setOutputEhh+0x8>
     ea8:	89 2f       	mov	r24, r25
     eaa:	aa e2       	ldi	r26, 0x2A	; 42
     eac:	b0 e0       	ldi	r27, 0x00	; 0
     eae:	eb e2       	ldi	r30, 0x2B	; 43
     eb0:	f0 e0       	ldi	r31, 0x00	; 0
     eb2:	21 c0       	rjmp	.+66     	; 0xef6 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     eb4:	8e 30       	cpi	r24, 0x0E	; 14
     eb6:	60 f4       	brcc	.+24     	; 0xed0 <_ZN16OrangutanDigital9setOutputEhh+0x36>
     eb8:	98 ef       	ldi	r25, 0xF8	; 248
     eba:	98 0f       	add	r25, r24
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	01 c0       	rjmp	.+2      	; 0xec2 <_ZN16OrangutanDigital9setOutputEhh+0x28>
     ec0:	88 0f       	add	r24, r24
     ec2:	9a 95       	dec	r25
     ec4:	ea f7       	brpl	.-6      	; 0xec0 <_ZN16OrangutanDigital9setOutputEhh+0x26>
     ec6:	a4 e2       	ldi	r26, 0x24	; 36
     ec8:	b0 e0       	ldi	r27, 0x00	; 0
     eca:	e5 e2       	ldi	r30, 0x25	; 37
     ecc:	f0 e0       	ldi	r31, 0x00	; 0
     ece:	13 c0       	rjmp	.+38     	; 0xef6 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     ed0:	85 31       	cpi	r24, 0x15	; 21
     ed2:	60 f4       	brcc	.+24     	; 0xeec <_ZN16OrangutanDigital9setOutputEhh+0x52>
     ed4:	92 ef       	ldi	r25, 0xF2	; 242
     ed6:	98 0f       	add	r25, r24
     ed8:	81 e0       	ldi	r24, 0x01	; 1
     eda:	01 c0       	rjmp	.+2      	; 0xede <_ZN16OrangutanDigital9setOutputEhh+0x44>
     edc:	88 0f       	add	r24, r24
     ede:	9a 95       	dec	r25
     ee0:	ea f7       	brpl	.-6      	; 0xedc <_ZN16OrangutanDigital9setOutputEhh+0x42>
     ee2:	a7 e2       	ldi	r26, 0x27	; 39
     ee4:	b0 e0       	ldi	r27, 0x00	; 0
     ee6:	e8 e2       	ldi	r30, 0x28	; 40
     ee8:	f0 e0       	ldi	r31, 0x00	; 0
     eea:	05 c0       	rjmp	.+10     	; 0xef6 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
     eec:	80 e0       	ldi	r24, 0x00	; 0
     eee:	a0 e0       	ldi	r26, 0x00	; 0
     ef0:	b0 e0       	ldi	r27, 0x00	; 0
     ef2:	e0 e0       	ldi	r30, 0x00	; 0
     ef4:	f0 e0       	ldi	r31, 0x00	; 0
     ef6:	6f 3f       	cpi	r22, 0xFF	; 255
     ef8:	19 f4       	brne	.+6      	; 0xf00 <_ZN16OrangutanDigital9setOutputEhh+0x66>
     efa:	90 81       	ld	r25, Z
     efc:	98 27       	eor	r25, r24
     efe:	09 c0       	rjmp	.+18     	; 0xf12 <_ZN16OrangutanDigital9setOutputEhh+0x78>
     f00:	66 23       	and	r22, r22
     f02:	19 f0       	breq	.+6      	; 0xf0a <_ZN16OrangutanDigital9setOutputEhh+0x70>
     f04:	90 81       	ld	r25, Z
     f06:	98 2b       	or	r25, r24
     f08:	04 c0       	rjmp	.+8      	; 0xf12 <_ZN16OrangutanDigital9setOutputEhh+0x78>
     f0a:	20 81       	ld	r18, Z
     f0c:	98 2f       	mov	r25, r24
     f0e:	90 95       	com	r25
     f10:	92 23       	and	r25, r18
     f12:	90 83       	st	Z, r25
     f14:	9c 91       	ld	r25, X
     f16:	98 2b       	or	r25, r24
     f18:	9c 93       	st	X, r25
     f1a:	08 95       	ret

00000f1c <_ZN15OrangutanMotors5init2Ev>:
     f1c:	83 ef       	ldi	r24, 0xF3	; 243
     f1e:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
     f22:	84 bd       	out	0x24, r24	; 36
     f24:	82 e0       	ldi	r24, 0x02	; 2
     f26:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
     f2a:	85 bd       	out	0x25, r24	; 37
     f2c:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     f30:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     f34:	18 bc       	out	0x28, r1	; 40
     f36:	17 bc       	out	0x27, r1	; 39
     f38:	60 e0       	ldi	r22, 0x00	; 0
     f3a:	86 e0       	ldi	r24, 0x06	; 6
     f3c:	0e 94 4d 07 	call	0xe9a	; 0xe9a <_ZN16OrangutanDigital9setOutputEhh>
     f40:	60 e0       	ldi	r22, 0x00	; 0
     f42:	85 e0       	ldi	r24, 0x05	; 5
     f44:	0e 94 4d 07 	call	0xe9a	; 0xe9a <_ZN16OrangutanDigital9setOutputEhh>
     f48:	60 e0       	ldi	r22, 0x00	; 0
     f4a:	8b e0       	ldi	r24, 0x0B	; 11
     f4c:	0e 94 4d 07 	call	0xe9a	; 0xe9a <_ZN16OrangutanDigital9setOutputEhh>
     f50:	60 e0       	ldi	r22, 0x00	; 0
     f52:	83 e0       	ldi	r24, 0x03	; 3
     f54:	0e 94 4d 07 	call	0xe9a	; 0xe9a <_ZN16OrangutanDigital9setOutputEhh>
     f58:	08 95       	ret

00000f5a <_ZN15OrangutanMotors4initEv>:
     f5a:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <_ZZN15OrangutanMotors4initEvE11initialized>
     f5e:	81 11       	cpse	r24, r1
     f60:	05 c0       	rjmp	.+10     	; 0xf6c <_ZN15OrangutanMotors4initEv+0x12>
     f62:	81 e0       	ldi	r24, 0x01	; 1
     f64:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <_ZZN15OrangutanMotors4initEvE11initialized>
     f68:	0e 94 8e 07 	call	0xf1c	; 0xf1c <_ZN15OrangutanMotors5init2Ev>
     f6c:	08 95       	ret

00000f6e <_ZN15OrangutanMotors10setM1SpeedEi>:
     f6e:	cf 93       	push	r28
     f70:	df 93       	push	r29
     f72:	ec 01       	movw	r28, r24
     f74:	0e 94 ad 07 	call	0xf5a	; 0xf5a <_ZN15OrangutanMotors4initEv>
     f78:	d7 ff       	sbrs	r29, 7
     f7a:	05 c0       	rjmp	.+10     	; 0xf86 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
     f7c:	d1 95       	neg	r29
     f7e:	c1 95       	neg	r28
     f80:	d1 09       	sbc	r29, r1
     f82:	81 e0       	ldi	r24, 0x01	; 1
     f84:	01 c0       	rjmp	.+2      	; 0xf88 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
     f86:	80 e0       	ldi	r24, 0x00	; 0
     f88:	cf 3f       	cpi	r28, 0xFF	; 255
     f8a:	d1 05       	cpc	r29, r1
     f8c:	19 f0       	breq	.+6      	; 0xf94 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     f8e:	14 f0       	brlt	.+4      	; 0xf94 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
     f90:	cf ef       	ldi	r28, 0xFF	; 255
     f92:	d0 e0       	ldi	r29, 0x00	; 0
     f94:	88 23       	and	r24, r24
     f96:	19 f0       	breq	.+6      	; 0xf9e <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
     f98:	18 bc       	out	0x28, r1	; 40
     f9a:	c7 bd       	out	0x27, r28	; 39
     f9c:	02 c0       	rjmp	.+4      	; 0xfa2 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
     f9e:	c8 bd       	out	0x28, r28	; 40
     fa0:	17 bc       	out	0x27, r1	; 39
     fa2:	df 91       	pop	r29
     fa4:	cf 91       	pop	r28
     fa6:	08 95       	ret

00000fa8 <_ZN15OrangutanMotors10setM2SpeedEi>:
     fa8:	cf 93       	push	r28
     faa:	df 93       	push	r29
     fac:	ec 01       	movw	r28, r24
     fae:	0e 94 ad 07 	call	0xf5a	; 0xf5a <_ZN15OrangutanMotors4initEv>
     fb2:	d7 ff       	sbrs	r29, 7
     fb4:	05 c0       	rjmp	.+10     	; 0xfc0 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
     fb6:	d1 95       	neg	r29
     fb8:	c1 95       	neg	r28
     fba:	d1 09       	sbc	r29, r1
     fbc:	81 e0       	ldi	r24, 0x01	; 1
     fbe:	01 c0       	rjmp	.+2      	; 0xfc2 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
     fc0:	80 e0       	ldi	r24, 0x00	; 0
     fc2:	cf 3f       	cpi	r28, 0xFF	; 255
     fc4:	d1 05       	cpc	r29, r1
     fc6:	19 f0       	breq	.+6      	; 0xfce <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     fc8:	14 f0       	brlt	.+4      	; 0xfce <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
     fca:	cf ef       	ldi	r28, 0xFF	; 255
     fcc:	d0 e0       	ldi	r29, 0x00	; 0
     fce:	88 23       	and	r24, r24
     fd0:	29 f0       	breq	.+10     	; 0xfdc <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
     fd2:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     fd6:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     fda:	04 c0       	rjmp	.+8      	; 0xfe4 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
     fdc:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     fe0:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     fe4:	df 91       	pop	r29
     fe6:	cf 91       	pop	r28
     fe8:	08 95       	ret

00000fea <_ZN15OrangutanMotors9setSpeedsEii>:
     fea:	cf 93       	push	r28
     fec:	df 93       	push	r29
     fee:	eb 01       	movw	r28, r22
     ff0:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN15OrangutanMotors10setM1SpeedEi>
     ff4:	ce 01       	movw	r24, r28
     ff6:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <_ZN15OrangutanMotors10setM2SpeedEi>
     ffa:	df 91       	pop	r29
     ffc:	cf 91       	pop	r28
     ffe:	08 95       	ret

00001000 <set_motors>:
    1000:	0e 94 f5 07 	call	0xfea	; 0xfea <_ZN15OrangutanMotors9setSpeedsEii>
    1004:	08 95       	ret

00001006 <_ZN20OrangutanPushbuttons5init2Ev>:
    1006:	84 b1       	in	r24, 0x04	; 4
    1008:	8d 7c       	andi	r24, 0xCD	; 205
    100a:	84 b9       	out	0x04, r24	; 4
    100c:	85 b1       	in	r24, 0x05	; 5
    100e:	82 63       	ori	r24, 0x32	; 50
    1010:	85 b9       	out	0x05, r24	; 5
    1012:	85 e0       	ldi	r24, 0x05	; 5
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	6f 93       	push	r22
    1018:	64 e0       	ldi	r22, 0x04	; 4
    101a:	6a 95       	dec	r22
    101c:	f1 f7       	brne	.-4      	; 0x101a <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    101e:	6f 91       	pop	r22
    1020:	01 97       	sbiw	r24, 0x01	; 1
    1022:	c9 f7       	brne	.-14     	; 0x1016 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    1024:	08 95       	ret

00001026 <_ZN20OrangutanPushbuttons4initEv>:
    1026:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    102a:	81 11       	cpse	r24, r1
    102c:	05 c0       	rjmp	.+10     	; 0x1038 <_ZN20OrangutanPushbuttons4initEv+0x12>
    102e:	81 e0       	ldi	r24, 0x01	; 1
    1030:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    1034:	0e 94 03 08 	call	0x1006	; 0x1006 <_ZN20OrangutanPushbuttons5init2Ev>
    1038:	08 95       	ret

0000103a <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    103a:	cf 93       	push	r28
    103c:	c8 2f       	mov	r28, r24
    103e:	0e 94 13 08 	call	0x1026	; 0x1026 <_ZN20OrangutanPushbuttons4initEv>
    1042:	83 b1       	in	r24, 0x03	; 3
    1044:	8c 23       	and	r24, r28
    1046:	e9 f3       	breq	.-6      	; 0x1042 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1048:	8a e0       	ldi	r24, 0x0A	; 10
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	0e 94 8e 08 	call	0x111c	; 0x111c <delay_ms>
    1050:	83 b1       	in	r24, 0x03	; 3
    1052:	8c 23       	and	r24, r28
    1054:	b1 f3       	breq	.-20     	; 0x1042 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1056:	83 b1       	in	r24, 0x03	; 3
    1058:	8c 23       	and	r24, r28
    105a:	cf 91       	pop	r28
    105c:	08 95       	ret

0000105e <wait_for_button_release>:
    105e:	0e 94 1d 08 	call	0x103a	; 0x103a <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    1062:	08 95       	ret

00001064 <_ZN20OrangutanPushbuttons9isPressedEh>:
    1064:	a1 e0       	ldi	r26, 0x01	; 1
    1066:	b0 e0       	ldi	r27, 0x00	; 0
    1068:	e8 e3       	ldi	r30, 0x38	; 56
    106a:	f8 e0       	ldi	r31, 0x08	; 8
    106c:	0c 94 b7 0e 	jmp	0x1d6e	; 0x1d6e <__prologue_saves__+0x20>
    1070:	89 83       	std	Y+1, r24	; 0x01
    1072:	0e 94 13 08 	call	0x1026	; 0x1026 <_ZN20OrangutanPushbuttons4initEv>
    1076:	93 b1       	in	r25, 0x03	; 3
    1078:	90 95       	com	r25
    107a:	89 81       	ldd	r24, Y+1	; 0x01
    107c:	89 23       	and	r24, r25
    107e:	21 96       	adiw	r28, 0x01	; 1
    1080:	e2 e0       	ldi	r30, 0x02	; 2
    1082:	0c 94 d3 0e 	jmp	0x1da6	; 0x1da6 <__epilogue_restores__+0x20>

00001086 <button_is_pressed>:
    1086:	0e 94 32 08 	call	0x1064	; 0x1064 <_ZN20OrangutanPushbuttons9isPressedEh>
    108a:	08 95       	ret

0000108c <__vector_9>:
    108c:	2f 92       	push	r2
    108e:	8f 93       	push	r24
    1090:	9f 93       	push	r25
    1092:	2f b6       	in	r2, 0x3f	; 63
    1094:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <tickCount+0x1>
    1098:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <tickCount+0x2>
    109c:	01 96       	adiw	r24, 0x01	; 1
    109e:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <tickCount+0x1>
    10a2:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <tickCount+0x2>
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <tickCount+0x3>
    10ac:	89 1f       	adc	r24, r25
    10ae:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <tickCount+0x3>
    10b2:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <us_over_10+0x1>
    10b6:	9c 5f       	subi	r25, 0xFC	; 252
    10b8:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <us_over_10+0x1>
    10bc:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <us_over_10>
    10c0:	80 51       	subi	r24, 0x10	; 16
    10c2:	97 42       	sbci	r25, 0x27	; 39
    10c4:	c0 f0       	brcs	.+48     	; 0x10f6 <end>
    10c6:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <us_over_10+0x1>
    10ca:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <us_over_10>
    10ce:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <msCounter>
    10d2:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <msCounter+0x1>
    10d6:	01 96       	adiw	r24, 0x01	; 1
    10d8:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <msCounter>
    10dc:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <msCounter+0x1>
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <msCounter+0x2>
    10e6:	89 1f       	adc	r24, r25
    10e8:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <msCounter+0x2>
    10ec:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <msCounter+0x3>
    10f0:	89 1f       	adc	r24, r25
    10f2:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <msCounter+0x3>

000010f6 <end>:
    10f6:	2f be       	out	0x3f, r2	; 63
    10f8:	9f 91       	pop	r25
    10fa:	8f 91       	pop	r24
    10fc:	2f 90       	pop	r2
    10fe:	18 95       	reti

00001100 <_ZN13OrangutanTime17delayMillisecondsEj>:
    1100:	28 ee       	ldi	r18, 0xE8	; 232
    1102:	33 e0       	ldi	r19, 0x03	; 3
    1104:	01 97       	sbiw	r24, 0x01	; 1
    1106:	48 f0       	brcs	.+18     	; 0x111a <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    1108:	f9 01       	movw	r30, r18
    110a:	6f 93       	push	r22
    110c:	64 e0       	ldi	r22, 0x04	; 4
    110e:	6a 95       	dec	r22
    1110:	f1 f7       	brne	.-4      	; 0x110e <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    1112:	6f 91       	pop	r22
    1114:	31 97       	sbiw	r30, 0x01	; 1
    1116:	c9 f7       	brne	.-14     	; 0x110a <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    1118:	f5 cf       	rjmp	.-22     	; 0x1104 <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    111a:	08 95       	ret

0000111c <delay_ms>:
    111c:	0e 94 80 08 	call	0x1100	; 0x1100 <_ZN13OrangutanTime17delayMillisecondsEj>
    1120:	08 95       	ret

00001122 <_ZN13OrangutanTime5init2Ev>:
    1122:	e0 e7       	ldi	r30, 0x70	; 112
    1124:	f0 e0       	ldi	r31, 0x00	; 0
    1126:	80 81       	ld	r24, Z
    1128:	8e 7f       	andi	r24, 0xFE	; 254
    112a:	80 83       	st	Z, r24
    112c:	a0 eb       	ldi	r26, 0xB0	; 176
    112e:	b0 e0       	ldi	r27, 0x00	; 0
    1130:	8c 91       	ld	r24, X
    1132:	83 60       	ori	r24, 0x03	; 3
    1134:	8c 93       	st	X, r24
    1136:	a1 eb       	ldi	r26, 0xB1	; 177
    1138:	b0 e0       	ldi	r27, 0x00	; 0
    113a:	8c 91       	ld	r24, X
    113c:	80 7f       	andi	r24, 0xF0	; 240
    113e:	8c 93       	st	X, r24
    1140:	8c 91       	ld	r24, X
    1142:	82 60       	ori	r24, 0x02	; 2
    1144:	8c 93       	st	X, r24
    1146:	b8 9a       	sbi	0x17, 0	; 23
    1148:	80 81       	ld	r24, Z
    114a:	81 60       	ori	r24, 0x01	; 1
    114c:	80 83       	st	Z, r24
    114e:	78 94       	sei
    1150:	08 95       	ret

00001152 <_ZN13OrangutanTime4initEv>:
    1152:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <_ZZN13OrangutanTime4initEvE11initialized>
    1156:	81 11       	cpse	r24, r1
    1158:	05 c0       	rjmp	.+10     	; 0x1164 <_ZN13OrangutanTime4initEv+0x12>
    115a:	81 e0       	ldi	r24, 0x01	; 1
    115c:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <_ZZN13OrangutanTime4initEvE11initialized>
    1160:	0e 94 91 08 	call	0x1122	; 0x1122 <_ZN13OrangutanTime5init2Ev>
    1164:	08 95       	ret

00001166 <_ZN13OrangutanTime5resetEv>:
    1166:	0e 94 a9 08 	call	0x1152	; 0x1152 <_ZN13OrangutanTime4initEv>
    116a:	e0 e7       	ldi	r30, 0x70	; 112
    116c:	f0 e0       	ldi	r31, 0x00	; 0
    116e:	80 81       	ld	r24, Z
    1170:	8e 7f       	andi	r24, 0xFE	; 254
    1172:	80 83       	st	Z, r24
    1174:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <msCounter>
    1178:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <msCounter+0x1>
    117c:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <msCounter+0x2>
    1180:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <msCounter+0x3>
    1184:	10 92 43 01 	sts	0x0143, r1	; 0x800143 <us_over_10+0x1>
    1188:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <us_over_10>
    118c:	80 81       	ld	r24, Z
    118e:	81 60       	ori	r24, 0x01	; 1
    1190:	80 83       	st	Z, r24
    1192:	08 95       	ret

00001194 <calibrate_line_sensors>:
    1194:	68 2f       	mov	r22, r24
    1196:	8c e4       	ldi	r24, 0x4C	; 76
    1198:	91 e0       	ldi	r25, 0x01	; 1
    119a:	0e 94 b2 0c 	call	0x1964	; 0x1964 <_ZN16PololuQTRSensors9calibrateEh>
    119e:	08 95       	ret

000011a0 <read_line>:
    11a0:	46 2f       	mov	r20, r22
    11a2:	20 e0       	ldi	r18, 0x00	; 0
    11a4:	bc 01       	movw	r22, r24
    11a6:	8c e4       	ldi	r24, 0x4C	; 76
    11a8:	91 e0       	ldi	r25, 0x01	; 1
    11aa:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <_ZN16PololuQTRSensors8readLineEPjhh>
    11ae:	08 95       	ret

000011b0 <_ZN9Pololu3pi4initEjh>:
    11b0:	0f 93       	push	r16
    11b2:	cf 93       	push	r28
    11b4:	df 93       	push	r29
    11b6:	00 d0       	rcall	.+0      	; 0x11b8 <_ZN9Pololu3pi4initEjh+0x8>
    11b8:	00 d0       	rcall	.+0      	; 0x11ba <_ZN9Pololu3pi4initEjh+0xa>
    11ba:	1f 92       	push	r1
    11bc:	cd b7       	in	r28, 0x3d	; 61
    11be:	de b7       	in	r29, 0x3e	; 62
    11c0:	9c 01       	movw	r18, r24
    11c2:	85 e0       	ldi	r24, 0x05	; 5
    11c4:	ee e1       	ldi	r30, 0x1E	; 30
    11c6:	f1 e0       	ldi	r31, 0x01	; 1
    11c8:	de 01       	movw	r26, r28
    11ca:	11 96       	adiw	r26, 0x01	; 1
    11cc:	01 90       	ld	r0, Z+
    11ce:	0d 92       	st	X+, r0
    11d0:	8a 95       	dec	r24
    11d2:	e1 f7       	brne	.-8      	; 0x11cc <_ZN9Pololu3pi4initEjh+0x1c>
    11d4:	66 23       	and	r22, r22
    11d6:	11 f0       	breq	.+4      	; 0x11dc <_ZN9Pololu3pi4initEjh+0x2c>
    11d8:	0f ef       	ldi	r16, 0xFF	; 255
    11da:	01 c0       	rjmp	.+2      	; 0x11de <_ZN9Pololu3pi4initEjh+0x2e>
    11dc:	03 e1       	ldi	r16, 0x13	; 19
    11de:	45 e0       	ldi	r20, 0x05	; 5
    11e0:	be 01       	movw	r22, r28
    11e2:	6f 5f       	subi	r22, 0xFF	; 255
    11e4:	7f 4f       	sbci	r23, 0xFF	; 255
    11e6:	8c e4       	ldi	r24, 0x4C	; 76
    11e8:	91 e0       	ldi	r25, 0x01	; 1
    11ea:	0e 94 aa 09 	call	0x1354	; 0x1354 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    11ee:	8c e4       	ldi	r24, 0x4C	; 76
    11f0:	91 e0       	ldi	r25, 0x01	; 1
    11f2:	0e 94 81 09 	call	0x1302	; 0x1302 <_ZN16PololuQTRSensors11emittersOffEv>
    11f6:	0e 94 b3 08 	call	0x1166	; 0x1166 <_ZN13OrangutanTime5resetEv>
    11fa:	0f 90       	pop	r0
    11fc:	0f 90       	pop	r0
    11fe:	0f 90       	pop	r0
    1200:	0f 90       	pop	r0
    1202:	0f 90       	pop	r0
    1204:	df 91       	pop	r29
    1206:	cf 91       	pop	r28
    1208:	0f 91       	pop	r16
    120a:	08 95       	ret

0000120c <pololu_3pi_init>:
    120c:	60 e0       	ldi	r22, 0x00	; 0
    120e:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <_ZN9Pololu3pi4initEjh>
    1212:	08 95       	ret

00001214 <_GLOBAL__sub_D_pololu_3pi_init>:
    1214:	8c e4       	ldi	r24, 0x4C	; 76
    1216:	91 e0       	ldi	r25, 0x01	; 1
    1218:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <_ZN16PololuQTRSensorsD1Ev>
    121c:	08 95       	ret

0000121e <delay_us>:
    121e:	6f 93       	push	r22
    1220:	64 e0       	ldi	r22, 0x04	; 4
    1222:	6a 95       	dec	r22
    1224:	f1 f7       	brne	.-4      	; 0x1222 <delay_us+0x4>
    1226:	6f 91       	pop	r22
    1228:	01 97       	sbiw	r24, 0x01	; 1
    122a:	c9 f7       	brne	.-14     	; 0x121e <delay_us>
    122c:	08 95       	ret

0000122e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    122e:	fc 01       	movw	r30, r24
    1230:	11 82       	std	Z+1, r1	; 0x01
    1232:	10 82       	st	Z, r1
    1234:	13 82       	std	Z+3, r1	; 0x03
    1236:	12 82       	std	Z+2, r1	; 0x02
    1238:	15 82       	std	Z+5, r1	; 0x05
    123a:	14 82       	std	Z+4, r1	; 0x04
    123c:	16 82       	std	Z+6, r1	; 0x06
    123e:	68 30       	cpi	r22, 0x08	; 8
    1240:	68 f4       	brcc	.+26     	; 0x125c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    1242:	89 e2       	ldi	r24, 0x29	; 41
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	91 83       	std	Z+1, r25	; 0x01
    1248:	80 83       	st	Z, r24
    124a:	8b e2       	ldi	r24, 0x2B	; 43
    124c:	90 e0       	ldi	r25, 0x00	; 0
    124e:	93 83       	std	Z+3, r25	; 0x03
    1250:	82 83       	std	Z+2, r24	; 0x02
    1252:	8a e2       	ldi	r24, 0x2A	; 42
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	95 83       	std	Z+5, r25	; 0x05
    1258:	84 83       	std	Z+4, r24	; 0x04
    125a:	1f c0       	rjmp	.+62     	; 0x129a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    125c:	6e 30       	cpi	r22, 0x0E	; 14
    125e:	70 f4       	brcc	.+28     	; 0x127c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    1260:	83 e2       	ldi	r24, 0x23	; 35
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	91 83       	std	Z+1, r25	; 0x01
    1266:	80 83       	st	Z, r24
    1268:	85 e2       	ldi	r24, 0x25	; 37
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	93 83       	std	Z+3, r25	; 0x03
    126e:	82 83       	std	Z+2, r24	; 0x02
    1270:	84 e2       	ldi	r24, 0x24	; 36
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	95 83       	std	Z+5, r25	; 0x05
    1276:	84 83       	std	Z+4, r24	; 0x04
    1278:	68 50       	subi	r22, 0x08	; 8
    127a:	0f c0       	rjmp	.+30     	; 0x129a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    127c:	65 31       	cpi	r22, 0x15	; 21
    127e:	98 f4       	brcc	.+38     	; 0x12a6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    1280:	86 e2       	ldi	r24, 0x26	; 38
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	91 83       	std	Z+1, r25	; 0x01
    1286:	80 83       	st	Z, r24
    1288:	88 e2       	ldi	r24, 0x28	; 40
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	93 83       	std	Z+3, r25	; 0x03
    128e:	82 83       	std	Z+2, r24	; 0x02
    1290:	87 e2       	ldi	r24, 0x27	; 39
    1292:	90 e0       	ldi	r25, 0x00	; 0
    1294:	95 83       	std	Z+5, r25	; 0x05
    1296:	84 83       	std	Z+4, r24	; 0x04
    1298:	6e 50       	subi	r22, 0x0E	; 14
    129a:	81 e0       	ldi	r24, 0x01	; 1
    129c:	01 c0       	rjmp	.+2      	; 0x12a0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    129e:	88 0f       	add	r24, r24
    12a0:	6a 95       	dec	r22
    12a2:	ea f7       	brpl	.-6      	; 0x129e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    12a4:	86 83       	std	Z+6, r24	; 0x06
    12a6:	08 95       	ret

000012a8 <_ZN16PololuQTRSensors4initEhhh>:
    12a8:	a7 e0       	ldi	r26, 0x07	; 7
    12aa:	b0 e0       	ldi	r27, 0x00	; 0
    12ac:	ea e5       	ldi	r30, 0x5A	; 90
    12ae:	f9 e0       	ldi	r31, 0x09	; 9
    12b0:	0c 94 b5 0e 	jmp	0x1d6a	; 0x1d6a <__prologue_saves__+0x1c>
    12b4:	8c 01       	movw	r16, r24
    12b6:	fc 01       	movw	r30, r24
    12b8:	11 82       	std	Z+1, r1	; 0x01
    12ba:	10 82       	st	Z, r1
    12bc:	13 82       	std	Z+3, r1	; 0x03
    12be:	12 82       	std	Z+2, r1	; 0x02
    12c0:	15 82       	std	Z+5, r1	; 0x05
    12c2:	14 82       	std	Z+4, r1	; 0x04
    12c4:	17 82       	std	Z+7, r1	; 0x07
    12c6:	16 82       	std	Z+6, r1	; 0x06
    12c8:	61 31       	cpi	r22, 0x11	; 17
    12ca:	18 f0       	brcs	.+6      	; 0x12d2 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    12cc:	80 e1       	ldi	r24, 0x10	; 16
    12ce:	80 87       	std	Z+8, r24	; 0x08
    12d0:	02 c0       	rjmp	.+4      	; 0x12d6 <_ZN16PololuQTRSensors4initEhhh+0x2e>
    12d2:	fc 01       	movw	r30, r24
    12d4:	60 87       	std	Z+8, r22	; 0x08
    12d6:	f8 01       	movw	r30, r16
    12d8:	20 8b       	std	Z+16, r18	; 0x10
    12da:	64 2f       	mov	r22, r20
    12dc:	ce 01       	movw	r24, r28
    12de:	01 96       	adiw	r24, 0x01	; 1
    12e0:	0e 94 17 09 	call	0x122e	; 0x122e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    12e4:	8f 81       	ldd	r24, Y+7	; 0x07
    12e6:	f8 01       	movw	r30, r16
    12e8:	81 87       	std	Z+9, r24	; 0x09
    12ea:	8b 81       	ldd	r24, Y+3	; 0x03
    12ec:	9c 81       	ldd	r25, Y+4	; 0x04
    12ee:	93 87       	std	Z+11, r25	; 0x0b
    12f0:	82 87       	std	Z+10, r24	; 0x0a
    12f2:	8d 81       	ldd	r24, Y+5	; 0x05
    12f4:	9e 81       	ldd	r25, Y+6	; 0x06
    12f6:	95 87       	std	Z+13, r25	; 0x0d
    12f8:	84 87       	std	Z+12, r24	; 0x0c
    12fa:	27 96       	adiw	r28, 0x07	; 7
    12fc:	e4 e0       	ldi	r30, 0x04	; 4
    12fe:	0c 94 d1 0e 	jmp	0x1da2	; 0x1da2 <__epilogue_restores__+0x1c>

00001302 <_ZN16PololuQTRSensors11emittersOffEv>:
    1302:	fc 01       	movw	r30, r24
    1304:	a4 85       	ldd	r26, Z+12	; 0x0c
    1306:	b5 85       	ldd	r27, Z+13	; 0x0d
    1308:	10 97       	sbiw	r26, 0x00	; 0
    130a:	79 f0       	breq	.+30     	; 0x132a <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    130c:	8c 91       	ld	r24, X
    130e:	91 85       	ldd	r25, Z+9	; 0x09
    1310:	89 2b       	or	r24, r25
    1312:	8c 93       	st	X, r24
    1314:	a2 85       	ldd	r26, Z+10	; 0x0a
    1316:	b3 85       	ldd	r27, Z+11	; 0x0b
    1318:	9c 91       	ld	r25, X
    131a:	81 85       	ldd	r24, Z+9	; 0x09
    131c:	80 95       	com	r24
    131e:	89 23       	and	r24, r25
    1320:	8c 93       	st	X, r24
    1322:	88 ec       	ldi	r24, 0xC8	; 200
    1324:	90 e0       	ldi	r25, 0x00	; 0
    1326:	0e 94 0f 09 	call	0x121e	; 0x121e <delay_us>
    132a:	08 95       	ret

0000132c <_ZN16PololuQTRSensors10emittersOnEv>:
    132c:	fc 01       	movw	r30, r24
    132e:	a4 85       	ldd	r26, Z+12	; 0x0c
    1330:	b5 85       	ldd	r27, Z+13	; 0x0d
    1332:	10 97       	sbiw	r26, 0x00	; 0
    1334:	71 f0       	breq	.+28     	; 0x1352 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    1336:	8c 91       	ld	r24, X
    1338:	91 85       	ldd	r25, Z+9	; 0x09
    133a:	89 2b       	or	r24, r25
    133c:	8c 93       	st	X, r24
    133e:	a2 85       	ldd	r26, Z+10	; 0x0a
    1340:	b3 85       	ldd	r27, Z+11	; 0x0b
    1342:	8c 91       	ld	r24, X
    1344:	91 85       	ldd	r25, Z+9	; 0x09
    1346:	89 2b       	or	r24, r25
    1348:	8c 93       	st	X, r24
    134a:	88 ec       	ldi	r24, 0xC8	; 200
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	0e 94 0f 09 	call	0x121e	; 0x121e <delay_us>
    1352:	08 95       	ret

00001354 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    1354:	a7 e0       	ldi	r26, 0x07	; 7
    1356:	b0 e0       	ldi	r27, 0x00	; 0
    1358:	e0 eb       	ldi	r30, 0xB0	; 176
    135a:	f9 e0       	ldi	r31, 0x09	; 9
    135c:	0c 94 aa 0e 	jmp	0x1d54	; 0x1d54 <__prologue_saves__+0x6>
    1360:	7c 01       	movw	r14, r24
    1362:	4b 01       	movw	r8, r22
    1364:	64 2f       	mov	r22, r20
    1366:	39 01       	movw	r6, r18
    1368:	40 2f       	mov	r20, r16
    136a:	20 e0       	ldi	r18, 0x00	; 0
    136c:	0e 94 54 09 	call	0x12a8	; 0x12a8 <_ZN16PololuQTRSensors4initEhhh>
    1370:	87 01       	movw	r16, r14
    1372:	0f 5b       	subi	r16, 0xBF	; 191
    1374:	1f 4f       	sbci	r17, 0xFF	; 255
    1376:	f8 01       	movw	r30, r16
    1378:	10 82       	st	Z, r1
    137a:	67 01       	movw	r12, r14
    137c:	f2 e4       	ldi	r31, 0x42	; 66
    137e:	cf 0e       	add	r12, r31
    1380:	d1 1c       	adc	r13, r1
    1382:	f6 01       	movw	r30, r12
    1384:	10 82       	st	Z, r1
    1386:	57 01       	movw	r10, r14
    1388:	f3 e4       	ldi	r31, 0x43	; 67
    138a:	af 0e       	add	r10, r31
    138c:	b1 1c       	adc	r11, r1
    138e:	f5 01       	movw	r30, r10
    1390:	10 82       	st	Z, r1
    1392:	f7 01       	movw	r30, r14
    1394:	77 86       	std	Z+15, r7	; 0x0f
    1396:	66 86       	std	Z+14, r6	; 0x0e
    1398:	51 2c       	mov	r5, r1
    139a:	f7 01       	movw	r30, r14
    139c:	80 85       	ldd	r24, Z+8	; 0x08
    139e:	58 16       	cp	r5, r24
    13a0:	50 f5       	brcc	.+84     	; 0x13f6 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    13a2:	65 2c       	mov	r6, r5
    13a4:	71 2c       	mov	r7, r1
    13a6:	f4 01       	movw	r30, r8
    13a8:	e6 0d       	add	r30, r6
    13aa:	f7 1d       	adc	r31, r7
    13ac:	60 81       	ld	r22, Z
    13ae:	ce 01       	movw	r24, r28
    13b0:	01 96       	adiw	r24, 0x01	; 1
    13b2:	0e 94 17 09 	call	0x122e	; 0x122e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    13b6:	2f 81       	ldd	r18, Y+7	; 0x07
    13b8:	f7 01       	movw	r30, r14
    13ba:	e6 0d       	add	r30, r6
    13bc:	f7 1d       	adc	r31, r7
    13be:	21 8b       	std	Z+17, r18	; 0x11
    13c0:	89 81       	ldd	r24, Y+1	; 0x01
    13c2:	9a 81       	ldd	r25, Y+2	; 0x02
    13c4:	f3 01       	movw	r30, r6
    13c6:	ee 0f       	add	r30, r30
    13c8:	ff 1f       	adc	r31, r31
    13ca:	ee 0d       	add	r30, r14
    13cc:	ff 1d       	adc	r31, r15
    13ce:	92 a3       	std	Z+34, r25	; 0x22
    13d0:	81 a3       	std	Z+33, r24	; 0x21
    13d2:	83 32       	cpi	r24, 0x23	; 35
    13d4:	91 05       	cpc	r25, r1
    13d6:	11 f4       	brne	.+4      	; 0x13dc <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    13d8:	f8 01       	movw	r30, r16
    13da:	08 c0       	rjmp	.+16     	; 0x13ec <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    13dc:	86 32       	cpi	r24, 0x26	; 38
    13de:	91 05       	cpc	r25, r1
    13e0:	11 f4       	brne	.+4      	; 0x13e6 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    13e2:	f6 01       	movw	r30, r12
    13e4:	03 c0       	rjmp	.+6      	; 0x13ec <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    13e6:	89 97       	sbiw	r24, 0x29	; 41
    13e8:	21 f4       	brne	.+8      	; 0x13f2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    13ea:	f5 01       	movw	r30, r10
    13ec:	80 81       	ld	r24, Z
    13ee:	82 2b       	or	r24, r18
    13f0:	80 83       	st	Z, r24
    13f2:	53 94       	inc	r5
    13f4:	d2 cf       	rjmp	.-92     	; 0x139a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    13f6:	27 96       	adiw	r28, 0x07	; 7
    13f8:	ef e0       	ldi	r30, 0x0F	; 15
    13fa:	0c 94 c6 0e 	jmp	0x1d8c	; 0x1d8c <__epilogue_restores__+0x6>

000013fe <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    13fe:	a0 e0       	ldi	r26, 0x00	; 0
    1400:	b0 e0       	ldi	r27, 0x00	; 0
    1402:	e5 e0       	ldi	r30, 0x05	; 5
    1404:	fa e0       	ldi	r31, 0x0A	; 10
    1406:	0c 94 ac 0e 	jmp	0x1d58	; 0x1d58 <__prologue_saves__+0xa>
    140a:	ec 01       	movw	r28, r24
    140c:	5b 01       	movw	r10, r22
    140e:	6c 01       	movw	r12, r24
    1410:	81 e4       	ldi	r24, 0x41	; 65
    1412:	c8 0e       	add	r12, r24
    1414:	d1 1c       	adc	r13, r1
    1416:	f6 01       	movw	r30, r12
    1418:	80 80       	ld	r8, Z
    141a:	7e 01       	movw	r14, r28
    141c:	f2 e4       	ldi	r31, 0x42	; 66
    141e:	ef 0e       	add	r14, r31
    1420:	f1 1c       	adc	r15, r1
    1422:	f7 01       	movw	r30, r14
    1424:	70 80       	ld	r7, Z
    1426:	8e 01       	movw	r16, r28
    1428:	0d 5b       	subi	r16, 0xBD	; 189
    142a:	1f 4f       	sbci	r17, 0xFF	; 255
    142c:	f8 01       	movw	r30, r16
    142e:	90 80       	ld	r9, Z
    1430:	80 e0       	ldi	r24, 0x00	; 0
    1432:	98 85       	ldd	r25, Y+8	; 0x08
    1434:	89 17       	cp	r24, r25
    1436:	48 f4       	brcc	.+18     	; 0x144a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    1438:	f5 01       	movw	r30, r10
    143a:	e8 0f       	add	r30, r24
    143c:	f1 1d       	adc	r31, r1
    143e:	e8 0f       	add	r30, r24
    1440:	f1 1d       	adc	r31, r1
    1442:	11 82       	std	Z+1, r1	; 0x01
    1444:	10 82       	st	Z, r1
    1446:	8f 5f       	subi	r24, 0xFF	; 255
    1448:	f4 cf       	rjmp	.-24     	; 0x1432 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    144a:	84 b1       	in	r24, 0x04	; 4
    144c:	f6 01       	movw	r30, r12
    144e:	90 81       	ld	r25, Z
    1450:	89 2b       	or	r24, r25
    1452:	84 b9       	out	0x04, r24	; 4
    1454:	87 b1       	in	r24, 0x07	; 7
    1456:	f7 01       	movw	r30, r14
    1458:	90 81       	ld	r25, Z
    145a:	89 2b       	or	r24, r25
    145c:	87 b9       	out	0x07, r24	; 7
    145e:	8a b1       	in	r24, 0x0a	; 10
    1460:	f8 01       	movw	r30, r16
    1462:	90 81       	ld	r25, Z
    1464:	89 2b       	or	r24, r25
    1466:	8a b9       	out	0x0a, r24	; 10
    1468:	85 b1       	in	r24, 0x05	; 5
    146a:	f6 01       	movw	r30, r12
    146c:	90 81       	ld	r25, Z
    146e:	89 2b       	or	r24, r25
    1470:	85 b9       	out	0x05, r24	; 5
    1472:	88 b1       	in	r24, 0x08	; 8
    1474:	f7 01       	movw	r30, r14
    1476:	90 81       	ld	r25, Z
    1478:	89 2b       	or	r24, r25
    147a:	88 b9       	out	0x08, r24	; 8
    147c:	8b b1       	in	r24, 0x0b	; 11
    147e:	f8 01       	movw	r30, r16
    1480:	90 81       	ld	r25, Z
    1482:	89 2b       	or	r24, r25
    1484:	8b b9       	out	0x0b, r24	; 11
    1486:	8a e0       	ldi	r24, 0x0A	; 10
    1488:	90 e0       	ldi	r25, 0x00	; 0
    148a:	0e 94 0f 09 	call	0x121e	; 0x121e <delay_us>
    148e:	94 b1       	in	r25, 0x04	; 4
    1490:	f6 01       	movw	r30, r12
    1492:	80 81       	ld	r24, Z
    1494:	80 95       	com	r24
    1496:	89 23       	and	r24, r25
    1498:	84 b9       	out	0x04, r24	; 4
    149a:	97 b1       	in	r25, 0x07	; 7
    149c:	f7 01       	movw	r30, r14
    149e:	80 81       	ld	r24, Z
    14a0:	80 95       	com	r24
    14a2:	89 23       	and	r24, r25
    14a4:	87 b9       	out	0x07, r24	; 7
    14a6:	9a b1       	in	r25, 0x0a	; 10
    14a8:	f8 01       	movw	r30, r16
    14aa:	80 81       	ld	r24, Z
    14ac:	80 95       	com	r24
    14ae:	89 23       	and	r24, r25
    14b0:	8a b9       	out	0x0a, r24	; 10
    14b2:	95 b1       	in	r25, 0x05	; 5
    14b4:	f6 01       	movw	r30, r12
    14b6:	80 81       	ld	r24, Z
    14b8:	80 95       	com	r24
    14ba:	89 23       	and	r24, r25
    14bc:	85 b9       	out	0x05, r24	; 5
    14be:	98 b1       	in	r25, 0x08	; 8
    14c0:	f7 01       	movw	r30, r14
    14c2:	80 81       	ld	r24, Z
    14c4:	80 95       	com	r24
    14c6:	89 23       	and	r24, r25
    14c8:	88 b9       	out	0x08, r24	; 8
    14ca:	9b b1       	in	r25, 0x0b	; 11
    14cc:	f8 01       	movw	r30, r16
    14ce:	80 81       	ld	r24, Z
    14d0:	80 95       	com	r24
    14d2:	89 23       	and	r24, r25
    14d4:	8b b9       	out	0x0b, r24	; 11
    14d6:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    14da:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    14de:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    14e2:	83 60       	ori	r24, 0x03	; 3
    14e4:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    14e8:	82 e0       	ldi	r24, 0x02	; 2
    14ea:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    14ee:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    14f2:	80 e0       	ldi	r24, 0x00	; 0
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	2e 85       	ldd	r18, Y+14	; 0x0e
    14f8:	3f 85       	ldd	r19, Y+15	; 0x0f
    14fa:	82 17       	cp	r24, r18
    14fc:	93 07       	cpc	r25, r19
    14fe:	20 f5       	brcc	.+72     	; 0x1548 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    1500:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1504:	2c 2d       	mov	r18, r12
    1506:	24 1b       	sub	r18, r20
    1508:	82 0f       	add	r24, r18
    150a:	91 1d       	adc	r25, r1
    150c:	03 b1       	in	r16, 0x03	; 3
    150e:	08 11       	cpse	r16, r8
    1510:	32 c0       	rjmp	.+100    	; 0x1576 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1512:	f6 b0       	in	r15, 0x06	; 6
    1514:	f7 10       	cpse	r15, r7
    1516:	2f c0       	rjmp	.+94     	; 0x1576 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1518:	29 b1       	in	r18, 0x09	; 9
    151a:	29 11       	cpse	r18, r9
    151c:	2c c0       	rjmp	.+88     	; 0x1576 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    151e:	10 c0       	rjmp	.+32     	; 0x1540 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    1520:	21 2f       	mov	r18, r17
    1522:	30 e0       	ldi	r19, 0x00	; 0
    1524:	a9 01       	movw	r20, r18
    1526:	44 0f       	add	r20, r20
    1528:	55 1f       	adc	r21, r21
    152a:	f5 01       	movw	r30, r10
    152c:	e4 0f       	add	r30, r20
    152e:	f5 1f       	adc	r31, r21
    1530:	60 81       	ld	r22, Z
    1532:	71 81       	ldd	r23, Z+1	; 0x01
    1534:	67 2b       	or	r22, r23
    1536:	21 f1       	breq	.+72     	; 0x1580 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    1538:	1f 5f       	subi	r17, 0xFF	; 255
    153a:	28 85       	ldd	r18, Y+8	; 0x08
    153c:	12 17       	cp	r17, r18
    153e:	80 f3       	brcs	.-32     	; 0x1520 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    1540:	7f 2c       	mov	r7, r15
    1542:	80 2e       	mov	r8, r16
    1544:	4c 2d       	mov	r20, r12
    1546:	d7 cf       	rjmp	.-82     	; 0x14f6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    1548:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    154c:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1550:	20 e0       	ldi	r18, 0x00	; 0
    1552:	88 85       	ldd	r24, Y+8	; 0x08
    1554:	28 17       	cp	r18, r24
    1556:	30 f5       	brcc	.+76     	; 0x15a4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    1558:	f5 01       	movw	r30, r10
    155a:	e2 0f       	add	r30, r18
    155c:	f1 1d       	adc	r31, r1
    155e:	e2 0f       	add	r30, r18
    1560:	f1 1d       	adc	r31, r1
    1562:	80 81       	ld	r24, Z
    1564:	91 81       	ldd	r25, Z+1	; 0x01
    1566:	89 2b       	or	r24, r25
    1568:	21 f4       	brne	.+8      	; 0x1572 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    156a:	8e 85       	ldd	r24, Y+14	; 0x0e
    156c:	9f 85       	ldd	r25, Y+15	; 0x0f
    156e:	91 83       	std	Z+1, r25	; 0x01
    1570:	80 83       	st	Z, r24
    1572:	2f 5f       	subi	r18, 0xFF	; 255
    1574:	ee cf       	rjmp	.-36     	; 0x1552 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    1576:	03 b1       	in	r16, 0x03	; 3
    1578:	f6 b0       	in	r15, 0x06	; 6
    157a:	99 b0       	in	r9, 0x09	; 9
    157c:	10 e0       	ldi	r17, 0x00	; 0
    157e:	dd cf       	rjmp	.-70     	; 0x153a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    1580:	de 01       	movw	r26, r28
    1582:	a4 0f       	add	r26, r20
    1584:	b5 1f       	adc	r27, r21
    1586:	91 96       	adiw	r26, 0x21	; 33
    1588:	0d 90       	ld	r0, X+
    158a:	bc 91       	ld	r27, X
    158c:	a0 2d       	mov	r26, r0
    158e:	4c 91       	ld	r20, X
    1590:	de 01       	movw	r26, r28
    1592:	a2 0f       	add	r26, r18
    1594:	b3 1f       	adc	r27, r19
    1596:	51 96       	adiw	r26, 0x11	; 17
    1598:	2c 91       	ld	r18, X
    159a:	42 23       	and	r20, r18
    159c:	69 f6       	brne	.-102    	; 0x1538 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    159e:	91 83       	std	Z+1, r25	; 0x01
    15a0:	80 83       	st	Z, r24
    15a2:	ca cf       	rjmp	.-108    	; 0x1538 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    15a4:	cd b7       	in	r28, 0x3d	; 61
    15a6:	de b7       	in	r29, 0x3e	; 62
    15a8:	ed e0       	ldi	r30, 0x0D	; 13
    15aa:	0c 94 c8 0e 	jmp	0x1d90	; 0x1d90 <__epilogue_restores__+0xa>

000015ae <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    15ae:	ef 92       	push	r14
    15b0:	ff 92       	push	r15
    15b2:	0f 93       	push	r16
    15b4:	1f 93       	push	r17
    15b6:	cf 93       	push	r28
    15b8:	df 93       	push	r29
    15ba:	fc 01       	movw	r30, r24
    15bc:	9b 01       	movw	r18, r22
    15be:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    15c2:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    15c6:	47 b1       	in	r20, 0x07	; 7
    15c8:	18 b1       	in	r17, 0x08	; 8
    15ca:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    15ce:	86 fd       	sbrc	r24, 6
    15d0:	fc cf       	rjmp	.-8      	; 0x15ca <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    15d2:	80 e0       	ldi	r24, 0x00	; 0
    15d4:	90 85       	ldd	r25, Z+8	; 0x08
    15d6:	89 17       	cp	r24, r25
    15d8:	48 f4       	brcc	.+18     	; 0x15ec <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    15da:	d9 01       	movw	r26, r18
    15dc:	a8 0f       	add	r26, r24
    15de:	b1 1d       	adc	r27, r1
    15e0:	a8 0f       	add	r26, r24
    15e2:	b1 1d       	adc	r27, r1
    15e4:	1d 92       	st	X+, r1
    15e6:	1c 92       	st	X, r1
    15e8:	8f 5f       	subi	r24, 0xFF	; 255
    15ea:	f4 cf       	rjmp	.-24     	; 0x15d4 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    15ec:	97 b1       	in	r25, 0x07	; 7
    15ee:	82 a1       	ldd	r24, Z+34	; 0x22
    15f0:	80 95       	com	r24
    15f2:	89 23       	and	r24, r25
    15f4:	87 b9       	out	0x07, r24	; 7
    15f6:	98 b1       	in	r25, 0x08	; 8
    15f8:	82 a1       	ldd	r24, Z+34	; 0x22
    15fa:	80 95       	com	r24
    15fc:	89 23       	and	r24, r25
    15fe:	88 b9       	out	0x08, r24	; 8
    1600:	87 e8       	ldi	r24, 0x87	; 135
    1602:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1606:	e1 2c       	mov	r14, r1
    1608:	81 a1       	ldd	r24, Z+33	; 0x21
    160a:	e8 16       	cp	r14, r24
    160c:	10 f0       	brcs	.+4      	; 0x1612 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    160e:	e1 2c       	mov	r14, r1
    1610:	29 c0       	rjmp	.+82     	; 0x1664 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    1612:	50 e0       	ldi	r21, 0x00	; 0
    1614:	80 85       	ldd	r24, Z+8	; 0x08
    1616:	58 17       	cp	r21, r24
    1618:	18 f5       	brcc	.+70     	; 0x1660 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    161a:	a5 2f       	mov	r26, r21
    161c:	b0 e0       	ldi	r27, 0x00	; 0
    161e:	ef 01       	movw	r28, r30
    1620:	ca 0f       	add	r28, r26
    1622:	db 1f       	adc	r29, r27
    1624:	89 89       	ldd	r24, Y+17	; 0x11
    1626:	80 64       	ori	r24, 0x40	; 64
    1628:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    162c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1630:	80 64       	ori	r24, 0x40	; 64
    1632:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1636:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    163a:	86 fd       	sbrc	r24, 6
    163c:	fc cf       	rjmp	.-8      	; 0x1636 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    163e:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    1642:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1646:	aa 0f       	add	r26, r26
    1648:	bb 1f       	adc	r27, r27
    164a:	a2 0f       	add	r26, r18
    164c:	b3 1f       	adc	r27, r19
    164e:	8d 91       	ld	r24, X+
    1650:	9c 91       	ld	r25, X
    1652:	11 97       	sbiw	r26, 0x01	; 1
    1654:	86 0f       	add	r24, r22
    1656:	97 1f       	adc	r25, r23
    1658:	8d 93       	st	X+, r24
    165a:	9c 93       	st	X, r25
    165c:	5f 5f       	subi	r21, 0xFF	; 255
    165e:	da cf       	rjmp	.-76     	; 0x1614 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    1660:	e3 94       	inc	r14
    1662:	d2 cf       	rjmp	.-92     	; 0x1608 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    1664:	80 85       	ldd	r24, Z+8	; 0x08
    1666:	e8 16       	cp	r14, r24
    1668:	a0 f4       	brcc	.+40     	; 0x1692 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    166a:	e9 01       	movw	r28, r18
    166c:	ce 0d       	add	r28, r14
    166e:	d1 1d       	adc	r29, r1
    1670:	ce 0d       	add	r28, r14
    1672:	d1 1d       	adc	r29, r1
    1674:	61 a1       	ldd	r22, Z+33	; 0x21
    1676:	70 e0       	ldi	r23, 0x00	; 0
    1678:	cb 01       	movw	r24, r22
    167a:	95 95       	asr	r25
    167c:	87 95       	ror	r24
    167e:	a8 81       	ld	r26, Y
    1680:	b9 81       	ldd	r27, Y+1	; 0x01
    1682:	8a 0f       	add	r24, r26
    1684:	9b 1f       	adc	r25, r27
    1686:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <__udivmodhi4>
    168a:	79 83       	std	Y+1, r23	; 0x01
    168c:	68 83       	st	Y, r22
    168e:	e3 94       	inc	r14
    1690:	e9 cf       	rjmp	.-46     	; 0x1664 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    1692:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1696:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    169a:	18 b9       	out	0x08, r17	; 8
    169c:	47 b9       	out	0x07, r20	; 7
    169e:	cd b7       	in	r28, 0x3d	; 61
    16a0:	de b7       	in	r29, 0x3e	; 62
    16a2:	e6 e0       	ldi	r30, 0x06	; 6
    16a4:	0c 94 cf 0e 	jmp	0x1d9e	; 0x1d9e <__epilogue_restores__+0x18>

000016a8 <_ZN16PololuQTRSensors4readEPjh>:
    16a8:	a0 e2       	ldi	r26, 0x20	; 32
    16aa:	b0 e0       	ldi	r27, 0x00	; 0
    16ac:	ea e5       	ldi	r30, 0x5A	; 90
    16ae:	fb e0       	ldi	r31, 0x0B	; 11
    16b0:	0c 94 b2 0e 	jmp	0x1d64	; 0x1d64 <__prologue_saves__+0x16>
    16b4:	8c 01       	movw	r16, r24
    16b6:	7b 01       	movw	r14, r22
    16b8:	d4 2e       	mov	r13, r20
    16ba:	8f ef       	ldi	r24, 0xFF	; 255
    16bc:	84 0f       	add	r24, r20
    16be:	82 30       	cpi	r24, 0x02	; 2
    16c0:	18 f4       	brcc	.+6      	; 0x16c8 <_ZN16PololuQTRSensors4readEPjh+0x20>
    16c2:	c8 01       	movw	r24, r16
    16c4:	0e 94 96 09 	call	0x132c	; 0x132c <_ZN16PololuQTRSensors10emittersOnEv>
    16c8:	d8 01       	movw	r26, r16
    16ca:	50 96       	adiw	r26, 0x10	; 16
    16cc:	8c 91       	ld	r24, X
    16ce:	b7 01       	movw	r22, r14
    16d0:	81 11       	cpse	r24, r1
    16d2:	10 c0       	rjmp	.+32     	; 0x16f4 <_ZN16PololuQTRSensors4readEPjh+0x4c>
    16d4:	c8 01       	movw	r24, r16
    16d6:	0e 94 ff 09 	call	0x13fe	; 0x13fe <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    16da:	c8 01       	movw	r24, r16
    16dc:	0e 94 81 09 	call	0x1302	; 0x1302 <_ZN16PololuQTRSensors11emittersOffEv>
    16e0:	b2 e0       	ldi	r27, 0x02	; 2
    16e2:	db 12       	cpse	r13, r27
    16e4:	3a c0       	rjmp	.+116    	; 0x175a <_ZN16PololuQTRSensors4readEPjh+0xb2>
    16e6:	be 01       	movw	r22, r28
    16e8:	6f 5f       	subi	r22, 0xFF	; 255
    16ea:	7f 4f       	sbci	r23, 0xFF	; 255
    16ec:	c8 01       	movw	r24, r16
    16ee:	0e 94 ff 09 	call	0x13fe	; 0x13fe <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    16f2:	0f c0       	rjmp	.+30     	; 0x1712 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    16f4:	c8 01       	movw	r24, r16
    16f6:	0e 94 d7 0a 	call	0x15ae	; 0x15ae <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    16fa:	c8 01       	movw	r24, r16
    16fc:	0e 94 81 09 	call	0x1302	; 0x1302 <_ZN16PololuQTRSensors11emittersOffEv>
    1700:	e2 e0       	ldi	r30, 0x02	; 2
    1702:	de 12       	cpse	r13, r30
    1704:	2a c0       	rjmp	.+84     	; 0x175a <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1706:	be 01       	movw	r22, r28
    1708:	6f 5f       	subi	r22, 0xFF	; 255
    170a:	7f 4f       	sbci	r23, 0xFF	; 255
    170c:	c8 01       	movw	r24, r16
    170e:	0e 94 d7 0a 	call	0x15ae	; 0x15ae <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1712:	40 e0       	ldi	r20, 0x00	; 0
    1714:	f8 01       	movw	r30, r16
    1716:	80 85       	ldd	r24, Z+8	; 0x08
    1718:	48 17       	cp	r20, r24
    171a:	f8 f4       	brcc	.+62     	; 0x175a <_ZN16PololuQTRSensors4readEPjh+0xb2>
    171c:	84 2f       	mov	r24, r20
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	88 0f       	add	r24, r24
    1722:	99 1f       	adc	r25, r25
    1724:	f7 01       	movw	r30, r14
    1726:	e8 0f       	add	r30, r24
    1728:	f9 1f       	adc	r31, r25
    172a:	21 e0       	ldi	r18, 0x01	; 1
    172c:	30 e0       	ldi	r19, 0x00	; 0
    172e:	2c 0f       	add	r18, r28
    1730:	3d 1f       	adc	r19, r29
    1732:	82 0f       	add	r24, r18
    1734:	93 1f       	adc	r25, r19
    1736:	d8 01       	movw	r26, r16
    1738:	1e 96       	adiw	r26, 0x0e	; 14
    173a:	2d 91       	ld	r18, X+
    173c:	3c 91       	ld	r19, X
    173e:	1f 97       	sbiw	r26, 0x0f	; 15
    1740:	dc 01       	movw	r26, r24
    1742:	8d 91       	ld	r24, X+
    1744:	9c 91       	ld	r25, X
    1746:	28 1b       	sub	r18, r24
    1748:	39 0b       	sbc	r19, r25
    174a:	80 81       	ld	r24, Z
    174c:	91 81       	ldd	r25, Z+1	; 0x01
    174e:	82 0f       	add	r24, r18
    1750:	93 1f       	adc	r25, r19
    1752:	91 83       	std	Z+1, r25	; 0x01
    1754:	80 83       	st	Z, r24
    1756:	4f 5f       	subi	r20, 0xFF	; 255
    1758:	dd cf       	rjmp	.-70     	; 0x1714 <_ZN16PololuQTRSensors4readEPjh+0x6c>
    175a:	a0 96       	adiw	r28, 0x20	; 32
    175c:	e7 e0       	ldi	r30, 0x07	; 7
    175e:	0c 94 ce 0e 	jmp	0x1d9c	; 0x1d9c <__epilogue_restores__+0x16>

00001762 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    1762:	2f 92       	push	r2
    1764:	3f 92       	push	r3
    1766:	5f 92       	push	r5
    1768:	6f 92       	push	r6
    176a:	7f 92       	push	r7
    176c:	8f 92       	push	r8
    176e:	9f 92       	push	r9
    1770:	af 92       	push	r10
    1772:	bf 92       	push	r11
    1774:	cf 92       	push	r12
    1776:	df 92       	push	r13
    1778:	ef 92       	push	r14
    177a:	ff 92       	push	r15
    177c:	0f 93       	push	r16
    177e:	1f 93       	push	r17
    1780:	cf 93       	push	r28
    1782:	df 93       	push	r29
    1784:	cd b7       	in	r28, 0x3d	; 61
    1786:	de b7       	in	r29, 0x3e	; 62
    1788:	c0 56       	subi	r28, 0x60	; 96
    178a:	d1 09       	sbc	r29, r1
    178c:	0f b6       	in	r0, 0x3f	; 63
    178e:	f8 94       	cli
    1790:	de bf       	out	0x3e, r29	; 62
    1792:	0f be       	out	0x3f, r0	; 63
    1794:	cd bf       	out	0x3d, r28	; 61
    1796:	8c 01       	movw	r16, r24
    1798:	4b 01       	movw	r8, r22
    179a:	5a 01       	movw	r10, r20
    179c:	52 2e       	mov	r5, r18
    179e:	da 01       	movw	r26, r20
    17a0:	8d 91       	ld	r24, X+
    17a2:	9c 91       	ld	r25, X
    17a4:	89 2b       	or	r24, r25
    17a6:	31 f0       	breq	.+12     	; 0x17b4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    17a8:	f4 01       	movw	r30, r8
    17aa:	80 81       	ld	r24, Z
    17ac:	91 81       	ldd	r25, Z+1	; 0x01
    17ae:	89 2b       	or	r24, r25
    17b0:	f1 f4       	brne	.+60     	; 0x17ee <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    17b2:	24 c0       	rjmp	.+72     	; 0x17fc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    17b4:	d8 01       	movw	r26, r16
    17b6:	18 96       	adiw	r26, 0x08	; 8
    17b8:	8c 91       	ld	r24, X
    17ba:	90 e0       	ldi	r25, 0x00	; 0
    17bc:	88 0f       	add	r24, r24
    17be:	99 1f       	adc	r25, r25
    17c0:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <malloc>
    17c4:	f5 01       	movw	r30, r10
    17c6:	91 83       	std	Z+1, r25	; 0x01
    17c8:	80 83       	st	Z, r24
    17ca:	00 97       	sbiw	r24, 0x00	; 0
    17cc:	09 f4       	brne	.+2      	; 0x17d0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    17ce:	b1 c0       	rjmp	.+354    	; 0x1932 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    17d0:	fc 01       	movw	r30, r24
    17d2:	20 e0       	ldi	r18, 0x00	; 0
    17d4:	30 e0       	ldi	r19, 0x00	; 0
    17d6:	d8 01       	movw	r26, r16
    17d8:	18 96       	adiw	r26, 0x08	; 8
    17da:	8c 91       	ld	r24, X
    17dc:	90 e0       	ldi	r25, 0x00	; 0
    17de:	28 17       	cp	r18, r24
    17e0:	39 07       	cpc	r19, r25
    17e2:	14 f7       	brge	.-60     	; 0x17a8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    17e4:	11 92       	st	Z+, r1
    17e6:	11 92       	st	Z+, r1
    17e8:	2f 5f       	subi	r18, 0xFF	; 255
    17ea:	3f 4f       	sbci	r19, 0xFF	; 255
    17ec:	f4 cf       	rjmp	.-24     	; 0x17d6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    17ee:	e1 2c       	mov	r14, r1
    17f0:	f1 2c       	mov	r15, r1
    17f2:	6e 01       	movw	r12, r28
    17f4:	b1 e2       	ldi	r27, 0x21	; 33
    17f6:	cb 0e       	add	r12, r27
    17f8:	d1 1c       	adc	r13, r1
    17fa:	21 c0       	rjmp	.+66     	; 0x183e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    17fc:	f8 01       	movw	r30, r16
    17fe:	80 85       	ldd	r24, Z+8	; 0x08
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	88 0f       	add	r24, r24
    1804:	99 1f       	adc	r25, r25
    1806:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <malloc>
    180a:	d4 01       	movw	r26, r8
    180c:	8d 93       	st	X+, r24
    180e:	9c 93       	st	X, r25
    1810:	00 97       	sbiw	r24, 0x00	; 0
    1812:	09 f4       	brne	.+2      	; 0x1816 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    1814:	8e c0       	rjmp	.+284    	; 0x1932 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1816:	fc 01       	movw	r30, r24
    1818:	20 e0       	ldi	r18, 0x00	; 0
    181a:	30 e0       	ldi	r19, 0x00	; 0
    181c:	d8 01       	movw	r26, r16
    181e:	18 96       	adiw	r26, 0x08	; 8
    1820:	8c 91       	ld	r24, X
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	28 17       	cp	r18, r24
    1826:	39 07       	cpc	r19, r25
    1828:	14 f7       	brge	.-60     	; 0x17ee <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    182a:	d8 01       	movw	r26, r16
    182c:	1e 96       	adiw	r26, 0x0e	; 14
    182e:	8d 91       	ld	r24, X+
    1830:	9c 91       	ld	r25, X
    1832:	1f 97       	sbiw	r26, 0x0f	; 15
    1834:	81 93       	st	Z+, r24
    1836:	91 93       	st	Z+, r25
    1838:	2f 5f       	subi	r18, 0xFF	; 255
    183a:	3f 4f       	sbci	r19, 0xFF	; 255
    183c:	ef cf       	rjmp	.-34     	; 0x181c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    183e:	45 2d       	mov	r20, r5
    1840:	be 01       	movw	r22, r28
    1842:	6f 5b       	subi	r22, 0xBF	; 191
    1844:	7f 4f       	sbci	r23, 0xFF	; 255
    1846:	c8 01       	movw	r24, r16
    1848:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <_ZN16PololuQTRSensors4readEPjh>
    184c:	f8 01       	movw	r30, r16
    184e:	60 84       	ldd	r6, Z+8	; 0x08
    1850:	71 2c       	mov	r7, r1
    1852:	fe 01       	movw	r30, r28
    1854:	ef 5b       	subi	r30, 0xBF	; 191
    1856:	ff 4f       	sbci	r31, 0xFF	; 255
    1858:	c6 01       	movw	r24, r12
    185a:	9e 01       	movw	r18, r28
    185c:	2f 5f       	subi	r18, 0xFF	; 255
    185e:	3f 4f       	sbci	r19, 0xFF	; 255
    1860:	19 01       	movw	r2, r18
    1862:	20 e0       	ldi	r18, 0x00	; 0
    1864:	30 e0       	ldi	r19, 0x00	; 0
    1866:	26 15       	cp	r18, r6
    1868:	37 05       	cpc	r19, r7
    186a:	4c f5       	brge	.+82     	; 0x18be <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    186c:	e1 14       	cp	r14, r1
    186e:	f1 04       	cpc	r15, r1
    1870:	89 f0       	breq	.+34     	; 0x1894 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1872:	dc 01       	movw	r26, r24
    1874:	6d 91       	ld	r22, X+
    1876:	7c 91       	ld	r23, X
    1878:	40 81       	ld	r20, Z
    187a:	51 81       	ldd	r21, Z+1	; 0x01
    187c:	64 17       	cp	r22, r20
    187e:	75 07       	cpc	r23, r21
    1880:	48 f0       	brcs	.+18     	; 0x1894 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1882:	d1 01       	movw	r26, r2
    1884:	6d 91       	ld	r22, X+
    1886:	7c 91       	ld	r23, X
    1888:	40 81       	ld	r20, Z
    188a:	51 81       	ldd	r21, Z+1	; 0x01
    188c:	46 17       	cp	r20, r22
    188e:	57 07       	cpc	r21, r23
    1890:	48 f0       	brcs	.+18     	; 0x18a4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    1892:	0d c0       	rjmp	.+26     	; 0x18ae <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    1894:	40 81       	ld	r20, Z
    1896:	51 81       	ldd	r21, Z+1	; 0x01
    1898:	dc 01       	movw	r26, r24
    189a:	4d 93       	st	X+, r20
    189c:	5c 93       	st	X, r21
    189e:	e1 14       	cp	r14, r1
    18a0:	f1 04       	cpc	r15, r1
    18a2:	79 f7       	brne	.-34     	; 0x1882 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    18a4:	40 81       	ld	r20, Z
    18a6:	51 81       	ldd	r21, Z+1	; 0x01
    18a8:	d1 01       	movw	r26, r2
    18aa:	4d 93       	st	X+, r20
    18ac:	5c 93       	st	X, r21
    18ae:	2f 5f       	subi	r18, 0xFF	; 255
    18b0:	3f 4f       	sbci	r19, 0xFF	; 255
    18b2:	b2 e0       	ldi	r27, 0x02	; 2
    18b4:	2b 0e       	add	r2, r27
    18b6:	31 1c       	adc	r3, r1
    18b8:	32 96       	adiw	r30, 0x02	; 2
    18ba:	02 96       	adiw	r24, 0x02	; 2
    18bc:	d4 cf       	rjmp	.-88     	; 0x1866 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    18be:	ef ef       	ldi	r30, 0xFF	; 255
    18c0:	ee 1a       	sub	r14, r30
    18c2:	fe 0a       	sbc	r15, r30
    18c4:	fa e0       	ldi	r31, 0x0A	; 10
    18c6:	ef 16       	cp	r14, r31
    18c8:	f1 04       	cpc	r15, r1
    18ca:	09 f0       	breq	.+2      	; 0x18ce <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    18cc:	b8 cf       	rjmp	.-144    	; 0x183e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    18ce:	9e 01       	movw	r18, r28
    18d0:	2f 5f       	subi	r18, 0xFF	; 255
    18d2:	3f 4f       	sbci	r19, 0xFF	; 255
    18d4:	79 01       	movw	r14, r18
    18d6:	36 01       	movw	r6, r12
    18d8:	80 e0       	ldi	r24, 0x00	; 0
    18da:	90 e0       	ldi	r25, 0x00	; 0
    18dc:	f8 01       	movw	r30, r16
    18de:	20 85       	ldd	r18, Z+8	; 0x08
    18e0:	30 e0       	ldi	r19, 0x00	; 0
    18e2:	82 17       	cp	r24, r18
    18e4:	93 07       	cpc	r25, r19
    18e6:	2c f5       	brge	.+74     	; 0x1932 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    18e8:	d7 01       	movw	r26, r14
    18ea:	2d 91       	ld	r18, X+
    18ec:	3d 91       	ld	r19, X+
    18ee:	7d 01       	movw	r14, r26
    18f0:	b3 01       	movw	r22, r6
    18f2:	6c 19       	sub	r22, r12
    18f4:	7d 09       	sbc	r23, r13
    18f6:	d5 01       	movw	r26, r10
    18f8:	ed 91       	ld	r30, X+
    18fa:	fc 91       	ld	r31, X
    18fc:	e6 0f       	add	r30, r22
    18fe:	f7 1f       	adc	r31, r23
    1900:	40 81       	ld	r20, Z
    1902:	51 81       	ldd	r21, Z+1	; 0x01
    1904:	42 17       	cp	r20, r18
    1906:	53 07       	cpc	r21, r19
    1908:	10 f4       	brcc	.+4      	; 0x190e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    190a:	31 83       	std	Z+1, r19	; 0x01
    190c:	20 83       	st	Z, r18
    190e:	f3 01       	movw	r30, r6
    1910:	21 91       	ld	r18, Z+
    1912:	31 91       	ld	r19, Z+
    1914:	3f 01       	movw	r6, r30
    1916:	d4 01       	movw	r26, r8
    1918:	ed 91       	ld	r30, X+
    191a:	fc 91       	ld	r31, X
    191c:	e6 0f       	add	r30, r22
    191e:	f7 1f       	adc	r31, r23
    1920:	40 81       	ld	r20, Z
    1922:	51 81       	ldd	r21, Z+1	; 0x01
    1924:	24 17       	cp	r18, r20
    1926:	35 07       	cpc	r19, r21
    1928:	10 f4       	brcc	.+4      	; 0x192e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    192a:	31 83       	std	Z+1, r19	; 0x01
    192c:	20 83       	st	Z, r18
    192e:	01 96       	adiw	r24, 0x01	; 1
    1930:	d5 cf       	rjmp	.-86     	; 0x18dc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    1932:	c0 5a       	subi	r28, 0xA0	; 160
    1934:	df 4f       	sbci	r29, 0xFF	; 255
    1936:	0f b6       	in	r0, 0x3f	; 63
    1938:	f8 94       	cli
    193a:	de bf       	out	0x3e, r29	; 62
    193c:	0f be       	out	0x3f, r0	; 63
    193e:	cd bf       	out	0x3d, r28	; 61
    1940:	df 91       	pop	r29
    1942:	cf 91       	pop	r28
    1944:	1f 91       	pop	r17
    1946:	0f 91       	pop	r16
    1948:	ff 90       	pop	r15
    194a:	ef 90       	pop	r14
    194c:	df 90       	pop	r13
    194e:	cf 90       	pop	r12
    1950:	bf 90       	pop	r11
    1952:	af 90       	pop	r10
    1954:	9f 90       	pop	r9
    1956:	8f 90       	pop	r8
    1958:	7f 90       	pop	r7
    195a:	6f 90       	pop	r6
    195c:	5f 90       	pop	r5
    195e:	3f 90       	pop	r3
    1960:	2f 90       	pop	r2
    1962:	08 95       	ret

00001964 <_ZN16PololuQTRSensors9calibrateEh>:
    1964:	1f 93       	push	r17
    1966:	cf 93       	push	r28
    1968:	df 93       	push	r29
    196a:	ec 01       	movw	r28, r24
    196c:	16 2f       	mov	r17, r22
    196e:	8f ef       	ldi	r24, 0xFF	; 255
    1970:	86 0f       	add	r24, r22
    1972:	82 30       	cpi	r24, 0x02	; 2
    1974:	18 f0       	brcs	.+6      	; 0x197c <_ZN16PololuQTRSensors9calibrateEh+0x18>
    1976:	66 23       	and	r22, r22
    1978:	59 f0       	breq	.+22     	; 0x1990 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    197a:	14 c0       	rjmp	.+40     	; 0x19a4 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    197c:	21 e0       	ldi	r18, 0x01	; 1
    197e:	ae 01       	movw	r20, r28
    1980:	4e 5f       	subi	r20, 0xFE	; 254
    1982:	5f 4f       	sbci	r21, 0xFF	; 255
    1984:	be 01       	movw	r22, r28
    1986:	ce 01       	movw	r24, r28
    1988:	0e 94 b1 0b 	call	0x1762	; 0x1762 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    198c:	12 30       	cpi	r17, 0x02	; 2
    198e:	51 f4       	brne	.+20     	; 0x19a4 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1990:	ae 01       	movw	r20, r28
    1992:	4a 5f       	subi	r20, 0xFA	; 250
    1994:	5f 4f       	sbci	r21, 0xFF	; 255
    1996:	be 01       	movw	r22, r28
    1998:	6c 5f       	subi	r22, 0xFC	; 252
    199a:	7f 4f       	sbci	r23, 0xFF	; 255
    199c:	20 e0       	ldi	r18, 0x00	; 0
    199e:	ce 01       	movw	r24, r28
    19a0:	0e 94 b1 0b 	call	0x1762	; 0x1762 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    19a4:	df 91       	pop	r29
    19a6:	cf 91       	pop	r28
    19a8:	1f 91       	pop	r17
    19aa:	08 95       	ret

000019ac <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    19ac:	a0 e0       	ldi	r26, 0x00	; 0
    19ae:	b0 e0       	ldi	r27, 0x00	; 0
    19b0:	ec ed       	ldi	r30, 0xDC	; 220
    19b2:	fc e0       	ldi	r31, 0x0C	; 12
    19b4:	0c 94 b0 0e 	jmp	0x1d60	; 0x1d60 <__prologue_saves__+0x12>
    19b8:	ec 01       	movw	r28, r24
    19ba:	8b 01       	movw	r16, r22
    19bc:	b4 2e       	mov	r11, r20
    19be:	84 2f       	mov	r24, r20
    19c0:	8d 7f       	andi	r24, 0xFD	; 253
    19c2:	51 f4       	brne	.+20     	; 0x19d8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    19c4:	8c 81       	ldd	r24, Y+4	; 0x04
    19c6:	9d 81       	ldd	r25, Y+5	; 0x05
    19c8:	89 2b       	or	r24, r25
    19ca:	09 f4       	brne	.+2      	; 0x19ce <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    19cc:	97 c0       	rjmp	.+302    	; 0x1afc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    19ce:	8e 81       	ldd	r24, Y+6	; 0x06
    19d0:	9f 81       	ldd	r25, Y+7	; 0x07
    19d2:	89 2b       	or	r24, r25
    19d4:	09 f4       	brne	.+2      	; 0x19d8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    19d6:	92 c0       	rjmp	.+292    	; 0x1afc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    19d8:	8f ef       	ldi	r24, 0xFF	; 255
    19da:	8b 0d       	add	r24, r11
    19dc:	82 30       	cpi	r24, 0x02	; 2
    19de:	50 f4       	brcc	.+20     	; 0x19f4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    19e0:	88 81       	ld	r24, Y
    19e2:	99 81       	ldd	r25, Y+1	; 0x01
    19e4:	89 2b       	or	r24, r25
    19e6:	09 f4       	brne	.+2      	; 0x19ea <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    19e8:	89 c0       	rjmp	.+274    	; 0x1afc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    19ea:	8a 81       	ldd	r24, Y+2	; 0x02
    19ec:	9b 81       	ldd	r25, Y+3	; 0x03
    19ee:	89 2b       	or	r24, r25
    19f0:	09 f4       	brne	.+2      	; 0x19f4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    19f2:	84 c0       	rjmp	.+264    	; 0x1afc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    19f4:	4b 2d       	mov	r20, r11
    19f6:	b8 01       	movw	r22, r16
    19f8:	ce 01       	movw	r24, r28
    19fa:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <_ZN16PololuQTRSensors4readEPjh>
    19fe:	78 01       	movw	r14, r16
    1a00:	00 e0       	ldi	r16, 0x00	; 0
    1a02:	10 e0       	ldi	r17, 0x00	; 0
    1a04:	c1 2c       	mov	r12, r1
    1a06:	d1 2c       	mov	r13, r1
    1a08:	88 85       	ldd	r24, Y+8	; 0x08
    1a0a:	90 e0       	ldi	r25, 0x00	; 0
    1a0c:	c8 16       	cp	r12, r24
    1a0e:	d9 06       	cpc	r13, r25
    1a10:	0c f0       	brlt	.+2      	; 0x1a14 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    1a12:	74 c0       	rjmp	.+232    	; 0x1afc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1a14:	81 e0       	ldi	r24, 0x01	; 1
    1a16:	b8 12       	cpse	r11, r24
    1a18:	0a c0       	rjmp	.+20     	; 0x1a2e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    1a1a:	ea 81       	ldd	r30, Y+2	; 0x02
    1a1c:	fb 81       	ldd	r31, Y+3	; 0x03
    1a1e:	e0 0f       	add	r30, r16
    1a20:	f1 1f       	adc	r31, r17
    1a22:	01 90       	ld	r0, Z+
    1a24:	f0 81       	ld	r31, Z
    1a26:	e0 2d       	mov	r30, r0
    1a28:	a8 81       	ld	r26, Y
    1a2a:	b9 81       	ldd	r27, Y+1	; 0x01
    1a2c:	0d c0       	rjmp	.+26     	; 0x1a48 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    1a2e:	8c 81       	ldd	r24, Y+4	; 0x04
    1a30:	9d 81       	ldd	r25, Y+5	; 0x05
    1a32:	2e 81       	ldd	r18, Y+6	; 0x06
    1a34:	3f 81       	ldd	r19, Y+7	; 0x07
    1a36:	b1 10       	cpse	r11, r1
    1a38:	0c c0       	rjmp	.+24     	; 0x1a52 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    1a3a:	f9 01       	movw	r30, r18
    1a3c:	e0 0f       	add	r30, r16
    1a3e:	f1 1f       	adc	r31, r17
    1a40:	01 90       	ld	r0, Z+
    1a42:	f0 81       	ld	r31, Z
    1a44:	e0 2d       	mov	r30, r0
    1a46:	dc 01       	movw	r26, r24
    1a48:	a0 0f       	add	r26, r16
    1a4a:	b1 1f       	adc	r27, r17
    1a4c:	8d 91       	ld	r24, X+
    1a4e:	9c 91       	ld	r25, X
    1a50:	28 c0       	rjmp	.+80     	; 0x1aa2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    1a52:	fc 01       	movw	r30, r24
    1a54:	e0 0f       	add	r30, r16
    1a56:	f1 1f       	adc	r31, r17
    1a58:	40 81       	ld	r20, Z
    1a5a:	51 81       	ldd	r21, Z+1	; 0x01
    1a5c:	e8 81       	ld	r30, Y
    1a5e:	f9 81       	ldd	r31, Y+1	; 0x01
    1a60:	e0 0f       	add	r30, r16
    1a62:	f1 1f       	adc	r31, r17
    1a64:	80 81       	ld	r24, Z
    1a66:	91 81       	ldd	r25, Z+1	; 0x01
    1a68:	ee 85       	ldd	r30, Y+14	; 0x0e
    1a6a:	ff 85       	ldd	r31, Y+15	; 0x0f
    1a6c:	48 17       	cp	r20, r24
    1a6e:	59 07       	cpc	r21, r25
    1a70:	10 f4       	brcc	.+4      	; 0x1a76 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    1a72:	cf 01       	movw	r24, r30
    1a74:	04 c0       	rjmp	.+8      	; 0x1a7e <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    1a76:	8e 0f       	add	r24, r30
    1a78:	9f 1f       	adc	r25, r31
    1a7a:	84 1b       	sub	r24, r20
    1a7c:	95 0b       	sbc	r25, r21
    1a7e:	d9 01       	movw	r26, r18
    1a80:	a0 0f       	add	r26, r16
    1a82:	b1 1f       	adc	r27, r17
    1a84:	2d 91       	ld	r18, X+
    1a86:	3c 91       	ld	r19, X
    1a88:	aa 81       	ldd	r26, Y+2	; 0x02
    1a8a:	bb 81       	ldd	r27, Y+3	; 0x03
    1a8c:	a0 0f       	add	r26, r16
    1a8e:	b1 1f       	adc	r27, r17
    1a90:	4d 91       	ld	r20, X+
    1a92:	5c 91       	ld	r21, X
    1a94:	24 17       	cp	r18, r20
    1a96:	35 07       	cpc	r19, r21
    1a98:	20 f0       	brcs	.+8      	; 0x1aa2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    1a9a:	e4 0f       	add	r30, r20
    1a9c:	f5 1f       	adc	r31, r21
    1a9e:	e2 1b       	sub	r30, r18
    1aa0:	f3 0b       	sbc	r31, r19
    1aa2:	e8 1b       	sub	r30, r24
    1aa4:	f9 0b       	sbc	r31, r25
    1aa6:	a9 f0       	breq	.+42     	; 0x1ad2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    1aa8:	d7 01       	movw	r26, r14
    1aaa:	2d 91       	ld	r18, X+
    1aac:	3c 91       	ld	r19, X
    1aae:	40 e0       	ldi	r20, 0x00	; 0
    1ab0:	50 e0       	ldi	r21, 0x00	; 0
    1ab2:	28 1b       	sub	r18, r24
    1ab4:	39 0b       	sbc	r19, r25
    1ab6:	41 09       	sbc	r20, r1
    1ab8:	51 09       	sbc	r21, r1
    1aba:	a8 ee       	ldi	r26, 0xE8	; 232
    1abc:	b3 e0       	ldi	r27, 0x03	; 3
    1abe:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <__muluhisi3>
    1ac2:	9f 01       	movw	r18, r30
    1ac4:	40 e0       	ldi	r20, 0x00	; 0
    1ac6:	50 e0       	ldi	r21, 0x00	; 0
    1ac8:	0e 94 60 0e 	call	0x1cc0	; 0x1cc0 <__divmodsi4>
    1acc:	37 fd       	sbrc	r19, 7
    1ace:	0a c0       	rjmp	.+20     	; 0x1ae4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    1ad0:	02 c0       	rjmp	.+4      	; 0x1ad6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    1ad2:	20 e0       	ldi	r18, 0x00	; 0
    1ad4:	30 e0       	ldi	r19, 0x00	; 0
    1ad6:	29 3e       	cpi	r18, 0xE9	; 233
    1ad8:	b3 e0       	ldi	r27, 0x03	; 3
    1ada:	3b 07       	cpc	r19, r27
    1adc:	2c f0       	brlt	.+10     	; 0x1ae8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1ade:	28 ee       	ldi	r18, 0xE8	; 232
    1ae0:	33 e0       	ldi	r19, 0x03	; 3
    1ae2:	02 c0       	rjmp	.+4      	; 0x1ae8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1ae4:	20 e0       	ldi	r18, 0x00	; 0
    1ae6:	30 e0       	ldi	r19, 0x00	; 0
    1ae8:	f7 01       	movw	r30, r14
    1aea:	21 93       	st	Z+, r18
    1aec:	31 93       	st	Z+, r19
    1aee:	7f 01       	movw	r14, r30
    1af0:	ff ef       	ldi	r31, 0xFF	; 255
    1af2:	cf 1a       	sub	r12, r31
    1af4:	df 0a       	sbc	r13, r31
    1af6:	0e 5f       	subi	r16, 0xFE	; 254
    1af8:	1f 4f       	sbci	r17, 0xFF	; 255
    1afa:	86 cf       	rjmp	.-244    	; 0x1a08 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    1afc:	cd b7       	in	r28, 0x3d	; 61
    1afe:	de b7       	in	r29, 0x3e	; 62
    1b00:	e9 e0       	ldi	r30, 0x09	; 9
    1b02:	0c 94 cc 0e 	jmp	0x1d98	; 0x1d98 <__epilogue_restores__+0x12>

00001b06 <_ZN16PololuQTRSensors8readLineEPjhh>:
    1b06:	a0 e0       	ldi	r26, 0x00	; 0
    1b08:	b0 e0       	ldi	r27, 0x00	; 0
    1b0a:	e9 e8       	ldi	r30, 0x89	; 137
    1b0c:	fd e0       	ldi	r31, 0x0D	; 13
    1b0e:	0c 94 a7 0e 	jmp	0x1d4e	; 0x1d4e <__prologue_saves__>
    1b12:	ec 01       	movw	r28, r24
    1b14:	8b 01       	movw	r16, r22
    1b16:	82 2e       	mov	r8, r18
    1b18:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <_ZN16PololuQTRSensors14readCalibratedEPjh>
    1b1c:	28 84       	ldd	r2, Y+8	; 0x08
    1b1e:	e8 01       	movw	r28, r16
    1b20:	41 2c       	mov	r4, r1
    1b22:	51 2c       	mov	r5, r1
    1b24:	32 01       	movw	r6, r4
    1b26:	00 e0       	ldi	r16, 0x00	; 0
    1b28:	10 e0       	ldi	r17, 0x00	; 0
    1b2a:	c1 2c       	mov	r12, r1
    1b2c:	d1 2c       	mov	r13, r1
    1b2e:	76 01       	movw	r14, r12
    1b30:	31 2c       	mov	r3, r1
    1b32:	91 2c       	mov	r9, r1
    1b34:	58 ee       	ldi	r21, 0xE8	; 232
    1b36:	a5 2e       	mov	r10, r21
    1b38:	53 e0       	ldi	r21, 0x03	; 3
    1b3a:	b5 2e       	mov	r11, r21
    1b3c:	92 14       	cp	r9, r2
    1b3e:	21 f1       	breq	.+72     	; 0x1b88 <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    1b40:	e9 91       	ld	r30, Y+
    1b42:	f9 91       	ld	r31, Y+
    1b44:	88 20       	and	r8, r8
    1b46:	21 f0       	breq	.+8      	; 0x1b50 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    1b48:	c5 01       	movw	r24, r10
    1b4a:	8e 1b       	sub	r24, r30
    1b4c:	9f 0b       	sbc	r25, r31
    1b4e:	fc 01       	movw	r30, r24
    1b50:	e9 3c       	cpi	r30, 0xC9	; 201
    1b52:	f1 05       	cpc	r31, r1
    1b54:	24 f4       	brge	.+8      	; 0x1b5e <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    1b56:	e3 33       	cpi	r30, 0x33	; 51
    1b58:	f1 05       	cpc	r31, r1
    1b5a:	74 f0       	brlt	.+28     	; 0x1b78 <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    1b5c:	02 c0       	rjmp	.+4      	; 0x1b62 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    1b5e:	33 24       	eor	r3, r3
    1b60:	33 94       	inc	r3
    1b62:	df 01       	movw	r26, r30
    1b64:	a3 01       	movw	r20, r6
    1b66:	92 01       	movw	r18, r4
    1b68:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <__mulshisi3>
    1b6c:	c6 0e       	add	r12, r22
    1b6e:	d7 1e       	adc	r13, r23
    1b70:	e8 1e       	adc	r14, r24
    1b72:	f9 1e       	adc	r15, r25
    1b74:	0e 0f       	add	r16, r30
    1b76:	1f 1f       	adc	r17, r31
    1b78:	93 94       	inc	r9
    1b7a:	98 ee       	ldi	r25, 0xE8	; 232
    1b7c:	49 0e       	add	r4, r25
    1b7e:	93 e0       	ldi	r25, 0x03	; 3
    1b80:	59 1e       	adc	r5, r25
    1b82:	61 1c       	adc	r6, r1
    1b84:	71 1c       	adc	r7, r1
    1b86:	da cf       	rjmp	.-76     	; 0x1b3c <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    1b88:	31 10       	cpse	r3, r1
    1b8a:	1e c0       	rjmp	.+60     	; 0x1bc8 <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    1b8c:	49 2d       	mov	r20, r9
    1b8e:	50 e0       	ldi	r21, 0x00	; 0
    1b90:	41 50       	subi	r20, 0x01	; 1
    1b92:	51 09       	sbc	r21, r1
    1b94:	24 ef       	ldi	r18, 0xF4	; 244
    1b96:	31 e0       	ldi	r19, 0x01	; 1
    1b98:	42 9f       	mul	r20, r18
    1b9a:	c0 01       	movw	r24, r0
    1b9c:	43 9f       	mul	r20, r19
    1b9e:	90 0d       	add	r25, r0
    1ba0:	52 9f       	mul	r21, r18
    1ba2:	90 0d       	add	r25, r0
    1ba4:	11 24       	eor	r1, r1
    1ba6:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    1baa:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    1bae:	28 17       	cp	r18, r24
    1bb0:	39 07       	cpc	r19, r25
    1bb2:	b4 f0       	brlt	.+44     	; 0x1be0 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    1bb4:	88 ee       	ldi	r24, 0xE8	; 232
    1bb6:	93 e0       	ldi	r25, 0x03	; 3
    1bb8:	48 9f       	mul	r20, r24
    1bba:	90 01       	movw	r18, r0
    1bbc:	49 9f       	mul	r20, r25
    1bbe:	30 0d       	add	r19, r0
    1bc0:	58 9f       	mul	r21, r24
    1bc2:	30 0d       	add	r19, r0
    1bc4:	11 24       	eor	r1, r1
    1bc6:	0e c0       	rjmp	.+28     	; 0x1be4 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    1bc8:	98 01       	movw	r18, r16
    1bca:	40 e0       	ldi	r20, 0x00	; 0
    1bcc:	50 e0       	ldi	r21, 0x00	; 0
    1bce:	c7 01       	movw	r24, r14
    1bd0:	b6 01       	movw	r22, r12
    1bd2:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__udivmodsi4>
    1bd6:	30 93 91 01 	sts	0x0191, r19	; 0x800191 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    1bda:	20 93 90 01 	sts	0x0190, r18	; 0x800190 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    1bde:	02 c0       	rjmp	.+4      	; 0x1be4 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    1be0:	20 e0       	ldi	r18, 0x00	; 0
    1be2:	30 e0       	ldi	r19, 0x00	; 0
    1be4:	c9 01       	movw	r24, r18
    1be6:	cd b7       	in	r28, 0x3d	; 61
    1be8:	de b7       	in	r29, 0x3e	; 62
    1bea:	e2 e1       	ldi	r30, 0x12	; 18
    1bec:	0c 94 c3 0e 	jmp	0x1d86	; 0x1d86 <__epilogue_restores__>

00001bf0 <_ZN16PololuQTRSensorsD1Ev>:
    1bf0:	cf 93       	push	r28
    1bf2:	df 93       	push	r29
    1bf4:	ec 01       	movw	r28, r24
    1bf6:	8a 81       	ldd	r24, Y+2	; 0x02
    1bf8:	9b 81       	ldd	r25, Y+3	; 0x03
    1bfa:	00 97       	sbiw	r24, 0x00	; 0
    1bfc:	11 f0       	breq	.+4      	; 0x1c02 <_ZN16PololuQTRSensorsD1Ev+0x12>
    1bfe:	0e 94 76 0f 	call	0x1eec	; 0x1eec <free>
    1c02:	8e 81       	ldd	r24, Y+6	; 0x06
    1c04:	9f 81       	ldd	r25, Y+7	; 0x07
    1c06:	00 97       	sbiw	r24, 0x00	; 0
    1c08:	11 f0       	breq	.+4      	; 0x1c0e <_ZN16PololuQTRSensorsD1Ev+0x1e>
    1c0a:	0e 94 76 0f 	call	0x1eec	; 0x1eec <free>
    1c0e:	88 81       	ld	r24, Y
    1c10:	99 81       	ldd	r25, Y+1	; 0x01
    1c12:	00 97       	sbiw	r24, 0x00	; 0
    1c14:	11 f0       	breq	.+4      	; 0x1c1a <_ZN16PololuQTRSensorsD1Ev+0x2a>
    1c16:	0e 94 76 0f 	call	0x1eec	; 0x1eec <free>
    1c1a:	8c 81       	ldd	r24, Y+4	; 0x04
    1c1c:	9d 81       	ldd	r25, Y+5	; 0x05
    1c1e:	00 97       	sbiw	r24, 0x00	; 0
    1c20:	11 f0       	breq	.+4      	; 0x1c26 <_ZN16PololuQTRSensorsD1Ev+0x36>
    1c22:	0e 94 76 0f 	call	0x1eec	; 0x1eec <free>
    1c26:	df 91       	pop	r29
    1c28:	cf 91       	pop	r28
    1c2a:	08 95       	ret

00001c2c <__udivmodhi4>:
    1c2c:	aa 1b       	sub	r26, r26
    1c2e:	bb 1b       	sub	r27, r27
    1c30:	51 e1       	ldi	r21, 0x11	; 17
    1c32:	07 c0       	rjmp	.+14     	; 0x1c42 <__udivmodhi4_ep>

00001c34 <__udivmodhi4_loop>:
    1c34:	aa 1f       	adc	r26, r26
    1c36:	bb 1f       	adc	r27, r27
    1c38:	a6 17       	cp	r26, r22
    1c3a:	b7 07       	cpc	r27, r23
    1c3c:	10 f0       	brcs	.+4      	; 0x1c42 <__udivmodhi4_ep>
    1c3e:	a6 1b       	sub	r26, r22
    1c40:	b7 0b       	sbc	r27, r23

00001c42 <__udivmodhi4_ep>:
    1c42:	88 1f       	adc	r24, r24
    1c44:	99 1f       	adc	r25, r25
    1c46:	5a 95       	dec	r21
    1c48:	a9 f7       	brne	.-22     	; 0x1c34 <__udivmodhi4_loop>
    1c4a:	80 95       	com	r24
    1c4c:	90 95       	com	r25
    1c4e:	bc 01       	movw	r22, r24
    1c50:	cd 01       	movw	r24, r26
    1c52:	08 95       	ret

00001c54 <__divmodhi4>:
    1c54:	97 fb       	bst	r25, 7
    1c56:	07 2e       	mov	r0, r23
    1c58:	16 f4       	brtc	.+4      	; 0x1c5e <__divmodhi4+0xa>
    1c5a:	00 94       	com	r0
    1c5c:	07 d0       	rcall	.+14     	; 0x1c6c <__divmodhi4_neg1>
    1c5e:	77 fd       	sbrc	r23, 7
    1c60:	09 d0       	rcall	.+18     	; 0x1c74 <__divmodhi4_neg2>
    1c62:	0e 94 16 0e 	call	0x1c2c	; 0x1c2c <__udivmodhi4>
    1c66:	07 fc       	sbrc	r0, 7
    1c68:	05 d0       	rcall	.+10     	; 0x1c74 <__divmodhi4_neg2>
    1c6a:	3e f4       	brtc	.+14     	; 0x1c7a <__divmodhi4_exit>

00001c6c <__divmodhi4_neg1>:
    1c6c:	90 95       	com	r25
    1c6e:	81 95       	neg	r24
    1c70:	9f 4f       	sbci	r25, 0xFF	; 255
    1c72:	08 95       	ret

00001c74 <__divmodhi4_neg2>:
    1c74:	70 95       	com	r23
    1c76:	61 95       	neg	r22
    1c78:	7f 4f       	sbci	r23, 0xFF	; 255

00001c7a <__divmodhi4_exit>:
    1c7a:	08 95       	ret

00001c7c <__udivmodsi4>:
    1c7c:	a1 e2       	ldi	r26, 0x21	; 33
    1c7e:	1a 2e       	mov	r1, r26
    1c80:	aa 1b       	sub	r26, r26
    1c82:	bb 1b       	sub	r27, r27
    1c84:	fd 01       	movw	r30, r26
    1c86:	0d c0       	rjmp	.+26     	; 0x1ca2 <__udivmodsi4_ep>

00001c88 <__udivmodsi4_loop>:
    1c88:	aa 1f       	adc	r26, r26
    1c8a:	bb 1f       	adc	r27, r27
    1c8c:	ee 1f       	adc	r30, r30
    1c8e:	ff 1f       	adc	r31, r31
    1c90:	a2 17       	cp	r26, r18
    1c92:	b3 07       	cpc	r27, r19
    1c94:	e4 07       	cpc	r30, r20
    1c96:	f5 07       	cpc	r31, r21
    1c98:	20 f0       	brcs	.+8      	; 0x1ca2 <__udivmodsi4_ep>
    1c9a:	a2 1b       	sub	r26, r18
    1c9c:	b3 0b       	sbc	r27, r19
    1c9e:	e4 0b       	sbc	r30, r20
    1ca0:	f5 0b       	sbc	r31, r21

00001ca2 <__udivmodsi4_ep>:
    1ca2:	66 1f       	adc	r22, r22
    1ca4:	77 1f       	adc	r23, r23
    1ca6:	88 1f       	adc	r24, r24
    1ca8:	99 1f       	adc	r25, r25
    1caa:	1a 94       	dec	r1
    1cac:	69 f7       	brne	.-38     	; 0x1c88 <__udivmodsi4_loop>
    1cae:	60 95       	com	r22
    1cb0:	70 95       	com	r23
    1cb2:	80 95       	com	r24
    1cb4:	90 95       	com	r25
    1cb6:	9b 01       	movw	r18, r22
    1cb8:	ac 01       	movw	r20, r24
    1cba:	bd 01       	movw	r22, r26
    1cbc:	cf 01       	movw	r24, r30
    1cbe:	08 95       	ret

00001cc0 <__divmodsi4>:
    1cc0:	05 2e       	mov	r0, r21
    1cc2:	97 fb       	bst	r25, 7
    1cc4:	1e f4       	brtc	.+6      	; 0x1ccc <__divmodsi4+0xc>
    1cc6:	00 94       	com	r0
    1cc8:	0e 94 77 0e 	call	0x1cee	; 0x1cee <__negsi2>
    1ccc:	57 fd       	sbrc	r21, 7
    1cce:	07 d0       	rcall	.+14     	; 0x1cde <__divmodsi4_neg2>
    1cd0:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <__udivmodsi4>
    1cd4:	07 fc       	sbrc	r0, 7
    1cd6:	03 d0       	rcall	.+6      	; 0x1cde <__divmodsi4_neg2>
    1cd8:	4e f4       	brtc	.+18     	; 0x1cec <__divmodsi4_exit>
    1cda:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__negsi2>

00001cde <__divmodsi4_neg2>:
    1cde:	50 95       	com	r21
    1ce0:	40 95       	com	r20
    1ce2:	30 95       	com	r19
    1ce4:	21 95       	neg	r18
    1ce6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ce8:	4f 4f       	sbci	r20, 0xFF	; 255
    1cea:	5f 4f       	sbci	r21, 0xFF	; 255

00001cec <__divmodsi4_exit>:
    1cec:	08 95       	ret

00001cee <__negsi2>:
    1cee:	90 95       	com	r25
    1cf0:	80 95       	com	r24
    1cf2:	70 95       	com	r23
    1cf4:	61 95       	neg	r22
    1cf6:	7f 4f       	sbci	r23, 0xFF	; 255
    1cf8:	8f 4f       	sbci	r24, 0xFF	; 255
    1cfa:	9f 4f       	sbci	r25, 0xFF	; 255
    1cfc:	08 95       	ret

00001cfe <__tablejump2__>:
    1cfe:	ee 0f       	add	r30, r30
    1d00:	ff 1f       	adc	r31, r31
    1d02:	05 90       	lpm	r0, Z+
    1d04:	f4 91       	lpm	r31, Z
    1d06:	e0 2d       	mov	r30, r0
    1d08:	09 94       	ijmp

00001d0a <__umulhisi3>:
    1d0a:	a2 9f       	mul	r26, r18
    1d0c:	b0 01       	movw	r22, r0
    1d0e:	b3 9f       	mul	r27, r19
    1d10:	c0 01       	movw	r24, r0
    1d12:	a3 9f       	mul	r26, r19
    1d14:	70 0d       	add	r23, r0
    1d16:	81 1d       	adc	r24, r1
    1d18:	11 24       	eor	r1, r1
    1d1a:	91 1d       	adc	r25, r1
    1d1c:	b2 9f       	mul	r27, r18
    1d1e:	70 0d       	add	r23, r0
    1d20:	81 1d       	adc	r24, r1
    1d22:	11 24       	eor	r1, r1
    1d24:	91 1d       	adc	r25, r1
    1d26:	08 95       	ret

00001d28 <__muluhisi3>:
    1d28:	0e 94 85 0e 	call	0x1d0a	; 0x1d0a <__umulhisi3>
    1d2c:	a5 9f       	mul	r26, r21
    1d2e:	90 0d       	add	r25, r0
    1d30:	b4 9f       	mul	r27, r20
    1d32:	90 0d       	add	r25, r0
    1d34:	a4 9f       	mul	r26, r20
    1d36:	80 0d       	add	r24, r0
    1d38:	91 1d       	adc	r25, r1
    1d3a:	11 24       	eor	r1, r1
    1d3c:	08 95       	ret

00001d3e <__mulshisi3>:
    1d3e:	b7 ff       	sbrs	r27, 7
    1d40:	0c 94 94 0e 	jmp	0x1d28	; 0x1d28 <__muluhisi3>

00001d44 <__mulohisi3>:
    1d44:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <__muluhisi3>
    1d48:	82 1b       	sub	r24, r18
    1d4a:	93 0b       	sbc	r25, r19
    1d4c:	08 95       	ret

00001d4e <__prologue_saves__>:
    1d4e:	2f 92       	push	r2
    1d50:	3f 92       	push	r3
    1d52:	4f 92       	push	r4
    1d54:	5f 92       	push	r5
    1d56:	6f 92       	push	r6
    1d58:	7f 92       	push	r7
    1d5a:	8f 92       	push	r8
    1d5c:	9f 92       	push	r9
    1d5e:	af 92       	push	r10
    1d60:	bf 92       	push	r11
    1d62:	cf 92       	push	r12
    1d64:	df 92       	push	r13
    1d66:	ef 92       	push	r14
    1d68:	ff 92       	push	r15
    1d6a:	0f 93       	push	r16
    1d6c:	1f 93       	push	r17
    1d6e:	cf 93       	push	r28
    1d70:	df 93       	push	r29
    1d72:	cd b7       	in	r28, 0x3d	; 61
    1d74:	de b7       	in	r29, 0x3e	; 62
    1d76:	ca 1b       	sub	r28, r26
    1d78:	db 0b       	sbc	r29, r27
    1d7a:	0f b6       	in	r0, 0x3f	; 63
    1d7c:	f8 94       	cli
    1d7e:	de bf       	out	0x3e, r29	; 62
    1d80:	0f be       	out	0x3f, r0	; 63
    1d82:	cd bf       	out	0x3d, r28	; 61
    1d84:	09 94       	ijmp

00001d86 <__epilogue_restores__>:
    1d86:	2a 88       	ldd	r2, Y+18	; 0x12
    1d88:	39 88       	ldd	r3, Y+17	; 0x11
    1d8a:	48 88       	ldd	r4, Y+16	; 0x10
    1d8c:	5f 84       	ldd	r5, Y+15	; 0x0f
    1d8e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1d90:	7d 84       	ldd	r7, Y+13	; 0x0d
    1d92:	8c 84       	ldd	r8, Y+12	; 0x0c
    1d94:	9b 84       	ldd	r9, Y+11	; 0x0b
    1d96:	aa 84       	ldd	r10, Y+10	; 0x0a
    1d98:	b9 84       	ldd	r11, Y+9	; 0x09
    1d9a:	c8 84       	ldd	r12, Y+8	; 0x08
    1d9c:	df 80       	ldd	r13, Y+7	; 0x07
    1d9e:	ee 80       	ldd	r14, Y+6	; 0x06
    1da0:	fd 80       	ldd	r15, Y+5	; 0x05
    1da2:	0c 81       	ldd	r16, Y+4	; 0x04
    1da4:	1b 81       	ldd	r17, Y+3	; 0x03
    1da6:	aa 81       	ldd	r26, Y+2	; 0x02
    1da8:	b9 81       	ldd	r27, Y+1	; 0x01
    1daa:	ce 0f       	add	r28, r30
    1dac:	d1 1d       	adc	r29, r1
    1dae:	0f b6       	in	r0, 0x3f	; 63
    1db0:	f8 94       	cli
    1db2:	de bf       	out	0x3e, r29	; 62
    1db4:	0f be       	out	0x3f, r0	; 63
    1db6:	cd bf       	out	0x3d, r28	; 61
    1db8:	ed 01       	movw	r28, r26
    1dba:	08 95       	ret

00001dbc <malloc>:
    1dbc:	0f 93       	push	r16
    1dbe:	1f 93       	push	r17
    1dc0:	cf 93       	push	r28
    1dc2:	df 93       	push	r29
    1dc4:	82 30       	cpi	r24, 0x02	; 2
    1dc6:	91 05       	cpc	r25, r1
    1dc8:	10 f4       	brcc	.+4      	; 0x1dce <malloc+0x12>
    1dca:	82 e0       	ldi	r24, 0x02	; 2
    1dcc:	90 e0       	ldi	r25, 0x00	; 0
    1dce:	e0 91 a7 01 	lds	r30, 0x01A7	; 0x8001a7 <__flp>
    1dd2:	f0 91 a8 01 	lds	r31, 0x01A8	; 0x8001a8 <__flp+0x1>
    1dd6:	20 e0       	ldi	r18, 0x00	; 0
    1dd8:	30 e0       	ldi	r19, 0x00	; 0
    1dda:	a0 e0       	ldi	r26, 0x00	; 0
    1ddc:	b0 e0       	ldi	r27, 0x00	; 0
    1dde:	30 97       	sbiw	r30, 0x00	; 0
    1de0:	19 f1       	breq	.+70     	; 0x1e28 <malloc+0x6c>
    1de2:	40 81       	ld	r20, Z
    1de4:	51 81       	ldd	r21, Z+1	; 0x01
    1de6:	02 81       	ldd	r16, Z+2	; 0x02
    1de8:	13 81       	ldd	r17, Z+3	; 0x03
    1dea:	48 17       	cp	r20, r24
    1dec:	59 07       	cpc	r21, r25
    1dee:	c8 f0       	brcs	.+50     	; 0x1e22 <malloc+0x66>
    1df0:	84 17       	cp	r24, r20
    1df2:	95 07       	cpc	r25, r21
    1df4:	69 f4       	brne	.+26     	; 0x1e10 <malloc+0x54>
    1df6:	10 97       	sbiw	r26, 0x00	; 0
    1df8:	31 f0       	breq	.+12     	; 0x1e06 <malloc+0x4a>
    1dfa:	12 96       	adiw	r26, 0x02	; 2
    1dfc:	0c 93       	st	X, r16
    1dfe:	12 97       	sbiw	r26, 0x02	; 2
    1e00:	13 96       	adiw	r26, 0x03	; 3
    1e02:	1c 93       	st	X, r17
    1e04:	27 c0       	rjmp	.+78     	; 0x1e54 <malloc+0x98>
    1e06:	00 93 a7 01 	sts	0x01A7, r16	; 0x8001a7 <__flp>
    1e0a:	10 93 a8 01 	sts	0x01A8, r17	; 0x8001a8 <__flp+0x1>
    1e0e:	22 c0       	rjmp	.+68     	; 0x1e54 <malloc+0x98>
    1e10:	21 15       	cp	r18, r1
    1e12:	31 05       	cpc	r19, r1
    1e14:	19 f0       	breq	.+6      	; 0x1e1c <malloc+0x60>
    1e16:	42 17       	cp	r20, r18
    1e18:	53 07       	cpc	r21, r19
    1e1a:	18 f4       	brcc	.+6      	; 0x1e22 <malloc+0x66>
    1e1c:	9a 01       	movw	r18, r20
    1e1e:	bd 01       	movw	r22, r26
    1e20:	ef 01       	movw	r28, r30
    1e22:	df 01       	movw	r26, r30
    1e24:	f8 01       	movw	r30, r16
    1e26:	db cf       	rjmp	.-74     	; 0x1dde <malloc+0x22>
    1e28:	21 15       	cp	r18, r1
    1e2a:	31 05       	cpc	r19, r1
    1e2c:	f9 f0       	breq	.+62     	; 0x1e6c <malloc+0xb0>
    1e2e:	28 1b       	sub	r18, r24
    1e30:	39 0b       	sbc	r19, r25
    1e32:	24 30       	cpi	r18, 0x04	; 4
    1e34:	31 05       	cpc	r19, r1
    1e36:	80 f4       	brcc	.+32     	; 0x1e58 <malloc+0x9c>
    1e38:	8a 81       	ldd	r24, Y+2	; 0x02
    1e3a:	9b 81       	ldd	r25, Y+3	; 0x03
    1e3c:	61 15       	cp	r22, r1
    1e3e:	71 05       	cpc	r23, r1
    1e40:	21 f0       	breq	.+8      	; 0x1e4a <malloc+0x8e>
    1e42:	fb 01       	movw	r30, r22
    1e44:	93 83       	std	Z+3, r25	; 0x03
    1e46:	82 83       	std	Z+2, r24	; 0x02
    1e48:	04 c0       	rjmp	.+8      	; 0x1e52 <malloc+0x96>
    1e4a:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <__flp+0x1>
    1e4e:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <__flp>
    1e52:	fe 01       	movw	r30, r28
    1e54:	32 96       	adiw	r30, 0x02	; 2
    1e56:	44 c0       	rjmp	.+136    	; 0x1ee0 <malloc+0x124>
    1e58:	fe 01       	movw	r30, r28
    1e5a:	e2 0f       	add	r30, r18
    1e5c:	f3 1f       	adc	r31, r19
    1e5e:	81 93       	st	Z+, r24
    1e60:	91 93       	st	Z+, r25
    1e62:	22 50       	subi	r18, 0x02	; 2
    1e64:	31 09       	sbc	r19, r1
    1e66:	39 83       	std	Y+1, r19	; 0x01
    1e68:	28 83       	st	Y, r18
    1e6a:	3a c0       	rjmp	.+116    	; 0x1ee0 <malloc+0x124>
    1e6c:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <__brkval>
    1e70:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <__brkval+0x1>
    1e74:	23 2b       	or	r18, r19
    1e76:	41 f4       	brne	.+16     	; 0x1e88 <malloc+0xcc>
    1e78:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    1e7c:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    1e80:	30 93 a6 01 	sts	0x01A6, r19	; 0x8001a6 <__brkval+0x1>
    1e84:	20 93 a5 01 	sts	0x01A5, r18	; 0x8001a5 <__brkval>
    1e88:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    1e8c:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    1e90:	21 15       	cp	r18, r1
    1e92:	31 05       	cpc	r19, r1
    1e94:	41 f4       	brne	.+16     	; 0x1ea6 <malloc+0xea>
    1e96:	2d b7       	in	r18, 0x3d	; 61
    1e98:	3e b7       	in	r19, 0x3e	; 62
    1e9a:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    1e9e:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    1ea2:	24 1b       	sub	r18, r20
    1ea4:	35 0b       	sbc	r19, r21
    1ea6:	e0 91 a5 01 	lds	r30, 0x01A5	; 0x8001a5 <__brkval>
    1eaa:	f0 91 a6 01 	lds	r31, 0x01A6	; 0x8001a6 <__brkval+0x1>
    1eae:	e2 17       	cp	r30, r18
    1eb0:	f3 07       	cpc	r31, r19
    1eb2:	a0 f4       	brcc	.+40     	; 0x1edc <malloc+0x120>
    1eb4:	2e 1b       	sub	r18, r30
    1eb6:	3f 0b       	sbc	r19, r31
    1eb8:	28 17       	cp	r18, r24
    1eba:	39 07       	cpc	r19, r25
    1ebc:	78 f0       	brcs	.+30     	; 0x1edc <malloc+0x120>
    1ebe:	ac 01       	movw	r20, r24
    1ec0:	4e 5f       	subi	r20, 0xFE	; 254
    1ec2:	5f 4f       	sbci	r21, 0xFF	; 255
    1ec4:	24 17       	cp	r18, r20
    1ec6:	35 07       	cpc	r19, r21
    1ec8:	48 f0       	brcs	.+18     	; 0x1edc <malloc+0x120>
    1eca:	4e 0f       	add	r20, r30
    1ecc:	5f 1f       	adc	r21, r31
    1ece:	50 93 a6 01 	sts	0x01A6, r21	; 0x8001a6 <__brkval+0x1>
    1ed2:	40 93 a5 01 	sts	0x01A5, r20	; 0x8001a5 <__brkval>
    1ed6:	81 93       	st	Z+, r24
    1ed8:	91 93       	st	Z+, r25
    1eda:	02 c0       	rjmp	.+4      	; 0x1ee0 <malloc+0x124>
    1edc:	e0 e0       	ldi	r30, 0x00	; 0
    1ede:	f0 e0       	ldi	r31, 0x00	; 0
    1ee0:	cf 01       	movw	r24, r30
    1ee2:	df 91       	pop	r29
    1ee4:	cf 91       	pop	r28
    1ee6:	1f 91       	pop	r17
    1ee8:	0f 91       	pop	r16
    1eea:	08 95       	ret

00001eec <free>:
    1eec:	cf 93       	push	r28
    1eee:	df 93       	push	r29
    1ef0:	00 97       	sbiw	r24, 0x00	; 0
    1ef2:	09 f4       	brne	.+2      	; 0x1ef6 <free+0xa>
    1ef4:	81 c0       	rjmp	.+258    	; 0x1ff8 <free+0x10c>
    1ef6:	fc 01       	movw	r30, r24
    1ef8:	32 97       	sbiw	r30, 0x02	; 2
    1efa:	13 82       	std	Z+3, r1	; 0x03
    1efc:	12 82       	std	Z+2, r1	; 0x02
    1efe:	a0 91 a7 01 	lds	r26, 0x01A7	; 0x8001a7 <__flp>
    1f02:	b0 91 a8 01 	lds	r27, 0x01A8	; 0x8001a8 <__flp+0x1>
    1f06:	10 97       	sbiw	r26, 0x00	; 0
    1f08:	81 f4       	brne	.+32     	; 0x1f2a <free+0x3e>
    1f0a:	20 81       	ld	r18, Z
    1f0c:	31 81       	ldd	r19, Z+1	; 0x01
    1f0e:	82 0f       	add	r24, r18
    1f10:	93 1f       	adc	r25, r19
    1f12:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <__brkval>
    1f16:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <__brkval+0x1>
    1f1a:	28 17       	cp	r18, r24
    1f1c:	39 07       	cpc	r19, r25
    1f1e:	51 f5       	brne	.+84     	; 0x1f74 <free+0x88>
    1f20:	f0 93 a6 01 	sts	0x01A6, r31	; 0x8001a6 <__brkval+0x1>
    1f24:	e0 93 a5 01 	sts	0x01A5, r30	; 0x8001a5 <__brkval>
    1f28:	67 c0       	rjmp	.+206    	; 0x1ff8 <free+0x10c>
    1f2a:	ed 01       	movw	r28, r26
    1f2c:	20 e0       	ldi	r18, 0x00	; 0
    1f2e:	30 e0       	ldi	r19, 0x00	; 0
    1f30:	ce 17       	cp	r28, r30
    1f32:	df 07       	cpc	r29, r31
    1f34:	40 f4       	brcc	.+16     	; 0x1f46 <free+0x5a>
    1f36:	4a 81       	ldd	r20, Y+2	; 0x02
    1f38:	5b 81       	ldd	r21, Y+3	; 0x03
    1f3a:	9e 01       	movw	r18, r28
    1f3c:	41 15       	cp	r20, r1
    1f3e:	51 05       	cpc	r21, r1
    1f40:	f1 f0       	breq	.+60     	; 0x1f7e <free+0x92>
    1f42:	ea 01       	movw	r28, r20
    1f44:	f5 cf       	rjmp	.-22     	; 0x1f30 <free+0x44>
    1f46:	d3 83       	std	Z+3, r29	; 0x03
    1f48:	c2 83       	std	Z+2, r28	; 0x02
    1f4a:	40 81       	ld	r20, Z
    1f4c:	51 81       	ldd	r21, Z+1	; 0x01
    1f4e:	84 0f       	add	r24, r20
    1f50:	95 1f       	adc	r25, r21
    1f52:	c8 17       	cp	r28, r24
    1f54:	d9 07       	cpc	r29, r25
    1f56:	59 f4       	brne	.+22     	; 0x1f6e <free+0x82>
    1f58:	88 81       	ld	r24, Y
    1f5a:	99 81       	ldd	r25, Y+1	; 0x01
    1f5c:	84 0f       	add	r24, r20
    1f5e:	95 1f       	adc	r25, r21
    1f60:	02 96       	adiw	r24, 0x02	; 2
    1f62:	91 83       	std	Z+1, r25	; 0x01
    1f64:	80 83       	st	Z, r24
    1f66:	8a 81       	ldd	r24, Y+2	; 0x02
    1f68:	9b 81       	ldd	r25, Y+3	; 0x03
    1f6a:	93 83       	std	Z+3, r25	; 0x03
    1f6c:	82 83       	std	Z+2, r24	; 0x02
    1f6e:	21 15       	cp	r18, r1
    1f70:	31 05       	cpc	r19, r1
    1f72:	29 f4       	brne	.+10     	; 0x1f7e <free+0x92>
    1f74:	f0 93 a8 01 	sts	0x01A8, r31	; 0x8001a8 <__flp+0x1>
    1f78:	e0 93 a7 01 	sts	0x01A7, r30	; 0x8001a7 <__flp>
    1f7c:	3d c0       	rjmp	.+122    	; 0x1ff8 <free+0x10c>
    1f7e:	e9 01       	movw	r28, r18
    1f80:	fb 83       	std	Y+3, r31	; 0x03
    1f82:	ea 83       	std	Y+2, r30	; 0x02
    1f84:	49 91       	ld	r20, Y+
    1f86:	59 91       	ld	r21, Y+
    1f88:	c4 0f       	add	r28, r20
    1f8a:	d5 1f       	adc	r29, r21
    1f8c:	ec 17       	cp	r30, r28
    1f8e:	fd 07       	cpc	r31, r29
    1f90:	61 f4       	brne	.+24     	; 0x1faa <free+0xbe>
    1f92:	80 81       	ld	r24, Z
    1f94:	91 81       	ldd	r25, Z+1	; 0x01
    1f96:	84 0f       	add	r24, r20
    1f98:	95 1f       	adc	r25, r21
    1f9a:	02 96       	adiw	r24, 0x02	; 2
    1f9c:	e9 01       	movw	r28, r18
    1f9e:	99 83       	std	Y+1, r25	; 0x01
    1fa0:	88 83       	st	Y, r24
    1fa2:	82 81       	ldd	r24, Z+2	; 0x02
    1fa4:	93 81       	ldd	r25, Z+3	; 0x03
    1fa6:	9b 83       	std	Y+3, r25	; 0x03
    1fa8:	8a 83       	std	Y+2, r24	; 0x02
    1faa:	e0 e0       	ldi	r30, 0x00	; 0
    1fac:	f0 e0       	ldi	r31, 0x00	; 0
    1fae:	12 96       	adiw	r26, 0x02	; 2
    1fb0:	8d 91       	ld	r24, X+
    1fb2:	9c 91       	ld	r25, X
    1fb4:	13 97       	sbiw	r26, 0x03	; 3
    1fb6:	00 97       	sbiw	r24, 0x00	; 0
    1fb8:	19 f0       	breq	.+6      	; 0x1fc0 <free+0xd4>
    1fba:	fd 01       	movw	r30, r26
    1fbc:	dc 01       	movw	r26, r24
    1fbe:	f7 cf       	rjmp	.-18     	; 0x1fae <free+0xc2>
    1fc0:	8d 91       	ld	r24, X+
    1fc2:	9c 91       	ld	r25, X
    1fc4:	11 97       	sbiw	r26, 0x01	; 1
    1fc6:	9d 01       	movw	r18, r26
    1fc8:	2e 5f       	subi	r18, 0xFE	; 254
    1fca:	3f 4f       	sbci	r19, 0xFF	; 255
    1fcc:	82 0f       	add	r24, r18
    1fce:	93 1f       	adc	r25, r19
    1fd0:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <__brkval>
    1fd4:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <__brkval+0x1>
    1fd8:	28 17       	cp	r18, r24
    1fda:	39 07       	cpc	r19, r25
    1fdc:	69 f4       	brne	.+26     	; 0x1ff8 <free+0x10c>
    1fde:	30 97       	sbiw	r30, 0x00	; 0
    1fe0:	29 f4       	brne	.+10     	; 0x1fec <free+0x100>
    1fe2:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <__flp+0x1>
    1fe6:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <__flp>
    1fea:	02 c0       	rjmp	.+4      	; 0x1ff0 <free+0x104>
    1fec:	13 82       	std	Z+3, r1	; 0x03
    1fee:	12 82       	std	Z+2, r1	; 0x02
    1ff0:	b0 93 a6 01 	sts	0x01A6, r27	; 0x8001a6 <__brkval+0x1>
    1ff4:	a0 93 a5 01 	sts	0x01A5, r26	; 0x8001a5 <__brkval>
    1ff8:	df 91       	pop	r29
    1ffa:	cf 91       	pop	r28
    1ffc:	08 95       	ret

00001ffe <__do_global_dtors>:
    1ffe:	10 e0       	ldi	r17, 0x00	; 0
    2000:	c4 e3       	ldi	r28, 0x34	; 52
    2002:	d0 e0       	ldi	r29, 0x00	; 0
    2004:	04 c0       	rjmp	.+8      	; 0x200e <__do_global_dtors+0x10>
    2006:	fe 01       	movw	r30, r28
    2008:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <__tablejump2__>
    200c:	21 96       	adiw	r28, 0x01	; 1
    200e:	c5 33       	cpi	r28, 0x35	; 53
    2010:	d1 07       	cpc	r29, r17
    2012:	c9 f7       	brne	.-14     	; 0x2006 <__do_global_dtors+0x8>
    2014:	f8 94       	cli

00002016 <__stop_program>:
    2016:	ff cf       	rjmp	.-2      	; 0x2016 <__stop_program>
