
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000094  00800100  00003c88  00003d1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003c88  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000008b  00800194  00800194  00003db0  2**0
                  ALLOC
  3 .stab         00007998  00000000  00000000  00003db0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000a086  00000000  00000000  0000b748  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  000157ce  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00015810  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 000001c0  00000000  00000000  00015850  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   0000351a  00000000  00000000  00015a10  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000011de  00000000  00000000  00018f2a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   000020db  00000000  00000000  0001a108  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000570  00000000  00000000  0001c1e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000a04  00000000  00000000  0001c754  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    000016d7  00000000  00000000  0001d158  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000001d8  00000000  00000000  0001e82f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 23 01 	jmp	0x246	; 0x246 <__dtors_end>
       4:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
       8:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
       c:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      10:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      14:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      18:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      1c:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      20:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      24:	0c 94 5b 16 	jmp	0x2cb6	; 0x2cb6 <__vector_9>
      28:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      2c:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      30:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      34:	0c 94 f2 11 	jmp	0x23e4	; 0x23e4 <__vector_13>
      38:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      3c:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      40:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      44:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      48:	0c 94 6a 15 	jmp	0x2ad4	; 0x2ad4 <__vector_18>
      4c:	0c 94 36 16 	jmp	0x2c6c	; 0x2c6c <__vector_19>
      50:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      54:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      58:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      5c:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      60:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      64:	0c 94 40 01 	jmp	0x280	; 0x280 <__bad_interrupt>
      68:	e2 07       	cpc	r30, r18
      6a:	10 08       	sbc	r1, r0
      6c:	7b 08       	sbc	r7, r11
      6e:	e6 07       	cpc	r30, r22
      70:	f5 07       	cpc	r31, r21
      72:	04 08       	sbc	r0, r4
      74:	e6 07       	cpc	r30, r22
      76:	e6 07       	cpc	r30, r22
      78:	e6 07       	cpc	r30, r22

0000007a <__trampolines_end>:
      7a:	21 20       	and	r2, r1
      7c:	4f 35       	cpi	r20, 0x5F	; 95
      7e:	20 4c       	sbci	r18, 0xC0	; 192
      80:	31 36       	cpi	r19, 0x61	; 97
      82:	20 61       	ori	r18, 0x10	; 16
      84:	67 61       	ori	r22, 0x17	; 23
      86:	66 61       	ori	r22, 0x16	; 22
      88:	65 61       	ori	r22, 0x15	; 21
      8a:	20 64       	ori	r18, 0x40	; 64
      8c:	61 63       	ori	r22, 0x31	; 49
      8e:	2b 61       	ori	r18, 0x1B	; 27
      90:	64 61       	ori	r22, 0x14	; 20
      92:	65 61       	ori	r22, 0x15	; 21
      94:	20 66       	ori	r18, 0x60	; 96
      96:	61 3c       	cpi	r22, 0xC1	; 193
      98:	61 61       	ori	r22, 0x11	; 17
      9a:	3c 62       	ori	r19, 0x2C	; 44
      9c:	61 63       	ori	r22, 0x31	; 49
      9e:	23 61       	ori	r18, 0x13	; 19
      a0:	20 64       	ori	r18, 0x40	; 64
      a2:	61 63       	ori	r22, 0x31	; 49
      a4:	23 61       	ori	r18, 0x13	; 19
      a6:	64 61       	ori	r22, 0x14	; 20
      a8:	65 61       	ori	r22, 0x15	; 21
      aa:	20 66       	ori	r18, 0x60	; 96
      ac:	4f 36       	cpi	r20, 0x6F	; 111
      ae:	20 64       	ori	r18, 0x40	; 64
      b0:	63 64       	ori	r22, 0x43	; 67
      b2:	3c 62       	ori	r19, 0x2C	; 44
      b4:	2d 64       	ori	r18, 0x4D	; 77
      b6:	3c 61       	ori	r19, 0x1C	; 28
      b8:	64 3c       	cpi	r22, 0xC4	; 196
      ba:	67 20       	and	r6, r7
      bc:	64 3c       	cpi	r22, 0xC4	; 196
      be:	66 2b       	or	r22, r22
      c0:	64 3c       	cpi	r22, 0xC4	; 196
      c2:	67 64       	ori	r22, 0x47	; 71
      c4:	3c 61       	ori	r19, 0x1C	; 28
      c6:	64 3c       	cpi	r22, 0xC4	; 196
      c8:	62 2d       	mov	r22, r2
      ca:	20 64       	ori	r18, 0x40	; 64
      cc:	3c 64       	ori	r19, 0x4C	; 76
      ce:	64 3c       	cpi	r22, 0xC4	; 196
      d0:	65 64       	ori	r22, 0x45	; 69
      d2:	3c 66       	ori	r19, 0x6C	; 108
      d4:	2b 64       	ori	r18, 0x4B	; 75
      d6:	3c 67       	ori	r19, 0x7C	; 124
      d8:	20 64       	ori	r18, 0x40	; 64
      da:	3c 66       	ori	r19, 0x6C	; 108
      dc:	2b 64       	ori	r18, 0x4B	; 75
      de:	3c 67       	ori	r19, 0x7C	; 124
      e0:	64 3c       	cpi	r22, 0xC4	; 196
      e2:	61 64       	ori	r22, 0x41	; 65
      e4:	4c 38       	cpi	r20, 0x8C	; 140
      e6:	20 4d       	sbci	r18, 0xD0	; 208
      e8:	53 20       	and	r5, r3
      ea:	3c 62       	ori	r19, 0x2C	; 44
      ec:	2d 64       	ori	r18, 0x4D	; 77
      ee:	3c 62       	ori	r19, 0x2C	; 44
      f0:	2d 64       	ori	r18, 0x4D	; 77
      f2:	20 4d       	sbci	r18, 0xD0	; 208
      f4:	4c 65       	ori	r20, 0x5C	; 92
      f6:	2d 3c       	cpi	r18, 0xCD	; 205
      f8:	67 65       	ori	r22, 0x57	; 87
      fa:	2d 3c       	cpi	r18, 0xCD	; 205
      fc:	67 20       	and	r6, r7
      fe:	4d 53       	subi	r20, 0x3D	; 61
     100:	63 3c       	cpi	r22, 0xC3	; 195
     102:	61 63       	ori	r22, 0x31	; 49
     104:	3c 61       	ori	r19, 0x1C	; 28
     106:	20 4d       	sbci	r18, 0xD0	; 208
     108:	4c 20       	and	r4, r12
     10a:	64 3c       	cpi	r22, 0xC4	; 196
     10c:	66 64       	ori	r22, 0x46	; 70
     10e:	3c 66       	ori	r19, 0x6C	; 108
     110:	20 4f       	sbci	r18, 0xF0	; 240
     112:	35 20       	and	r3, r5
     114:	4d 53       	subi	r20, 0x3D	; 61
     116:	20 62       	ori	r18, 0x20	; 32
     118:	2d 67       	ori	r18, 0x7D	; 125
     11a:	62 2d       	mov	r22, r2
     11c:	67 4d       	sbci	r22, 0xD7	; 215
     11e:	4c 20       	and	r4, r12
     120:	3e 63       	ori	r19, 0x3E	; 62
     122:	23 65       	ori	r18, 0x53	; 83
     124:	3e 63       	ori	r19, 0x3E	; 62
     126:	23 65       	ori	r18, 0x53	; 83
     128:	20 4d       	sbci	r18, 0xD0	; 208
     12a:	53 20       	and	r5, r3
     12c:	61 66       	ori	r22, 0x61	; 97
     12e:	61 66       	ori	r22, 0x61	; 97
     130:	20 4d       	sbci	r18, 0xD0	; 208
     132:	4c 20       	and	r4, r12
     134:	67 63       	ori	r22, 0x37	; 55
     136:	23 67       	ori	r18, 0x73	; 115
     138:	63 23       	and	r22, r19
     13a:	20 4d       	sbci	r18, 0xD0	; 208
     13c:	53 20       	and	r5, r3
     13e:	66 64       	ori	r22, 0x46	; 70
     140:	66 64       	ori	r22, 0x46	; 70
     142:	20 4d       	sbci	r18, 0xD0	; 208
     144:	4c 20       	and	r4, r12
     146:	65 3c       	cpi	r22, 0xC5	; 197
     148:	62 2d       	mov	r22, r2
     14a:	65 3c       	cpi	r22, 0xC5	; 197
     14c:	62 2d       	mov	r22, r2
     14e:	4f 36       	cpi	r20, 0x6F	; 111
     150:	20 4c       	sbci	r18, 0xC0	; 192
     152:	31 36       	cpi	r19, 0x61	; 97
     154:	72 61       	ori	r23, 0x12	; 18
     156:	67 61       	ori	r22, 0x17	; 23
     158:	66 61       	ori	r22, 0x16	; 22
     15a:	65 61       	ori	r22, 0x15	; 21
     15c:	20 64       	ori	r18, 0x40	; 64
     15e:	61 63       	ori	r22, 0x31	; 49
     160:	23 61       	ori	r18, 0x13	; 19
     162:	64 61       	ori	r22, 0x14	; 20
     164:	65 61       	ori	r22, 0x15	; 21
     166:	20 66       	ori	r18, 0x60	; 96
     168:	61 3c       	cpi	r22, 0xC1	; 193
     16a:	61 61       	ori	r22, 0x11	; 17
     16c:	3c 62       	ori	r19, 0x2C	; 44
     16e:	61 63       	ori	r22, 0x31	; 49
     170:	23 61       	ori	r18, 0x13	; 19
     172:	20 64       	ori	r18, 0x40	; 64
     174:	61 63       	ori	r22, 0x31	; 49
     176:	23 61       	ori	r18, 0x13	; 19
     178:	64 61       	ori	r22, 0x14	; 20
     17a:	65 61       	ori	r22, 0x15	; 21
     17c:	20 66       	ori	r18, 0x60	; 96
     17e:	61 65       	ori	r22, 0x51	; 81
     180:	61 64       	ori	r22, 0x41	; 65
     182:	61 63       	ori	r22, 0x31	; 49
     184:	61 3c       	cpi	r22, 0xC1	; 193
     186:	62 2d       	mov	r22, r2
     188:	61 63       	ori	r22, 0x31	; 49
     18a:	61 64       	ori	r22, 0x41	; 65
     18c:	67 3c       	cpi	r22, 0xC7	; 199
     18e:	62 2d       	mov	r22, r2
     190:	67 20       	and	r6, r7
     192:	65 67       	ori	r22, 0x75	; 117
     194:	64 67       	ori	r22, 0x74	; 116
     196:	63 67       	ori	r22, 0x73	; 115
     198:	3c 62       	ori	r19, 0x2C	; 44
     19a:	2d 67       	ori	r18, 0x7D	; 125
     19c:	20 3c       	cpi	r18, 0xC0	; 192
     19e:	61 67       	ori	r22, 0x71	; 113
     1a0:	3c 62       	ori	r19, 0x2C	; 44
     1a2:	2d 67       	ori	r18, 0x7D	; 125
     1a4:	63 66       	ori	r22, 0x63	; 99
     1a6:	3c 61       	ori	r19, 0x1C	; 28
     1a8:	66 20       	and	r6, r6
     1aa:	64 66       	ori	r22, 0x64	; 100
     1ac:	63 66       	ori	r22, 0x63	; 99
     1ae:	3c 62       	ori	r19, 0x2C	; 44
     1b0:	2d 66       	ori	r18, 0x6D	; 109
     1b2:	3c 61       	ori	r19, 0x1C	; 28
     1b4:	66 3c       	cpi	r22, 0xC6	; 198
     1b6:	67 66       	ori	r22, 0x67	; 103
     1b8:	3c 61       	ori	r19, 0x1C	; 28
     1ba:	66 3c       	cpi	r22, 0xC6	; 198
     1bc:	62 2d       	mov	r22, r2
     1be:	65 3c       	cpi	r22, 0xC5	; 197
     1c0:	67 65       	ori	r22, 0x57	; 87
     1c2:	20 63       	ori	r18, 0x30	; 48
     1c4:	23 65       	ori	r18, 0x53	; 83
     1c6:	3c 62       	ori	r19, 0x2C	; 44
     1c8:	2d 65       	ori	r18, 0x5D	; 93
     1ca:	3c 61       	ori	r19, 0x1C	; 28
     1cc:	65 3c       	cpi	r22, 0xC5	; 197
     1ce:	67 65       	ori	r22, 0x57	; 87
     1d0:	20 3c       	cpi	r18, 0xC0	; 192
     1d2:	66 65       	ori	r22, 0x56	; 86
     1d4:	3c 67       	ori	r19, 0x7C	; 124
     1d6:	65 3c       	cpi	r22, 0xC5	; 197
     1d8:	61 64       	ori	r22, 0x41	; 65
     1da:	3c 66       	ori	r19, 0x6C	; 108
     1dc:	64 4f       	sbci	r22, 0xF4	; 244
     1de:	35 20       	and	r3, r5
     1e0:	65 3e       	cpi	r22, 0xE5	; 229
     1e2:	65 65       	ori	r22, 0x55	; 85
     1e4:	3e 65       	ori	r19, 0x5E	; 94
     1e6:	66 3e       	cpi	r22, 0xE6	; 230
     1e8:	64 66       	ori	r22, 0x64	; 100
     1ea:	3e 64       	ori	r19, 0x4E	; 78
     1ec:	20 62       	ori	r18, 0x20	; 32
     1ee:	2d 3e       	cpi	r18, 0xED	; 237
     1f0:	63 23       	and	r22, r19
     1f2:	62 2d       	mov	r22, r2
     1f4:	3e 63       	ori	r19, 0x3E	; 62
     1f6:	23 61       	ori	r18, 0x13	; 19
     1f8:	3e 64       	ori	r19, 0x4E	; 78
     1fa:	66 3e       	cpi	r22, 0xE6	; 230
     1fc:	64 20       	and	r6, r4
     1fe:	65 3e       	cpi	r22, 0xE5	; 229
     200:	65 65       	ori	r22, 0x55	; 85
     202:	3e 65       	ori	r19, 0x5E	; 94
     204:	66 3e       	cpi	r22, 0xE6	; 230
     206:	64 66       	ori	r22, 0x64	; 100
     208:	3e 64       	ori	r19, 0x4E	; 78
     20a:	65 3e       	cpi	r22, 0xE5	; 229
     20c:	64 3e       	cpi	r22, 0xE4	; 228
     20e:	63 23       	and	r22, r19
     210:	3e 64       	ori	r19, 0x4E	; 78
     212:	62 3e       	cpi	r22, 0xE2	; 226
     214:	64 3e       	cpi	r22, 0xE4	; 228
     216:	63 23       	and	r22, r19
     218:	62 20       	and	r6, r2
     21a:	3e 63       	ori	r19, 0x3E	; 62
     21c:	23 61       	ori	r18, 0x13	; 19
     21e:	67 61       	ori	r22, 0x17	; 23
     220:	65 67       	ori	r22, 0x75	; 117
     222:	66 65       	ori	r22, 0x56	; 86
     224:	20 66       	ori	r18, 0x60	; 96
     226:	20 4f       	sbci	r18, 0xF0	; 240
     228:	36 20       	and	r3, r6
     22a:	64 63       	ori	r22, 0x34	; 52
     22c:	23 64       	ori	r18, 0x43	; 67
     22e:	66 64       	ori	r22, 0x46	; 70
     230:	63 23       	and	r22, r19
     232:	3c 62       	ori	r19, 0x2C	; 44
     234:	20 63       	ori	r18, 0x30	; 48
     236:	23 34       	cpi	r18, 0x43	; 67
	...

00000239 <welcome>:
     239:	3e 67 33 32 3e 3e 63 33 32 00 00                    >g32>>c32..

00000244 <__ctors_end>:
     244:	26 17       	cp	r18, r22

00000246 <__dtors_end>:
     246:	11 24       	eor	r1, r1
     248:	1f be       	out	0x3f, r1	; 63
     24a:	cf ef       	ldi	r28, 0xFF	; 255
     24c:	d8 e0       	ldi	r29, 0x08	; 8
     24e:	de bf       	out	0x3e, r29	; 62
     250:	cd bf       	out	0x3d, r28	; 61

00000252 <__do_copy_data>:
     252:	11 e0       	ldi	r17, 0x01	; 1
     254:	a0 e0       	ldi	r26, 0x00	; 0
     256:	b1 e0       	ldi	r27, 0x01	; 1
     258:	e8 e8       	ldi	r30, 0x88	; 136
     25a:	fc e3       	ldi	r31, 0x3C	; 60
     25c:	02 c0       	rjmp	.+4      	; 0x262 <__do_copy_data+0x10>
     25e:	05 90       	lpm	r0, Z+
     260:	0d 92       	st	X+, r0
     262:	a4 39       	cpi	r26, 0x94	; 148
     264:	b1 07       	cpc	r27, r17
     266:	d9 f7       	brne	.-10     	; 0x25e <__do_copy_data+0xc>

00000268 <__do_clear_bss>:
     268:	22 e0       	ldi	r18, 0x02	; 2
     26a:	a4 e9       	ldi	r26, 0x94	; 148
     26c:	b1 e0       	ldi	r27, 0x01	; 1
     26e:	01 c0       	rjmp	.+2      	; 0x272 <.do_clear_bss_start>

00000270 <.do_clear_bss_loop>:
     270:	1d 92       	st	X+, r1

00000272 <.do_clear_bss_start>:
     272:	af 31       	cpi	r26, 0x1F	; 31
     274:	b2 07       	cpc	r27, r18
     276:	e1 f7       	brne	.-8      	; 0x270 <.do_clear_bss_loop>
     278:	0e 94 4e 04 	call	0x89c	; 0x89c <main>
     27c:	0c 94 37 1e 	jmp	0x3c6e	; 0x3c6e <__do_global_dtors>

00000280 <__bad_interrupt>:
     280:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000284 <filllocationarrays>:


#define START 010
#define STOP 101

void filllocationarrays(Communications *self){
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	cd b7       	in	r28, 0x3d	; 61
     28a:	de b7       	in	r29, 0x3e	; 62
     28c:	e2 97       	sbiw	r28, 0x32	; 50
     28e:	0f b6       	in	r0, 0x3f	; 63
     290:	f8 94       	cli
     292:	de bf       	out	0x3e, r29	; 62
     294:	0f be       	out	0x3f, r0	; 63
     296:	cd bf       	out	0x3d, r28	; 61
     298:	dc 01       	movw	r26, r24
	char arrx[25];
	char arry[25];
	char set;
	int placement=0;

	for (int i=0;i<25;i++){
     29a:	20 e0       	ldi	r18, 0x00	; 0
     29c:	30 e0       	ldi	r19, 0x00	; 0
     29e:	1a c0       	rjmp	.+52     	; 0x2d4 <filllocationarrays+0x50>
	arrx[i]=arry[i]=self->Orderary[i]=self->Orderarx[i]=0;
     2a0:	ad 01       	movw	r20, r26
     2a2:	42 0f       	add	r20, r18
     2a4:	53 1f       	adc	r21, r19
     2a6:	ca 01       	movw	r24, r20
     2a8:	8e 5a       	subi	r24, 0xAE	; 174
     2aa:	9f 4f       	sbci	r25, 0xFF	; 255
     2ac:	fc 01       	movw	r30, r24
     2ae:	10 82       	st	Z, r1
     2b0:	fa 01       	movw	r30, r20
     2b2:	11 ae       	std	Z+57, r1	; 0x39
     2b4:	ea e1       	ldi	r30, 0x1A	; 26
     2b6:	f0 e0       	ldi	r31, 0x00	; 0
     2b8:	ec 0f       	add	r30, r28
     2ba:	fd 1f       	adc	r31, r29
     2bc:	e2 0f       	add	r30, r18
     2be:	f3 1f       	adc	r31, r19
     2c0:	10 82       	st	Z, r1
     2c2:	e1 e0       	ldi	r30, 0x01	; 1
     2c4:	f0 e0       	ldi	r31, 0x00	; 0
     2c6:	ec 0f       	add	r30, r28
     2c8:	fd 1f       	adc	r31, r29
     2ca:	e2 0f       	add	r30, r18
     2cc:	f3 1f       	adc	r31, r19
     2ce:	10 82       	st	Z, r1
	char arrx[25];
	char arry[25];
	char set;
	int placement=0;

	for (int i=0;i<25;i++){
     2d0:	2f 5f       	subi	r18, 0xFF	; 255
     2d2:	3f 4f       	sbci	r19, 0xFF	; 255
     2d4:	29 31       	cpi	r18, 0x19	; 25
     2d6:	31 05       	cpc	r19, r1
     2d8:	1c f3       	brlt	.-58     	; 0x2a0 <filllocationarrays+0x1c>
	arrx[i]=arry[i]=self->Orderary[i]=self->Orderarx[i]=0;
}

	if (self->Recieved[1]==1){
     2da:	5c 96       	adiw	r26, 0x1c	; 28
     2dc:	8c 91       	ld	r24, X
     2de:	5c 97       	sbiw	r26, 0x1c	; 28
     2e0:	81 30       	cpi	r24, 0x01	; 1
     2e2:	29 f4       	brne	.+10     	; 0x2ee <filllocationarrays+0x6a>
		arrx[placement]=0;
     2e4:	19 82       	std	Y+1, r1	; 0x01
		arry[placement]=0;
     2e6:	1a 8e       	std	Y+26, r1	; 0x1a
		placement++;
     2e8:	21 e0       	ldi	r18, 0x01	; 1
     2ea:	30 e0       	ldi	r19, 0x00	; 0
     2ec:	02 c0       	rjmp	.+4      	; 0x2f2 <filllocationarrays+0x6e>

void filllocationarrays(Communications *self){
	char arrx[25];
	char arry[25];
	char set;
	int placement=0;
     2ee:	20 e0       	ldi	r18, 0x00	; 0
     2f0:	30 e0       	ldi	r19, 0x00	; 0
     2f2:	40 e0       	ldi	r20, 0x00	; 0
     2f4:	50 e0       	ldi	r21, 0x00	; 0
     2f6:	39 c0       	rjmp	.+114    	; 0x36a <filllocationarrays+0xe6>
		arrx[placement]=0;
		arry[placement]=0;
		placement++;
	}
	for (int i=0;i<8;i++){
		set = ((self->Recieved[2] >> i)  & 0x01);
     2f8:	5d 96       	adiw	r26, 0x1d	; 29
     2fa:	8c 91       	ld	r24, X
     2fc:	5d 97       	sbiw	r26, 0x1d	; 29
     2fe:	90 e0       	ldi	r25, 0x00	; 0
     300:	04 2e       	mov	r0, r20
     302:	02 c0       	rjmp	.+4      	; 0x308 <filllocationarrays+0x84>
     304:	95 95       	asr	r25
     306:	87 95       	ror	r24
     308:	0a 94       	dec	r0
     30a:	e2 f7       	brpl	.-8      	; 0x304 <filllocationarrays+0x80>
     30c:	81 70       	andi	r24, 0x01	; 1
		if (i<4){
     30e:	44 30       	cpi	r20, 0x04	; 4
     310:	51 05       	cpc	r21, r1
     312:	a4 f4       	brge	.+40     	; 0x33c <filllocationarrays+0xb8>
			if (set == 1){
     314:	81 30       	cpi	r24, 0x01	; 1
     316:	39 f5       	brne	.+78     	; 0x366 <filllocationarrays+0xe2>
			arrx[placement]=i+1;
     318:	e1 e0       	ldi	r30, 0x01	; 1
     31a:	f0 e0       	ldi	r31, 0x00	; 0
     31c:	ec 0f       	add	r30, r28
     31e:	fd 1f       	adc	r31, r29
     320:	e2 0f       	add	r30, r18
     322:	f3 1f       	adc	r31, r19
     324:	84 0f       	add	r24, r20
     326:	80 83       	st	Z, r24
			arry[placement]=0;
     328:	ea e1       	ldi	r30, 0x1A	; 26
     32a:	f0 e0       	ldi	r31, 0x00	; 0
     32c:	ec 0f       	add	r30, r28
     32e:	fd 1f       	adc	r31, r29
     330:	e2 0f       	add	r30, r18
     332:	f3 1f       	adc	r31, r19
     334:	10 82       	st	Z, r1
			placement++;}
     336:	2f 5f       	subi	r18, 0xFF	; 255
     338:	3f 4f       	sbci	r19, 0xFF	; 255
     33a:	15 c0       	rjmp	.+42     	; 0x366 <filllocationarrays+0xe2>
		}else{
			if (set == 1){
     33c:	81 30       	cpi	r24, 0x01	; 1
     33e:	99 f4       	brne	.+38     	; 0x366 <filllocationarrays+0xe2>
			arrx[placement]=i-4;
     340:	e1 e0       	ldi	r30, 0x01	; 1
     342:	f0 e0       	ldi	r31, 0x00	; 0
     344:	ec 0f       	add	r30, r28
     346:	fd 1f       	adc	r31, r29
     348:	e2 0f       	add	r30, r18
     34a:	f3 1f       	adc	r31, r19
     34c:	8c ef       	ldi	r24, 0xFC	; 252
     34e:	84 0f       	add	r24, r20
     350:	80 83       	st	Z, r24
			arry[placement]=1;
     352:	ea e1       	ldi	r30, 0x1A	; 26
     354:	f0 e0       	ldi	r31, 0x00	; 0
     356:	ec 0f       	add	r30, r28
     358:	fd 1f       	adc	r31, r29
     35a:	e2 0f       	add	r30, r18
     35c:	f3 1f       	adc	r31, r19
     35e:	81 e0       	ldi	r24, 0x01	; 1
     360:	80 83       	st	Z, r24
			placement++;}
     362:	2f 5f       	subi	r18, 0xFF	; 255
     364:	3f 4f       	sbci	r19, 0xFF	; 255
	if (self->Recieved[1]==1){
		arrx[placement]=0;
		arry[placement]=0;
		placement++;
	}
	for (int i=0;i<8;i++){
     366:	4f 5f       	subi	r20, 0xFF	; 255
     368:	5f 4f       	sbci	r21, 0xFF	; 255
     36a:	48 30       	cpi	r20, 0x08	; 8
     36c:	51 05       	cpc	r21, r1
     36e:	24 f2       	brlt	.-120    	; 0x2f8 <filllocationarrays+0x74>
     370:	40 e0       	ldi	r20, 0x00	; 0
     372:	50 e0       	ldi	r21, 0x00	; 0
     374:	55 c0       	rjmp	.+170    	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
			arry[placement]=1;
			placement++;}
		}
	}
		for (int i=0;i<8;i++){
			set = ((self->Recieved[3] >> i)  & 0x01);
     376:	5e 96       	adiw	r26, 0x1e	; 30
     378:	8c 91       	ld	r24, X
     37a:	5e 97       	sbiw	r26, 0x1e	; 30
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	04 2e       	mov	r0, r20
     380:	02 c0       	rjmp	.+4      	; 0x386 <filllocationarrays+0x102>
     382:	95 95       	asr	r25
     384:	87 95       	ror	r24
     386:	0a 94       	dec	r0
     388:	e2 f7       	brpl	.-8      	; 0x382 <filllocationarrays+0xfe>
     38a:	81 70       	andi	r24, 0x01	; 1
			if (i==0){
     38c:	41 15       	cp	r20, r1
     38e:	51 05       	cpc	r21, r1
     390:	b9 f4       	brne	.+46     	; 0x3c0 <filllocationarrays+0x13c>
				if (set == 1){
     392:	81 30       	cpi	r24, 0x01	; 1
     394:	09 f0       	breq	.+2      	; 0x398 <filllocationarrays+0x114>
     396:	42 c0       	rjmp	.+132    	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
				arrx[placement]=i+4;
     398:	e1 e0       	ldi	r30, 0x01	; 1
     39a:	f0 e0       	ldi	r31, 0x00	; 0
     39c:	ec 0f       	add	r30, r28
     39e:	fd 1f       	adc	r31, r29
     3a0:	e2 0f       	add	r30, r18
     3a2:	f3 1f       	adc	r31, r19
     3a4:	84 e0       	ldi	r24, 0x04	; 4
     3a6:	84 0f       	add	r24, r20
     3a8:	80 83       	st	Z, r24
				arry[placement]=1;
     3aa:	ea e1       	ldi	r30, 0x1A	; 26
     3ac:	f0 e0       	ldi	r31, 0x00	; 0
     3ae:	ec 0f       	add	r30, r28
     3b0:	fd 1f       	adc	r31, r29
     3b2:	e2 0f       	add	r30, r18
     3b4:	f3 1f       	adc	r31, r19
     3b6:	81 e0       	ldi	r24, 0x01	; 1
     3b8:	80 83       	st	Z, r24
				placement++;}
     3ba:	2f 5f       	subi	r18, 0xFF	; 255
     3bc:	3f 4f       	sbci	r19, 0xFF	; 255
     3be:	2e c0       	rjmp	.+92     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
			}else if(i<6){
     3c0:	46 30       	cpi	r20, 0x06	; 6
     3c2:	51 05       	cpc	r21, r1
     3c4:	b4 f4       	brge	.+44     	; 0x3f2 <filllocationarrays+0x16e>
				if (set == 1){
     3c6:	81 30       	cpi	r24, 0x01	; 1
     3c8:	49 f5       	brne	.+82     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
				arrx[placement]=i-1;
     3ca:	e1 e0       	ldi	r30, 0x01	; 1
     3cc:	f0 e0       	ldi	r31, 0x00	; 0
     3ce:	ec 0f       	add	r30, r28
     3d0:	fd 1f       	adc	r31, r29
     3d2:	e2 0f       	add	r30, r18
     3d4:	f3 1f       	adc	r31, r19
     3d6:	8f ef       	ldi	r24, 0xFF	; 255
     3d8:	84 0f       	add	r24, r20
     3da:	80 83       	st	Z, r24
				arry[placement]=2;
     3dc:	ea e1       	ldi	r30, 0x1A	; 26
     3de:	f0 e0       	ldi	r31, 0x00	; 0
     3e0:	ec 0f       	add	r30, r28
     3e2:	fd 1f       	adc	r31, r29
     3e4:	e2 0f       	add	r30, r18
     3e6:	f3 1f       	adc	r31, r19
     3e8:	82 e0       	ldi	r24, 0x02	; 2
     3ea:	80 83       	st	Z, r24
				placement++;}
     3ec:	2f 5f       	subi	r18, 0xFF	; 255
     3ee:	3f 4f       	sbci	r19, 0xFF	; 255
     3f0:	15 c0       	rjmp	.+42     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
			}else{
				if (set == 1){
     3f2:	81 30       	cpi	r24, 0x01	; 1
     3f4:	99 f4       	brne	.+38     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
				arrx[placement]=i-6;
     3f6:	e1 e0       	ldi	r30, 0x01	; 1
     3f8:	f0 e0       	ldi	r31, 0x00	; 0
     3fa:	ec 0f       	add	r30, r28
     3fc:	fd 1f       	adc	r31, r29
     3fe:	e2 0f       	add	r30, r18
     400:	f3 1f       	adc	r31, r19
     402:	8a ef       	ldi	r24, 0xFA	; 250
     404:	84 0f       	add	r24, r20
     406:	80 83       	st	Z, r24
				arry[placement]=3;
     408:	ea e1       	ldi	r30, 0x1A	; 26
     40a:	f0 e0       	ldi	r31, 0x00	; 0
     40c:	ec 0f       	add	r30, r28
     40e:	fd 1f       	adc	r31, r29
     410:	e2 0f       	add	r30, r18
     412:	f3 1f       	adc	r31, r19
     414:	83 e0       	ldi	r24, 0x03	; 3
     416:	80 83       	st	Z, r24
				placement++;}
     418:	2f 5f       	subi	r18, 0xFF	; 255
     41a:	3f 4f       	sbci	r19, 0xFF	; 255
			arrx[placement]=i-4;
			arry[placement]=1;
			placement++;}
		}
	}
		for (int i=0;i<8;i++){
     41c:	4f 5f       	subi	r20, 0xFF	; 255
     41e:	5f 4f       	sbci	r21, 0xFF	; 255
     420:	48 30       	cpi	r20, 0x08	; 8
     422:	51 05       	cpc	r21, r1
     424:	0c f4       	brge	.+2      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     426:	a7 cf       	rjmp	.-178    	; 0x376 <filllocationarrays+0xf2>
     428:	40 e0       	ldi	r20, 0x00	; 0
     42a:	50 e0       	ldi	r21, 0x00	; 0
     42c:	3b c0       	rjmp	.+118    	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
				arry[placement]=3;
				placement++;}
			}
		}
		for (int i=0;i<8;i++){
			set = ((self->Recieved[4] >> i)  & 0x01);
     42e:	5f 96       	adiw	r26, 0x1f	; 31
     430:	8c 91       	ld	r24, X
     432:	5f 97       	sbiw	r26, 0x1f	; 31
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	04 2e       	mov	r0, r20
     438:	02 c0       	rjmp	.+4      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
     43a:	95 95       	asr	r25
     43c:	87 95       	ror	r24
     43e:	0a 94       	dec	r0
     440:	e2 f7       	brpl	.-8      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
     442:	81 70       	andi	r24, 0x01	; 1
			if (i<3){
     444:	43 30       	cpi	r20, 0x03	; 3
     446:	51 05       	cpc	r21, r1
     448:	b4 f4       	brge	.+44     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
				if (set == 1){
     44a:	81 30       	cpi	r24, 0x01	; 1
     44c:	49 f5       	brne	.+82     	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
				arrx[placement]=i+2;
     44e:	e1 e0       	ldi	r30, 0x01	; 1
     450:	f0 e0       	ldi	r31, 0x00	; 0
     452:	ec 0f       	add	r30, r28
     454:	fd 1f       	adc	r31, r29
     456:	e2 0f       	add	r30, r18
     458:	f3 1f       	adc	r31, r19
     45a:	82 e0       	ldi	r24, 0x02	; 2
     45c:	84 0f       	add	r24, r20
     45e:	80 83       	st	Z, r24
				arry[placement]=3;
     460:	ea e1       	ldi	r30, 0x1A	; 26
     462:	f0 e0       	ldi	r31, 0x00	; 0
     464:	ec 0f       	add	r30, r28
     466:	fd 1f       	adc	r31, r29
     468:	e2 0f       	add	r30, r18
     46a:	f3 1f       	adc	r31, r19
     46c:	83 e0       	ldi	r24, 0x03	; 3
     46e:	80 83       	st	Z, r24
				placement++;}
     470:	2f 5f       	subi	r18, 0xFF	; 255
     472:	3f 4f       	sbci	r19, 0xFF	; 255
     474:	15 c0       	rjmp	.+42     	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
			}else{
				if (set == 1){
     476:	81 30       	cpi	r24, 0x01	; 1
     478:	99 f4       	brne	.+38     	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
				arrx[placement]=i-3;
     47a:	e1 e0       	ldi	r30, 0x01	; 1
     47c:	f0 e0       	ldi	r31, 0x00	; 0
     47e:	ec 0f       	add	r30, r28
     480:	fd 1f       	adc	r31, r29
     482:	e2 0f       	add	r30, r18
     484:	f3 1f       	adc	r31, r19
     486:	8d ef       	ldi	r24, 0xFD	; 253
     488:	84 0f       	add	r24, r20
     48a:	80 83       	st	Z, r24
				arry[placement]=4;
     48c:	ea e1       	ldi	r30, 0x1A	; 26
     48e:	f0 e0       	ldi	r31, 0x00	; 0
     490:	ec 0f       	add	r30, r28
     492:	fd 1f       	adc	r31, r29
     494:	e2 0f       	add	r30, r18
     496:	f3 1f       	adc	r31, r19
     498:	84 e0       	ldi	r24, 0x04	; 4
     49a:	80 83       	st	Z, r24
				placement++;}
     49c:	2f 5f       	subi	r18, 0xFF	; 255
     49e:	3f 4f       	sbci	r19, 0xFF	; 255
				arrx[placement]=i-6;
				arry[placement]=3;
				placement++;}
			}
		}
		for (int i=0;i<8;i++){
     4a0:	4f 5f       	subi	r20, 0xFF	; 255
     4a2:	5f 4f       	sbci	r21, 0xFF	; 255
     4a4:	48 30       	cpi	r20, 0x08	; 8
     4a6:	51 05       	cpc	r21, r1
     4a8:	14 f2       	brlt	.-124    	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     4aa:	20 e0       	ldi	r18, 0x00	; 0
     4ac:	30 e0       	ldi	r19, 0x00	; 0
     4ae:	19 c0       	rjmp	.+50     	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
				arry[placement]=4;
				placement++;}
			}
		}
	for (int i=0;i<25;i++){
		self->Orderarx[i]=arrx[i];
     4b0:	e1 e0       	ldi	r30, 0x01	; 1
     4b2:	f0 e0       	ldi	r31, 0x00	; 0
     4b4:	ec 0f       	add	r30, r28
     4b6:	fd 1f       	adc	r31, r29
     4b8:	e2 0f       	add	r30, r18
     4ba:	f3 1f       	adc	r31, r19
     4bc:	40 81       	ld	r20, Z
     4be:	cd 01       	movw	r24, r26
     4c0:	82 0f       	add	r24, r18
     4c2:	93 1f       	adc	r25, r19
     4c4:	fc 01       	movw	r30, r24
     4c6:	ee 5a       	subi	r30, 0xAE	; 174
     4c8:	ff 4f       	sbci	r31, 0xFF	; 255
     4ca:	40 83       	st	Z, r20
		self->Orderary[i]=arry[i];
     4cc:	ea e1       	ldi	r30, 0x1A	; 26
     4ce:	f0 e0       	ldi	r31, 0x00	; 0
     4d0:	ec 0f       	add	r30, r28
     4d2:	fd 1f       	adc	r31, r29
     4d4:	e2 0f       	add	r30, r18
     4d6:	f3 1f       	adc	r31, r19
     4d8:	40 81       	ld	r20, Z
     4da:	fc 01       	movw	r30, r24
     4dc:	41 af       	std	Z+57, r20	; 0x39
				arrx[placement]=i-3;
				arry[placement]=4;
				placement++;}
			}
		}
	for (int i=0;i<25;i++){
     4de:	2f 5f       	subi	r18, 0xFF	; 255
     4e0:	3f 4f       	sbci	r19, 0xFF	; 255
     4e2:	29 31       	cpi	r18, 0x19	; 25
     4e4:	31 05       	cpc	r19, r1
     4e6:	24 f3       	brlt	.-56     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
		self->Orderarx[i]=arrx[i];
		self->Orderary[i]=arry[i];
	}
}
     4e8:	e2 96       	adiw	r28, 0x32	; 50
     4ea:	0f b6       	in	r0, 0x3f	; 63
     4ec:	f8 94       	cli
     4ee:	de bf       	out	0x3e, r29	; 62
     4f0:	0f be       	out	0x3f, r0	; 63
     4f2:	cd bf       	out	0x3d, r28	; 61
     4f4:	df 91       	pop	r29
     4f6:	cf 91       	pop	r28
     4f8:	08 95       	ret

000004fa <sendACK>:
			


void sendACK(Communications *self ){
     4fa:	cf 93       	push	r28
     4fc:	df 93       	push	r29
     4fe:	00 d0       	rcall	.+0      	; 0x500 <sendACK+0x6>
     500:	1f 92       	push	r1
     502:	cd b7       	in	r28, 0x3d	; 61
     504:	de b7       	in	r29, 0x3e	; 62
						char tmp[3];
						tmp[0]=START;
     506:	28 e0       	ldi	r18, 0x08	; 8
     508:	29 83       	std	Y+1, r18	; 0x01
						tmp[1]=255;
     50a:	2f ef       	ldi	r18, 0xFF	; 255
     50c:	2a 83       	std	Y+2, r18	; 0x02
						tmp[2]=STOP;
     50e:	25 e6       	ldi	r18, 0x65	; 101
     510:	2b 83       	std	Y+3, r18	; 0x03
						serial_send_blocking(tmp,self->val);
     512:	fc 01       	movw	r30, r24
     514:	60 81       	ld	r22, Z
     516:	ce 01       	movw	r24, r28
     518:	01 96       	adiw	r24, 0x01	; 1
     51a:	0e 94 33 16 	call	0x2c66	; 0x2c66 <serial_send_blocking>
}
     51e:	0f 90       	pop	r0
     520:	0f 90       	pop	r0
     522:	0f 90       	pop	r0
     524:	df 91       	pop	r29
     526:	cf 91       	pop	r28
     528:	08 95       	ret

0000052a <Update>:

void Update(Communications *self){
     52a:	1f 93       	push	r17
     52c:	cf 93       	push	r28
     52e:	df 93       	push	r29
     530:	ec 01       	movw	r28, r24
	char Flag =0;
			if (serial_receive_buffer_full()==1){
     532:	0e 94 e0 14 	call	0x29c0	; 0x29c0 <serial_receive_buffer_full>
     536:	81 30       	cpi	r24, 0x01	; 1
     538:	09 f0       	breq	.+2      	; 0x53c <Update+0x12>
     53a:	5e c0       	rjmp	.+188    	; 0x5f8 <Update+0xce>
				if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
     53c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     53e:	88 30       	cpi	r24, 0x08	; 8
     540:	09 f0       	breq	.+2      	; 0x544 <Update+0x1a>
     542:	5c c0       	rjmp	.+184    	; 0x5fc <Update+0xd2>
     544:	e8 81       	ld	r30, Y
     546:	f0 e0       	ldi	r31, 0x00	; 0
     548:	31 97       	sbiw	r30, 0x01	; 1
     54a:	ec 0f       	add	r30, r28
     54c:	fd 1f       	adc	r31, r29
     54e:	83 8d       	ldd	r24, Z+27	; 0x1b
     550:	85 36       	cpi	r24, 0x65	; 101
     552:	09 f0       	breq	.+2      	; 0x556 <Update+0x2c>
     554:	55 c0       	rjmp	.+170    	; 0x600 <Update+0xd6>
				Flag = 1;
				//play_from_program_space(fugue);
				
				sendACK(self); // stops here to send acknowledge
     556:	ce 01       	movw	r24, r28
     558:	0e 94 7d 02 	call	0x4fa	; 0x4fa <sendACK>
				if (self->Recieved[5]==254 || self->EmergencyStop==1){	//enter emergency stop
     55c:	88 a1       	ldd	r24, Y+32	; 0x20
     55e:	8e 3f       	cpi	r24, 0xFE	; 254
     560:	31 f0       	breq	.+12     	; 0x56e <Update+0x44>
     562:	fe 01       	movw	r30, r28
     564:	e5 59       	subi	r30, 0x95	; 149
     566:	ff 4f       	sbci	r31, 0xFF	; 255
     568:	80 81       	ld	r24, Z
     56a:	81 30       	cpi	r24, 0x01	; 1
     56c:	49 f4       	brne	.+18     	; 0x580 <Update+0x56>
									play_from_program_space(fugue);
     56e:	8a e7       	ldi	r24, 0x7A	; 122
     570:	90 e0       	ldi	r25, 0x00	; 0
     572:	0e 94 51 12 	call	0x24a2	; 0x24a2 <play_from_program_space>
					self->EmergencyStop=1;
     576:	81 e0       	ldi	r24, 0x01	; 1
     578:	fe 01       	movw	r30, r28
     57a:	e5 59       	subi	r30, 0x95	; 149
     57c:	ff 4f       	sbci	r31, 0xFF	; 255
     57e:	80 83       	st	Z, r24
				}
				
				if (self->Recieved[8]==250 && self->EmergencyStop==1){	// Leave emergency stop
     580:	8b a1       	ldd	r24, Y+35	; 0x23
     582:	8a 3f       	cpi	r24, 0xFA	; 250
     584:	39 f4       	brne	.+14     	; 0x594 <Update+0x6a>
     586:	fe 01       	movw	r30, r28
     588:	e5 59       	subi	r30, 0x95	; 149
     58a:	ff 4f       	sbci	r31, 0xFF	; 255
     58c:	90 81       	ld	r25, Z
     58e:	91 30       	cpi	r25, 0x01	; 1
     590:	09 f4       	brne	.+2      	; 0x594 <Update+0x6a>
					self->EmergencyStop=0;
     592:	10 82       	st	Z, r1
				}
				
				if (self->Recieved[8]==245){							// Enter Spin Mode
     594:	85 3f       	cpi	r24, 0xF5	; 245
     596:	29 f4       	brne	.+10     	; 0x5a2 <Update+0x78>
					self->EmergencyStop=3;
     598:	93 e0       	ldi	r25, 0x03	; 3
     59a:	fe 01       	movw	r30, r28
     59c:	e5 59       	subi	r30, 0x95	; 149
     59e:	ff 4f       	sbci	r31, 0xFF	; 255
     5a0:	90 83       	st	Z, r25
				}
				if (self->Recieved[8]==240){							// Enter Manual Mode
     5a2:	80 3f       	cpi	r24, 0xF0	; 240
     5a4:	a9 f4       	brne	.+42     	; 0x5d0 <Update+0xa6>
					self->EmergencyStop=4;
     5a6:	84 e0       	ldi	r24, 0x04	; 4
     5a8:	fe 01       	movw	r30, r28
     5aa:	e5 59       	subi	r30, 0x95	; 149
     5ac:	ff 4f       	sbci	r31, 0xFF	; 255
     5ae:	80 83       	st	Z, r24
					for (int i = 0; i < 4; i++){
     5b0:	80 e0       	ldi	r24, 0x00	; 0
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	0a c0       	rjmp	.+20     	; 0x5ca <Update+0xa0>
						self->Direction[i]=self->Recieved[i+9];
     5b6:	fc 01       	movw	r30, r24
     5b8:	39 96       	adiw	r30, 0x09	; 9
     5ba:	ec 0f       	add	r30, r28
     5bc:	fd 1f       	adc	r31, r29
     5be:	23 8d       	ldd	r18, Z+27	; 0x1b
     5c0:	fe 01       	movw	r30, r28
     5c2:	e8 0f       	add	r30, r24
     5c4:	f9 1f       	adc	r31, r25
     5c6:	25 ab       	std	Z+53, r18	; 0x35
				if (self->Recieved[8]==245){							// Enter Spin Mode
					self->EmergencyStop=3;
				}
				if (self->Recieved[8]==240){							// Enter Manual Mode
					self->EmergencyStop=4;
					for (int i = 0; i < 4; i++){
     5c8:	01 96       	adiw	r24, 0x01	; 1
     5ca:	84 30       	cpi	r24, 0x04	; 4
     5cc:	91 05       	cpc	r25, r1
     5ce:	9c f3       	brlt	.-26     	; 0x5b6 <Update+0x8c>
						self->Direction[i]=self->Recieved[i+9];
					}
				}
				
				if (self->locationx==255 && self->locationy==255){
     5d0:	fe 01       	movw	r30, r28
     5d2:	e2 59       	subi	r30, 0x92	; 146
     5d4:	ff 4f       	sbci	r31, 0xFF	; 255
     5d6:	80 81       	ld	r24, Z
     5d8:	8f 3f       	cpi	r24, 0xFF	; 255
     5da:	a1 f4       	brne	.+40     	; 0x604 <Update+0xda>
     5dc:	31 96       	adiw	r30, 0x01	; 1
     5de:	80 81       	ld	r24, Z
     5e0:	8f 3f       	cpi	r24, 0xFF	; 255
     5e2:	91 f4       	brne	.+36     	; 0x608 <Update+0xde>
					filllocationarrays(self);
     5e4:	ce 01       	movw	r24, r28
     5e6:	0e 94 42 01 	call	0x284	; 0x284 <filllocationarrays>
					self->flag =1;
     5ea:	81 e0       	ldi	r24, 0x01	; 1
     5ec:	fe 01       	movw	r30, r28
     5ee:	e0 59       	subi	r30, 0x90	; 144
     5f0:	ff 4f       	sbci	r31, 0xFF	; 255
     5f2:	80 83       	st	Z, r24

void Update(Communications *self){
	char Flag =0;
			if (serial_receive_buffer_full()==1){
				if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
				Flag = 1;
     5f4:	11 e0       	ldi	r17, 0x01	; 1
     5f6:	09 c0       	rjmp	.+18     	; 0x60a <Update+0xe0>
						tmp[2]=STOP;
						serial_send_blocking(tmp,self->val);
}

void Update(Communications *self){
	char Flag =0;
     5f8:	10 e0       	ldi	r17, 0x00	; 0
     5fa:	07 c0       	rjmp	.+14     	; 0x60a <Update+0xe0>
     5fc:	10 e0       	ldi	r17, 0x00	; 0
     5fe:	05 c0       	rjmp	.+10     	; 0x60a <Update+0xe0>
     600:	10 e0       	ldi	r17, 0x00	; 0
     602:	03 c0       	rjmp	.+6      	; 0x60a <Update+0xe0>
			if (serial_receive_buffer_full()==1){
				if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
				Flag = 1;
     604:	11 e0       	ldi	r17, 0x01	; 1
     606:	01 c0       	rjmp	.+2      	; 0x60a <Update+0xe0>
     608:	11 e0       	ldi	r17, 0x01	; 1
					self->flag =1;
				}
				}
			}
			
				for (char i=0;i<self->val;i++){
     60a:	80 e0       	ldi	r24, 0x00	; 0
     60c:	05 c0       	rjmp	.+10     	; 0x618 <Update+0xee>
					self->msgBuffer[i]=i;
     60e:	fe 01       	movw	r30, r28
     610:	e8 0f       	add	r30, r24
     612:	f1 1d       	adc	r31, r1
     614:	81 83       	std	Z+1, r24	; 0x01
					self->flag =1;
				}
				}
			}
			
				for (char i=0;i<self->val;i++){
     616:	8f 5f       	subi	r24, 0xFF	; 255
     618:	68 81       	ld	r22, Y
     61a:	86 17       	cp	r24, r22
     61c:	c0 f3       	brcs	.-16     	; 0x60e <Update+0xe4>
					self->msgBuffer[i]=i;
				}
				self->msgBuffer[0]=START;
     61e:	88 e0       	ldi	r24, 0x08	; 8
     620:	89 83       	std	Y+1, r24	; 0x01
				self->msgBuffer[1]=self->batterylvl;
     622:	fe 01       	movw	r30, r28
     624:	e4 59       	subi	r30, 0x94	; 148
     626:	ff 4f       	sbci	r31, 0xFF	; 255
     628:	80 81       	ld	r24, Z
     62a:	8a 83       	std	Y+2, r24	; 0x02
				self->msgBuffer[2]=self->magprocess;
     62c:	31 96       	adiw	r30, 0x01	; 1
     62e:	80 81       	ld	r24, Z
     630:	8b 83       	std	Y+3, r24	; 0x03
				self->msgBuffer[3]=self->locationx;
     632:	31 96       	adiw	r30, 0x01	; 1
     634:	80 81       	ld	r24, Z
     636:	8c 83       	std	Y+4, r24	; 0x04
				self->msgBuffer[4]=self->locationy;
     638:	31 96       	adiw	r30, 0x01	; 1
     63a:	80 81       	ld	r24, Z
     63c:	8d 83       	std	Y+5, r24	; 0x05
				self->msgBuffer[5]=self->EmergencyStop;
     63e:	34 97       	sbiw	r30, 0x04	; 4
     640:	80 81       	ld	r24, Z
     642:	8e 83       	std	Y+6, r24	; 0x06
				self->msgBuffer[self->val-1]=STOP;
     644:	e6 2f       	mov	r30, r22
     646:	f0 e0       	ldi	r31, 0x00	; 0
     648:	31 97       	sbiw	r30, 0x01	; 1
     64a:	ec 0f       	add	r30, r28
     64c:	fd 1f       	adc	r31, r29
     64e:	85 e6       	ldi	r24, 0x65	; 101
     650:	81 83       	std	Z+1, r24	; 0x01
				serial_send(self->msgBuffer, self->val);
     652:	ce 01       	movw	r24, r28
     654:	01 96       	adiw	r24, 0x01	; 1
     656:	0e 94 ee 15 	call	0x2bdc	; 0x2bdc <serial_send>

				//delay_ms(10000); // test
				if (Flag == 1){
     65a:	11 30       	cpi	r17, 0x01	; 1
     65c:	29 f4       	brne	.+10     	; 0x668 <Update+0x13e>
					serial_receive(self->Recieved,self->val);
     65e:	68 81       	ld	r22, Y
     660:	ce 01       	movw	r24, r28
     662:	4b 96       	adiw	r24, 0x1b	; 27
     664:	0e 94 67 15 	call	0x2ace	; 0x2ace <serial_receive>
				}		
}
     668:	df 91       	pop	r29
     66a:	cf 91       	pop	r28
     66c:	1f 91       	pop	r17
     66e:	08 95       	ret

00000670 <fillarrays>:

void fillarrays(Communications *self){
     670:	cf 93       	push	r28
     672:	df 93       	push	r29
     674:	cd b7       	in	r28, 0x3d	; 61
     676:	de b7       	in	r29, 0x3e	; 62
     678:	60 97       	sbiw	r28, 0x10	; 16
     67a:	0f b6       	in	r0, 0x3f	; 63
     67c:	f8 94       	cli
     67e:	de bf       	out	0x3e, r29	; 62
     680:	0f be       	out	0x3f, r0	; 63
     682:	cd bf       	out	0x3d, r28	; 61
     684:	ac 01       	movw	r20, r24
	//temp
		char arrx[]={2,5,4,2,1,6,1,5};
     686:	88 e0       	ldi	r24, 0x08	; 8
     688:	e8 e2       	ldi	r30, 0x28	; 40
     68a:	f1 e0       	ldi	r31, 0x01	; 1
     68c:	de 01       	movw	r26, r28
     68e:	11 96       	adiw	r26, 0x01	; 1
     690:	01 90       	ld	r0, Z+
     692:	0d 92       	st	X+, r0
     694:	8a 95       	dec	r24
     696:	e1 f7       	brne	.-8      	; 0x690 <fillarrays+0x20>
		char arry[]={0,1,3,5,2,4,1,2};
     698:	88 e0       	ldi	r24, 0x08	; 8
     69a:	e0 e3       	ldi	r30, 0x30	; 48
     69c:	f1 e0       	ldi	r31, 0x01	; 1
     69e:	de 01       	movw	r26, r28
     6a0:	19 96       	adiw	r26, 0x09	; 9
     6a2:	01 90       	ld	r0, Z+
     6a4:	0d 92       	st	X+, r0
     6a6:	8a 95       	dec	r24
     6a8:	e1 f7       	brne	.-8      	; 0x6a2 <fillarrays+0x32>
		for (int i=0;i<8;i++){
     6aa:	20 e0       	ldi	r18, 0x00	; 0
     6ac:	30 e0       	ldi	r19, 0x00	; 0
     6ae:	19 c0       	rjmp	.+50     	; 0x6e2 <fillarrays+0x72>
			self->Orderarx[i]=arrx[i];
     6b0:	e1 e0       	ldi	r30, 0x01	; 1
     6b2:	f0 e0       	ldi	r31, 0x00	; 0
     6b4:	ec 0f       	add	r30, r28
     6b6:	fd 1f       	adc	r31, r29
     6b8:	e2 0f       	add	r30, r18
     6ba:	f3 1f       	adc	r31, r19
     6bc:	90 81       	ld	r25, Z
     6be:	da 01       	movw	r26, r20
     6c0:	a2 0f       	add	r26, r18
     6c2:	b3 1f       	adc	r27, r19
     6c4:	fd 01       	movw	r30, r26
     6c6:	ee 5a       	subi	r30, 0xAE	; 174
     6c8:	ff 4f       	sbci	r31, 0xFF	; 255
     6ca:	90 83       	st	Z, r25
			self->Orderary[i]=arry[i];
     6cc:	e9 e0       	ldi	r30, 0x09	; 9
     6ce:	f0 e0       	ldi	r31, 0x00	; 0
     6d0:	ec 0f       	add	r30, r28
     6d2:	fd 1f       	adc	r31, r29
     6d4:	e2 0f       	add	r30, r18
     6d6:	f3 1f       	adc	r31, r19
     6d8:	90 81       	ld	r25, Z
     6da:	d9 96       	adiw	r26, 0x39	; 57
     6dc:	9c 93       	st	X, r25

void fillarrays(Communications *self){
	//temp
		char arrx[]={2,5,4,2,1,6,1,5};
		char arry[]={0,1,3,5,2,4,1,2};
		for (int i=0;i<8;i++){
     6de:	2f 5f       	subi	r18, 0xFF	; 255
     6e0:	3f 4f       	sbci	r19, 0xFF	; 255
     6e2:	28 30       	cpi	r18, 0x08	; 8
     6e4:	31 05       	cpc	r19, r1
     6e6:	24 f3       	brlt	.-56     	; 0x6b0 <fillarrays+0x40>
			self->Orderarx[i]=arrx[i];
			self->Orderary[i]=arry[i];
		}
}
     6e8:	60 96       	adiw	r28, 0x10	; 16
     6ea:	0f b6       	in	r0, 0x3f	; 63
     6ec:	f8 94       	cli
     6ee:	de bf       	out	0x3e, r29	; 62
     6f0:	0f be       	out	0x3f, r0	; 63
     6f2:	cd bf       	out	0x3d, r28	; 61
     6f4:	df 91       	pop	r29
     6f6:	cf 91       	pop	r28
     6f8:	08 95       	ret

000006fa <Communications_INIT>:

void Communications_INIT(Communications * myCom){
     6fa:	cf 93       	push	r28
     6fc:	df 93       	push	r29
     6fe:	ec 01       	movw	r28, r24
	myCom->val = Max_Bytes;	
     700:	8a e1       	ldi	r24, 0x1A	; 26
     702:	88 83       	st	Y, r24


	//Setup Communications
	serial_set_baud_rate(9600);
     704:	60 e8       	ldi	r22, 0x80	; 128
     706:	75 e2       	ldi	r23, 0x25	; 37
     708:	80 e0       	ldi	r24, 0x00	; 0
     70a:	90 e0       	ldi	r25, 0x00	; 0
     70c:	0e 94 be 15 	call	0x2b7c	; 0x2b7c <serial_set_baud_rate>
	serial_receive(myCom->Recieved,myCom->val);
     710:	68 81       	ld	r22, Y
     712:	ce 01       	movw	r24, r28
     714:	4b 96       	adiw	r24, 0x1b	; 27
     716:	0e 94 67 15 	call	0x2ace	; 0x2ace <serial_receive>

	//filling in functions
	myCom->Update		 = Update;
     71a:	fe 01       	movw	r30, r28
     71c:	ef 58       	subi	r30, 0x8F	; 143
     71e:	ff 4f       	sbci	r31, 0xFF	; 255
     720:	85 e9       	ldi	r24, 0x95	; 149
     722:	92 e0       	ldi	r25, 0x02	; 2
     724:	91 83       	std	Z+1, r25	; 0x01
     726:	80 83       	st	Z, r24
		
	//filling in default values
	myCom->EmergencyStop = 0;
     728:	36 97       	sbiw	r30, 0x06	; 6
     72a:	10 82       	st	Z, r1
	myCom->batterylvl	 = 55;
     72c:	31 96       	adiw	r30, 0x01	; 1
     72e:	87 e3       	ldi	r24, 0x37	; 55
     730:	80 83       	st	Z, r24
	myCom->magprocess	 = 20;
     732:	31 96       	adiw	r30, 0x01	; 1
     734:	84 e1       	ldi	r24, 0x14	; 20
     736:	80 83       	st	Z, r24
	myCom->locationx	 = 4;
     738:	31 96       	adiw	r30, 0x01	; 1
     73a:	84 e0       	ldi	r24, 0x04	; 4
     73c:	80 83       	st	Z, r24
	myCom->locationy	 = 5;
     73e:	31 96       	adiw	r30, 0x01	; 1
     740:	85 e0       	ldi	r24, 0x05	; 5
     742:	80 83       	st	Z, r24
	
	
	fillarrays(myCom);
     744:	ce 01       	movw	r24, r28
     746:	0e 94 38 03 	call	0x670	; 0x670 <fillarrays>
}
     74a:	df 91       	pop	r29
     74c:	cf 91       	pop	r28
     74e:	08 95       	ret

00000750 <batteryPercentage>:
     750:	cf 92       	push	r12
     752:	df 92       	push	r13
     754:	ef 92       	push	r14
     756:	ff 92       	push	r15
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     758:	0e 94 38 0f 	call	0x1e70	; 0x1e70 <read_battery_millivolts_3pi>
     75c:	bc 01       	movw	r22, r24
     75e:	80 e0       	ldi	r24, 0x00	; 0
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	0e 94 6c 0d 	call	0x1ad8	; 0x1ad8 <__floatunsisf>
     766:	6b 01       	movw	r12, r22
     768:	7c 01       	movw	r14, r24
     76a:	9b 01       	movw	r18, r22
     76c:	ac 01       	movw	r20, r24
     76e:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <__mulsf3>
     772:	9b 01       	movw	r18, r22
     774:	ac 01       	movw	r20, r24
     776:	c7 01       	movw	r24, r14
     778:	b6 01       	movw	r22, r12
     77a:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <__mulsf3>
     77e:	2c e0       	ldi	r18, 0x0C	; 12
     780:	39 eb       	ldi	r19, 0xB9	; 185
     782:	4d e2       	ldi	r20, 0x2D	; 45
     784:	50 e3       	ldi	r21, 0x30	; 48
     786:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <__mulsf3>
     78a:	ff 90       	pop	r15
     78c:	ef 90       	pop	r14
     78e:	df 90       	pop	r13
     790:	cf 90       	pop	r12
     792:	08 95       	ret

00000794 <updateDisplay>:
     794:	ef 92       	push	r14
     796:	ff 92       	push	r15
     798:	0f 93       	push	r16
     79a:	1f 93       	push	r17
     79c:	cf 93       	push	r28
     79e:	7c 01       	movw	r14, r24
     7a0:	8b 01       	movw	r16, r22
     7a2:	c4 2f       	mov	r28, r20
     7a4:	0e 94 5d 13 	call	0x26ba	; 0x26ba <clear>
     7a8:	60 e0       	ldi	r22, 0x00	; 0
     7aa:	80 e0       	ldi	r24, 0x00	; 0
     7ac:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <lcd_goto_xy>
     7b0:	85 e5       	ldi	r24, 0x55	; 85
     7b2:	91 e0       	ldi	r25, 0x01	; 1
     7b4:	0e 94 6c 13 	call	0x26d8	; 0x26d8 <print>
     7b8:	b7 01       	movw	r22, r14
     7ba:	ff 0c       	add	r15, r15
     7bc:	88 0b       	sbc	r24, r24
     7be:	99 0b       	sbc	r25, r25
     7c0:	0e 94 c1 13 	call	0x2782	; 0x2782 <print_long>
     7c4:	8a e5       	ldi	r24, 0x5A	; 90
     7c6:	91 e0       	ldi	r25, 0x01	; 1
     7c8:	0e 94 6c 13 	call	0x26d8	; 0x26d8 <print>
     7cc:	61 e0       	ldi	r22, 0x01	; 1
     7ce:	80 e0       	ldi	r24, 0x00	; 0
     7d0:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <lcd_goto_xy>
     7d4:	8c e5       	ldi	r24, 0x5C	; 92
     7d6:	91 e0       	ldi	r25, 0x01	; 1
     7d8:	0e 94 6c 13 	call	0x26d8	; 0x26d8 <print>
     7dc:	b8 01       	movw	r22, r16
     7de:	11 0f       	add	r17, r17
     7e0:	88 0b       	sbc	r24, r24
     7e2:	99 0b       	sbc	r25, r25
     7e4:	0e 94 c1 13 	call	0x2782	; 0x2782 <print_long>
     7e8:	8a e5       	ldi	r24, 0x5A	; 90
     7ea:	91 e0       	ldi	r25, 0x01	; 1
     7ec:	0e 94 6c 13 	call	0x26d8	; 0x26d8 <print>
     7f0:	c2 30       	cpi	r28, 0x02	; 2
     7f2:	a9 f0       	breq	.+42     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7f4:	28 f4       	brcc	.+10     	; 0x800 <__DATA_REGION_LENGTH__>
     7f6:	cc 23       	and	r28, r28
     7f8:	41 f0       	breq	.+16     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     7fa:	c1 30       	cpi	r28, 0x01	; 1
     7fc:	59 f0       	breq	.+22     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     7fe:	1d c0       	rjmp	.+58     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     800:	c3 30       	cpi	r28, 0x03	; 3
     802:	91 f0       	breq	.+36     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
     804:	c4 30       	cpi	r28, 0x04	; 4
     806:	a9 f0       	breq	.+42     	; 0x832 <__DATA_REGION_LENGTH__+0x32>
     808:	18 c0       	rjmp	.+48     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     80a:	81 e6       	ldi	r24, 0x61	; 97
     80c:	91 e0       	ldi	r25, 0x01	; 1
     80e:	0e 94 6c 13 	call	0x26d8	; 0x26d8 <print>
     812:	13 c0       	rjmp	.+38     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     814:	83 e6       	ldi	r24, 0x63	; 99
     816:	91 e0       	ldi	r25, 0x01	; 1
     818:	0e 94 6c 13 	call	0x26d8	; 0x26d8 <print>
     81c:	0e c0       	rjmp	.+28     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     81e:	85 e6       	ldi	r24, 0x65	; 101
     820:	91 e0       	ldi	r25, 0x01	; 1
     822:	0e 94 6c 13 	call	0x26d8	; 0x26d8 <print>
     826:	09 c0       	rjmp	.+18     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     828:	87 e6       	ldi	r24, 0x67	; 103
     82a:	91 e0       	ldi	r25, 0x01	; 1
     82c:	0e 94 6c 13 	call	0x26d8	; 0x26d8 <print>
     830:	04 c0       	rjmp	.+8      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     832:	89 e6       	ldi	r24, 0x69	; 105
     834:	91 e0       	ldi	r25, 0x01	; 1
     836:	0e 94 6c 13 	call	0x26d8	; 0x26d8 <print>
     83a:	cf 91       	pop	r28
     83c:	1f 91       	pop	r17
     83e:	0f 91       	pop	r16
     840:	ff 90       	pop	r15
     842:	ef 90       	pop	r14
     844:	08 95       	ret

00000846 <whileBarcode>:
	whileBarcode();
	updateDisplay(0, batteryPercentage(), mazeSolver);
	parcours('B', communications);
	whileLineEnd();
	motorControl('L');
}
     846:	03 c0       	rjmp	.+6      	; 0x84e <whileBarcode+0x8>
     848:	83 e5       	ldi	r24, 0x53	; 83
     84a:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
     84e:	0e 94 74 06 	call	0xce8	; 0xce8 <lineType>
     852:	82 30       	cpi	r24, 0x02	; 2
     854:	c9 f7       	brne	.-14     	; 0x848 <whileBarcode+0x2>
     856:	08 95       	ret

00000858 <whileLineEnd>:
     858:	03 c0       	rjmp	.+6      	; 0x860 <whileLineEnd+0x8>
     85a:	83 e5       	ldi	r24, 0x53	; 83
     85c:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
     860:	0e 94 74 06 	call	0xce8	; 0xce8 <lineType>
     864:	81 30       	cpi	r24, 0x01	; 1
     866:	c9 f7       	brne	.-14     	; 0x85a <whileLineEnd+0x2>
     868:	08 95       	ret

0000086a <pickOrder>:

void pickOrder(Communications *communications)
{
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
     86e:	ec 01       	movw	r28, r24
	whileBarcode();
     870:	0e 94 23 04 	call	0x846	; 0x846 <whileBarcode>
	parcours('T', communications);
     874:	be 01       	movw	r22, r28
     876:	84 e5       	ldi	r24, 0x54	; 84
     878:	0e 94 ce 08 	call	0x119c	; 0x119c <parcours>
	warehouse(orderPicking, communications); 	
     87c:	be 01       	movw	r22, r28
     87e:	80 e0       	ldi	r24, 0x00	; 0
     880:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <warehouse>
	parcours('B', communications);
     884:	be 01       	movw	r22, r28
     886:	82 e4       	ldi	r24, 0x42	; 66
     888:	0e 94 ce 08 	call	0x119c	; 0x119c <parcours>
	whileLineEnd();
     88c:	0e 94 2c 04 	call	0x858	; 0x858 <whileLineEnd>
	motorControl('L');
     890:	8c e4       	ldi	r24, 0x4C	; 76
     892:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
}
     896:	df 91       	pop	r29
     898:	cf 91       	pop	r28
     89a:	08 95       	ret

0000089c <main>:

int main()
{
     89c:	cf 93       	push	r28
     89e:	df 93       	push	r29
     8a0:	cd b7       	in	r28, 0x3d	; 61
     8a2:	de b7       	in	r29, 0x3e	; 62
     8a4:	c3 57       	subi	r28, 0x73	; 115
     8a6:	d1 09       	sbc	r29, r1
     8a8:	0f b6       	in	r0, 0x3f	; 63
     8aa:	f8 94       	cli
     8ac:	de bf       	out	0x3e, r29	; 62
     8ae:	0f be       	out	0x3f, r0	; 63
     8b0:	cd bf       	out	0x3d, r28	; 61
	play_from_program_space(welcome);
     8b2:	89 e3       	ldi	r24, 0x39	; 57
     8b4:	92 e0       	ldi	r25, 0x02	; 2
     8b6:	0e 94 51 12 	call	0x24a2	; 0x24a2 <play_from_program_space>
	
	Communications communications;
	Communications_INIT(&communications);
     8ba:	ce 01       	movw	r24, r28
     8bc:	01 96       	adiw	r24, 0x01	; 1
     8be:	0e 94 7d 03 	call	0x6fa	; 0x6fa <Communications_INIT>
	
	initialize(&communications);
     8c2:	ce 01       	movw	r24, r28
     8c4:	01 96       	adiw	r24, 0x01	; 1
     8c6:	0e 94 b9 04 	call	0x972	; 0x972 <initialize>
	
		
	while(1) 
	{
		//updateDisplay(0, batteryPercentage(), homingMode);
		communications.Update(&communications);
     8ca:	e4 96       	adiw	r28, 0x34	; 52
     8cc:	ee ad       	ldd	r30, Y+62	; 0x3e
     8ce:	ff ad       	ldd	r31, Y+63	; 0x3f
     8d0:	e4 97       	sbiw	r28, 0x34	; 52
     8d2:	ce 01       	movw	r24, r28
     8d4:	01 96       	adiw	r24, 0x01	; 1
     8d6:	09 95       	icall
		
		communications.locationx = -1;
     8d8:	8f ef       	ldi	r24, 0xFF	; 255
     8da:	e0 96       	adiw	r28, 0x30	; 48
     8dc:	8f af       	std	Y+63, r24	; 0x3f
     8de:	e0 97       	sbiw	r28, 0x30	; 48
		communications.locationy = -1;
     8e0:	e1 96       	adiw	r28, 0x31	; 49
     8e2:	8f af       	std	Y+63, r24	; 0x3f
     8e4:	e1 97       	sbiw	r28, 0x31	; 49
		
		lcd_goto_xy(0, 0);
     8e6:	60 e0       	ldi	r22, 0x00	; 0
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <lcd_goto_xy>
		print_long(communications.EmergencyStop);
     8ee:	ad 96       	adiw	r28, 0x2d	; 45
     8f0:	6f ad       	ldd	r22, Y+63	; 0x3f
     8f2:	ad 97       	sbiw	r28, 0x2d	; 45
     8f4:	70 e0       	ldi	r23, 0x00	; 0
     8f6:	80 e0       	ldi	r24, 0x00	; 0
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	0e 94 c1 13 	call	0x2782	; 0x2782 <print_long>
		
		switch (communications.EmergencyStop) {
     8fe:	ad 96       	adiw	r28, 0x2d	; 45
     900:	8f ad       	ldd	r24, Y+63	; 0x3f
     902:	ad 97       	sbiw	r28, 0x2d	; 45
     904:	82 30       	cpi	r24, 0x02	; 2
     906:	79 f1       	breq	.+94     	; 0x966 <__stack+0x67>
     908:	83 30       	cpi	r24, 0x03	; 3
     90a:	81 f1       	breq	.+96     	; 0x96c <__stack+0x6d>
     90c:	81 11       	cpse	r24, r1
     90e:	dd cf       	rjmp	.-70     	; 0x8ca <main+0x2e>
				/*if (read_battery_millivolts_3pi() < 0.6 * 5200)
				{
					charge_3pi(&communications);
				}
				else*/
				print_long(communications.locationx);
     910:	e0 96       	adiw	r28, 0x30	; 48
     912:	6f ad       	ldd	r22, Y+63	; 0x3f
     914:	e0 97       	sbiw	r28, 0x30	; 48
     916:	70 e0       	ldi	r23, 0x00	; 0
     918:	80 e0       	ldi	r24, 0x00	; 0
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	0e 94 c1 13 	call	0x2782	; 0x2782 <print_long>
				print_long(communications.locationy);
     920:	e1 96       	adiw	r28, 0x31	; 49
     922:	6f ad       	ldd	r22, Y+63	; 0x3f
     924:	e1 97       	sbiw	r28, 0x31	; 49
     926:	70 e0       	ldi	r23, 0x00	; 0
     928:	80 e0       	ldi	r24, 0x00	; 0
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	0e 94 c1 13 	call	0x2782	; 0x2782 <print_long>
				if (communications.flag==1)
     930:	e2 96       	adiw	r28, 0x32	; 50
     932:	8f ad       	ldd	r24, Y+63	; 0x3f
     934:	e2 97       	sbiw	r28, 0x32	; 50
     936:	81 30       	cpi	r24, 0x01	; 1
     938:	41 f6       	brne	.-112    	; 0x8ca <main+0x2e>
				{
					communications.flag=0;
					
     93a:	89 e3       	ldi	r24, 0x39	; 57
     93c:	92 e0       	ldi	r25, 0x02	; 2
     93e:	0e 94 51 12 	call	0x24a2	; 0x24a2 <play_from_program_space>
					play_from_program_space(welcome);
     942:	e0 96       	adiw	r28, 0x30	; 48
     944:	1f ae       	std	Y+63, r1	; 0x3f
     946:	e0 97       	sbiw	r28, 0x30	; 48
					communications.locationx = 0;
     948:	e1 96       	adiw	r28, 0x31	; 49
     94a:	1f ae       	std	Y+63, r1	; 0x3f
     94c:	e1 97       	sbiw	r28, 0x31	; 49
					communications.locationy = 0;
     94e:	ce 01       	movw	r24, r28
     950:	01 96       	adiw	r24, 0x01	; 1
     952:	0e 94 35 04 	call	0x86a	; 0x86a <pickOrder>
					pickOrder(&communications);
     956:	8f ef       	ldi	r24, 0xFF	; 255
     958:	e0 96       	adiw	r28, 0x30	; 48
     95a:	8f af       	std	Y+63, r24	; 0x3f
     95c:	e0 97       	sbiw	r28, 0x30	; 48
					communications.locationx = -1;
     95e:	e1 96       	adiw	r28, 0x31	; 49
     960:	8f af       	std	Y+63, r24	; 0x3f
     962:	e1 97       	sbiw	r28, 0x31	; 49
     964:	b2 cf       	rjmp	.-156    	; 0x8ca <main+0x2e>
					communications.locationy = -1;
				}
				break;
				delay(100);
			case 2:
     966:	0e 94 c3 07 	call	0xf86	; 0xf86 <Spin>
				Spin();
     96a:	af cf       	rjmp	.-162    	; 0x8ca <main+0x2e>
				break;
			case 3:
     96c:	0e 94 7c 07 	call	0xef8	; 0xef8 <manualControl>
				manualControl();
     970:	ac cf       	rjmp	.-168    	; 0x8ca <main+0x2e>

00000972 <initialize>:
void inch(){
	set_motors(50,50);
	delay(200);
	set_motors(0,0);
}
void println(int x){
     972:	cf 93       	push	r28
     974:	df 93       	push	r29
     976:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <myComs+0x1>
     97a:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <myComs>
     97e:	80 ed       	ldi	r24, 0xD0	; 208
     980:	97 e0       	ldi	r25, 0x07	; 7
     982:	0e 94 22 17 	call	0x2e44	; 0x2e44 <pololu_3pi_init>
     986:	0d c0       	rjmp	.+26     	; 0x9a2 <initialize+0x30>
     988:	0e 94 5d 13 	call	0x26ba	; 0x26ba <clear>
     98c:	60 e0       	ldi	r22, 0x00	; 0
     98e:	80 e0       	ldi	r24, 0x00	; 0
     990:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <lcd_goto_xy>
     994:	0e 94 38 0f 	call	0x1e70	; 0x1e70 <read_battery_millivolts_3pi>
     998:	bc 01       	movw	r22, r24
     99a:	80 e0       	ldi	r24, 0x00	; 0
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	0e 94 c1 13 	call	0x2782	; 0x2782 <print_long>
     9a2:	80 e1       	ldi	r24, 0x10	; 16
     9a4:	0e 94 dd 14 	call	0x29ba	; 0x29ba <button_is_pressed>
     9a8:	88 23       	and	r24, r24
     9aa:	71 f3       	breq	.-36     	; 0x988 <initialize+0x16>
     9ac:	80 e1       	ldi	r24, 0x10	; 16
     9ae:	0e 94 c9 14 	call	0x2992	; 0x2992 <wait_for_button_release>
     9b2:	88 ee       	ldi	r24, 0xE8	; 232
     9b4:	93 e0       	ldi	r25, 0x03	; 3
     9b6:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <delay_ms>
     9ba:	c0 e0       	ldi	r28, 0x00	; 0
     9bc:	d0 e0       	ldi	r29, 0x00	; 0
     9be:	19 c0       	rjmp	.+50     	; 0x9f2 <initialize+0x80>
     9c0:	ce 01       	movw	r24, r28
     9c2:	44 97       	sbiw	r24, 0x14	; 20
     9c4:	88 97       	sbiw	r24, 0x28	; 40
     9c6:	38 f0       	brcs	.+14     	; 0x9d6 <initialize+0x64>
     9c8:	68 ed       	ldi	r22, 0xD8	; 216
     9ca:	7f ef       	ldi	r23, 0xFF	; 255
     9cc:	88 e2       	ldi	r24, 0x28	; 40
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
     9d4:	06 c0       	rjmp	.+12     	; 0x9e2 <initialize+0x70>
     9d6:	68 e2       	ldi	r22, 0x28	; 40
     9d8:	70 e0       	ldi	r23, 0x00	; 0
     9da:	88 ed       	ldi	r24, 0xD8	; 216
     9dc:	9f ef       	ldi	r25, 0xFF	; 255
     9de:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
     9e2:	81 e0       	ldi	r24, 0x01	; 1
     9e4:	0e 94 df 16 	call	0x2dbe	; 0x2dbe <calibrate_line_sensors>
     9e8:	84 e1       	ldi	r24, 0x14	; 20
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <delay_ms>
     9f0:	21 96       	adiw	r28, 0x01	; 1
     9f2:	c0 35       	cpi	r28, 0x50	; 80
     9f4:	d1 05       	cpc	r29, r1
     9f6:	20 f3       	brcs	.-56     	; 0x9c0 <initialize+0x4e>
     9f8:	60 e0       	ldi	r22, 0x00	; 0
     9fa:	70 e0       	ldi	r23, 0x00	; 0
     9fc:	80 e0       	ldi	r24, 0x00	; 0
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
     a04:	80 e1       	ldi	r24, 0x10	; 16
     a06:	0e 94 dd 14 	call	0x29ba	; 0x29ba <button_is_pressed>
     a0a:	88 23       	and	r24, r24
     a0c:	d9 f3       	breq	.-10     	; 0xa04 <initialize+0x92>
     a0e:	80 e1       	ldi	r24, 0x10	; 16
     a10:	0e 94 c9 14 	call	0x2992	; 0x2992 <wait_for_button_release>
     a14:	0e 94 5d 13 	call	0x26ba	; 0x26ba <clear>
     a18:	df 91       	pop	r29
     a1a:	cf 91       	pop	r28
     a1c:	08 95       	ret

00000a1e <inch>:
     a1e:	62 e3       	ldi	r22, 0x32	; 50
     a20:	70 e0       	ldi	r23, 0x00	; 0
     a22:	82 e3       	ldi	r24, 0x32	; 50
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
     a2a:	88 ec       	ldi	r24, 0xC8	; 200
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <delay_ms>
     a32:	60 e0       	ldi	r22, 0x00	; 0
     a34:	70 e0       	ldi	r23, 0x00	; 0
     a36:	80 e0       	ldi	r24, 0x00	; 0
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
     a3e:	08 95       	ret

00000a40 <wait>:
	lcd_goto_xy(0,0);
	print_long(x);	*/
}

void wait(){
	set_motors(0,0);
     a40:	60 e0       	ldi	r22, 0x00	; 0
     a42:	70 e0       	ldi	r23, 0x00	; 0
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
						
	while(!button_is_pressed(BUTTON_B)){}
     a4c:	80 e1       	ldi	r24, 0x10	; 16
     a4e:	0e 94 dd 14 	call	0x29ba	; 0x29ba <button_is_pressed>
     a52:	88 23       	and	r24, r24
     a54:	d9 f3       	breq	.-10     	; 0xa4c <wait+0xc>
	wait_for_button_release(BUTTON_B);
     a56:	80 e1       	ldi	r24, 0x10	; 16
     a58:	0e 94 c9 14 	call	0x2992	; 0x2992 <wait_for_button_release>
     a5c:	08 95       	ret

00000a5e <motorControl>:
		
	
	}
}

void motorControl(char x){													// function that controlls the motor movement and the turns
     a5e:	8f 92       	push	r8
     a60:	9f 92       	push	r9
     a62:	af 92       	push	r10
     a64:	bf 92       	push	r11
     a66:	cf 92       	push	r12
     a68:	df 92       	push	r13
     a6a:	ef 92       	push	r14
     a6c:	ff 92       	push	r15
     a6e:	0f 93       	push	r16
     a70:	1f 93       	push	r17
     a72:	cf 93       	push	r28
     a74:	df 93       	push	r29
     a76:	c8 2f       	mov	r28, r24
	myComs->Update(myComs);
     a78:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <myComs>
     a7c:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <myComs+0x1>
     a80:	fc 01       	movw	r30, r24
     a82:	ef 58       	subi	r30, 0x8F	; 143
     a84:	ff 4f       	sbci	r31, 0xFF	; 255
     a86:	01 90       	ld	r0, Z+
     a88:	f0 81       	ld	r31, Z
     a8a:	e0 2d       	mov	r30, r0
     a8c:	09 95       	icall
	unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     a8e:	61 e0       	ldi	r22, 0x01	; 1
     a90:	81 e1       	ldi	r24, 0x11	; 17
     a92:	92 e0       	ldi	r25, 0x02	; 2
     a94:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <read_line>
     a98:	8c 01       	movw	r16, r24
	read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     a9a:	61 e0       	ldi	r22, 0x01	; 1
     a9c:	81 e1       	ldi	r24, 0x11	; 17
     a9e:	92 e0       	ldi	r25, 0x02	; 2
     aa0:	0e 94 e5 16 	call	0x2dca	; 0x2dca <read_line_sensors_calibrated>
	
	if(myComs->EmergencyStop == 1)															//Emergency Brake
     aa4:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     aa8:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     aac:	e5 59       	subi	r30, 0x95	; 149
     aae:	ff 4f       	sbci	r31, 0xFF	; 255
     ab0:	80 81       	ld	r24, Z
     ab2:	81 30       	cpi	r24, 0x01	; 1
     ab4:	39 f4       	brne	.+14     	; 0xac4 <motorControl+0x66>
		set_motors(0,0);	
     ab6:	60 e0       	ldi	r22, 0x00	; 0
     ab8:	70 e0       	ldi	r23, 0x00	; 0
     aba:	80 e0       	ldi	r24, 0x00	; 0
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
     ac2:	05 c1       	rjmp	.+522    	; 0xcce <motorControl+0x270>
	
	
	else if(x == 'L'){														//Turn Left
     ac4:	cc 34       	cpi	r28, 0x4C	; 76
     ac6:	39 f5       	brne	.+78     	; 0xb16 <motorControl+0xb8>
		set_motors(-turn_value,turn_value);
     ac8:	6c e3       	ldi	r22, 0x3C	; 60
     aca:	70 e0       	ldi	r23, 0x00	; 0
     acc:	84 ec       	ldi	r24, 0xC4	; 196
     ace:	9f ef       	ldi	r25, 0xFF	; 255
     ad0:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
		
		while (sensors[2] >=Refrence_value)
     ad4:	05 c0       	rjmp	.+10     	; 0xae0 <motorControl+0x82>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     ad6:	61 e0       	ldi	r22, 0x01	; 1
     ad8:	81 e1       	ldi	r24, 0x11	; 17
     ada:	92 e0       	ldi	r25, 0x02	; 2
     adc:	0e 94 e5 16 	call	0x2dca	; 0x2dca <read_line_sensors_calibrated>
	
	
	else if(x == 'L'){														//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] >=Refrence_value)
     ae0:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     ae4:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     ae8:	80 39       	cpi	r24, 0x90	; 144
     aea:	91 40       	sbci	r25, 0x01	; 1
     aec:	a0 f7       	brcc	.-24     	; 0xad6 <motorControl+0x78>
     aee:	05 c0       	rjmp	.+10     	; 0xafa <motorControl+0x9c>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     af0:	61 e0       	ldi	r22, 0x01	; 1
     af2:	81 e1       	ldi	r24, 0x11	; 17
     af4:	92 e0       	ldi	r25, 0x02	; 2
     af6:	0e 94 e5 16 	call	0x2dca	; 0x2dca <read_line_sensors_calibrated>
	else if(x == 'L'){														//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] >=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
     afa:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     afe:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     b02:	81 39       	cpi	r24, 0x91	; 145
     b04:	91 40       	sbci	r25, 0x01	; 1
     b06:	a0 f3       	brcs	.-24     	; 0xaf0 <motorControl+0x92>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		set_motors(0,0);
     b08:	60 e0       	ldi	r22, 0x00	; 0
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	80 e0       	ldi	r24, 0x00	; 0
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
     b14:	dc c0       	rjmp	.+440    	; 0xcce <motorControl+0x270>
	}
	
	
	else if(x == 'R'){														//Turn Right
     b16:	c2 35       	cpi	r28, 0x52	; 82
     b18:	39 f5       	brne	.+78     	; 0xb68 <motorControl+0x10a>
		set_motors(turn_value,-turn_value);
     b1a:	64 ec       	ldi	r22, 0xC4	; 196
     b1c:	7f ef       	ldi	r23, 0xFF	; 255
     b1e:	8c e3       	ldi	r24, 0x3C	; 60
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
		
		while (sensors[2] >=Refrence_value)
     b26:	05 c0       	rjmp	.+10     	; 0xb32 <motorControl+0xd4>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     b28:	61 e0       	ldi	r22, 0x01	; 1
     b2a:	81 e1       	ldi	r24, 0x11	; 17
     b2c:	92 e0       	ldi	r25, 0x02	; 2
     b2e:	0e 94 e5 16 	call	0x2dca	; 0x2dca <read_line_sensors_calibrated>
	
	
	else if(x == 'R'){														//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] >=Refrence_value)
     b32:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     b36:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     b3a:	80 39       	cpi	r24, 0x90	; 144
     b3c:	91 40       	sbci	r25, 0x01	; 1
     b3e:	a0 f7       	brcc	.-24     	; 0xb28 <motorControl+0xca>
     b40:	05 c0       	rjmp	.+10     	; 0xb4c <motorControl+0xee>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     b42:	61 e0       	ldi	r22, 0x01	; 1
     b44:	81 e1       	ldi	r24, 0x11	; 17
     b46:	92 e0       	ldi	r25, 0x02	; 2
     b48:	0e 94 e5 16 	call	0x2dca	; 0x2dca <read_line_sensors_calibrated>
	else if(x == 'R'){														//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] >=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
     b4c:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     b50:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     b54:	81 39       	cpi	r24, 0x91	; 145
     b56:	91 40       	sbci	r25, 0x01	; 1
     b58:	a0 f3       	brcs	.-24     	; 0xb42 <motorControl+0xe4>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		set_motors(0,0);
     b5a:	60 e0       	ldi	r22, 0x00	; 0
     b5c:	70 e0       	ldi	r23, 0x00	; 0
     b5e:	80 e0       	ldi	r24, 0x00	; 0
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
     b66:	b3 c0       	rjmp	.+358    	; 0xcce <motorControl+0x270>
	}
		
			
	else if(x == 'S'){												//drive straight and adjusts the robot so it follows the line
     b68:	c3 35       	cpi	r28, 0x53	; 83
     b6a:	09 f0       	breq	.+2      	; 0xb6e <motorControl+0x110>
     b6c:	66 c0       	rjmp	.+204    	; 0xc3a <motorControl+0x1dc>
		// are not interested in the individual sensor readings.
		// The "proportional" term should be 0 when we are on the line.
		int proportional = ((int)position) - 2000;
     b6e:	c8 01       	movw	r24, r16
     b70:	80 5d       	subi	r24, 0xD0	; 208
     b72:	97 40       	sbci	r25, 0x07	; 7

		// Compute the derivative (change) and integral (sum) of the
		// position.
		int derivative = proportional - last_proportional;
     b74:	20 91 0d 02 	lds	r18, 0x020D	; 0x80020d <last_proportional>
     b78:	30 91 0e 02 	lds	r19, 0x020E	; 0x80020e <last_proportional+0x1>
     b7c:	ec 01       	movw	r28, r24
     b7e:	c2 1b       	sub	r28, r18
     b80:	d3 0b       	sbc	r29, r19
		integral = integral + proportional;
     b82:	60 91 0f 02 	lds	r22, 0x020F	; 0x80020f <integral>
     b86:	70 91 10 02 	lds	r23, 0x0210	; 0x800210 <integral+0x1>
     b8a:	fc 01       	movw	r30, r24
     b8c:	e6 0f       	add	r30, r22
     b8e:	f7 1f       	adc	r31, r23
     b90:	f0 93 10 02 	sts	0x0210, r31	; 0x800210 <integral+0x1>
     b94:	e0 93 0f 02 	sts	0x020F, r30	; 0x80020f <integral>

		// Remember the last position.
		 last_proportional = proportional;
     b98:	90 93 0e 02 	sts	0x020E, r25	; 0x80020e <last_proportional+0x1>
     b9c:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <last_proportional>
 
 
		int power_difference = proportional/10 + integral/40000 + derivative*0.50;						// derivative == stuur snelheid
     ba0:	6a e0       	ldi	r22, 0x0A	; 10
     ba2:	70 e0       	ldi	r23, 0x00	; 0
     ba4:	0e 94 52 1c 	call	0x38a4	; 0x38a4 <__divmodhi4>
     ba8:	6b 01       	movw	r12, r22
     baa:	bf 01       	movw	r22, r30
     bac:	ff 0f       	add	r31, r31
     bae:	88 0b       	sbc	r24, r24
     bb0:	99 0b       	sbc	r25, r25
     bb2:	20 e4       	ldi	r18, 0x40	; 64
     bb4:	3c e9       	ldi	r19, 0x9C	; 156
     bb6:	40 e0       	ldi	r20, 0x00	; 0
     bb8:	50 e0       	ldi	r21, 0x00	; 0
     bba:	0e 94 88 1c 	call	0x3910	; 0x3910 <__divmodsi4>
     bbe:	0d 2c       	mov	r0, r13
     bc0:	00 0c       	add	r0, r0
     bc2:	ee 08       	sbc	r14, r14
     bc4:	ff 08       	sbc	r15, r15
     bc6:	c2 0e       	add	r12, r18
     bc8:	d3 1e       	adc	r13, r19
     bca:	e4 1e       	adc	r14, r20
     bcc:	f5 1e       	adc	r15, r21
     bce:	be 01       	movw	r22, r28
     bd0:	dd 0f       	add	r29, r29
     bd2:	88 0b       	sbc	r24, r24
     bd4:	99 0b       	sbc	r25, r25
     bd6:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <__floatsisf>
     bda:	20 e0       	ldi	r18, 0x00	; 0
     bdc:	30 e0       	ldi	r19, 0x00	; 0
     bde:	40 e0       	ldi	r20, 0x00	; 0
     be0:	5f e3       	ldi	r21, 0x3F	; 63
     be2:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <__mulsf3>
     be6:	4b 01       	movw	r8, r22
     be8:	5c 01       	movw	r10, r24
     bea:	c7 01       	movw	r24, r14
     bec:	b6 01       	movw	r22, r12
     bee:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <__floatsisf>
     bf2:	a5 01       	movw	r20, r10
     bf4:	94 01       	movw	r18, r8
     bf6:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__addsf3>
     bfa:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__fixsfsi>
     bfe:	cb 01       	movw	r24, r22

		// Compute the actual motor settings.  We never set either motor
		// to a negative value.
		const int max = 70;
		if(power_difference > max)
     c00:	67 34       	cpi	r22, 0x47	; 71
     c02:	71 05       	cpc	r23, r1
     c04:	14 f0       	brlt	.+4      	; 0xc0a <motorControl+0x1ac>
			power_difference = max;
     c06:	86 e4       	ldi	r24, 0x46	; 70
     c08:	90 e0       	ldi	r25, 0x00	; 0
		if(power_difference < -max)
     c0a:	8a 3b       	cpi	r24, 0xBA	; 186
     c0c:	2f ef       	ldi	r18, 0xFF	; 255
     c0e:	92 07       	cpc	r25, r18
     c10:	14 f4       	brge	.+4      	; 0xc16 <motorControl+0x1b8>
			power_difference = -max;
     c12:	8a eb       	ldi	r24, 0xBA	; 186
     c14:	9f ef       	ldi	r25, 0xFF	; 255

		if(power_difference < 0)
     c16:	99 23       	and	r25, r25
     c18:	3c f4       	brge	.+14     	; 0xc28 <motorControl+0x1ca>
			set_motors(max+power_difference, max);
     c1a:	66 e4       	ldi	r22, 0x46	; 70
     c1c:	70 e0       	ldi	r23, 0x00	; 0
     c1e:	8a 5b       	subi	r24, 0xBA	; 186
     c20:	9f 4f       	sbci	r25, 0xFF	; 255
     c22:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
     c26:	53 c0       	rjmp	.+166    	; 0xcce <motorControl+0x270>
		else
			set_motors(max, max-power_difference);
     c28:	66 e4       	ldi	r22, 0x46	; 70
     c2a:	70 e0       	ldi	r23, 0x00	; 0
     c2c:	68 1b       	sub	r22, r24
     c2e:	79 0b       	sbc	r23, r25
     c30:	86 e4       	ldi	r24, 0x46	; 70
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
     c38:	4a c0       	rjmp	.+148    	; 0xcce <motorControl+0x270>
		
	}
	
	
	else if(x == 'B'){														//Reverse while following the line
     c3a:	c2 34       	cpi	r28, 0x42	; 66
     c3c:	09 f5       	brne	.+66     	; 0xc80 <motorControl+0x222>
		set_motors(-50,-50);
     c3e:	6e ec       	ldi	r22, 0xCE	; 206
     c40:	7f ef       	ldi	r23, 0xFF	; 255
     c42:	8e ec       	ldi	r24, 0xCE	; 206
     c44:	9f ef       	ldi	r25, 0xFF	; 255
     c46:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
		
		if (sensors[3] >=Refrence_value)
     c4a:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     c4e:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     c52:	80 39       	cpi	r24, 0x90	; 144
     c54:	91 40       	sbci	r25, 0x01	; 1
     c56:	30 f0       	brcs	.+12     	; 0xc64 <motorControl+0x206>
			set_motors(-50,-55);
     c58:	69 ec       	ldi	r22, 0xC9	; 201
     c5a:	7f ef       	ldi	r23, 0xFF	; 255
     c5c:	8e ec       	ldi	r24, 0xCE	; 206
     c5e:	9f ef       	ldi	r25, 0xFF	; 255
     c60:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
		if (sensors[1] >=Refrence_value)
     c64:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     c68:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     c6c:	80 39       	cpi	r24, 0x90	; 144
     c6e:	91 40       	sbci	r25, 0x01	; 1
     c70:	70 f1       	brcs	.+92     	; 0xcce <motorControl+0x270>
			set_motors(-55,-50);
     c72:	6e ec       	ldi	r22, 0xCE	; 206
     c74:	7f ef       	ldi	r23, 0xFF	; 255
     c76:	89 ec       	ldi	r24, 0xC9	; 201
     c78:	9f ef       	ldi	r25, 0xFF	; 255
     c7a:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
     c7e:	27 c0       	rjmp	.+78     	; 0xcce <motorControl+0x270>
	}
	
	
	else if(x == 'T'){														// Turn around
     c80:	c4 35       	cpi	r28, 0x54	; 84
     c82:	a1 f4       	brne	.+40     	; 0xcac <motorControl+0x24e>
		set_motors(-turn_value,turn_value);
     c84:	6c e3       	ldi	r22, 0x3C	; 60
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	84 ec       	ldi	r24, 0xC4	; 196
     c8a:	9f ef       	ldi	r25, 0xFF	; 255
     c8c:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
		
		while (sensors[2] <=Refrence_value)
     c90:	05 c0       	rjmp	.+10     	; 0xc9c <motorControl+0x23e>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     c92:	61 e0       	ldi	r22, 0x01	; 1
     c94:	81 e1       	ldi	r24, 0x11	; 17
     c96:	92 e0       	ldi	r25, 0x02	; 2
     c98:	0e 94 e5 16 	call	0x2dca	; 0x2dca <read_line_sensors_calibrated>
	
	
	else if(x == 'T'){														// Turn around
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] <=Refrence_value)
     c9c:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     ca0:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     ca4:	81 39       	cpi	r24, 0x91	; 145
     ca6:	91 40       	sbci	r25, 0x01	; 1
     ca8:	a0 f3       	brcs	.-24     	; 0xc92 <motorControl+0x234>
     caa:	11 c0       	rjmp	.+34     	; 0xcce <motorControl+0x270>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'P')														//Robot stops on a slow pace
     cac:	c0 35       	cpi	r28, 0x50	; 80
     cae:	79 f4       	brne	.+30     	; 0xcce <motorControl+0x270>
     cb0:	0a c0       	rjmp	.+20     	; 0xcc6 <motorControl+0x268>
		for( int i=50;i>=0;i-=2)
		{
			set_motors(i,i);
     cb2:	be 01       	movw	r22, r28
     cb4:	ce 01       	movw	r24, r28
     cb6:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     cba:	85 e0       	ldi	r24, 0x05	; 5
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <delay_ms>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'P')														//Robot stops on a slow pace
		for( int i=50;i>=0;i-=2)
     cc2:	22 97       	sbiw	r28, 0x02	; 2
     cc4:	02 c0       	rjmp	.+4      	; 0xcca <motorControl+0x26c>
     cc6:	c2 e3       	ldi	r28, 0x32	; 50
     cc8:	d0 e0       	ldi	r29, 0x00	; 0
     cca:	dd 23       	and	r29, r29
     ccc:	94 f7       	brge	.-28     	; 0xcb2 <motorControl+0x254>
			set_motors(i,i);
			delay(5);
		}
		
		
}
     cce:	df 91       	pop	r29
     cd0:	cf 91       	pop	r28
     cd2:	1f 91       	pop	r17
     cd4:	0f 91       	pop	r16
     cd6:	ff 90       	pop	r15
     cd8:	ef 90       	pop	r14
     cda:	df 90       	pop	r13
     cdc:	cf 90       	pop	r12
     cde:	bf 90       	pop	r11
     ce0:	af 90       	pop	r10
     ce2:	9f 90       	pop	r9
     ce4:	8f 90       	pop	r8
     ce6:	08 95       	ret

00000ce8 <lineType>:
						
	while(!button_is_pressed(BUTTON_B)){}
	wait_for_button_release(BUTTON_B);
}

char lineType(){																																	// function that returns the type of junction it detects
     ce8:	cf 93       	push	r28
     cea:	df 93       	push	r29
	while(1){																																		// >= 500 = black line		<=500 = white
		read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     cec:	61 e0       	ldi	r22, 0x01	; 1
     cee:	81 e1       	ldi	r24, 0x11	; 17
     cf0:	92 e0       	ldi	r25, 0x02	; 2
     cf2:	0e 94 e5 16 	call	0x2dca	; 0x2dca <read_line_sensors_calibrated>
					
		if (sensors[0] >=Refrence_value && sensors[1] >= Refrence_value && sensors[4] <= Refrence_value ){																							//Checks if its a left corner or a straight with left corner
     cf6:	20 91 11 02 	lds	r18, 0x0211	; 0x800211 <sensors>
     cfa:	30 91 12 02 	lds	r19, 0x0212	; 0x800212 <sensors+0x1>
     cfe:	20 39       	cpi	r18, 0x90	; 144
     d00:	41 e0       	ldi	r20, 0x01	; 1
     d02:	34 07       	cpc	r19, r20
     d04:	38 f1       	brcs	.+78     	; 0xd54 <lineType+0x6c>
     d06:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     d0a:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     d0e:	80 39       	cpi	r24, 0x90	; 144
     d10:	91 40       	sbci	r25, 0x01	; 1
     d12:	00 f1       	brcs	.+64     	; 0xd54 <lineType+0x6c>
     d14:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x8>
     d18:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x9>
     d1c:	81 39       	cpi	r24, 0x91	; 145
     d1e:	91 40       	sbci	r25, 0x01	; 1
     d20:	c8 f4       	brcc	.+50     	; 0xd54 <lineType+0x6c>
			inch();
     d22:	0e 94 0f 05 	call	0xa1e	; 0xa1e <inch>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     d26:	61 e0       	ldi	r22, 0x01	; 1
     d28:	81 e1       	ldi	r24, 0x11	; 17
     d2a:	92 e0       	ldi	r25, 0x02	; 2
     d2c:	0e 94 e5 16 	call	0x2dca	; 0x2dca <read_line_sensors_calibrated>
			
			if (sensors[2] >= Refrence_value || sensors[3] >=Refrence_value){
     d30:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     d34:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     d38:	80 39       	cpi	r24, 0x90	; 144
     d3a:	91 40       	sbci	r25, 0x01	; 1
     d3c:	08 f0       	brcs	.+2      	; 0xd40 <lineType+0x58>
     d3e:	ca c0       	rjmp	.+404    	; 0xed4 <lineType+0x1ec>
     d40:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     d44:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     d48:	80 39       	cpi	r24, 0x90	; 144
     d4a:	91 40       	sbci	r25, 0x01	; 1
     d4c:	08 f4       	brcc	.+2      	; 0xd50 <lineType+0x68>
     d4e:	c4 c0       	rjmp	.+392    	; 0xed8 <lineType+0x1f0>
				println(Straight_left_junction);
				return Straight_left_junction;
     d50:	86 e0       	ldi	r24, 0x06	; 6
     d52:	cf c0       	rjmp	.+414    	; 0xef2 <lineType+0x20a>
				return Left_corner;
			}
		}
		
		
		else if (sensors[3] >=Refrence_value && sensors[4] >= Refrence_value && sensors[0] <= Refrence_value){																							//Checks if its a right corner or a straight with right corner
     d54:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     d58:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     d5c:	80 39       	cpi	r24, 0x90	; 144
     d5e:	41 e0       	ldi	r20, 0x01	; 1
     d60:	94 07       	cpc	r25, r20
     d62:	18 f1       	brcs	.+70     	; 0xdaa <lineType+0xc2>
     d64:	40 91 19 02 	lds	r20, 0x0219	; 0x800219 <sensors+0x8>
     d68:	50 91 1a 02 	lds	r21, 0x021A	; 0x80021a <sensors+0x9>
     d6c:	40 39       	cpi	r20, 0x90	; 144
     d6e:	51 40       	sbci	r21, 0x01	; 1
     d70:	e0 f0       	brcs	.+56     	; 0xdaa <lineType+0xc2>
     d72:	21 39       	cpi	r18, 0x91	; 145
     d74:	31 40       	sbci	r19, 0x01	; 1
     d76:	c8 f4       	brcc	.+50     	; 0xdaa <lineType+0xc2>
			inch();
     d78:	0e 94 0f 05 	call	0xa1e	; 0xa1e <inch>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     d7c:	61 e0       	ldi	r22, 0x01	; 1
     d7e:	81 e1       	ldi	r24, 0x11	; 17
     d80:	92 e0       	ldi	r25, 0x02	; 2
     d82:	0e 94 e5 16 	call	0x2dca	; 0x2dca <read_line_sensors_calibrated>
			
			if (sensors[2] >= Refrence_value || sensors[1] >=Refrence_value){
     d86:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     d8a:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     d8e:	80 39       	cpi	r24, 0x90	; 144
     d90:	91 40       	sbci	r25, 0x01	; 1
     d92:	08 f0       	brcs	.+2      	; 0xd96 <lineType+0xae>
     d94:	a3 c0       	rjmp	.+326    	; 0xedc <lineType+0x1f4>
     d96:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     d9a:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     d9e:	80 39       	cpi	r24, 0x90	; 144
     da0:	91 40       	sbci	r25, 0x01	; 1
     da2:	08 f4       	brcc	.+2      	; 0xda6 <lineType+0xbe>
     da4:	9d c0       	rjmp	.+314    	; 0xee0 <lineType+0x1f8>
				println(Straight_right_junction);
				return Straight_right_junction;
     da6:	85 e0       	ldi	r24, 0x05	; 5
     da8:	a4 c0       	rjmp	.+328    	; 0xef2 <lineType+0x20a>
				println(Straight_left_junction);
				return Right_corner;
			}
		}
		
				else if (sensors[1] >=Refrence_value && sensors[3] >= Refrence_value){																									//Checks if its a X junction or a T junction
     daa:	20 91 13 02 	lds	r18, 0x0213	; 0x800213 <sensors+0x2>
     dae:	30 91 14 02 	lds	r19, 0x0214	; 0x800214 <sensors+0x3>
     db2:	20 39       	cpi	r18, 0x90	; 144
     db4:	41 e0       	ldi	r20, 0x01	; 1
     db6:	34 07       	cpc	r19, r20
     db8:	08 f4       	brcc	.+2      	; 0xdbc <lineType+0xd4>
     dba:	7d c0       	rjmp	.+250    	; 0xeb6 <lineType+0x1ce>
     dbc:	80 39       	cpi	r24, 0x90	; 144
     dbe:	61 e0       	ldi	r22, 0x01	; 1
     dc0:	96 07       	cpc	r25, r22
     dc2:	08 f4       	brcc	.+2      	; 0xdc6 <lineType+0xde>
     dc4:	78 c0       	rjmp	.+240    	; 0xeb6 <lineType+0x1ce>
					inch();
     dc6:	0e 94 0f 05 	call	0xa1e	; 0xa1e <inch>
					read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     dca:	61 e0       	ldi	r22, 0x01	; 1
     dcc:	81 e1       	ldi	r24, 0x11	; 17
     dce:	92 e0       	ldi	r25, 0x02	; 2
     dd0:	0e 94 e5 16 	call	0x2dca	; 0x2dca <read_line_sensors_calibrated>
					if (sensors[0] >=Refrence_value && sensors[1] >=Refrence_value && sensors[3] >= Refrence_value && sensors[4] >=Refrence_value){
     dd4:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <sensors>
     dd8:	90 91 12 02 	lds	r25, 0x0212	; 0x800212 <sensors+0x1>
     ddc:	80 39       	cpi	r24, 0x90	; 144
     dde:	91 40       	sbci	r25, 0x01	; 1
     de0:	08 f4       	brcc	.+2      	; 0xde4 <lineType+0xfc>
     de2:	60 c0       	rjmp	.+192    	; 0xea4 <lineType+0x1bc>
     de4:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     de8:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     dec:	80 39       	cpi	r24, 0x90	; 144
     dee:	91 40       	sbci	r25, 0x01	; 1
     df0:	08 f4       	brcc	.+2      	; 0xdf4 <lineType+0x10c>
     df2:	58 c0       	rjmp	.+176    	; 0xea4 <lineType+0x1bc>
     df4:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     df8:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     dfc:	80 39       	cpi	r24, 0x90	; 144
     dfe:	91 40       	sbci	r25, 0x01	; 1
     e00:	08 f4       	brcc	.+2      	; 0xe04 <lineType+0x11c>
     e02:	50 c0       	rjmp	.+160    	; 0xea4 <lineType+0x1bc>
     e04:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x8>
     e08:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x9>
     e0c:	80 39       	cpi	r24, 0x90	; 144
     e0e:	91 40       	sbci	r25, 0x01	; 1
     e10:	08 f4       	brcc	.+2      	; 0xe14 <lineType+0x12c>
     e12:	48 c0       	rjmp	.+144    	; 0xea4 <lineType+0x1bc>
						clear();
     e14:	0e 94 5d 13 	call	0x26ba	; 0x26ba <clear>
						while(sensors[0] >= 400 || sensors[4] >=400)
     e18:	31 c0       	rjmp	.+98     	; 0xe7c <lineType+0x194>
						{
							lcd_goto_xy(0,0);
     e1a:	60 e0       	ldi	r22, 0x00	; 0
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <lcd_goto_xy>
							print_long(sensors[1]);
     e22:	c1 e1       	ldi	r28, 0x11	; 17
     e24:	d2 e0       	ldi	r29, 0x02	; 2
     e26:	6a 81       	ldd	r22, Y+2	; 0x02
     e28:	7b 81       	ldd	r23, Y+3	; 0x03
     e2a:	80 e0       	ldi	r24, 0x00	; 0
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	0e 94 c1 13 	call	0x2782	; 0x2782 <print_long>
							lcd_goto_xy(0,1);
     e32:	61 e0       	ldi	r22, 0x01	; 1
     e34:	80 e0       	ldi	r24, 0x00	; 0
     e36:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <lcd_goto_xy>
							print_long(sensors[3]);
     e3a:	6e 81       	ldd	r22, Y+6	; 0x06
     e3c:	7f 81       	ldd	r23, Y+7	; 0x07
     e3e:	80 e0       	ldi	r24, 0x00	; 0
     e40:	90 e0       	ldi	r25, 0x00	; 0
     e42:	0e 94 c1 13 	call	0x2782	; 0x2782 <print_long>
							lcd_goto_xy(5,0);
     e46:	60 e0       	ldi	r22, 0x00	; 0
     e48:	85 e0       	ldi	r24, 0x05	; 5
     e4a:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <lcd_goto_xy>
							print_long(sensors[0]);
     e4e:	68 81       	ld	r22, Y
     e50:	79 81       	ldd	r23, Y+1	; 0x01
     e52:	80 e0       	ldi	r24, 0x00	; 0
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	0e 94 c1 13 	call	0x2782	; 0x2782 <print_long>
							lcd_goto_xy(5,1);
     e5a:	61 e0       	ldi	r22, 0x01	; 1
     e5c:	85 e0       	ldi	r24, 0x05	; 5
     e5e:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <lcd_goto_xy>
							print_long(sensors[4]);
     e62:	68 85       	ldd	r22, Y+8	; 0x08
     e64:	79 85       	ldd	r23, Y+9	; 0x09
     e66:	80 e0       	ldi	r24, 0x00	; 0
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	0e 94 c1 13 	call	0x2782	; 0x2782 <print_long>
							
							read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     e6e:	61 e0       	ldi	r22, 0x01	; 1
     e70:	ce 01       	movw	r24, r28
     e72:	0e 94 e5 16 	call	0x2dca	; 0x2dca <read_line_sensors_calibrated>
							motorControl('S');
     e76:	83 e5       	ldi	r24, 0x53	; 83
     e78:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
				else if (sensors[1] >=Refrence_value && sensors[3] >= Refrence_value){																									//Checks if its a X junction or a T junction
					inch();
					read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
					if (sensors[0] >=Refrence_value && sensors[1] >=Refrence_value && sensors[3] >= Refrence_value && sensors[4] >=Refrence_value){
						clear();
						while(sensors[0] >= 400 || sensors[4] >=400)
     e7c:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <sensors>
     e80:	90 91 12 02 	lds	r25, 0x0212	; 0x800212 <sensors+0x1>
     e84:	80 39       	cpi	r24, 0x90	; 144
     e86:	91 40       	sbci	r25, 0x01	; 1
     e88:	40 f6       	brcc	.-112    	; 0xe1a <lineType+0x132>
     e8a:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x8>
     e8e:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x9>
     e92:	80 39       	cpi	r24, 0x90	; 144
     e94:	91 40       	sbci	r25, 0x01	; 1
     e96:	08 f6       	brcc	.-126    	; 0xe1a <lineType+0x132>
							print_long(sensors[4]);
							
							read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
							motorControl('S');
						}
						wait();
     e98:	0e 94 20 05 	call	0xa40	; 0xa40 <wait>
						clear();
     e9c:	0e 94 5d 13 	call	0x26ba	; 0x26ba <clear>
					return Barcode;
     ea0:	82 e0       	ldi	r24, 0x02	; 2
     ea2:	27 c0       	rjmp	.+78     	; 0xef2 <lineType+0x20a>
					}
					else if (sensors[2] >=Refrence_value){
     ea4:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     ea8:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     eac:	80 39       	cpi	r24, 0x90	; 144
     eae:	91 40       	sbci	r25, 0x01	; 1
     eb0:	c8 f0       	brcs	.+50     	; 0xee4 <lineType+0x1fc>
						println(X_junction);
						return X_junction;
     eb2:	88 e0       	ldi	r24, 0x08	; 8
     eb4:	1e c0       	rjmp	.+60     	; 0xef2 <lineType+0x20a>
						println(T_junction);
						return T_junction;
					}
				}
				
				else if(sensors[2] <= End_Line_Value && sensors[1] <=End_Line_Value && sensors[3] <=End_Line_Value){
     eb6:	40 91 15 02 	lds	r20, 0x0215	; 0x800215 <sensors+0x4>
     eba:	50 91 16 02 	lds	r21, 0x0216	; 0x800216 <sensors+0x5>
     ebe:	49 3c       	cpi	r20, 0xC9	; 201
     ec0:	51 05       	cpc	r21, r1
     ec2:	90 f4       	brcc	.+36     	; 0xee8 <lineType+0x200>
     ec4:	29 3c       	cpi	r18, 0xC9	; 201
     ec6:	31 05       	cpc	r19, r1
     ec8:	88 f4       	brcc	.+34     	; 0xeec <lineType+0x204>
     eca:	89 3c       	cpi	r24, 0xC9	; 201
     ecc:	91 05       	cpc	r25, r1
     ece:	80 f0       	brcs	.+32     	; 0xef0 <lineType+0x208>
			}
			else{
				println(Straight);
				return Straight;
			}				*/																					// check if its straight without any corners
			return Straight;
     ed0:	80 e0       	ldi	r24, 0x00	; 0
     ed2:	0f c0       	rjmp	.+30     	; 0xef2 <lineType+0x20a>
			inch();
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= Refrence_value || sensors[3] >=Refrence_value){
				println(Straight_left_junction);
				return Straight_left_junction;
     ed4:	86 e0       	ldi	r24, 0x06	; 6
     ed6:	0d c0       	rjmp	.+26     	; 0xef2 <lineType+0x20a>
			}
			else{
				println(Left_corner);
				return Left_corner;
     ed8:	83 e0       	ldi	r24, 0x03	; 3
     eda:	0b c0       	rjmp	.+22     	; 0xef2 <lineType+0x20a>
			inch();
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= Refrence_value || sensors[1] >=Refrence_value){
				println(Straight_right_junction);
				return Straight_right_junction;
     edc:	85 e0       	ldi	r24, 0x05	; 5
     ede:	09 c0       	rjmp	.+18     	; 0xef2 <lineType+0x20a>
			}
			else{
				println(Straight_left_junction);
				return Right_corner;
     ee0:	84 e0       	ldi	r24, 0x04	; 4
     ee2:	07 c0       	rjmp	.+14     	; 0xef2 <lineType+0x20a>
						println(X_junction);
						return X_junction;
					}
					else {
						println(T_junction);
						return T_junction;
     ee4:	87 e0       	ldi	r24, 0x07	; 7
     ee6:	05 c0       	rjmp	.+10     	; 0xef2 <lineType+0x20a>
			}
			else{
				println(Straight);
				return Straight;
			}				*/																					// check if its straight without any corners
			return Straight;
     ee8:	80 e0       	ldi	r24, 0x00	; 0
     eea:	03 c0       	rjmp	.+6      	; 0xef2 <lineType+0x20a>
     eec:	80 e0       	ldi	r24, 0x00	; 0
     eee:	01 c0       	rjmp	.+2      	; 0xef2 <lineType+0x20a>
					}
				}
				
				else if(sensors[2] <= End_Line_Value && sensors[1] <=End_Line_Value && sensors[3] <=End_Line_Value){
					println(Line_end);																													// check if the line ends
					return Line_end;
     ef0:	81 e0       	ldi	r24, 0x01	; 1
			return Straight;
		}
		
	
	}
}
     ef2:	df 91       	pop	r29
     ef4:	cf 91       	pop	r28
     ef6:	08 95       	ret

00000ef8 <manualControl>:
}




void manualControl(){
     ef8:	cf 93       	push	r28
     efa:	df 93       	push	r29
int speed = 0;

	if(myComs->Direction[0] == 1){
     efc:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     f00:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     f04:	85 a9       	ldd	r24, Z+53	; 0x35
     f06:	81 30       	cpi	r24, 0x01	; 1
     f08:	49 f4       	brne	.+18     	; 0xf1c <manualControl+0x24>
		set_motors(speed,speed);
     f0a:	60 e0       	ldi	r22, 0x00	; 0
     f0c:	70 e0       	ldi	r23, 0x00	; 0
     f0e:	80 e0       	ldi	r24, 0x00	; 0
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
		speed++;
     f16:	c1 e0       	ldi	r28, 0x01	; 1
     f18:	d0 e0       	ldi	r29, 0x00	; 0
     f1a:	02 c0       	rjmp	.+4      	; 0xf20 <manualControl+0x28>




void manualControl(){
int speed = 0;
     f1c:	c0 e0       	ldi	r28, 0x00	; 0
     f1e:	d0 e0       	ldi	r29, 0x00	; 0
	if(myComs->Direction[0] == 1){
		set_motors(speed,speed);
		speed++;
	}
	
	if(myComs->Direction[1] == 1){
     f20:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     f24:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     f28:	86 a9       	ldd	r24, Z+54	; 0x36
     f2a:	81 30       	cpi	r24, 0x01	; 1
     f2c:	41 f4       	brne	.+16     	; 0xf3e <manualControl+0x46>
		set_motors(-speed,-speed);
     f2e:	88 27       	eor	r24, r24
     f30:	99 27       	eor	r25, r25
     f32:	8c 1b       	sub	r24, r28
     f34:	9d 0b       	sbc	r25, r29
     f36:	bc 01       	movw	r22, r24
     f38:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
		speed--;
     f3c:	21 97       	sbiw	r28, 0x01	; 1
	}
	
	if(myComs->Direction[2] == 1){
     f3e:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     f42:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     f46:	87 a9       	ldd	r24, Z+55	; 0x37
     f48:	81 30       	cpi	r24, 0x01	; 1
     f4a:	49 f4       	brne	.+18     	; 0xf5e <manualControl+0x66>
		set_motors(speed/2,speed);
     f4c:	ce 01       	movw	r24, r28
     f4e:	dd 23       	and	r29, r29
     f50:	0c f4       	brge	.+2      	; 0xf54 <manualControl+0x5c>
     f52:	01 96       	adiw	r24, 0x01	; 1
     f54:	be 01       	movw	r22, r28
     f56:	95 95       	asr	r25
     f58:	87 95       	ror	r24
     f5a:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
	}
	
	if(myComs->Direction[3] == 1){
     f5e:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     f62:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     f66:	80 ad       	ldd	r24, Z+56	; 0x38
     f68:	81 30       	cpi	r24, 0x01	; 1
     f6a:	51 f4       	brne	.+20     	; 0xf80 <manualControl+0x88>
		set_motors(speed,speed/2);
     f6c:	be 01       	movw	r22, r28
     f6e:	dd 23       	and	r29, r29
     f70:	14 f4       	brge	.+4      	; 0xf76 <manualControl+0x7e>
     f72:	6f 5f       	subi	r22, 0xFF	; 255
     f74:	7f 4f       	sbci	r23, 0xFF	; 255
     f76:	75 95       	asr	r23
     f78:	67 95       	ror	r22
     f7a:	ce 01       	movw	r24, r28
     f7c:	0e 94 9a 14 	call	0x2934	; 0x2934 <set_motors>
	}
}
     f80:	df 91       	pop	r29
     f82:	cf 91       	pop	r28
     f84:	08 95       	ret

00000f86 <Spin>:
void Spin(){
	
	for(int i = 0;i>=255;i++){
	set_motors(i,-i);	
	}
	while(myComs->EmergencyStop == 1){}
     f86:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     f8a:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     f8e:	e5 59       	subi	r30, 0x95	; 149
     f90:	ff 4f       	sbci	r31, 0xFF	; 255
     f92:	80 81       	ld	r24, Z
     f94:	81 30       	cpi	r24, 0x01	; 1
     f96:	b9 f3       	breq	.-18     	; 0xf86 <Spin>
	for(int i = 255;i<=0;i--){
		set_motors(i,-i);
	}
     f98:	08 95       	ret

00000f9a <parcoursSearch>:
char route[20] = "_"; // hardcode SLR
char routeBack[20];
int routea = 1;

int parcoursSearch(Communications *communications) 
{
     f9a:	0f 93       	push	r16
     f9c:	1f 93       	push	r17
     f9e:	cf 93       	push	r28
     fa0:	df 93       	push	r29
     fa2:	00 d0       	rcall	.+0      	; 0xfa4 <parcoursSearch+0xa>
     fa4:	cd b7       	in	r28, 0x3d	; 61
     fa6:	de b7       	in	r29, 0x3e	; 62
	char richting;
	while(1) 
	{
		situatie = lineType();
     fa8:	0e 94 74 06 	call	0xce8	; 0xce8 <lineType>
     fac:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <situatie>
		
		switch (situatie) 
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	89 30       	cpi	r24, 0x09	; 9
     fb4:	91 05       	cpc	r25, r1
     fb6:	08 f0       	brcs	.+2      	; 0xfba <parcoursSearch+0x20>
     fb8:	41 c0       	rjmp	.+130    	; 0x103c <parcoursSearch+0xa2>
     fba:	fc 01       	movw	r30, r24
     fbc:	ec 5c       	subi	r30, 0xCC	; 204
     fbe:	ff 4f       	sbci	r31, 0xFF	; 255
     fc0:	0c 94 a7 1c 	jmp	0x394e	; 0x394e <__tablejump2__>
		{
			case Straight:
				motorControl('S');
     fc4:	83 e5       	ldi	r24, 0x53	; 83
     fc6:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
				break;
     fca:	38 c0       	rjmp	.+112    	; 0x103c <parcoursSearch+0xa2>
			
			case X_junction:
			case Left_corner:
			case T_junction:
			case Straight_left_junction:
				motorControl('L');
     fcc:	8c e4       	ldi	r24, 0x4C	; 76
     fce:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
				richting = 'L';
     fd2:	8c e4       	ldi	r24, 0x4C	; 76
     fd4:	89 83       	std	Y+1, r24	; 0x01
				////print_character('L');
				strncat(route, &richting, 1);
     fd6:	41 e0       	ldi	r20, 0x01	; 1
     fd8:	50 e0       	ldi	r21, 0x00	; 0
     fda:	be 01       	movw	r22, r28
     fdc:	6f 5f       	subi	r22, 0xFF	; 255
     fde:	7f 4f       	sbci	r23, 0xFF	; 255
     fe0:	84 e1       	ldi	r24, 0x14	; 20
     fe2:	91 e0       	ldi	r25, 0x01	; 1
     fe4:	0e 94 27 1e 	call	0x3c4e	; 0x3c4e <strncat>
				break;
     fe8:	29 c0       	rjmp	.+82     	; 0x103c <parcoursSearch+0xa2>
			
			case Right_corner:
				motorControl('R');
     fea:	82 e5       	ldi	r24, 0x52	; 82
     fec:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
				richting = 'R';
     ff0:	82 e5       	ldi	r24, 0x52	; 82
     ff2:	89 83       	std	Y+1, r24	; 0x01
				//print_character('R');
				strncat(route, &richting, 1);
     ff4:	41 e0       	ldi	r20, 0x01	; 1
     ff6:	50 e0       	ldi	r21, 0x00	; 0
     ff8:	be 01       	movw	r22, r28
     ffa:	6f 5f       	subi	r22, 0xFF	; 255
     ffc:	7f 4f       	sbci	r23, 0xFF	; 255
     ffe:	84 e1       	ldi	r24, 0x14	; 20
    1000:	91 e0       	ldi	r25, 0x01	; 1
    1002:	0e 94 27 1e 	call	0x3c4e	; 0x3c4e <strncat>
				break;
    1006:	1a c0       	rjmp	.+52     	; 0x103c <parcoursSearch+0xa2>
			
			case Straight_right_junction:
				richting = 'S';
    1008:	83 e5       	ldi	r24, 0x53	; 83
    100a:	89 83       	std	Y+1, r24	; 0x01
				//print_character('S');
				strncat(route, &richting, 1);
    100c:	41 e0       	ldi	r20, 0x01	; 1
    100e:	50 e0       	ldi	r21, 0x00	; 0
    1010:	be 01       	movw	r22, r28
    1012:	6f 5f       	subi	r22, 0xFF	; 255
    1014:	7f 4f       	sbci	r23, 0xFF	; 255
    1016:	84 e1       	ldi	r24, 0x14	; 20
    1018:	91 e0       	ldi	r25, 0x01	; 1
    101a:	0e 94 27 1e 	call	0x3c4e	; 0x3c4e <strncat>
				break;
    101e:	0e c0       	rjmp	.+28     	; 0x103c <parcoursSearch+0xa2>
				
			case Line_end:
				motorControl('T');
    1020:	84 e5       	ldi	r24, 0x54	; 84
    1022:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
				richting = 'T';
    1026:	84 e5       	ldi	r24, 0x54	; 84
    1028:	89 83       	std	Y+1, r24	; 0x01
				//print_character('T');
				strncat(route, &richting, 1);
    102a:	41 e0       	ldi	r20, 0x01	; 1
    102c:	50 e0       	ldi	r21, 0x00	; 0
    102e:	be 01       	movw	r22, r28
    1030:	6f 5f       	subi	r22, 0xFF	; 255
    1032:	7f 4f       	sbci	r23, 0xFF	; 255
    1034:	84 e1       	ldi	r24, 0x14	; 20
    1036:	91 e0       	ldi	r25, 0x01	; 1
    1038:	0e 94 27 1e 	call	0x3c4e	; 0x3c4e <strncat>
				motorControl('P');
				//print_character('B');
				return 0;
		}
		
		clear();
    103c:	0e 94 5d 13 	call	0x26ba	; 0x26ba <clear>
		lcd_goto_xy(0,0);
    1040:	60 e0       	ldi	r22, 0x00	; 0
    1042:	80 e0       	ldi	r24, 0x00	; 0
    1044:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <lcd_goto_xy>
		for (int i=0; i <= strlen(route);i++ ){
    1048:	00 e0       	ldi	r16, 0x00	; 0
    104a:	10 e0       	ldi	r17, 0x00	; 0
    104c:	08 c0       	rjmp	.+16     	; 0x105e <parcoursSearch+0xc4>
		print_character(route[i]);
    104e:	f8 01       	movw	r30, r16
    1050:	ec 5e       	subi	r30, 0xEC	; 236
    1052:	fe 4f       	sbci	r31, 0xFE	; 254
    1054:	80 81       	ld	r24, Z
    1056:	0e 94 ed 12 	call	0x25da	; 0x25da <print_character>
				return 0;
		}
		
		clear();
		lcd_goto_xy(0,0);
		for (int i=0; i <= strlen(route);i++ ){
    105a:	0f 5f       	subi	r16, 0xFF	; 255
    105c:	1f 4f       	sbci	r17, 0xFF	; 255
    105e:	e4 e1       	ldi	r30, 0x14	; 20
    1060:	f1 e0       	ldi	r31, 0x01	; 1
    1062:	01 90       	ld	r0, Z+
    1064:	00 20       	and	r0, r0
    1066:	e9 f7       	brne	.-6      	; 0x1062 <parcoursSearch+0xc8>
    1068:	31 97       	sbiw	r30, 0x01	; 1
    106a:	e4 51       	subi	r30, 0x14	; 20
    106c:	f1 40       	sbci	r31, 0x01	; 1
    106e:	e0 17       	cp	r30, r16
    1070:	f1 07       	cpc	r31, r17
    1072:	68 f7       	brcc	.-38     	; 0x104e <parcoursSearch+0xb4>
		print_character(route[i]);
		}
		
		char richting;	
		if (route[strlen(route)-2] == 'T') 
    1074:	df 01       	movw	r26, r30
    1076:	ae 5e       	subi	r26, 0xEE	; 238
    1078:	be 4f       	sbci	r27, 0xFE	; 254
    107a:	8c 91       	ld	r24, X
    107c:	84 35       	cpi	r24, 0x54	; 84
    107e:	09 f0       	breq	.+2      	; 0x1082 <parcoursSearch+0xe8>
    1080:	93 cf       	rjmp	.-218    	; 0xfa8 <parcoursSearch+0xe>
		{
			char char_1 = route[strlen(route)-3];
    1082:	df 01       	movw	r26, r30
    1084:	af 5e       	subi	r26, 0xEF	; 239
    1086:	be 4f       	sbci	r27, 0xFE	; 254
    1088:	8c 91       	ld	r24, X
			char char_2 = route[strlen(route)-1];
    108a:	ed 5e       	subi	r30, 0xED	; 237
    108c:	fe 4f       	sbci	r31, 0xFE	; 254
    108e:	90 81       	ld	r25, Z

			if (char_1 == 'L' && char_2 == 'L') 
    1090:	8c 34       	cpi	r24, 0x4C	; 76
    1092:	29 f4       	brne	.+10     	; 0x109e <parcoursSearch+0x104>
    1094:	9c 34       	cpi	r25, 0x4C	; 76
    1096:	19 f4       	brne	.+6      	; 0x109e <parcoursSearch+0x104>
			{
				richting = 'S';
    1098:	83 e5       	ldi	r24, 0x53	; 83
    109a:	8a 83       	std	Y+2, r24	; 0x02
    109c:	1b c0       	rjmp	.+54     	; 0x10d4 <parcoursSearch+0x13a>
			}
			else if (char_1 == 'S' && char_2 == 'L')
    109e:	83 35       	cpi	r24, 0x53	; 83
    10a0:	29 f4       	brne	.+10     	; 0x10ac <parcoursSearch+0x112>
    10a2:	9c 34       	cpi	r25, 0x4C	; 76
    10a4:	19 f4       	brne	.+6      	; 0x10ac <parcoursSearch+0x112>
			{
				richting = 'R';
    10a6:	82 e5       	ldi	r24, 0x52	; 82
    10a8:	8a 83       	std	Y+2, r24	; 0x02
    10aa:	14 c0       	rjmp	.+40     	; 0x10d4 <parcoursSearch+0x13a>
			}
			else if (char_1 == 'R' && char_2 == 'L')
    10ac:	82 35       	cpi	r24, 0x52	; 82
    10ae:	29 f4       	brne	.+10     	; 0x10ba <parcoursSearch+0x120>
    10b0:	9c 34       	cpi	r25, 0x4C	; 76
    10b2:	19 f4       	brne	.+6      	; 0x10ba <parcoursSearch+0x120>
			{
				richting = 'T';
    10b4:	84 e5       	ldi	r24, 0x54	; 84
    10b6:	8a 83       	std	Y+2, r24	; 0x02
    10b8:	0d c0       	rjmp	.+26     	; 0x10d4 <parcoursSearch+0x13a>
			}
			else if (char_1 == 'L' && char_2 == 'R')
    10ba:	8c 34       	cpi	r24, 0x4C	; 76
    10bc:	29 f4       	brne	.+10     	; 0x10c8 <parcoursSearch+0x12e>
    10be:	92 35       	cpi	r25, 0x52	; 82
    10c0:	19 f4       	brne	.+6      	; 0x10c8 <parcoursSearch+0x12e>
			{
				richting = 'T';
    10c2:	84 e5       	ldi	r24, 0x54	; 84
    10c4:	8a 83       	std	Y+2, r24	; 0x02
    10c6:	06 c0       	rjmp	.+12     	; 0x10d4 <parcoursSearch+0x13a>
			}
			else if (char_1 == 'L' && char_2 == 'S')
    10c8:	8c 34       	cpi	r24, 0x4C	; 76
    10ca:	21 f4       	brne	.+8      	; 0x10d4 <parcoursSearch+0x13a>
    10cc:	93 35       	cpi	r25, 0x53	; 83
    10ce:	11 f4       	brne	.+4      	; 0x10d4 <parcoursSearch+0x13a>
			{
				richting = 'R';
    10d0:	82 e5       	ldi	r24, 0x52	; 82
    10d2:	8a 83       	std	Y+2, r24	; 0x02
			}
			route[strlen(route)-3] = '\0';
    10d4:	e4 e1       	ldi	r30, 0x14	; 20
    10d6:	f1 e0       	ldi	r31, 0x01	; 1
    10d8:	01 90       	ld	r0, Z+
    10da:	00 20       	and	r0, r0
    10dc:	e9 f7       	brne	.-6      	; 0x10d8 <parcoursSearch+0x13e>
    10de:	34 97       	sbiw	r30, 0x04	; 4
    10e0:	10 82       	st	Z, r1
			strncat(route, &richting, 1);
    10e2:	41 e0       	ldi	r20, 0x01	; 1
    10e4:	50 e0       	ldi	r21, 0x00	; 0
    10e6:	be 01       	movw	r22, r28
    10e8:	6e 5f       	subi	r22, 0xFE	; 254
    10ea:	7f 4f       	sbci	r23, 0xFF	; 255
    10ec:	84 e1       	ldi	r24, 0x14	; 20
    10ee:	91 e0       	ldi	r25, 0x01	; 1
    10f0:	0e 94 27 1e 	call	0x3c4e	; 0x3c4e <strncat>
		}
	}
    10f4:	59 cf       	rjmp	.-334    	; 0xfa8 <parcoursSearch+0xe>
				//print_character('T');
				strncat(route, &richting, 1);
				break;
				
			case Barcode: // end of parcour
				motorControl('P');
    10f6:	80 e5       	ldi	r24, 0x50	; 80
    10f8:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
			strncat(route, &richting, 1);
		}
	}
	routea = 0;	
	return 0;
}
    10fc:	80 e0       	ldi	r24, 0x00	; 0
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	0f 90       	pop	r0
    1102:	0f 90       	pop	r0
    1104:	df 91       	pop	r29
    1106:	cf 91       	pop	r28
    1108:	1f 91       	pop	r17
    110a:	0f 91       	pop	r16
    110c:	08 95       	ret

0000110e <parcoursRun>:

int parcoursRun(char way, Communications *communications) 
{
    110e:	ef 92       	push	r14
    1110:	ff 92       	push	r15
    1112:	1f 93       	push	r17
    1114:	cf 93       	push	r28
    1116:	df 93       	push	r29
    1118:	18 2f       	mov	r17, r24
	char richting;
	for (int i = 0; i < strlen(route); i++) 
    111a:	c0 e0       	ldi	r28, 0x00	; 0
    111c:	d0 e0       	ldi	r29, 0x00	; 0
    111e:	2a c0       	rjmp	.+84     	; 0x1174 <parcoursRun+0x66>
	{
		while (lineType() == Straight)
		{
			motorControl('S');
    1120:	83 e5       	ldi	r24, 0x53	; 83
    1122:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
int parcoursRun(char way, Communications *communications) 
{
	char richting;
	for (int i = 0; i < strlen(route); i++) 
	{
		while (lineType() == Straight)
    1126:	0e 94 74 06 	call	0xce8	; 0xce8 <lineType>
    112a:	88 23       	and	r24, r24
    112c:	c9 f3       	breq	.-14     	; 0x1120 <parcoursRun+0x12>
		{
			motorControl('S');
		}
		if (way == 'T') {
    112e:	14 35       	cpi	r17, 0x54	; 84
    1130:	39 f4       	brne	.+14     	; 0x1140 <parcoursRun+0x32>
			motorControl(route[i]);
    1132:	fe 01       	movw	r30, r28
    1134:	ec 5e       	subi	r30, 0xEC	; 236
    1136:	fe 4f       	sbci	r31, 0xFE	; 254
    1138:	80 81       	ld	r24, Z
    113a:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    113e:	19 c0       	rjmp	.+50     	; 0x1172 <parcoursRun+0x64>
		} 
		else if (way == 'B') 
    1140:	12 34       	cpi	r17, 0x42	; 66
    1142:	b9 f4       	brne	.+46     	; 0x1172 <parcoursRun+0x64>
		{
			richting = route[strlen(route)-i-1];
    1144:	e4 e1       	ldi	r30, 0x14	; 20
    1146:	f1 e0       	ldi	r31, 0x01	; 1
    1148:	01 90       	ld	r0, Z+
    114a:	00 20       	and	r0, r0
    114c:	e9 f7       	brne	.-6      	; 0x1148 <parcoursRun+0x3a>
    114e:	31 97       	sbiw	r30, 0x01	; 1
    1150:	e4 51       	subi	r30, 0x14	; 20
    1152:	f1 40       	sbci	r31, 0x01	; 1
    1154:	ee 19       	sub	r30, r14
    1156:	ff 09       	sbc	r31, r15
    1158:	ed 5e       	subi	r30, 0xED	; 237
    115a:	fe 4f       	sbci	r31, 0xFE	; 254
    115c:	80 81       	ld	r24, Z
			switch (richting)
    115e:	8c 34       	cpi	r24, 0x4C	; 76
    1160:	19 f0       	breq	.+6      	; 0x1168 <parcoursRun+0x5a>
    1162:	82 35       	cpi	r24, 0x52	; 82
    1164:	19 f0       	breq	.+6      	; 0x116c <parcoursRun+0x5e>
    1166:	03 c0       	rjmp	.+6      	; 0x116e <parcoursRun+0x60>
			{
				case 'R':
					richting = 'L';
					break;
				case 'L':
					richting = 'R';
    1168:	82 e5       	ldi	r24, 0x52	; 82
					break;
    116a:	01 c0       	rjmp	.+2      	; 0x116e <parcoursRun+0x60>
		{
			richting = route[strlen(route)-i-1];
			switch (richting)
			{
				case 'R':
					richting = 'L';
    116c:	8c e4       	ldi	r24, 0x4C	; 76
					break;
				case 'L':
					richting = 'R';
					break;
			}
			motorControl(richting);
    116e:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
}

int parcoursRun(char way, Communications *communications) 
{
	char richting;
	for (int i = 0; i < strlen(route); i++) 
    1172:	21 96       	adiw	r28, 0x01	; 1
    1174:	e4 e1       	ldi	r30, 0x14	; 20
    1176:	f1 e0       	ldi	r31, 0x01	; 1
    1178:	01 90       	ld	r0, Z+
    117a:	00 20       	and	r0, r0
    117c:	e9 f7       	brne	.-6      	; 0x1178 <parcoursRun+0x6a>
    117e:	31 97       	sbiw	r30, 0x01	; 1
    1180:	e4 51       	subi	r30, 0x14	; 20
    1182:	f1 40       	sbci	r31, 0x01	; 1
    1184:	7e 01       	movw	r14, r28
    1186:	ce 17       	cp	r28, r30
    1188:	df 07       	cpc	r29, r31
    118a:	68 f2       	brcs	.-102    	; 0x1126 <parcoursRun+0x18>
			}
			motorControl(richting);
		}
	}
	return 0;
}
    118c:	80 e0       	ldi	r24, 0x00	; 0
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	df 91       	pop	r29
    1192:	cf 91       	pop	r28
    1194:	1f 91       	pop	r17
    1196:	ff 90       	pop	r15
    1198:	ef 90       	pop	r14
    119a:	08 95       	ret

0000119c <parcours>:

int parcours(char way, Communications *communications) 
{
    119c:	1f 93       	push	r17
    119e:	cf 93       	push	r28
    11a0:	df 93       	push	r29
    11a2:	00 d0       	rcall	.+0      	; 0x11a4 <parcours+0x8>
    11a4:	cd b7       	in	r28, 0x3d	; 61
    11a6:	de b7       	in	r29, 0x3e	; 62
    11a8:	18 2f       	mov	r17, r24
    11aa:	7a 83       	std	Y+2, r23	; 0x02
    11ac:	69 83       	std	Y+1, r22	; 0x01
	updateDisplay(0, batteryPercentage(), mazeSolver);
    11ae:	0e 94 a8 03 	call	0x750	; 0x750 <batteryPercentage>
    11b2:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__fixsfsi>
    11b6:	41 e0       	ldi	r20, 0x01	; 1
    11b8:	80 e0       	ldi	r24, 0x00	; 0
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	0e 94 ca 03 	call	0x794	; 0x794 <updateDisplay>
	if (route[0] == '_'){
    11c0:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <route>
    11c4:	8f 35       	cpi	r24, 0x5F	; 95
    11c6:	61 f4       	brne	.+24     	; 0x11e0 <parcours+0x44>
		memset(route,0,sizeof route);
    11c8:	84 e1       	ldi	r24, 0x14	; 20
    11ca:	e4 e1       	ldi	r30, 0x14	; 20
    11cc:	f1 e0       	ldi	r31, 0x01	; 1
    11ce:	df 01       	movw	r26, r30
    11d0:	1d 92       	st	X+, r1
    11d2:	8a 95       	dec	r24
    11d4:	e9 f7       	brne	.-6      	; 0x11d0 <parcours+0x34>
		parcoursSearch(&communications);
    11d6:	ce 01       	movw	r24, r28
    11d8:	01 96       	adiw	r24, 0x01	; 1
    11da:	0e 94 cd 07 	call	0xf9a	; 0xf9a <parcoursSearch>
    11de:	05 c0       	rjmp	.+10     	; 0x11ea <parcours+0x4e>
	} 
	else 
	{
		parcoursRun(way, communications);
    11e0:	69 81       	ldd	r22, Y+1	; 0x01
    11e2:	7a 81       	ldd	r23, Y+2	; 0x02
    11e4:	81 2f       	mov	r24, r17
    11e6:	0e 94 87 08 	call	0x110e	; 0x110e <parcoursRun>
	} 
	return 0;
    11ea:	80 e0       	ldi	r24, 0x00	; 0
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	0f 90       	pop	r0
    11f0:	0f 90       	pop	r0
    11f2:	df 91       	pop	r29
    11f4:	cf 91       	pop	r28
    11f6:	1f 91       	pop	r17
    11f8:	08 95       	ret

000011fa <swap>:
    11fa:	fc 01       	movw	r30, r24
    11fc:	20 81       	ld	r18, Z
    11fe:	fb 01       	movw	r30, r22
    1200:	30 81       	ld	r19, Z
    1202:	fc 01       	movw	r30, r24
    1204:	30 83       	st	Z, r19
    1206:	fb 01       	movw	r30, r22
    1208:	20 83       	st	Z, r18
    120a:	08 95       	ret

0000120c <bubbleSort>:
    120c:	8f 92       	push	r8
    120e:	9f 92       	push	r9
    1210:	af 92       	push	r10
    1212:	bf 92       	push	r11
    1214:	cf 92       	push	r12
    1216:	df 92       	push	r13
    1218:	ef 92       	push	r14
    121a:	ff 92       	push	r15
    121c:	0f 93       	push	r16
    121e:	1f 93       	push	r17
    1220:	cf 93       	push	r28
    1222:	df 93       	push	r29
    1224:	8c 01       	movw	r16, r24
    1226:	5b 01       	movw	r10, r22
    1228:	6a 01       	movw	r12, r20
    122a:	e1 2c       	mov	r14, r1
    122c:	f1 2c       	mov	r15, r1
    122e:	28 c0       	rjmp	.+80     	; 0x1280 <bubbleSort+0x74>
    1230:	f8 01       	movw	r30, r16
    1232:	ec 0f       	add	r30, r28
    1234:	fd 1f       	adc	r31, r29
    1236:	90 81       	ld	r25, Z
    1238:	4e 01       	movw	r8, r28
    123a:	8f ef       	ldi	r24, 0xFF	; 255
    123c:	88 1a       	sub	r8, r24
    123e:	98 0a       	sbc	r9, r24
    1240:	d8 01       	movw	r26, r16
    1242:	a8 0d       	add	r26, r8
    1244:	b9 1d       	adc	r27, r9
    1246:	8c 91       	ld	r24, X
    1248:	89 17       	cp	r24, r25
    124a:	60 f4       	brcc	.+24     	; 0x1264 <bubbleSort+0x58>
    124c:	bd 01       	movw	r22, r26
    124e:	cf 01       	movw	r24, r30
    1250:	0e 94 fd 08 	call	0x11fa	; 0x11fa <swap>
    1254:	b5 01       	movw	r22, r10
    1256:	68 0d       	add	r22, r8
    1258:	79 1d       	adc	r23, r9
    125a:	c5 01       	movw	r24, r10
    125c:	8c 0f       	add	r24, r28
    125e:	9d 1f       	adc	r25, r29
    1260:	0e 94 fd 08 	call	0x11fa	; 0x11fa <swap>
    1264:	21 96       	adiw	r28, 0x01	; 1
    1266:	02 c0       	rjmp	.+4      	; 0x126c <bubbleSort+0x60>
    1268:	c0 e0       	ldi	r28, 0x00	; 0
    126a:	d0 e0       	ldi	r29, 0x00	; 0
    126c:	c6 01       	movw	r24, r12
    126e:	8e 19       	sub	r24, r14
    1270:	9f 09       	sbc	r25, r15
    1272:	01 97       	sbiw	r24, 0x01	; 1
    1274:	c8 17       	cp	r28, r24
    1276:	d9 07       	cpc	r29, r25
    1278:	dc f2       	brlt	.-74     	; 0x1230 <bubbleSort+0x24>
    127a:	8f ef       	ldi	r24, 0xFF	; 255
    127c:	e8 1a       	sub	r14, r24
    127e:	f8 0a       	sbc	r15, r24
    1280:	c6 01       	movw	r24, r12
    1282:	01 97       	sbiw	r24, 0x01	; 1
    1284:	e8 16       	cp	r14, r24
    1286:	f9 06       	cpc	r15, r25
    1288:	7c f3       	brlt	.-34     	; 0x1268 <bubbleSort+0x5c>
    128a:	df 91       	pop	r29
    128c:	cf 91       	pop	r28
    128e:	1f 91       	pop	r17
    1290:	0f 91       	pop	r16
    1292:	ff 90       	pop	r15
    1294:	ef 90       	pop	r14
    1296:	df 90       	pop	r13
    1298:	cf 90       	pop	r12
    129a:	bf 90       	pop	r11
    129c:	af 90       	pop	r10
    129e:	9f 90       	pop	r9
    12a0:	8f 90       	pop	r8
    12a2:	08 95       	ret

000012a4 <drive>:
    12a4:	af 92       	push	r10
    12a6:	bf 92       	push	r11
    12a8:	cf 92       	push	r12
    12aa:	df 92       	push	r13
    12ac:	ef 92       	push	r14
    12ae:	ff 92       	push	r15
    12b0:	0f 93       	push	r16
    12b2:	1f 93       	push	r17
    12b4:	cf 93       	push	r28
    12b6:	df 93       	push	r29
    12b8:	5c 01       	movw	r10, r24
    12ba:	6b 01       	movw	r12, r22
    12bc:	7a 01       	movw	r14, r20
    12be:	83 e5       	ldi	r24, 0x53	; 83
    12c0:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    12c4:	00 e0       	ldi	r16, 0x00	; 0
    12c6:	10 e0       	ldi	r17, 0x00	; 0
    12c8:	c1 e0       	ldi	r28, 0x01	; 1
    12ca:	d0 e0       	ldi	r29, 0x00	; 0
    12cc:	5a c0       	rjmp	.+180    	; 0x1382 <drive+0xde>
    12ce:	0e 94 74 06 	call	0xce8	; 0xce8 <lineType>
    12d2:	81 30       	cpi	r24, 0x01	; 1
    12d4:	51 f0       	breq	.+20     	; 0x12ea <drive+0x46>
    12d6:	28 f0       	brcs	.+10     	; 0x12e2 <drive+0x3e>
    12d8:	83 50       	subi	r24, 0x03	; 3
    12da:	86 30       	cpi	r24, 0x06	; 6
    12dc:	08 f0       	brcs	.+2      	; 0x12e0 <drive+0x3c>
    12de:	51 c0       	rjmp	.+162    	; 0x1382 <drive+0xde>
    12e0:	04 c0       	rjmp	.+8      	; 0x12ea <drive+0x46>
    12e2:	83 e5       	ldi	r24, 0x53	; 83
    12e4:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    12e8:	4c c0       	rjmp	.+152    	; 0x1382 <drive+0xde>
    12ea:	0f 5f       	subi	r16, 0xFF	; 255
    12ec:	1f 4f       	sbci	r17, 0xFF	; 255
    12ee:	f6 01       	movw	r30, r12
    12f0:	84 81       	ldd	r24, Z+4	; 0x04
    12f2:	8e 34       	cpi	r24, 0x4E	; 78
    12f4:	f1 f0       	breq	.+60     	; 0x1332 <drive+0x8e>
    12f6:	18 f4       	brcc	.+6      	; 0x12fe <drive+0x5a>
    12f8:	85 34       	cpi	r24, 0x45	; 69
    12fa:	81 f0       	breq	.+32     	; 0x131c <drive+0x78>
    12fc:	2f c0       	rjmp	.+94     	; 0x135c <drive+0xb8>
    12fe:	83 35       	cpi	r24, 0x53	; 83
    1300:	19 f1       	breq	.+70     	; 0x1348 <drive+0xa4>
    1302:	87 35       	cpi	r24, 0x57	; 87
    1304:	59 f5       	brne	.+86     	; 0x135c <drive+0xb8>
    1306:	f6 01       	movw	r30, r12
    1308:	80 81       	ld	r24, Z
    130a:	91 81       	ldd	r25, Z+1	; 0x01
    130c:	01 96       	adiw	r24, 0x01	; 1
    130e:	91 83       	std	Z+1, r25	; 0x01
    1310:	80 83       	st	Z, r24
    1312:	f7 01       	movw	r30, r14
    1314:	e2 59       	subi	r30, 0x92	; 146
    1316:	ff 4f       	sbci	r31, 0xFF	; 255
    1318:	80 83       	st	Z, r24
    131a:	20 c0       	rjmp	.+64     	; 0x135c <drive+0xb8>
    131c:	f6 01       	movw	r30, r12
    131e:	80 81       	ld	r24, Z
    1320:	91 81       	ldd	r25, Z+1	; 0x01
    1322:	01 97       	sbiw	r24, 0x01	; 1
    1324:	91 83       	std	Z+1, r25	; 0x01
    1326:	80 83       	st	Z, r24
    1328:	f7 01       	movw	r30, r14
    132a:	e2 59       	subi	r30, 0x92	; 146
    132c:	ff 4f       	sbci	r31, 0xFF	; 255
    132e:	80 83       	st	Z, r24
    1330:	15 c0       	rjmp	.+42     	; 0x135c <drive+0xb8>
    1332:	f6 01       	movw	r30, r12
    1334:	82 81       	ldd	r24, Z+2	; 0x02
    1336:	93 81       	ldd	r25, Z+3	; 0x03
    1338:	01 96       	adiw	r24, 0x01	; 1
    133a:	93 83       	std	Z+3, r25	; 0x03
    133c:	82 83       	std	Z+2, r24	; 0x02
    133e:	f7 01       	movw	r30, r14
    1340:	e1 59       	subi	r30, 0x91	; 145
    1342:	ff 4f       	sbci	r31, 0xFF	; 255
    1344:	80 83       	st	Z, r24
    1346:	0a c0       	rjmp	.+20     	; 0x135c <drive+0xb8>
    1348:	f6 01       	movw	r30, r12
    134a:	82 81       	ldd	r24, Z+2	; 0x02
    134c:	93 81       	ldd	r25, Z+3	; 0x03
    134e:	01 97       	sbiw	r24, 0x01	; 1
    1350:	93 83       	std	Z+3, r25	; 0x03
    1352:	82 83       	std	Z+2, r24	; 0x02
    1354:	f7 01       	movw	r30, r14
    1356:	e1 59       	subi	r30, 0x91	; 145
    1358:	ff 4f       	sbci	r31, 0xFF	; 255
    135a:	80 83       	st	Z, r24
    135c:	83 e5       	ldi	r24, 0x53	; 83
    135e:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    1362:	0a 15       	cp	r16, r10
    1364:	1b 05       	cpc	r17, r11
    1366:	29 f4       	brne	.+10     	; 0x1372 <drive+0xce>
    1368:	80 e5       	ldi	r24, 0x50	; 80
    136a:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    136e:	c0 e0       	ldi	r28, 0x00	; 0
    1370:	d0 e0       	ldi	r29, 0x00	; 0
    1372:	f7 01       	movw	r30, r14
    1374:	ef 58       	subi	r30, 0x8F	; 143
    1376:	ff 4f       	sbci	r31, 0xFF	; 255
    1378:	01 90       	ld	r0, Z+
    137a:	f0 81       	ld	r31, Z
    137c:	e0 2d       	mov	r30, r0
    137e:	c7 01       	movw	r24, r14
    1380:	09 95       	icall
    1382:	20 97       	sbiw	r28, 0x00	; 0
    1384:	09 f0       	breq	.+2      	; 0x1388 <drive+0xe4>
    1386:	a3 cf       	rjmp	.-186    	; 0x12ce <drive+0x2a>
    1388:	df 91       	pop	r29
    138a:	cf 91       	pop	r28
    138c:	1f 91       	pop	r17
    138e:	0f 91       	pop	r16
    1390:	ff 90       	pop	r15
    1392:	ef 90       	pop	r14
    1394:	df 90       	pop	r13
    1396:	cf 90       	pop	r12
    1398:	bf 90       	pop	r11
    139a:	af 90       	pop	r10
    139c:	08 95       	ret

0000139e <waitForTurn>:
    139e:	cf 93       	push	r28
    13a0:	0e 94 74 06 	call	0xce8	; 0xce8 <lineType>
    13a4:	c8 2f       	mov	r28, r24
    13a6:	8f e0       	ldi	r24, 0x0F	; 15
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <delay_ms>
    13ae:	03 c0       	rjmp	.+6      	; 0x13b6 <waitForTurn+0x18>
    13b0:	0e 94 74 06 	call	0xce8	; 0xce8 <lineType>
    13b4:	c8 2f       	mov	r28, r24
    13b6:	c1 11       	cpse	r28, r1
    13b8:	fb cf       	rjmp	.-10     	; 0x13b0 <waitForTurn+0x12>
    13ba:	8e e4       	ldi	r24, 0x4E	; 78
    13bc:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    13c0:	cf 91       	pop	r28
    13c2:	08 95       	ret

000013c4 <turnRobot>:
    13c4:	ef 92       	push	r14
    13c6:	ff 92       	push	r15
    13c8:	0f 93       	push	r16
    13ca:	1f 93       	push	r17
    13cc:	cf 93       	push	r28
    13ce:	c8 2f       	mov	r28, r24
    13d0:	8b 01       	movw	r16, r22
    13d2:	ee 24       	eor	r14, r14
    13d4:	e3 94       	inc	r14
    13d6:	f1 2c       	mov	r15, r1
    13d8:	9a c0       	rjmp	.+308    	; 0x150e <turnRobot+0x14a>
    13da:	f8 01       	movw	r30, r16
    13dc:	84 81       	ldd	r24, Z+4	; 0x04
    13de:	8e 34       	cpi	r24, 0x4E	; 78
    13e0:	59 f0       	breq	.+22     	; 0x13f8 <turnRobot+0x34>
    13e2:	18 f4       	brcc	.+6      	; 0x13ea <turnRobot+0x26>
    13e4:	85 34       	cpi	r24, 0x45	; 69
    13e6:	51 f1       	breq	.+84     	; 0x143c <turnRobot+0x78>
    13e8:	8c c0       	rjmp	.+280    	; 0x1502 <turnRobot+0x13e>
    13ea:	83 35       	cpi	r24, 0x53	; 83
    13ec:	09 f4       	brne	.+2      	; 0x13f0 <turnRobot+0x2c>
    13ee:	48 c0       	rjmp	.+144    	; 0x1480 <turnRobot+0xbc>
    13f0:	87 35       	cpi	r24, 0x57	; 87
    13f2:	09 f4       	brne	.+2      	; 0x13f6 <turnRobot+0x32>
    13f4:	66 c0       	rjmp	.+204    	; 0x14c2 <turnRobot+0xfe>
    13f6:	85 c0       	rjmp	.+266    	; 0x1502 <turnRobot+0x13e>
    13f8:	c5 34       	cpi	r28, 0x45	; 69
    13fa:	49 f4       	brne	.+18     	; 0x140e <turnRobot+0x4a>
    13fc:	82 e5       	ldi	r24, 0x52	; 82
    13fe:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    1402:	0e 94 cf 09 	call	0x139e	; 0x139e <waitForTurn>
    1406:	85 e4       	ldi	r24, 0x45	; 69
    1408:	f8 01       	movw	r30, r16
    140a:	84 83       	std	Z+4, r24	; 0x04
    140c:	7a c0       	rjmp	.+244    	; 0x1502 <turnRobot+0x13e>
    140e:	c7 35       	cpi	r28, 0x57	; 87
    1410:	49 f4       	brne	.+18     	; 0x1424 <turnRobot+0x60>
    1412:	8c e4       	ldi	r24, 0x4C	; 76
    1414:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    1418:	0e 94 cf 09 	call	0x139e	; 0x139e <waitForTurn>
    141c:	87 e5       	ldi	r24, 0x57	; 87
    141e:	f8 01       	movw	r30, r16
    1420:	84 83       	std	Z+4, r24	; 0x04
    1422:	6f c0       	rjmp	.+222    	; 0x1502 <turnRobot+0x13e>
    1424:	c3 35       	cpi	r28, 0x53	; 83
    1426:	09 f0       	breq	.+2      	; 0x142a <turnRobot+0x66>
    1428:	6c c0       	rjmp	.+216    	; 0x1502 <turnRobot+0x13e>
    142a:	84 e5       	ldi	r24, 0x54	; 84
    142c:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    1430:	0e 94 cf 09 	call	0x139e	; 0x139e <waitForTurn>
    1434:	83 e5       	ldi	r24, 0x53	; 83
    1436:	f8 01       	movw	r30, r16
    1438:	84 83       	std	Z+4, r24	; 0x04
    143a:	63 c0       	rjmp	.+198    	; 0x1502 <turnRobot+0x13e>
    143c:	c3 35       	cpi	r28, 0x53	; 83
    143e:	49 f4       	brne	.+18     	; 0x1452 <turnRobot+0x8e>
    1440:	82 e5       	ldi	r24, 0x52	; 82
    1442:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    1446:	0e 94 cf 09 	call	0x139e	; 0x139e <waitForTurn>
    144a:	83 e5       	ldi	r24, 0x53	; 83
    144c:	f8 01       	movw	r30, r16
    144e:	84 83       	std	Z+4, r24	; 0x04
    1450:	58 c0       	rjmp	.+176    	; 0x1502 <turnRobot+0x13e>
    1452:	c7 35       	cpi	r28, 0x57	; 87
    1454:	49 f4       	brne	.+18     	; 0x1468 <turnRobot+0xa4>
    1456:	8c e4       	ldi	r24, 0x4C	; 76
    1458:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    145c:	0e 94 cf 09 	call	0x139e	; 0x139e <waitForTurn>
    1460:	87 e5       	ldi	r24, 0x57	; 87
    1462:	f8 01       	movw	r30, r16
    1464:	84 83       	std	Z+4, r24	; 0x04
    1466:	4d c0       	rjmp	.+154    	; 0x1502 <turnRobot+0x13e>
    1468:	c3 35       	cpi	r28, 0x53	; 83
    146a:	09 f0       	breq	.+2      	; 0x146e <turnRobot+0xaa>
    146c:	4a c0       	rjmp	.+148    	; 0x1502 <turnRobot+0x13e>
    146e:	84 e5       	ldi	r24, 0x54	; 84
    1470:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    1474:	0e 94 cf 09 	call	0x139e	; 0x139e <waitForTurn>
    1478:	83 e5       	ldi	r24, 0x53	; 83
    147a:	f8 01       	movw	r30, r16
    147c:	84 83       	std	Z+4, r24	; 0x04
    147e:	41 c0       	rjmp	.+130    	; 0x1502 <turnRobot+0x13e>
    1480:	c7 35       	cpi	r28, 0x57	; 87
    1482:	49 f4       	brne	.+18     	; 0x1496 <turnRobot+0xd2>
    1484:	82 e5       	ldi	r24, 0x52	; 82
    1486:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    148a:	0e 94 cf 09 	call	0x139e	; 0x139e <waitForTurn>
    148e:	87 e5       	ldi	r24, 0x57	; 87
    1490:	f8 01       	movw	r30, r16
    1492:	84 83       	std	Z+4, r24	; 0x04
    1494:	36 c0       	rjmp	.+108    	; 0x1502 <turnRobot+0x13e>
    1496:	c5 34       	cpi	r28, 0x45	; 69
    1498:	49 f4       	brne	.+18     	; 0x14ac <turnRobot+0xe8>
    149a:	8c e4       	ldi	r24, 0x4C	; 76
    149c:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    14a0:	0e 94 cf 09 	call	0x139e	; 0x139e <waitForTurn>
    14a4:	85 e4       	ldi	r24, 0x45	; 69
    14a6:	f8 01       	movw	r30, r16
    14a8:	84 83       	std	Z+4, r24	; 0x04
    14aa:	2b c0       	rjmp	.+86     	; 0x1502 <turnRobot+0x13e>
    14ac:	ce 34       	cpi	r28, 0x4E	; 78
    14ae:	49 f5       	brne	.+82     	; 0x1502 <turnRobot+0x13e>
    14b0:	84 e5       	ldi	r24, 0x54	; 84
    14b2:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    14b6:	0e 94 cf 09 	call	0x139e	; 0x139e <waitForTurn>
    14ba:	8e e4       	ldi	r24, 0x4E	; 78
    14bc:	f8 01       	movw	r30, r16
    14be:	84 83       	std	Z+4, r24	; 0x04
    14c0:	20 c0       	rjmp	.+64     	; 0x1502 <turnRobot+0x13e>
    14c2:	ce 34       	cpi	r28, 0x4E	; 78
    14c4:	49 f4       	brne	.+18     	; 0x14d8 <turnRobot+0x114>
    14c6:	82 e5       	ldi	r24, 0x52	; 82
    14c8:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    14cc:	0e 94 cf 09 	call	0x139e	; 0x139e <waitForTurn>
    14d0:	8e e4       	ldi	r24, 0x4E	; 78
    14d2:	f8 01       	movw	r30, r16
    14d4:	84 83       	std	Z+4, r24	; 0x04
    14d6:	15 c0       	rjmp	.+42     	; 0x1502 <turnRobot+0x13e>
    14d8:	c3 35       	cpi	r28, 0x53	; 83
    14da:	49 f4       	brne	.+18     	; 0x14ee <turnRobot+0x12a>
    14dc:	8c e4       	ldi	r24, 0x4C	; 76
    14de:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    14e2:	0e 94 cf 09 	call	0x139e	; 0x139e <waitForTurn>
    14e6:	83 e5       	ldi	r24, 0x53	; 83
    14e8:	f8 01       	movw	r30, r16
    14ea:	84 83       	std	Z+4, r24	; 0x04
    14ec:	0a c0       	rjmp	.+20     	; 0x1502 <turnRobot+0x13e>
    14ee:	c5 34       	cpi	r28, 0x45	; 69
    14f0:	41 f4       	brne	.+16     	; 0x1502 <turnRobot+0x13e>
    14f2:	84 e5       	ldi	r24, 0x54	; 84
    14f4:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    14f8:	0e 94 cf 09 	call	0x139e	; 0x139e <waitForTurn>
    14fc:	85 e4       	ldi	r24, 0x45	; 69
    14fe:	f8 01       	movw	r30, r16
    1500:	84 83       	std	Z+4, r24	; 0x04
    1502:	f8 01       	movw	r30, r16
    1504:	84 81       	ldd	r24, Z+4	; 0x04
    1506:	c8 13       	cpse	r28, r24
    1508:	02 c0       	rjmp	.+4      	; 0x150e <turnRobot+0x14a>
    150a:	e1 2c       	mov	r14, r1
    150c:	f1 2c       	mov	r15, r1
    150e:	f1 e0       	ldi	r31, 0x01	; 1
    1510:	ef 16       	cp	r14, r31
    1512:	f1 04       	cpc	r15, r1
    1514:	09 f4       	brne	.+2      	; 0x1518 <turnRobot+0x154>
    1516:	61 cf       	rjmp	.-318    	; 0x13da <turnRobot+0x16>
    1518:	cf 91       	pop	r28
    151a:	1f 91       	pop	r17
    151c:	0f 91       	pop	r16
    151e:	ff 90       	pop	r15
    1520:	ef 90       	pop	r14
    1522:	08 95       	ret

00001524 <moveX>:
    1524:	ef 92       	push	r14
    1526:	ff 92       	push	r15
    1528:	0f 93       	push	r16
    152a:	1f 93       	push	r17
    152c:	cf 93       	push	r28
    152e:	df 93       	push	r29
    1530:	fb 01       	movw	r30, r22
    1532:	20 81       	ld	r18, Z
    1534:	31 81       	ldd	r19, Z+1	; 0x01
    1536:	28 17       	cp	r18, r24
    1538:	39 07       	cpc	r19, r25
    153a:	d9 f0       	breq	.+54     	; 0x1572 <moveX+0x4e>
    153c:	7a 01       	movw	r14, r20
    153e:	eb 01       	movw	r28, r22
    1540:	8c 01       	movw	r16, r24
    1542:	28 17       	cp	r18, r24
    1544:	39 07       	cpc	r19, r25
    1546:	54 f4       	brge	.+20     	; 0x155c <moveX+0x38>
    1548:	87 e5       	ldi	r24, 0x57	; 87
    154a:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <turnRobot>
    154e:	88 81       	ld	r24, Y
    1550:	99 81       	ldd	r25, Y+1	; 0x01
    1552:	98 01       	movw	r18, r16
    1554:	28 1b       	sub	r18, r24
    1556:	39 0b       	sbc	r19, r25
    1558:	c9 01       	movw	r24, r18
    155a:	07 c0       	rjmp	.+14     	; 0x156a <moveX+0x46>
    155c:	85 e4       	ldi	r24, 0x45	; 69
    155e:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <turnRobot>
    1562:	88 81       	ld	r24, Y
    1564:	99 81       	ldd	r25, Y+1	; 0x01
    1566:	80 1b       	sub	r24, r16
    1568:	91 0b       	sbc	r25, r17
    156a:	a7 01       	movw	r20, r14
    156c:	be 01       	movw	r22, r28
    156e:	0e 94 52 09 	call	0x12a4	; 0x12a4 <drive>
    1572:	df 91       	pop	r29
    1574:	cf 91       	pop	r28
    1576:	1f 91       	pop	r17
    1578:	0f 91       	pop	r16
    157a:	ff 90       	pop	r15
    157c:	ef 90       	pop	r14
    157e:	08 95       	ret

00001580 <moveY>:
    1580:	ef 92       	push	r14
    1582:	ff 92       	push	r15
    1584:	0f 93       	push	r16
    1586:	1f 93       	push	r17
    1588:	cf 93       	push	r28
    158a:	df 93       	push	r29
    158c:	fb 01       	movw	r30, r22
    158e:	22 81       	ldd	r18, Z+2	; 0x02
    1590:	33 81       	ldd	r19, Z+3	; 0x03
    1592:	28 17       	cp	r18, r24
    1594:	39 07       	cpc	r19, r25
    1596:	d9 f0       	breq	.+54     	; 0x15ce <moveY+0x4e>
    1598:	7a 01       	movw	r14, r20
    159a:	eb 01       	movw	r28, r22
    159c:	8c 01       	movw	r16, r24
    159e:	28 17       	cp	r18, r24
    15a0:	39 07       	cpc	r19, r25
    15a2:	54 f4       	brge	.+20     	; 0x15b8 <moveY+0x38>
    15a4:	8e e4       	ldi	r24, 0x4E	; 78
    15a6:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <turnRobot>
    15aa:	8a 81       	ldd	r24, Y+2	; 0x02
    15ac:	9b 81       	ldd	r25, Y+3	; 0x03
    15ae:	98 01       	movw	r18, r16
    15b0:	28 1b       	sub	r18, r24
    15b2:	39 0b       	sbc	r19, r25
    15b4:	c9 01       	movw	r24, r18
    15b6:	07 c0       	rjmp	.+14     	; 0x15c6 <moveY+0x46>
    15b8:	83 e5       	ldi	r24, 0x53	; 83
    15ba:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <turnRobot>
    15be:	8a 81       	ldd	r24, Y+2	; 0x02
    15c0:	9b 81       	ldd	r25, Y+3	; 0x03
    15c2:	80 1b       	sub	r24, r16
    15c4:	91 0b       	sbc	r25, r17
    15c6:	a7 01       	movw	r20, r14
    15c8:	be 01       	movw	r22, r28
    15ca:	0e 94 52 09 	call	0x12a4	; 0x12a4 <drive>
    15ce:	df 91       	pop	r29
    15d0:	cf 91       	pop	r28
    15d2:	1f 91       	pop	r17
    15d4:	0f 91       	pop	r16
    15d6:	ff 90       	pop	r15
    15d8:	ef 90       	pop	r14
    15da:	08 95       	ret

000015dc <warehouse>:
    15dc:	2f 92       	push	r2
    15de:	3f 92       	push	r3
    15e0:	4f 92       	push	r4
    15e2:	5f 92       	push	r5
    15e4:	6f 92       	push	r6
    15e6:	7f 92       	push	r7
    15e8:	8f 92       	push	r8
    15ea:	9f 92       	push	r9
    15ec:	af 92       	push	r10
    15ee:	bf 92       	push	r11
    15f0:	cf 92       	push	r12
    15f2:	df 92       	push	r13
    15f4:	ef 92       	push	r14
    15f6:	ff 92       	push	r15
    15f8:	0f 93       	push	r16
    15fa:	1f 93       	push	r17
    15fc:	cf 93       	push	r28
    15fe:	df 93       	push	r29
    1600:	cd b7       	in	r28, 0x3d	; 61
    1602:	de b7       	in	r29, 0x3e	; 62
    1604:	e7 97       	sbiw	r28, 0x37	; 55
    1606:	0f b6       	in	r0, 0x3f	; 63
    1608:	f8 94       	cli
    160a:	de bf       	out	0x3e, r29	; 62
    160c:	0f be       	out	0x3f, r0	; 63
    160e:	cd bf       	out	0x3d, r28	; 61
    1610:	f8 2e       	mov	r15, r24
    1612:	8b 01       	movw	r16, r22
    1614:	87 e5       	ldi	r24, 0x57	; 87
    1616:	8d 83       	std	Y+5, r24	; 0x05
    1618:	1a 82       	std	Y+2, r1	; 0x02
    161a:	19 82       	std	Y+1, r1	; 0x01
    161c:	81 e0       	ldi	r24, 0x01	; 1
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	9c 83       	std	Y+4, r25	; 0x04
    1622:	8b 83       	std	Y+3, r24	; 0x03
    1624:	80 e0       	ldi	r24, 0x00	; 0
    1626:	90 e0       	ldi	r25, 0x00	; 0
    1628:	c1 2c       	mov	r12, r1
    162a:	d1 2c       	mov	r13, r1
    162c:	0c c0       	rjmp	.+24     	; 0x1646 <warehouse+0x6a>
    162e:	f8 01       	movw	r30, r16
    1630:	e8 0f       	add	r30, r24
    1632:	f9 1f       	adc	r31, r25
    1634:	ee 5a       	subi	r30, 0xAE	; 174
    1636:	ff 4f       	sbci	r31, 0xFF	; 255
    1638:	20 81       	ld	r18, Z
    163a:	22 23       	and	r18, r18
    163c:	19 f0       	breq	.+6      	; 0x1644 <warehouse+0x68>
    163e:	2f ef       	ldi	r18, 0xFF	; 255
    1640:	c2 1a       	sub	r12, r18
    1642:	d2 0a       	sbc	r13, r18
    1644:	01 96       	adiw	r24, 0x01	; 1
    1646:	89 31       	cpi	r24, 0x19	; 25
    1648:	91 05       	cpc	r25, r1
    164a:	8c f3       	brlt	.-30     	; 0x162e <warehouse+0x52>
    164c:	80 e0       	ldi	r24, 0x00	; 0
    164e:	90 e0       	ldi	r25, 0x00	; 0
    1650:	18 c0       	rjmp	.+48     	; 0x1682 <warehouse+0xa6>
    1652:	d8 01       	movw	r26, r16
    1654:	a8 0f       	add	r26, r24
    1656:	b9 1f       	adc	r27, r25
    1658:	fd 01       	movw	r30, r26
    165a:	ee 5a       	subi	r30, 0xAE	; 174
    165c:	ff 4f       	sbci	r31, 0xFF	; 255
    165e:	20 81       	ld	r18, Z
    1660:	e6 e0       	ldi	r30, 0x06	; 6
    1662:	f0 e0       	ldi	r31, 0x00	; 0
    1664:	ec 0f       	add	r30, r28
    1666:	fd 1f       	adc	r31, r29
    1668:	e8 0f       	add	r30, r24
    166a:	f9 1f       	adc	r31, r25
    166c:	20 83       	st	Z, r18
    166e:	d9 96       	adiw	r26, 0x39	; 57
    1670:	2c 91       	ld	r18, X
    1672:	ef e1       	ldi	r30, 0x1F	; 31
    1674:	f0 e0       	ldi	r31, 0x00	; 0
    1676:	ec 0f       	add	r30, r28
    1678:	fd 1f       	adc	r31, r29
    167a:	e8 0f       	add	r30, r24
    167c:	f9 1f       	adc	r31, r25
    167e:	20 83       	st	Z, r18
    1680:	01 96       	adiw	r24, 0x01	; 1
    1682:	8c 15       	cp	r24, r12
    1684:	9d 05       	cpc	r25, r13
    1686:	2c f3       	brlt	.-54     	; 0x1652 <warehouse+0x76>
    1688:	0e 94 5d 13 	call	0x26ba	; 0x26ba <clear>
    168c:	60 e0       	ldi	r22, 0x00	; 0
    168e:	86 e0       	ldi	r24, 0x06	; 6
    1690:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <lcd_goto_xy>
    1694:	b6 01       	movw	r22, r12
    1696:	0d 2c       	mov	r0, r13
    1698:	00 0c       	add	r0, r0
    169a:	88 0b       	sbc	r24, r24
    169c:	99 0b       	sbc	r25, r25
    169e:	0e 94 c1 13 	call	0x2782	; 0x2782 <print_long>
    16a2:	60 e0       	ldi	r22, 0x00	; 0
    16a4:	80 e0       	ldi	r24, 0x00	; 0
    16a6:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <lcd_goto_xy>
    16aa:	6f 81       	ldd	r22, Y+7	; 0x07
    16ac:	70 e0       	ldi	r23, 0x00	; 0
    16ae:	80 e0       	ldi	r24, 0x00	; 0
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	0e 94 c1 13 	call	0x2782	; 0x2782 <print_long>
    16b6:	61 e0       	ldi	r22, 0x01	; 1
    16b8:	80 e0       	ldi	r24, 0x00	; 0
    16ba:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <lcd_goto_xy>
    16be:	68 a1       	ldd	r22, Y+32	; 0x20
    16c0:	70 e0       	ldi	r23, 0x00	; 0
    16c2:	80 e0       	ldi	r24, 0x00	; 0
    16c4:	90 e0       	ldi	r25, 0x00	; 0
    16c6:	0e 94 c1 13 	call	0x2782	; 0x2782 <print_long>
    16ca:	a6 01       	movw	r20, r12
    16cc:	be 01       	movw	r22, r28
    16ce:	61 5e       	subi	r22, 0xE1	; 225
    16d0:	7f 4f       	sbci	r23, 0xFF	; 255
    16d2:	ce 01       	movw	r24, r28
    16d4:	06 96       	adiw	r24, 0x06	; 6
    16d6:	0e 94 06 09 	call	0x120c	; 0x120c <bubbleSort>
    16da:	ff 20       	and	r15, r15
    16dc:	09 f4       	brne	.+2      	; 0x16e0 <warehouse+0x104>
    16de:	73 c0       	rjmp	.+230    	; 0x17c6 <warehouse+0x1ea>
    16e0:	89 c0       	rjmp	.+274    	; 0x17f4 <warehouse+0x218>
    16e2:	b1 01       	movw	r22, r2
    16e4:	03 2c       	mov	r0, r3
    16e6:	00 0c       	add	r0, r0
    16e8:	88 0b       	sbc	r24, r24
    16ea:	99 0b       	sbc	r25, r25
    16ec:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <__floatsisf>
    16f0:	2b 01       	movw	r4, r22
    16f2:	3c 01       	movw	r6, r24
    16f4:	b6 01       	movw	r22, r12
    16f6:	0d 2c       	mov	r0, r13
    16f8:	00 0c       	add	r0, r0
    16fa:	88 0b       	sbc	r24, r24
    16fc:	99 0b       	sbc	r25, r25
    16fe:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <__floatsisf>
    1702:	4b 01       	movw	r8, r22
    1704:	5c 01       	movw	r10, r24
    1706:	0f 2e       	mov	r0, r31
    1708:	f6 e0       	ldi	r31, 0x06	; 6
    170a:	ef 2e       	mov	r14, r31
    170c:	f1 2c       	mov	r15, r1
    170e:	f0 2d       	mov	r31, r0
    1710:	ec 0e       	add	r14, r28
    1712:	fd 1e       	adc	r15, r29
    1714:	e2 0c       	add	r14, r2
    1716:	f3 1c       	adc	r15, r3
    1718:	f7 01       	movw	r30, r14
    171a:	80 81       	ld	r24, Z
    171c:	a8 01       	movw	r20, r16
    171e:	be 01       	movw	r22, r28
    1720:	6f 5f       	subi	r22, 0xFF	; 255
    1722:	7f 4f       	sbci	r23, 0xFF	; 255
    1724:	90 e0       	ldi	r25, 0x00	; 0
    1726:	0e 94 92 0a 	call	0x1524	; 0x1524 <moveX>
    172a:	f7 01       	movw	r30, r14
    172c:	80 81       	ld	r24, Z
    172e:	90 e0       	ldi	r25, 0x00	; 0
    1730:	9a 83       	std	Y+2, r25	; 0x02
    1732:	89 83       	std	Y+1, r24	; 0x01
    1734:	0f 2e       	mov	r0, r31
    1736:	ff e1       	ldi	r31, 0x1F	; 31
    1738:	ef 2e       	mov	r14, r31
    173a:	f1 2c       	mov	r15, r1
    173c:	f0 2d       	mov	r31, r0
    173e:	ec 0e       	add	r14, r28
    1740:	fd 1e       	adc	r15, r29
    1742:	e2 0c       	add	r14, r2
    1744:	f3 1c       	adc	r15, r3
    1746:	f7 01       	movw	r30, r14
    1748:	80 81       	ld	r24, Z
    174a:	a8 01       	movw	r20, r16
    174c:	be 01       	movw	r22, r28
    174e:	6f 5f       	subi	r22, 0xFF	; 255
    1750:	7f 4f       	sbci	r23, 0xFF	; 255
    1752:	90 e0       	ldi	r25, 0x00	; 0
    1754:	0e 94 c0 0a 	call	0x1580	; 0x1580 <moveY>
    1758:	f7 01       	movw	r30, r14
    175a:	80 81       	ld	r24, Z
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	9c 83       	std	Y+4, r25	; 0x04
    1760:	8b 83       	std	Y+3, r24	; 0x03
    1762:	88 ee       	ldi	r24, 0xE8	; 232
    1764:	93 e0       	ldi	r25, 0x03	; 3
    1766:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <delay_ms>
    176a:	0e 94 a8 03 	call	0x750	; 0x750 <batteryPercentage>
    176e:	78 01       	movw	r14, r16
    1770:	fc e6       	ldi	r31, 0x6C	; 108
    1772:	ef 0e       	add	r14, r31
    1774:	f1 1c       	adc	r15, r1
    1776:	0e 94 3d 0d 	call	0x1a7a	; 0x1a7a <__fixunssfsi>
    177a:	f7 01       	movw	r30, r14
    177c:	60 83       	st	Z, r22
    177e:	20 e0       	ldi	r18, 0x00	; 0
    1780:	30 e0       	ldi	r19, 0x00	; 0
    1782:	40 e8       	ldi	r20, 0x80	; 128
    1784:	5f e3       	ldi	r21, 0x3F	; 63
    1786:	c3 01       	movw	r24, r6
    1788:	b2 01       	movw	r22, r4
    178a:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__addsf3>
    178e:	a5 01       	movw	r20, r10
    1790:	94 01       	movw	r18, r8
    1792:	0e 94 c4 0c 	call	0x1988	; 0x1988 <__divsf3>
    1796:	20 e0       	ldi	r18, 0x00	; 0
    1798:	30 e0       	ldi	r19, 0x00	; 0
    179a:	48 ec       	ldi	r20, 0xC8	; 200
    179c:	52 e4       	ldi	r21, 0x42	; 66
    179e:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <__mulsf3>
    17a2:	78 01       	movw	r14, r16
    17a4:	fd e6       	ldi	r31, 0x6D	; 109
    17a6:	ef 0e       	add	r14, r31
    17a8:	f1 1c       	adc	r15, r1
    17aa:	0e 94 3d 0d 	call	0x1a7a	; 0x1a7a <__fixunssfsi>
    17ae:	f7 01       	movw	r30, r14
    17b0:	60 83       	st	Z, r22
    17b2:	34 96       	adiw	r30, 0x04	; 4
    17b4:	01 90       	ld	r0, Z+
    17b6:	f0 81       	ld	r31, Z
    17b8:	e0 2d       	mov	r30, r0
    17ba:	c8 01       	movw	r24, r16
    17bc:	09 95       	icall
    17be:	ff ef       	ldi	r31, 0xFF	; 255
    17c0:	2f 1a       	sub	r2, r31
    17c2:	3f 0a       	sbc	r3, r31
    17c4:	02 c0       	rjmp	.+4      	; 0x17ca <warehouse+0x1ee>
    17c6:	21 2c       	mov	r2, r1
    17c8:	31 2c       	mov	r3, r1
    17ca:	2c 14       	cp	r2, r12
    17cc:	3d 04       	cpc	r3, r13
    17ce:	0c f4       	brge	.+2      	; 0x17d2 <warehouse+0x1f6>
    17d0:	88 cf       	rjmp	.-240    	; 0x16e2 <warehouse+0x106>
    17d2:	a8 01       	movw	r20, r16
    17d4:	be 01       	movw	r22, r28
    17d6:	6f 5f       	subi	r22, 0xFF	; 255
    17d8:	7f 4f       	sbci	r23, 0xFF	; 255
    17da:	80 e0       	ldi	r24, 0x00	; 0
    17dc:	90 e0       	ldi	r25, 0x00	; 0
    17de:	0e 94 c0 0a 	call	0x1580	; 0x1580 <moveY>
    17e2:	a8 01       	movw	r20, r16
    17e4:	be 01       	movw	r22, r28
    17e6:	6f 5f       	subi	r22, 0xFF	; 255
    17e8:	7f 4f       	sbci	r23, 0xFF	; 255
    17ea:	80 e0       	ldi	r24, 0x00	; 0
    17ec:	90 e0       	ldi	r25, 0x00	; 0
    17ee:	0e 94 92 0a 	call	0x1524	; 0x1524 <moveX>
    17f2:	44 c0       	rjmp	.+136    	; 0x187c <warehouse+0x2a0>
    17f4:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <charged.2344>
    17f8:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <charged.2344+0x1>
    17fc:	89 2b       	or	r24, r25
    17fe:	29 f5       	brne	.+74     	; 0x184a <warehouse+0x26e>
    1800:	a8 01       	movw	r20, r16
    1802:	be 01       	movw	r22, r28
    1804:	6f 5f       	subi	r22, 0xFF	; 255
    1806:	7f 4f       	sbci	r23, 0xFF	; 255
    1808:	81 e0       	ldi	r24, 0x01	; 1
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	0e 94 52 09 	call	0x12a4	; 0x12a4 <drive>
    1810:	82 e5       	ldi	r24, 0x52	; 82
    1812:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    1816:	a8 01       	movw	r20, r16
    1818:	be 01       	movw	r22, r28
    181a:	6f 5f       	subi	r22, 0xFF	; 255
    181c:	7f 4f       	sbci	r23, 0xFF	; 255
    181e:	83 e0       	ldi	r24, 0x03	; 3
    1820:	90 e0       	ldi	r25, 0x00	; 0
    1822:	0e 94 52 09 	call	0x12a4	; 0x12a4 <drive>
    1826:	82 e5       	ldi	r24, 0x52	; 82
    1828:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    182c:	a8 01       	movw	r20, r16
    182e:	be 01       	movw	r22, r28
    1830:	6f 5f       	subi	r22, 0xFF	; 255
    1832:	7f 4f       	sbci	r23, 0xFF	; 255
    1834:	81 e0       	ldi	r24, 0x01	; 1
    1836:	90 e0       	ldi	r25, 0x00	; 0
    1838:	0e 94 52 09 	call	0x12a4	; 0x12a4 <drive>
    183c:	81 e0       	ldi	r24, 0x01	; 1
    183e:	90 e0       	ldi	r25, 0x00	; 0
    1840:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <charged.2344+0x1>
    1844:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <charged.2344>
    1848:	19 c0       	rjmp	.+50     	; 0x187c <warehouse+0x2a0>
    184a:	84 e5       	ldi	r24, 0x54	; 84
    184c:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    1850:	a8 01       	movw	r20, r16
    1852:	be 01       	movw	r22, r28
    1854:	6f 5f       	subi	r22, 0xFF	; 255
    1856:	7f 4f       	sbci	r23, 0xFF	; 255
    1858:	81 e0       	ldi	r24, 0x01	; 1
    185a:	90 e0       	ldi	r25, 0x00	; 0
    185c:	0e 94 52 09 	call	0x12a4	; 0x12a4 <drive>
    1860:	8c e4       	ldi	r24, 0x4C	; 76
    1862:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    1866:	a8 01       	movw	r20, r16
    1868:	be 01       	movw	r22, r28
    186a:	6f 5f       	subi	r22, 0xFF	; 255
    186c:	7f 4f       	sbci	r23, 0xFF	; 255
    186e:	83 e0       	ldi	r24, 0x03	; 3
    1870:	90 e0       	ldi	r25, 0x00	; 0
    1872:	0e 94 52 09 	call	0x12a4	; 0x12a4 <drive>
    1876:	8c e4       	ldi	r24, 0x4C	; 76
    1878:	0e 94 2f 05 	call	0xa5e	; 0xa5e <motorControl>
    187c:	e7 96       	adiw	r28, 0x37	; 55
    187e:	0f b6       	in	r0, 0x3f	; 63
    1880:	f8 94       	cli
    1882:	de bf       	out	0x3e, r29	; 62
    1884:	0f be       	out	0x3f, r0	; 63
    1886:	cd bf       	out	0x3d, r28	; 61
    1888:	df 91       	pop	r29
    188a:	cf 91       	pop	r28
    188c:	1f 91       	pop	r17
    188e:	0f 91       	pop	r16
    1890:	ff 90       	pop	r15
    1892:	ef 90       	pop	r14
    1894:	df 90       	pop	r13
    1896:	cf 90       	pop	r12
    1898:	bf 90       	pop	r11
    189a:	af 90       	pop	r10
    189c:	9f 90       	pop	r9
    189e:	8f 90       	pop	r8
    18a0:	7f 90       	pop	r7
    18a2:	6f 90       	pop	r6
    18a4:	5f 90       	pop	r5
    18a6:	4f 90       	pop	r4
    18a8:	3f 90       	pop	r3
    18aa:	2f 90       	pop	r2
    18ac:	08 95       	ret

000018ae <__subsf3>:
    18ae:	50 58       	subi	r21, 0x80	; 128

000018b0 <__addsf3>:
    18b0:	bb 27       	eor	r27, r27
    18b2:	aa 27       	eor	r26, r26
    18b4:	0e 94 6f 0c 	call	0x18de	; 0x18de <__addsf3x>
    18b8:	0c 94 c0 0d 	jmp	0x1b80	; 0x1b80 <__fp_round>
    18bc:	0e 94 b2 0d 	call	0x1b64	; 0x1b64 <__fp_pscA>
    18c0:	38 f0       	brcs	.+14     	; 0x18d0 <__addsf3+0x20>
    18c2:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__fp_pscB>
    18c6:	20 f0       	brcs	.+8      	; 0x18d0 <__addsf3+0x20>
    18c8:	39 f4       	brne	.+14     	; 0x18d8 <__addsf3+0x28>
    18ca:	9f 3f       	cpi	r25, 0xFF	; 255
    18cc:	19 f4       	brne	.+6      	; 0x18d4 <__addsf3+0x24>
    18ce:	26 f4       	brtc	.+8      	; 0x18d8 <__addsf3+0x28>
    18d0:	0c 94 af 0d 	jmp	0x1b5e	; 0x1b5e <__fp_nan>
    18d4:	0e f4       	brtc	.+2      	; 0x18d8 <__addsf3+0x28>
    18d6:	e0 95       	com	r30
    18d8:	e7 fb       	bst	r30, 7
    18da:	0c 94 a9 0d 	jmp	0x1b52	; 0x1b52 <__fp_inf>

000018de <__addsf3x>:
    18de:	e9 2f       	mov	r30, r25
    18e0:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <__fp_split3>
    18e4:	58 f3       	brcs	.-42     	; 0x18bc <__addsf3+0xc>
    18e6:	ba 17       	cp	r27, r26
    18e8:	62 07       	cpc	r22, r18
    18ea:	73 07       	cpc	r23, r19
    18ec:	84 07       	cpc	r24, r20
    18ee:	95 07       	cpc	r25, r21
    18f0:	20 f0       	brcs	.+8      	; 0x18fa <__addsf3x+0x1c>
    18f2:	79 f4       	brne	.+30     	; 0x1912 <__addsf3x+0x34>
    18f4:	a6 f5       	brtc	.+104    	; 0x195e <__addsf3x+0x80>
    18f6:	0c 94 f3 0d 	jmp	0x1be6	; 0x1be6 <__fp_zero>
    18fa:	0e f4       	brtc	.+2      	; 0x18fe <__addsf3x+0x20>
    18fc:	e0 95       	com	r30
    18fe:	0b 2e       	mov	r0, r27
    1900:	ba 2f       	mov	r27, r26
    1902:	a0 2d       	mov	r26, r0
    1904:	0b 01       	movw	r0, r22
    1906:	b9 01       	movw	r22, r18
    1908:	90 01       	movw	r18, r0
    190a:	0c 01       	movw	r0, r24
    190c:	ca 01       	movw	r24, r20
    190e:	a0 01       	movw	r20, r0
    1910:	11 24       	eor	r1, r1
    1912:	ff 27       	eor	r31, r31
    1914:	59 1b       	sub	r21, r25
    1916:	99 f0       	breq	.+38     	; 0x193e <__addsf3x+0x60>
    1918:	59 3f       	cpi	r21, 0xF9	; 249
    191a:	50 f4       	brcc	.+20     	; 0x1930 <__addsf3x+0x52>
    191c:	50 3e       	cpi	r21, 0xE0	; 224
    191e:	68 f1       	brcs	.+90     	; 0x197a <__addsf3x+0x9c>
    1920:	1a 16       	cp	r1, r26
    1922:	f0 40       	sbci	r31, 0x00	; 0
    1924:	a2 2f       	mov	r26, r18
    1926:	23 2f       	mov	r18, r19
    1928:	34 2f       	mov	r19, r20
    192a:	44 27       	eor	r20, r20
    192c:	58 5f       	subi	r21, 0xF8	; 248
    192e:	f3 cf       	rjmp	.-26     	; 0x1916 <__addsf3x+0x38>
    1930:	46 95       	lsr	r20
    1932:	37 95       	ror	r19
    1934:	27 95       	ror	r18
    1936:	a7 95       	ror	r26
    1938:	f0 40       	sbci	r31, 0x00	; 0
    193a:	53 95       	inc	r21
    193c:	c9 f7       	brne	.-14     	; 0x1930 <__addsf3x+0x52>
    193e:	7e f4       	brtc	.+30     	; 0x195e <__addsf3x+0x80>
    1940:	1f 16       	cp	r1, r31
    1942:	ba 0b       	sbc	r27, r26
    1944:	62 0b       	sbc	r22, r18
    1946:	73 0b       	sbc	r23, r19
    1948:	84 0b       	sbc	r24, r20
    194a:	ba f0       	brmi	.+46     	; 0x197a <__addsf3x+0x9c>
    194c:	91 50       	subi	r25, 0x01	; 1
    194e:	a1 f0       	breq	.+40     	; 0x1978 <__addsf3x+0x9a>
    1950:	ff 0f       	add	r31, r31
    1952:	bb 1f       	adc	r27, r27
    1954:	66 1f       	adc	r22, r22
    1956:	77 1f       	adc	r23, r23
    1958:	88 1f       	adc	r24, r24
    195a:	c2 f7       	brpl	.-16     	; 0x194c <__addsf3x+0x6e>
    195c:	0e c0       	rjmp	.+28     	; 0x197a <__addsf3x+0x9c>
    195e:	ba 0f       	add	r27, r26
    1960:	62 1f       	adc	r22, r18
    1962:	73 1f       	adc	r23, r19
    1964:	84 1f       	adc	r24, r20
    1966:	48 f4       	brcc	.+18     	; 0x197a <__addsf3x+0x9c>
    1968:	87 95       	ror	r24
    196a:	77 95       	ror	r23
    196c:	67 95       	ror	r22
    196e:	b7 95       	ror	r27
    1970:	f7 95       	ror	r31
    1972:	9e 3f       	cpi	r25, 0xFE	; 254
    1974:	08 f0       	brcs	.+2      	; 0x1978 <__addsf3x+0x9a>
    1976:	b0 cf       	rjmp	.-160    	; 0x18d8 <__addsf3+0x28>
    1978:	93 95       	inc	r25
    197a:	88 0f       	add	r24, r24
    197c:	08 f0       	brcs	.+2      	; 0x1980 <__addsf3x+0xa2>
    197e:	99 27       	eor	r25, r25
    1980:	ee 0f       	add	r30, r30
    1982:	97 95       	ror	r25
    1984:	87 95       	ror	r24
    1986:	08 95       	ret

00001988 <__divsf3>:
    1988:	0e 94 d8 0c 	call	0x19b0	; 0x19b0 <__divsf3x>
    198c:	0c 94 c0 0d 	jmp	0x1b80	; 0x1b80 <__fp_round>
    1990:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__fp_pscB>
    1994:	58 f0       	brcs	.+22     	; 0x19ac <__divsf3+0x24>
    1996:	0e 94 b2 0d 	call	0x1b64	; 0x1b64 <__fp_pscA>
    199a:	40 f0       	brcs	.+16     	; 0x19ac <__divsf3+0x24>
    199c:	29 f4       	brne	.+10     	; 0x19a8 <__divsf3+0x20>
    199e:	5f 3f       	cpi	r21, 0xFF	; 255
    19a0:	29 f0       	breq	.+10     	; 0x19ac <__divsf3+0x24>
    19a2:	0c 94 a9 0d 	jmp	0x1b52	; 0x1b52 <__fp_inf>
    19a6:	51 11       	cpse	r21, r1
    19a8:	0c 94 f4 0d 	jmp	0x1be8	; 0x1be8 <__fp_szero>
    19ac:	0c 94 af 0d 	jmp	0x1b5e	; 0x1b5e <__fp_nan>

000019b0 <__divsf3x>:
    19b0:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <__fp_split3>
    19b4:	68 f3       	brcs	.-38     	; 0x1990 <__divsf3+0x8>

000019b6 <__divsf3_pse>:
    19b6:	99 23       	and	r25, r25
    19b8:	b1 f3       	breq	.-20     	; 0x19a6 <__divsf3+0x1e>
    19ba:	55 23       	and	r21, r21
    19bc:	91 f3       	breq	.-28     	; 0x19a2 <__divsf3+0x1a>
    19be:	95 1b       	sub	r25, r21
    19c0:	55 0b       	sbc	r21, r21
    19c2:	bb 27       	eor	r27, r27
    19c4:	aa 27       	eor	r26, r26
    19c6:	62 17       	cp	r22, r18
    19c8:	73 07       	cpc	r23, r19
    19ca:	84 07       	cpc	r24, r20
    19cc:	38 f0       	brcs	.+14     	; 0x19dc <__divsf3_pse+0x26>
    19ce:	9f 5f       	subi	r25, 0xFF	; 255
    19d0:	5f 4f       	sbci	r21, 0xFF	; 255
    19d2:	22 0f       	add	r18, r18
    19d4:	33 1f       	adc	r19, r19
    19d6:	44 1f       	adc	r20, r20
    19d8:	aa 1f       	adc	r26, r26
    19da:	a9 f3       	breq	.-22     	; 0x19c6 <__divsf3_pse+0x10>
    19dc:	35 d0       	rcall	.+106    	; 0x1a48 <__divsf3_pse+0x92>
    19de:	0e 2e       	mov	r0, r30
    19e0:	3a f0       	brmi	.+14     	; 0x19f0 <__divsf3_pse+0x3a>
    19e2:	e0 e8       	ldi	r30, 0x80	; 128
    19e4:	32 d0       	rcall	.+100    	; 0x1a4a <__divsf3_pse+0x94>
    19e6:	91 50       	subi	r25, 0x01	; 1
    19e8:	50 40       	sbci	r21, 0x00	; 0
    19ea:	e6 95       	lsr	r30
    19ec:	00 1c       	adc	r0, r0
    19ee:	ca f7       	brpl	.-14     	; 0x19e2 <__divsf3_pse+0x2c>
    19f0:	2b d0       	rcall	.+86     	; 0x1a48 <__divsf3_pse+0x92>
    19f2:	fe 2f       	mov	r31, r30
    19f4:	29 d0       	rcall	.+82     	; 0x1a48 <__divsf3_pse+0x92>
    19f6:	66 0f       	add	r22, r22
    19f8:	77 1f       	adc	r23, r23
    19fa:	88 1f       	adc	r24, r24
    19fc:	bb 1f       	adc	r27, r27
    19fe:	26 17       	cp	r18, r22
    1a00:	37 07       	cpc	r19, r23
    1a02:	48 07       	cpc	r20, r24
    1a04:	ab 07       	cpc	r26, r27
    1a06:	b0 e8       	ldi	r27, 0x80	; 128
    1a08:	09 f0       	breq	.+2      	; 0x1a0c <__divsf3_pse+0x56>
    1a0a:	bb 0b       	sbc	r27, r27
    1a0c:	80 2d       	mov	r24, r0
    1a0e:	bf 01       	movw	r22, r30
    1a10:	ff 27       	eor	r31, r31
    1a12:	93 58       	subi	r25, 0x83	; 131
    1a14:	5f 4f       	sbci	r21, 0xFF	; 255
    1a16:	3a f0       	brmi	.+14     	; 0x1a26 <__divsf3_pse+0x70>
    1a18:	9e 3f       	cpi	r25, 0xFE	; 254
    1a1a:	51 05       	cpc	r21, r1
    1a1c:	78 f0       	brcs	.+30     	; 0x1a3c <__divsf3_pse+0x86>
    1a1e:	0c 94 a9 0d 	jmp	0x1b52	; 0x1b52 <__fp_inf>
    1a22:	0c 94 f4 0d 	jmp	0x1be8	; 0x1be8 <__fp_szero>
    1a26:	5f 3f       	cpi	r21, 0xFF	; 255
    1a28:	e4 f3       	brlt	.-8      	; 0x1a22 <__divsf3_pse+0x6c>
    1a2a:	98 3e       	cpi	r25, 0xE8	; 232
    1a2c:	d4 f3       	brlt	.-12     	; 0x1a22 <__divsf3_pse+0x6c>
    1a2e:	86 95       	lsr	r24
    1a30:	77 95       	ror	r23
    1a32:	67 95       	ror	r22
    1a34:	b7 95       	ror	r27
    1a36:	f7 95       	ror	r31
    1a38:	9f 5f       	subi	r25, 0xFF	; 255
    1a3a:	c9 f7       	brne	.-14     	; 0x1a2e <__divsf3_pse+0x78>
    1a3c:	88 0f       	add	r24, r24
    1a3e:	91 1d       	adc	r25, r1
    1a40:	96 95       	lsr	r25
    1a42:	87 95       	ror	r24
    1a44:	97 f9       	bld	r25, 7
    1a46:	08 95       	ret
    1a48:	e1 e0       	ldi	r30, 0x01	; 1
    1a4a:	66 0f       	add	r22, r22
    1a4c:	77 1f       	adc	r23, r23
    1a4e:	88 1f       	adc	r24, r24
    1a50:	bb 1f       	adc	r27, r27
    1a52:	62 17       	cp	r22, r18
    1a54:	73 07       	cpc	r23, r19
    1a56:	84 07       	cpc	r24, r20
    1a58:	ba 07       	cpc	r27, r26
    1a5a:	20 f0       	brcs	.+8      	; 0x1a64 <__divsf3_pse+0xae>
    1a5c:	62 1b       	sub	r22, r18
    1a5e:	73 0b       	sbc	r23, r19
    1a60:	84 0b       	sbc	r24, r20
    1a62:	ba 0b       	sbc	r27, r26
    1a64:	ee 1f       	adc	r30, r30
    1a66:	88 f7       	brcc	.-30     	; 0x1a4a <__divsf3_pse+0x94>
    1a68:	e0 95       	com	r30
    1a6a:	08 95       	ret

00001a6c <__fixsfsi>:
    1a6c:	0e 94 3d 0d 	call	0x1a7a	; 0x1a7a <__fixunssfsi>
    1a70:	68 94       	set
    1a72:	b1 11       	cpse	r27, r1
    1a74:	0c 94 f4 0d 	jmp	0x1be8	; 0x1be8 <__fp_szero>
    1a78:	08 95       	ret

00001a7a <__fixunssfsi>:
    1a7a:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <__fp_splitA>
    1a7e:	88 f0       	brcs	.+34     	; 0x1aa2 <__fixunssfsi+0x28>
    1a80:	9f 57       	subi	r25, 0x7F	; 127
    1a82:	98 f0       	brcs	.+38     	; 0x1aaa <__fixunssfsi+0x30>
    1a84:	b9 2f       	mov	r27, r25
    1a86:	99 27       	eor	r25, r25
    1a88:	b7 51       	subi	r27, 0x17	; 23
    1a8a:	b0 f0       	brcs	.+44     	; 0x1ab8 <__fixunssfsi+0x3e>
    1a8c:	e1 f0       	breq	.+56     	; 0x1ac6 <__fixunssfsi+0x4c>
    1a8e:	66 0f       	add	r22, r22
    1a90:	77 1f       	adc	r23, r23
    1a92:	88 1f       	adc	r24, r24
    1a94:	99 1f       	adc	r25, r25
    1a96:	1a f0       	brmi	.+6      	; 0x1a9e <__fixunssfsi+0x24>
    1a98:	ba 95       	dec	r27
    1a9a:	c9 f7       	brne	.-14     	; 0x1a8e <__fixunssfsi+0x14>
    1a9c:	14 c0       	rjmp	.+40     	; 0x1ac6 <__fixunssfsi+0x4c>
    1a9e:	b1 30       	cpi	r27, 0x01	; 1
    1aa0:	91 f0       	breq	.+36     	; 0x1ac6 <__fixunssfsi+0x4c>
    1aa2:	0e 94 f3 0d 	call	0x1be6	; 0x1be6 <__fp_zero>
    1aa6:	b1 e0       	ldi	r27, 0x01	; 1
    1aa8:	08 95       	ret
    1aaa:	0c 94 f3 0d 	jmp	0x1be6	; 0x1be6 <__fp_zero>
    1aae:	67 2f       	mov	r22, r23
    1ab0:	78 2f       	mov	r23, r24
    1ab2:	88 27       	eor	r24, r24
    1ab4:	b8 5f       	subi	r27, 0xF8	; 248
    1ab6:	39 f0       	breq	.+14     	; 0x1ac6 <__fixunssfsi+0x4c>
    1ab8:	b9 3f       	cpi	r27, 0xF9	; 249
    1aba:	cc f3       	brlt	.-14     	; 0x1aae <__fixunssfsi+0x34>
    1abc:	86 95       	lsr	r24
    1abe:	77 95       	ror	r23
    1ac0:	67 95       	ror	r22
    1ac2:	b3 95       	inc	r27
    1ac4:	d9 f7       	brne	.-10     	; 0x1abc <__fixunssfsi+0x42>
    1ac6:	3e f4       	brtc	.+14     	; 0x1ad6 <__fixunssfsi+0x5c>
    1ac8:	90 95       	com	r25
    1aca:	80 95       	com	r24
    1acc:	70 95       	com	r23
    1ace:	61 95       	neg	r22
    1ad0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ad2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ad4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ad6:	08 95       	ret

00001ad8 <__floatunsisf>:
    1ad8:	e8 94       	clt
    1ada:	09 c0       	rjmp	.+18     	; 0x1aee <__floatsisf+0x12>

00001adc <__floatsisf>:
    1adc:	97 fb       	bst	r25, 7
    1ade:	3e f4       	brtc	.+14     	; 0x1aee <__floatsisf+0x12>
    1ae0:	90 95       	com	r25
    1ae2:	80 95       	com	r24
    1ae4:	70 95       	com	r23
    1ae6:	61 95       	neg	r22
    1ae8:	7f 4f       	sbci	r23, 0xFF	; 255
    1aea:	8f 4f       	sbci	r24, 0xFF	; 255
    1aec:	9f 4f       	sbci	r25, 0xFF	; 255
    1aee:	99 23       	and	r25, r25
    1af0:	a9 f0       	breq	.+42     	; 0x1b1c <__floatsisf+0x40>
    1af2:	f9 2f       	mov	r31, r25
    1af4:	96 e9       	ldi	r25, 0x96	; 150
    1af6:	bb 27       	eor	r27, r27
    1af8:	93 95       	inc	r25
    1afa:	f6 95       	lsr	r31
    1afc:	87 95       	ror	r24
    1afe:	77 95       	ror	r23
    1b00:	67 95       	ror	r22
    1b02:	b7 95       	ror	r27
    1b04:	f1 11       	cpse	r31, r1
    1b06:	f8 cf       	rjmp	.-16     	; 0x1af8 <__floatsisf+0x1c>
    1b08:	fa f4       	brpl	.+62     	; 0x1b48 <__floatsisf+0x6c>
    1b0a:	bb 0f       	add	r27, r27
    1b0c:	11 f4       	brne	.+4      	; 0x1b12 <__floatsisf+0x36>
    1b0e:	60 ff       	sbrs	r22, 0
    1b10:	1b c0       	rjmp	.+54     	; 0x1b48 <__floatsisf+0x6c>
    1b12:	6f 5f       	subi	r22, 0xFF	; 255
    1b14:	7f 4f       	sbci	r23, 0xFF	; 255
    1b16:	8f 4f       	sbci	r24, 0xFF	; 255
    1b18:	9f 4f       	sbci	r25, 0xFF	; 255
    1b1a:	16 c0       	rjmp	.+44     	; 0x1b48 <__floatsisf+0x6c>
    1b1c:	88 23       	and	r24, r24
    1b1e:	11 f0       	breq	.+4      	; 0x1b24 <__floatsisf+0x48>
    1b20:	96 e9       	ldi	r25, 0x96	; 150
    1b22:	11 c0       	rjmp	.+34     	; 0x1b46 <__floatsisf+0x6a>
    1b24:	77 23       	and	r23, r23
    1b26:	21 f0       	breq	.+8      	; 0x1b30 <__floatsisf+0x54>
    1b28:	9e e8       	ldi	r25, 0x8E	; 142
    1b2a:	87 2f       	mov	r24, r23
    1b2c:	76 2f       	mov	r23, r22
    1b2e:	05 c0       	rjmp	.+10     	; 0x1b3a <__floatsisf+0x5e>
    1b30:	66 23       	and	r22, r22
    1b32:	71 f0       	breq	.+28     	; 0x1b50 <__floatsisf+0x74>
    1b34:	96 e8       	ldi	r25, 0x86	; 134
    1b36:	86 2f       	mov	r24, r22
    1b38:	70 e0       	ldi	r23, 0x00	; 0
    1b3a:	60 e0       	ldi	r22, 0x00	; 0
    1b3c:	2a f0       	brmi	.+10     	; 0x1b48 <__floatsisf+0x6c>
    1b3e:	9a 95       	dec	r25
    1b40:	66 0f       	add	r22, r22
    1b42:	77 1f       	adc	r23, r23
    1b44:	88 1f       	adc	r24, r24
    1b46:	da f7       	brpl	.-10     	; 0x1b3e <__floatsisf+0x62>
    1b48:	88 0f       	add	r24, r24
    1b4a:	96 95       	lsr	r25
    1b4c:	87 95       	ror	r24
    1b4e:	97 f9       	bld	r25, 7
    1b50:	08 95       	ret

00001b52 <__fp_inf>:
    1b52:	97 f9       	bld	r25, 7
    1b54:	9f 67       	ori	r25, 0x7F	; 127
    1b56:	80 e8       	ldi	r24, 0x80	; 128
    1b58:	70 e0       	ldi	r23, 0x00	; 0
    1b5a:	60 e0       	ldi	r22, 0x00	; 0
    1b5c:	08 95       	ret

00001b5e <__fp_nan>:
    1b5e:	9f ef       	ldi	r25, 0xFF	; 255
    1b60:	80 ec       	ldi	r24, 0xC0	; 192
    1b62:	08 95       	ret

00001b64 <__fp_pscA>:
    1b64:	00 24       	eor	r0, r0
    1b66:	0a 94       	dec	r0
    1b68:	16 16       	cp	r1, r22
    1b6a:	17 06       	cpc	r1, r23
    1b6c:	18 06       	cpc	r1, r24
    1b6e:	09 06       	cpc	r0, r25
    1b70:	08 95       	ret

00001b72 <__fp_pscB>:
    1b72:	00 24       	eor	r0, r0
    1b74:	0a 94       	dec	r0
    1b76:	12 16       	cp	r1, r18
    1b78:	13 06       	cpc	r1, r19
    1b7a:	14 06       	cpc	r1, r20
    1b7c:	05 06       	cpc	r0, r21
    1b7e:	08 95       	ret

00001b80 <__fp_round>:
    1b80:	09 2e       	mov	r0, r25
    1b82:	03 94       	inc	r0
    1b84:	00 0c       	add	r0, r0
    1b86:	11 f4       	brne	.+4      	; 0x1b8c <__fp_round+0xc>
    1b88:	88 23       	and	r24, r24
    1b8a:	52 f0       	brmi	.+20     	; 0x1ba0 <__fp_round+0x20>
    1b8c:	bb 0f       	add	r27, r27
    1b8e:	40 f4       	brcc	.+16     	; 0x1ba0 <__fp_round+0x20>
    1b90:	bf 2b       	or	r27, r31
    1b92:	11 f4       	brne	.+4      	; 0x1b98 <__fp_round+0x18>
    1b94:	60 ff       	sbrs	r22, 0
    1b96:	04 c0       	rjmp	.+8      	; 0x1ba0 <__fp_round+0x20>
    1b98:	6f 5f       	subi	r22, 0xFF	; 255
    1b9a:	7f 4f       	sbci	r23, 0xFF	; 255
    1b9c:	8f 4f       	sbci	r24, 0xFF	; 255
    1b9e:	9f 4f       	sbci	r25, 0xFF	; 255
    1ba0:	08 95       	ret

00001ba2 <__fp_split3>:
    1ba2:	57 fd       	sbrc	r21, 7
    1ba4:	90 58       	subi	r25, 0x80	; 128
    1ba6:	44 0f       	add	r20, r20
    1ba8:	55 1f       	adc	r21, r21
    1baa:	59 f0       	breq	.+22     	; 0x1bc2 <__fp_splitA+0x10>
    1bac:	5f 3f       	cpi	r21, 0xFF	; 255
    1bae:	71 f0       	breq	.+28     	; 0x1bcc <__fp_splitA+0x1a>
    1bb0:	47 95       	ror	r20

00001bb2 <__fp_splitA>:
    1bb2:	88 0f       	add	r24, r24
    1bb4:	97 fb       	bst	r25, 7
    1bb6:	99 1f       	adc	r25, r25
    1bb8:	61 f0       	breq	.+24     	; 0x1bd2 <__fp_splitA+0x20>
    1bba:	9f 3f       	cpi	r25, 0xFF	; 255
    1bbc:	79 f0       	breq	.+30     	; 0x1bdc <__fp_splitA+0x2a>
    1bbe:	87 95       	ror	r24
    1bc0:	08 95       	ret
    1bc2:	12 16       	cp	r1, r18
    1bc4:	13 06       	cpc	r1, r19
    1bc6:	14 06       	cpc	r1, r20
    1bc8:	55 1f       	adc	r21, r21
    1bca:	f2 cf       	rjmp	.-28     	; 0x1bb0 <__fp_split3+0xe>
    1bcc:	46 95       	lsr	r20
    1bce:	f1 df       	rcall	.-30     	; 0x1bb2 <__fp_splitA>
    1bd0:	08 c0       	rjmp	.+16     	; 0x1be2 <__fp_splitA+0x30>
    1bd2:	16 16       	cp	r1, r22
    1bd4:	17 06       	cpc	r1, r23
    1bd6:	18 06       	cpc	r1, r24
    1bd8:	99 1f       	adc	r25, r25
    1bda:	f1 cf       	rjmp	.-30     	; 0x1bbe <__fp_splitA+0xc>
    1bdc:	86 95       	lsr	r24
    1bde:	71 05       	cpc	r23, r1
    1be0:	61 05       	cpc	r22, r1
    1be2:	08 94       	sec
    1be4:	08 95       	ret

00001be6 <__fp_zero>:
    1be6:	e8 94       	clt

00001be8 <__fp_szero>:
    1be8:	bb 27       	eor	r27, r27
    1bea:	66 27       	eor	r22, r22
    1bec:	77 27       	eor	r23, r23
    1bee:	cb 01       	movw	r24, r22
    1bf0:	97 f9       	bld	r25, 7
    1bf2:	08 95       	ret

00001bf4 <__mulsf3>:
    1bf4:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <__mulsf3x>
    1bf8:	0c 94 c0 0d 	jmp	0x1b80	; 0x1b80 <__fp_round>
    1bfc:	0e 94 b2 0d 	call	0x1b64	; 0x1b64 <__fp_pscA>
    1c00:	38 f0       	brcs	.+14     	; 0x1c10 <__mulsf3+0x1c>
    1c02:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__fp_pscB>
    1c06:	20 f0       	brcs	.+8      	; 0x1c10 <__mulsf3+0x1c>
    1c08:	95 23       	and	r25, r21
    1c0a:	11 f0       	breq	.+4      	; 0x1c10 <__mulsf3+0x1c>
    1c0c:	0c 94 a9 0d 	jmp	0x1b52	; 0x1b52 <__fp_inf>
    1c10:	0c 94 af 0d 	jmp	0x1b5e	; 0x1b5e <__fp_nan>
    1c14:	11 24       	eor	r1, r1
    1c16:	0c 94 f4 0d 	jmp	0x1be8	; 0x1be8 <__fp_szero>

00001c1a <__mulsf3x>:
    1c1a:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <__fp_split3>
    1c1e:	70 f3       	brcs	.-36     	; 0x1bfc <__mulsf3+0x8>

00001c20 <__mulsf3_pse>:
    1c20:	95 9f       	mul	r25, r21
    1c22:	c1 f3       	breq	.-16     	; 0x1c14 <__mulsf3+0x20>
    1c24:	95 0f       	add	r25, r21
    1c26:	50 e0       	ldi	r21, 0x00	; 0
    1c28:	55 1f       	adc	r21, r21
    1c2a:	62 9f       	mul	r22, r18
    1c2c:	f0 01       	movw	r30, r0
    1c2e:	72 9f       	mul	r23, r18
    1c30:	bb 27       	eor	r27, r27
    1c32:	f0 0d       	add	r31, r0
    1c34:	b1 1d       	adc	r27, r1
    1c36:	63 9f       	mul	r22, r19
    1c38:	aa 27       	eor	r26, r26
    1c3a:	f0 0d       	add	r31, r0
    1c3c:	b1 1d       	adc	r27, r1
    1c3e:	aa 1f       	adc	r26, r26
    1c40:	64 9f       	mul	r22, r20
    1c42:	66 27       	eor	r22, r22
    1c44:	b0 0d       	add	r27, r0
    1c46:	a1 1d       	adc	r26, r1
    1c48:	66 1f       	adc	r22, r22
    1c4a:	82 9f       	mul	r24, r18
    1c4c:	22 27       	eor	r18, r18
    1c4e:	b0 0d       	add	r27, r0
    1c50:	a1 1d       	adc	r26, r1
    1c52:	62 1f       	adc	r22, r18
    1c54:	73 9f       	mul	r23, r19
    1c56:	b0 0d       	add	r27, r0
    1c58:	a1 1d       	adc	r26, r1
    1c5a:	62 1f       	adc	r22, r18
    1c5c:	83 9f       	mul	r24, r19
    1c5e:	a0 0d       	add	r26, r0
    1c60:	61 1d       	adc	r22, r1
    1c62:	22 1f       	adc	r18, r18
    1c64:	74 9f       	mul	r23, r20
    1c66:	33 27       	eor	r19, r19
    1c68:	a0 0d       	add	r26, r0
    1c6a:	61 1d       	adc	r22, r1
    1c6c:	23 1f       	adc	r18, r19
    1c6e:	84 9f       	mul	r24, r20
    1c70:	60 0d       	add	r22, r0
    1c72:	21 1d       	adc	r18, r1
    1c74:	82 2f       	mov	r24, r18
    1c76:	76 2f       	mov	r23, r22
    1c78:	6a 2f       	mov	r22, r26
    1c7a:	11 24       	eor	r1, r1
    1c7c:	9f 57       	subi	r25, 0x7F	; 127
    1c7e:	50 40       	sbci	r21, 0x00	; 0
    1c80:	9a f0       	brmi	.+38     	; 0x1ca8 <__mulsf3_pse+0x88>
    1c82:	f1 f0       	breq	.+60     	; 0x1cc0 <__mulsf3_pse+0xa0>
    1c84:	88 23       	and	r24, r24
    1c86:	4a f0       	brmi	.+18     	; 0x1c9a <__mulsf3_pse+0x7a>
    1c88:	ee 0f       	add	r30, r30
    1c8a:	ff 1f       	adc	r31, r31
    1c8c:	bb 1f       	adc	r27, r27
    1c8e:	66 1f       	adc	r22, r22
    1c90:	77 1f       	adc	r23, r23
    1c92:	88 1f       	adc	r24, r24
    1c94:	91 50       	subi	r25, 0x01	; 1
    1c96:	50 40       	sbci	r21, 0x00	; 0
    1c98:	a9 f7       	brne	.-22     	; 0x1c84 <__mulsf3_pse+0x64>
    1c9a:	9e 3f       	cpi	r25, 0xFE	; 254
    1c9c:	51 05       	cpc	r21, r1
    1c9e:	80 f0       	brcs	.+32     	; 0x1cc0 <__mulsf3_pse+0xa0>
    1ca0:	0c 94 a9 0d 	jmp	0x1b52	; 0x1b52 <__fp_inf>
    1ca4:	0c 94 f4 0d 	jmp	0x1be8	; 0x1be8 <__fp_szero>
    1ca8:	5f 3f       	cpi	r21, 0xFF	; 255
    1caa:	e4 f3       	brlt	.-8      	; 0x1ca4 <__mulsf3_pse+0x84>
    1cac:	98 3e       	cpi	r25, 0xE8	; 232
    1cae:	d4 f3       	brlt	.-12     	; 0x1ca4 <__mulsf3_pse+0x84>
    1cb0:	86 95       	lsr	r24
    1cb2:	77 95       	ror	r23
    1cb4:	67 95       	ror	r22
    1cb6:	b7 95       	ror	r27
    1cb8:	f7 95       	ror	r31
    1cba:	e7 95       	ror	r30
    1cbc:	9f 5f       	subi	r25, 0xFF	; 255
    1cbe:	c1 f7       	brne	.-16     	; 0x1cb0 <__mulsf3_pse+0x90>
    1cc0:	fe 2b       	or	r31, r30
    1cc2:	88 0f       	add	r24, r24
    1cc4:	91 1d       	adc	r25, r1
    1cc6:	96 95       	lsr	r25
    1cc8:	87 95       	ror	r24
    1cca:	97 f9       	bld	r25, 7
    1ccc:	08 95       	ret

00001cce <_ZN15OrangutanAnalog7setModeEh.part.0>:
    1cce:	ec e7       	ldi	r30, 0x7C	; 124
    1cd0:	f0 e0       	ldi	r31, 0x00	; 0
    1cd2:	80 81       	ld	r24, Z
    1cd4:	8f 7d       	andi	r24, 0xDF	; 223
    1cd6:	80 83       	st	Z, r24
    1cd8:	08 95       	ret

00001cda <_ZN15OrangutanAnalog7setModeEh>:
    1cda:	81 11       	cpse	r24, r1
    1cdc:	03 c0       	rjmp	.+6      	; 0x1ce4 <_ZN15OrangutanAnalog7setModeEh+0xa>
    1cde:	0e 94 67 0e 	call	0x1cce	; 0x1cce <_ZN15OrangutanAnalog7setModeEh.part.0>
    1ce2:	08 95       	ret
    1ce4:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1ce8:	80 62       	ori	r24, 0x20	; 32
    1cea:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1cee:	08 95       	ret

00001cf0 <_ZN15OrangutanAnalog7getModeEv>:
    1cf0:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1cf4:	85 fb       	bst	r24, 5
    1cf6:	88 27       	eor	r24, r24
    1cf8:	80 f9       	bld	r24, 0
    1cfa:	08 95       	ret

00001cfc <_ZN15OrangutanAnalog16conversionResultEv>:
    1cfc:	0e 94 78 0e 	call	0x1cf0	; 0x1cf0 <_ZN15OrangutanAnalog7getModeEv>
    1d00:	88 23       	and	r24, r24
    1d02:	21 f0       	breq	.+8      	; 0x1d0c <_ZN15OrangutanAnalog16conversionResultEv+0x10>
    1d04:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1d08:	90 e0       	ldi	r25, 0x00	; 0
    1d0a:	08 95       	ret
    1d0c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    1d10:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1d14:	08 95       	ret

00001d16 <_ZN15OrangutanAnalog15startConversionEhh>:
    1d16:	80 32       	cpi	r24, 0x20	; 32
    1d18:	a0 f4       	brcc	.+40     	; 0x1d42 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
    1d1a:	97 e8       	ldi	r25, 0x87	; 135
    1d1c:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1d20:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1d24:	66 23       	and	r22, r22
    1d26:	11 f0       	breq	.+4      	; 0x1d2c <_ZN15OrangutanAnalog15startConversionEhh+0x16>
    1d28:	90 6c       	ori	r25, 0xC0	; 192
    1d2a:	02 c0       	rjmp	.+4      	; 0x1d30 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
    1d2c:	9f 77       	andi	r25, 0x7F	; 127
    1d2e:	90 64       	ori	r25, 0x40	; 64
    1d30:	90 7e       	andi	r25, 0xE0	; 224
    1d32:	98 2b       	or	r25, r24
    1d34:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1d38:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1d3c:	80 64       	ori	r24, 0x40	; 64
    1d3e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1d42:	08 95       	ret

00001d44 <_ZN15OrangutanAnalog11readAverageEhj>:
    1d44:	a0 e0       	ldi	r26, 0x00	; 0
    1d46:	b0 e0       	ldi	r27, 0x00	; 0
    1d48:	e8 ea       	ldi	r30, 0xA8	; 168
    1d4a:	fe e0       	ldi	r31, 0x0E	; 14
    1d4c:	0c 94 d9 1c 	jmp	0x39b2	; 0x39b2 <__prologue_saves__+0x14>
    1d50:	eb 01       	movw	r28, r22
    1d52:	60 e0       	ldi	r22, 0x00	; 0
    1d54:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <_ZN15OrangutanAnalog15startConversionEhh>
    1d58:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1d5c:	86 fd       	sbrc	r24, 6
    1d5e:	fc cf       	rjmp	.-8      	; 0x1d58 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
    1d60:	8e 01       	movw	r16, r28
    1d62:	c1 2c       	mov	r12, r1
    1d64:	d1 2c       	mov	r13, r1
    1d66:	76 01       	movw	r14, r12
    1d68:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1d6c:	80 64       	ori	r24, 0x40	; 64
    1d6e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1d72:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1d76:	86 fd       	sbrc	r24, 6
    1d78:	fc cf       	rjmp	.-8      	; 0x1d72 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
    1d7a:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <_ZN15OrangutanAnalog16conversionResultEv>
    1d7e:	c8 0e       	add	r12, r24
    1d80:	d9 1e       	adc	r13, r25
    1d82:	e1 1c       	adc	r14, r1
    1d84:	f1 1c       	adc	r15, r1
    1d86:	01 50       	subi	r16, 0x01	; 1
    1d88:	11 09       	sbc	r17, r1
    1d8a:	01 15       	cp	r16, r1
    1d8c:	11 05       	cpc	r17, r1
    1d8e:	61 f7       	brne	.-40     	; 0x1d68 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
    1d90:	ce 01       	movw	r24, r28
    1d92:	96 95       	lsr	r25
    1d94:	87 95       	ror	r24
    1d96:	c0 34       	cpi	r28, 0x40	; 64
    1d98:	d1 05       	cpc	r29, r1
    1d9a:	38 f4       	brcc	.+14     	; 0x1daa <_ZN15OrangutanAnalog11readAverageEhj+0x66>
    1d9c:	8c 0d       	add	r24, r12
    1d9e:	9d 1d       	adc	r25, r13
    1da0:	be 01       	movw	r22, r28
    1da2:	0e 94 3e 1c 	call	0x387c	; 0x387c <__udivmodhi4>
    1da6:	cb 01       	movw	r24, r22
    1da8:	0e c0       	rjmp	.+28     	; 0x1dc6 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
    1daa:	a7 01       	movw	r20, r14
    1dac:	96 01       	movw	r18, r12
    1dae:	28 0f       	add	r18, r24
    1db0:	39 1f       	adc	r19, r25
    1db2:	41 1d       	adc	r20, r1
    1db4:	51 1d       	adc	r21, r1
    1db6:	ca 01       	movw	r24, r20
    1db8:	b9 01       	movw	r22, r18
    1dba:	9e 01       	movw	r18, r28
    1dbc:	40 e0       	ldi	r20, 0x00	; 0
    1dbe:	50 e0       	ldi	r21, 0x00	; 0
    1dc0:	0e 94 66 1c 	call	0x38cc	; 0x38cc <__udivmodsi4>
    1dc4:	c9 01       	movw	r24, r18
    1dc6:	cd b7       	in	r28, 0x3d	; 61
    1dc8:	de b7       	in	r29, 0x3e	; 62
    1dca:	e8 e0       	ldi	r30, 0x08	; 8
    1dcc:	0c 94 f5 1c 	jmp	0x39ea	; 0x39ea <__epilogue_restores__+0x14>

00001dd0 <_ZN15OrangutanAnalog12toMillivoltsEj>:
    1dd0:	cf 92       	push	r12
    1dd2:	df 92       	push	r13
    1dd4:	ef 92       	push	r14
    1dd6:	ff 92       	push	r15
    1dd8:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ddc:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1de0:	9c 01       	movw	r18, r24
    1de2:	0e 94 ad 1c 	call	0x395a	; 0x395a <__umulhisi3>
    1de6:	6b 01       	movw	r12, r22
    1de8:	7c 01       	movw	r14, r24
    1dea:	0e 94 78 0e 	call	0x1cf0	; 0x1cf0 <_ZN15OrangutanAnalog7getModeEv>
    1dee:	88 23       	and	r24, r24
    1df0:	59 f0       	breq	.+22     	; 0x1e08 <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
    1df2:	c7 01       	movw	r24, r14
    1df4:	b6 01       	movw	r22, r12
    1df6:	61 58       	subi	r22, 0x81	; 129
    1df8:	7f 4f       	sbci	r23, 0xFF	; 255
    1dfa:	8f 4f       	sbci	r24, 0xFF	; 255
    1dfc:	9f 4f       	sbci	r25, 0xFF	; 255
    1dfe:	2f ef       	ldi	r18, 0xFF	; 255
    1e00:	30 e0       	ldi	r19, 0x00	; 0
    1e02:	40 e0       	ldi	r20, 0x00	; 0
    1e04:	50 e0       	ldi	r21, 0x00	; 0
    1e06:	0a c0       	rjmp	.+20     	; 0x1e1c <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
    1e08:	c7 01       	movw	r24, r14
    1e0a:	b6 01       	movw	r22, r12
    1e0c:	61 50       	subi	r22, 0x01	; 1
    1e0e:	7e 4f       	sbci	r23, 0xFE	; 254
    1e10:	8f 4f       	sbci	r24, 0xFF	; 255
    1e12:	9f 4f       	sbci	r25, 0xFF	; 255
    1e14:	2f ef       	ldi	r18, 0xFF	; 255
    1e16:	33 e0       	ldi	r19, 0x03	; 3
    1e18:	40 e0       	ldi	r20, 0x00	; 0
    1e1a:	50 e0       	ldi	r21, 0x00	; 0
    1e1c:	0e 94 66 1c 	call	0x38cc	; 0x38cc <__udivmodsi4>
    1e20:	c9 01       	movw	r24, r18
    1e22:	ff 90       	pop	r15
    1e24:	ef 90       	pop	r14
    1e26:	df 90       	pop	r13
    1e28:	cf 90       	pop	r12
    1e2a:	08 95       	ret

00001e2c <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
    1e2c:	0e 94 a2 0e 	call	0x1d44	; 0x1d44 <_ZN15OrangutanAnalog11readAverageEhj>
    1e30:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <_ZN15OrangutanAnalog12toMillivoltsEj>
    1e34:	08 95       	ret

00001e36 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
    1e36:	1f 93       	push	r17
    1e38:	cf 93       	push	r28
    1e3a:	df 93       	push	r29
    1e3c:	0e 94 78 0e 	call	0x1cf0	; 0x1cf0 <_ZN15OrangutanAnalog7getModeEv>
    1e40:	18 2f       	mov	r17, r24
    1e42:	0e 94 67 0e 	call	0x1cce	; 0x1cce <_ZN15OrangutanAnalog7setModeEh.part.0>
    1e46:	6a e0       	ldi	r22, 0x0A	; 10
    1e48:	70 e0       	ldi	r23, 0x00	; 0
    1e4a:	86 e0       	ldi	r24, 0x06	; 6
    1e4c:	0e 94 16 0f 	call	0x1e2c	; 0x1e2c <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
    1e50:	ec 01       	movw	r28, r24
    1e52:	81 2f       	mov	r24, r17
    1e54:	0e 94 6d 0e 	call	0x1cda	; 0x1cda <_ZN15OrangutanAnalog7setModeEh>
    1e58:	ce 01       	movw	r24, r28
    1e5a:	88 0f       	add	r24, r24
    1e5c:	99 1f       	adc	r25, r25
    1e5e:	8c 0f       	add	r24, r28
    1e60:	9d 1f       	adc	r25, r29
    1e62:	01 96       	adiw	r24, 0x01	; 1
    1e64:	96 95       	lsr	r25
    1e66:	87 95       	ror	r24
    1e68:	df 91       	pop	r29
    1e6a:	cf 91       	pop	r28
    1e6c:	1f 91       	pop	r17
    1e6e:	08 95       	ret

00001e70 <read_battery_millivolts_3pi>:
    1e70:	0e 94 1b 0f 	call	0x1e36	; 0x1e36 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
    1e74:	08 95       	ret

00001e76 <_ZL16currentCharacterv>:
    1e76:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <_ZL17use_program_space>
    1e7a:	e0 91 94 01 	lds	r30, 0x0194	; 0x800194 <__data_end>
    1e7e:	f0 91 95 01 	lds	r31, 0x0195	; 0x800195 <__data_end+0x1>
    1e82:	99 23       	and	r25, r25
    1e84:	11 f0       	breq	.+4      	; 0x1e8a <_ZL16currentCharacterv+0x14>
    1e86:	84 91       	lpm	r24, Z
    1e88:	01 c0       	rjmp	.+2      	; 0x1e8c <_ZL16currentCharacterv+0x16>
    1e8a:	80 81       	ld	r24, Z
    1e8c:	2f eb       	ldi	r18, 0xBF	; 191
    1e8e:	28 0f       	add	r18, r24
    1e90:	2a 31       	cpi	r18, 0x1A	; 26
    1e92:	10 f4       	brcc	.+4      	; 0x1e98 <_ZL16currentCharacterv+0x22>
    1e94:	80 5e       	subi	r24, 0xE0	; 224
    1e96:	08 95       	ret
    1e98:	80 32       	cpi	r24, 0x20	; 32
    1e9a:	49 f4       	brne	.+18     	; 0x1eae <_ZL16currentCharacterv+0x38>
    1e9c:	9f 01       	movw	r18, r30
    1e9e:	2f 5f       	subi	r18, 0xFF	; 255
    1ea0:	3f 4f       	sbci	r19, 0xFF	; 255
    1ea2:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    1ea6:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    1eaa:	ef 2b       	or	r30, r31
    1eac:	31 f7       	brne	.-52     	; 0x1e7a <_ZL16currentCharacterv+0x4>
    1eae:	08 95       	ret

00001eb0 <_ZL9getNumberv>:
    1eb0:	1f 93       	push	r17
    1eb2:	cf 93       	push	r28
    1eb4:	df 93       	push	r29
    1eb6:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_ZL16currentCharacterv>
    1eba:	c0 e0       	ldi	r28, 0x00	; 0
    1ebc:	d0 e0       	ldi	r29, 0x00	; 0
    1ebe:	1a e0       	ldi	r17, 0x0A	; 10
    1ec0:	90 ed       	ldi	r25, 0xD0	; 208
    1ec2:	98 0f       	add	r25, r24
    1ec4:	9a 30       	cpi	r25, 0x0A	; 10
    1ec6:	b8 f4       	brcc	.+46     	; 0x1ef6 <_ZL9getNumberv+0x46>
    1ec8:	9e 01       	movw	r18, r28
    1eca:	12 9f       	mul	r17, r18
    1ecc:	e0 01       	movw	r28, r0
    1ece:	13 9f       	mul	r17, r19
    1ed0:	d0 0d       	add	r29, r0
    1ed2:	11 24       	eor	r1, r1
    1ed4:	c8 0f       	add	r28, r24
    1ed6:	d1 1d       	adc	r29, r1
    1ed8:	87 fd       	sbrc	r24, 7
    1eda:	da 95       	dec	r29
    1edc:	e0 97       	sbiw	r28, 0x30	; 48
    1ede:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <__data_end>
    1ee2:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <__data_end+0x1>
    1ee6:	01 96       	adiw	r24, 0x01	; 1
    1ee8:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <__data_end+0x1>
    1eec:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <__data_end>
    1ef0:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_ZL16currentCharacterv>
    1ef4:	e5 cf       	rjmp	.-54     	; 0x1ec0 <_ZL9getNumberv+0x10>
    1ef6:	ce 01       	movw	r24, r28
    1ef8:	df 91       	pop	r29
    1efa:	cf 91       	pop	r28
    1efc:	1f 91       	pop	r17
    1efe:	08 95       	ret

00001f00 <_ZN15OrangutanBuzzer5init2Ev>:
    1f00:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1f04:	83 e2       	ldi	r24, 0x23	; 35
    1f06:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    1f0a:	81 e1       	ldi	r24, 0x11	; 17
    1f0c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1f10:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7f8082>
    1f14:	80 e1       	ldi	r24, 0x10	; 16
    1f16:	97 e2       	ldi	r25, 0x27	; 39
    1f18:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    1f1c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1f20:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    1f24:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    1f28:	22 9a       	sbi	0x04, 2	; 4
    1f2a:	78 94       	sei
    1f2c:	08 95       	ret

00001f2e <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
    1f2e:	8f 92       	push	r8
    1f30:	9f 92       	push	r9
    1f32:	af 92       	push	r10
    1f34:	bf 92       	push	r11
    1f36:	df 92       	push	r13
    1f38:	ef 92       	push	r14
    1f3a:	ff 92       	push	r15
    1f3c:	0f 93       	push	r16
    1f3e:	1f 93       	push	r17
    1f40:	cf 93       	push	r28
    1f42:	df 93       	push	r29
    1f44:	5c 01       	movw	r10, r24
    1f46:	8b 01       	movw	r16, r22
    1f48:	d4 2e       	mov	r13, r20
    1f4a:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <buzzerInitialized>
    1f4e:	81 11       	cpse	r24, r1
    1f50:	05 c0       	rjmp	.+10     	; 0x1f5c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
    1f52:	81 e0       	ldi	r24, 0x01	; 1
    1f54:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <buzzerInitialized>
    1f58:	0e 94 80 0f 	call	0x1f00	; 0x1f00 <_ZN15OrangutanBuzzer5init2Ev>
    1f5c:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <buzzerFinished>
    1f60:	b7 fe       	sbrs	r11, 7
    1f62:	05 c0       	rjmp	.+10     	; 0x1f6e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
    1f64:	e8 94       	clt
    1f66:	b7 f8       	bld	r11, 7
    1f68:	2a e0       	ldi	r18, 0x0A	; 10
    1f6a:	f2 2e       	mov	r15, r18
    1f6c:	02 c0       	rjmp	.+4      	; 0x1f72 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
    1f6e:	ff 24       	eor	r15, r15
    1f70:	f3 94       	inc	r15
    1f72:	e0 90 81 00 	lds	r14, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1f76:	2e 2d       	mov	r18, r14
    1f78:	28 7f       	andi	r18, 0xF8	; 248
    1f7a:	e2 2e       	mov	r14, r18
    1f7c:	48 ec       	ldi	r20, 0xC8	; 200
    1f7e:	f4 9e       	mul	r15, r20
    1f80:	c0 01       	movw	r24, r0
    1f82:	11 24       	eor	r1, r1
    1f84:	8a 15       	cp	r24, r10
    1f86:	9b 05       	cpc	r25, r11
    1f88:	e0 f4       	brcc	.+56     	; 0x1fc2 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
    1f8a:	e5 01       	movw	r28, r10
    1f8c:	51 e1       	ldi	r21, 0x11	; 17
    1f8e:	a5 16       	cp	r10, r21
    1f90:	57 e2       	ldi	r21, 0x27	; 39
    1f92:	b5 06       	cpc	r11, r21
    1f94:	10 f0       	brcs	.+4      	; 0x1f9a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
    1f96:	c0 e1       	ldi	r28, 0x10	; 16
    1f98:	d7 e2       	ldi	r29, 0x27	; 39
    1f9a:	be 01       	movw	r22, r28
    1f9c:	76 95       	lsr	r23
    1f9e:	67 95       	ror	r22
    1fa0:	80 e0       	ldi	r24, 0x00	; 0
    1fa2:	90 e0       	ldi	r25, 0x00	; 0
    1fa4:	60 58       	subi	r22, 0x80	; 128
    1fa6:	79 46       	sbci	r23, 0x69	; 105
    1fa8:	87 46       	sbci	r24, 0x67	; 103
    1faa:	9f 4f       	sbci	r25, 0xFF	; 255
    1fac:	4e 01       	movw	r8, r28
    1fae:	a1 2c       	mov	r10, r1
    1fb0:	b1 2c       	mov	r11, r1
    1fb2:	a5 01       	movw	r20, r10
    1fb4:	94 01       	movw	r18, r8
    1fb6:	0e 94 66 1c 	call	0x38cc	; 0x38cc <__udivmodsi4>
    1fba:	59 01       	movw	r10, r18
    1fbc:	8e 2d       	mov	r24, r14
    1fbe:	81 60       	ori	r24, 0x01	; 1
    1fc0:	24 c0       	rjmp	.+72     	; 0x200a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
    1fc2:	c8 e2       	ldi	r28, 0x28	; 40
    1fc4:	fc 9e       	mul	r15, r28
    1fc6:	c0 2d       	mov	r28, r0
    1fc8:	11 24       	eor	r1, r1
    1fca:	d0 e0       	ldi	r29, 0x00	; 0
    1fcc:	ca 15       	cp	r28, r10
    1fce:	db 05       	cpc	r29, r11
    1fd0:	08 f4       	brcc	.+2      	; 0x1fd4 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
    1fd2:	e5 01       	movw	r28, r10
    1fd4:	be 01       	movw	r22, r28
    1fd6:	76 95       	lsr	r23
    1fd8:	67 95       	ror	r22
    1fda:	9e 01       	movw	r18, r28
    1fdc:	40 e0       	ldi	r20, 0x00	; 0
    1fde:	50 e0       	ldi	r21, 0x00	; 0
    1fe0:	8a e0       	ldi	r24, 0x0A	; 10
    1fe2:	f8 12       	cpse	r15, r24
    1fe4:	07 c0       	rjmp	.+14     	; 0x1ff4 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
    1fe6:	80 e0       	ldi	r24, 0x00	; 0
    1fe8:	90 e0       	ldi	r25, 0x00	; 0
    1fea:	60 5e       	subi	r22, 0xE0	; 224
    1fec:	73 44       	sbci	r23, 0x43	; 67
    1fee:	81 44       	sbci	r24, 0x41	; 65
    1ff0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ff2:	06 c0       	rjmp	.+12     	; 0x2000 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
    1ff4:	80 e0       	ldi	r24, 0x00	; 0
    1ff6:	90 e0       	ldi	r25, 0x00	; 0
    1ff8:	60 53       	subi	r22, 0x30	; 48
    1ffa:	7d 4e       	sbci	r23, 0xED	; 237
    1ffc:	8c 4e       	sbci	r24, 0xEC	; 236
    1ffe:	9f 4f       	sbci	r25, 0xFF	; 255
    2000:	0e 94 66 1c 	call	0x38cc	; 0x38cc <__udivmodsi4>
    2004:	59 01       	movw	r10, r18
    2006:	8e 2d       	mov	r24, r14
    2008:	82 60       	ori	r24, 0x02	; 2
    200a:	88 2e       	mov	r8, r24
    200c:	2a e0       	ldi	r18, 0x0A	; 10
    200e:	f2 12       	cpse	r15, r18
    2010:	07 c0       	rjmp	.+14     	; 0x2020 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
    2012:	ce 01       	movw	r24, r28
    2014:	05 96       	adiw	r24, 0x05	; 5
    2016:	6a e0       	ldi	r22, 0x0A	; 10
    2018:	70 e0       	ldi	r23, 0x00	; 0
    201a:	0e 94 3e 1c 	call	0x387c	; 0x387c <__udivmodhi4>
    201e:	eb 01       	movw	r28, r22
    2020:	c8 3e       	cpi	r28, 0xE8	; 232
    2022:	43 e0       	ldi	r20, 0x03	; 3
    2024:	d4 07       	cpc	r29, r20
    2026:	59 f0       	breq	.+22     	; 0x203e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
    2028:	98 01       	movw	r18, r16
    202a:	de 01       	movw	r26, r28
    202c:	0e 94 ad 1c 	call	0x395a	; 0x395a <__umulhisi3>
    2030:	28 ee       	ldi	r18, 0xE8	; 232
    2032:	33 e0       	ldi	r19, 0x03	; 3
    2034:	40 e0       	ldi	r20, 0x00	; 0
    2036:	50 e0       	ldi	r21, 0x00	; 0
    2038:	0e 94 88 1c 	call	0x3910	; 0x3910 <__divmodsi4>
    203c:	89 01       	movw	r16, r18
    203e:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    2042:	80 92 81 00 	sts	0x0081, r8	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    2046:	b0 92 89 00 	sts	0x0089, r11	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    204a:	a0 92 88 00 	sts	0x0088, r10	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    204e:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    2052:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    2056:	4d 2d       	mov	r20, r13
    2058:	40 31       	cpi	r20, 0x10	; 16
    205a:	08 f0       	brcs	.+2      	; 0x205e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
    205c:	4f e0       	ldi	r20, 0x0F	; 15
    205e:	80 e1       	ldi	r24, 0x10	; 16
    2060:	90 e0       	ldi	r25, 0x00	; 0
    2062:	84 1b       	sub	r24, r20
    2064:	91 09       	sbc	r25, r1
    2066:	a9 01       	movw	r20, r18
    2068:	02 c0       	rjmp	.+4      	; 0x206e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
    206a:	56 95       	lsr	r21
    206c:	47 95       	ror	r20
    206e:	8a 95       	dec	r24
    2070:	e2 f7       	brpl	.-8      	; 0x206a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
    2072:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    2076:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    207a:	10 93 9c 01 	sts	0x019C, r17	; 0x80019c <_ZL13buzzerTimeout+0x1>
    207e:	00 93 9b 01 	sts	0x019B, r16	; 0x80019b <_ZL13buzzerTimeout>
    2082:	86 b3       	in	r24, 0x16	; 22
    2084:	8f ef       	ldi	r24, 0xFF	; 255
    2086:	86 bb       	out	0x16, r24	; 22
    2088:	81 e0       	ldi	r24, 0x01	; 1
    208a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    208e:	df 91       	pop	r29
    2090:	cf 91       	pop	r28
    2092:	1f 91       	pop	r17
    2094:	0f 91       	pop	r16
    2096:	ff 90       	pop	r15
    2098:	ef 90       	pop	r14
    209a:	df 90       	pop	r13
    209c:	bf 90       	pop	r11
    209e:	af 90       	pop	r10
    20a0:	9f 90       	pop	r9
    20a2:	8f 90       	pop	r8
    20a4:	08 95       	ret

000020a6 <_ZN15OrangutanBuzzer8playNoteEhjh>:
    20a6:	cf 93       	push	r28
    20a8:	df 93       	push	r29
    20aa:	eb 01       	movw	r28, r22
    20ac:	8f 3f       	cpi	r24, 0xFF	; 255
    20ae:	11 f0       	breq	.+4      	; 0x20b4 <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
    20b0:	41 11       	cpse	r20, r1
    20b2:	05 c0       	rjmp	.+10     	; 0x20be <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
    20b4:	40 e0       	ldi	r20, 0x00	; 0
    20b6:	be 01       	movw	r22, r28
    20b8:	88 ee       	ldi	r24, 0xE8	; 232
    20ba:	93 e0       	ldi	r25, 0x03	; 3
    20bc:	43 c0       	rjmp	.+134    	; 0x2144 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
    20be:	81 31       	cpi	r24, 0x11	; 17
    20c0:	30 f0       	brcs	.+12     	; 0x20ce <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
    20c2:	50 ef       	ldi	r21, 0xF0	; 240
    20c4:	58 0f       	add	r21, r24
    20c6:	50 36       	cpi	r21, 0x60	; 96
    20c8:	18 f0       	brcs	.+6      	; 0x20d0 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    20ca:	5f e5       	ldi	r21, 0x5F	; 95
    20cc:	01 c0       	rjmp	.+2      	; 0x20d0 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    20ce:	50 e0       	ldi	r21, 0x00	; 0
    20d0:	85 2f       	mov	r24, r21
    20d2:	6c e0       	ldi	r22, 0x0C	; 12
    20d4:	0e 94 32 1c 	call	0x3864	; 0x3864 <__udivmodqi4>
    20d8:	68 2f       	mov	r22, r24
    20da:	74 ef       	ldi	r23, 0xF4	; 244
    20dc:	76 03       	mulsu	r23, r22
    20de:	90 01       	movw	r18, r0
    20e0:	11 24       	eor	r1, r1
    20e2:	25 0f       	add	r18, r21
    20e4:	31 1d       	adc	r19, r1
    20e6:	2c 30       	cpi	r18, 0x0C	; 12
    20e8:	31 05       	cpc	r19, r1
    20ea:	40 f4       	brcc	.+16     	; 0x20fc <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
    20ec:	f9 01       	movw	r30, r18
    20ee:	ee 0f       	add	r30, r30
    20f0:	ff 1f       	adc	r31, r31
    20f2:	e8 5c       	subi	r30, 0xC8	; 200
    20f4:	fe 4f       	sbci	r31, 0xFE	; 254
    20f6:	20 81       	ld	r18, Z
    20f8:	31 81       	ldd	r19, Z+1	; 0x01
    20fa:	02 c0       	rjmp	.+4      	; 0x2100 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
    20fc:	20 e0       	ldi	r18, 0x00	; 0
    20fe:	30 e0       	ldi	r19, 0x00	; 0
    2100:	87 30       	cpi	r24, 0x07	; 7
    2102:	81 f0       	breq	.+32     	; 0x2124 <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
    2104:	08 2e       	mov	r0, r24
    2106:	02 c0       	rjmp	.+4      	; 0x210c <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
    2108:	22 0f       	add	r18, r18
    210a:	33 1f       	adc	r19, r19
    210c:	0a 94       	dec	r0
    210e:	e2 f7       	brpl	.-8      	; 0x2108 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
    2110:	82 30       	cpi	r24, 0x02	; 2
    2112:	28 f0       	brcs	.+10     	; 0x211e <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
    2114:	c9 01       	movw	r24, r18
    2116:	05 96       	adiw	r24, 0x05	; 5
    2118:	6a e0       	ldi	r22, 0x0A	; 10
    211a:	70 e0       	ldi	r23, 0x00	; 0
    211c:	0c c0       	rjmp	.+24     	; 0x2136 <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
    211e:	c9 01       	movw	r24, r18
    2120:	90 58       	subi	r25, 0x80	; 128
    2122:	0c c0       	rjmp	.+24     	; 0x213c <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
    2124:	c9 01       	movw	r24, r18
    2126:	36 e0       	ldi	r19, 0x06	; 6
    2128:	88 0f       	add	r24, r24
    212a:	99 1f       	adc	r25, r25
    212c:	3a 95       	dec	r19
    212e:	e1 f7       	brne	.-8      	; 0x2128 <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
    2130:	02 96       	adiw	r24, 0x02	; 2
    2132:	65 e0       	ldi	r22, 0x05	; 5
    2134:	70 e0       	ldi	r23, 0x00	; 0
    2136:	0e 94 3e 1c 	call	0x387c	; 0x387c <__udivmodhi4>
    213a:	cb 01       	movw	r24, r22
    213c:	40 31       	cpi	r20, 0x10	; 16
    213e:	08 f0       	brcs	.+2      	; 0x2142 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
    2140:	4f e0       	ldi	r20, 0x0F	; 15
    2142:	be 01       	movw	r22, r28
    2144:	0e 94 97 0f 	call	0x1f2e	; 0x1f2e <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    2148:	df 91       	pop	r29
    214a:	cf 91       	pop	r28
    214c:	08 95       	ret

0000214e <_ZL8nextNotev>:
    214e:	a2 e0       	ldi	r26, 0x02	; 2
    2150:	b0 e0       	ldi	r27, 0x00	; 0
    2152:	ed ea       	ldi	r30, 0xAD	; 173
    2154:	f0 e1       	ldi	r31, 0x10	; 16
    2156:	0c 94 d1 1c 	jmp	0x39a2	; 0x39a2 <__prologue_saves__+0x4>
    215a:	90 90 0a 01 	lds	r9, 0x010A	; 0x80010a <_ZL6octave>
    215e:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <_ZL8staccato>
    2162:	88 23       	and	r24, r24
    2164:	21 f0       	breq	.+8      	; 0x216e <_ZL8nextNotev+0x20>
    2166:	60 91 97 01 	lds	r22, 0x0197	; 0x800197 <_ZL22staccato_rest_duration>
    216a:	61 11       	cpse	r22, r1
    216c:	17 c0       	rjmp	.+46     	; 0x219c <_ZL8nextNotev+0x4e>
    216e:	77 24       	eor	r7, r7
    2170:	73 94       	inc	r7
    2172:	b0 ec       	ldi	r27, 0xC0	; 192
    2174:	ab 2e       	mov	r10, r27
    2176:	bd e5       	ldi	r27, 0x5D	; 93
    2178:	bb 2e       	mov	r11, r27
    217a:	1a e0       	ldi	r17, 0x0A	; 10
    217c:	61 2e       	mov	r6, r17
    217e:	04 e0       	ldi	r16, 0x04	; 4
    2180:	80 2e       	mov	r8, r16
    2182:	80 ed       	ldi	r24, 0xD0	; 208
    2184:	c8 2e       	mov	r12, r24
    2186:	87 e0       	ldi	r24, 0x07	; 7
    2188:	d8 2e       	mov	r13, r24
    218a:	94 e0       	ldi	r25, 0x04	; 4
    218c:	e9 2e       	mov	r14, r25
    218e:	f1 2c       	mov	r15, r1
    2190:	04 ef       	ldi	r16, 0xF4	; 244
    2192:	11 e0       	ldi	r17, 0x01	; 1
    2194:	2f e0       	ldi	r18, 0x0F	; 15
    2196:	42 2e       	mov	r4, r18
    2198:	51 2c       	mov	r5, r1
    219a:	15 c0       	rjmp	.+42     	; 0x21c6 <_ZL8nextNotev+0x78>
    219c:	70 e0       	ldi	r23, 0x00	; 0
    219e:	40 e0       	ldi	r20, 0x00	; 0
    21a0:	88 ee       	ldi	r24, 0xE8	; 232
    21a2:	93 e0       	ldi	r25, 0x03	; 3
    21a4:	0e 94 97 0f 	call	0x1f2e	; 0x1f2e <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    21a8:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_ZL22staccato_rest_duration>
    21ac:	17 c1       	rjmp	.+558    	; 0x23dc <_ZL8nextNotev+0x28e>
    21ae:	86 36       	cpi	r24, 0x66	; 102
    21b0:	d4 f5       	brge	.+116    	; 0x2226 <_ZL8nextNotev+0xd8>
    21b2:	81 36       	cpi	r24, 0x61	; 97
    21b4:	09 f4       	brne	.+2      	; 0x21b8 <_ZL8nextNotev+0x6a>
    21b6:	a9 c0       	rjmp	.+338    	; 0x230a <_ZL8nextNotev+0x1bc>
    21b8:	7c f5       	brge	.+94     	; 0x2218 <_ZL8nextNotev+0xca>
    21ba:	8c 33       	cpi	r24, 0x3C	; 60
    21bc:	09 f4       	brne	.+2      	; 0x21c0 <_ZL8nextNotev+0x72>
    21be:	60 c0       	rjmp	.+192    	; 0x2280 <_ZL8nextNotev+0x132>
    21c0:	8e 33       	cpi	r24, 0x3E	; 62
    21c2:	81 f4       	brne	.+32     	; 0x21e4 <_ZL8nextNotev+0x96>
    21c4:	93 94       	inc	r9
    21c6:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_ZL16currentCharacterv>
    21ca:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    21ce:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    21d2:	2f 5f       	subi	r18, 0xFF	; 255
    21d4:	3f 4f       	sbci	r19, 0xFF	; 255
    21d6:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    21da:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    21de:	85 36       	cpi	r24, 0x65	; 101
    21e0:	31 f7       	brne	.-52     	; 0x21ae <_ZL8nextNotev+0x60>
    21e2:	52 c0       	rjmp	.+164    	; 0x2288 <_ZL8nextNotev+0x13a>
    21e4:	81 32       	cpi	r24, 0x21	; 33
    21e6:	09 f0       	breq	.+2      	; 0x21ea <_ZL8nextNotev+0x9c>
    21e8:	8b c0       	rjmp	.+278    	; 0x2300 <_ZL8nextNotev+0x1b2>
    21ea:	80 92 0a 01 	sts	0x010A, r8	; 0x80010a <_ZL6octave>
    21ee:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <_ZL19whole_note_duration+0x1>
    21f2:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <_ZL19whole_note_duration>
    21f6:	f0 92 07 01 	sts	0x0107, r15	; 0x800107 <_ZL9note_type+0x1>
    21fa:	e0 92 06 01 	sts	0x0106, r14	; 0x800106 <_ZL9note_type>
    21fe:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <_ZL8duration+0x1>
    2202:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <_ZL8duration>
    2206:	50 92 03 01 	sts	0x0103, r5	; 0x800103 <_ZL6volume+0x1>
    220a:	40 92 02 01 	sts	0x0102, r4	; 0x800102 <_ZL6volume>
    220e:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <_ZL8staccato>
    2212:	a4 e0       	ldi	r26, 0x04	; 4
    2214:	9a 2e       	mov	r9, r26
    2216:	d7 cf       	rjmp	.-82     	; 0x21c6 <_ZL8nextNotev+0x78>
    2218:	83 36       	cpi	r24, 0x63	; 99
    221a:	a1 f1       	breq	.+104    	; 0x2284 <_ZL8nextNotev+0x136>
    221c:	0c f4       	brge	.+2      	; 0x2220 <_ZL8nextNotev+0xd2>
    221e:	78 c0       	rjmp	.+240    	; 0x2310 <_ZL8nextNotev+0x1c2>
    2220:	10 e0       	ldi	r17, 0x00	; 0
    2222:	82 e0       	ldi	r24, 0x02	; 2
    2224:	77 c0       	rjmp	.+238    	; 0x2314 <_ZL8nextNotev+0x1c6>
    2226:	8d 36       	cpi	r24, 0x6D	; 109
    2228:	c1 f1       	breq	.+112    	; 0x229a <_ZL8nextNotev+0x14c>
    222a:	94 f4       	brge	.+36     	; 0x2250 <_ZL8nextNotev+0x102>
    222c:	87 36       	cpi	r24, 0x67	; 103
    222e:	91 f1       	breq	.+100    	; 0x2294 <_ZL8nextNotev+0x146>
    2230:	74 f1       	brlt	.+92     	; 0x228e <_ZL8nextNotev+0x140>
    2232:	8c 36       	cpi	r24, 0x6C	; 108
    2234:	09 f0       	breq	.+2      	; 0x2238 <_ZL8nextNotev+0xea>
    2236:	64 c0       	rjmp	.+200    	; 0x2300 <_ZL8nextNotev+0x1b2>
    2238:	0e 94 58 0f 	call	0x1eb0	; 0x1eb0 <_ZL9getNumberv>
    223c:	bc 01       	movw	r22, r24
    223e:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_ZL9note_type+0x1>
    2242:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_ZL9note_type>
    2246:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    224a:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    224e:	51 c0       	rjmp	.+162    	; 0x22f2 <_ZL8nextNotev+0x1a4>
    2250:	82 37       	cpi	r24, 0x72	; 114
    2252:	c9 f1       	breq	.+114    	; 0x22c6 <_ZL8nextNotev+0x178>
    2254:	4c f4       	brge	.+18     	; 0x2268 <_ZL8nextNotev+0x11a>
    2256:	8f 36       	cpi	r24, 0x6F	; 111
    2258:	09 f0       	breq	.+2      	; 0x225c <_ZL8nextNotev+0x10e>
    225a:	52 c0       	rjmp	.+164    	; 0x2300 <_ZL8nextNotev+0x1b2>
    225c:	0e 94 58 0f 	call	0x1eb0	; 0x1eb0 <_ZL9getNumberv>
    2260:	98 2e       	mov	r9, r24
    2262:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_ZL6octave>
    2266:	af cf       	rjmp	.-162    	; 0x21c6 <_ZL8nextNotev+0x78>
    2268:	84 37       	cpi	r24, 0x74	; 116
    226a:	81 f1       	breq	.+96     	; 0x22cc <_ZL8nextNotev+0x17e>
    226c:	86 37       	cpi	r24, 0x76	; 118
    226e:	09 f0       	breq	.+2      	; 0x2272 <_ZL8nextNotev+0x124>
    2270:	47 c0       	rjmp	.+142    	; 0x2300 <_ZL8nextNotev+0x1b2>
    2272:	0e 94 58 0f 	call	0x1eb0	; 0x1eb0 <_ZL9getNumberv>
    2276:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_ZL6volume+0x1>
    227a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_ZL6volume>
    227e:	a3 cf       	rjmp	.-186    	; 0x21c6 <_ZL8nextNotev+0x78>
    2280:	9a 94       	dec	r9
    2282:	a1 cf       	rjmp	.-190    	; 0x21c6 <_ZL8nextNotev+0x78>
    2284:	10 e0       	ldi	r17, 0x00	; 0
    2286:	20 c0       	rjmp	.+64     	; 0x22c8 <_ZL8nextNotev+0x17a>
    2288:	10 e0       	ldi	r17, 0x00	; 0
    228a:	84 e0       	ldi	r24, 0x04	; 4
    228c:	43 c0       	rjmp	.+134    	; 0x2314 <_ZL8nextNotev+0x1c6>
    228e:	10 e0       	ldi	r17, 0x00	; 0
    2290:	85 e0       	ldi	r24, 0x05	; 5
    2292:	40 c0       	rjmp	.+128    	; 0x2314 <_ZL8nextNotev+0x1c6>
    2294:	10 e0       	ldi	r17, 0x00	; 0
    2296:	87 e0       	ldi	r24, 0x07	; 7
    2298:	3d c0       	rjmp	.+122    	; 0x2314 <_ZL8nextNotev+0x1c6>
    229a:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_ZL16currentCharacterv>
    229e:	8c 36       	cpi	r24, 0x6C	; 108
    22a0:	19 f4       	brne	.+6      	; 0x22a8 <_ZL8nextNotev+0x15a>
    22a2:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <_ZL8staccato>
    22a6:	04 c0       	rjmp	.+8      	; 0x22b0 <_ZL8nextNotev+0x162>
    22a8:	70 92 98 01 	sts	0x0198, r7	; 0x800198 <_ZL8staccato>
    22ac:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_ZL22staccato_rest_duration>
    22b0:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    22b4:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    22b8:	2f 5f       	subi	r18, 0xFF	; 255
    22ba:	3f 4f       	sbci	r19, 0xFF	; 255
    22bc:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    22c0:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    22c4:	80 cf       	rjmp	.-256    	; 0x21c6 <_ZL8nextNotev+0x78>
    22c6:	11 e0       	ldi	r17, 0x01	; 1
    22c8:	80 e0       	ldi	r24, 0x00	; 0
    22ca:	24 c0       	rjmp	.+72     	; 0x2314 <_ZL8nextNotev+0x1c6>
    22cc:	0e 94 58 0f 	call	0x1eb0	; 0x1eb0 <_ZL9getNumberv>
    22d0:	bc 01       	movw	r22, r24
    22d2:	c5 01       	movw	r24, r10
    22d4:	0e 94 3e 1c 	call	0x387c	; 0x387c <__udivmodhi4>
    22d8:	66 9e       	mul	r6, r22
    22da:	c0 01       	movw	r24, r0
    22dc:	67 9e       	mul	r6, r23
    22de:	90 0d       	add	r25, r0
    22e0:	11 24       	eor	r1, r1
    22e2:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_ZL19whole_note_duration+0x1>
    22e6:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_ZL19whole_note_duration>
    22ea:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <_ZL9note_type>
    22ee:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <_ZL9note_type+0x1>
    22f2:	0e 94 3e 1c 	call	0x387c	; 0x387c <__udivmodhi4>
    22f6:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_ZL8duration+0x1>
    22fa:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_ZL8duration>
    22fe:	63 cf       	rjmp	.-314    	; 0x21c6 <_ZL8nextNotev+0x78>
    2300:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <__data_end+0x1>
    2304:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <__data_end>
    2308:	69 c0       	rjmp	.+210    	; 0x23dc <_ZL8nextNotev+0x28e>
    230a:	10 e0       	ldi	r17, 0x00	; 0
    230c:	89 e0       	ldi	r24, 0x09	; 9
    230e:	02 c0       	rjmp	.+4      	; 0x2314 <_ZL8nextNotev+0x1c6>
    2310:	10 e0       	ldi	r17, 0x00	; 0
    2312:	8b e0       	ldi	r24, 0x0B	; 11
    2314:	08 2f       	mov	r16, r24
    2316:	9c e0       	ldi	r25, 0x0C	; 12
    2318:	99 9e       	mul	r9, r25
    231a:	00 0d       	add	r16, r0
    231c:	11 24       	eor	r1, r1
    231e:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_ZL16currentCharacterv>
    2322:	98 2f       	mov	r25, r24
    2324:	97 7f       	andi	r25, 0xF7	; 247
    2326:	93 32       	cpi	r25, 0x23	; 35
    2328:	61 f4       	brne	.+24     	; 0x2342 <_ZL8nextNotev+0x1f4>
    232a:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    232e:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    2332:	2f 5f       	subi	r18, 0xFF	; 255
    2334:	3f 4f       	sbci	r19, 0xFF	; 255
    2336:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    233a:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    233e:	0f 5f       	subi	r16, 0xFF	; 255
    2340:	ee cf       	rjmp	.-36     	; 0x231e <_ZL8nextNotev+0x1d0>
    2342:	8d 32       	cpi	r24, 0x2D	; 45
    2344:	71 f4       	brne	.+28     	; 0x2362 <_ZL8nextNotev+0x214>
    2346:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    234a:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    234e:	2f 5f       	subi	r18, 0xFF	; 255
    2350:	3f 4f       	sbci	r19, 0xFF	; 255
    2352:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    2356:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    235a:	01 50       	subi	r16, 0x01	; 1
    235c:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_ZL16currentCharacterv>
    2360:	f0 cf       	rjmp	.-32     	; 0x2342 <_ZL8nextNotev+0x1f4>
    2362:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <_ZL8duration>
    2366:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <_ZL8duration+0x1>
    236a:	81 53       	subi	r24, 0x31	; 49
    236c:	88 30       	cpi	r24, 0x08	; 8
    236e:	50 f4       	brcc	.+20     	; 0x2384 <_ZL8nextNotev+0x236>
    2370:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    2374:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    2378:	0e 94 58 0f 	call	0x1eb0	; 0x1eb0 <_ZL9getNumberv>
    237c:	bc 01       	movw	r22, r24
    237e:	c7 01       	movw	r24, r14
    2380:	0e 94 3e 1c 	call	0x387c	; 0x387c <__udivmodhi4>
    2384:	7b 01       	movw	r14, r22
    2386:	f6 94       	lsr	r15
    2388:	e7 94       	ror	r14
    238a:	69 83       	std	Y+1, r22	; 0x01
    238c:	7a 83       	std	Y+2, r23	; 0x02
    238e:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <_ZL16currentCharacterv>
    2392:	69 81       	ldd	r22, Y+1	; 0x01
    2394:	7a 81       	ldd	r23, Y+2	; 0x02
    2396:	8e 32       	cpi	r24, 0x2E	; 46
    2398:	69 f4       	brne	.+26     	; 0x23b4 <_ZL8nextNotev+0x266>
    239a:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    239e:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    23a2:	2f 5f       	subi	r18, 0xFF	; 255
    23a4:	3f 4f       	sbci	r19, 0xFF	; 255
    23a6:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    23aa:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    23ae:	6e 0d       	add	r22, r14
    23b0:	7f 1d       	adc	r23, r15
    23b2:	e9 cf       	rjmp	.-46     	; 0x2386 <_ZL8nextNotev+0x238>
    23b4:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <_ZL8staccato>
    23b8:	88 23       	and	r24, r24
    23ba:	39 f0       	breq	.+14     	; 0x23ca <_ZL8nextNotev+0x27c>
    23bc:	9b 01       	movw	r18, r22
    23be:	36 95       	lsr	r19
    23c0:	27 95       	ror	r18
    23c2:	20 93 97 01 	sts	0x0197, r18	; 0x800197 <_ZL22staccato_rest_duration>
    23c6:	62 1b       	sub	r22, r18
    23c8:	71 09       	sbc	r23, r1
    23ca:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <_ZL6volume>
    23ce:	11 23       	and	r17, r17
    23d0:	11 f0       	breq	.+4      	; 0x23d6 <_ZL8nextNotev+0x288>
    23d2:	8f ef       	ldi	r24, 0xFF	; 255
    23d4:	01 c0       	rjmp	.+2      	; 0x23d8 <_ZL8nextNotev+0x28a>
    23d6:	80 2f       	mov	r24, r16
    23d8:	0e 94 53 10 	call	0x20a6	; 0x20a6 <_ZN15OrangutanBuzzer8playNoteEhjh>
    23dc:	22 96       	adiw	r28, 0x02	; 2
    23de:	e0 e1       	ldi	r30, 0x10	; 16
    23e0:	0c 94 ed 1c 	jmp	0x39da	; 0x39da <__epilogue_restores__+0x4>

000023e4 <__vector_13>:
    23e4:	1f 92       	push	r1
    23e6:	0f 92       	push	r0
    23e8:	0f b6       	in	r0, 0x3f	; 63
    23ea:	0f 92       	push	r0
    23ec:	11 24       	eor	r1, r1
    23ee:	2f 93       	push	r18
    23f0:	3f 93       	push	r19
    23f2:	4f 93       	push	r20
    23f4:	5f 93       	push	r21
    23f6:	6f 93       	push	r22
    23f8:	7f 93       	push	r23
    23fa:	8f 93       	push	r24
    23fc:	9f 93       	push	r25
    23fe:	af 93       	push	r26
    2400:	bf 93       	push	r27
    2402:	ef 93       	push	r30
    2404:	ff 93       	push	r31
    2406:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <_ZL13buzzerTimeout>
    240a:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <_ZL13buzzerTimeout+0x1>
    240e:	9c 01       	movw	r18, r24
    2410:	21 50       	subi	r18, 0x01	; 1
    2412:	31 09       	sbc	r19, r1
    2414:	30 93 9c 01 	sts	0x019C, r19	; 0x80019c <_ZL13buzzerTimeout+0x1>
    2418:	20 93 9b 01 	sts	0x019B, r18	; 0x80019b <_ZL13buzzerTimeout>
    241c:	89 2b       	or	r24, r25
    241e:	11 f5       	brne	.+68     	; 0x2464 <__vector_13+0x80>
    2420:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    2424:	78 94       	sei
    2426:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    242a:	88 7f       	andi	r24, 0xF8	; 248
    242c:	81 60       	ori	r24, 0x01	; 1
    242e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    2432:	80 e1       	ldi	r24, 0x10	; 16
    2434:	97 e2       	ldi	r25, 0x27	; 39
    2436:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    243a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    243e:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    2442:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    2446:	81 e0       	ldi	r24, 0x01	; 1
    2448:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <buzzerFinished>
    244c:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <__data_end>
    2450:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <__data_end+0x1>
    2454:	89 2b       	or	r24, r25
    2456:	31 f0       	breq	.+12     	; 0x2464 <__vector_13+0x80>
    2458:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <_ZL17play_mode_setting>
    245c:	81 11       	cpse	r24, r1
    245e:	02 c0       	rjmp	.+4      	; 0x2464 <__vector_13+0x80>
    2460:	0e 94 a7 10 	call	0x214e	; 0x214e <_ZL8nextNotev>
    2464:	ff 91       	pop	r31
    2466:	ef 91       	pop	r30
    2468:	bf 91       	pop	r27
    246a:	af 91       	pop	r26
    246c:	9f 91       	pop	r25
    246e:	8f 91       	pop	r24
    2470:	7f 91       	pop	r23
    2472:	6f 91       	pop	r22
    2474:	5f 91       	pop	r21
    2476:	4f 91       	pop	r20
    2478:	3f 91       	pop	r19
    247a:	2f 91       	pop	r18
    247c:	0f 90       	pop	r0
    247e:	0f be       	out	0x3f, r0	; 63
    2480:	0f 90       	pop	r0
    2482:	1f 90       	pop	r1
    2484:	18 95       	reti

00002486 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    2486:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    248a:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <__data_end+0x1>
    248e:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <__data_end>
    2492:	81 e0       	ldi	r24, 0x01	; 1
    2494:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <_ZL17use_program_space>
    2498:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_ZL22staccato_rest_duration>
    249c:	0e 94 a7 10 	call	0x214e	; 0x214e <_ZL8nextNotev>
    24a0:	08 95       	ret

000024a2 <play_from_program_space>:
    24a2:	0e 94 43 12 	call	0x2486	; 0x2486 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    24a6:	08 95       	ret

000024a8 <delay_us.constprop.0>:
    24a8:	81 e0       	ldi	r24, 0x01	; 1
    24aa:	90 e0       	ldi	r25, 0x00	; 0
    24ac:	6f 93       	push	r22
    24ae:	64 e0       	ldi	r22, 0x04	; 4
    24b0:	6a 95       	dec	r22
    24b2:	f1 f7       	brne	.-4      	; 0x24b0 <delay_us.constprop.0+0x8>
    24b4:	6f 91       	pop	r22
    24b6:	01 97       	sbiw	r24, 0x01	; 1
    24b8:	c9 f7       	brne	.-14     	; 0x24ac <delay_us.constprop.0+0x4>
    24ba:	08 95       	ret

000024bc <_ZN12OrangutanLCD8busyWaitEv>:
    24bc:	0f 93       	push	r16
    24be:	1f 93       	push	r17
    24c0:	cf 93       	push	r28
    24c2:	df 93       	push	r29
    24c4:	1a b1       	in	r17, 0x0a	; 10
    24c6:	57 98       	cbi	0x0a, 7	; 10
    24c8:	5a 98       	cbi	0x0b, 2	; 11
    24ca:	28 9a       	sbi	0x05, 0	; 5
    24cc:	c0 e0       	ldi	r28, 0x00	; 0
    24ce:	d0 e0       	ldi	r29, 0x00	; 0
    24d0:	0e 94 54 12 	call	0x24a8	; 0x24a8 <delay_us.constprop.0>
    24d4:	5c 9a       	sbi	0x0b, 4	; 11
    24d6:	0e 94 54 12 	call	0x24a8	; 0x24a8 <delay_us.constprop.0>
    24da:	09 b1       	in	r16, 0x09	; 9
    24dc:	5c 98       	cbi	0x0b, 4	; 11
    24de:	0e 94 54 12 	call	0x24a8	; 0x24a8 <delay_us.constprop.0>
    24e2:	5c 9a       	sbi	0x0b, 4	; 11
    24e4:	0e 94 54 12 	call	0x24a8	; 0x24a8 <delay_us.constprop.0>
    24e8:	5c 98       	cbi	0x0b, 4	; 11
    24ea:	24 96       	adiw	r28, 0x04	; 4
    24ec:	07 ff       	sbrs	r16, 7
    24ee:	10 c0       	rjmp	.+32     	; 0x2510 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    24f0:	ae 01       	movw	r20, r28
    24f2:	60 e0       	ldi	r22, 0x00	; 0
    24f4:	70 e0       	ldi	r23, 0x00	; 0
    24f6:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <lcdTimeout>
    24fa:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <lcdTimeout+0x1>
    24fe:	a0 91 9f 01 	lds	r26, 0x019F	; 0x80019f <lcdTimeout+0x2>
    2502:	b0 91 a0 01 	lds	r27, 0x01A0	; 0x8001a0 <lcdTimeout+0x3>
    2506:	48 17       	cp	r20, r24
    2508:	59 07       	cpc	r21, r25
    250a:	6a 07       	cpc	r22, r26
    250c:	7b 07       	cpc	r23, r27
    250e:	00 f3       	brcs	.-64     	; 0x24d0 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    2510:	1a b9       	out	0x0a, r17	; 10
    2512:	df 91       	pop	r29
    2514:	cf 91       	pop	r28
    2516:	1f 91       	pop	r17
    2518:	0f 91       	pop	r16
    251a:	08 95       	ret

0000251c <_ZN12OrangutanLCD8sendDataEh>:
    251c:	95 b1       	in	r25, 0x05	; 5
    251e:	28 2f       	mov	r18, r24
    2520:	21 70       	andi	r18, 0x01	; 1
    2522:	30 e0       	ldi	r19, 0x00	; 0
    2524:	22 0f       	add	r18, r18
    2526:	33 1f       	adc	r19, r19
    2528:	48 2f       	mov	r20, r24
    252a:	46 70       	andi	r20, 0x06	; 6
    252c:	68 e0       	ldi	r22, 0x08	; 8
    252e:	46 9f       	mul	r20, r22
    2530:	a0 01       	movw	r20, r0
    2532:	11 24       	eor	r1, r1
    2534:	24 2b       	or	r18, r20
    2536:	9d 7c       	andi	r25, 0xCD	; 205
    2538:	29 2b       	or	r18, r25
    253a:	25 b9       	out	0x05, r18	; 5
    253c:	9b b1       	in	r25, 0x0b	; 11
    253e:	88 70       	andi	r24, 0x08	; 8
    2540:	82 95       	swap	r24
    2542:	80 7f       	andi	r24, 0xF0	; 240
    2544:	9f 77       	andi	r25, 0x7F	; 127
    2546:	89 2b       	or	r24, r25
    2548:	8b b9       	out	0x0b, r24	; 11
    254a:	5c 9a       	sbi	0x0b, 4	; 11
    254c:	0e 94 54 12 	call	0x24a8	; 0x24a8 <delay_us.constprop.0>
    2550:	5c 98       	cbi	0x0b, 4	; 11
    2552:	0e 94 54 12 	call	0x24a8	; 0x24a8 <delay_us.constprop.0>
    2556:	08 95       	ret

00002558 <_ZN12OrangutanLCD4sendEhhh>:
    2558:	a0 e0       	ldi	r26, 0x00	; 0
    255a:	b0 e0       	ldi	r27, 0x00	; 0
    255c:	e2 eb       	ldi	r30, 0xB2	; 178
    255e:	f2 e1       	ldi	r31, 0x12	; 18
    2560:	0c 94 da 1c 	jmp	0x39b4	; 0x39b4 <__prologue_saves__+0x16>
    2564:	c8 2f       	mov	r28, r24
    2566:	d6 2e       	mov	r13, r22
    2568:	e4 2e       	mov	r14, r20
    256a:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <_ZZN12OrangutanLCD4initEvE11initialized>
    256e:	81 11       	cpse	r24, r1
    2570:	05 c0       	rjmp	.+10     	; 0x257c <_ZN12OrangutanLCD4sendEhhh+0x24>
    2572:	81 e0       	ldi	r24, 0x01	; 1
    2574:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <_ZZN12OrangutanLCD4initEvE11initialized>
    2578:	0e 94 f5 12 	call	0x25ea	; 0x25ea <_ZN12OrangutanLCD5init2Ev>
    257c:	0e 94 5e 12 	call	0x24bc	; 0x24bc <_ZN12OrangutanLCD8busyWaitEv>
    2580:	14 b1       	in	r17, 0x04	; 4
    2582:	d5 b1       	in	r29, 0x05	; 5
    2584:	fa b0       	in	r15, 0x0a	; 10
    2586:	0b b1       	in	r16, 0x0b	; 11
    2588:	28 98       	cbi	0x05, 0	; 5
    258a:	dd 20       	and	r13, r13
    258c:	11 f0       	breq	.+4      	; 0x2592 <_ZN12OrangutanLCD4sendEhhh+0x3a>
    258e:	5a 9a       	sbi	0x0b, 2	; 11
    2590:	01 c0       	rjmp	.+2      	; 0x2594 <_ZN12OrangutanLCD4sendEhhh+0x3c>
    2592:	5a 98       	cbi	0x0b, 2	; 11
    2594:	94 b1       	in	r25, 0x04	; 4
    2596:	92 63       	ori	r25, 0x32	; 50
    2598:	94 b9       	out	0x04, r25	; 4
    259a:	57 9a       	sbi	0x0a, 7	; 10
    259c:	81 e0       	ldi	r24, 0x01	; 1
    259e:	e8 16       	cp	r14, r24
    25a0:	29 f0       	breq	.+10     	; 0x25ac <_ZN12OrangutanLCD4sendEhhh+0x54>
    25a2:	8c 2f       	mov	r24, r28
    25a4:	82 95       	swap	r24
    25a6:	8f 70       	andi	r24, 0x0F	; 15
    25a8:	0e 94 8e 12 	call	0x251c	; 0x251c <_ZN12OrangutanLCD8sendDataEh>
    25ac:	8c 2f       	mov	r24, r28
    25ae:	8f 70       	andi	r24, 0x0F	; 15
    25b0:	0e 94 8e 12 	call	0x251c	; 0x251c <_ZN12OrangutanLCD8sendDataEh>
    25b4:	fa b8       	out	0x0a, r15	; 10
    25b6:	0b b9       	out	0x0b, r16	; 11
    25b8:	14 b9       	out	0x04, r17	; 4
    25ba:	d5 b9       	out	0x05, r29	; 5
    25bc:	cd b7       	in	r28, 0x3d	; 61
    25be:	de b7       	in	r29, 0x3e	; 62
    25c0:	e7 e0       	ldi	r30, 0x07	; 7
    25c2:	0c 94 f6 1c 	jmp	0x39ec	; 0x39ec <__epilogue_restores__+0x16>

000025c6 <_ZN12OrangutanLCD8send_cmdEh>:
    25c6:	42 e0       	ldi	r20, 0x02	; 2
    25c8:	60 e0       	ldi	r22, 0x00	; 0
    25ca:	0e 94 ac 12 	call	0x2558	; 0x2558 <_ZN12OrangutanLCD4sendEhhh>
    25ce:	08 95       	ret

000025d0 <_ZN12OrangutanLCD9send_dataEh>:
    25d0:	42 e0       	ldi	r20, 0x02	; 2
    25d2:	61 e0       	ldi	r22, 0x01	; 1
    25d4:	0e 94 ac 12 	call	0x2558	; 0x2558 <_ZN12OrangutanLCD4sendEhhh>
    25d8:	08 95       	ret

000025da <print_character>:
    25da:	0e 94 e8 12 	call	0x25d0	; 0x25d0 <_ZN12OrangutanLCD9send_dataEh>
    25de:	08 95       	ret

000025e0 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    25e0:	41 e0       	ldi	r20, 0x01	; 1
    25e2:	60 e0       	ldi	r22, 0x00	; 0
    25e4:	0e 94 ac 12 	call	0x2558	; 0x2558 <_ZN12OrangutanLCD4sendEhhh>
    25e8:	08 95       	ret

000025ea <_ZN12OrangutanLCD5init2Ev>:
    25ea:	80 e1       	ldi	r24, 0x10	; 16
    25ec:	97 e2       	ldi	r25, 0x27	; 39
    25ee:	a0 e0       	ldi	r26, 0x00	; 0
    25f0:	b0 e0       	ldi	r27, 0x00	; 0
    25f2:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <lcdTimeout>
    25f6:	90 93 9e 01 	sts	0x019E, r25	; 0x80019e <lcdTimeout+0x1>
    25fa:	a0 93 9f 01 	sts	0x019F, r26	; 0x80019f <lcdTimeout+0x2>
    25fe:	b0 93 a0 01 	sts	0x01A0, r27	; 0x8001a0 <lcdTimeout+0x3>
    2602:	52 9a       	sbi	0x0a, 2	; 10
    2604:	20 9a       	sbi	0x04, 0	; 4
    2606:	54 9a       	sbi	0x0a, 4	; 10
    2608:	8e e1       	ldi	r24, 0x1E	; 30
    260a:	90 e0       	ldi	r25, 0x00	; 0
    260c:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <delay_ms>
    2610:	83 e0       	ldi	r24, 0x03	; 3
    2612:	0e 94 f0 12 	call	0x25e0	; 0x25e0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    2616:	86 e0       	ldi	r24, 0x06	; 6
    2618:	90 e0       	ldi	r25, 0x00	; 0
    261a:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <delay_ms>
    261e:	83 e0       	ldi	r24, 0x03	; 3
    2620:	0e 94 f0 12 	call	0x25e0	; 0x25e0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    2624:	82 e0       	ldi	r24, 0x02	; 2
    2626:	90 e0       	ldi	r25, 0x00	; 0
    2628:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <delay_ms>
    262c:	83 e0       	ldi	r24, 0x03	; 3
    262e:	0e 94 f0 12 	call	0x25e0	; 0x25e0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    2632:	82 e0       	ldi	r24, 0x02	; 2
    2634:	90 e0       	ldi	r25, 0x00	; 0
    2636:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <delay_ms>
    263a:	82 e0       	ldi	r24, 0x02	; 2
    263c:	0e 94 f0 12 	call	0x25e0	; 0x25e0 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    2640:	82 e0       	ldi	r24, 0x02	; 2
    2642:	90 e0       	ldi	r25, 0x00	; 0
    2644:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <delay_ms>
    2648:	88 e2       	ldi	r24, 0x28	; 40
    264a:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <_ZN12OrangutanLCD8send_cmdEh>
    264e:	88 e0       	ldi	r24, 0x08	; 8
    2650:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <_ZN12OrangutanLCD8send_cmdEh>
    2654:	81 e0       	ldi	r24, 0x01	; 1
    2656:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <_ZN12OrangutanLCD8send_cmdEh>
    265a:	86 e0       	ldi	r24, 0x06	; 6
    265c:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <_ZN12OrangutanLCD8send_cmdEh>
    2660:	8c e0       	ldi	r24, 0x0C	; 12
    2662:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <_ZN12OrangutanLCD8send_cmdEh>
    2666:	08 95       	ret

00002668 <_ZN12OrangutanLCD5clearEv>:
    2668:	81 e0       	ldi	r24, 0x01	; 1
    266a:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <_ZN12OrangutanLCD8send_cmdEh>
    266e:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <printf_chars>
    2672:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <printf_chars+0x1>
    2676:	89 2b       	or	r24, r25
    2678:	f9 f0       	breq	.+62     	; 0x26b8 <_ZN12OrangutanLCD5clearEv+0x50>
    267a:	60 e0       	ldi	r22, 0x00	; 0
    267c:	a0 e2       	ldi	r26, 0x20	; 32
    267e:	26 2f       	mov	r18, r22
    2680:	30 e0       	ldi	r19, 0x00	; 0
    2682:	70 91 0c 01 	lds	r23, 0x010C	; 0x80010c <numLCDCols>
    2686:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <numLCDRows>
    268a:	90 e0       	ldi	r25, 0x00	; 0
    268c:	01 97       	sbiw	r24, 0x01	; 1
    268e:	78 9f       	mul	r23, r24
    2690:	a0 01       	movw	r20, r0
    2692:	79 9f       	mul	r23, r25
    2694:	50 0d       	add	r21, r0
    2696:	11 24       	eor	r1, r1
    2698:	24 17       	cp	r18, r20
    269a:	35 07       	cpc	r19, r21
    269c:	4c f4       	brge	.+18     	; 0x26b0 <_ZN12OrangutanLCD5clearEv+0x48>
    269e:	e0 91 a3 01 	lds	r30, 0x01A3	; 0x8001a3 <printf_chars>
    26a2:	f0 91 a4 01 	lds	r31, 0x01A4	; 0x8001a4 <printf_chars+0x1>
    26a6:	e2 0f       	add	r30, r18
    26a8:	f3 1f       	adc	r31, r19
    26aa:	a0 83       	st	Z, r26
    26ac:	6f 5f       	subi	r22, 0xFF	; 255
    26ae:	e7 cf       	rjmp	.-50     	; 0x267e <_ZN12OrangutanLCD5clearEv+0x16>
    26b0:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <col>
    26b4:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <row>
    26b8:	08 95       	ret

000026ba <clear>:
    26ba:	0e 94 34 13 	call	0x2668	; 0x2668 <_ZN12OrangutanLCD5clearEv>
    26be:	08 95       	ret

000026c0 <_ZN12OrangutanLCD5printEPKc>:
    26c0:	cf 93       	push	r28
    26c2:	df 93       	push	r29
    26c4:	ec 01       	movw	r28, r24
    26c6:	89 91       	ld	r24, Y+
    26c8:	88 23       	and	r24, r24
    26ca:	19 f0       	breq	.+6      	; 0x26d2 <_ZN12OrangutanLCD5printEPKc+0x12>
    26cc:	0e 94 e8 12 	call	0x25d0	; 0x25d0 <_ZN12OrangutanLCD9send_dataEh>
    26d0:	fa cf       	rjmp	.-12     	; 0x26c6 <_ZN12OrangutanLCD5printEPKc+0x6>
    26d2:	df 91       	pop	r29
    26d4:	cf 91       	pop	r28
    26d6:	08 95       	ret

000026d8 <print>:
    26d8:	0e 94 60 13 	call	0x26c0	; 0x26c0 <_ZN12OrangutanLCD5printEPKc>
    26dc:	08 95       	ret

000026de <_ZN12OrangutanLCD5printEm>:
    26de:	aa e0       	ldi	r26, 0x0A	; 10
    26e0:	b0 e0       	ldi	r27, 0x00	; 0
    26e2:	e5 e7       	ldi	r30, 0x75	; 117
    26e4:	f3 e1       	ldi	r31, 0x13	; 19
    26e6:	0c 94 d9 1c 	jmp	0x39b2	; 0x39b2 <__prologue_saves__+0x14>
    26ea:	1a e0       	ldi	r17, 0x0A	; 10
    26ec:	5a e0       	ldi	r21, 0x0A	; 10
    26ee:	c5 2e       	mov	r12, r21
    26f0:	d1 2c       	mov	r13, r1
    26f2:	e1 2c       	mov	r14, r1
    26f4:	f1 2c       	mov	r15, r1
    26f6:	06 2f       	mov	r16, r22
    26f8:	a7 01       	movw	r20, r14
    26fa:	96 01       	movw	r18, r12
    26fc:	0e 94 66 1c 	call	0x38cc	; 0x38cc <__udivmodsi4>
    2700:	ca 01       	movw	r24, r20
    2702:	b9 01       	movw	r22, r18
    2704:	11 50       	subi	r17, 0x01	; 1
    2706:	e1 e0       	ldi	r30, 0x01	; 1
    2708:	f0 e0       	ldi	r31, 0x00	; 0
    270a:	ec 0f       	add	r30, r28
    270c:	fd 1f       	adc	r31, r29
    270e:	e1 0f       	add	r30, r17
    2710:	f1 1d       	adc	r31, r1
    2712:	00 5d       	subi	r16, 0xD0	; 208
    2714:	2a e0       	ldi	r18, 0x0A	; 10
    2716:	62 9f       	mul	r22, r18
    2718:	00 19       	sub	r16, r0
    271a:	11 24       	eor	r1, r1
    271c:	00 83       	st	Z, r16
    271e:	61 15       	cp	r22, r1
    2720:	71 05       	cpc	r23, r1
    2722:	81 05       	cpc	r24, r1
    2724:	91 05       	cpc	r25, r1
    2726:	39 f7       	brne	.-50     	; 0x26f6 <_ZN12OrangutanLCD5printEm+0x18>
    2728:	1a 30       	cpi	r17, 0x0A	; 10
    272a:	58 f4       	brcc	.+22     	; 0x2742 <_ZN12OrangutanLCD5printEm+0x64>
    272c:	e1 e0       	ldi	r30, 0x01	; 1
    272e:	f0 e0       	ldi	r31, 0x00	; 0
    2730:	ec 0f       	add	r30, r28
    2732:	fd 1f       	adc	r31, r29
    2734:	e1 0f       	add	r30, r17
    2736:	f1 1d       	adc	r31, r1
    2738:	80 81       	ld	r24, Z
    273a:	0e 94 e8 12 	call	0x25d0	; 0x25d0 <_ZN12OrangutanLCD9send_dataEh>
    273e:	1f 5f       	subi	r17, 0xFF	; 255
    2740:	f3 cf       	rjmp	.-26     	; 0x2728 <_ZN12OrangutanLCD5printEm+0x4a>
    2742:	2a 96       	adiw	r28, 0x0a	; 10
    2744:	e8 e0       	ldi	r30, 0x08	; 8
    2746:	0c 94 f5 1c 	jmp	0x39ea	; 0x39ea <__epilogue_restores__+0x14>

0000274a <_ZN12OrangutanLCD5printEl>:
    274a:	cf 92       	push	r12
    274c:	df 92       	push	r13
    274e:	ef 92       	push	r14
    2750:	ff 92       	push	r15
    2752:	6b 01       	movw	r12, r22
    2754:	7c 01       	movw	r14, r24
    2756:	97 ff       	sbrs	r25, 7
    2758:	0b c0       	rjmp	.+22     	; 0x2770 <_ZN12OrangutanLCD5printEl+0x26>
    275a:	f0 94       	com	r15
    275c:	e0 94       	com	r14
    275e:	d0 94       	com	r13
    2760:	c0 94       	com	r12
    2762:	c1 1c       	adc	r12, r1
    2764:	d1 1c       	adc	r13, r1
    2766:	e1 1c       	adc	r14, r1
    2768:	f1 1c       	adc	r15, r1
    276a:	8d e2       	ldi	r24, 0x2D	; 45
    276c:	0e 94 e8 12 	call	0x25d0	; 0x25d0 <_ZN12OrangutanLCD9send_dataEh>
    2770:	c7 01       	movw	r24, r14
    2772:	b6 01       	movw	r22, r12
    2774:	0e 94 6f 13 	call	0x26de	; 0x26de <_ZN12OrangutanLCD5printEm>
    2778:	ff 90       	pop	r15
    277a:	ef 90       	pop	r14
    277c:	df 90       	pop	r13
    277e:	cf 90       	pop	r12
    2780:	08 95       	ret

00002782 <print_long>:
    2782:	0e 94 a5 13 	call	0x274a	; 0x274a <_ZN12OrangutanLCD5printEl>
    2786:	08 95       	ret

00002788 <_ZN12OrangutanLCD6gotoXYEhh>:
    2788:	a5 e0       	ldi	r26, 0x05	; 5
    278a:	b0 e0       	ldi	r27, 0x00	; 0
    278c:	ea ec       	ldi	r30, 0xCA	; 202
    278e:	f3 e1       	ldi	r31, 0x13	; 19
    2790:	0c 94 de 1c 	jmp	0x39bc	; 0x39bc <__prologue_saves__+0x1e>
    2794:	18 2f       	mov	r17, r24
    2796:	80 e8       	ldi	r24, 0x80	; 128
    2798:	89 83       	std	Y+1, r24	; 0x01
    279a:	80 ec       	ldi	r24, 0xC0	; 192
    279c:	8a 83       	std	Y+2, r24	; 0x02
    279e:	84 e9       	ldi	r24, 0x94	; 148
    27a0:	8b 83       	std	Y+3, r24	; 0x03
    27a2:	84 ed       	ldi	r24, 0xD4	; 212
    27a4:	8c 83       	std	Y+4, r24	; 0x04
    27a6:	fe 01       	movw	r30, r28
    27a8:	e6 0f       	add	r30, r22
    27aa:	f1 1d       	adc	r31, r1
    27ac:	81 81       	ldd	r24, Z+1	; 0x01
    27ae:	81 0f       	add	r24, r17
    27b0:	6d 83       	std	Y+5, r22	; 0x05
    27b2:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <_ZN12OrangutanLCD8send_cmdEh>
    27b6:	10 93 a1 01 	sts	0x01A1, r17	; 0x8001a1 <col>
    27ba:	6d 81       	ldd	r22, Y+5	; 0x05
    27bc:	60 93 a2 01 	sts	0x01A2, r22	; 0x8001a2 <row>
    27c0:	25 96       	adiw	r28, 0x05	; 5
    27c2:	e3 e0       	ldi	r30, 0x03	; 3
    27c4:	0c 94 fa 1c 	jmp	0x39f4	; 0x39f4 <__epilogue_restores__+0x1e>

000027c8 <lcd_goto_xy>:
    27c8:	0e 94 c4 13 	call	0x2788	; 0x2788 <_ZN12OrangutanLCD6gotoXYEhh>
    27cc:	08 95       	ret

000027ce <_ZN16OrangutanDigital9setOutputEhh>:
    27ce:	88 30       	cpi	r24, 0x08	; 8
    27d0:	58 f4       	brcc	.+22     	; 0x27e8 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    27d2:	91 e0       	ldi	r25, 0x01	; 1
    27d4:	01 c0       	rjmp	.+2      	; 0x27d8 <_ZN16OrangutanDigital9setOutputEhh+0xa>
    27d6:	99 0f       	add	r25, r25
    27d8:	8a 95       	dec	r24
    27da:	ea f7       	brpl	.-6      	; 0x27d6 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    27dc:	89 2f       	mov	r24, r25
    27de:	aa e2       	ldi	r26, 0x2A	; 42
    27e0:	b0 e0       	ldi	r27, 0x00	; 0
    27e2:	eb e2       	ldi	r30, 0x2B	; 43
    27e4:	f0 e0       	ldi	r31, 0x00	; 0
    27e6:	21 c0       	rjmp	.+66     	; 0x282a <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    27e8:	8e 30       	cpi	r24, 0x0E	; 14
    27ea:	60 f4       	brcc	.+24     	; 0x2804 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    27ec:	98 ef       	ldi	r25, 0xF8	; 248
    27ee:	98 0f       	add	r25, r24
    27f0:	81 e0       	ldi	r24, 0x01	; 1
    27f2:	01 c0       	rjmp	.+2      	; 0x27f6 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    27f4:	88 0f       	add	r24, r24
    27f6:	9a 95       	dec	r25
    27f8:	ea f7       	brpl	.-6      	; 0x27f4 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    27fa:	a4 e2       	ldi	r26, 0x24	; 36
    27fc:	b0 e0       	ldi	r27, 0x00	; 0
    27fe:	e5 e2       	ldi	r30, 0x25	; 37
    2800:	f0 e0       	ldi	r31, 0x00	; 0
    2802:	13 c0       	rjmp	.+38     	; 0x282a <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    2804:	85 31       	cpi	r24, 0x15	; 21
    2806:	60 f4       	brcc	.+24     	; 0x2820 <_ZN16OrangutanDigital9setOutputEhh+0x52>
    2808:	92 ef       	ldi	r25, 0xF2	; 242
    280a:	98 0f       	add	r25, r24
    280c:	81 e0       	ldi	r24, 0x01	; 1
    280e:	01 c0       	rjmp	.+2      	; 0x2812 <_ZN16OrangutanDigital9setOutputEhh+0x44>
    2810:	88 0f       	add	r24, r24
    2812:	9a 95       	dec	r25
    2814:	ea f7       	brpl	.-6      	; 0x2810 <_ZN16OrangutanDigital9setOutputEhh+0x42>
    2816:	a7 e2       	ldi	r26, 0x27	; 39
    2818:	b0 e0       	ldi	r27, 0x00	; 0
    281a:	e8 e2       	ldi	r30, 0x28	; 40
    281c:	f0 e0       	ldi	r31, 0x00	; 0
    281e:	05 c0       	rjmp	.+10     	; 0x282a <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    2820:	80 e0       	ldi	r24, 0x00	; 0
    2822:	a0 e0       	ldi	r26, 0x00	; 0
    2824:	b0 e0       	ldi	r27, 0x00	; 0
    2826:	e0 e0       	ldi	r30, 0x00	; 0
    2828:	f0 e0       	ldi	r31, 0x00	; 0
    282a:	6f 3f       	cpi	r22, 0xFF	; 255
    282c:	19 f4       	brne	.+6      	; 0x2834 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    282e:	90 81       	ld	r25, Z
    2830:	98 27       	eor	r25, r24
    2832:	09 c0       	rjmp	.+18     	; 0x2846 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    2834:	66 23       	and	r22, r22
    2836:	19 f0       	breq	.+6      	; 0x283e <_ZN16OrangutanDigital9setOutputEhh+0x70>
    2838:	90 81       	ld	r25, Z
    283a:	98 2b       	or	r25, r24
    283c:	04 c0       	rjmp	.+8      	; 0x2846 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    283e:	20 81       	ld	r18, Z
    2840:	98 2f       	mov	r25, r24
    2842:	90 95       	com	r25
    2844:	92 23       	and	r25, r18
    2846:	90 83       	st	Z, r25
    2848:	9c 91       	ld	r25, X
    284a:	98 2b       	or	r25, r24
    284c:	9c 93       	st	X, r25
    284e:	08 95       	ret

00002850 <_ZN15OrangutanMotors5init2Ev>:
    2850:	83 ef       	ldi	r24, 0xF3	; 243
    2852:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2856:	84 bd       	out	0x24, r24	; 36
    2858:	82 e0       	ldi	r24, 0x02	; 2
    285a:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    285e:	85 bd       	out	0x25, r24	; 37
    2860:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    2864:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    2868:	18 bc       	out	0x28, r1	; 40
    286a:	17 bc       	out	0x27, r1	; 39
    286c:	60 e0       	ldi	r22, 0x00	; 0
    286e:	86 e0       	ldi	r24, 0x06	; 6
    2870:	0e 94 e7 13 	call	0x27ce	; 0x27ce <_ZN16OrangutanDigital9setOutputEhh>
    2874:	60 e0       	ldi	r22, 0x00	; 0
    2876:	85 e0       	ldi	r24, 0x05	; 5
    2878:	0e 94 e7 13 	call	0x27ce	; 0x27ce <_ZN16OrangutanDigital9setOutputEhh>
    287c:	60 e0       	ldi	r22, 0x00	; 0
    287e:	8b e0       	ldi	r24, 0x0B	; 11
    2880:	0e 94 e7 13 	call	0x27ce	; 0x27ce <_ZN16OrangutanDigital9setOutputEhh>
    2884:	60 e0       	ldi	r22, 0x00	; 0
    2886:	83 e0       	ldi	r24, 0x03	; 3
    2888:	0e 94 e7 13 	call	0x27ce	; 0x27ce <_ZN16OrangutanDigital9setOutputEhh>
    288c:	08 95       	ret

0000288e <_ZN15OrangutanMotors4initEv>:
    288e:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <_ZZN15OrangutanMotors4initEvE11initialized>
    2892:	81 11       	cpse	r24, r1
    2894:	05 c0       	rjmp	.+10     	; 0x28a0 <_ZN15OrangutanMotors4initEv+0x12>
    2896:	81 e0       	ldi	r24, 0x01	; 1
    2898:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <_ZZN15OrangutanMotors4initEvE11initialized>
    289c:	0e 94 28 14 	call	0x2850	; 0x2850 <_ZN15OrangutanMotors5init2Ev>
    28a0:	08 95       	ret

000028a2 <_ZN15OrangutanMotors10setM1SpeedEi>:
    28a2:	cf 93       	push	r28
    28a4:	df 93       	push	r29
    28a6:	ec 01       	movw	r28, r24
    28a8:	0e 94 47 14 	call	0x288e	; 0x288e <_ZN15OrangutanMotors4initEv>
    28ac:	d7 ff       	sbrs	r29, 7
    28ae:	05 c0       	rjmp	.+10     	; 0x28ba <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    28b0:	d1 95       	neg	r29
    28b2:	c1 95       	neg	r28
    28b4:	d1 09       	sbc	r29, r1
    28b6:	81 e0       	ldi	r24, 0x01	; 1
    28b8:	01 c0       	rjmp	.+2      	; 0x28bc <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    28ba:	80 e0       	ldi	r24, 0x00	; 0
    28bc:	cf 3f       	cpi	r28, 0xFF	; 255
    28be:	d1 05       	cpc	r29, r1
    28c0:	19 f0       	breq	.+6      	; 0x28c8 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    28c2:	14 f0       	brlt	.+4      	; 0x28c8 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    28c4:	cf ef       	ldi	r28, 0xFF	; 255
    28c6:	d0 e0       	ldi	r29, 0x00	; 0
    28c8:	88 23       	and	r24, r24
    28ca:	19 f0       	breq	.+6      	; 0x28d2 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    28cc:	18 bc       	out	0x28, r1	; 40
    28ce:	c7 bd       	out	0x27, r28	; 39
    28d0:	02 c0       	rjmp	.+4      	; 0x28d6 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    28d2:	c8 bd       	out	0x28, r28	; 40
    28d4:	17 bc       	out	0x27, r1	; 39
    28d6:	df 91       	pop	r29
    28d8:	cf 91       	pop	r28
    28da:	08 95       	ret

000028dc <_ZN15OrangutanMotors10setM2SpeedEi>:
    28dc:	cf 93       	push	r28
    28de:	df 93       	push	r29
    28e0:	ec 01       	movw	r28, r24
    28e2:	0e 94 47 14 	call	0x288e	; 0x288e <_ZN15OrangutanMotors4initEv>
    28e6:	d7 ff       	sbrs	r29, 7
    28e8:	05 c0       	rjmp	.+10     	; 0x28f4 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    28ea:	d1 95       	neg	r29
    28ec:	c1 95       	neg	r28
    28ee:	d1 09       	sbc	r29, r1
    28f0:	81 e0       	ldi	r24, 0x01	; 1
    28f2:	01 c0       	rjmp	.+2      	; 0x28f6 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    28f4:	80 e0       	ldi	r24, 0x00	; 0
    28f6:	cf 3f       	cpi	r28, 0xFF	; 255
    28f8:	d1 05       	cpc	r29, r1
    28fa:	19 f0       	breq	.+6      	; 0x2902 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    28fc:	14 f0       	brlt	.+4      	; 0x2902 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    28fe:	cf ef       	ldi	r28, 0xFF	; 255
    2900:	d0 e0       	ldi	r29, 0x00	; 0
    2902:	88 23       	and	r24, r24
    2904:	29 f0       	breq	.+10     	; 0x2910 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    2906:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    290a:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    290e:	04 c0       	rjmp	.+8      	; 0x2918 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    2910:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    2914:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    2918:	df 91       	pop	r29
    291a:	cf 91       	pop	r28
    291c:	08 95       	ret

0000291e <_ZN15OrangutanMotors9setSpeedsEii>:
    291e:	cf 93       	push	r28
    2920:	df 93       	push	r29
    2922:	eb 01       	movw	r28, r22
    2924:	0e 94 51 14 	call	0x28a2	; 0x28a2 <_ZN15OrangutanMotors10setM1SpeedEi>
    2928:	ce 01       	movw	r24, r28
    292a:	0e 94 6e 14 	call	0x28dc	; 0x28dc <_ZN15OrangutanMotors10setM2SpeedEi>
    292e:	df 91       	pop	r29
    2930:	cf 91       	pop	r28
    2932:	08 95       	ret

00002934 <set_motors>:
    2934:	0e 94 8f 14 	call	0x291e	; 0x291e <_ZN15OrangutanMotors9setSpeedsEii>
    2938:	08 95       	ret

0000293a <_ZN20OrangutanPushbuttons5init2Ev>:
    293a:	84 b1       	in	r24, 0x04	; 4
    293c:	8d 7c       	andi	r24, 0xCD	; 205
    293e:	84 b9       	out	0x04, r24	; 4
    2940:	85 b1       	in	r24, 0x05	; 5
    2942:	82 63       	ori	r24, 0x32	; 50
    2944:	85 b9       	out	0x05, r24	; 5
    2946:	85 e0       	ldi	r24, 0x05	; 5
    2948:	90 e0       	ldi	r25, 0x00	; 0
    294a:	6f 93       	push	r22
    294c:	64 e0       	ldi	r22, 0x04	; 4
    294e:	6a 95       	dec	r22
    2950:	f1 f7       	brne	.-4      	; 0x294e <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    2952:	6f 91       	pop	r22
    2954:	01 97       	sbiw	r24, 0x01	; 1
    2956:	c9 f7       	brne	.-14     	; 0x294a <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    2958:	08 95       	ret

0000295a <_ZN20OrangutanPushbuttons4initEv>:
    295a:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    295e:	81 11       	cpse	r24, r1
    2960:	05 c0       	rjmp	.+10     	; 0x296c <_ZN20OrangutanPushbuttons4initEv+0x12>
    2962:	81 e0       	ldi	r24, 0x01	; 1
    2964:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    2968:	0e 94 9d 14 	call	0x293a	; 0x293a <_ZN20OrangutanPushbuttons5init2Ev>
    296c:	08 95       	ret

0000296e <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    296e:	cf 93       	push	r28
    2970:	c8 2f       	mov	r28, r24
    2972:	0e 94 ad 14 	call	0x295a	; 0x295a <_ZN20OrangutanPushbuttons4initEv>
    2976:	83 b1       	in	r24, 0x03	; 3
    2978:	8c 23       	and	r24, r28
    297a:	e9 f3       	breq	.-6      	; 0x2976 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    297c:	8a e0       	ldi	r24, 0x0A	; 10
    297e:	90 e0       	ldi	r25, 0x00	; 0
    2980:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <delay_ms>
    2984:	83 b1       	in	r24, 0x03	; 3
    2986:	8c 23       	and	r24, r28
    2988:	b1 f3       	breq	.-20     	; 0x2976 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    298a:	83 b1       	in	r24, 0x03	; 3
    298c:	8c 23       	and	r24, r28
    298e:	cf 91       	pop	r28
    2990:	08 95       	ret

00002992 <wait_for_button_release>:
    2992:	0e 94 b7 14 	call	0x296e	; 0x296e <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    2996:	08 95       	ret

00002998 <_ZN20OrangutanPushbuttons9isPressedEh>:
    2998:	a1 e0       	ldi	r26, 0x01	; 1
    299a:	b0 e0       	ldi	r27, 0x00	; 0
    299c:	e2 ed       	ldi	r30, 0xD2	; 210
    299e:	f4 e1       	ldi	r31, 0x14	; 20
    29a0:	0c 94 df 1c 	jmp	0x39be	; 0x39be <__prologue_saves__+0x20>
    29a4:	89 83       	std	Y+1, r24	; 0x01
    29a6:	0e 94 ad 14 	call	0x295a	; 0x295a <_ZN20OrangutanPushbuttons4initEv>
    29aa:	93 b1       	in	r25, 0x03	; 3
    29ac:	90 95       	com	r25
    29ae:	89 81       	ldd	r24, Y+1	; 0x01
    29b0:	89 23       	and	r24, r25
    29b2:	21 96       	adiw	r28, 0x01	; 1
    29b4:	e2 e0       	ldi	r30, 0x02	; 2
    29b6:	0c 94 fb 1c 	jmp	0x39f6	; 0x39f6 <__epilogue_restores__+0x20>

000029ba <button_is_pressed>:
    29ba:	0e 94 cc 14 	call	0x2998	; 0x2998 <_ZN20OrangutanPushbuttons9isPressedEh>
    29be:	08 95       	ret

000029c0 <serial_receive_buffer_full>:
    29c0:	20 91 a7 01 	lds	r18, 0x01A7	; 0x8001a7 <_ZN15OrangutanSerial5portsE+0x2>
    29c4:	81 e0       	ldi	r24, 0x01	; 1
    29c6:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <_ZN15OrangutanSerial5portsE+0x4>
    29ca:	29 13       	cpse	r18, r25
    29cc:	80 e0       	ldi	r24, 0x00	; 0
    29ce:	08 95       	ret

000029d0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
    29d0:	28 2f       	mov	r18, r24
    29d2:	30 e0       	ldi	r19, 0x00	; 0
    29d4:	9a e0       	ldi	r25, 0x0A	; 10
    29d6:	89 9f       	mul	r24, r25
    29d8:	f0 01       	movw	r30, r0
    29da:	11 24       	eor	r1, r1
    29dc:	eb 55       	subi	r30, 0x5B	; 91
    29de:	fe 4f       	sbci	r31, 0xFE	; 254
    29e0:	80 85       	ldd	r24, Z+8	; 0x08
    29e2:	91 85       	ldd	r25, Z+9	; 0x09
    29e4:	00 97       	sbiw	r24, 0x00	; 0
    29e6:	21 f0       	breq	.+8      	; 0x29f0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    29e8:	52 81       	ldd	r21, Z+2	; 0x02
    29ea:	44 81       	ldd	r20, Z+4	; 0x04
    29ec:	54 17       	cp	r21, r20
    29ee:	80 f0       	brcs	.+32     	; 0x2a10 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x40>
    29f0:	8a e0       	ldi	r24, 0x0A	; 10
    29f2:	82 9f       	mul	r24, r18
    29f4:	f0 01       	movw	r30, r0
    29f6:	83 9f       	mul	r24, r19
    29f8:	f0 0d       	add	r31, r0
    29fa:	11 24       	eor	r1, r1
    29fc:	eb 55       	subi	r30, 0x5B	; 91
    29fe:	fe 4f       	sbci	r31, 0xFE	; 254
    2a00:	92 81       	ldd	r25, Z+2	; 0x02
    2a02:	84 81       	ldd	r24, Z+4	; 0x04
    2a04:	98 13       	cpse	r25, r24
    2a06:	0e c0       	rjmp	.+28     	; 0x2a24 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x54>
    2a08:	85 81       	ldd	r24, Z+5	; 0x05
    2a0a:	81 11       	cpse	r24, r1
    2a0c:	0a c0       	rjmp	.+20     	; 0x2a22 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
    2a0e:	08 95       	ret
    2a10:	42 81       	ldd	r20, Z+2	; 0x02
    2a12:	dc 01       	movw	r26, r24
    2a14:	a4 0f       	add	r26, r20
    2a16:	b1 1d       	adc	r27, r1
    2a18:	6c 93       	st	X, r22
    2a1a:	82 81       	ldd	r24, Z+2	; 0x02
    2a1c:	8f 5f       	subi	r24, 0xFF	; 255
    2a1e:	82 83       	std	Z+2, r24	; 0x02
    2a20:	e7 cf       	rjmp	.-50     	; 0x29f0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    2a22:	12 82       	std	Z+2, r1	; 0x02
    2a24:	08 95       	ret

00002a26 <_ZN15OrangutanSerial15serial_rx_checkEh>:
    2a26:	cf 93       	push	r28
    2a28:	df 93       	push	r29
    2a2a:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2a2e:	9f 77       	andi	r25, 0x7F	; 127
    2a30:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2a34:	c8 2f       	mov	r28, r24
    2a36:	d0 e0       	ldi	r29, 0x00	; 0
    2a38:	9a e0       	ldi	r25, 0x0A	; 10
    2a3a:	89 9f       	mul	r24, r25
    2a3c:	f0 01       	movw	r30, r0
    2a3e:	11 24       	eor	r1, r1
    2a40:	eb 55       	subi	r30, 0x5B	; 91
    2a42:	fe 4f       	sbci	r31, 0xFE	; 254
    2a44:	20 85       	ldd	r18, Z+8	; 0x08
    2a46:	31 85       	ldd	r19, Z+9	; 0x09
    2a48:	23 2b       	or	r18, r19
    2a4a:	41 f0       	breq	.+16     	; 0x2a5c <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2a4c:	22 81       	ldd	r18, Z+2	; 0x02
    2a4e:	94 81       	ldd	r25, Z+4	; 0x04
    2a50:	29 17       	cp	r18, r25
    2a52:	20 f4       	brcc	.+8      	; 0x2a5c <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2a54:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2a58:	97 fd       	sbrc	r25, 7
    2a5a:	11 c0       	rjmp	.+34     	; 0x2a7e <_ZN15OrangutanSerial15serial_rx_checkEh+0x58>
    2a5c:	8a e0       	ldi	r24, 0x0A	; 10
    2a5e:	8c 9f       	mul	r24, r28
    2a60:	f0 01       	movw	r30, r0
    2a62:	8d 9f       	mul	r24, r29
    2a64:	f0 0d       	add	r31, r0
    2a66:	11 24       	eor	r1, r1
    2a68:	eb 55       	subi	r30, 0x5B	; 91
    2a6a:	fe 4f       	sbci	r31, 0xFE	; 254
    2a6c:	80 81       	ld	r24, Z
    2a6e:	81 11       	cpse	r24, r1
    2a70:	0b c0       	rjmp	.+22     	; 0x2a88 <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    2a72:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2a76:	80 68       	ori	r24, 0x80	; 128
    2a78:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2a7c:	05 c0       	rjmp	.+10     	; 0x2a88 <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    2a7e:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2a82:	0e 94 e8 14 	call	0x29d0	; 0x29d0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    2a86:	ea cf       	rjmp	.-44     	; 0x2a5c <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2a88:	df 91       	pop	r29
    2a8a:	cf 91       	pop	r28
    2a8c:	08 95       	ret

00002a8e <_ZN15OrangutanSerial14receive_inlineEhPchh>:
    2a8e:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2a92:	9f 77       	andi	r25, 0x7F	; 127
    2a94:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2a98:	9a e0       	ldi	r25, 0x0A	; 10
    2a9a:	89 9f       	mul	r24, r25
    2a9c:	f0 01       	movw	r30, r0
    2a9e:	11 24       	eor	r1, r1
    2aa0:	eb 55       	subi	r30, 0x5B	; 91
    2aa2:	fe 4f       	sbci	r31, 0xFE	; 254
    2aa4:	71 87       	std	Z+9, r23	; 0x09
    2aa6:	60 87       	std	Z+8, r22	; 0x08
    2aa8:	12 82       	std	Z+2, r1	; 0x02
    2aaa:	44 83       	std	Z+4, r20	; 0x04
    2aac:	25 83       	std	Z+5, r18	; 0x05
    2aae:	80 81       	ld	r24, Z
    2ab0:	81 11       	cpse	r24, r1
    2ab2:	05 c0       	rjmp	.+10     	; 0x2abe <_ZN15OrangutanSerial14receive_inlineEhPchh+0x30>
    2ab4:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2ab8:	80 68       	ori	r24, 0x80	; 128
    2aba:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2abe:	08 95       	ret

00002ac0 <_ZN15OrangutanSerial7receiveEPch>:
    2ac0:	46 2f       	mov	r20, r22
    2ac2:	20 e0       	ldi	r18, 0x00	; 0
    2ac4:	bc 01       	movw	r22, r24
    2ac6:	80 e0       	ldi	r24, 0x00	; 0
    2ac8:	0e 94 47 15 	call	0x2a8e	; 0x2a8e <_ZN15OrangutanSerial14receive_inlineEhPchh>
    2acc:	08 95       	ret

00002ace <serial_receive>:
    2ace:	0e 94 60 15 	call	0x2ac0	; 0x2ac0 <_ZN15OrangutanSerial7receiveEPch>
    2ad2:	08 95       	ret

00002ad4 <__vector_18>:
    2ad4:	1f 92       	push	r1
    2ad6:	0f 92       	push	r0
    2ad8:	0f b6       	in	r0, 0x3f	; 63
    2ada:	0f 92       	push	r0
    2adc:	11 24       	eor	r1, r1
    2ade:	2f 93       	push	r18
    2ae0:	3f 93       	push	r19
    2ae2:	4f 93       	push	r20
    2ae4:	5f 93       	push	r21
    2ae6:	6f 93       	push	r22
    2ae8:	7f 93       	push	r23
    2aea:	8f 93       	push	r24
    2aec:	9f 93       	push	r25
    2aee:	af 93       	push	r26
    2af0:	bf 93       	push	r27
    2af2:	ef 93       	push	r30
    2af4:	ff 93       	push	r31
    2af6:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2afa:	80 e0       	ldi	r24, 0x00	; 0
    2afc:	0e 94 e8 14 	call	0x29d0	; 0x29d0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    2b00:	ff 91       	pop	r31
    2b02:	ef 91       	pop	r30
    2b04:	bf 91       	pop	r27
    2b06:	af 91       	pop	r26
    2b08:	9f 91       	pop	r25
    2b0a:	8f 91       	pop	r24
    2b0c:	7f 91       	pop	r23
    2b0e:	6f 91       	pop	r22
    2b10:	5f 91       	pop	r21
    2b12:	4f 91       	pop	r20
    2b14:	3f 91       	pop	r19
    2b16:	2f 91       	pop	r18
    2b18:	0f 90       	pop	r0
    2b1a:	0f be       	out	0x3f, r0	; 63
    2b1c:	0f 90       	pop	r0
    2b1e:	1f 90       	pop	r1
    2b20:	18 95       	reti

00002b22 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    2b22:	9a e0       	ldi	r25, 0x0A	; 10
    2b24:	89 9f       	mul	r24, r25
    2b26:	f0 01       	movw	r30, r0
    2b28:	11 24       	eor	r1, r1
    2b2a:	eb 55       	subi	r30, 0x5B	; 91
    2b2c:	fe 4f       	sbci	r31, 0xFE	; 254
    2b2e:	86 81       	ldd	r24, Z+6	; 0x06
    2b30:	97 81       	ldd	r25, Z+7	; 0x07
    2b32:	89 2b       	or	r24, r25
    2b34:	59 f0       	breq	.+22     	; 0x2b4c <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2b36:	91 81       	ldd	r25, Z+1	; 0x01
    2b38:	83 81       	ldd	r24, Z+3	; 0x03
    2b3a:	98 17       	cp	r25, r24
    2b3c:	38 f4       	brcc	.+14     	; 0x2b4c <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2b3e:	80 81       	ld	r24, Z
    2b40:	81 11       	cpse	r24, r1
    2b42:	04 c0       	rjmp	.+8      	; 0x2b4c <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2b44:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b48:	80 62       	ori	r24, 0x20	; 32
    2b4a:	03 c0       	rjmp	.+6      	; 0x2b52 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x30>
    2b4c:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b50:	8f 7d       	andi	r24, 0xDF	; 223
    2b52:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b56:	08 95       	ret

00002b58 <_ZN15OrangutanSerial15initUART_inlineEh>:
    2b58:	9a e0       	ldi	r25, 0x0A	; 10
    2b5a:	89 9f       	mul	r24, r25
    2b5c:	f0 01       	movw	r30, r0
    2b5e:	11 24       	eor	r1, r1
    2b60:	eb 55       	subi	r30, 0x5B	; 91
    2b62:	fe 4f       	sbci	r31, 0xFE	; 254
    2b64:	90 81       	ld	r25, Z
    2b66:	91 11       	cpse	r25, r1
    2b68:	02 c0       	rjmp	.+4      	; 0x2b6e <_ZN15OrangutanSerial15initUART_inlineEh+0x16>
    2b6a:	98 e9       	ldi	r25, 0x98	; 152
    2b6c:	01 c0       	rjmp	.+2      	; 0x2b70 <_ZN15OrangutanSerial15initUART_inlineEh+0x18>
    2b6e:	98 e1       	ldi	r25, 0x18	; 24
    2b70:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b74:	0e 94 91 15 	call	0x2b22	; 0x2b22 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2b78:	78 94       	sei
    2b7a:	08 95       	ret

00002b7c <serial_set_baud_rate>:
    2b7c:	cf 92       	push	r12
    2b7e:	df 92       	push	r13
    2b80:	ef 92       	push	r14
    2b82:	ff 92       	push	r15
    2b84:	6b 01       	movw	r12, r22
    2b86:	7c 01       	movw	r14, r24
    2b88:	80 e0       	ldi	r24, 0x00	; 0
    2b8a:	0e 94 ac 15 	call	0x2b58	; 0x2b58 <_ZN15OrangutanSerial15initUART_inlineEh>
    2b8e:	a8 ef       	ldi	r26, 0xF8	; 248
    2b90:	bf ef       	ldi	r27, 0xFF	; 255
    2b92:	a7 01       	movw	r20, r14
    2b94:	96 01       	movw	r18, r12
    2b96:	0e 94 ca 1c 	call	0x3994	; 0x3994 <__mulohisi3>
    2b9a:	73 5d       	subi	r23, 0xD3	; 211
    2b9c:	8e 4c       	sbci	r24, 0xCE	; 206
    2b9e:	9e 4f       	sbci	r25, 0xFE	; 254
    2ba0:	e4 e0       	ldi	r30, 0x04	; 4
    2ba2:	22 0f       	add	r18, r18
    2ba4:	33 1f       	adc	r19, r19
    2ba6:	44 1f       	adc	r20, r20
    2ba8:	55 1f       	adc	r21, r21
    2baa:	ea 95       	dec	r30
    2bac:	d1 f7       	brne	.-12     	; 0x2ba2 <serial_set_baud_rate+0x26>
    2bae:	0e 94 66 1c 	call	0x38cc	; 0x38cc <__udivmodsi4>
    2bb2:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
    2bb6:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
    2bba:	ff 90       	pop	r15
    2bbc:	ef 90       	pop	r14
    2bbe:	df 90       	pop	r13
    2bc0:	cf 90       	pop	r12
    2bc2:	08 95       	ret

00002bc4 <_ZN15OrangutanSerial4sendEPch>:
    2bc4:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <_ZN15OrangutanSerial5portsE+0x7>
    2bc8:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_ZN15OrangutanSerial5portsE+0x6>
    2bcc:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <_ZN15OrangutanSerial5portsE+0x1>
    2bd0:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <_ZN15OrangutanSerial5portsE+0x3>
    2bd4:	80 e0       	ldi	r24, 0x00	; 0
    2bd6:	0e 94 91 15 	call	0x2b22	; 0x2b22 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2bda:	08 95       	ret

00002bdc <serial_send>:
    2bdc:	0e 94 e2 15 	call	0x2bc4	; 0x2bc4 <_ZN15OrangutanSerial4sendEPch>
    2be0:	08 95       	ret

00002be2 <_ZN15OrangutanSerial11uart_tx_isrEh>:
    2be2:	9a e0       	ldi	r25, 0x0A	; 10
    2be4:	89 9f       	mul	r24, r25
    2be6:	f0 01       	movw	r30, r0
    2be8:	11 24       	eor	r1, r1
    2bea:	eb 55       	subi	r30, 0x5B	; 91
    2bec:	fe 4f       	sbci	r31, 0xFE	; 254
    2bee:	26 81       	ldd	r18, Z+6	; 0x06
    2bf0:	37 81       	ldd	r19, Z+7	; 0x07
    2bf2:	21 15       	cp	r18, r1
    2bf4:	31 05       	cpc	r19, r1
    2bf6:	41 f0       	breq	.+16     	; 0x2c08 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2bf8:	41 81       	ldd	r20, Z+1	; 0x01
    2bfa:	93 81       	ldd	r25, Z+3	; 0x03
    2bfc:	49 17       	cp	r20, r25
    2bfe:	20 f4       	brcc	.+8      	; 0x2c08 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2c00:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2c04:	95 fd       	sbrc	r25, 5
    2c06:	03 c0       	rjmp	.+6      	; 0x2c0e <_ZN15OrangutanSerial11uart_tx_isrEh+0x2c>
    2c08:	0e 94 91 15 	call	0x2b22	; 0x2b22 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2c0c:	08 95       	ret
    2c0e:	91 81       	ldd	r25, Z+1	; 0x01
    2c10:	d9 01       	movw	r26, r18
    2c12:	a9 0f       	add	r26, r25
    2c14:	b1 1d       	adc	r27, r1
    2c16:	9c 91       	ld	r25, X
    2c18:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2c1c:	91 81       	ldd	r25, Z+1	; 0x01
    2c1e:	9f 5f       	subi	r25, 0xFF	; 255
    2c20:	91 83       	std	Z+1, r25	; 0x01
    2c22:	f2 cf       	rjmp	.-28     	; 0x2c08 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>

00002c24 <_ZN15OrangutanSerial5checkEv>:
    2c24:	e1 ec       	ldi	r30, 0xC1	; 193
    2c26:	f0 e0       	ldi	r31, 0x00	; 0
    2c28:	80 81       	ld	r24, Z
    2c2a:	8f 7d       	andi	r24, 0xDF	; 223
    2c2c:	80 83       	st	Z, r24
    2c2e:	80 e0       	ldi	r24, 0x00	; 0
    2c30:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <_ZN15OrangutanSerial11uart_tx_isrEh>
    2c34:	80 e0       	ldi	r24, 0x00	; 0
    2c36:	0e 94 13 15 	call	0x2a26	; 0x2a26 <_ZN15OrangutanSerial15serial_rx_checkEh>
    2c3a:	08 95       	ret

00002c3c <_ZN15OrangutanSerial12sendBlockingEPch>:
    2c3c:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <_ZN15OrangutanSerial5portsE+0x7>
    2c40:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_ZN15OrangutanSerial5portsE+0x6>
    2c44:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <_ZN15OrangutanSerial5portsE+0x1>
    2c48:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <_ZN15OrangutanSerial5portsE+0x3>
    2c4c:	80 e0       	ldi	r24, 0x00	; 0
    2c4e:	0e 94 91 15 	call	0x2b22	; 0x2b22 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2c52:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <_ZN15OrangutanSerial5portsE+0x1>
    2c56:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <_ZN15OrangutanSerial5portsE+0x3>
    2c5a:	98 17       	cp	r25, r24
    2c5c:	19 f0       	breq	.+6      	; 0x2c64 <_ZN15OrangutanSerial12sendBlockingEPch+0x28>
    2c5e:	0e 94 12 16 	call	0x2c24	; 0x2c24 <_ZN15OrangutanSerial5checkEv>
    2c62:	f7 cf       	rjmp	.-18     	; 0x2c52 <_ZN15OrangutanSerial12sendBlockingEPch+0x16>
    2c64:	08 95       	ret

00002c66 <serial_send_blocking>:
    2c66:	0e 94 1e 16 	call	0x2c3c	; 0x2c3c <_ZN15OrangutanSerial12sendBlockingEPch>
    2c6a:	08 95       	ret

00002c6c <__vector_19>:
    2c6c:	1f 92       	push	r1
    2c6e:	0f 92       	push	r0
    2c70:	0f b6       	in	r0, 0x3f	; 63
    2c72:	0f 92       	push	r0
    2c74:	11 24       	eor	r1, r1
    2c76:	2f 93       	push	r18
    2c78:	3f 93       	push	r19
    2c7a:	4f 93       	push	r20
    2c7c:	5f 93       	push	r21
    2c7e:	6f 93       	push	r22
    2c80:	7f 93       	push	r23
    2c82:	8f 93       	push	r24
    2c84:	9f 93       	push	r25
    2c86:	af 93       	push	r26
    2c88:	bf 93       	push	r27
    2c8a:	ef 93       	push	r30
    2c8c:	ff 93       	push	r31
    2c8e:	80 e0       	ldi	r24, 0x00	; 0
    2c90:	0e 94 f1 15 	call	0x2be2	; 0x2be2 <_ZN15OrangutanSerial11uart_tx_isrEh>
    2c94:	ff 91       	pop	r31
    2c96:	ef 91       	pop	r30
    2c98:	bf 91       	pop	r27
    2c9a:	af 91       	pop	r26
    2c9c:	9f 91       	pop	r25
    2c9e:	8f 91       	pop	r24
    2ca0:	7f 91       	pop	r23
    2ca2:	6f 91       	pop	r22
    2ca4:	5f 91       	pop	r21
    2ca6:	4f 91       	pop	r20
    2ca8:	3f 91       	pop	r19
    2caa:	2f 91       	pop	r18
    2cac:	0f 90       	pop	r0
    2cae:	0f be       	out	0x3f, r0	; 63
    2cb0:	0f 90       	pop	r0
    2cb2:	1f 90       	pop	r1
    2cb4:	18 95       	reti

00002cb6 <__vector_9>:
    2cb6:	2f 92       	push	r2
    2cb8:	8f 93       	push	r24
    2cba:	9f 93       	push	r25
    2cbc:	2f b6       	in	r2, 0x3f	; 63
    2cbe:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <tickCount+0x1>
    2cc2:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <tickCount+0x2>
    2cc6:	01 96       	adiw	r24, 0x01	; 1
    2cc8:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <tickCount+0x1>
    2ccc:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <tickCount+0x2>
    2cd0:	90 e0       	ldi	r25, 0x00	; 0
    2cd2:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <tickCount+0x3>
    2cd6:	89 1f       	adc	r24, r25
    2cd8:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <tickCount+0x3>
    2cdc:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <us_over_10+0x1>
    2ce0:	9c 5f       	subi	r25, 0xFC	; 252
    2ce2:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <us_over_10+0x1>
    2ce6:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <us_over_10>
    2cea:	80 51       	subi	r24, 0x10	; 16
    2cec:	97 42       	sbci	r25, 0x27	; 39
    2cee:	c0 f0       	brcs	.+48     	; 0x2d20 <end>
    2cf0:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <us_over_10+0x1>
    2cf4:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <us_over_10>
    2cf8:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <msCounter>
    2cfc:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <msCounter+0x1>
    2d00:	01 96       	adiw	r24, 0x01	; 1
    2d02:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <msCounter>
    2d06:	90 93 b2 01 	sts	0x01B2, r25	; 0x8001b2 <msCounter+0x1>
    2d0a:	90 e0       	ldi	r25, 0x00	; 0
    2d0c:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <msCounter+0x2>
    2d10:	89 1f       	adc	r24, r25
    2d12:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <msCounter+0x2>
    2d16:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <msCounter+0x3>
    2d1a:	89 1f       	adc	r24, r25
    2d1c:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <msCounter+0x3>

00002d20 <end>:
    2d20:	2f be       	out	0x3f, r2	; 63
    2d22:	9f 91       	pop	r25
    2d24:	8f 91       	pop	r24
    2d26:	2f 90       	pop	r2
    2d28:	18 95       	reti

00002d2a <_ZN13OrangutanTime17delayMillisecondsEj>:
    2d2a:	28 ee       	ldi	r18, 0xE8	; 232
    2d2c:	33 e0       	ldi	r19, 0x03	; 3
    2d2e:	01 97       	sbiw	r24, 0x01	; 1
    2d30:	48 f0       	brcs	.+18     	; 0x2d44 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    2d32:	f9 01       	movw	r30, r18
    2d34:	6f 93       	push	r22
    2d36:	64 e0       	ldi	r22, 0x04	; 4
    2d38:	6a 95       	dec	r22
    2d3a:	f1 f7       	brne	.-4      	; 0x2d38 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    2d3c:	6f 91       	pop	r22
    2d3e:	31 97       	sbiw	r30, 0x01	; 1
    2d40:	c9 f7       	brne	.-14     	; 0x2d34 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    2d42:	f5 cf       	rjmp	.-22     	; 0x2d2e <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    2d44:	08 95       	ret

00002d46 <delay_ms>:
    2d46:	0e 94 95 16 	call	0x2d2a	; 0x2d2a <_ZN13OrangutanTime17delayMillisecondsEj>
    2d4a:	08 95       	ret

00002d4c <_ZN13OrangutanTime5init2Ev>:
    2d4c:	e0 e7       	ldi	r30, 0x70	; 112
    2d4e:	f0 e0       	ldi	r31, 0x00	; 0
    2d50:	80 81       	ld	r24, Z
    2d52:	8e 7f       	andi	r24, 0xFE	; 254
    2d54:	80 83       	st	Z, r24
    2d56:	a0 eb       	ldi	r26, 0xB0	; 176
    2d58:	b0 e0       	ldi	r27, 0x00	; 0
    2d5a:	8c 91       	ld	r24, X
    2d5c:	83 60       	ori	r24, 0x03	; 3
    2d5e:	8c 93       	st	X, r24
    2d60:	a1 eb       	ldi	r26, 0xB1	; 177
    2d62:	b0 e0       	ldi	r27, 0x00	; 0
    2d64:	8c 91       	ld	r24, X
    2d66:	80 7f       	andi	r24, 0xF0	; 240
    2d68:	8c 93       	st	X, r24
    2d6a:	8c 91       	ld	r24, X
    2d6c:	82 60       	ori	r24, 0x02	; 2
    2d6e:	8c 93       	st	X, r24
    2d70:	b8 9a       	sbi	0x17, 0	; 23
    2d72:	80 81       	ld	r24, Z
    2d74:	81 60       	ori	r24, 0x01	; 1
    2d76:	80 83       	st	Z, r24
    2d78:	78 94       	sei
    2d7a:	08 95       	ret

00002d7c <_ZN13OrangutanTime4initEv>:
    2d7c:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <_ZZN13OrangutanTime4initEvE11initialized>
    2d80:	81 11       	cpse	r24, r1
    2d82:	05 c0       	rjmp	.+10     	; 0x2d8e <_ZN13OrangutanTime4initEv+0x12>
    2d84:	81 e0       	ldi	r24, 0x01	; 1
    2d86:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <_ZZN13OrangutanTime4initEvE11initialized>
    2d8a:	0e 94 a6 16 	call	0x2d4c	; 0x2d4c <_ZN13OrangutanTime5init2Ev>
    2d8e:	08 95       	ret

00002d90 <_ZN13OrangutanTime5resetEv>:
    2d90:	0e 94 be 16 	call	0x2d7c	; 0x2d7c <_ZN13OrangutanTime4initEv>
    2d94:	e0 e7       	ldi	r30, 0x70	; 112
    2d96:	f0 e0       	ldi	r31, 0x00	; 0
    2d98:	80 81       	ld	r24, Z
    2d9a:	8e 7f       	andi	r24, 0xFE	; 254
    2d9c:	80 83       	st	Z, r24
    2d9e:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <msCounter>
    2da2:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <msCounter+0x1>
    2da6:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <msCounter+0x2>
    2daa:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <msCounter+0x3>
    2dae:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <us_over_10+0x1>
    2db2:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <us_over_10>
    2db6:	80 81       	ld	r24, Z
    2db8:	81 60       	ori	r24, 0x01	; 1
    2dba:	80 83       	st	Z, r24
    2dbc:	08 95       	ret

00002dbe <calibrate_line_sensors>:
    2dbe:	68 2f       	mov	r22, r24
    2dc0:	89 eb       	ldi	r24, 0xB9	; 185
    2dc2:	91 e0       	ldi	r25, 0x01	; 1
    2dc4:	0e 94 ce 1a 	call	0x359c	; 0x359c <_ZN16PololuQTRSensors9calibrateEh>
    2dc8:	08 95       	ret

00002dca <read_line_sensors_calibrated>:
    2dca:	46 2f       	mov	r20, r22
    2dcc:	bc 01       	movw	r22, r24
    2dce:	89 eb       	ldi	r24, 0xB9	; 185
    2dd0:	91 e0       	ldi	r25, 0x01	; 1
    2dd2:	0e 94 f2 1a 	call	0x35e4	; 0x35e4 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    2dd6:	08 95       	ret

00002dd8 <read_line>:
    2dd8:	46 2f       	mov	r20, r22
    2dda:	20 e0       	ldi	r18, 0x00	; 0
    2ddc:	bc 01       	movw	r22, r24
    2dde:	89 eb       	ldi	r24, 0xB9	; 185
    2de0:	91 e0       	ldi	r25, 0x01	; 1
    2de2:	0e 94 9f 1b 	call	0x373e	; 0x373e <_ZN16PololuQTRSensors8readLineEPjhh>
    2de6:	08 95       	ret

00002de8 <_ZN9Pololu3pi4initEjh>:
    2de8:	0f 93       	push	r16
    2dea:	cf 93       	push	r28
    2dec:	df 93       	push	r29
    2dee:	00 d0       	rcall	.+0      	; 0x2df0 <_ZN9Pololu3pi4initEjh+0x8>
    2df0:	00 d0       	rcall	.+0      	; 0x2df2 <_ZN9Pololu3pi4initEjh+0xa>
    2df2:	1f 92       	push	r1
    2df4:	cd b7       	in	r28, 0x3d	; 61
    2df6:	de b7       	in	r29, 0x3e	; 62
    2df8:	9c 01       	movw	r18, r24
    2dfa:	85 e0       	ldi	r24, 0x05	; 5
    2dfc:	e0 e5       	ldi	r30, 0x50	; 80
    2dfe:	f1 e0       	ldi	r31, 0x01	; 1
    2e00:	de 01       	movw	r26, r28
    2e02:	11 96       	adiw	r26, 0x01	; 1
    2e04:	01 90       	ld	r0, Z+
    2e06:	0d 92       	st	X+, r0
    2e08:	8a 95       	dec	r24
    2e0a:	e1 f7       	brne	.-8      	; 0x2e04 <_ZN9Pololu3pi4initEjh+0x1c>
    2e0c:	66 23       	and	r22, r22
    2e0e:	11 f0       	breq	.+4      	; 0x2e14 <_ZN9Pololu3pi4initEjh+0x2c>
    2e10:	0f ef       	ldi	r16, 0xFF	; 255
    2e12:	01 c0       	rjmp	.+2      	; 0x2e16 <_ZN9Pololu3pi4initEjh+0x2e>
    2e14:	03 e1       	ldi	r16, 0x13	; 19
    2e16:	45 e0       	ldi	r20, 0x05	; 5
    2e18:	be 01       	movw	r22, r28
    2e1a:	6f 5f       	subi	r22, 0xFF	; 255
    2e1c:	7f 4f       	sbci	r23, 0xFF	; 255
    2e1e:	89 eb       	ldi	r24, 0xB9	; 185
    2e20:	91 e0       	ldi	r25, 0x01	; 1
    2e22:	0e 94 c6 17 	call	0x2f8c	; 0x2f8c <_ZN18PololuQTRSensorsRC4initEPhhjh>
    2e26:	89 eb       	ldi	r24, 0xB9	; 185
    2e28:	91 e0       	ldi	r25, 0x01	; 1
    2e2a:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <_ZN16PololuQTRSensors11emittersOffEv>
    2e2e:	0e 94 c8 16 	call	0x2d90	; 0x2d90 <_ZN13OrangutanTime5resetEv>
    2e32:	0f 90       	pop	r0
    2e34:	0f 90       	pop	r0
    2e36:	0f 90       	pop	r0
    2e38:	0f 90       	pop	r0
    2e3a:	0f 90       	pop	r0
    2e3c:	df 91       	pop	r29
    2e3e:	cf 91       	pop	r28
    2e40:	0f 91       	pop	r16
    2e42:	08 95       	ret

00002e44 <pololu_3pi_init>:
    2e44:	60 e0       	ldi	r22, 0x00	; 0
    2e46:	0e 94 f4 16 	call	0x2de8	; 0x2de8 <_ZN9Pololu3pi4initEjh>
    2e4a:	08 95       	ret

00002e4c <_GLOBAL__sub_D_pololu_3pi_init>:
    2e4c:	89 eb       	ldi	r24, 0xB9	; 185
    2e4e:	91 e0       	ldi	r25, 0x01	; 1
    2e50:	0e 94 14 1c 	call	0x3828	; 0x3828 <_ZN16PololuQTRSensorsD1Ev>
    2e54:	08 95       	ret

00002e56 <delay_us>:
    2e56:	6f 93       	push	r22
    2e58:	64 e0       	ldi	r22, 0x04	; 4
    2e5a:	6a 95       	dec	r22
    2e5c:	f1 f7       	brne	.-4      	; 0x2e5a <delay_us+0x4>
    2e5e:	6f 91       	pop	r22
    2e60:	01 97       	sbiw	r24, 0x01	; 1
    2e62:	c9 f7       	brne	.-14     	; 0x2e56 <delay_us>
    2e64:	08 95       	ret

00002e66 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    2e66:	fc 01       	movw	r30, r24
    2e68:	11 82       	std	Z+1, r1	; 0x01
    2e6a:	10 82       	st	Z, r1
    2e6c:	13 82       	std	Z+3, r1	; 0x03
    2e6e:	12 82       	std	Z+2, r1	; 0x02
    2e70:	15 82       	std	Z+5, r1	; 0x05
    2e72:	14 82       	std	Z+4, r1	; 0x04
    2e74:	16 82       	std	Z+6, r1	; 0x06
    2e76:	68 30       	cpi	r22, 0x08	; 8
    2e78:	68 f4       	brcc	.+26     	; 0x2e94 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    2e7a:	89 e2       	ldi	r24, 0x29	; 41
    2e7c:	90 e0       	ldi	r25, 0x00	; 0
    2e7e:	91 83       	std	Z+1, r25	; 0x01
    2e80:	80 83       	st	Z, r24
    2e82:	8b e2       	ldi	r24, 0x2B	; 43
    2e84:	90 e0       	ldi	r25, 0x00	; 0
    2e86:	93 83       	std	Z+3, r25	; 0x03
    2e88:	82 83       	std	Z+2, r24	; 0x02
    2e8a:	8a e2       	ldi	r24, 0x2A	; 42
    2e8c:	90 e0       	ldi	r25, 0x00	; 0
    2e8e:	95 83       	std	Z+5, r25	; 0x05
    2e90:	84 83       	std	Z+4, r24	; 0x04
    2e92:	1f c0       	rjmp	.+62     	; 0x2ed2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2e94:	6e 30       	cpi	r22, 0x0E	; 14
    2e96:	70 f4       	brcc	.+28     	; 0x2eb4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    2e98:	83 e2       	ldi	r24, 0x23	; 35
    2e9a:	90 e0       	ldi	r25, 0x00	; 0
    2e9c:	91 83       	std	Z+1, r25	; 0x01
    2e9e:	80 83       	st	Z, r24
    2ea0:	85 e2       	ldi	r24, 0x25	; 37
    2ea2:	90 e0       	ldi	r25, 0x00	; 0
    2ea4:	93 83       	std	Z+3, r25	; 0x03
    2ea6:	82 83       	std	Z+2, r24	; 0x02
    2ea8:	84 e2       	ldi	r24, 0x24	; 36
    2eaa:	90 e0       	ldi	r25, 0x00	; 0
    2eac:	95 83       	std	Z+5, r25	; 0x05
    2eae:	84 83       	std	Z+4, r24	; 0x04
    2eb0:	68 50       	subi	r22, 0x08	; 8
    2eb2:	0f c0       	rjmp	.+30     	; 0x2ed2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2eb4:	65 31       	cpi	r22, 0x15	; 21
    2eb6:	98 f4       	brcc	.+38     	; 0x2ede <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    2eb8:	86 e2       	ldi	r24, 0x26	; 38
    2eba:	90 e0       	ldi	r25, 0x00	; 0
    2ebc:	91 83       	std	Z+1, r25	; 0x01
    2ebe:	80 83       	st	Z, r24
    2ec0:	88 e2       	ldi	r24, 0x28	; 40
    2ec2:	90 e0       	ldi	r25, 0x00	; 0
    2ec4:	93 83       	std	Z+3, r25	; 0x03
    2ec6:	82 83       	std	Z+2, r24	; 0x02
    2ec8:	87 e2       	ldi	r24, 0x27	; 39
    2eca:	90 e0       	ldi	r25, 0x00	; 0
    2ecc:	95 83       	std	Z+5, r25	; 0x05
    2ece:	84 83       	std	Z+4, r24	; 0x04
    2ed0:	6e 50       	subi	r22, 0x0E	; 14
    2ed2:	81 e0       	ldi	r24, 0x01	; 1
    2ed4:	01 c0       	rjmp	.+2      	; 0x2ed8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    2ed6:	88 0f       	add	r24, r24
    2ed8:	6a 95       	dec	r22
    2eda:	ea f7       	brpl	.-6      	; 0x2ed6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    2edc:	86 83       	std	Z+6, r24	; 0x06
    2ede:	08 95       	ret

00002ee0 <_ZN16PololuQTRSensors4initEhhh>:
    2ee0:	a7 e0       	ldi	r26, 0x07	; 7
    2ee2:	b0 e0       	ldi	r27, 0x00	; 0
    2ee4:	e6 e7       	ldi	r30, 0x76	; 118
    2ee6:	f7 e1       	ldi	r31, 0x17	; 23
    2ee8:	0c 94 dd 1c 	jmp	0x39ba	; 0x39ba <__prologue_saves__+0x1c>
    2eec:	8c 01       	movw	r16, r24
    2eee:	fc 01       	movw	r30, r24
    2ef0:	11 82       	std	Z+1, r1	; 0x01
    2ef2:	10 82       	st	Z, r1
    2ef4:	13 82       	std	Z+3, r1	; 0x03
    2ef6:	12 82       	std	Z+2, r1	; 0x02
    2ef8:	15 82       	std	Z+5, r1	; 0x05
    2efa:	14 82       	std	Z+4, r1	; 0x04
    2efc:	17 82       	std	Z+7, r1	; 0x07
    2efe:	16 82       	std	Z+6, r1	; 0x06
    2f00:	61 31       	cpi	r22, 0x11	; 17
    2f02:	18 f0       	brcs	.+6      	; 0x2f0a <_ZN16PololuQTRSensors4initEhhh+0x2a>
    2f04:	80 e1       	ldi	r24, 0x10	; 16
    2f06:	80 87       	std	Z+8, r24	; 0x08
    2f08:	02 c0       	rjmp	.+4      	; 0x2f0e <_ZN16PololuQTRSensors4initEhhh+0x2e>
    2f0a:	fc 01       	movw	r30, r24
    2f0c:	60 87       	std	Z+8, r22	; 0x08
    2f0e:	f8 01       	movw	r30, r16
    2f10:	20 8b       	std	Z+16, r18	; 0x10
    2f12:	64 2f       	mov	r22, r20
    2f14:	ce 01       	movw	r24, r28
    2f16:	01 96       	adiw	r24, 0x01	; 1
    2f18:	0e 94 33 17 	call	0x2e66	; 0x2e66 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    2f1c:	8f 81       	ldd	r24, Y+7	; 0x07
    2f1e:	f8 01       	movw	r30, r16
    2f20:	81 87       	std	Z+9, r24	; 0x09
    2f22:	8b 81       	ldd	r24, Y+3	; 0x03
    2f24:	9c 81       	ldd	r25, Y+4	; 0x04
    2f26:	93 87       	std	Z+11, r25	; 0x0b
    2f28:	82 87       	std	Z+10, r24	; 0x0a
    2f2a:	8d 81       	ldd	r24, Y+5	; 0x05
    2f2c:	9e 81       	ldd	r25, Y+6	; 0x06
    2f2e:	95 87       	std	Z+13, r25	; 0x0d
    2f30:	84 87       	std	Z+12, r24	; 0x0c
    2f32:	27 96       	adiw	r28, 0x07	; 7
    2f34:	e4 e0       	ldi	r30, 0x04	; 4
    2f36:	0c 94 f9 1c 	jmp	0x39f2	; 0x39f2 <__epilogue_restores__+0x1c>

00002f3a <_ZN16PololuQTRSensors11emittersOffEv>:
    2f3a:	fc 01       	movw	r30, r24
    2f3c:	a4 85       	ldd	r26, Z+12	; 0x0c
    2f3e:	b5 85       	ldd	r27, Z+13	; 0x0d
    2f40:	10 97       	sbiw	r26, 0x00	; 0
    2f42:	79 f0       	breq	.+30     	; 0x2f62 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    2f44:	8c 91       	ld	r24, X
    2f46:	91 85       	ldd	r25, Z+9	; 0x09
    2f48:	89 2b       	or	r24, r25
    2f4a:	8c 93       	st	X, r24
    2f4c:	a2 85       	ldd	r26, Z+10	; 0x0a
    2f4e:	b3 85       	ldd	r27, Z+11	; 0x0b
    2f50:	9c 91       	ld	r25, X
    2f52:	81 85       	ldd	r24, Z+9	; 0x09
    2f54:	80 95       	com	r24
    2f56:	89 23       	and	r24, r25
    2f58:	8c 93       	st	X, r24
    2f5a:	88 ec       	ldi	r24, 0xC8	; 200
    2f5c:	90 e0       	ldi	r25, 0x00	; 0
    2f5e:	0e 94 2b 17 	call	0x2e56	; 0x2e56 <delay_us>
    2f62:	08 95       	ret

00002f64 <_ZN16PololuQTRSensors10emittersOnEv>:
    2f64:	fc 01       	movw	r30, r24
    2f66:	a4 85       	ldd	r26, Z+12	; 0x0c
    2f68:	b5 85       	ldd	r27, Z+13	; 0x0d
    2f6a:	10 97       	sbiw	r26, 0x00	; 0
    2f6c:	71 f0       	breq	.+28     	; 0x2f8a <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    2f6e:	8c 91       	ld	r24, X
    2f70:	91 85       	ldd	r25, Z+9	; 0x09
    2f72:	89 2b       	or	r24, r25
    2f74:	8c 93       	st	X, r24
    2f76:	a2 85       	ldd	r26, Z+10	; 0x0a
    2f78:	b3 85       	ldd	r27, Z+11	; 0x0b
    2f7a:	8c 91       	ld	r24, X
    2f7c:	91 85       	ldd	r25, Z+9	; 0x09
    2f7e:	89 2b       	or	r24, r25
    2f80:	8c 93       	st	X, r24
    2f82:	88 ec       	ldi	r24, 0xC8	; 200
    2f84:	90 e0       	ldi	r25, 0x00	; 0
    2f86:	0e 94 2b 17 	call	0x2e56	; 0x2e56 <delay_us>
    2f8a:	08 95       	ret

00002f8c <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    2f8c:	a7 e0       	ldi	r26, 0x07	; 7
    2f8e:	b0 e0       	ldi	r27, 0x00	; 0
    2f90:	ec ec       	ldi	r30, 0xCC	; 204
    2f92:	f7 e1       	ldi	r31, 0x17	; 23
    2f94:	0c 94 d2 1c 	jmp	0x39a4	; 0x39a4 <__prologue_saves__+0x6>
    2f98:	7c 01       	movw	r14, r24
    2f9a:	4b 01       	movw	r8, r22
    2f9c:	64 2f       	mov	r22, r20
    2f9e:	39 01       	movw	r6, r18
    2fa0:	40 2f       	mov	r20, r16
    2fa2:	20 e0       	ldi	r18, 0x00	; 0
    2fa4:	0e 94 70 17 	call	0x2ee0	; 0x2ee0 <_ZN16PololuQTRSensors4initEhhh>
    2fa8:	87 01       	movw	r16, r14
    2faa:	0f 5b       	subi	r16, 0xBF	; 191
    2fac:	1f 4f       	sbci	r17, 0xFF	; 255
    2fae:	f8 01       	movw	r30, r16
    2fb0:	10 82       	st	Z, r1
    2fb2:	67 01       	movw	r12, r14
    2fb4:	f2 e4       	ldi	r31, 0x42	; 66
    2fb6:	cf 0e       	add	r12, r31
    2fb8:	d1 1c       	adc	r13, r1
    2fba:	f6 01       	movw	r30, r12
    2fbc:	10 82       	st	Z, r1
    2fbe:	57 01       	movw	r10, r14
    2fc0:	f3 e4       	ldi	r31, 0x43	; 67
    2fc2:	af 0e       	add	r10, r31
    2fc4:	b1 1c       	adc	r11, r1
    2fc6:	f5 01       	movw	r30, r10
    2fc8:	10 82       	st	Z, r1
    2fca:	f7 01       	movw	r30, r14
    2fcc:	77 86       	std	Z+15, r7	; 0x0f
    2fce:	66 86       	std	Z+14, r6	; 0x0e
    2fd0:	51 2c       	mov	r5, r1
    2fd2:	f7 01       	movw	r30, r14
    2fd4:	80 85       	ldd	r24, Z+8	; 0x08
    2fd6:	58 16       	cp	r5, r24
    2fd8:	50 f5       	brcc	.+84     	; 0x302e <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    2fda:	65 2c       	mov	r6, r5
    2fdc:	71 2c       	mov	r7, r1
    2fde:	f4 01       	movw	r30, r8
    2fe0:	e6 0d       	add	r30, r6
    2fe2:	f7 1d       	adc	r31, r7
    2fe4:	60 81       	ld	r22, Z
    2fe6:	ce 01       	movw	r24, r28
    2fe8:	01 96       	adiw	r24, 0x01	; 1
    2fea:	0e 94 33 17 	call	0x2e66	; 0x2e66 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    2fee:	2f 81       	ldd	r18, Y+7	; 0x07
    2ff0:	f7 01       	movw	r30, r14
    2ff2:	e6 0d       	add	r30, r6
    2ff4:	f7 1d       	adc	r31, r7
    2ff6:	21 8b       	std	Z+17, r18	; 0x11
    2ff8:	89 81       	ldd	r24, Y+1	; 0x01
    2ffa:	9a 81       	ldd	r25, Y+2	; 0x02
    2ffc:	f3 01       	movw	r30, r6
    2ffe:	ee 0f       	add	r30, r30
    3000:	ff 1f       	adc	r31, r31
    3002:	ee 0d       	add	r30, r14
    3004:	ff 1d       	adc	r31, r15
    3006:	92 a3       	std	Z+34, r25	; 0x22
    3008:	81 a3       	std	Z+33, r24	; 0x21
    300a:	83 32       	cpi	r24, 0x23	; 35
    300c:	91 05       	cpc	r25, r1
    300e:	11 f4       	brne	.+4      	; 0x3014 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    3010:	f8 01       	movw	r30, r16
    3012:	08 c0       	rjmp	.+16     	; 0x3024 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    3014:	86 32       	cpi	r24, 0x26	; 38
    3016:	91 05       	cpc	r25, r1
    3018:	11 f4       	brne	.+4      	; 0x301e <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    301a:	f6 01       	movw	r30, r12
    301c:	03 c0       	rjmp	.+6      	; 0x3024 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    301e:	89 97       	sbiw	r24, 0x29	; 41
    3020:	21 f4       	brne	.+8      	; 0x302a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    3022:	f5 01       	movw	r30, r10
    3024:	80 81       	ld	r24, Z
    3026:	82 2b       	or	r24, r18
    3028:	80 83       	st	Z, r24
    302a:	53 94       	inc	r5
    302c:	d2 cf       	rjmp	.-92     	; 0x2fd2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    302e:	27 96       	adiw	r28, 0x07	; 7
    3030:	ef e0       	ldi	r30, 0x0F	; 15
    3032:	0c 94 ee 1c 	jmp	0x39dc	; 0x39dc <__epilogue_restores__+0x6>

00003036 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    3036:	a0 e0       	ldi	r26, 0x00	; 0
    3038:	b0 e0       	ldi	r27, 0x00	; 0
    303a:	e1 e2       	ldi	r30, 0x21	; 33
    303c:	f8 e1       	ldi	r31, 0x18	; 24
    303e:	0c 94 d4 1c 	jmp	0x39a8	; 0x39a8 <__prologue_saves__+0xa>
    3042:	ec 01       	movw	r28, r24
    3044:	5b 01       	movw	r10, r22
    3046:	6c 01       	movw	r12, r24
    3048:	81 e4       	ldi	r24, 0x41	; 65
    304a:	c8 0e       	add	r12, r24
    304c:	d1 1c       	adc	r13, r1
    304e:	f6 01       	movw	r30, r12
    3050:	80 80       	ld	r8, Z
    3052:	7e 01       	movw	r14, r28
    3054:	f2 e4       	ldi	r31, 0x42	; 66
    3056:	ef 0e       	add	r14, r31
    3058:	f1 1c       	adc	r15, r1
    305a:	f7 01       	movw	r30, r14
    305c:	70 80       	ld	r7, Z
    305e:	8e 01       	movw	r16, r28
    3060:	0d 5b       	subi	r16, 0xBD	; 189
    3062:	1f 4f       	sbci	r17, 0xFF	; 255
    3064:	f8 01       	movw	r30, r16
    3066:	90 80       	ld	r9, Z
    3068:	80 e0       	ldi	r24, 0x00	; 0
    306a:	98 85       	ldd	r25, Y+8	; 0x08
    306c:	89 17       	cp	r24, r25
    306e:	48 f4       	brcc	.+18     	; 0x3082 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    3070:	f5 01       	movw	r30, r10
    3072:	e8 0f       	add	r30, r24
    3074:	f1 1d       	adc	r31, r1
    3076:	e8 0f       	add	r30, r24
    3078:	f1 1d       	adc	r31, r1
    307a:	11 82       	std	Z+1, r1	; 0x01
    307c:	10 82       	st	Z, r1
    307e:	8f 5f       	subi	r24, 0xFF	; 255
    3080:	f4 cf       	rjmp	.-24     	; 0x306a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    3082:	84 b1       	in	r24, 0x04	; 4
    3084:	f6 01       	movw	r30, r12
    3086:	90 81       	ld	r25, Z
    3088:	89 2b       	or	r24, r25
    308a:	84 b9       	out	0x04, r24	; 4
    308c:	87 b1       	in	r24, 0x07	; 7
    308e:	f7 01       	movw	r30, r14
    3090:	90 81       	ld	r25, Z
    3092:	89 2b       	or	r24, r25
    3094:	87 b9       	out	0x07, r24	; 7
    3096:	8a b1       	in	r24, 0x0a	; 10
    3098:	f8 01       	movw	r30, r16
    309a:	90 81       	ld	r25, Z
    309c:	89 2b       	or	r24, r25
    309e:	8a b9       	out	0x0a, r24	; 10
    30a0:	85 b1       	in	r24, 0x05	; 5
    30a2:	f6 01       	movw	r30, r12
    30a4:	90 81       	ld	r25, Z
    30a6:	89 2b       	or	r24, r25
    30a8:	85 b9       	out	0x05, r24	; 5
    30aa:	88 b1       	in	r24, 0x08	; 8
    30ac:	f7 01       	movw	r30, r14
    30ae:	90 81       	ld	r25, Z
    30b0:	89 2b       	or	r24, r25
    30b2:	88 b9       	out	0x08, r24	; 8
    30b4:	8b b1       	in	r24, 0x0b	; 11
    30b6:	f8 01       	movw	r30, r16
    30b8:	90 81       	ld	r25, Z
    30ba:	89 2b       	or	r24, r25
    30bc:	8b b9       	out	0x0b, r24	; 11
    30be:	8a e0       	ldi	r24, 0x0A	; 10
    30c0:	90 e0       	ldi	r25, 0x00	; 0
    30c2:	0e 94 2b 17 	call	0x2e56	; 0x2e56 <delay_us>
    30c6:	94 b1       	in	r25, 0x04	; 4
    30c8:	f6 01       	movw	r30, r12
    30ca:	80 81       	ld	r24, Z
    30cc:	80 95       	com	r24
    30ce:	89 23       	and	r24, r25
    30d0:	84 b9       	out	0x04, r24	; 4
    30d2:	97 b1       	in	r25, 0x07	; 7
    30d4:	f7 01       	movw	r30, r14
    30d6:	80 81       	ld	r24, Z
    30d8:	80 95       	com	r24
    30da:	89 23       	and	r24, r25
    30dc:	87 b9       	out	0x07, r24	; 7
    30de:	9a b1       	in	r25, 0x0a	; 10
    30e0:	f8 01       	movw	r30, r16
    30e2:	80 81       	ld	r24, Z
    30e4:	80 95       	com	r24
    30e6:	89 23       	and	r24, r25
    30e8:	8a b9       	out	0x0a, r24	; 10
    30ea:	95 b1       	in	r25, 0x05	; 5
    30ec:	f6 01       	movw	r30, r12
    30ee:	80 81       	ld	r24, Z
    30f0:	80 95       	com	r24
    30f2:	89 23       	and	r24, r25
    30f4:	85 b9       	out	0x05, r24	; 5
    30f6:	98 b1       	in	r25, 0x08	; 8
    30f8:	f7 01       	movw	r30, r14
    30fa:	80 81       	ld	r24, Z
    30fc:	80 95       	com	r24
    30fe:	89 23       	and	r24, r25
    3100:	88 b9       	out	0x08, r24	; 8
    3102:	9b b1       	in	r25, 0x0b	; 11
    3104:	f8 01       	movw	r30, r16
    3106:	80 81       	ld	r24, Z
    3108:	80 95       	com	r24
    310a:	89 23       	and	r24, r25
    310c:	8b b9       	out	0x0b, r24	; 11
    310e:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    3112:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    3116:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    311a:	83 60       	ori	r24, 0x03	; 3
    311c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    3120:	82 e0       	ldi	r24, 0x02	; 2
    3122:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    3126:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    312a:	80 e0       	ldi	r24, 0x00	; 0
    312c:	90 e0       	ldi	r25, 0x00	; 0
    312e:	2e 85       	ldd	r18, Y+14	; 0x0e
    3130:	3f 85       	ldd	r19, Y+15	; 0x0f
    3132:	82 17       	cp	r24, r18
    3134:	93 07       	cpc	r25, r19
    3136:	20 f5       	brcc	.+72     	; 0x3180 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    3138:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    313c:	2c 2d       	mov	r18, r12
    313e:	24 1b       	sub	r18, r20
    3140:	82 0f       	add	r24, r18
    3142:	91 1d       	adc	r25, r1
    3144:	03 b1       	in	r16, 0x03	; 3
    3146:	08 11       	cpse	r16, r8
    3148:	32 c0       	rjmp	.+100    	; 0x31ae <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    314a:	f6 b0       	in	r15, 0x06	; 6
    314c:	f7 10       	cpse	r15, r7
    314e:	2f c0       	rjmp	.+94     	; 0x31ae <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    3150:	29 b1       	in	r18, 0x09	; 9
    3152:	29 11       	cpse	r18, r9
    3154:	2c c0       	rjmp	.+88     	; 0x31ae <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    3156:	10 c0       	rjmp	.+32     	; 0x3178 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    3158:	21 2f       	mov	r18, r17
    315a:	30 e0       	ldi	r19, 0x00	; 0
    315c:	a9 01       	movw	r20, r18
    315e:	44 0f       	add	r20, r20
    3160:	55 1f       	adc	r21, r21
    3162:	f5 01       	movw	r30, r10
    3164:	e4 0f       	add	r30, r20
    3166:	f5 1f       	adc	r31, r21
    3168:	60 81       	ld	r22, Z
    316a:	71 81       	ldd	r23, Z+1	; 0x01
    316c:	67 2b       	or	r22, r23
    316e:	21 f1       	breq	.+72     	; 0x31b8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    3170:	1f 5f       	subi	r17, 0xFF	; 255
    3172:	28 85       	ldd	r18, Y+8	; 0x08
    3174:	12 17       	cp	r17, r18
    3176:	80 f3       	brcs	.-32     	; 0x3158 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    3178:	7f 2c       	mov	r7, r15
    317a:	80 2e       	mov	r8, r16
    317c:	4c 2d       	mov	r20, r12
    317e:	d7 cf       	rjmp	.-82     	; 0x312e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    3180:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    3184:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    3188:	20 e0       	ldi	r18, 0x00	; 0
    318a:	88 85       	ldd	r24, Y+8	; 0x08
    318c:	28 17       	cp	r18, r24
    318e:	30 f5       	brcc	.+76     	; 0x31dc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    3190:	f5 01       	movw	r30, r10
    3192:	e2 0f       	add	r30, r18
    3194:	f1 1d       	adc	r31, r1
    3196:	e2 0f       	add	r30, r18
    3198:	f1 1d       	adc	r31, r1
    319a:	80 81       	ld	r24, Z
    319c:	91 81       	ldd	r25, Z+1	; 0x01
    319e:	89 2b       	or	r24, r25
    31a0:	21 f4       	brne	.+8      	; 0x31aa <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    31a2:	8e 85       	ldd	r24, Y+14	; 0x0e
    31a4:	9f 85       	ldd	r25, Y+15	; 0x0f
    31a6:	91 83       	std	Z+1, r25	; 0x01
    31a8:	80 83       	st	Z, r24
    31aa:	2f 5f       	subi	r18, 0xFF	; 255
    31ac:	ee cf       	rjmp	.-36     	; 0x318a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    31ae:	03 b1       	in	r16, 0x03	; 3
    31b0:	f6 b0       	in	r15, 0x06	; 6
    31b2:	99 b0       	in	r9, 0x09	; 9
    31b4:	10 e0       	ldi	r17, 0x00	; 0
    31b6:	dd cf       	rjmp	.-70     	; 0x3172 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    31b8:	de 01       	movw	r26, r28
    31ba:	a4 0f       	add	r26, r20
    31bc:	b5 1f       	adc	r27, r21
    31be:	91 96       	adiw	r26, 0x21	; 33
    31c0:	0d 90       	ld	r0, X+
    31c2:	bc 91       	ld	r27, X
    31c4:	a0 2d       	mov	r26, r0
    31c6:	4c 91       	ld	r20, X
    31c8:	de 01       	movw	r26, r28
    31ca:	a2 0f       	add	r26, r18
    31cc:	b3 1f       	adc	r27, r19
    31ce:	51 96       	adiw	r26, 0x11	; 17
    31d0:	2c 91       	ld	r18, X
    31d2:	42 23       	and	r20, r18
    31d4:	69 f6       	brne	.-102    	; 0x3170 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    31d6:	91 83       	std	Z+1, r25	; 0x01
    31d8:	80 83       	st	Z, r24
    31da:	ca cf       	rjmp	.-108    	; 0x3170 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    31dc:	cd b7       	in	r28, 0x3d	; 61
    31de:	de b7       	in	r29, 0x3e	; 62
    31e0:	ed e0       	ldi	r30, 0x0D	; 13
    31e2:	0c 94 f0 1c 	jmp	0x39e0	; 0x39e0 <__epilogue_restores__+0xa>

000031e6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    31e6:	ef 92       	push	r14
    31e8:	ff 92       	push	r15
    31ea:	0f 93       	push	r16
    31ec:	1f 93       	push	r17
    31ee:	cf 93       	push	r28
    31f0:	df 93       	push	r29
    31f2:	fc 01       	movw	r30, r24
    31f4:	9b 01       	movw	r18, r22
    31f6:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    31fa:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    31fe:	47 b1       	in	r20, 0x07	; 7
    3200:	18 b1       	in	r17, 0x08	; 8
    3202:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3206:	86 fd       	sbrc	r24, 6
    3208:	fc cf       	rjmp	.-8      	; 0x3202 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    320a:	80 e0       	ldi	r24, 0x00	; 0
    320c:	90 85       	ldd	r25, Z+8	; 0x08
    320e:	89 17       	cp	r24, r25
    3210:	48 f4       	brcc	.+18     	; 0x3224 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    3212:	d9 01       	movw	r26, r18
    3214:	a8 0f       	add	r26, r24
    3216:	b1 1d       	adc	r27, r1
    3218:	a8 0f       	add	r26, r24
    321a:	b1 1d       	adc	r27, r1
    321c:	1d 92       	st	X+, r1
    321e:	1c 92       	st	X, r1
    3220:	8f 5f       	subi	r24, 0xFF	; 255
    3222:	f4 cf       	rjmp	.-24     	; 0x320c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    3224:	97 b1       	in	r25, 0x07	; 7
    3226:	82 a1       	ldd	r24, Z+34	; 0x22
    3228:	80 95       	com	r24
    322a:	89 23       	and	r24, r25
    322c:	87 b9       	out	0x07, r24	; 7
    322e:	98 b1       	in	r25, 0x08	; 8
    3230:	82 a1       	ldd	r24, Z+34	; 0x22
    3232:	80 95       	com	r24
    3234:	89 23       	and	r24, r25
    3236:	88 b9       	out	0x08, r24	; 8
    3238:	87 e8       	ldi	r24, 0x87	; 135
    323a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    323e:	e1 2c       	mov	r14, r1
    3240:	81 a1       	ldd	r24, Z+33	; 0x21
    3242:	e8 16       	cp	r14, r24
    3244:	10 f0       	brcs	.+4      	; 0x324a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    3246:	e1 2c       	mov	r14, r1
    3248:	29 c0       	rjmp	.+82     	; 0x329c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    324a:	50 e0       	ldi	r21, 0x00	; 0
    324c:	80 85       	ldd	r24, Z+8	; 0x08
    324e:	58 17       	cp	r21, r24
    3250:	18 f5       	brcc	.+70     	; 0x3298 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    3252:	a5 2f       	mov	r26, r21
    3254:	b0 e0       	ldi	r27, 0x00	; 0
    3256:	ef 01       	movw	r28, r30
    3258:	ca 0f       	add	r28, r26
    325a:	db 1f       	adc	r29, r27
    325c:	89 89       	ldd	r24, Y+17	; 0x11
    325e:	80 64       	ori	r24, 0x40	; 64
    3260:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    3264:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3268:	80 64       	ori	r24, 0x40	; 64
    326a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    326e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3272:	86 fd       	sbrc	r24, 6
    3274:	fc cf       	rjmp	.-8      	; 0x326e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    3276:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    327a:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    327e:	aa 0f       	add	r26, r26
    3280:	bb 1f       	adc	r27, r27
    3282:	a2 0f       	add	r26, r18
    3284:	b3 1f       	adc	r27, r19
    3286:	8d 91       	ld	r24, X+
    3288:	9c 91       	ld	r25, X
    328a:	11 97       	sbiw	r26, 0x01	; 1
    328c:	86 0f       	add	r24, r22
    328e:	97 1f       	adc	r25, r23
    3290:	8d 93       	st	X+, r24
    3292:	9c 93       	st	X, r25
    3294:	5f 5f       	subi	r21, 0xFF	; 255
    3296:	da cf       	rjmp	.-76     	; 0x324c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    3298:	e3 94       	inc	r14
    329a:	d2 cf       	rjmp	.-92     	; 0x3240 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    329c:	80 85       	ldd	r24, Z+8	; 0x08
    329e:	e8 16       	cp	r14, r24
    32a0:	a0 f4       	brcc	.+40     	; 0x32ca <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    32a2:	e9 01       	movw	r28, r18
    32a4:	ce 0d       	add	r28, r14
    32a6:	d1 1d       	adc	r29, r1
    32a8:	ce 0d       	add	r28, r14
    32aa:	d1 1d       	adc	r29, r1
    32ac:	61 a1       	ldd	r22, Z+33	; 0x21
    32ae:	70 e0       	ldi	r23, 0x00	; 0
    32b0:	cb 01       	movw	r24, r22
    32b2:	95 95       	asr	r25
    32b4:	87 95       	ror	r24
    32b6:	a8 81       	ld	r26, Y
    32b8:	b9 81       	ldd	r27, Y+1	; 0x01
    32ba:	8a 0f       	add	r24, r26
    32bc:	9b 1f       	adc	r25, r27
    32be:	0e 94 3e 1c 	call	0x387c	; 0x387c <__udivmodhi4>
    32c2:	79 83       	std	Y+1, r23	; 0x01
    32c4:	68 83       	st	Y, r22
    32c6:	e3 94       	inc	r14
    32c8:	e9 cf       	rjmp	.-46     	; 0x329c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    32ca:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    32ce:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    32d2:	18 b9       	out	0x08, r17	; 8
    32d4:	47 b9       	out	0x07, r20	; 7
    32d6:	cd b7       	in	r28, 0x3d	; 61
    32d8:	de b7       	in	r29, 0x3e	; 62
    32da:	e6 e0       	ldi	r30, 0x06	; 6
    32dc:	0c 94 f7 1c 	jmp	0x39ee	; 0x39ee <__epilogue_restores__+0x18>

000032e0 <_ZN16PololuQTRSensors4readEPjh>:
    32e0:	a0 e2       	ldi	r26, 0x20	; 32
    32e2:	b0 e0       	ldi	r27, 0x00	; 0
    32e4:	e6 e7       	ldi	r30, 0x76	; 118
    32e6:	f9 e1       	ldi	r31, 0x19	; 25
    32e8:	0c 94 da 1c 	jmp	0x39b4	; 0x39b4 <__prologue_saves__+0x16>
    32ec:	8c 01       	movw	r16, r24
    32ee:	7b 01       	movw	r14, r22
    32f0:	d4 2e       	mov	r13, r20
    32f2:	8f ef       	ldi	r24, 0xFF	; 255
    32f4:	84 0f       	add	r24, r20
    32f6:	82 30       	cpi	r24, 0x02	; 2
    32f8:	18 f4       	brcc	.+6      	; 0x3300 <_ZN16PololuQTRSensors4readEPjh+0x20>
    32fa:	c8 01       	movw	r24, r16
    32fc:	0e 94 b2 17 	call	0x2f64	; 0x2f64 <_ZN16PololuQTRSensors10emittersOnEv>
    3300:	d8 01       	movw	r26, r16
    3302:	50 96       	adiw	r26, 0x10	; 16
    3304:	8c 91       	ld	r24, X
    3306:	b7 01       	movw	r22, r14
    3308:	81 11       	cpse	r24, r1
    330a:	10 c0       	rjmp	.+32     	; 0x332c <_ZN16PololuQTRSensors4readEPjh+0x4c>
    330c:	c8 01       	movw	r24, r16
    330e:	0e 94 1b 18 	call	0x3036	; 0x3036 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    3312:	c8 01       	movw	r24, r16
    3314:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <_ZN16PololuQTRSensors11emittersOffEv>
    3318:	b2 e0       	ldi	r27, 0x02	; 2
    331a:	db 12       	cpse	r13, r27
    331c:	3a c0       	rjmp	.+116    	; 0x3392 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    331e:	be 01       	movw	r22, r28
    3320:	6f 5f       	subi	r22, 0xFF	; 255
    3322:	7f 4f       	sbci	r23, 0xFF	; 255
    3324:	c8 01       	movw	r24, r16
    3326:	0e 94 1b 18 	call	0x3036	; 0x3036 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    332a:	0f c0       	rjmp	.+30     	; 0x334a <_ZN16PololuQTRSensors4readEPjh+0x6a>
    332c:	c8 01       	movw	r24, r16
    332e:	0e 94 f3 18 	call	0x31e6	; 0x31e6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    3332:	c8 01       	movw	r24, r16
    3334:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <_ZN16PololuQTRSensors11emittersOffEv>
    3338:	e2 e0       	ldi	r30, 0x02	; 2
    333a:	de 12       	cpse	r13, r30
    333c:	2a c0       	rjmp	.+84     	; 0x3392 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    333e:	be 01       	movw	r22, r28
    3340:	6f 5f       	subi	r22, 0xFF	; 255
    3342:	7f 4f       	sbci	r23, 0xFF	; 255
    3344:	c8 01       	movw	r24, r16
    3346:	0e 94 f3 18 	call	0x31e6	; 0x31e6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    334a:	40 e0       	ldi	r20, 0x00	; 0
    334c:	f8 01       	movw	r30, r16
    334e:	80 85       	ldd	r24, Z+8	; 0x08
    3350:	48 17       	cp	r20, r24
    3352:	f8 f4       	brcc	.+62     	; 0x3392 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    3354:	84 2f       	mov	r24, r20
    3356:	90 e0       	ldi	r25, 0x00	; 0
    3358:	88 0f       	add	r24, r24
    335a:	99 1f       	adc	r25, r25
    335c:	f7 01       	movw	r30, r14
    335e:	e8 0f       	add	r30, r24
    3360:	f9 1f       	adc	r31, r25
    3362:	21 e0       	ldi	r18, 0x01	; 1
    3364:	30 e0       	ldi	r19, 0x00	; 0
    3366:	2c 0f       	add	r18, r28
    3368:	3d 1f       	adc	r19, r29
    336a:	82 0f       	add	r24, r18
    336c:	93 1f       	adc	r25, r19
    336e:	d8 01       	movw	r26, r16
    3370:	1e 96       	adiw	r26, 0x0e	; 14
    3372:	2d 91       	ld	r18, X+
    3374:	3c 91       	ld	r19, X
    3376:	1f 97       	sbiw	r26, 0x0f	; 15
    3378:	dc 01       	movw	r26, r24
    337a:	8d 91       	ld	r24, X+
    337c:	9c 91       	ld	r25, X
    337e:	28 1b       	sub	r18, r24
    3380:	39 0b       	sbc	r19, r25
    3382:	80 81       	ld	r24, Z
    3384:	91 81       	ldd	r25, Z+1	; 0x01
    3386:	82 0f       	add	r24, r18
    3388:	93 1f       	adc	r25, r19
    338a:	91 83       	std	Z+1, r25	; 0x01
    338c:	80 83       	st	Z, r24
    338e:	4f 5f       	subi	r20, 0xFF	; 255
    3390:	dd cf       	rjmp	.-70     	; 0x334c <_ZN16PololuQTRSensors4readEPjh+0x6c>
    3392:	a0 96       	adiw	r28, 0x20	; 32
    3394:	e7 e0       	ldi	r30, 0x07	; 7
    3396:	0c 94 f6 1c 	jmp	0x39ec	; 0x39ec <__epilogue_restores__+0x16>

0000339a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    339a:	2f 92       	push	r2
    339c:	3f 92       	push	r3
    339e:	5f 92       	push	r5
    33a0:	6f 92       	push	r6
    33a2:	7f 92       	push	r7
    33a4:	8f 92       	push	r8
    33a6:	9f 92       	push	r9
    33a8:	af 92       	push	r10
    33aa:	bf 92       	push	r11
    33ac:	cf 92       	push	r12
    33ae:	df 92       	push	r13
    33b0:	ef 92       	push	r14
    33b2:	ff 92       	push	r15
    33b4:	0f 93       	push	r16
    33b6:	1f 93       	push	r17
    33b8:	cf 93       	push	r28
    33ba:	df 93       	push	r29
    33bc:	cd b7       	in	r28, 0x3d	; 61
    33be:	de b7       	in	r29, 0x3e	; 62
    33c0:	c0 56       	subi	r28, 0x60	; 96
    33c2:	d1 09       	sbc	r29, r1
    33c4:	0f b6       	in	r0, 0x3f	; 63
    33c6:	f8 94       	cli
    33c8:	de bf       	out	0x3e, r29	; 62
    33ca:	0f be       	out	0x3f, r0	; 63
    33cc:	cd bf       	out	0x3d, r28	; 61
    33ce:	8c 01       	movw	r16, r24
    33d0:	4b 01       	movw	r8, r22
    33d2:	5a 01       	movw	r10, r20
    33d4:	52 2e       	mov	r5, r18
    33d6:	da 01       	movw	r26, r20
    33d8:	8d 91       	ld	r24, X+
    33da:	9c 91       	ld	r25, X
    33dc:	89 2b       	or	r24, r25
    33de:	31 f0       	breq	.+12     	; 0x33ec <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    33e0:	f4 01       	movw	r30, r8
    33e2:	80 81       	ld	r24, Z
    33e4:	91 81       	ldd	r25, Z+1	; 0x01
    33e6:	89 2b       	or	r24, r25
    33e8:	f1 f4       	brne	.+60     	; 0x3426 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    33ea:	24 c0       	rjmp	.+72     	; 0x3434 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    33ec:	d8 01       	movw	r26, r16
    33ee:	18 96       	adiw	r26, 0x08	; 8
    33f0:	8c 91       	ld	r24, X
    33f2:	90 e0       	ldi	r25, 0x00	; 0
    33f4:	88 0f       	add	r24, r24
    33f6:	99 1f       	adc	r25, r25
    33f8:	0e 94 06 1d 	call	0x3a0c	; 0x3a0c <malloc>
    33fc:	f5 01       	movw	r30, r10
    33fe:	91 83       	std	Z+1, r25	; 0x01
    3400:	80 83       	st	Z, r24
    3402:	00 97       	sbiw	r24, 0x00	; 0
    3404:	09 f4       	brne	.+2      	; 0x3408 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    3406:	b1 c0       	rjmp	.+354    	; 0x356a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    3408:	fc 01       	movw	r30, r24
    340a:	20 e0       	ldi	r18, 0x00	; 0
    340c:	30 e0       	ldi	r19, 0x00	; 0
    340e:	d8 01       	movw	r26, r16
    3410:	18 96       	adiw	r26, 0x08	; 8
    3412:	8c 91       	ld	r24, X
    3414:	90 e0       	ldi	r25, 0x00	; 0
    3416:	28 17       	cp	r18, r24
    3418:	39 07       	cpc	r19, r25
    341a:	14 f7       	brge	.-60     	; 0x33e0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    341c:	11 92       	st	Z+, r1
    341e:	11 92       	st	Z+, r1
    3420:	2f 5f       	subi	r18, 0xFF	; 255
    3422:	3f 4f       	sbci	r19, 0xFF	; 255
    3424:	f4 cf       	rjmp	.-24     	; 0x340e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    3426:	e1 2c       	mov	r14, r1
    3428:	f1 2c       	mov	r15, r1
    342a:	6e 01       	movw	r12, r28
    342c:	b1 e2       	ldi	r27, 0x21	; 33
    342e:	cb 0e       	add	r12, r27
    3430:	d1 1c       	adc	r13, r1
    3432:	21 c0       	rjmp	.+66     	; 0x3476 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    3434:	f8 01       	movw	r30, r16
    3436:	80 85       	ldd	r24, Z+8	; 0x08
    3438:	90 e0       	ldi	r25, 0x00	; 0
    343a:	88 0f       	add	r24, r24
    343c:	99 1f       	adc	r25, r25
    343e:	0e 94 06 1d 	call	0x3a0c	; 0x3a0c <malloc>
    3442:	d4 01       	movw	r26, r8
    3444:	8d 93       	st	X+, r24
    3446:	9c 93       	st	X, r25
    3448:	00 97       	sbiw	r24, 0x00	; 0
    344a:	09 f4       	brne	.+2      	; 0x344e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    344c:	8e c0       	rjmp	.+284    	; 0x356a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    344e:	fc 01       	movw	r30, r24
    3450:	20 e0       	ldi	r18, 0x00	; 0
    3452:	30 e0       	ldi	r19, 0x00	; 0
    3454:	d8 01       	movw	r26, r16
    3456:	18 96       	adiw	r26, 0x08	; 8
    3458:	8c 91       	ld	r24, X
    345a:	90 e0       	ldi	r25, 0x00	; 0
    345c:	28 17       	cp	r18, r24
    345e:	39 07       	cpc	r19, r25
    3460:	14 f7       	brge	.-60     	; 0x3426 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    3462:	d8 01       	movw	r26, r16
    3464:	1e 96       	adiw	r26, 0x0e	; 14
    3466:	8d 91       	ld	r24, X+
    3468:	9c 91       	ld	r25, X
    346a:	1f 97       	sbiw	r26, 0x0f	; 15
    346c:	81 93       	st	Z+, r24
    346e:	91 93       	st	Z+, r25
    3470:	2f 5f       	subi	r18, 0xFF	; 255
    3472:	3f 4f       	sbci	r19, 0xFF	; 255
    3474:	ef cf       	rjmp	.-34     	; 0x3454 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    3476:	45 2d       	mov	r20, r5
    3478:	be 01       	movw	r22, r28
    347a:	6f 5b       	subi	r22, 0xBF	; 191
    347c:	7f 4f       	sbci	r23, 0xFF	; 255
    347e:	c8 01       	movw	r24, r16
    3480:	0e 94 70 19 	call	0x32e0	; 0x32e0 <_ZN16PololuQTRSensors4readEPjh>
    3484:	f8 01       	movw	r30, r16
    3486:	60 84       	ldd	r6, Z+8	; 0x08
    3488:	71 2c       	mov	r7, r1
    348a:	fe 01       	movw	r30, r28
    348c:	ef 5b       	subi	r30, 0xBF	; 191
    348e:	ff 4f       	sbci	r31, 0xFF	; 255
    3490:	c6 01       	movw	r24, r12
    3492:	9e 01       	movw	r18, r28
    3494:	2f 5f       	subi	r18, 0xFF	; 255
    3496:	3f 4f       	sbci	r19, 0xFF	; 255
    3498:	19 01       	movw	r2, r18
    349a:	20 e0       	ldi	r18, 0x00	; 0
    349c:	30 e0       	ldi	r19, 0x00	; 0
    349e:	26 15       	cp	r18, r6
    34a0:	37 05       	cpc	r19, r7
    34a2:	4c f5       	brge	.+82     	; 0x34f6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    34a4:	e1 14       	cp	r14, r1
    34a6:	f1 04       	cpc	r15, r1
    34a8:	89 f0       	breq	.+34     	; 0x34cc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    34aa:	dc 01       	movw	r26, r24
    34ac:	6d 91       	ld	r22, X+
    34ae:	7c 91       	ld	r23, X
    34b0:	40 81       	ld	r20, Z
    34b2:	51 81       	ldd	r21, Z+1	; 0x01
    34b4:	64 17       	cp	r22, r20
    34b6:	75 07       	cpc	r23, r21
    34b8:	48 f0       	brcs	.+18     	; 0x34cc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    34ba:	d1 01       	movw	r26, r2
    34bc:	6d 91       	ld	r22, X+
    34be:	7c 91       	ld	r23, X
    34c0:	40 81       	ld	r20, Z
    34c2:	51 81       	ldd	r21, Z+1	; 0x01
    34c4:	46 17       	cp	r20, r22
    34c6:	57 07       	cpc	r21, r23
    34c8:	48 f0       	brcs	.+18     	; 0x34dc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    34ca:	0d c0       	rjmp	.+26     	; 0x34e6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    34cc:	40 81       	ld	r20, Z
    34ce:	51 81       	ldd	r21, Z+1	; 0x01
    34d0:	dc 01       	movw	r26, r24
    34d2:	4d 93       	st	X+, r20
    34d4:	5c 93       	st	X, r21
    34d6:	e1 14       	cp	r14, r1
    34d8:	f1 04       	cpc	r15, r1
    34da:	79 f7       	brne	.-34     	; 0x34ba <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    34dc:	40 81       	ld	r20, Z
    34de:	51 81       	ldd	r21, Z+1	; 0x01
    34e0:	d1 01       	movw	r26, r2
    34e2:	4d 93       	st	X+, r20
    34e4:	5c 93       	st	X, r21
    34e6:	2f 5f       	subi	r18, 0xFF	; 255
    34e8:	3f 4f       	sbci	r19, 0xFF	; 255
    34ea:	b2 e0       	ldi	r27, 0x02	; 2
    34ec:	2b 0e       	add	r2, r27
    34ee:	31 1c       	adc	r3, r1
    34f0:	32 96       	adiw	r30, 0x02	; 2
    34f2:	02 96       	adiw	r24, 0x02	; 2
    34f4:	d4 cf       	rjmp	.-88     	; 0x349e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    34f6:	ef ef       	ldi	r30, 0xFF	; 255
    34f8:	ee 1a       	sub	r14, r30
    34fa:	fe 0a       	sbc	r15, r30
    34fc:	fa e0       	ldi	r31, 0x0A	; 10
    34fe:	ef 16       	cp	r14, r31
    3500:	f1 04       	cpc	r15, r1
    3502:	09 f0       	breq	.+2      	; 0x3506 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    3504:	b8 cf       	rjmp	.-144    	; 0x3476 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    3506:	9e 01       	movw	r18, r28
    3508:	2f 5f       	subi	r18, 0xFF	; 255
    350a:	3f 4f       	sbci	r19, 0xFF	; 255
    350c:	79 01       	movw	r14, r18
    350e:	36 01       	movw	r6, r12
    3510:	80 e0       	ldi	r24, 0x00	; 0
    3512:	90 e0       	ldi	r25, 0x00	; 0
    3514:	f8 01       	movw	r30, r16
    3516:	20 85       	ldd	r18, Z+8	; 0x08
    3518:	30 e0       	ldi	r19, 0x00	; 0
    351a:	82 17       	cp	r24, r18
    351c:	93 07       	cpc	r25, r19
    351e:	2c f5       	brge	.+74     	; 0x356a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    3520:	d7 01       	movw	r26, r14
    3522:	2d 91       	ld	r18, X+
    3524:	3d 91       	ld	r19, X+
    3526:	7d 01       	movw	r14, r26
    3528:	b3 01       	movw	r22, r6
    352a:	6c 19       	sub	r22, r12
    352c:	7d 09       	sbc	r23, r13
    352e:	d5 01       	movw	r26, r10
    3530:	ed 91       	ld	r30, X+
    3532:	fc 91       	ld	r31, X
    3534:	e6 0f       	add	r30, r22
    3536:	f7 1f       	adc	r31, r23
    3538:	40 81       	ld	r20, Z
    353a:	51 81       	ldd	r21, Z+1	; 0x01
    353c:	42 17       	cp	r20, r18
    353e:	53 07       	cpc	r21, r19
    3540:	10 f4       	brcc	.+4      	; 0x3546 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    3542:	31 83       	std	Z+1, r19	; 0x01
    3544:	20 83       	st	Z, r18
    3546:	f3 01       	movw	r30, r6
    3548:	21 91       	ld	r18, Z+
    354a:	31 91       	ld	r19, Z+
    354c:	3f 01       	movw	r6, r30
    354e:	d4 01       	movw	r26, r8
    3550:	ed 91       	ld	r30, X+
    3552:	fc 91       	ld	r31, X
    3554:	e6 0f       	add	r30, r22
    3556:	f7 1f       	adc	r31, r23
    3558:	40 81       	ld	r20, Z
    355a:	51 81       	ldd	r21, Z+1	; 0x01
    355c:	24 17       	cp	r18, r20
    355e:	35 07       	cpc	r19, r21
    3560:	10 f4       	brcc	.+4      	; 0x3566 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    3562:	31 83       	std	Z+1, r19	; 0x01
    3564:	20 83       	st	Z, r18
    3566:	01 96       	adiw	r24, 0x01	; 1
    3568:	d5 cf       	rjmp	.-86     	; 0x3514 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    356a:	c0 5a       	subi	r28, 0xA0	; 160
    356c:	df 4f       	sbci	r29, 0xFF	; 255
    356e:	0f b6       	in	r0, 0x3f	; 63
    3570:	f8 94       	cli
    3572:	de bf       	out	0x3e, r29	; 62
    3574:	0f be       	out	0x3f, r0	; 63
    3576:	cd bf       	out	0x3d, r28	; 61
    3578:	df 91       	pop	r29
    357a:	cf 91       	pop	r28
    357c:	1f 91       	pop	r17
    357e:	0f 91       	pop	r16
    3580:	ff 90       	pop	r15
    3582:	ef 90       	pop	r14
    3584:	df 90       	pop	r13
    3586:	cf 90       	pop	r12
    3588:	bf 90       	pop	r11
    358a:	af 90       	pop	r10
    358c:	9f 90       	pop	r9
    358e:	8f 90       	pop	r8
    3590:	7f 90       	pop	r7
    3592:	6f 90       	pop	r6
    3594:	5f 90       	pop	r5
    3596:	3f 90       	pop	r3
    3598:	2f 90       	pop	r2
    359a:	08 95       	ret

0000359c <_ZN16PololuQTRSensors9calibrateEh>:
    359c:	1f 93       	push	r17
    359e:	cf 93       	push	r28
    35a0:	df 93       	push	r29
    35a2:	ec 01       	movw	r28, r24
    35a4:	16 2f       	mov	r17, r22
    35a6:	8f ef       	ldi	r24, 0xFF	; 255
    35a8:	86 0f       	add	r24, r22
    35aa:	82 30       	cpi	r24, 0x02	; 2
    35ac:	18 f0       	brcs	.+6      	; 0x35b4 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    35ae:	66 23       	and	r22, r22
    35b0:	59 f0       	breq	.+22     	; 0x35c8 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    35b2:	14 c0       	rjmp	.+40     	; 0x35dc <_ZN16PololuQTRSensors9calibrateEh+0x40>
    35b4:	21 e0       	ldi	r18, 0x01	; 1
    35b6:	ae 01       	movw	r20, r28
    35b8:	4e 5f       	subi	r20, 0xFE	; 254
    35ba:	5f 4f       	sbci	r21, 0xFF	; 255
    35bc:	be 01       	movw	r22, r28
    35be:	ce 01       	movw	r24, r28
    35c0:	0e 94 cd 19 	call	0x339a	; 0x339a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    35c4:	12 30       	cpi	r17, 0x02	; 2
    35c6:	51 f4       	brne	.+20     	; 0x35dc <_ZN16PololuQTRSensors9calibrateEh+0x40>
    35c8:	ae 01       	movw	r20, r28
    35ca:	4a 5f       	subi	r20, 0xFA	; 250
    35cc:	5f 4f       	sbci	r21, 0xFF	; 255
    35ce:	be 01       	movw	r22, r28
    35d0:	6c 5f       	subi	r22, 0xFC	; 252
    35d2:	7f 4f       	sbci	r23, 0xFF	; 255
    35d4:	20 e0       	ldi	r18, 0x00	; 0
    35d6:	ce 01       	movw	r24, r28
    35d8:	0e 94 cd 19 	call	0x339a	; 0x339a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    35dc:	df 91       	pop	r29
    35de:	cf 91       	pop	r28
    35e0:	1f 91       	pop	r17
    35e2:	08 95       	ret

000035e4 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    35e4:	a0 e0       	ldi	r26, 0x00	; 0
    35e6:	b0 e0       	ldi	r27, 0x00	; 0
    35e8:	e8 ef       	ldi	r30, 0xF8	; 248
    35ea:	fa e1       	ldi	r31, 0x1A	; 26
    35ec:	0c 94 d8 1c 	jmp	0x39b0	; 0x39b0 <__prologue_saves__+0x12>
    35f0:	ec 01       	movw	r28, r24
    35f2:	8b 01       	movw	r16, r22
    35f4:	b4 2e       	mov	r11, r20
    35f6:	84 2f       	mov	r24, r20
    35f8:	8d 7f       	andi	r24, 0xFD	; 253
    35fa:	51 f4       	brne	.+20     	; 0x3610 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    35fc:	8c 81       	ldd	r24, Y+4	; 0x04
    35fe:	9d 81       	ldd	r25, Y+5	; 0x05
    3600:	89 2b       	or	r24, r25
    3602:	09 f4       	brne	.+2      	; 0x3606 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    3604:	97 c0       	rjmp	.+302    	; 0x3734 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3606:	8e 81       	ldd	r24, Y+6	; 0x06
    3608:	9f 81       	ldd	r25, Y+7	; 0x07
    360a:	89 2b       	or	r24, r25
    360c:	09 f4       	brne	.+2      	; 0x3610 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    360e:	92 c0       	rjmp	.+292    	; 0x3734 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3610:	8f ef       	ldi	r24, 0xFF	; 255
    3612:	8b 0d       	add	r24, r11
    3614:	82 30       	cpi	r24, 0x02	; 2
    3616:	50 f4       	brcc	.+20     	; 0x362c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    3618:	88 81       	ld	r24, Y
    361a:	99 81       	ldd	r25, Y+1	; 0x01
    361c:	89 2b       	or	r24, r25
    361e:	09 f4       	brne	.+2      	; 0x3622 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    3620:	89 c0       	rjmp	.+274    	; 0x3734 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3622:	8a 81       	ldd	r24, Y+2	; 0x02
    3624:	9b 81       	ldd	r25, Y+3	; 0x03
    3626:	89 2b       	or	r24, r25
    3628:	09 f4       	brne	.+2      	; 0x362c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    362a:	84 c0       	rjmp	.+264    	; 0x3734 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    362c:	4b 2d       	mov	r20, r11
    362e:	b8 01       	movw	r22, r16
    3630:	ce 01       	movw	r24, r28
    3632:	0e 94 70 19 	call	0x32e0	; 0x32e0 <_ZN16PololuQTRSensors4readEPjh>
    3636:	78 01       	movw	r14, r16
    3638:	00 e0       	ldi	r16, 0x00	; 0
    363a:	10 e0       	ldi	r17, 0x00	; 0
    363c:	c1 2c       	mov	r12, r1
    363e:	d1 2c       	mov	r13, r1
    3640:	88 85       	ldd	r24, Y+8	; 0x08
    3642:	90 e0       	ldi	r25, 0x00	; 0
    3644:	c8 16       	cp	r12, r24
    3646:	d9 06       	cpc	r13, r25
    3648:	0c f0       	brlt	.+2      	; 0x364c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    364a:	74 c0       	rjmp	.+232    	; 0x3734 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    364c:	81 e0       	ldi	r24, 0x01	; 1
    364e:	b8 12       	cpse	r11, r24
    3650:	0a c0       	rjmp	.+20     	; 0x3666 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    3652:	ea 81       	ldd	r30, Y+2	; 0x02
    3654:	fb 81       	ldd	r31, Y+3	; 0x03
    3656:	e0 0f       	add	r30, r16
    3658:	f1 1f       	adc	r31, r17
    365a:	01 90       	ld	r0, Z+
    365c:	f0 81       	ld	r31, Z
    365e:	e0 2d       	mov	r30, r0
    3660:	a8 81       	ld	r26, Y
    3662:	b9 81       	ldd	r27, Y+1	; 0x01
    3664:	0d c0       	rjmp	.+26     	; 0x3680 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    3666:	8c 81       	ldd	r24, Y+4	; 0x04
    3668:	9d 81       	ldd	r25, Y+5	; 0x05
    366a:	2e 81       	ldd	r18, Y+6	; 0x06
    366c:	3f 81       	ldd	r19, Y+7	; 0x07
    366e:	b1 10       	cpse	r11, r1
    3670:	0c c0       	rjmp	.+24     	; 0x368a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    3672:	f9 01       	movw	r30, r18
    3674:	e0 0f       	add	r30, r16
    3676:	f1 1f       	adc	r31, r17
    3678:	01 90       	ld	r0, Z+
    367a:	f0 81       	ld	r31, Z
    367c:	e0 2d       	mov	r30, r0
    367e:	dc 01       	movw	r26, r24
    3680:	a0 0f       	add	r26, r16
    3682:	b1 1f       	adc	r27, r17
    3684:	8d 91       	ld	r24, X+
    3686:	9c 91       	ld	r25, X
    3688:	28 c0       	rjmp	.+80     	; 0x36da <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    368a:	fc 01       	movw	r30, r24
    368c:	e0 0f       	add	r30, r16
    368e:	f1 1f       	adc	r31, r17
    3690:	40 81       	ld	r20, Z
    3692:	51 81       	ldd	r21, Z+1	; 0x01
    3694:	e8 81       	ld	r30, Y
    3696:	f9 81       	ldd	r31, Y+1	; 0x01
    3698:	e0 0f       	add	r30, r16
    369a:	f1 1f       	adc	r31, r17
    369c:	80 81       	ld	r24, Z
    369e:	91 81       	ldd	r25, Z+1	; 0x01
    36a0:	ee 85       	ldd	r30, Y+14	; 0x0e
    36a2:	ff 85       	ldd	r31, Y+15	; 0x0f
    36a4:	48 17       	cp	r20, r24
    36a6:	59 07       	cpc	r21, r25
    36a8:	10 f4       	brcc	.+4      	; 0x36ae <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    36aa:	cf 01       	movw	r24, r30
    36ac:	04 c0       	rjmp	.+8      	; 0x36b6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    36ae:	8e 0f       	add	r24, r30
    36b0:	9f 1f       	adc	r25, r31
    36b2:	84 1b       	sub	r24, r20
    36b4:	95 0b       	sbc	r25, r21
    36b6:	d9 01       	movw	r26, r18
    36b8:	a0 0f       	add	r26, r16
    36ba:	b1 1f       	adc	r27, r17
    36bc:	2d 91       	ld	r18, X+
    36be:	3c 91       	ld	r19, X
    36c0:	aa 81       	ldd	r26, Y+2	; 0x02
    36c2:	bb 81       	ldd	r27, Y+3	; 0x03
    36c4:	a0 0f       	add	r26, r16
    36c6:	b1 1f       	adc	r27, r17
    36c8:	4d 91       	ld	r20, X+
    36ca:	5c 91       	ld	r21, X
    36cc:	24 17       	cp	r18, r20
    36ce:	35 07       	cpc	r19, r21
    36d0:	20 f0       	brcs	.+8      	; 0x36da <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    36d2:	e4 0f       	add	r30, r20
    36d4:	f5 1f       	adc	r31, r21
    36d6:	e2 1b       	sub	r30, r18
    36d8:	f3 0b       	sbc	r31, r19
    36da:	e8 1b       	sub	r30, r24
    36dc:	f9 0b       	sbc	r31, r25
    36de:	a9 f0       	breq	.+42     	; 0x370a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    36e0:	d7 01       	movw	r26, r14
    36e2:	2d 91       	ld	r18, X+
    36e4:	3c 91       	ld	r19, X
    36e6:	40 e0       	ldi	r20, 0x00	; 0
    36e8:	50 e0       	ldi	r21, 0x00	; 0
    36ea:	28 1b       	sub	r18, r24
    36ec:	39 0b       	sbc	r19, r25
    36ee:	41 09       	sbc	r20, r1
    36f0:	51 09       	sbc	r21, r1
    36f2:	a8 ee       	ldi	r26, 0xE8	; 232
    36f4:	b3 e0       	ldi	r27, 0x03	; 3
    36f6:	0e 94 bc 1c 	call	0x3978	; 0x3978 <__muluhisi3>
    36fa:	9f 01       	movw	r18, r30
    36fc:	40 e0       	ldi	r20, 0x00	; 0
    36fe:	50 e0       	ldi	r21, 0x00	; 0
    3700:	0e 94 88 1c 	call	0x3910	; 0x3910 <__divmodsi4>
    3704:	37 fd       	sbrc	r19, 7
    3706:	0a c0       	rjmp	.+20     	; 0x371c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    3708:	02 c0       	rjmp	.+4      	; 0x370e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    370a:	20 e0       	ldi	r18, 0x00	; 0
    370c:	30 e0       	ldi	r19, 0x00	; 0
    370e:	29 3e       	cpi	r18, 0xE9	; 233
    3710:	b3 e0       	ldi	r27, 0x03	; 3
    3712:	3b 07       	cpc	r19, r27
    3714:	2c f0       	brlt	.+10     	; 0x3720 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    3716:	28 ee       	ldi	r18, 0xE8	; 232
    3718:	33 e0       	ldi	r19, 0x03	; 3
    371a:	02 c0       	rjmp	.+4      	; 0x3720 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    371c:	20 e0       	ldi	r18, 0x00	; 0
    371e:	30 e0       	ldi	r19, 0x00	; 0
    3720:	f7 01       	movw	r30, r14
    3722:	21 93       	st	Z+, r18
    3724:	31 93       	st	Z+, r19
    3726:	7f 01       	movw	r14, r30
    3728:	ff ef       	ldi	r31, 0xFF	; 255
    372a:	cf 1a       	sub	r12, r31
    372c:	df 0a       	sbc	r13, r31
    372e:	0e 5f       	subi	r16, 0xFE	; 254
    3730:	1f 4f       	sbci	r17, 0xFF	; 255
    3732:	86 cf       	rjmp	.-244    	; 0x3640 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    3734:	cd b7       	in	r28, 0x3d	; 61
    3736:	de b7       	in	r29, 0x3e	; 62
    3738:	e9 e0       	ldi	r30, 0x09	; 9
    373a:	0c 94 f4 1c 	jmp	0x39e8	; 0x39e8 <__epilogue_restores__+0x12>

0000373e <_ZN16PololuQTRSensors8readLineEPjhh>:
    373e:	a0 e0       	ldi	r26, 0x00	; 0
    3740:	b0 e0       	ldi	r27, 0x00	; 0
    3742:	e5 ea       	ldi	r30, 0xA5	; 165
    3744:	fb e1       	ldi	r31, 0x1B	; 27
    3746:	0c 94 cf 1c 	jmp	0x399e	; 0x399e <__prologue_saves__>
    374a:	ec 01       	movw	r28, r24
    374c:	8b 01       	movw	r16, r22
    374e:	82 2e       	mov	r8, r18
    3750:	0e 94 f2 1a 	call	0x35e4	; 0x35e4 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    3754:	28 84       	ldd	r2, Y+8	; 0x08
    3756:	e8 01       	movw	r28, r16
    3758:	41 2c       	mov	r4, r1
    375a:	51 2c       	mov	r5, r1
    375c:	32 01       	movw	r6, r4
    375e:	00 e0       	ldi	r16, 0x00	; 0
    3760:	10 e0       	ldi	r17, 0x00	; 0
    3762:	c1 2c       	mov	r12, r1
    3764:	d1 2c       	mov	r13, r1
    3766:	76 01       	movw	r14, r12
    3768:	31 2c       	mov	r3, r1
    376a:	91 2c       	mov	r9, r1
    376c:	58 ee       	ldi	r21, 0xE8	; 232
    376e:	a5 2e       	mov	r10, r21
    3770:	53 e0       	ldi	r21, 0x03	; 3
    3772:	b5 2e       	mov	r11, r21
    3774:	92 14       	cp	r9, r2
    3776:	21 f1       	breq	.+72     	; 0x37c0 <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    3778:	e9 91       	ld	r30, Y+
    377a:	f9 91       	ld	r31, Y+
    377c:	88 20       	and	r8, r8
    377e:	21 f0       	breq	.+8      	; 0x3788 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    3780:	c5 01       	movw	r24, r10
    3782:	8e 1b       	sub	r24, r30
    3784:	9f 0b       	sbc	r25, r31
    3786:	fc 01       	movw	r30, r24
    3788:	e9 3c       	cpi	r30, 0xC9	; 201
    378a:	f1 05       	cpc	r31, r1
    378c:	24 f4       	brge	.+8      	; 0x3796 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    378e:	e3 33       	cpi	r30, 0x33	; 51
    3790:	f1 05       	cpc	r31, r1
    3792:	74 f0       	brlt	.+28     	; 0x37b0 <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    3794:	02 c0       	rjmp	.+4      	; 0x379a <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    3796:	33 24       	eor	r3, r3
    3798:	33 94       	inc	r3
    379a:	df 01       	movw	r26, r30
    379c:	a3 01       	movw	r20, r6
    379e:	92 01       	movw	r18, r4
    37a0:	0e 94 c7 1c 	call	0x398e	; 0x398e <__mulshisi3>
    37a4:	c6 0e       	add	r12, r22
    37a6:	d7 1e       	adc	r13, r23
    37a8:	e8 1e       	adc	r14, r24
    37aa:	f9 1e       	adc	r15, r25
    37ac:	0e 0f       	add	r16, r30
    37ae:	1f 1f       	adc	r17, r31
    37b0:	93 94       	inc	r9
    37b2:	98 ee       	ldi	r25, 0xE8	; 232
    37b4:	49 0e       	add	r4, r25
    37b6:	93 e0       	ldi	r25, 0x03	; 3
    37b8:	59 1e       	adc	r5, r25
    37ba:	61 1c       	adc	r6, r1
    37bc:	71 1c       	adc	r7, r1
    37be:	da cf       	rjmp	.-76     	; 0x3774 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    37c0:	31 10       	cpse	r3, r1
    37c2:	1e c0       	rjmp	.+60     	; 0x3800 <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    37c4:	49 2d       	mov	r20, r9
    37c6:	50 e0       	ldi	r21, 0x00	; 0
    37c8:	41 50       	subi	r20, 0x01	; 1
    37ca:	51 09       	sbc	r21, r1
    37cc:	24 ef       	ldi	r18, 0xF4	; 244
    37ce:	31 e0       	ldi	r19, 0x01	; 1
    37d0:	42 9f       	mul	r20, r18
    37d2:	c0 01       	movw	r24, r0
    37d4:	43 9f       	mul	r20, r19
    37d6:	90 0d       	add	r25, r0
    37d8:	52 9f       	mul	r21, r18
    37da:	90 0d       	add	r25, r0
    37dc:	11 24       	eor	r1, r1
    37de:	20 91 fd 01 	lds	r18, 0x01FD	; 0x8001fd <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    37e2:	30 91 fe 01 	lds	r19, 0x01FE	; 0x8001fe <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    37e6:	28 17       	cp	r18, r24
    37e8:	39 07       	cpc	r19, r25
    37ea:	b4 f0       	brlt	.+44     	; 0x3818 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    37ec:	88 ee       	ldi	r24, 0xE8	; 232
    37ee:	93 e0       	ldi	r25, 0x03	; 3
    37f0:	48 9f       	mul	r20, r24
    37f2:	90 01       	movw	r18, r0
    37f4:	49 9f       	mul	r20, r25
    37f6:	30 0d       	add	r19, r0
    37f8:	58 9f       	mul	r21, r24
    37fa:	30 0d       	add	r19, r0
    37fc:	11 24       	eor	r1, r1
    37fe:	0e c0       	rjmp	.+28     	; 0x381c <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    3800:	98 01       	movw	r18, r16
    3802:	40 e0       	ldi	r20, 0x00	; 0
    3804:	50 e0       	ldi	r21, 0x00	; 0
    3806:	c7 01       	movw	r24, r14
    3808:	b6 01       	movw	r22, r12
    380a:	0e 94 66 1c 	call	0x38cc	; 0x38cc <__udivmodsi4>
    380e:	30 93 fe 01 	sts	0x01FE, r19	; 0x8001fe <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    3812:	20 93 fd 01 	sts	0x01FD, r18	; 0x8001fd <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    3816:	02 c0       	rjmp	.+4      	; 0x381c <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    3818:	20 e0       	ldi	r18, 0x00	; 0
    381a:	30 e0       	ldi	r19, 0x00	; 0
    381c:	c9 01       	movw	r24, r18
    381e:	cd b7       	in	r28, 0x3d	; 61
    3820:	de b7       	in	r29, 0x3e	; 62
    3822:	e2 e1       	ldi	r30, 0x12	; 18
    3824:	0c 94 eb 1c 	jmp	0x39d6	; 0x39d6 <__epilogue_restores__>

00003828 <_ZN16PololuQTRSensorsD1Ev>:
    3828:	cf 93       	push	r28
    382a:	df 93       	push	r29
    382c:	ec 01       	movw	r28, r24
    382e:	8a 81       	ldd	r24, Y+2	; 0x02
    3830:	9b 81       	ldd	r25, Y+3	; 0x03
    3832:	00 97       	sbiw	r24, 0x00	; 0
    3834:	11 f0       	breq	.+4      	; 0x383a <_ZN16PololuQTRSensorsD1Ev+0x12>
    3836:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <free>
    383a:	8e 81       	ldd	r24, Y+6	; 0x06
    383c:	9f 81       	ldd	r25, Y+7	; 0x07
    383e:	00 97       	sbiw	r24, 0x00	; 0
    3840:	11 f0       	breq	.+4      	; 0x3846 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    3842:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <free>
    3846:	88 81       	ld	r24, Y
    3848:	99 81       	ldd	r25, Y+1	; 0x01
    384a:	00 97       	sbiw	r24, 0x00	; 0
    384c:	11 f0       	breq	.+4      	; 0x3852 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    384e:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <free>
    3852:	8c 81       	ldd	r24, Y+4	; 0x04
    3854:	9d 81       	ldd	r25, Y+5	; 0x05
    3856:	00 97       	sbiw	r24, 0x00	; 0
    3858:	11 f0       	breq	.+4      	; 0x385e <_ZN16PololuQTRSensorsD1Ev+0x36>
    385a:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <free>
    385e:	df 91       	pop	r29
    3860:	cf 91       	pop	r28
    3862:	08 95       	ret

00003864 <__udivmodqi4>:
    3864:	99 1b       	sub	r25, r25
    3866:	79 e0       	ldi	r23, 0x09	; 9
    3868:	04 c0       	rjmp	.+8      	; 0x3872 <__udivmodqi4_ep>

0000386a <__udivmodqi4_loop>:
    386a:	99 1f       	adc	r25, r25
    386c:	96 17       	cp	r25, r22
    386e:	08 f0       	brcs	.+2      	; 0x3872 <__udivmodqi4_ep>
    3870:	96 1b       	sub	r25, r22

00003872 <__udivmodqi4_ep>:
    3872:	88 1f       	adc	r24, r24
    3874:	7a 95       	dec	r23
    3876:	c9 f7       	brne	.-14     	; 0x386a <__udivmodqi4_loop>
    3878:	80 95       	com	r24
    387a:	08 95       	ret

0000387c <__udivmodhi4>:
    387c:	aa 1b       	sub	r26, r26
    387e:	bb 1b       	sub	r27, r27
    3880:	51 e1       	ldi	r21, 0x11	; 17
    3882:	07 c0       	rjmp	.+14     	; 0x3892 <__udivmodhi4_ep>

00003884 <__udivmodhi4_loop>:
    3884:	aa 1f       	adc	r26, r26
    3886:	bb 1f       	adc	r27, r27
    3888:	a6 17       	cp	r26, r22
    388a:	b7 07       	cpc	r27, r23
    388c:	10 f0       	brcs	.+4      	; 0x3892 <__udivmodhi4_ep>
    388e:	a6 1b       	sub	r26, r22
    3890:	b7 0b       	sbc	r27, r23

00003892 <__udivmodhi4_ep>:
    3892:	88 1f       	adc	r24, r24
    3894:	99 1f       	adc	r25, r25
    3896:	5a 95       	dec	r21
    3898:	a9 f7       	brne	.-22     	; 0x3884 <__udivmodhi4_loop>
    389a:	80 95       	com	r24
    389c:	90 95       	com	r25
    389e:	bc 01       	movw	r22, r24
    38a0:	cd 01       	movw	r24, r26
    38a2:	08 95       	ret

000038a4 <__divmodhi4>:
    38a4:	97 fb       	bst	r25, 7
    38a6:	07 2e       	mov	r0, r23
    38a8:	16 f4       	brtc	.+4      	; 0x38ae <__divmodhi4+0xa>
    38aa:	00 94       	com	r0
    38ac:	07 d0       	rcall	.+14     	; 0x38bc <__divmodhi4_neg1>
    38ae:	77 fd       	sbrc	r23, 7
    38b0:	09 d0       	rcall	.+18     	; 0x38c4 <__divmodhi4_neg2>
    38b2:	0e 94 3e 1c 	call	0x387c	; 0x387c <__udivmodhi4>
    38b6:	07 fc       	sbrc	r0, 7
    38b8:	05 d0       	rcall	.+10     	; 0x38c4 <__divmodhi4_neg2>
    38ba:	3e f4       	brtc	.+14     	; 0x38ca <__divmodhi4_exit>

000038bc <__divmodhi4_neg1>:
    38bc:	90 95       	com	r25
    38be:	81 95       	neg	r24
    38c0:	9f 4f       	sbci	r25, 0xFF	; 255
    38c2:	08 95       	ret

000038c4 <__divmodhi4_neg2>:
    38c4:	70 95       	com	r23
    38c6:	61 95       	neg	r22
    38c8:	7f 4f       	sbci	r23, 0xFF	; 255

000038ca <__divmodhi4_exit>:
    38ca:	08 95       	ret

000038cc <__udivmodsi4>:
    38cc:	a1 e2       	ldi	r26, 0x21	; 33
    38ce:	1a 2e       	mov	r1, r26
    38d0:	aa 1b       	sub	r26, r26
    38d2:	bb 1b       	sub	r27, r27
    38d4:	fd 01       	movw	r30, r26
    38d6:	0d c0       	rjmp	.+26     	; 0x38f2 <__udivmodsi4_ep>

000038d8 <__udivmodsi4_loop>:
    38d8:	aa 1f       	adc	r26, r26
    38da:	bb 1f       	adc	r27, r27
    38dc:	ee 1f       	adc	r30, r30
    38de:	ff 1f       	adc	r31, r31
    38e0:	a2 17       	cp	r26, r18
    38e2:	b3 07       	cpc	r27, r19
    38e4:	e4 07       	cpc	r30, r20
    38e6:	f5 07       	cpc	r31, r21
    38e8:	20 f0       	brcs	.+8      	; 0x38f2 <__udivmodsi4_ep>
    38ea:	a2 1b       	sub	r26, r18
    38ec:	b3 0b       	sbc	r27, r19
    38ee:	e4 0b       	sbc	r30, r20
    38f0:	f5 0b       	sbc	r31, r21

000038f2 <__udivmodsi4_ep>:
    38f2:	66 1f       	adc	r22, r22
    38f4:	77 1f       	adc	r23, r23
    38f6:	88 1f       	adc	r24, r24
    38f8:	99 1f       	adc	r25, r25
    38fa:	1a 94       	dec	r1
    38fc:	69 f7       	brne	.-38     	; 0x38d8 <__udivmodsi4_loop>
    38fe:	60 95       	com	r22
    3900:	70 95       	com	r23
    3902:	80 95       	com	r24
    3904:	90 95       	com	r25
    3906:	9b 01       	movw	r18, r22
    3908:	ac 01       	movw	r20, r24
    390a:	bd 01       	movw	r22, r26
    390c:	cf 01       	movw	r24, r30
    390e:	08 95       	ret

00003910 <__divmodsi4>:
    3910:	05 2e       	mov	r0, r21
    3912:	97 fb       	bst	r25, 7
    3914:	1e f4       	brtc	.+6      	; 0x391c <__divmodsi4+0xc>
    3916:	00 94       	com	r0
    3918:	0e 94 9f 1c 	call	0x393e	; 0x393e <__negsi2>
    391c:	57 fd       	sbrc	r21, 7
    391e:	07 d0       	rcall	.+14     	; 0x392e <__divmodsi4_neg2>
    3920:	0e 94 66 1c 	call	0x38cc	; 0x38cc <__udivmodsi4>
    3924:	07 fc       	sbrc	r0, 7
    3926:	03 d0       	rcall	.+6      	; 0x392e <__divmodsi4_neg2>
    3928:	4e f4       	brtc	.+18     	; 0x393c <__divmodsi4_exit>
    392a:	0c 94 9f 1c 	jmp	0x393e	; 0x393e <__negsi2>

0000392e <__divmodsi4_neg2>:
    392e:	50 95       	com	r21
    3930:	40 95       	com	r20
    3932:	30 95       	com	r19
    3934:	21 95       	neg	r18
    3936:	3f 4f       	sbci	r19, 0xFF	; 255
    3938:	4f 4f       	sbci	r20, 0xFF	; 255
    393a:	5f 4f       	sbci	r21, 0xFF	; 255

0000393c <__divmodsi4_exit>:
    393c:	08 95       	ret

0000393e <__negsi2>:
    393e:	90 95       	com	r25
    3940:	80 95       	com	r24
    3942:	70 95       	com	r23
    3944:	61 95       	neg	r22
    3946:	7f 4f       	sbci	r23, 0xFF	; 255
    3948:	8f 4f       	sbci	r24, 0xFF	; 255
    394a:	9f 4f       	sbci	r25, 0xFF	; 255
    394c:	08 95       	ret

0000394e <__tablejump2__>:
    394e:	ee 0f       	add	r30, r30
    3950:	ff 1f       	adc	r31, r31
    3952:	05 90       	lpm	r0, Z+
    3954:	f4 91       	lpm	r31, Z
    3956:	e0 2d       	mov	r30, r0
    3958:	09 94       	ijmp

0000395a <__umulhisi3>:
    395a:	a2 9f       	mul	r26, r18
    395c:	b0 01       	movw	r22, r0
    395e:	b3 9f       	mul	r27, r19
    3960:	c0 01       	movw	r24, r0
    3962:	a3 9f       	mul	r26, r19
    3964:	70 0d       	add	r23, r0
    3966:	81 1d       	adc	r24, r1
    3968:	11 24       	eor	r1, r1
    396a:	91 1d       	adc	r25, r1
    396c:	b2 9f       	mul	r27, r18
    396e:	70 0d       	add	r23, r0
    3970:	81 1d       	adc	r24, r1
    3972:	11 24       	eor	r1, r1
    3974:	91 1d       	adc	r25, r1
    3976:	08 95       	ret

00003978 <__muluhisi3>:
    3978:	0e 94 ad 1c 	call	0x395a	; 0x395a <__umulhisi3>
    397c:	a5 9f       	mul	r26, r21
    397e:	90 0d       	add	r25, r0
    3980:	b4 9f       	mul	r27, r20
    3982:	90 0d       	add	r25, r0
    3984:	a4 9f       	mul	r26, r20
    3986:	80 0d       	add	r24, r0
    3988:	91 1d       	adc	r25, r1
    398a:	11 24       	eor	r1, r1
    398c:	08 95       	ret

0000398e <__mulshisi3>:
    398e:	b7 ff       	sbrs	r27, 7
    3990:	0c 94 bc 1c 	jmp	0x3978	; 0x3978 <__muluhisi3>

00003994 <__mulohisi3>:
    3994:	0e 94 bc 1c 	call	0x3978	; 0x3978 <__muluhisi3>
    3998:	82 1b       	sub	r24, r18
    399a:	93 0b       	sbc	r25, r19
    399c:	08 95       	ret

0000399e <__prologue_saves__>:
    399e:	2f 92       	push	r2
    39a0:	3f 92       	push	r3
    39a2:	4f 92       	push	r4
    39a4:	5f 92       	push	r5
    39a6:	6f 92       	push	r6
    39a8:	7f 92       	push	r7
    39aa:	8f 92       	push	r8
    39ac:	9f 92       	push	r9
    39ae:	af 92       	push	r10
    39b0:	bf 92       	push	r11
    39b2:	cf 92       	push	r12
    39b4:	df 92       	push	r13
    39b6:	ef 92       	push	r14
    39b8:	ff 92       	push	r15
    39ba:	0f 93       	push	r16
    39bc:	1f 93       	push	r17
    39be:	cf 93       	push	r28
    39c0:	df 93       	push	r29
    39c2:	cd b7       	in	r28, 0x3d	; 61
    39c4:	de b7       	in	r29, 0x3e	; 62
    39c6:	ca 1b       	sub	r28, r26
    39c8:	db 0b       	sbc	r29, r27
    39ca:	0f b6       	in	r0, 0x3f	; 63
    39cc:	f8 94       	cli
    39ce:	de bf       	out	0x3e, r29	; 62
    39d0:	0f be       	out	0x3f, r0	; 63
    39d2:	cd bf       	out	0x3d, r28	; 61
    39d4:	09 94       	ijmp

000039d6 <__epilogue_restores__>:
    39d6:	2a 88       	ldd	r2, Y+18	; 0x12
    39d8:	39 88       	ldd	r3, Y+17	; 0x11
    39da:	48 88       	ldd	r4, Y+16	; 0x10
    39dc:	5f 84       	ldd	r5, Y+15	; 0x0f
    39de:	6e 84       	ldd	r6, Y+14	; 0x0e
    39e0:	7d 84       	ldd	r7, Y+13	; 0x0d
    39e2:	8c 84       	ldd	r8, Y+12	; 0x0c
    39e4:	9b 84       	ldd	r9, Y+11	; 0x0b
    39e6:	aa 84       	ldd	r10, Y+10	; 0x0a
    39e8:	b9 84       	ldd	r11, Y+9	; 0x09
    39ea:	c8 84       	ldd	r12, Y+8	; 0x08
    39ec:	df 80       	ldd	r13, Y+7	; 0x07
    39ee:	ee 80       	ldd	r14, Y+6	; 0x06
    39f0:	fd 80       	ldd	r15, Y+5	; 0x05
    39f2:	0c 81       	ldd	r16, Y+4	; 0x04
    39f4:	1b 81       	ldd	r17, Y+3	; 0x03
    39f6:	aa 81       	ldd	r26, Y+2	; 0x02
    39f8:	b9 81       	ldd	r27, Y+1	; 0x01
    39fa:	ce 0f       	add	r28, r30
    39fc:	d1 1d       	adc	r29, r1
    39fe:	0f b6       	in	r0, 0x3f	; 63
    3a00:	f8 94       	cli
    3a02:	de bf       	out	0x3e, r29	; 62
    3a04:	0f be       	out	0x3f, r0	; 63
    3a06:	cd bf       	out	0x3d, r28	; 61
    3a08:	ed 01       	movw	r28, r26
    3a0a:	08 95       	ret

00003a0c <malloc>:
    3a0c:	0f 93       	push	r16
    3a0e:	1f 93       	push	r17
    3a10:	cf 93       	push	r28
    3a12:	df 93       	push	r29
    3a14:	82 30       	cpi	r24, 0x02	; 2
    3a16:	91 05       	cpc	r25, r1
    3a18:	10 f4       	brcc	.+4      	; 0x3a1e <malloc+0x12>
    3a1a:	82 e0       	ldi	r24, 0x02	; 2
    3a1c:	90 e0       	ldi	r25, 0x00	; 0
    3a1e:	e0 91 1d 02 	lds	r30, 0x021D	; 0x80021d <__flp>
    3a22:	f0 91 1e 02 	lds	r31, 0x021E	; 0x80021e <__flp+0x1>
    3a26:	20 e0       	ldi	r18, 0x00	; 0
    3a28:	30 e0       	ldi	r19, 0x00	; 0
    3a2a:	a0 e0       	ldi	r26, 0x00	; 0
    3a2c:	b0 e0       	ldi	r27, 0x00	; 0
    3a2e:	30 97       	sbiw	r30, 0x00	; 0
    3a30:	19 f1       	breq	.+70     	; 0x3a78 <malloc+0x6c>
    3a32:	40 81       	ld	r20, Z
    3a34:	51 81       	ldd	r21, Z+1	; 0x01
    3a36:	02 81       	ldd	r16, Z+2	; 0x02
    3a38:	13 81       	ldd	r17, Z+3	; 0x03
    3a3a:	48 17       	cp	r20, r24
    3a3c:	59 07       	cpc	r21, r25
    3a3e:	c8 f0       	brcs	.+50     	; 0x3a72 <malloc+0x66>
    3a40:	84 17       	cp	r24, r20
    3a42:	95 07       	cpc	r25, r21
    3a44:	69 f4       	brne	.+26     	; 0x3a60 <malloc+0x54>
    3a46:	10 97       	sbiw	r26, 0x00	; 0
    3a48:	31 f0       	breq	.+12     	; 0x3a56 <malloc+0x4a>
    3a4a:	12 96       	adiw	r26, 0x02	; 2
    3a4c:	0c 93       	st	X, r16
    3a4e:	12 97       	sbiw	r26, 0x02	; 2
    3a50:	13 96       	adiw	r26, 0x03	; 3
    3a52:	1c 93       	st	X, r17
    3a54:	27 c0       	rjmp	.+78     	; 0x3aa4 <malloc+0x98>
    3a56:	00 93 1d 02 	sts	0x021D, r16	; 0x80021d <__flp>
    3a5a:	10 93 1e 02 	sts	0x021E, r17	; 0x80021e <__flp+0x1>
    3a5e:	22 c0       	rjmp	.+68     	; 0x3aa4 <malloc+0x98>
    3a60:	21 15       	cp	r18, r1
    3a62:	31 05       	cpc	r19, r1
    3a64:	19 f0       	breq	.+6      	; 0x3a6c <malloc+0x60>
    3a66:	42 17       	cp	r20, r18
    3a68:	53 07       	cpc	r21, r19
    3a6a:	18 f4       	brcc	.+6      	; 0x3a72 <malloc+0x66>
    3a6c:	9a 01       	movw	r18, r20
    3a6e:	bd 01       	movw	r22, r26
    3a70:	ef 01       	movw	r28, r30
    3a72:	df 01       	movw	r26, r30
    3a74:	f8 01       	movw	r30, r16
    3a76:	db cf       	rjmp	.-74     	; 0x3a2e <malloc+0x22>
    3a78:	21 15       	cp	r18, r1
    3a7a:	31 05       	cpc	r19, r1
    3a7c:	f9 f0       	breq	.+62     	; 0x3abc <malloc+0xb0>
    3a7e:	28 1b       	sub	r18, r24
    3a80:	39 0b       	sbc	r19, r25
    3a82:	24 30       	cpi	r18, 0x04	; 4
    3a84:	31 05       	cpc	r19, r1
    3a86:	80 f4       	brcc	.+32     	; 0x3aa8 <malloc+0x9c>
    3a88:	8a 81       	ldd	r24, Y+2	; 0x02
    3a8a:	9b 81       	ldd	r25, Y+3	; 0x03
    3a8c:	61 15       	cp	r22, r1
    3a8e:	71 05       	cpc	r23, r1
    3a90:	21 f0       	breq	.+8      	; 0x3a9a <malloc+0x8e>
    3a92:	fb 01       	movw	r30, r22
    3a94:	93 83       	std	Z+3, r25	; 0x03
    3a96:	82 83       	std	Z+2, r24	; 0x02
    3a98:	04 c0       	rjmp	.+8      	; 0x3aa2 <malloc+0x96>
    3a9a:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <__flp+0x1>
    3a9e:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <__flp>
    3aa2:	fe 01       	movw	r30, r28
    3aa4:	32 96       	adiw	r30, 0x02	; 2
    3aa6:	44 c0       	rjmp	.+136    	; 0x3b30 <malloc+0x124>
    3aa8:	fe 01       	movw	r30, r28
    3aaa:	e2 0f       	add	r30, r18
    3aac:	f3 1f       	adc	r31, r19
    3aae:	81 93       	st	Z+, r24
    3ab0:	91 93       	st	Z+, r25
    3ab2:	22 50       	subi	r18, 0x02	; 2
    3ab4:	31 09       	sbc	r19, r1
    3ab6:	39 83       	std	Y+1, r19	; 0x01
    3ab8:	28 83       	st	Y, r18
    3aba:	3a c0       	rjmp	.+116    	; 0x3b30 <malloc+0x124>
    3abc:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <__brkval>
    3ac0:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <__brkval+0x1>
    3ac4:	23 2b       	or	r18, r19
    3ac6:	41 f4       	brne	.+16     	; 0x3ad8 <malloc+0xcc>
    3ac8:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__malloc_heap_start>
    3acc:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__malloc_heap_start+0x1>
    3ad0:	30 93 1c 02 	sts	0x021C, r19	; 0x80021c <__brkval+0x1>
    3ad4:	20 93 1b 02 	sts	0x021B, r18	; 0x80021b <__brkval>
    3ad8:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_end>
    3adc:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_end+0x1>
    3ae0:	21 15       	cp	r18, r1
    3ae2:	31 05       	cpc	r19, r1
    3ae4:	41 f4       	brne	.+16     	; 0x3af6 <malloc+0xea>
    3ae6:	2d b7       	in	r18, 0x3d	; 61
    3ae8:	3e b7       	in	r19, 0x3e	; 62
    3aea:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <__malloc_margin>
    3aee:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <__malloc_margin+0x1>
    3af2:	24 1b       	sub	r18, r20
    3af4:	35 0b       	sbc	r19, r21
    3af6:	e0 91 1b 02 	lds	r30, 0x021B	; 0x80021b <__brkval>
    3afa:	f0 91 1c 02 	lds	r31, 0x021C	; 0x80021c <__brkval+0x1>
    3afe:	e2 17       	cp	r30, r18
    3b00:	f3 07       	cpc	r31, r19
    3b02:	a0 f4       	brcc	.+40     	; 0x3b2c <malloc+0x120>
    3b04:	2e 1b       	sub	r18, r30
    3b06:	3f 0b       	sbc	r19, r31
    3b08:	28 17       	cp	r18, r24
    3b0a:	39 07       	cpc	r19, r25
    3b0c:	78 f0       	brcs	.+30     	; 0x3b2c <malloc+0x120>
    3b0e:	ac 01       	movw	r20, r24
    3b10:	4e 5f       	subi	r20, 0xFE	; 254
    3b12:	5f 4f       	sbci	r21, 0xFF	; 255
    3b14:	24 17       	cp	r18, r20
    3b16:	35 07       	cpc	r19, r21
    3b18:	48 f0       	brcs	.+18     	; 0x3b2c <malloc+0x120>
    3b1a:	4e 0f       	add	r20, r30
    3b1c:	5f 1f       	adc	r21, r31
    3b1e:	50 93 1c 02 	sts	0x021C, r21	; 0x80021c <__brkval+0x1>
    3b22:	40 93 1b 02 	sts	0x021B, r20	; 0x80021b <__brkval>
    3b26:	81 93       	st	Z+, r24
    3b28:	91 93       	st	Z+, r25
    3b2a:	02 c0       	rjmp	.+4      	; 0x3b30 <malloc+0x124>
    3b2c:	e0 e0       	ldi	r30, 0x00	; 0
    3b2e:	f0 e0       	ldi	r31, 0x00	; 0
    3b30:	cf 01       	movw	r24, r30
    3b32:	df 91       	pop	r29
    3b34:	cf 91       	pop	r28
    3b36:	1f 91       	pop	r17
    3b38:	0f 91       	pop	r16
    3b3a:	08 95       	ret

00003b3c <free>:
    3b3c:	cf 93       	push	r28
    3b3e:	df 93       	push	r29
    3b40:	00 97       	sbiw	r24, 0x00	; 0
    3b42:	09 f4       	brne	.+2      	; 0x3b46 <free+0xa>
    3b44:	81 c0       	rjmp	.+258    	; 0x3c48 <free+0x10c>
    3b46:	fc 01       	movw	r30, r24
    3b48:	32 97       	sbiw	r30, 0x02	; 2
    3b4a:	13 82       	std	Z+3, r1	; 0x03
    3b4c:	12 82       	std	Z+2, r1	; 0x02
    3b4e:	a0 91 1d 02 	lds	r26, 0x021D	; 0x80021d <__flp>
    3b52:	b0 91 1e 02 	lds	r27, 0x021E	; 0x80021e <__flp+0x1>
    3b56:	10 97       	sbiw	r26, 0x00	; 0
    3b58:	81 f4       	brne	.+32     	; 0x3b7a <free+0x3e>
    3b5a:	20 81       	ld	r18, Z
    3b5c:	31 81       	ldd	r19, Z+1	; 0x01
    3b5e:	82 0f       	add	r24, r18
    3b60:	93 1f       	adc	r25, r19
    3b62:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <__brkval>
    3b66:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <__brkval+0x1>
    3b6a:	28 17       	cp	r18, r24
    3b6c:	39 07       	cpc	r19, r25
    3b6e:	51 f5       	brne	.+84     	; 0x3bc4 <free+0x88>
    3b70:	f0 93 1c 02 	sts	0x021C, r31	; 0x80021c <__brkval+0x1>
    3b74:	e0 93 1b 02 	sts	0x021B, r30	; 0x80021b <__brkval>
    3b78:	67 c0       	rjmp	.+206    	; 0x3c48 <free+0x10c>
    3b7a:	ed 01       	movw	r28, r26
    3b7c:	20 e0       	ldi	r18, 0x00	; 0
    3b7e:	30 e0       	ldi	r19, 0x00	; 0
    3b80:	ce 17       	cp	r28, r30
    3b82:	df 07       	cpc	r29, r31
    3b84:	40 f4       	brcc	.+16     	; 0x3b96 <free+0x5a>
    3b86:	4a 81       	ldd	r20, Y+2	; 0x02
    3b88:	5b 81       	ldd	r21, Y+3	; 0x03
    3b8a:	9e 01       	movw	r18, r28
    3b8c:	41 15       	cp	r20, r1
    3b8e:	51 05       	cpc	r21, r1
    3b90:	f1 f0       	breq	.+60     	; 0x3bce <free+0x92>
    3b92:	ea 01       	movw	r28, r20
    3b94:	f5 cf       	rjmp	.-22     	; 0x3b80 <free+0x44>
    3b96:	d3 83       	std	Z+3, r29	; 0x03
    3b98:	c2 83       	std	Z+2, r28	; 0x02
    3b9a:	40 81       	ld	r20, Z
    3b9c:	51 81       	ldd	r21, Z+1	; 0x01
    3b9e:	84 0f       	add	r24, r20
    3ba0:	95 1f       	adc	r25, r21
    3ba2:	c8 17       	cp	r28, r24
    3ba4:	d9 07       	cpc	r29, r25
    3ba6:	59 f4       	brne	.+22     	; 0x3bbe <free+0x82>
    3ba8:	88 81       	ld	r24, Y
    3baa:	99 81       	ldd	r25, Y+1	; 0x01
    3bac:	84 0f       	add	r24, r20
    3bae:	95 1f       	adc	r25, r21
    3bb0:	02 96       	adiw	r24, 0x02	; 2
    3bb2:	91 83       	std	Z+1, r25	; 0x01
    3bb4:	80 83       	st	Z, r24
    3bb6:	8a 81       	ldd	r24, Y+2	; 0x02
    3bb8:	9b 81       	ldd	r25, Y+3	; 0x03
    3bba:	93 83       	std	Z+3, r25	; 0x03
    3bbc:	82 83       	std	Z+2, r24	; 0x02
    3bbe:	21 15       	cp	r18, r1
    3bc0:	31 05       	cpc	r19, r1
    3bc2:	29 f4       	brne	.+10     	; 0x3bce <free+0x92>
    3bc4:	f0 93 1e 02 	sts	0x021E, r31	; 0x80021e <__flp+0x1>
    3bc8:	e0 93 1d 02 	sts	0x021D, r30	; 0x80021d <__flp>
    3bcc:	3d c0       	rjmp	.+122    	; 0x3c48 <free+0x10c>
    3bce:	e9 01       	movw	r28, r18
    3bd0:	fb 83       	std	Y+3, r31	; 0x03
    3bd2:	ea 83       	std	Y+2, r30	; 0x02
    3bd4:	49 91       	ld	r20, Y+
    3bd6:	59 91       	ld	r21, Y+
    3bd8:	c4 0f       	add	r28, r20
    3bda:	d5 1f       	adc	r29, r21
    3bdc:	ec 17       	cp	r30, r28
    3bde:	fd 07       	cpc	r31, r29
    3be0:	61 f4       	brne	.+24     	; 0x3bfa <free+0xbe>
    3be2:	80 81       	ld	r24, Z
    3be4:	91 81       	ldd	r25, Z+1	; 0x01
    3be6:	84 0f       	add	r24, r20
    3be8:	95 1f       	adc	r25, r21
    3bea:	02 96       	adiw	r24, 0x02	; 2
    3bec:	e9 01       	movw	r28, r18
    3bee:	99 83       	std	Y+1, r25	; 0x01
    3bf0:	88 83       	st	Y, r24
    3bf2:	82 81       	ldd	r24, Z+2	; 0x02
    3bf4:	93 81       	ldd	r25, Z+3	; 0x03
    3bf6:	9b 83       	std	Y+3, r25	; 0x03
    3bf8:	8a 83       	std	Y+2, r24	; 0x02
    3bfa:	e0 e0       	ldi	r30, 0x00	; 0
    3bfc:	f0 e0       	ldi	r31, 0x00	; 0
    3bfe:	12 96       	adiw	r26, 0x02	; 2
    3c00:	8d 91       	ld	r24, X+
    3c02:	9c 91       	ld	r25, X
    3c04:	13 97       	sbiw	r26, 0x03	; 3
    3c06:	00 97       	sbiw	r24, 0x00	; 0
    3c08:	19 f0       	breq	.+6      	; 0x3c10 <free+0xd4>
    3c0a:	fd 01       	movw	r30, r26
    3c0c:	dc 01       	movw	r26, r24
    3c0e:	f7 cf       	rjmp	.-18     	; 0x3bfe <free+0xc2>
    3c10:	8d 91       	ld	r24, X+
    3c12:	9c 91       	ld	r25, X
    3c14:	11 97       	sbiw	r26, 0x01	; 1
    3c16:	9d 01       	movw	r18, r26
    3c18:	2e 5f       	subi	r18, 0xFE	; 254
    3c1a:	3f 4f       	sbci	r19, 0xFF	; 255
    3c1c:	82 0f       	add	r24, r18
    3c1e:	93 1f       	adc	r25, r19
    3c20:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <__brkval>
    3c24:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <__brkval+0x1>
    3c28:	28 17       	cp	r18, r24
    3c2a:	39 07       	cpc	r19, r25
    3c2c:	69 f4       	brne	.+26     	; 0x3c48 <free+0x10c>
    3c2e:	30 97       	sbiw	r30, 0x00	; 0
    3c30:	29 f4       	brne	.+10     	; 0x3c3c <free+0x100>
    3c32:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <__flp+0x1>
    3c36:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <__flp>
    3c3a:	02 c0       	rjmp	.+4      	; 0x3c40 <free+0x104>
    3c3c:	13 82       	std	Z+3, r1	; 0x03
    3c3e:	12 82       	std	Z+2, r1	; 0x02
    3c40:	b0 93 1c 02 	sts	0x021C, r27	; 0x80021c <__brkval+0x1>
    3c44:	a0 93 1b 02 	sts	0x021B, r26	; 0x80021b <__brkval>
    3c48:	df 91       	pop	r29
    3c4a:	cf 91       	pop	r28
    3c4c:	08 95       	ret

00003c4e <strncat>:
    3c4e:	fb 01       	movw	r30, r22
    3c50:	dc 01       	movw	r26, r24
    3c52:	0d 90       	ld	r0, X+
    3c54:	00 20       	and	r0, r0
    3c56:	e9 f7       	brne	.-6      	; 0x3c52 <strncat+0x4>
    3c58:	11 97       	sbiw	r26, 0x01	; 1
    3c5a:	41 50       	subi	r20, 0x01	; 1
    3c5c:	50 40       	sbci	r21, 0x00	; 0
    3c5e:	28 f0       	brcs	.+10     	; 0x3c6a <strncat+0x1c>
    3c60:	01 90       	ld	r0, Z+
    3c62:	00 20       	and	r0, r0
    3c64:	0d 92       	st	X+, r0
    3c66:	c9 f7       	brne	.-14     	; 0x3c5a <strncat+0xc>
    3c68:	08 95       	ret
    3c6a:	1c 92       	st	X, r1
    3c6c:	08 95       	ret

00003c6e <__do_global_dtors>:
    3c6e:	11 e0       	ldi	r17, 0x01	; 1
    3c70:	c2 e2       	ldi	r28, 0x22	; 34
    3c72:	d1 e0       	ldi	r29, 0x01	; 1
    3c74:	04 c0       	rjmp	.+8      	; 0x3c7e <__do_global_dtors+0x10>
    3c76:	fe 01       	movw	r30, r28
    3c78:	0e 94 a7 1c 	call	0x394e	; 0x394e <__tablejump2__>
    3c7c:	21 96       	adiw	r28, 0x01	; 1
    3c7e:	c3 32       	cpi	r28, 0x23	; 35
    3c80:	d1 07       	cpc	r29, r17
    3c82:	c9 f7       	brne	.-14     	; 0x3c76 <__do_global_dtors+0x8>
    3c84:	f8 94       	cli

00003c86 <__stop_program>:
    3c86:	ff cf       	rjmp	.-2      	; 0x3c86 <__stop_program>
