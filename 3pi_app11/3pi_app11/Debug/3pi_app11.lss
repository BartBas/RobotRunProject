
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008c  00800100  00003da0  00003e34  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003da0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000093  0080018c  0080018c  00003ec0  2**0
                  ALLOC
  3 .stab         00007b48  00000000  00000000  00003ec0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000a086  00000000  00000000  0000ba08  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  00015a8e  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00015ad0  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 000001c0  00000000  00000000  00015b10  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00003642  00000000  00000000  00015cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000011e1  00000000  00000000  00019312  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00002129  00000000  00000000  0001a4f3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000568  00000000  00000000  0001c61c  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000a4a  00000000  00000000  0001cb84  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0000169f  00000000  00000000  0001d5ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000001d8  00000000  00000000  0001ec6d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 43 00 	jmp	0x86	; 0x86 <__dtors_end>
       4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
       8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
       c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      24:	0c 94 d1 16 	jmp	0x2da2	; 0x2da2 <__vector_9>
      28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      34:	0c 94 68 12 	jmp	0x24d0	; 0x24d0 <__vector_13>
      38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      48:	0c 94 e0 15 	jmp	0x2bc0	; 0x2bc0 <__vector_18>
      4c:	0c 94 ac 16 	jmp	0x2d58	; 0x2d58 <__vector_19>
      50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      68:	c7 08       	sbc	r12, r7
      6a:	f5 08       	sbc	r15, r5
      6c:	60 09       	sbc	r22, r0
      6e:	cb 08       	sbc	r12, r11
      70:	da 08       	sbc	r13, r10
      72:	e9 08       	sbc	r14, r9
      74:	cb 08       	sbc	r12, r11
      76:	cb 08       	sbc	r12, r11
      78:	cb 08       	sbc	r12, r11

0000007a <__trampolines_end>:
      7a:	3e 67       	ori	r19, 0x7E	; 126
      7c:	33 32       	cpi	r19, 0x23	; 35
      7e:	3e 3e       	cpi	r19, 0xEE	; 238
      80:	63 33       	cpi	r22, 0x33	; 51
      82:	32 00       	.word	0x0032	; ????

00000084 <__ctors_end>:
      84:	b2 17       	cp	r27, r18

00000086 <__dtors_end>:
      86:	11 24       	eor	r1, r1
      88:	1f be       	out	0x3f, r1	; 63
      8a:	cf ef       	ldi	r28, 0xFF	; 255
      8c:	d8 e0       	ldi	r29, 0x08	; 8
      8e:	de bf       	out	0x3e, r29	; 62
      90:	cd bf       	out	0x3d, r28	; 61

00000092 <__do_copy_data>:
      92:	11 e0       	ldi	r17, 0x01	; 1
      94:	a0 e0       	ldi	r26, 0x00	; 0
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	e0 ea       	ldi	r30, 0xA0	; 160
      9a:	fd e3       	ldi	r31, 0x3D	; 61
      9c:	02 c0       	rjmp	.+4      	; 0xa2 <__do_copy_data+0x10>
      9e:	05 90       	lpm	r0, Z+
      a0:	0d 92       	st	X+, r0
      a2:	ac 38       	cpi	r26, 0x8C	; 140
      a4:	b1 07       	cpc	r27, r17
      a6:	d9 f7       	brne	.-10     	; 0x9e <__do_copy_data+0xc>

000000a8 <__do_clear_bss>:
      a8:	22 e0       	ldi	r18, 0x02	; 2
      aa:	ac e8       	ldi	r26, 0x8C	; 140
      ac:	b1 e0       	ldi	r27, 0x01	; 1
      ae:	01 c0       	rjmp	.+2      	; 0xb2 <.do_clear_bss_start>

000000b0 <.do_clear_bss_loop>:
      b0:	1d 92       	st	X+, r1

000000b2 <.do_clear_bss_start>:
      b2:	af 31       	cpi	r26, 0x1F	; 31
      b4:	b2 07       	cpc	r27, r18
      b6:	e1 f7       	brne	.-8      	; 0xb0 <.do_clear_bss_loop>
      b8:	0e 94 17 04 	call	0x82e	; 0x82e <main>
      bc:	0c 94 c3 1e 	jmp	0x3d86	; 0x3d86 <__do_global_dtors>

000000c0 <__bad_interrupt>:
      c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <filllocationarrays>:


#define START 010
#define STOP 101

void filllocationarrays(Communications *self){
      c4:	cf 93       	push	r28
      c6:	df 93       	push	r29
      c8:	cd b7       	in	r28, 0x3d	; 61
      ca:	de b7       	in	r29, 0x3e	; 62
      cc:	e2 97       	sbiw	r28, 0x32	; 50
      ce:	0f b6       	in	r0, 0x3f	; 63
      d0:	f8 94       	cli
      d2:	de bf       	out	0x3e, r29	; 62
      d4:	0f be       	out	0x3f, r0	; 63
      d6:	cd bf       	out	0x3d, r28	; 61
      d8:	dc 01       	movw	r26, r24
	char arrx[25];
	char arry[25];
	char set;
	int placement=0;

	for (int i=0;i<25;i++){
      da:	20 e0       	ldi	r18, 0x00	; 0
      dc:	30 e0       	ldi	r19, 0x00	; 0
      de:	1a c0       	rjmp	.+52     	; 0x114 <filllocationarrays+0x50>
	arrx[i]=arry[i]=self->Orderary[i]=self->Orderarx[i]=0;
      e0:	ad 01       	movw	r20, r26
      e2:	42 0f       	add	r20, r18
      e4:	53 1f       	adc	r21, r19
      e6:	ca 01       	movw	r24, r20
      e8:	8e 5a       	subi	r24, 0xAE	; 174
      ea:	9f 4f       	sbci	r25, 0xFF	; 255
      ec:	fc 01       	movw	r30, r24
      ee:	10 82       	st	Z, r1
      f0:	fa 01       	movw	r30, r20
      f2:	11 ae       	std	Z+57, r1	; 0x39
      f4:	ea e1       	ldi	r30, 0x1A	; 26
      f6:	f0 e0       	ldi	r31, 0x00	; 0
      f8:	ec 0f       	add	r30, r28
      fa:	fd 1f       	adc	r31, r29
      fc:	e2 0f       	add	r30, r18
      fe:	f3 1f       	adc	r31, r19
     100:	10 82       	st	Z, r1
     102:	e1 e0       	ldi	r30, 0x01	; 1
     104:	f0 e0       	ldi	r31, 0x00	; 0
     106:	ec 0f       	add	r30, r28
     108:	fd 1f       	adc	r31, r29
     10a:	e2 0f       	add	r30, r18
     10c:	f3 1f       	adc	r31, r19
     10e:	10 82       	st	Z, r1
	char arrx[25];
	char arry[25];
	char set;
	int placement=0;

	for (int i=0;i<25;i++){
     110:	2f 5f       	subi	r18, 0xFF	; 255
     112:	3f 4f       	sbci	r19, 0xFF	; 255
     114:	29 31       	cpi	r18, 0x19	; 25
     116:	31 05       	cpc	r19, r1
     118:	1c f3       	brlt	.-58     	; 0xe0 <filllocationarrays+0x1c>
	arrx[i]=arry[i]=self->Orderary[i]=self->Orderarx[i]=0;
}

	if (self->Recieved[1]==1){
     11a:	5c 96       	adiw	r26, 0x1c	; 28
     11c:	8c 91       	ld	r24, X
     11e:	5c 97       	sbiw	r26, 0x1c	; 28
     120:	81 30       	cpi	r24, 0x01	; 1
     122:	29 f4       	brne	.+10     	; 0x12e <filllocationarrays+0x6a>
		arrx[placement]=1;
     124:	89 83       	std	Y+1, r24	; 0x01
		arry[placement]=1;
     126:	8a 8f       	std	Y+26, r24	; 0x1a
		placement++;
     128:	21 e0       	ldi	r18, 0x01	; 1
     12a:	30 e0       	ldi	r19, 0x00	; 0
     12c:	02 c0       	rjmp	.+4      	; 0x132 <filllocationarrays+0x6e>

void filllocationarrays(Communications *self){
	char arrx[25];
	char arry[25];
	char set;
	int placement=0;
     12e:	20 e0       	ldi	r18, 0x00	; 0
     130:	30 e0       	ldi	r19, 0x00	; 0
     132:	40 e0       	ldi	r20, 0x00	; 0
     134:	50 e0       	ldi	r21, 0x00	; 0
     136:	3b c0       	rjmp	.+118    	; 0x1ae <filllocationarrays+0xea>
		arrx[placement]=1;
		arry[placement]=1;
		placement++;
	}
	for (int i=0;i<8;i++){
		set = ((self->Recieved[2] >> i)  & 0x01);
     138:	5d 96       	adiw	r26, 0x1d	; 29
     13a:	8c 91       	ld	r24, X
     13c:	5d 97       	sbiw	r26, 0x1d	; 29
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	04 2e       	mov	r0, r20
     142:	02 c0       	rjmp	.+4      	; 0x148 <filllocationarrays+0x84>
     144:	95 95       	asr	r25
     146:	87 95       	ror	r24
     148:	0a 94       	dec	r0
     14a:	e2 f7       	brpl	.-8      	; 0x144 <filllocationarrays+0x80>
     14c:	81 70       	andi	r24, 0x01	; 1
		if (i<4){
     14e:	44 30       	cpi	r20, 0x04	; 4
     150:	51 05       	cpc	r21, r1
     152:	b4 f4       	brge	.+44     	; 0x180 <filllocationarrays+0xbc>
			if (set == 1){
     154:	81 30       	cpi	r24, 0x01	; 1
     156:	49 f5       	brne	.+82     	; 0x1aa <filllocationarrays+0xe6>
			arrx[placement]=i+1+1;
     158:	e1 e0       	ldi	r30, 0x01	; 1
     15a:	f0 e0       	ldi	r31, 0x00	; 0
     15c:	ec 0f       	add	r30, r28
     15e:	fd 1f       	adc	r31, r29
     160:	e2 0f       	add	r30, r18
     162:	f3 1f       	adc	r31, r19
     164:	82 e0       	ldi	r24, 0x02	; 2
     166:	84 0f       	add	r24, r20
     168:	80 83       	st	Z, r24
			arry[placement]=0+1;
     16a:	ea e1       	ldi	r30, 0x1A	; 26
     16c:	f0 e0       	ldi	r31, 0x00	; 0
     16e:	ec 0f       	add	r30, r28
     170:	fd 1f       	adc	r31, r29
     172:	e2 0f       	add	r30, r18
     174:	f3 1f       	adc	r31, r19
     176:	81 e0       	ldi	r24, 0x01	; 1
     178:	80 83       	st	Z, r24
			placement++;}
     17a:	2f 5f       	subi	r18, 0xFF	; 255
     17c:	3f 4f       	sbci	r19, 0xFF	; 255
     17e:	15 c0       	rjmp	.+42     	; 0x1aa <filllocationarrays+0xe6>
		}else{
			if (set == 1){
     180:	81 30       	cpi	r24, 0x01	; 1
     182:	99 f4       	brne	.+38     	; 0x1aa <filllocationarrays+0xe6>
			arrx[placement]=i-4+1;
     184:	e1 e0       	ldi	r30, 0x01	; 1
     186:	f0 e0       	ldi	r31, 0x00	; 0
     188:	ec 0f       	add	r30, r28
     18a:	fd 1f       	adc	r31, r29
     18c:	e2 0f       	add	r30, r18
     18e:	f3 1f       	adc	r31, r19
     190:	8d ef       	ldi	r24, 0xFD	; 253
     192:	84 0f       	add	r24, r20
     194:	80 83       	st	Z, r24
			arry[placement]=1+1;
     196:	ea e1       	ldi	r30, 0x1A	; 26
     198:	f0 e0       	ldi	r31, 0x00	; 0
     19a:	ec 0f       	add	r30, r28
     19c:	fd 1f       	adc	r31, r29
     19e:	e2 0f       	add	r30, r18
     1a0:	f3 1f       	adc	r31, r19
     1a2:	82 e0       	ldi	r24, 0x02	; 2
     1a4:	80 83       	st	Z, r24
			placement++;}
     1a6:	2f 5f       	subi	r18, 0xFF	; 255
     1a8:	3f 4f       	sbci	r19, 0xFF	; 255
	if (self->Recieved[1]==1){
		arrx[placement]=1;
		arry[placement]=1;
		placement++;
	}
	for (int i=0;i<8;i++){
     1aa:	4f 5f       	subi	r20, 0xFF	; 255
     1ac:	5f 4f       	sbci	r21, 0xFF	; 255
     1ae:	48 30       	cpi	r20, 0x08	; 8
     1b0:	51 05       	cpc	r21, r1
     1b2:	14 f2       	brlt	.-124    	; 0x138 <filllocationarrays+0x74>
     1b4:	40 e0       	ldi	r20, 0x00	; 0
     1b6:	50 e0       	ldi	r21, 0x00	; 0
     1b8:	53 c0       	rjmp	.+166    	; 0x260 <filllocationarrays+0x19c>
			arry[placement]=1+1;
			placement++;}
		}
	}
		for (int i=0;i<8;i++){
			set = ((self->Recieved[3] >> i)  & 0x01);
     1ba:	5e 96       	adiw	r26, 0x1e	; 30
     1bc:	8c 91       	ld	r24, X
     1be:	5e 97       	sbiw	r26, 0x1e	; 30
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	04 2e       	mov	r0, r20
     1c4:	02 c0       	rjmp	.+4      	; 0x1ca <filllocationarrays+0x106>
     1c6:	95 95       	asr	r25
     1c8:	87 95       	ror	r24
     1ca:	0a 94       	dec	r0
     1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <filllocationarrays+0x102>
     1ce:	81 70       	andi	r24, 0x01	; 1
			if (i==0){
     1d0:	41 15       	cp	r20, r1
     1d2:	51 05       	cpc	r21, r1
     1d4:	b9 f4       	brne	.+46     	; 0x204 <filllocationarrays+0x140>
				if (set == 1){
     1d6:	81 30       	cpi	r24, 0x01	; 1
     1d8:	09 f0       	breq	.+2      	; 0x1dc <filllocationarrays+0x118>
     1da:	40 c0       	rjmp	.+128    	; 0x25c <filllocationarrays+0x198>
				arrx[placement]=i+4+1;
     1dc:	e1 e0       	ldi	r30, 0x01	; 1
     1de:	f0 e0       	ldi	r31, 0x00	; 0
     1e0:	ec 0f       	add	r30, r28
     1e2:	fd 1f       	adc	r31, r29
     1e4:	e2 0f       	add	r30, r18
     1e6:	f3 1f       	adc	r31, r19
     1e8:	85 e0       	ldi	r24, 0x05	; 5
     1ea:	84 0f       	add	r24, r20
     1ec:	80 83       	st	Z, r24
				arry[placement]=1+1;
     1ee:	ea e1       	ldi	r30, 0x1A	; 26
     1f0:	f0 e0       	ldi	r31, 0x00	; 0
     1f2:	ec 0f       	add	r30, r28
     1f4:	fd 1f       	adc	r31, r29
     1f6:	e2 0f       	add	r30, r18
     1f8:	f3 1f       	adc	r31, r19
     1fa:	82 e0       	ldi	r24, 0x02	; 2
     1fc:	80 83       	st	Z, r24
				placement++;}
     1fe:	2f 5f       	subi	r18, 0xFF	; 255
     200:	3f 4f       	sbci	r19, 0xFF	; 255
     202:	2c c0       	rjmp	.+88     	; 0x25c <filllocationarrays+0x198>
			}else if(i<6){
     204:	46 30       	cpi	r20, 0x06	; 6
     206:	51 05       	cpc	r21, r1
     208:	a4 f4       	brge	.+40     	; 0x232 <filllocationarrays+0x16e>
				if (set == 1){
     20a:	81 30       	cpi	r24, 0x01	; 1
     20c:	39 f5       	brne	.+78     	; 0x25c <filllocationarrays+0x198>
				arrx[placement]=i-1+1;
     20e:	e1 e0       	ldi	r30, 0x01	; 1
     210:	f0 e0       	ldi	r31, 0x00	; 0
     212:	ec 0f       	add	r30, r28
     214:	fd 1f       	adc	r31, r29
     216:	e2 0f       	add	r30, r18
     218:	f3 1f       	adc	r31, r19
     21a:	40 83       	st	Z, r20
				arry[placement]=2+1;
     21c:	ea e1       	ldi	r30, 0x1A	; 26
     21e:	f0 e0       	ldi	r31, 0x00	; 0
     220:	ec 0f       	add	r30, r28
     222:	fd 1f       	adc	r31, r29
     224:	e2 0f       	add	r30, r18
     226:	f3 1f       	adc	r31, r19
     228:	83 e0       	ldi	r24, 0x03	; 3
     22a:	80 83       	st	Z, r24
				placement++;}
     22c:	2f 5f       	subi	r18, 0xFF	; 255
     22e:	3f 4f       	sbci	r19, 0xFF	; 255
     230:	15 c0       	rjmp	.+42     	; 0x25c <filllocationarrays+0x198>
			}else{
				if (set == 1){
     232:	81 30       	cpi	r24, 0x01	; 1
     234:	99 f4       	brne	.+38     	; 0x25c <filllocationarrays+0x198>
				arrx[placement]=i-6+1;
     236:	e1 e0       	ldi	r30, 0x01	; 1
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	ec 0f       	add	r30, r28
     23c:	fd 1f       	adc	r31, r29
     23e:	e2 0f       	add	r30, r18
     240:	f3 1f       	adc	r31, r19
     242:	8b ef       	ldi	r24, 0xFB	; 251
     244:	84 0f       	add	r24, r20
     246:	80 83       	st	Z, r24
				arry[placement]=3+1;
     248:	ea e1       	ldi	r30, 0x1A	; 26
     24a:	f0 e0       	ldi	r31, 0x00	; 0
     24c:	ec 0f       	add	r30, r28
     24e:	fd 1f       	adc	r31, r29
     250:	e2 0f       	add	r30, r18
     252:	f3 1f       	adc	r31, r19
     254:	84 e0       	ldi	r24, 0x04	; 4
     256:	80 83       	st	Z, r24
				placement++;}
     258:	2f 5f       	subi	r18, 0xFF	; 255
     25a:	3f 4f       	sbci	r19, 0xFF	; 255
			arrx[placement]=i-4+1;
			arry[placement]=1+1;
			placement++;}
		}
	}
		for (int i=0;i<8;i++){
     25c:	4f 5f       	subi	r20, 0xFF	; 255
     25e:	5f 4f       	sbci	r21, 0xFF	; 255
     260:	48 30       	cpi	r20, 0x08	; 8
     262:	51 05       	cpc	r21, r1
     264:	0c f4       	brge	.+2      	; 0x268 <filllocationarrays+0x1a4>
     266:	a9 cf       	rjmp	.-174    	; 0x1ba <filllocationarrays+0xf6>
     268:	40 e0       	ldi	r20, 0x00	; 0
     26a:	50 e0       	ldi	r21, 0x00	; 0
     26c:	3b c0       	rjmp	.+118    	; 0x2e4 <filllocationarrays+0x220>
				arry[placement]=3+1;
				placement++;}
			}
		}
		for (int i=0;i<8;i++){
			set = ((self->Recieved[4] >> i)  & 0x01);
     26e:	5f 96       	adiw	r26, 0x1f	; 31
     270:	8c 91       	ld	r24, X
     272:	5f 97       	sbiw	r26, 0x1f	; 31
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	04 2e       	mov	r0, r20
     278:	02 c0       	rjmp	.+4      	; 0x27e <filllocationarrays+0x1ba>
     27a:	95 95       	asr	r25
     27c:	87 95       	ror	r24
     27e:	0a 94       	dec	r0
     280:	e2 f7       	brpl	.-8      	; 0x27a <filllocationarrays+0x1b6>
     282:	81 70       	andi	r24, 0x01	; 1
			if (i<3){
     284:	43 30       	cpi	r20, 0x03	; 3
     286:	51 05       	cpc	r21, r1
     288:	b4 f4       	brge	.+44     	; 0x2b6 <filllocationarrays+0x1f2>
				if (set == 1){
     28a:	81 30       	cpi	r24, 0x01	; 1
     28c:	49 f5       	brne	.+82     	; 0x2e0 <filllocationarrays+0x21c>
				arrx[placement]=i+2+1;
     28e:	e1 e0       	ldi	r30, 0x01	; 1
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	ec 0f       	add	r30, r28
     294:	fd 1f       	adc	r31, r29
     296:	e2 0f       	add	r30, r18
     298:	f3 1f       	adc	r31, r19
     29a:	83 e0       	ldi	r24, 0x03	; 3
     29c:	84 0f       	add	r24, r20
     29e:	80 83       	st	Z, r24
				arry[placement]=3+1;
     2a0:	ea e1       	ldi	r30, 0x1A	; 26
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	ec 0f       	add	r30, r28
     2a6:	fd 1f       	adc	r31, r29
     2a8:	e2 0f       	add	r30, r18
     2aa:	f3 1f       	adc	r31, r19
     2ac:	84 e0       	ldi	r24, 0x04	; 4
     2ae:	80 83       	st	Z, r24
				placement++;}
     2b0:	2f 5f       	subi	r18, 0xFF	; 255
     2b2:	3f 4f       	sbci	r19, 0xFF	; 255
     2b4:	15 c0       	rjmp	.+42     	; 0x2e0 <filllocationarrays+0x21c>
			}else{
				if (set == 1){
     2b6:	81 30       	cpi	r24, 0x01	; 1
     2b8:	99 f4       	brne	.+38     	; 0x2e0 <filllocationarrays+0x21c>
				arrx[placement]=i-3+1;
     2ba:	e1 e0       	ldi	r30, 0x01	; 1
     2bc:	f0 e0       	ldi	r31, 0x00	; 0
     2be:	ec 0f       	add	r30, r28
     2c0:	fd 1f       	adc	r31, r29
     2c2:	e2 0f       	add	r30, r18
     2c4:	f3 1f       	adc	r31, r19
     2c6:	8e ef       	ldi	r24, 0xFE	; 254
     2c8:	84 0f       	add	r24, r20
     2ca:	80 83       	st	Z, r24
				arry[placement]=4+1;
     2cc:	ea e1       	ldi	r30, 0x1A	; 26
     2ce:	f0 e0       	ldi	r31, 0x00	; 0
     2d0:	ec 0f       	add	r30, r28
     2d2:	fd 1f       	adc	r31, r29
     2d4:	e2 0f       	add	r30, r18
     2d6:	f3 1f       	adc	r31, r19
     2d8:	85 e0       	ldi	r24, 0x05	; 5
     2da:	80 83       	st	Z, r24
				placement++;}
     2dc:	2f 5f       	subi	r18, 0xFF	; 255
     2de:	3f 4f       	sbci	r19, 0xFF	; 255
				arrx[placement]=i-6+1;
				arry[placement]=3+1;
				placement++;}
			}
		}
		for (int i=0;i<8;i++){
     2e0:	4f 5f       	subi	r20, 0xFF	; 255
     2e2:	5f 4f       	sbci	r21, 0xFF	; 255
     2e4:	48 30       	cpi	r20, 0x08	; 8
     2e6:	51 05       	cpc	r21, r1
     2e8:	14 f2       	brlt	.-124    	; 0x26e <filllocationarrays+0x1aa>
     2ea:	20 e0       	ldi	r18, 0x00	; 0
     2ec:	30 e0       	ldi	r19, 0x00	; 0
     2ee:	19 c0       	rjmp	.+50     	; 0x322 <filllocationarrays+0x25e>
				arry[placement]=4+1;
				placement++;}
			}
		}
	for (int i=0;i<25;i++){
		self->Orderarx[i]=arrx[i];
     2f0:	e1 e0       	ldi	r30, 0x01	; 1
     2f2:	f0 e0       	ldi	r31, 0x00	; 0
     2f4:	ec 0f       	add	r30, r28
     2f6:	fd 1f       	adc	r31, r29
     2f8:	e2 0f       	add	r30, r18
     2fa:	f3 1f       	adc	r31, r19
     2fc:	40 81       	ld	r20, Z
     2fe:	cd 01       	movw	r24, r26
     300:	82 0f       	add	r24, r18
     302:	93 1f       	adc	r25, r19
     304:	fc 01       	movw	r30, r24
     306:	ee 5a       	subi	r30, 0xAE	; 174
     308:	ff 4f       	sbci	r31, 0xFF	; 255
     30a:	40 83       	st	Z, r20
		self->Orderary[i]=arry[i];
     30c:	ea e1       	ldi	r30, 0x1A	; 26
     30e:	f0 e0       	ldi	r31, 0x00	; 0
     310:	ec 0f       	add	r30, r28
     312:	fd 1f       	adc	r31, r29
     314:	e2 0f       	add	r30, r18
     316:	f3 1f       	adc	r31, r19
     318:	40 81       	ld	r20, Z
     31a:	fc 01       	movw	r30, r24
     31c:	41 af       	std	Z+57, r20	; 0x39
				arrx[placement]=i-3+1;
				arry[placement]=4+1;
				placement++;}
			}
		}
	for (int i=0;i<25;i++){
     31e:	2f 5f       	subi	r18, 0xFF	; 255
     320:	3f 4f       	sbci	r19, 0xFF	; 255
     322:	29 31       	cpi	r18, 0x19	; 25
     324:	31 05       	cpc	r19, r1
     326:	24 f3       	brlt	.-56     	; 0x2f0 <filllocationarrays+0x22c>
		self->Orderarx[i]=arrx[i];
		self->Orderary[i]=arry[i];
	}
}
     328:	e2 96       	adiw	r28, 0x32	; 50
     32a:	0f b6       	in	r0, 0x3f	; 63
     32c:	f8 94       	cli
     32e:	de bf       	out	0x3e, r29	; 62
     330:	0f be       	out	0x3f, r0	; 63
     332:	cd bf       	out	0x3d, r28	; 61
     334:	df 91       	pop	r29
     336:	cf 91       	pop	r28
     338:	08 95       	ret

0000033a <sendACK>:
			


void sendACK(Communications *self ){
     33a:	cf 93       	push	r28
     33c:	df 93       	push	r29
     33e:	00 d0       	rcall	.+0      	; 0x340 <sendACK+0x6>
     340:	1f 92       	push	r1
     342:	cd b7       	in	r28, 0x3d	; 61
     344:	de b7       	in	r29, 0x3e	; 62
						char tmp[3];
						tmp[0]=START;
     346:	88 e0       	ldi	r24, 0x08	; 8
     348:	89 83       	std	Y+1, r24	; 0x01
						tmp[1]=255;
     34a:	8f ef       	ldi	r24, 0xFF	; 255
     34c:	8a 83       	std	Y+2, r24	; 0x02
						tmp[2]=STOP;
     34e:	85 e6       	ldi	r24, 0x65	; 101
     350:	8b 83       	std	Y+3, r24	; 0x03
						serial_send_blocking(tmp,4);
     352:	64 e0       	ldi	r22, 0x04	; 4
     354:	ce 01       	movw	r24, r28
     356:	01 96       	adiw	r24, 0x01	; 1
     358:	0e 94 a9 16 	call	0x2d52	; 0x2d52 <serial_send_blocking>
}
     35c:	0f 90       	pop	r0
     35e:	0f 90       	pop	r0
     360:	0f 90       	pop	r0
     362:	df 91       	pop	r29
     364:	cf 91       	pop	r28
     366:	08 95       	ret

00000368 <Update>:

void Update(Communications *self){
     368:	cf 92       	push	r12
     36a:	df 92       	push	r13
     36c:	ef 92       	push	r14
     36e:	ff 92       	push	r15
     370:	1f 93       	push	r17
     372:	cf 93       	push	r28
     374:	df 93       	push	r29
     376:	ec 01       	movw	r28, r24
	
	char Flag =0;
	unsigned long timebetweensends = 750;
	static unsigned long timesincelastsend = 0;
	
	if (serial_receive_buffer_full()==1){
     378:	0e 94 56 15 	call	0x2aac	; 0x2aac <serial_receive_buffer_full>
     37c:	81 30       	cpi	r24, 0x01	; 1
     37e:	09 f0       	breq	.+2      	; 0x382 <Update+0x1a>
     380:	5e c0       	rjmp	.+188    	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
		if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
     382:	8b 8d       	ldd	r24, Y+27	; 0x1b
     384:	88 30       	cpi	r24, 0x08	; 8
     386:	09 f0       	breq	.+2      	; 0x38a <Update+0x22>
     388:	5c c0       	rjmp	.+184    	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
     38a:	e8 81       	ld	r30, Y
     38c:	f0 e0       	ldi	r31, 0x00	; 0
     38e:	31 97       	sbiw	r30, 0x01	; 1
     390:	ec 0f       	add	r30, r28
     392:	fd 1f       	adc	r31, r29
     394:	83 8d       	ldd	r24, Z+27	; 0x1b
     396:	85 36       	cpi	r24, 0x65	; 101
     398:	09 f0       	breq	.+2      	; 0x39c <Update+0x34>
     39a:	55 c0       	rjmp	.+170    	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
			Flag = 1;
			//play_from_program_space(fugue);
			
			sendACK(self); // stops here to send acknowledge
     39c:	ce 01       	movw	r24, r28
     39e:	0e 94 9d 01 	call	0x33a	; 0x33a <sendACK>
			
			if (self->Recieved[5]==254 || self->Recieved[8]==254){    //enter emergency stop
     3a2:	88 a1       	ldd	r24, Y+32	; 0x20
     3a4:	8e 3f       	cpi	r24, 0xFE	; 254
     3a6:	19 f0       	breq	.+6      	; 0x3ae <Update+0x46>
     3a8:	8b a1       	ldd	r24, Y+35	; 0x23
     3aa:	8e 3f       	cpi	r24, 0xFE	; 254
     3ac:	29 f4       	brne	.+10     	; 0x3b8 <Update+0x50>
				//play_from_program_space(fugue);
				self->EmergencyStop=1;
     3ae:	81 e0       	ldi	r24, 0x01	; 1
     3b0:	fe 01       	movw	r30, r28
     3b2:	e5 59       	subi	r30, 0x95	; 149
     3b4:	ff 4f       	sbci	r31, 0xFF	; 255
     3b6:	80 83       	st	Z, r24
			}
			
			if (self->Recieved[8]==250){    // Charging
     3b8:	8b a1       	ldd	r24, Y+35	; 0x23
     3ba:	8a 3f       	cpi	r24, 0xFA	; 250
     3bc:	29 f4       	brne	.+10     	; 0x3c8 <Update+0x60>
				self->EmergencyStop=4;
     3be:	94 e0       	ldi	r25, 0x04	; 4
     3c0:	fe 01       	movw	r30, r28
     3c2:	e5 59       	subi	r30, 0x95	; 149
     3c4:	ff 4f       	sbci	r31, 0xFF	; 255
     3c6:	90 83       	st	Z, r25
			}
			
			if (self->Recieved[8]==245){                            // Enter Spin Mode
     3c8:	85 3f       	cpi	r24, 0xF5	; 245
     3ca:	29 f4       	brne	.+10     	; 0x3d6 <Update+0x6e>
				self->EmergencyStop=2;
     3cc:	92 e0       	ldi	r25, 0x02	; 2
     3ce:	fe 01       	movw	r30, r28
     3d0:	e5 59       	subi	r30, 0x95	; 149
     3d2:	ff 4f       	sbci	r31, 0xFF	; 255
     3d4:	90 83       	st	Z, r25
			}
			if(self->Recieved[8]==230){
     3d6:	86 3e       	cpi	r24, 0xE6	; 230
     3d8:	39 f4       	brne	.+14     	; 0x3e8 <Update+0x80>
				self->locationx = -1;
     3da:	9f ef       	ldi	r25, 0xFF	; 255
     3dc:	fe 01       	movw	r30, r28
     3de:	e2 59       	subi	r30, 0x92	; 146
     3e0:	ff 4f       	sbci	r31, 0xFF	; 255
     3e2:	90 83       	st	Z, r25
				self->locationy = -1;
     3e4:	31 96       	adiw	r30, 0x01	; 1
     3e6:	90 83       	st	Z, r25
				
			}
			if (self->Recieved[8]==240){                            // Enter Manual Mode
     3e8:	80 3f       	cpi	r24, 0xF0	; 240
     3ea:	a9 f4       	brne	.+42     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
				self->EmergencyStop=3;
     3ec:	83 e0       	ldi	r24, 0x03	; 3
     3ee:	fe 01       	movw	r30, r28
     3f0:	e5 59       	subi	r30, 0x95	; 149
     3f2:	ff 4f       	sbci	r31, 0xFF	; 255
     3f4:	80 83       	st	Z, r24
				for (int i = 0; i < 4; i++){
     3f6:	80 e0       	ldi	r24, 0x00	; 0
     3f8:	90 e0       	ldi	r25, 0x00	; 0
     3fa:	0a c0       	rjmp	.+20     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
					self->Direction[i]=self->Recieved[i+9];
     3fc:	fc 01       	movw	r30, r24
     3fe:	39 96       	adiw	r30, 0x09	; 9
     400:	ec 0f       	add	r30, r28
     402:	fd 1f       	adc	r31, r29
     404:	23 8d       	ldd	r18, Z+27	; 0x1b
     406:	fe 01       	movw	r30, r28
     408:	e8 0f       	add	r30, r24
     40a:	f9 1f       	adc	r31, r25
     40c:	25 ab       	std	Z+53, r18	; 0x35
				self->locationy = -1;
				
			}
			if (self->Recieved[8]==240){                            // Enter Manual Mode
				self->EmergencyStop=3;
				for (int i = 0; i < 4; i++){
     40e:	01 96       	adiw	r24, 0x01	; 1
     410:	84 30       	cpi	r24, 0x04	; 4
     412:	91 05       	cpc	r25, r1
     414:	9c f3       	brlt	.-26     	; 0x3fc <Update+0x94>
					self->Direction[i]=self->Recieved[i+9];
				}
			}
			
			if (self->locationx==255 && self->locationy==255){
     416:	fe 01       	movw	r30, r28
     418:	e2 59       	subi	r30, 0x92	; 146
     41a:	ff 4f       	sbci	r31, 0xFF	; 255
     41c:	80 81       	ld	r24, Z
     41e:	8f 3f       	cpi	r24, 0xFF	; 255
     420:	a1 f4       	brne	.+40     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     422:	31 96       	adiw	r30, 0x01	; 1
     424:	80 81       	ld	r24, Z
     426:	8f 3f       	cpi	r24, 0xFF	; 255
     428:	91 f4       	brne	.+36     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
				filllocationarrays(self);
     42a:	ce 01       	movw	r24, r28
     42c:	0e 94 62 00 	call	0xc4	; 0xc4 <filllocationarrays>
				self->flag =1;
     430:	81 e0       	ldi	r24, 0x01	; 1
     432:	fe 01       	movw	r30, r28
     434:	e0 59       	subi	r30, 0x90	; 144
     436:	ff 4f       	sbci	r31, 0xFF	; 255
     438:	80 83       	st	Z, r24
	unsigned long timebetweensends = 750;
	static unsigned long timesincelastsend = 0;
	
	if (serial_receive_buffer_full()==1){
		if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
			Flag = 1;
     43a:	11 e0       	ldi	r17, 0x01	; 1
     43c:	09 c0       	rjmp	.+18     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
}

void Update(Communications *self){
	
	
	char Flag =0;
     43e:	10 e0       	ldi	r17, 0x00	; 0
     440:	07 c0       	rjmp	.+14     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
     442:	10 e0       	ldi	r17, 0x00	; 0
     444:	05 c0       	rjmp	.+10     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
     446:	10 e0       	ldi	r17, 0x00	; 0
     448:	03 c0       	rjmp	.+6      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
	unsigned long timebetweensends = 750;
	static unsigned long timesincelastsend = 0;
	
	if (serial_receive_buffer_full()==1){
		if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
			Flag = 1;
     44a:	11 e0       	ldi	r17, 0x01	; 1
     44c:	01 c0       	rjmp	.+2      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
     44e:	11 e0       	ldi	r17, 0x01	; 1
				filllocationarrays(self);
				self->flag =1;
			}
		}
	}
 if (timesincelastsend+timebetweensends<=get_ms()){
     450:	c0 90 f9 01 	lds	r12, 0x01F9	; 0x8001f9 <timesincelastsend.2232>
     454:	d0 90 fa 01 	lds	r13, 0x01FA	; 0x8001fa <timesincelastsend.2232+0x1>
     458:	e0 90 fb 01 	lds	r14, 0x01FB	; 0x8001fb <timesincelastsend.2232+0x2>
     45c:	f0 90 fc 01 	lds	r15, 0x01FC	; 0x8001fc <timesincelastsend.2232+0x3>
     460:	8e ee       	ldi	r24, 0xEE	; 238
     462:	c8 0e       	add	r12, r24
     464:	82 e0       	ldi	r24, 0x02	; 2
     466:	d8 1e       	adc	r13, r24
     468:	e1 1c       	adc	r14, r1
     46a:	f1 1c       	adc	r15, r1
     46c:	0e 94 51 17 	call	0x2ea2	; 0x2ea2 <get_ms>
     470:	6c 15       	cp	r22, r12
     472:	7d 05       	cpc	r23, r13
     474:	8e 05       	cpc	r24, r14
     476:	9f 05       	cpc	r25, r15
     478:	c8 f1       	brcs	.+114    	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
	 timesincelastsend=get_ms();
     47a:	0e 94 51 17 	call	0x2ea2	; 0x2ea2 <get_ms>
     47e:	60 93 f9 01 	sts	0x01F9, r22	; 0x8001f9 <timesincelastsend.2232>
     482:	70 93 fa 01 	sts	0x01FA, r23	; 0x8001fa <timesincelastsend.2232+0x1>
     486:	80 93 fb 01 	sts	0x01FB, r24	; 0x8001fb <timesincelastsend.2232+0x2>
     48a:	90 93 fc 01 	sts	0x01FC, r25	; 0x8001fc <timesincelastsend.2232+0x3>
	 for (char i=0;i<self->val;i++){
     48e:	80 e0       	ldi	r24, 0x00	; 0
     490:	05 c0       	rjmp	.+10     	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
		 self->msgBuffer[i]=i;
     492:	fe 01       	movw	r30, r28
     494:	e8 0f       	add	r30, r24
     496:	f1 1d       	adc	r31, r1
     498:	81 83       	std	Z+1, r24	; 0x01
			}
		}
	}
 if (timesincelastsend+timebetweensends<=get_ms()){
	 timesincelastsend=get_ms();
	 for (char i=0;i<self->val;i++){
     49a:	8f 5f       	subi	r24, 0xFF	; 255
     49c:	68 81       	ld	r22, Y
     49e:	86 17       	cp	r24, r22
     4a0:	c0 f3       	brcs	.-16     	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
		 self->msgBuffer[i]=i;
	 }
	 self->msgBuffer[0]=START;
     4a2:	88 e0       	ldi	r24, 0x08	; 8
     4a4:	89 83       	std	Y+1, r24	; 0x01
	 self->msgBuffer[1]=self->batterylvl;
     4a6:	fe 01       	movw	r30, r28
     4a8:	e4 59       	subi	r30, 0x94	; 148
     4aa:	ff 4f       	sbci	r31, 0xFF	; 255
     4ac:	80 81       	ld	r24, Z
     4ae:	8a 83       	std	Y+2, r24	; 0x02
	 self->msgBuffer[2]=self->magprocess;
     4b0:	31 96       	adiw	r30, 0x01	; 1
     4b2:	80 81       	ld	r24, Z
     4b4:	8b 83       	std	Y+3, r24	; 0x03
	 self->msgBuffer[3]=self->locationx;
     4b6:	31 96       	adiw	r30, 0x01	; 1
     4b8:	80 81       	ld	r24, Z
     4ba:	8c 83       	std	Y+4, r24	; 0x04
	 self->msgBuffer[4]=self->locationy;
     4bc:	31 96       	adiw	r30, 0x01	; 1
     4be:	80 81       	ld	r24, Z
     4c0:	8d 83       	std	Y+5, r24	; 0x05
	 self->msgBuffer[5]=self->EmergencyStop;
     4c2:	34 97       	sbiw	r30, 0x04	; 4
     4c4:	80 81       	ld	r24, Z
     4c6:	8e 83       	std	Y+6, r24	; 0x06
	 self->msgBuffer[self->val-1]=STOP;
     4c8:	e6 2f       	mov	r30, r22
     4ca:	f0 e0       	ldi	r31, 0x00	; 0
     4cc:	31 97       	sbiw	r30, 0x01	; 1
     4ce:	ec 0f       	add	r30, r28
     4d0:	fd 1f       	adc	r31, r29
     4d2:	85 e6       	ldi	r24, 0x65	; 101
     4d4:	81 83       	std	Z+1, r24	; 0x01
	 serial_send(self->msgBuffer, self->val);
     4d6:	ce 01       	movw	r24, r28
     4d8:	01 96       	adiw	r24, 0x01	; 1
     4da:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <serial_send>

	 //delay_ms(10000); // test
	 if (Flag == 1){
     4de:	11 30       	cpi	r17, 0x01	; 1
     4e0:	29 f4       	brne	.+10     	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
		 serial_receive(self->Recieved,self->val);
     4e2:	68 81       	ld	r22, Y
     4e4:	ce 01       	movw	r24, r28
     4e6:	4b 96       	adiw	r24, 0x1b	; 27
     4e8:	0e 94 dd 15 	call	0x2bba	; 0x2bba <serial_receive>
	 }
 }
}
     4ec:	df 91       	pop	r29
     4ee:	cf 91       	pop	r28
     4f0:	1f 91       	pop	r17
     4f2:	ff 90       	pop	r15
     4f4:	ef 90       	pop	r14
     4f6:	df 90       	pop	r13
     4f8:	cf 90       	pop	r12
     4fa:	08 95       	ret

000004fc <fillarrays>:

void fillarrays(Communications *self){
     4fc:	cf 93       	push	r28
     4fe:	df 93       	push	r29
     500:	cd b7       	in	r28, 0x3d	; 61
     502:	de b7       	in	r29, 0x3e	; 62
     504:	60 97       	sbiw	r28, 0x10	; 16
     506:	0f b6       	in	r0, 0x3f	; 63
     508:	f8 94       	cli
     50a:	de bf       	out	0x3e, r29	; 62
     50c:	0f be       	out	0x3f, r0	; 63
     50e:	cd bf       	out	0x3d, r28	; 61
     510:	ac 01       	movw	r20, r24
	//temp
		char arrx[]={2,5,4,2,1,6,1,5};
     512:	88 e0       	ldi	r24, 0x08	; 8
     514:	e8 e2       	ldi	r30, 0x28	; 40
     516:	f1 e0       	ldi	r31, 0x01	; 1
     518:	de 01       	movw	r26, r28
     51a:	11 96       	adiw	r26, 0x01	; 1
     51c:	01 90       	ld	r0, Z+
     51e:	0d 92       	st	X+, r0
     520:	8a 95       	dec	r24
     522:	e1 f7       	brne	.-8      	; 0x51c <fillarrays+0x20>
		char arry[]={0,1,3,5,2,4,1,2};
     524:	88 e0       	ldi	r24, 0x08	; 8
     526:	e0 e3       	ldi	r30, 0x30	; 48
     528:	f1 e0       	ldi	r31, 0x01	; 1
     52a:	de 01       	movw	r26, r28
     52c:	19 96       	adiw	r26, 0x09	; 9
     52e:	01 90       	ld	r0, Z+
     530:	0d 92       	st	X+, r0
     532:	8a 95       	dec	r24
     534:	e1 f7       	brne	.-8      	; 0x52e <fillarrays+0x32>
		for (int i=0;i<8;i++){
     536:	20 e0       	ldi	r18, 0x00	; 0
     538:	30 e0       	ldi	r19, 0x00	; 0
     53a:	19 c0       	rjmp	.+50     	; 0x56e <fillarrays+0x72>
			self->Orderarx[i]=arrx[i];
     53c:	e1 e0       	ldi	r30, 0x01	; 1
     53e:	f0 e0       	ldi	r31, 0x00	; 0
     540:	ec 0f       	add	r30, r28
     542:	fd 1f       	adc	r31, r29
     544:	e2 0f       	add	r30, r18
     546:	f3 1f       	adc	r31, r19
     548:	90 81       	ld	r25, Z
     54a:	da 01       	movw	r26, r20
     54c:	a2 0f       	add	r26, r18
     54e:	b3 1f       	adc	r27, r19
     550:	fd 01       	movw	r30, r26
     552:	ee 5a       	subi	r30, 0xAE	; 174
     554:	ff 4f       	sbci	r31, 0xFF	; 255
     556:	90 83       	st	Z, r25
			self->Orderary[i]=arry[i];
     558:	e9 e0       	ldi	r30, 0x09	; 9
     55a:	f0 e0       	ldi	r31, 0x00	; 0
     55c:	ec 0f       	add	r30, r28
     55e:	fd 1f       	adc	r31, r29
     560:	e2 0f       	add	r30, r18
     562:	f3 1f       	adc	r31, r19
     564:	90 81       	ld	r25, Z
     566:	d9 96       	adiw	r26, 0x39	; 57
     568:	9c 93       	st	X, r25

void fillarrays(Communications *self){
	//temp
		char arrx[]={2,5,4,2,1,6,1,5};
		char arry[]={0,1,3,5,2,4,1,2};
		for (int i=0;i<8;i++){
     56a:	2f 5f       	subi	r18, 0xFF	; 255
     56c:	3f 4f       	sbci	r19, 0xFF	; 255
     56e:	28 30       	cpi	r18, 0x08	; 8
     570:	31 05       	cpc	r19, r1
     572:	24 f3       	brlt	.-56     	; 0x53c <fillarrays+0x40>
			self->Orderarx[i]=arrx[i];
			self->Orderary[i]=arry[i];
		}
}
     574:	60 96       	adiw	r28, 0x10	; 16
     576:	0f b6       	in	r0, 0x3f	; 63
     578:	f8 94       	cli
     57a:	de bf       	out	0x3e, r29	; 62
     57c:	0f be       	out	0x3f, r0	; 63
     57e:	cd bf       	out	0x3d, r28	; 61
     580:	df 91       	pop	r29
     582:	cf 91       	pop	r28
     584:	08 95       	ret

00000586 <Communications_INIT>:

void Communications_INIT(Communications * myCom){
     586:	0f 93       	push	r16
     588:	1f 93       	push	r17
     58a:	cf 93       	push	r28
     58c:	df 93       	push	r29
     58e:	ec 01       	movw	r28, r24
	myCom->val = Max_Bytes;	
     590:	8a e1       	ldi	r24, 0x1A	; 26
     592:	88 83       	st	Y, r24


	//Setup Communications
	serial_set_baud_rate(9600);
     594:	60 e8       	ldi	r22, 0x80	; 128
     596:	75 e2       	ldi	r23, 0x25	; 37
     598:	80 e0       	ldi	r24, 0x00	; 0
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	0e 94 34 16 	call	0x2c68	; 0x2c68 <serial_set_baud_rate>
	serial_receive(myCom->Recieved,myCom->val);
     5a0:	68 81       	ld	r22, Y
     5a2:	ce 01       	movw	r24, r28
     5a4:	4b 96       	adiw	r24, 0x1b	; 27
     5a6:	0e 94 dd 15 	call	0x2bba	; 0x2bba <serial_receive>

	//filling in functions
	myCom->Update		 = Update;
     5aa:	fe 01       	movw	r30, r28
     5ac:	ef 58       	subi	r30, 0x8F	; 143
     5ae:	ff 4f       	sbci	r31, 0xFF	; 255
     5b0:	84 eb       	ldi	r24, 0xB4	; 180
     5b2:	91 e0       	ldi	r25, 0x01	; 1
     5b4:	91 83       	std	Z+1, r25	; 0x01
     5b6:	80 83       	st	Z, r24
		
	//filling in default values
	myCom->EmergencyStop = 0;
     5b8:	36 97       	sbiw	r30, 0x06	; 6
     5ba:	10 82       	st	Z, r1
	myCom->batterylvl	 = batteryPercentage();
     5bc:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
     5c0:	8e 01       	movw	r16, r28
     5c2:	04 59       	subi	r16, 0x94	; 148
     5c4:	1f 4f       	sbci	r17, 0xFF	; 255
     5c6:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <__fixunssfsi>
     5ca:	f8 01       	movw	r30, r16
     5cc:	60 83       	st	Z, r22
	myCom->magprocess	 = 0;
     5ce:	31 96       	adiw	r30, 0x01	; 1
     5d0:	10 82       	st	Z, r1
	myCom->locationx	 = 4;
     5d2:	31 96       	adiw	r30, 0x01	; 1
     5d4:	84 e0       	ldi	r24, 0x04	; 4
     5d6:	80 83       	st	Z, r24
	myCom->locationy	 = 5;
     5d8:	31 96       	adiw	r30, 0x01	; 1
     5da:	85 e0       	ldi	r24, 0x05	; 5
     5dc:	80 83       	st	Z, r24
	
	
	fillarrays(myCom);
     5de:	ce 01       	movw	r24, r28
     5e0:	0e 94 7e 02 	call	0x4fc	; 0x4fc <fillarrays>
}
     5e4:	df 91       	pop	r29
     5e6:	cf 91       	pop	r28
     5e8:	1f 91       	pop	r17
     5ea:	0f 91       	pop	r16
     5ec:	08 95       	ret

000005ee <batteryPercentage>:
     5ee:	cf 92       	push	r12
     5f0:	df 92       	push	r13
     5f2:	ef 92       	push	r14
     5f4:	ff 92       	push	r15
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     5f6:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <read_battery_millivolts_3pi>
     5fa:	bc 01       	movw	r22, r24
     5fc:	80 e0       	ldi	r24, 0x00	; 0
     5fe:	90 e0       	ldi	r25, 0x00	; 0
     600:	0e 94 d5 0d 	call	0x1baa	; 0x1baa <__floatunsisf>
     604:	6b 01       	movw	r12, r22
     606:	7c 01       	movw	r14, r24
     608:	9b 01       	movw	r18, r22
     60a:	ac 01       	movw	r20, r24
     60c:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <__mulsf3>
     610:	9b 01       	movw	r18, r22
     612:	ac 01       	movw	r20, r24
     614:	c7 01       	movw	r24, r14
     616:	b6 01       	movw	r22, r12
     618:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <__mulsf3>
     61c:	2c e0       	ldi	r18, 0x0C	; 12
     61e:	39 eb       	ldi	r19, 0xB9	; 185
     620:	4d e2       	ldi	r20, 0x2D	; 45
     622:	50 e3       	ldi	r21, 0x30	; 48
     624:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <__mulsf3>
     628:	ff 90       	pop	r15
     62a:	ef 90       	pop	r14
     62c:	df 90       	pop	r13
     62e:	cf 90       	pop	r12
     630:	08 95       	ret

00000632 <updateDisplay>:
     632:	ef 92       	push	r14
     634:	ff 92       	push	r15
     636:	0f 93       	push	r16
     638:	1f 93       	push	r17
     63a:	cf 93       	push	r28
     63c:	7c 01       	movw	r14, r24
     63e:	8b 01       	movw	r16, r22
     640:	c4 2f       	mov	r28, r20
     642:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <clear>
     646:	60 e0       	ldi	r22, 0x00	; 0
     648:	80 e0       	ldi	r24, 0x00	; 0
     64a:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <lcd_goto_xy>
     64e:	85 e5       	ldi	r24, 0x55	; 85
     650:	91 e0       	ldi	r25, 0x01	; 1
     652:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <print>
     656:	b7 01       	movw	r22, r14
     658:	ff 0c       	add	r15, r15
     65a:	88 0b       	sbc	r24, r24
     65c:	99 0b       	sbc	r25, r25
     65e:	0e 94 37 14 	call	0x286e	; 0x286e <print_long>
     662:	8a e5       	ldi	r24, 0x5A	; 90
     664:	91 e0       	ldi	r25, 0x01	; 1
     666:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <print>
     66a:	61 e0       	ldi	r22, 0x01	; 1
     66c:	80 e0       	ldi	r24, 0x00	; 0
     66e:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <lcd_goto_xy>
     672:	8c e5       	ldi	r24, 0x5C	; 92
     674:	91 e0       	ldi	r25, 0x01	; 1
     676:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <print>
     67a:	b8 01       	movw	r22, r16
     67c:	11 0f       	add	r17, r17
     67e:	88 0b       	sbc	r24, r24
     680:	99 0b       	sbc	r25, r25
     682:	0e 94 37 14 	call	0x286e	; 0x286e <print_long>
     686:	8a e5       	ldi	r24, 0x5A	; 90
     688:	91 e0       	ldi	r25, 0x01	; 1
     68a:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <print>
     68e:	c2 30       	cpi	r28, 0x02	; 2
     690:	a9 f0       	breq	.+42     	; 0x6bc <updateDisplay+0x8a>
     692:	28 f4       	brcc	.+10     	; 0x69e <updateDisplay+0x6c>
     694:	cc 23       	and	r28, r28
     696:	41 f0       	breq	.+16     	; 0x6a8 <updateDisplay+0x76>
     698:	c1 30       	cpi	r28, 0x01	; 1
     69a:	59 f0       	breq	.+22     	; 0x6b2 <updateDisplay+0x80>
     69c:	1d c0       	rjmp	.+58     	; 0x6d8 <updateDisplay+0xa6>
     69e:	c3 30       	cpi	r28, 0x03	; 3
     6a0:	91 f0       	breq	.+36     	; 0x6c6 <updateDisplay+0x94>
     6a2:	c4 30       	cpi	r28, 0x04	; 4
     6a4:	a9 f0       	breq	.+42     	; 0x6d0 <updateDisplay+0x9e>
     6a6:	18 c0       	rjmp	.+48     	; 0x6d8 <updateDisplay+0xa6>
     6a8:	81 e6       	ldi	r24, 0x61	; 97
     6aa:	91 e0       	ldi	r25, 0x01	; 1
     6ac:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <print>
     6b0:	13 c0       	rjmp	.+38     	; 0x6d8 <updateDisplay+0xa6>
     6b2:	83 e6       	ldi	r24, 0x63	; 99
     6b4:	91 e0       	ldi	r25, 0x01	; 1
     6b6:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <print>
     6ba:	0e c0       	rjmp	.+28     	; 0x6d8 <updateDisplay+0xa6>
     6bc:	85 e6       	ldi	r24, 0x65	; 101
     6be:	91 e0       	ldi	r25, 0x01	; 1
     6c0:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <print>
     6c4:	09 c0       	rjmp	.+18     	; 0x6d8 <updateDisplay+0xa6>
     6c6:	87 e6       	ldi	r24, 0x67	; 103
     6c8:	91 e0       	ldi	r25, 0x01	; 1
     6ca:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <print>
     6ce:	04 c0       	rjmp	.+8      	; 0x6d8 <updateDisplay+0xa6>
     6d0:	89 e6       	ldi	r24, 0x69	; 105
     6d2:	91 e0       	ldi	r25, 0x01	; 1
     6d4:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <print>
     6d8:	cf 91       	pop	r28
     6da:	1f 91       	pop	r17
     6dc:	0f 91       	pop	r16
     6de:	ff 90       	pop	r15
     6e0:	ef 90       	pop	r14
     6e2:	08 95       	ret

000006e4 <errorDisplay>:
     6e4:	1f 93       	push	r17
     6e6:	cf 93       	push	r28
     6e8:	df 93       	push	r29
     6ea:	18 2f       	mov	r17, r24
     6ec:	eb 01       	movw	r28, r22
     6ee:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <clear>
     6f2:	60 e0       	ldi	r22, 0x00	; 0
     6f4:	80 e0       	ldi	r24, 0x00	; 0
     6f6:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <lcd_goto_xy>
     6fa:	8c e5       	ldi	r24, 0x5C	; 92
     6fc:	91 e0       	ldi	r25, 0x01	; 1
     6fe:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <print>
     702:	be 01       	movw	r22, r28
     704:	dd 0f       	add	r29, r29
     706:	88 0b       	sbc	r24, r24
     708:	99 0b       	sbc	r25, r25
     70a:	0e 94 37 14 	call	0x286e	; 0x286e <print_long>
     70e:	8a e5       	ldi	r24, 0x5A	; 90
     710:	91 e0       	ldi	r25, 0x01	; 1
     712:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <print>
     716:	61 e0       	ldi	r22, 0x01	; 1
     718:	80 e0       	ldi	r24, 0x00	; 0
     71a:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <lcd_goto_xy>
     71e:	11 30       	cpi	r17, 0x01	; 1
     720:	59 f0       	breq	.+22     	; 0x738 <errorDisplay+0x54>
     722:	28 f0       	brcs	.+10     	; 0x72e <errorDisplay+0x4a>
     724:	12 30       	cpi	r17, 0x02	; 2
     726:	69 f0       	breq	.+26     	; 0x742 <errorDisplay+0x5e>
     728:	13 30       	cpi	r17, 0x03	; 3
     72a:	81 f0       	breq	.+32     	; 0x74c <errorDisplay+0x68>
     72c:	13 c0       	rjmp	.+38     	; 0x754 <errorDisplay+0x70>
     72e:	8b e6       	ldi	r24, 0x6B	; 107
     730:	91 e0       	ldi	r25, 0x01	; 1
     732:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <print>
     736:	0e c0       	rjmp	.+28     	; 0x754 <errorDisplay+0x70>
     738:	84 e7       	ldi	r24, 0x74	; 116
     73a:	91 e0       	ldi	r25, 0x01	; 1
     73c:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <print>
     740:	09 c0       	rjmp	.+18     	; 0x754 <errorDisplay+0x70>
     742:	8c e7       	ldi	r24, 0x7C	; 124
     744:	91 e0       	ldi	r25, 0x01	; 1
     746:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <print>
     74a:	04 c0       	rjmp	.+8      	; 0x754 <errorDisplay+0x70>
     74c:	83 e8       	ldi	r24, 0x83	; 131
     74e:	91 e0       	ldi	r25, 0x01	; 1
     750:	0e 94 e2 13 	call	0x27c4	; 0x27c4 <print>
     754:	df 91       	pop	r29
     756:	cf 91       	pop	r28
     758:	1f 91       	pop	r17
     75a:	08 95       	ret

0000075c <whileBarcode>:

const char welcome[] PROGMEM = ">g32>>c32";

void whileBarcode()
{
	while (lineType() != Barcode)
     75c:	03 c0       	rjmp	.+6      	; 0x764 <whileBarcode+0x8>
	{
		motorControl('S');
     75e:	83 e5       	ldi	r24, 0x53	; 83
     760:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>

const char welcome[] PROGMEM = ">g32>>c32";

void whileBarcode()
{
	while (lineType() != Barcode)
     764:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lineType>
     768:	82 30       	cpi	r24, 0x02	; 2
     76a:	c9 f7       	brne	.-14     	; 0x75e <whileBarcode+0x2>
	{
		motorControl('S');
	}
}
     76c:	08 95       	ret

0000076e <whileLineEnd>:

void whileLineEnd()
{
	while (lineType() != Line_end)
     76e:	03 c0       	rjmp	.+6      	; 0x776 <whileLineEnd+0x8>
	{
		motorControl('S');
     770:	83 e5       	ldi	r24, 0x53	; 83
     772:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
	}
}

void whileLineEnd()
{
	while (lineType() != Line_end)
     776:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lineType>
     77a:	81 30       	cpi	r24, 0x01	; 1
     77c:	c9 f7       	brne	.-14     	; 0x770 <whileLineEnd+0x2>
	{
		motorControl('S');
	}
}
     77e:	08 95       	ret

00000780 <charge_3pi>:
void charge_3pi(Communications *communications)
{
     780:	cf 93       	push	r28
     782:	df 93       	push	r29
     784:	ec 01       	movw	r28, r24
	whileBarcode();
     786:	0e 94 ae 03 	call	0x75c	; 0x75c <whileBarcode>
	updateDisplay(0, batteryPercentage(), mazeSolver);
     78a:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
     78e:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <__fixsfsi>
     792:	41 e0       	ldi	r20, 0x01	; 1
     794:	80 e0       	ldi	r24, 0x00	; 0
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	0e 94 19 03 	call	0x632	; 0x632 <updateDisplay>
	parcours('T', communications);
     79c:	be 01       	movw	r22, r28
     79e:	84 e5       	ldi	r24, 0x54	; 84
     7a0:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <parcours>
	updateDisplay(0, batteryPercentage(), chargeMode);
     7a4:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
     7a8:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <__fixsfsi>
     7ac:	43 e0       	ldi	r20, 0x03	; 3
     7ae:	80 e0       	ldi	r24, 0x00	; 0
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	0e 94 19 03 	call	0x632	; 0x632 <updateDisplay>
	warehouse(charging, communications);
     7b6:	be 01       	movw	r22, r28
     7b8:	81 e0       	ldi	r24, 0x01	; 1
     7ba:	0e 94 56 0b 	call	0x16ac	; 0x16ac <warehouse>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     7be:	88 e8       	ldi	r24, 0x88	; 136
     7c0:	93 e1       	ldi	r25, 0x13	; 19
     7c2:	0e 94 19 17 	call	0x2e32	; 0x2e32 <delay_ms>
	delay(5000);								// wacht totdat de robot vol is
	warehouse(charging, communications);
     7c6:	be 01       	movw	r22, r28
     7c8:	81 e0       	ldi	r24, 0x01	; 1
     7ca:	0e 94 56 0b 	call	0x16ac	; 0x16ac <warehouse>
	whileBarcode();
     7ce:	0e 94 ae 03 	call	0x75c	; 0x75c <whileBarcode>
	updateDisplay(0, batteryPercentage(), mazeSolver);
     7d2:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
     7d6:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <__fixsfsi>
     7da:	41 e0       	ldi	r20, 0x01	; 1
     7dc:	80 e0       	ldi	r24, 0x00	; 0
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	0e 94 19 03 	call	0x632	; 0x632 <updateDisplay>
	parcours('B', communications);
     7e4:	be 01       	movw	r22, r28
     7e6:	82 e4       	ldi	r24, 0x42	; 66
     7e8:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <parcours>
	whileLineEnd();
     7ec:	0e 94 b7 03 	call	0x76e	; 0x76e <whileLineEnd>
	motorControl('L');
     7f0:	8c e4       	ldi	r24, 0x4C	; 76
     7f2:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
}
     7f6:	df 91       	pop	r29
     7f8:	cf 91       	pop	r28
     7fa:	08 95       	ret

000007fc <pickOrder>:

void pickOrder(Communications *communications)
{
     7fc:	cf 93       	push	r28
     7fe:	df 93       	push	r29
     800:	ec 01       	movw	r28, r24
	whileBarcode();
     802:	0e 94 ae 03 	call	0x75c	; 0x75c <whileBarcode>
	parcours('T', communications);
     806:	be 01       	movw	r22, r28
     808:	84 e5       	ldi	r24, 0x54	; 84
     80a:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <parcours>
	warehouse(orderPicking, communications); 	
     80e:	be 01       	movw	r22, r28
     810:	80 e0       	ldi	r24, 0x00	; 0
     812:	0e 94 56 0b 	call	0x16ac	; 0x16ac <warehouse>
	parcours('B', communications);
     816:	be 01       	movw	r22, r28
     818:	82 e4       	ldi	r24, 0x42	; 66
     81a:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <parcours>
	whileLineEnd();
     81e:	0e 94 b7 03 	call	0x76e	; 0x76e <whileLineEnd>
	motorControl('L');
     822:	8c e4       	ldi	r24, 0x4C	; 76
     824:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
}
     828:	df 91       	pop	r29
     82a:	cf 91       	pop	r28
     82c:	08 95       	ret

0000082e <main>:

int main()
{
     82e:	cf 93       	push	r28
     830:	df 93       	push	r29
     832:	cd b7       	in	r28, 0x3d	; 61
     834:	de b7       	in	r29, 0x3e	; 62
     836:	c3 57       	subi	r28, 0x73	; 115
     838:	d1 09       	sbc	r29, r1
     83a:	0f b6       	in	r0, 0x3f	; 63
     83c:	f8 94       	cli
     83e:	de bf       	out	0x3e, r29	; 62
     840:	0f be       	out	0x3f, r0	; 63
     842:	cd bf       	out	0x3d, r28	; 61
	play_from_program_space(welcome);
     844:	8a e7       	ldi	r24, 0x7A	; 122
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	0e 94 c7 12 	call	0x258e	; 0x258e <play_from_program_space>
	
	Communications communications;
	Communications_INIT(&communications);
     84c:	ce 01       	movw	r24, r28
     84e:	01 96       	adiw	r24, 0x01	; 1
     850:	0e 94 c3 02 	call	0x586	; 0x586 <Communications_INIT>
	
	initialize(&communications);
     854:	ce 01       	movw	r24, r28
     856:	01 96       	adiw	r24, 0x01	; 1
     858:	0e 94 74 04 	call	0x8e8	; 0x8e8 <initialize>
		
	while(1) 
	{
		//updateDisplay(0, batteryPercentage(), homingMode);
		communications.Update(&communications);
     85c:	e4 96       	adiw	r28, 0x34	; 52
     85e:	ee ad       	ldd	r30, Y+62	; 0x3e
     860:	ff ad       	ldd	r31, Y+63	; 0x3f
     862:	e4 97       	sbiw	r28, 0x34	; 52
     864:	ce 01       	movw	r24, r28
     866:	01 96       	adiw	r24, 0x01	; 1
     868:	09 95       	icall
		
		communications.locationx = -1;
     86a:	8f ef       	ldi	r24, 0xFF	; 255
     86c:	e0 96       	adiw	r28, 0x30	; 48
     86e:	8f af       	std	Y+63, r24	; 0x3f
     870:	e0 97       	sbiw	r28, 0x30	; 48
		communications.locationy = -1;
     872:	e1 96       	adiw	r28, 0x31	; 49
     874:	8f af       	std	Y+63, r24	; 0x3f
     876:	e1 97       	sbiw	r28, 0x31	; 49
		
		lcd_goto_xy(0, 0);
     878:	60 e0       	ldi	r22, 0x00	; 0
     87a:	80 e0       	ldi	r24, 0x00	; 0
     87c:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <lcd_goto_xy>
		
		
		switch (communications.EmergencyStop) {
     880:	ad 96       	adiw	r28, 0x2d	; 45
     882:	8f ad       	ldd	r24, Y+63	; 0x3f
     884:	ad 97       	sbiw	r28, 0x2d	; 45
     886:	82 30       	cpi	r24, 0x02	; 2
     888:	21 f1       	breq	.+72     	; 0x8d2 <main+0xa4>
     88a:	28 f0       	brcs	.+10     	; 0x896 <main+0x68>
     88c:	83 30       	cpi	r24, 0x03	; 3
     88e:	21 f1       	breq	.+72     	; 0x8d8 <main+0xaa>
     890:	84 30       	cpi	r24, 0x04	; 4
     892:	29 f1       	breq	.+74     	; 0x8de <main+0xb0>
     894:	e3 cf       	rjmp	.-58     	; 0x85c <main+0x2e>
				}
				else*/
// 				print_long(communications.locationx);
// 				print_long(communications.locationy);
				
				if (communications.flag==1)
     896:	e2 96       	adiw	r28, 0x32	; 50
     898:	8f ad       	ldd	r24, Y+63	; 0x3f
     89a:	e2 97       	sbiw	r28, 0x32	; 50
     89c:	81 30       	cpi	r24, 0x01	; 1
     89e:	f1 f6       	brne	.-68     	; 0x85c <main+0x2e>
				{
					communications.flag=0;
     8a0:	e2 96       	adiw	r28, 0x32	; 50
     8a2:	1f ae       	std	Y+63, r1	; 0x3f
     8a4:	e2 97       	sbiw	r28, 0x32	; 50
					
					play_from_program_space(welcome);
     8a6:	8a e7       	ldi	r24, 0x7A	; 122
     8a8:	90 e0       	ldi	r25, 0x00	; 0
     8aa:	0e 94 c7 12 	call	0x258e	; 0x258e <play_from_program_space>
					communications.locationx = 0;
     8ae:	e0 96       	adiw	r28, 0x30	; 48
     8b0:	1f ae       	std	Y+63, r1	; 0x3f
     8b2:	e0 97       	sbiw	r28, 0x30	; 48
					communications.locationy = 0;
     8b4:	e1 96       	adiw	r28, 0x31	; 49
     8b6:	1f ae       	std	Y+63, r1	; 0x3f
     8b8:	e1 97       	sbiw	r28, 0x31	; 49
					pickOrder(&communications);
     8ba:	ce 01       	movw	r24, r28
     8bc:	01 96       	adiw	r24, 0x01	; 1
     8be:	0e 94 fe 03 	call	0x7fc	; 0x7fc <pickOrder>
					communications.locationx = -1;
     8c2:	8f ef       	ldi	r24, 0xFF	; 255
     8c4:	e0 96       	adiw	r28, 0x30	; 48
     8c6:	8f af       	std	Y+63, r24	; 0x3f
     8c8:	e0 97       	sbiw	r28, 0x30	; 48
					communications.locationy = -1;
     8ca:	e1 96       	adiw	r28, 0x31	; 49
     8cc:	8f af       	std	Y+63, r24	; 0x3f
     8ce:	e1 97       	sbiw	r28, 0x31	; 49
     8d0:	c5 cf       	rjmp	.-118    	; 0x85c <main+0x2e>
				}
				break;
				delay(100);
			case 2:
				Spin();
     8d2:	0e 94 70 08 	call	0x10e0	; 0x10e0 <Spin>
				break;
     8d6:	c2 cf       	rjmp	.-124    	; 0x85c <main+0x2e>
			case 3:
				manualControl();
     8d8:	0e 94 38 07 	call	0xe70	; 0xe70 <manualControl>
				break;
     8dc:	bf cf       	rjmp	.-130    	; 0x85c <main+0x2e>
				
			case 4:
				charge_3pi(&communications);
     8de:	ce 01       	movw	r24, r28
     8e0:	01 96       	adiw	r24, 0x01	; 1
     8e2:	0e 94 c0 03 	call	0x780	; 0x780 <charge_3pi>
				break;
     8e6:	ba cf       	rjmp	.-140    	; 0x85c <main+0x2e>

000008e8 <initialize>:
void inch(){
	set_motors(50,50);
	delay(200);
	set_motors(0,0);
}
void println(int x){
     8e8:	cf 93       	push	r28
     8ea:	df 93       	push	r29
     8ec:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <myComs+0x1>
     8f0:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <myComs>
     8f4:	80 ed       	ldi	r24, 0xD0	; 208
     8f6:	97 e0       	ldi	r25, 0x07	; 7
     8f8:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <pololu_3pi_init>
     8fc:	0d c0       	rjmp	.+26     	; 0x918 <__stack+0x19>
     8fe:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <clear>
     902:	60 e0       	ldi	r22, 0x00	; 0
     904:	80 e0       	ldi	r24, 0x00	; 0
     906:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <lcd_goto_xy>
     90a:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <read_battery_millivolts_3pi>
     90e:	bc 01       	movw	r22, r24
     910:	80 e0       	ldi	r24, 0x00	; 0
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	0e 94 37 14 	call	0x286e	; 0x286e <print_long>
     918:	80 e1       	ldi	r24, 0x10	; 16
     91a:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <button_is_pressed>
     91e:	88 23       	and	r24, r24
     920:	71 f3       	breq	.-36     	; 0x8fe <initialize+0x16>
     922:	80 e1       	ldi	r24, 0x10	; 16
     924:	0e 94 3f 15 	call	0x2a7e	; 0x2a7e <wait_for_button_release>
     928:	88 ee       	ldi	r24, 0xE8	; 232
     92a:	93 e0       	ldi	r25, 0x03	; 3
     92c:	0e 94 19 17 	call	0x2e32	; 0x2e32 <delay_ms>
     930:	c0 e0       	ldi	r28, 0x00	; 0
     932:	d0 e0       	ldi	r29, 0x00	; 0
     934:	19 c0       	rjmp	.+50     	; 0x968 <__stack+0x69>
     936:	ce 01       	movw	r24, r28
     938:	44 97       	sbiw	r24, 0x14	; 20
     93a:	88 97       	sbiw	r24, 0x28	; 40
     93c:	38 f0       	brcs	.+14     	; 0x94c <__stack+0x4d>
     93e:	68 ed       	ldi	r22, 0xD8	; 216
     940:	7f ef       	ldi	r23, 0xFF	; 255
     942:	88 e2       	ldi	r24, 0x28	; 40
     944:	90 e0       	ldi	r25, 0x00	; 0
     946:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
     94a:	06 c0       	rjmp	.+12     	; 0x958 <__stack+0x59>
     94c:	68 e2       	ldi	r22, 0x28	; 40
     94e:	70 e0       	ldi	r23, 0x00	; 0
     950:	88 ed       	ldi	r24, 0xD8	; 216
     952:	9f ef       	ldi	r25, 0xFF	; 255
     954:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
     958:	81 e0       	ldi	r24, 0x01	; 1
     95a:	0e 94 6b 17 	call	0x2ed6	; 0x2ed6 <calibrate_line_sensors>
     95e:	84 e1       	ldi	r24, 0x14	; 20
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	0e 94 19 17 	call	0x2e32	; 0x2e32 <delay_ms>
     966:	21 96       	adiw	r28, 0x01	; 1
     968:	c0 35       	cpi	r28, 0x50	; 80
     96a:	d1 05       	cpc	r29, r1
     96c:	20 f3       	brcs	.-56     	; 0x936 <__stack+0x37>
     96e:	60 e0       	ldi	r22, 0x00	; 0
     970:	70 e0       	ldi	r23, 0x00	; 0
     972:	80 e0       	ldi	r24, 0x00	; 0
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
     97a:	80 e1       	ldi	r24, 0x10	; 16
     97c:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <button_is_pressed>
     980:	88 23       	and	r24, r24
     982:	d9 f3       	breq	.-10     	; 0x97a <__stack+0x7b>
     984:	80 e1       	ldi	r24, 0x10	; 16
     986:	0e 94 3f 15 	call	0x2a7e	; 0x2a7e <wait_for_button_release>
     98a:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <clear>
     98e:	df 91       	pop	r29
     990:	cf 91       	pop	r28
     992:	08 95       	ret

00000994 <inch>:
     994:	62 e3       	ldi	r22, 0x32	; 50
     996:	70 e0       	ldi	r23, 0x00	; 0
     998:	82 e3       	ldi	r24, 0x32	; 50
     99a:	90 e0       	ldi	r25, 0x00	; 0
     99c:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
     9a0:	88 ec       	ldi	r24, 0xC8	; 200
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	0e 94 19 17 	call	0x2e32	; 0x2e32 <delay_ms>
     9a8:	60 e0       	ldi	r22, 0x00	; 0
     9aa:	70 e0       	ldi	r23, 0x00	; 0
     9ac:	80 e0       	ldi	r24, 0x00	; 0
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
     9b4:	08 95       	ret

000009b6 <wait>:
	lcd_goto_xy(0,0);
	print_long(x);	*/
}

void wait(){
	set_motors(0,0);
     9b6:	60 e0       	ldi	r22, 0x00	; 0
     9b8:	70 e0       	ldi	r23, 0x00	; 0
     9ba:	80 e0       	ldi	r24, 0x00	; 0
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
						
	while(!button_is_pressed(BUTTON_B)){}
     9c2:	80 e1       	ldi	r24, 0x10	; 16
     9c4:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <button_is_pressed>
     9c8:	88 23       	and	r24, r24
     9ca:	d9 f3       	breq	.-10     	; 0x9c2 <wait+0xc>
	wait_for_button_release(BUTTON_B);
     9cc:	80 e1       	ldi	r24, 0x10	; 16
     9ce:	0e 94 3f 15 	call	0x2a7e	; 0x2a7e <wait_for_button_release>
     9d2:	08 95       	ret

000009d4 <lineType>:
}

char lineType(){																																	// function that returns the type of junction it detects
	while(1){																																		// >= 500 = black line		<=500 = white
		read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     9d4:	61 e0       	ldi	r22, 0x01	; 1
     9d6:	81 e1       	ldi	r24, 0x11	; 17
     9d8:	92 e0       	ldi	r25, 0x02	; 2
     9da:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <read_line_sensors_calibrated>

			if (sensors[0] >= Refrence_value && sensors[4] >= Refrence_value){																									//Checks if its a X junction or a T junction
     9de:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <sensors>
     9e2:	90 91 12 02 	lds	r25, 0x0212	; 0x800212 <sensors+0x1>
     9e6:	80 39       	cpi	r24, 0x90	; 144
     9e8:	21 e0       	ldi	r18, 0x01	; 1
     9ea:	92 07       	cpc	r25, r18
     9ec:	08 f4       	brcc	.+2      	; 0x9f0 <lineType+0x1c>
     9ee:	67 c0       	rjmp	.+206    	; 0xabe <lineType+0xea>
     9f0:	20 91 19 02 	lds	r18, 0x0219	; 0x800219 <sensors+0x8>
     9f4:	30 91 1a 02 	lds	r19, 0x021A	; 0x80021a <sensors+0x9>
     9f8:	20 39       	cpi	r18, 0x90	; 144
     9fa:	31 40       	sbci	r19, 0x01	; 1
     9fc:	08 f4       	brcc	.+2      	; 0xa00 <lineType+0x2c>
     9fe:	5f c0       	rjmp	.+190    	; 0xabe <lineType+0xea>
					inch();
     a00:	0e 94 ca 04 	call	0x994	; 0x994 <inch>
					read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     a04:	61 e0       	ldi	r22, 0x01	; 1
     a06:	81 e1       	ldi	r24, 0x11	; 17
     a08:	92 e0       	ldi	r25, 0x02	; 2
     a0a:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <read_line_sensors_calibrated>
					if (sensors[0] >=Refrence_value && sensors[1] >=Refrence_value && sensors[3] >= Refrence_value && sensors[4] >=Refrence_value){
     a0e:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <sensors>
     a12:	90 91 12 02 	lds	r25, 0x0212	; 0x800212 <sensors+0x1>
     a16:	80 39       	cpi	r24, 0x90	; 144
     a18:	91 40       	sbci	r25, 0x01	; 1
     a1a:	b8 f1       	brcs	.+110    	; 0xa8a <lineType+0xb6>
     a1c:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     a20:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     a24:	80 39       	cpi	r24, 0x90	; 144
     a26:	91 40       	sbci	r25, 0x01	; 1
     a28:	80 f1       	brcs	.+96     	; 0xa8a <lineType+0xb6>
     a2a:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     a2e:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     a32:	80 39       	cpi	r24, 0x90	; 144
     a34:	91 40       	sbci	r25, 0x01	; 1
     a36:	48 f1       	brcs	.+82     	; 0xa8a <lineType+0xb6>
     a38:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x8>
     a3c:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x9>
     a40:	80 39       	cpi	r24, 0x90	; 144
     a42:	91 40       	sbci	r25, 0x01	; 1
     a44:	10 f1       	brcs	.+68     	; 0xa8a <lineType+0xb6>
						clear();
     a46:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <clear>
						while(sensors[0] >= 400 || sensors[4] >=400)
     a4a:	0b c0       	rjmp	.+22     	; 0xa62 <lineType+0x8e>
						{
							read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     a4c:	61 e0       	ldi	r22, 0x01	; 1
     a4e:	81 e1       	ldi	r24, 0x11	; 17
     a50:	92 e0       	ldi	r25, 0x02	; 2
     a52:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <read_line_sensors_calibrated>
							set_motors(75,75);
     a56:	6b e4       	ldi	r22, 0x4B	; 75
     a58:	70 e0       	ldi	r23, 0x00	; 0
     a5a:	8b e4       	ldi	r24, 0x4B	; 75
     a5c:	90 e0       	ldi	r25, 0x00	; 0
     a5e:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
			if (sensors[0] >= Refrence_value && sensors[4] >= Refrence_value){																									//Checks if its a X junction or a T junction
					inch();
					read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
					if (sensors[0] >=Refrence_value && sensors[1] >=Refrence_value && sensors[3] >= Refrence_value && sensors[4] >=Refrence_value){
						clear();
						while(sensors[0] >= 400 || sensors[4] >=400)
     a62:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <sensors>
     a66:	90 91 12 02 	lds	r25, 0x0212	; 0x800212 <sensors+0x1>
     a6a:	80 39       	cpi	r24, 0x90	; 144
     a6c:	91 40       	sbci	r25, 0x01	; 1
     a6e:	70 f7       	brcc	.-36     	; 0xa4c <lineType+0x78>
     a70:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors+0x8>
     a74:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x9>
     a78:	80 39       	cpi	r24, 0x90	; 144
     a7a:	91 40       	sbci	r25, 0x01	; 1
     a7c:	38 f7       	brcc	.-50     	; 0xa4c <lineType+0x78>
						{
							read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
							set_motors(75,75);
						}
						inch();
     a7e:	0e 94 ca 04 	call	0x994	; 0x994 <inch>
						wait();
     a82:	0e 94 db 04 	call	0x9b6	; 0x9b6 <wait>
						return Barcode;
     a86:	82 e0       	ldi	r24, 0x02	; 2
     a88:	08 95       	ret
					}
					else if (sensors[2] >=Refrence_value || (sensors[1] >= Refrence_value || sensors[3] >= Refrence_value)){
     a8a:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     a8e:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     a92:	80 39       	cpi	r24, 0x90	; 144
     a94:	91 40       	sbci	r25, 0x01	; 1
     a96:	08 f0       	brcs	.+2      	; 0xa9a <lineType+0xc6>
     a98:	79 c0       	rjmp	.+242    	; 0xb8c <lineType+0x1b8>
     a9a:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     a9e:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     aa2:	80 39       	cpi	r24, 0x90	; 144
     aa4:	91 40       	sbci	r25, 0x01	; 1
     aa6:	08 f0       	brcs	.+2      	; 0xaaa <lineType+0xd6>
     aa8:	73 c0       	rjmp	.+230    	; 0xb90 <lineType+0x1bc>
     aaa:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     aae:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     ab2:	80 39       	cpi	r24, 0x90	; 144
     ab4:	91 40       	sbci	r25, 0x01	; 1
     ab6:	08 f4       	brcc	.+2      	; 0xaba <lineType+0xe6>
     ab8:	6d c0       	rjmp	.+218    	; 0xb94 <lineType+0x1c0>
						println(X_junction);
						return X_junction;
     aba:	88 e0       	ldi	r24, 0x08	; 8
     abc:	08 95       	ret
						println(T_junction);
						return T_junction;
					}
				}
							
		else if (sensors[0] >=Refrence_value && sensors[1] >= Refrence_value && sensors[4] <= Refrence_value ){																							//Checks if its a left corner or a straight with left corner
     abe:	80 39       	cpi	r24, 0x90	; 144
     ac0:	61 e0       	ldi	r22, 0x01	; 1
     ac2:	96 07       	cpc	r25, r22
     ac4:	38 f1       	brcs	.+78     	; 0xb14 <lineType+0x140>
     ac6:	20 91 13 02 	lds	r18, 0x0213	; 0x800213 <sensors+0x2>
     aca:	30 91 14 02 	lds	r19, 0x0214	; 0x800214 <sensors+0x3>
     ace:	20 39       	cpi	r18, 0x90	; 144
     ad0:	31 40       	sbci	r19, 0x01	; 1
     ad2:	00 f1       	brcs	.+64     	; 0xb14 <lineType+0x140>
     ad4:	20 91 19 02 	lds	r18, 0x0219	; 0x800219 <sensors+0x8>
     ad8:	30 91 1a 02 	lds	r19, 0x021A	; 0x80021a <sensors+0x9>
     adc:	21 39       	cpi	r18, 0x91	; 145
     ade:	31 40       	sbci	r19, 0x01	; 1
     ae0:	c8 f4       	brcc	.+50     	; 0xb14 <lineType+0x140>
			inch();
     ae2:	0e 94 ca 04 	call	0x994	; 0x994 <inch>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     ae6:	61 e0       	ldi	r22, 0x01	; 1
     ae8:	81 e1       	ldi	r24, 0x11	; 17
     aea:	92 e0       	ldi	r25, 0x02	; 2
     aec:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <read_line_sensors_calibrated>
			
			if (sensors[2] >= Refrence_value || sensors[3] >=Refrence_value){
     af0:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     af4:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     af8:	80 39       	cpi	r24, 0x90	; 144
     afa:	91 40       	sbci	r25, 0x01	; 1
     afc:	08 f0       	brcs	.+2      	; 0xb00 <lineType+0x12c>
     afe:	4c c0       	rjmp	.+152    	; 0xb98 <lineType+0x1c4>
     b00:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     b04:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     b08:	80 39       	cpi	r24, 0x90	; 144
     b0a:	91 40       	sbci	r25, 0x01	; 1
     b0c:	08 f4       	brcc	.+2      	; 0xb10 <lineType+0x13c>
     b0e:	46 c0       	rjmp	.+140    	; 0xb9c <lineType+0x1c8>
				println(Straight_left_junction);
				return Straight_left_junction;
     b10:	86 e0       	ldi	r24, 0x06	; 6
     b12:	08 95       	ret
				return Left_corner;
			}
		}
		
		
		else if (sensors[3] >=Refrence_value && sensors[4] >= Refrence_value && sensors[0] <= Refrence_value){																							//Checks if its a right corner or a straight with right corner
     b14:	20 91 17 02 	lds	r18, 0x0217	; 0x800217 <sensors+0x6>
     b18:	30 91 18 02 	lds	r19, 0x0218	; 0x800218 <sensors+0x7>
     b1c:	20 39       	cpi	r18, 0x90	; 144
     b1e:	61 e0       	ldi	r22, 0x01	; 1
     b20:	36 07       	cpc	r19, r22
     b22:	08 f1       	brcs	.+66     	; 0xb66 <lineType+0x192>
     b24:	40 91 19 02 	lds	r20, 0x0219	; 0x800219 <sensors+0x8>
     b28:	50 91 1a 02 	lds	r21, 0x021A	; 0x80021a <sensors+0x9>
     b2c:	40 39       	cpi	r20, 0x90	; 144
     b2e:	51 40       	sbci	r21, 0x01	; 1
     b30:	d0 f0       	brcs	.+52     	; 0xb66 <lineType+0x192>
     b32:	81 39       	cpi	r24, 0x91	; 145
     b34:	91 40       	sbci	r25, 0x01	; 1
     b36:	b8 f4       	brcc	.+46     	; 0xb66 <lineType+0x192>
			inch();
     b38:	0e 94 ca 04 	call	0x994	; 0x994 <inch>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     b3c:	61 e0       	ldi	r22, 0x01	; 1
     b3e:	81 e1       	ldi	r24, 0x11	; 17
     b40:	92 e0       	ldi	r25, 0x02	; 2
     b42:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <read_line_sensors_calibrated>
			
			if (sensors[2] >= Refrence_value || sensors[1] >=Refrence_value){
     b46:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     b4a:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     b4e:	80 39       	cpi	r24, 0x90	; 144
     b50:	91 40       	sbci	r25, 0x01	; 1
     b52:	30 f5       	brcc	.+76     	; 0xba0 <lineType+0x1cc>
     b54:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     b58:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     b5c:	80 39       	cpi	r24, 0x90	; 144
     b5e:	91 40       	sbci	r25, 0x01	; 1
     b60:	08 f1       	brcs	.+66     	; 0xba4 <lineType+0x1d0>
				println(Straight_right_junction);
				return Straight_right_junction;
     b62:	85 e0       	ldi	r24, 0x05	; 5
     b64:	08 95       	ret
				println(Straight_left_junction);
				return Right_corner;
			}
		}
		
				else if(sensors[2] <= End_Line_Value && sensors[1] <=End_Line_Value && sensors[3] <=End_Line_Value){
     b66:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     b6a:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     b6e:	89 3c       	cpi	r24, 0xC9	; 201
     b70:	91 05       	cpc	r25, r1
     b72:	d0 f4       	brcc	.+52     	; 0xba8 <lineType+0x1d4>
     b74:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     b78:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     b7c:	89 3c       	cpi	r24, 0xC9	; 201
     b7e:	91 05       	cpc	r25, r1
     b80:	a8 f4       	brcc	.+42     	; 0xbac <lineType+0x1d8>
     b82:	29 3c       	cpi	r18, 0xC9	; 201
     b84:	31 05       	cpc	r19, r1
     b86:	a0 f0       	brcs	.+40     	; 0xbb0 <lineType+0x1dc>
			}
			else{
				println(Straight);
				return Straight;
			}				*/																					// check if its straight without any corners
			return Straight;
     b88:	80 e0       	ldi	r24, 0x00	; 0
     b8a:	08 95       	ret
						wait();
						return Barcode;
					}
					else if (sensors[2] >=Refrence_value || (sensors[1] >= Refrence_value || sensors[3] >= Refrence_value)){
						println(X_junction);
						return X_junction;
     b8c:	88 e0       	ldi	r24, 0x08	; 8
     b8e:	08 95       	ret
     b90:	88 e0       	ldi	r24, 0x08	; 8
     b92:	08 95       	ret
					}
					else {
						println(T_junction);
						return T_junction;
     b94:	87 e0       	ldi	r24, 0x07	; 7
     b96:	08 95       	ret
			inch();
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= Refrence_value || sensors[3] >=Refrence_value){
				println(Straight_left_junction);
				return Straight_left_junction;
     b98:	86 e0       	ldi	r24, 0x06	; 6
     b9a:	08 95       	ret
			}
			else{
				println(Left_corner);
				return Left_corner;
     b9c:	83 e0       	ldi	r24, 0x03	; 3
     b9e:	08 95       	ret
			inch();
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= Refrence_value || sensors[1] >=Refrence_value){
				println(Straight_right_junction);
				return Straight_right_junction;
     ba0:	85 e0       	ldi	r24, 0x05	; 5
     ba2:	08 95       	ret
			}
			else{
				println(Straight_left_junction);
				return Right_corner;
     ba4:	84 e0       	ldi	r24, 0x04	; 4
     ba6:	08 95       	ret
			}
			else{
				println(Straight);
				return Straight;
			}				*/																					// check if its straight without any corners
			return Straight;
     ba8:	80 e0       	ldi	r24, 0x00	; 0
     baa:	08 95       	ret
     bac:	80 e0       	ldi	r24, 0x00	; 0
     bae:	08 95       	ret
			}
		}
		
				else if(sensors[2] <= End_Line_Value && sensors[1] <=End_Line_Value && sensors[3] <=End_Line_Value){
					println(Line_end);																													// check if the line ends
					return Line_end;
     bb0:	81 e0       	ldi	r24, 0x01	; 1
			return Straight;
		}
		
	
	}
}
     bb2:	08 95       	ret

00000bb4 <motorControl>:

void motorControl(char x){													// function that controlls the motor movement and the turns
     bb4:	8f 92       	push	r8
     bb6:	9f 92       	push	r9
     bb8:	af 92       	push	r10
     bba:	bf 92       	push	r11
     bbc:	cf 92       	push	r12
     bbe:	df 92       	push	r13
     bc0:	ef 92       	push	r14
     bc2:	ff 92       	push	r15
     bc4:	1f 93       	push	r17
     bc6:	cf 93       	push	r28
     bc8:	df 93       	push	r29
     bca:	18 2f       	mov	r17, r24

		


	myComs->Update(myComs);
     bcc:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <myComs>
     bd0:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <myComs+0x1>
     bd4:	fc 01       	movw	r30, r24
     bd6:	ef 58       	subi	r30, 0x8F	; 143
     bd8:	ff 4f       	sbci	r31, 0xFF	; 255
     bda:	01 90       	ld	r0, Z+
     bdc:	f0 81       	ld	r31, Z
     bde:	e0 2d       	mov	r30, r0
     be0:	09 95       	icall
	unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     be2:	61 e0       	ldi	r22, 0x01	; 1
     be4:	81 e1       	ldi	r24, 0x11	; 17
     be6:	92 e0       	ldi	r25, 0x02	; 2
     be8:	0e 94 78 17 	call	0x2ef0	; 0x2ef0 <read_line>
     bec:	ec 01       	movw	r28, r24
	read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     bee:	61 e0       	ldi	r22, 0x01	; 1
     bf0:	81 e1       	ldi	r24, 0x11	; 17
     bf2:	92 e0       	ldi	r25, 0x02	; 2
     bf4:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <read_line_sensors_calibrated>

	while (analog_read(5) >= 200) {
     bf8:	0d c0       	rjmp	.+26     	; 0xc14 <motorControl+0x60>
		set_motors(0, 0);
     bfa:	60 e0       	ldi	r22, 0x00	; 0
     bfc:	70 e0       	ldi	r23, 0x00	; 0
     bfe:	80 e0       	ldi	r24, 0x00	; 0
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
		errorDisplay(object, batteryPercentage());
     c06:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
     c0a:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <__fixsfsi>
     c0e:	82 e0       	ldi	r24, 0x02	; 2
     c10:	0e 94 72 03 	call	0x6e4	; 0x6e4 <errorDisplay>

	myComs->Update(myComs);
	unsigned int position = read_line(sensors,IR_EMITTERS_ON);
	read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);

	while (analog_read(5) >= 200) {
     c14:	85 e0       	ldi	r24, 0x05	; 5
     c16:	0e 94 15 0f 	call	0x1e2a	; 0x1e2a <analog_read>
     c1a:	88 3c       	cpi	r24, 0xC8	; 200
     c1c:	91 05       	cpc	r25, r1
     c1e:	68 f7       	brcc	.-38     	; 0xbfa <motorControl+0x46>
		set_motors(0, 0);
		errorDisplay(object, batteryPercentage());
	}
	
	if(myComs->EmergencyStop == 1)		{													//Emergency Brake
     c20:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     c24:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     c28:	e5 59       	subi	r30, 0x95	; 149
     c2a:	ff 4f       	sbci	r31, 0xFF	; 255
     c2c:	80 81       	ld	r24, Z
     c2e:	81 30       	cpi	r24, 0x01	; 1
     c30:	71 f4       	brne	.+28     	; 0xc4e <motorControl+0x9a>
		set_motors(0,0);
     c32:	60 e0       	ldi	r22, 0x00	; 0
     c34:	70 e0       	ldi	r23, 0x00	; 0
     c36:	80 e0       	ldi	r24, 0x00	; 0
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
		errorDisplay(emergency,batteryPercentage());
     c3e:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
     c42:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <__fixsfsi>
     c46:	81 e0       	ldi	r24, 0x01	; 1
     c48:	0e 94 72 03 	call	0x6e4	; 0x6e4 <errorDisplay>
     c4c:	05 c1       	rjmp	.+522    	; 0xe58 <motorControl+0x2a4>
	}else if(x == 'L'){														//Turn Left
     c4e:	1c 34       	cpi	r17, 0x4C	; 76
     c50:	39 f5       	brne	.+78     	; 0xca0 <motorControl+0xec>
		set_motors(-turn_value,turn_value);
     c52:	6c e3       	ldi	r22, 0x3C	; 60
     c54:	70 e0       	ldi	r23, 0x00	; 0
     c56:	84 ec       	ldi	r24, 0xC4	; 196
     c58:	9f ef       	ldi	r25, 0xFF	; 255
     c5a:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
		
		while (sensors[2] >=Refrence_value)
     c5e:	05 c0       	rjmp	.+10     	; 0xc6a <motorControl+0xb6>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     c60:	61 e0       	ldi	r22, 0x01	; 1
     c62:	81 e1       	ldi	r24, 0x11	; 17
     c64:	92 e0       	ldi	r25, 0x02	; 2
     c66:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <read_line_sensors_calibrated>
		set_motors(0,0);
		errorDisplay(emergency,batteryPercentage());
	}else if(x == 'L'){														//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] >=Refrence_value)
     c6a:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     c6e:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     c72:	80 39       	cpi	r24, 0x90	; 144
     c74:	91 40       	sbci	r25, 0x01	; 1
     c76:	a0 f7       	brcc	.-24     	; 0xc60 <motorControl+0xac>
     c78:	05 c0       	rjmp	.+10     	; 0xc84 <motorControl+0xd0>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     c7a:	61 e0       	ldi	r22, 0x01	; 1
     c7c:	81 e1       	ldi	r24, 0x11	; 17
     c7e:	92 e0       	ldi	r25, 0x02	; 2
     c80:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <read_line_sensors_calibrated>
	}else if(x == 'L'){														//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] >=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
     c84:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     c88:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     c8c:	81 39       	cpi	r24, 0x91	; 145
     c8e:	91 40       	sbci	r25, 0x01	; 1
     c90:	a0 f3       	brcs	.-24     	; 0xc7a <motorControl+0xc6>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		set_motors(0,0);
     c92:	60 e0       	ldi	r22, 0x00	; 0
     c94:	70 e0       	ldi	r23, 0x00	; 0
     c96:	80 e0       	ldi	r24, 0x00	; 0
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
     c9e:	dc c0       	rjmp	.+440    	; 0xe58 <motorControl+0x2a4>
	}
	
	
	else if(x == 'R'){														//Turn Right
     ca0:	12 35       	cpi	r17, 0x52	; 82
     ca2:	39 f5       	brne	.+78     	; 0xcf2 <motorControl+0x13e>
		set_motors(turn_value,-turn_value);
     ca4:	64 ec       	ldi	r22, 0xC4	; 196
     ca6:	7f ef       	ldi	r23, 0xFF	; 255
     ca8:	8c e3       	ldi	r24, 0x3C	; 60
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
		
		while (sensors[2] >=Refrence_value)
     cb0:	05 c0       	rjmp	.+10     	; 0xcbc <motorControl+0x108>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     cb2:	61 e0       	ldi	r22, 0x01	; 1
     cb4:	81 e1       	ldi	r24, 0x11	; 17
     cb6:	92 e0       	ldi	r25, 0x02	; 2
     cb8:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <read_line_sensors_calibrated>
	
	
	else if(x == 'R'){														//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] >=Refrence_value)
     cbc:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     cc0:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     cc4:	80 39       	cpi	r24, 0x90	; 144
     cc6:	91 40       	sbci	r25, 0x01	; 1
     cc8:	a0 f7       	brcc	.-24     	; 0xcb2 <motorControl+0xfe>
     cca:	05 c0       	rjmp	.+10     	; 0xcd6 <motorControl+0x122>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     ccc:	61 e0       	ldi	r22, 0x01	; 1
     cce:	81 e1       	ldi	r24, 0x11	; 17
     cd0:	92 e0       	ldi	r25, 0x02	; 2
     cd2:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <read_line_sensors_calibrated>
	else if(x == 'R'){														//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] >=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
     cd6:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     cda:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     cde:	81 39       	cpi	r24, 0x91	; 145
     ce0:	91 40       	sbci	r25, 0x01	; 1
     ce2:	a0 f3       	brcs	.-24     	; 0xccc <motorControl+0x118>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		set_motors(0,0);
     ce4:	60 e0       	ldi	r22, 0x00	; 0
     ce6:	70 e0       	ldi	r23, 0x00	; 0
     ce8:	80 e0       	ldi	r24, 0x00	; 0
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
     cf0:	b3 c0       	rjmp	.+358    	; 0xe58 <motorControl+0x2a4>
	}
		
			
	else if(x == 'S'){												//drive straight and adjusts the robot so it follows the line
     cf2:	13 35       	cpi	r17, 0x53	; 83
     cf4:	09 f0       	breq	.+2      	; 0xcf8 <motorControl+0x144>
     cf6:	66 c0       	rjmp	.+204    	; 0xdc4 <motorControl+0x210>
		// are not interested in the individual sensor readings.
		// The "proportional" term should be 0 when we are on the line.
		int proportional = ((int)position) - 2000;
     cf8:	ce 01       	movw	r24, r28
     cfa:	80 5d       	subi	r24, 0xD0	; 208
     cfc:	97 40       	sbci	r25, 0x07	; 7

		// Compute the derivative (change) and integral (sum) of the
		// position.
		int derivative = proportional - last_proportional;
     cfe:	20 91 0d 02 	lds	r18, 0x020D	; 0x80020d <last_proportional>
     d02:	30 91 0e 02 	lds	r19, 0x020E	; 0x80020e <last_proportional+0x1>
     d06:	ec 01       	movw	r28, r24
     d08:	c2 1b       	sub	r28, r18
     d0a:	d3 0b       	sbc	r29, r19
		integral = integral + proportional;
     d0c:	60 91 0f 02 	lds	r22, 0x020F	; 0x80020f <integral>
     d10:	70 91 10 02 	lds	r23, 0x0210	; 0x800210 <integral+0x1>
     d14:	fc 01       	movw	r30, r24
     d16:	e6 0f       	add	r30, r22
     d18:	f7 1f       	adc	r31, r23
     d1a:	f0 93 10 02 	sts	0x0210, r31	; 0x800210 <integral+0x1>
     d1e:	e0 93 0f 02 	sts	0x020F, r30	; 0x80020f <integral>

		// Remember the last position.
		 last_proportional = proportional;
     d22:	90 93 0e 02 	sts	0x020E, r25	; 0x80020e <last_proportional+0x1>
     d26:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <last_proportional>
 
 
		int power_difference = proportional/10 + integral/40000 + derivative*0.50;						// derivative == stuur snelheid
     d2a:	6a e0       	ldi	r22, 0x0A	; 10
     d2c:	70 e0       	ldi	r23, 0x00	; 0
     d2e:	0e 94 de 1c 	call	0x39bc	; 0x39bc <__divmodhi4>
     d32:	6b 01       	movw	r12, r22
     d34:	bf 01       	movw	r22, r30
     d36:	ff 0f       	add	r31, r31
     d38:	88 0b       	sbc	r24, r24
     d3a:	99 0b       	sbc	r25, r25
     d3c:	20 e4       	ldi	r18, 0x40	; 64
     d3e:	3c e9       	ldi	r19, 0x9C	; 156
     d40:	40 e0       	ldi	r20, 0x00	; 0
     d42:	50 e0       	ldi	r21, 0x00	; 0
     d44:	0e 94 14 1d 	call	0x3a28	; 0x3a28 <__divmodsi4>
     d48:	0d 2c       	mov	r0, r13
     d4a:	00 0c       	add	r0, r0
     d4c:	ee 08       	sbc	r14, r14
     d4e:	ff 08       	sbc	r15, r15
     d50:	c2 0e       	add	r12, r18
     d52:	d3 1e       	adc	r13, r19
     d54:	e4 1e       	adc	r14, r20
     d56:	f5 1e       	adc	r15, r21
     d58:	be 01       	movw	r22, r28
     d5a:	dd 0f       	add	r29, r29
     d5c:	88 0b       	sbc	r24, r24
     d5e:	99 0b       	sbc	r25, r25
     d60:	0e 94 d7 0d 	call	0x1bae	; 0x1bae <__floatsisf>
     d64:	20 e0       	ldi	r18, 0x00	; 0
     d66:	30 e0       	ldi	r19, 0x00	; 0
     d68:	40 e0       	ldi	r20, 0x00	; 0
     d6a:	5f e3       	ldi	r21, 0x3F	; 63
     d6c:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <__mulsf3>
     d70:	4b 01       	movw	r8, r22
     d72:	5c 01       	movw	r10, r24
     d74:	c7 01       	movw	r24, r14
     d76:	b6 01       	movw	r22, r12
     d78:	0e 94 d7 0d 	call	0x1bae	; 0x1bae <__floatsisf>
     d7c:	a5 01       	movw	r20, r10
     d7e:	94 01       	movw	r18, r8
     d80:	0e 94 c1 0c 	call	0x1982	; 0x1982 <__addsf3>
     d84:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <__fixsfsi>
     d88:	cb 01       	movw	r24, r22

		// Compute the actual motor settings.  We never set either motor
		// to a negative value.
		const int max = 70;
		if(power_difference > max)
     d8a:	67 34       	cpi	r22, 0x47	; 71
     d8c:	71 05       	cpc	r23, r1
     d8e:	14 f0       	brlt	.+4      	; 0xd94 <motorControl+0x1e0>
			power_difference = max;
     d90:	86 e4       	ldi	r24, 0x46	; 70
     d92:	90 e0       	ldi	r25, 0x00	; 0
		if(power_difference < -max)
     d94:	8a 3b       	cpi	r24, 0xBA	; 186
     d96:	2f ef       	ldi	r18, 0xFF	; 255
     d98:	92 07       	cpc	r25, r18
     d9a:	14 f4       	brge	.+4      	; 0xda0 <motorControl+0x1ec>
			power_difference = -max;
     d9c:	8a eb       	ldi	r24, 0xBA	; 186
     d9e:	9f ef       	ldi	r25, 0xFF	; 255

		if(power_difference < 0)
     da0:	99 23       	and	r25, r25
     da2:	3c f4       	brge	.+14     	; 0xdb2 <motorControl+0x1fe>
			set_motors(max+power_difference, max);
     da4:	66 e4       	ldi	r22, 0x46	; 70
     da6:	70 e0       	ldi	r23, 0x00	; 0
     da8:	8a 5b       	subi	r24, 0xBA	; 186
     daa:	9f 4f       	sbci	r25, 0xFF	; 255
     dac:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
     db0:	53 c0       	rjmp	.+166    	; 0xe58 <motorControl+0x2a4>
		else
			set_motors(max, max-power_difference);
     db2:	66 e4       	ldi	r22, 0x46	; 70
     db4:	70 e0       	ldi	r23, 0x00	; 0
     db6:	68 1b       	sub	r22, r24
     db8:	79 0b       	sbc	r23, r25
     dba:	86 e4       	ldi	r24, 0x46	; 70
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
     dc2:	4a c0       	rjmp	.+148    	; 0xe58 <motorControl+0x2a4>
		
	}
	
	
	else if(x == 'B'){														//Reverse while following the line
     dc4:	12 34       	cpi	r17, 0x42	; 66
     dc6:	09 f5       	brne	.+66     	; 0xe0a <motorControl+0x256>
		set_motors(-50,-50);
     dc8:	6e ec       	ldi	r22, 0xCE	; 206
     dca:	7f ef       	ldi	r23, 0xFF	; 255
     dcc:	8e ec       	ldi	r24, 0xCE	; 206
     dce:	9f ef       	ldi	r25, 0xFF	; 255
     dd0:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
		
		if (sensors[3] >=Refrence_value)
     dd4:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <sensors+0x6>
     dd8:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <sensors+0x7>
     ddc:	80 39       	cpi	r24, 0x90	; 144
     dde:	91 40       	sbci	r25, 0x01	; 1
     de0:	30 f0       	brcs	.+12     	; 0xdee <motorControl+0x23a>
			set_motors(-50,-55);
     de2:	69 ec       	ldi	r22, 0xC9	; 201
     de4:	7f ef       	ldi	r23, 0xFF	; 255
     de6:	8e ec       	ldi	r24, 0xCE	; 206
     de8:	9f ef       	ldi	r25, 0xFF	; 255
     dea:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
		if (sensors[1] >=Refrence_value)
     dee:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sensors+0x2>
     df2:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <sensors+0x3>
     df6:	80 39       	cpi	r24, 0x90	; 144
     df8:	91 40       	sbci	r25, 0x01	; 1
     dfa:	70 f1       	brcs	.+92     	; 0xe58 <motorControl+0x2a4>
			set_motors(-55,-50);
     dfc:	6e ec       	ldi	r22, 0xCE	; 206
     dfe:	7f ef       	ldi	r23, 0xFF	; 255
     e00:	89 ec       	ldi	r24, 0xC9	; 201
     e02:	9f ef       	ldi	r25, 0xFF	; 255
     e04:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
     e08:	27 c0       	rjmp	.+78     	; 0xe58 <motorControl+0x2a4>
	}
	
	
	else if(x == 'T'){														// Turn around
     e0a:	14 35       	cpi	r17, 0x54	; 84
     e0c:	a1 f4       	brne	.+40     	; 0xe36 <motorControl+0x282>
		set_motors(-turn_value,turn_value);
     e0e:	6c e3       	ldi	r22, 0x3C	; 60
     e10:	70 e0       	ldi	r23, 0x00	; 0
     e12:	84 ec       	ldi	r24, 0xC4	; 196
     e14:	9f ef       	ldi	r25, 0xFF	; 255
     e16:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
		
		while (sensors[2] <=Refrence_value)
     e1a:	05 c0       	rjmp	.+10     	; 0xe26 <motorControl+0x272>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     e1c:	61 e0       	ldi	r22, 0x01	; 1
     e1e:	81 e1       	ldi	r24, 0x11	; 17
     e20:	92 e0       	ldi	r25, 0x02	; 2
     e22:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <read_line_sensors_calibrated>
	
	
	else if(x == 'T'){														// Turn around
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] <=Refrence_value)
     e26:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <sensors+0x4>
     e2a:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <sensors+0x5>
     e2e:	81 39       	cpi	r24, 0x91	; 145
     e30:	91 40       	sbci	r25, 0x01	; 1
     e32:	a0 f3       	brcs	.-24     	; 0xe1c <motorControl+0x268>
     e34:	11 c0       	rjmp	.+34     	; 0xe58 <motorControl+0x2a4>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'P')														//Robot stops on a slow pace
     e36:	10 35       	cpi	r17, 0x50	; 80
     e38:	79 f4       	brne	.+30     	; 0xe58 <motorControl+0x2a4>
     e3a:	0a c0       	rjmp	.+20     	; 0xe50 <motorControl+0x29c>
		for( int i=50;i>=0;i-=3)
		{
			set_motors(i,i);
     e3c:	be 01       	movw	r22, r28
     e3e:	ce 01       	movw	r24, r28
     e40:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
     e44:	84 e0       	ldi	r24, 0x04	; 4
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	0e 94 19 17 	call	0x2e32	; 0x2e32 <delay_ms>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'P')														//Robot stops on a slow pace
		for( int i=50;i>=0;i-=3)
     e4c:	23 97       	sbiw	r28, 0x03	; 3
     e4e:	02 c0       	rjmp	.+4      	; 0xe54 <motorControl+0x2a0>
     e50:	c2 e3       	ldi	r28, 0x32	; 50
     e52:	d0 e0       	ldi	r29, 0x00	; 0
     e54:	dd 23       	and	r29, r29
     e56:	94 f7       	brge	.-28     	; 0xe3c <motorControl+0x288>
			set_motors(i,i);
			delay(4);
		}
		
		
}
     e58:	df 91       	pop	r29
     e5a:	cf 91       	pop	r28
     e5c:	1f 91       	pop	r17
     e5e:	ff 90       	pop	r15
     e60:	ef 90       	pop	r14
     e62:	df 90       	pop	r13
     e64:	cf 90       	pop	r12
     e66:	bf 90       	pop	r11
     e68:	af 90       	pop	r10
     e6a:	9f 90       	pop	r9
     e6c:	8f 90       	pop	r8
     e6e:	08 95       	ret

00000e70 <manualControl>:

void manualControl(){
static int speed = 0;
static unsigned int counter = 0;

updateDisplay(0,batteryPercentage(),manual);
     e70:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
     e74:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <__fixsfsi>
     e78:	40 e0       	ldi	r20, 0x00	; 0
     e7a:	80 e0       	ldi	r24, 0x00	; 0
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	0e 94 19 03 	call	0x632	; 0x632 <updateDisplay>
	myComs->Update(myComs);
     e82:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <myComs>
     e86:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <myComs+0x1>
     e8a:	fc 01       	movw	r30, r24
     e8c:	ef 58       	subi	r30, 0x8F	; 143
     e8e:	ff 4f       	sbci	r31, 0xFF	; 255
     e90:	01 90       	ld	r0, Z+
     e92:	f0 81       	ld	r31, Z
     e94:	e0 2d       	mov	r30, r0
     e96:	09 95       	icall
	if(myComs->Direction[0] == 1){
     e98:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
     e9c:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
     ea0:	85 a9       	ldd	r24, Z+53	; 0x35
     ea2:	81 30       	cpi	r24, 0x01	; 1
     ea4:	d9 f5       	brne	.+118    	; 0xf1c <manualControl+0xac>
		set_motors(speed,speed);
     ea6:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     eaa:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     eae:	bc 01       	movw	r22, r24
     eb0:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
		if(counter % 20 == 0)
     eb4:	40 91 fd 01 	lds	r20, 0x01FD	; 0x8001fd <counter.2284>
     eb8:	50 91 fe 01 	lds	r21, 0x01FE	; 0x8001fe <counter.2284+0x1>
     ebc:	9a 01       	movw	r18, r20
     ebe:	ad ec       	ldi	r26, 0xCD	; 205
     ec0:	bc ec       	ldi	r27, 0xCC	; 204
     ec2:	0e 94 39 1d 	call	0x3a72	; 0x3a72 <__umulhisi3>
     ec6:	92 95       	swap	r25
     ec8:	82 95       	swap	r24
     eca:	8f 70       	andi	r24, 0x0F	; 15
     ecc:	89 27       	eor	r24, r25
     ece:	9f 70       	andi	r25, 0x0F	; 15
     ed0:	89 27       	eor	r24, r25
     ed2:	64 e1       	ldi	r22, 0x14	; 20
     ed4:	68 9f       	mul	r22, r24
     ed6:	90 01       	movw	r18, r0
     ed8:	69 9f       	mul	r22, r25
     eda:	30 0d       	add	r19, r0
     edc:	11 24       	eor	r1, r1
     ede:	42 17       	cp	r20, r18
     ee0:	53 07       	cpc	r21, r19
     ee2:	49 f4       	brne	.+18     	; 0xef6 <manualControl+0x86>
		{
			speed++;
     ee4:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     ee8:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     eec:	01 96       	adiw	r24, 0x01	; 1
     eee:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2283+0x1>
     ef2:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2283>
		}
		if(speed > 25)
     ef6:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     efa:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     efe:	4a 97       	sbiw	r24, 0x1a	; 26
     f00:	34 f0       	brlt	.+12     	; 0xf0e <manualControl+0x9e>
		{
			speed = 25;
     f02:	89 e1       	ldi	r24, 0x19	; 25
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2283+0x1>
     f0a:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2283>
		}
		counter++;
     f0e:	4f 5f       	subi	r20, 0xFF	; 255
     f10:	5f 4f       	sbci	r21, 0xFF	; 255
     f12:	50 93 fe 01 	sts	0x01FE, r21	; 0x8001fe <counter.2284+0x1>
     f16:	40 93 fd 01 	sts	0x01FD, r20	; 0x8001fd <counter.2284>
     f1a:	ba c0       	rjmp	.+372    	; 0x1090 <manualControl+0x220>
	}
	else if(myComs->Direction[0] == 0 && myComs->Direction[2] == 0)
     f1c:	81 11       	cpse	r24, r1
     f1e:	3d c0       	rjmp	.+122    	; 0xf9a <manualControl+0x12a>
     f20:	97 a9       	ldd	r25, Z+55	; 0x37
     f22:	91 11       	cpse	r25, r1
     f24:	3a c0       	rjmp	.+116    	; 0xf9a <manualControl+0x12a>
	{
		set_motors(speed,speed);
     f26:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     f2a:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     f2e:	bc 01       	movw	r22, r24
     f30:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
		if(counter % 20 == 0)
     f34:	40 91 fd 01 	lds	r20, 0x01FD	; 0x8001fd <counter.2284>
     f38:	50 91 fe 01 	lds	r21, 0x01FE	; 0x8001fe <counter.2284+0x1>
     f3c:	9a 01       	movw	r18, r20
     f3e:	ad ec       	ldi	r26, 0xCD	; 205
     f40:	bc ec       	ldi	r27, 0xCC	; 204
     f42:	0e 94 39 1d 	call	0x3a72	; 0x3a72 <__umulhisi3>
     f46:	92 95       	swap	r25
     f48:	82 95       	swap	r24
     f4a:	8f 70       	andi	r24, 0x0F	; 15
     f4c:	89 27       	eor	r24, r25
     f4e:	9f 70       	andi	r25, 0x0F	; 15
     f50:	89 27       	eor	r24, r25
     f52:	64 e1       	ldi	r22, 0x14	; 20
     f54:	68 9f       	mul	r22, r24
     f56:	90 01       	movw	r18, r0
     f58:	69 9f       	mul	r22, r25
     f5a:	30 0d       	add	r19, r0
     f5c:	11 24       	eor	r1, r1
     f5e:	42 17       	cp	r20, r18
     f60:	53 07       	cpc	r21, r19
     f62:	49 f4       	brne	.+18     	; 0xf76 <manualControl+0x106>
		{
			speed--;
     f64:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     f68:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     f6c:	01 97       	sbiw	r24, 0x01	; 1
     f6e:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2283+0x1>
     f72:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2283>
		}
		if(speed < 1)
     f76:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     f7a:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     f7e:	18 16       	cp	r1, r24
     f80:	19 06       	cpc	r1, r25
     f82:	24 f0       	brlt	.+8      	; 0xf8c <manualControl+0x11c>
		{
			speed = 0;
     f84:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <speed.2283+0x1>
     f88:	10 92 ff 01 	sts	0x01FF, r1	; 0x8001ff <speed.2283>
		}
		counter++;
     f8c:	4f 5f       	subi	r20, 0xFF	; 255
     f8e:	5f 4f       	sbci	r21, 0xFF	; 255
     f90:	50 93 fe 01 	sts	0x01FE, r21	; 0x8001fe <counter.2284+0x1>
     f94:	40 93 fd 01 	sts	0x01FD, r20	; 0x8001fd <counter.2284>
     f98:	7b c0       	rjmp	.+246    	; 0x1090 <manualControl+0x220>
	}
	
	else if(myComs->Direction[2] == 1){
     f9a:	97 a9       	ldd	r25, Z+55	; 0x37
     f9c:	91 30       	cpi	r25, 0x01	; 1
     f9e:	e1 f5       	brne	.+120    	; 0x1018 <manualControl+0x1a8>
		set_motors(speed,speed);
     fa0:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     fa4:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     fa8:	bc 01       	movw	r22, r24
     faa:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
		if(counter % 20 == 0)
     fae:	40 91 fd 01 	lds	r20, 0x01FD	; 0x8001fd <counter.2284>
     fb2:	50 91 fe 01 	lds	r21, 0x01FE	; 0x8001fe <counter.2284+0x1>
     fb6:	9a 01       	movw	r18, r20
     fb8:	ad ec       	ldi	r26, 0xCD	; 205
     fba:	bc ec       	ldi	r27, 0xCC	; 204
     fbc:	0e 94 39 1d 	call	0x3a72	; 0x3a72 <__umulhisi3>
     fc0:	92 95       	swap	r25
     fc2:	82 95       	swap	r24
     fc4:	8f 70       	andi	r24, 0x0F	; 15
     fc6:	89 27       	eor	r24, r25
     fc8:	9f 70       	andi	r25, 0x0F	; 15
     fca:	89 27       	eor	r24, r25
     fcc:	64 e1       	ldi	r22, 0x14	; 20
     fce:	68 9f       	mul	r22, r24
     fd0:	90 01       	movw	r18, r0
     fd2:	69 9f       	mul	r22, r25
     fd4:	30 0d       	add	r19, r0
     fd6:	11 24       	eor	r1, r1
     fd8:	42 17       	cp	r20, r18
     fda:	53 07       	cpc	r21, r19
     fdc:	49 f4       	brne	.+18     	; 0xff0 <manualControl+0x180>
		{
			speed--;
     fde:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     fe2:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     fe6:	01 97       	sbiw	r24, 0x01	; 1
     fe8:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2283+0x1>
     fec:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2283>
		}
		if(speed < -25)
     ff0:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
     ff4:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
     ff8:	87 3e       	cpi	r24, 0xE7	; 231
     ffa:	9f 4f       	sbci	r25, 0xFF	; 255
     ffc:	34 f4       	brge	.+12     	; 0x100a <manualControl+0x19a>
		{
			speed = -25;
     ffe:	87 ee       	ldi	r24, 0xE7	; 231
    1000:	9f ef       	ldi	r25, 0xFF	; 255
    1002:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2283+0x1>
    1006:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2283>
		}
		counter++;
    100a:	4f 5f       	subi	r20, 0xFF	; 255
    100c:	5f 4f       	sbci	r21, 0xFF	; 255
    100e:	50 93 fe 01 	sts	0x01FE, r21	; 0x8001fe <counter.2284+0x1>
    1012:	40 93 fd 01 	sts	0x01FD, r20	; 0x8001fd <counter.2284>
    1016:	3c c0       	rjmp	.+120    	; 0x1090 <manualControl+0x220>
	}
	else if(myComs->Direction[0] == 1 && myComs->Direction[2] == 0)
    1018:	81 30       	cpi	r24, 0x01	; 1
    101a:	d1 f5       	brne	.+116    	; 0x1090 <manualControl+0x220>
    101c:	91 11       	cpse	r25, r1
    101e:	38 c0       	rjmp	.+112    	; 0x1090 <manualControl+0x220>
	{
		set_motors(speed,speed);
    1020:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
    1024:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
    1028:	bc 01       	movw	r22, r24
    102a:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
		if(counter % 20 == 0)
    102e:	40 91 fd 01 	lds	r20, 0x01FD	; 0x8001fd <counter.2284>
    1032:	50 91 fe 01 	lds	r21, 0x01FE	; 0x8001fe <counter.2284+0x1>
    1036:	9a 01       	movw	r18, r20
    1038:	ad ec       	ldi	r26, 0xCD	; 205
    103a:	bc ec       	ldi	r27, 0xCC	; 204
    103c:	0e 94 39 1d 	call	0x3a72	; 0x3a72 <__umulhisi3>
    1040:	92 95       	swap	r25
    1042:	82 95       	swap	r24
    1044:	8f 70       	andi	r24, 0x0F	; 15
    1046:	89 27       	eor	r24, r25
    1048:	9f 70       	andi	r25, 0x0F	; 15
    104a:	89 27       	eor	r24, r25
    104c:	64 e1       	ldi	r22, 0x14	; 20
    104e:	68 9f       	mul	r22, r24
    1050:	90 01       	movw	r18, r0
    1052:	69 9f       	mul	r22, r25
    1054:	30 0d       	add	r19, r0
    1056:	11 24       	eor	r1, r1
    1058:	42 17       	cp	r20, r18
    105a:	53 07       	cpc	r21, r19
    105c:	49 f4       	brne	.+18     	; 0x1070 <manualControl+0x200>
		{
			speed++;
    105e:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
    1062:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
    1066:	01 96       	adiw	r24, 0x01	; 1
    1068:	90 93 00 02 	sts	0x0200, r25	; 0x800200 <speed.2283+0x1>
    106c:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <speed.2283>
		}
		if(speed > -1)
    1070:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
    1074:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
    1078:	99 23       	and	r25, r25
    107a:	24 f0       	brlt	.+8      	; 0x1084 <manualControl+0x214>
		{
			speed = 0;
    107c:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <speed.2283+0x1>
    1080:	10 92 ff 01 	sts	0x01FF, r1	; 0x8001ff <speed.2283>
		}
		counter++;
    1084:	4f 5f       	subi	r20, 0xFF	; 255
    1086:	5f 4f       	sbci	r21, 0xFF	; 255
    1088:	50 93 fe 01 	sts	0x01FE, r21	; 0x8001fe <counter.2284+0x1>
    108c:	40 93 fd 01 	sts	0x01FD, r20	; 0x8001fd <counter.2284>
	}
	
	if(myComs->Direction[1] == 1){
    1090:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
    1094:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
    1098:	86 a9       	ldd	r24, Z+54	; 0x36
    109a:	81 30       	cpi	r24, 0x01	; 1
    109c:	61 f4       	brne	.+24     	; 0x10b6 <manualControl+0x246>
		set_motors(speed/2,speed);
    109e:	60 91 ff 01 	lds	r22, 0x01FF	; 0x8001ff <speed.2283>
    10a2:	70 91 00 02 	lds	r23, 0x0200	; 0x800200 <speed.2283+0x1>
    10a6:	cb 01       	movw	r24, r22
    10a8:	77 23       	and	r23, r23
    10aa:	0c f4       	brge	.+2      	; 0x10ae <manualControl+0x23e>
    10ac:	01 96       	adiw	r24, 0x01	; 1
    10ae:	95 95       	asr	r25
    10b0:	87 95       	ror	r24
    10b2:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
	}
	
	if(myComs->Direction[3] == 1){
    10b6:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <myComs>
    10ba:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <myComs+0x1>
    10be:	80 ad       	ldd	r24, Z+56	; 0x38
    10c0:	81 30       	cpi	r24, 0x01	; 1
    10c2:	69 f4       	brne	.+26     	; 0x10de <manualControl+0x26e>
		set_motors(speed,speed/2);
    10c4:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <speed.2283>
    10c8:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <speed.2283+0x1>
    10cc:	bc 01       	movw	r22, r24
    10ce:	99 23       	and	r25, r25
    10d0:	14 f4       	brge	.+4      	; 0x10d6 <manualControl+0x266>
    10d2:	6f 5f       	subi	r22, 0xFF	; 255
    10d4:	7f 4f       	sbci	r23, 0xFF	; 255
    10d6:	75 95       	asr	r23
    10d8:	67 95       	ror	r22
    10da:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
    10de:	08 95       	ret

000010e0 <Spin>:
	}
}

void Spin(){
    10e0:	cf 93       	push	r28
    10e2:	df 93       	push	r29
	errorDisplay(slipped,batteryPercentage());
    10e4:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
    10e8:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <__fixsfsi>
    10ec:	80 e0       	ldi	r24, 0x00	; 0
    10ee:	0e 94 72 03 	call	0x6e4	; 0x6e4 <errorDisplay>
	for(int i = 0;i<=255;i++){
    10f2:	c0 e0       	ldi	r28, 0x00	; 0
    10f4:	d0 e0       	ldi	r29, 0x00	; 0
    10f6:	0c c0       	rjmp	.+24     	; 0x1110 <Spin+0x30>
		set_motors(i,0-i);
    10f8:	66 27       	eor	r22, r22
    10fa:	77 27       	eor	r23, r23
    10fc:	6c 1b       	sub	r22, r28
    10fe:	7d 0b       	sbc	r23, r29
    1100:	ce 01       	movw	r24, r28
    1102:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>
    1106:	82 e0       	ldi	r24, 0x02	; 2
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	0e 94 19 17 	call	0x2e32	; 0x2e32 <delay_ms>
	}
}

void Spin(){
	errorDisplay(slipped,batteryPercentage());
	for(int i = 0;i<=255;i++){
    110e:	21 96       	adiw	r28, 0x01	; 1
    1110:	cf 3f       	cpi	r28, 0xFF	; 255
    1112:	d1 05       	cpc	r29, r1
    1114:	89 f3       	breq	.-30     	; 0x10f8 <Spin+0x18>
    1116:	84 f3       	brlt	.-32     	; 0x10f8 <Spin+0x18>
    1118:	c0 e0       	ldi	r28, 0x00	; 0
    111a:	d0 e0       	ldi	r29, 0x00	; 0
    111c:	10 c0       	rjmp	.+32     	; 0x113e <Spin+0x5e>
		set_motors(i,0-i);
		delay(2);
	}
	int count = 0;
	while(myComs->EmergencyStop == 2){
		count++;
    111e:	21 96       	adiw	r28, 0x01	; 1
		if(count % 10000 == 0)
    1120:	ce 01       	movw	r24, r28
    1122:	60 e1       	ldi	r22, 0x10	; 16
    1124:	77 e2       	ldi	r23, 0x27	; 39
    1126:	0e 94 de 1c 	call	0x39bc	; 0x39bc <__divmodhi4>
    112a:	89 2b       	or	r24, r25
    112c:	41 f4       	brne	.+16     	; 0x113e <Spin+0x5e>
		{
			myComs->Update(myComs);
    112e:	f9 01       	movw	r30, r18
    1130:	ef 58       	subi	r30, 0x8F	; 143
    1132:	ff 4f       	sbci	r31, 0xFF	; 255
    1134:	01 90       	ld	r0, Z+
    1136:	f0 81       	ld	r31, Z
    1138:	e0 2d       	mov	r30, r0
    113a:	c9 01       	movw	r24, r18
    113c:	09 95       	icall
	for(int i = 0;i<=255;i++){
		set_motors(i,0-i);
		delay(2);
	}
	int count = 0;
	while(myComs->EmergencyStop == 2){
    113e:	20 91 08 02 	lds	r18, 0x0208	; 0x800208 <myComs>
    1142:	30 91 09 02 	lds	r19, 0x0209	; 0x800209 <myComs+0x1>
    1146:	f9 01       	movw	r30, r18
    1148:	e5 59       	subi	r30, 0x95	; 149
    114a:	ff 4f       	sbci	r31, 0xFF	; 255
    114c:	80 81       	ld	r24, Z
    114e:	82 30       	cpi	r24, 0x02	; 2
    1150:	31 f3       	breq	.-52     	; 0x111e <Spin+0x3e>
		


	}
	
	set_motors(0,0);
    1152:	60 e0       	ldi	r22, 0x00	; 0
    1154:	70 e0       	ldi	r23, 0x00	; 0
    1156:	80 e0       	ldi	r24, 0x00	; 0
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	0e 94 10 15 	call	0x2a20	; 0x2a20 <set_motors>

	
    115e:	df 91       	pop	r29
    1160:	cf 91       	pop	r28
    1162:	08 95       	ret

00001164 <parcoursSearch>:
			}
			motorControl(richting);
		}
	}
	return 0;
}
    1164:	0f 93       	push	r16
    1166:	1f 93       	push	r17
    1168:	cf 93       	push	r28
    116a:	df 93       	push	r29
    116c:	00 d0       	rcall	.+0      	; 0x116e <parcoursSearch+0xa>
    116e:	cd b7       	in	r28, 0x3d	; 61
    1170:	de b7       	in	r29, 0x3e	; 62
    1172:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lineType>
    1176:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <situatie>
    117a:	90 e0       	ldi	r25, 0x00	; 0
    117c:	89 30       	cpi	r24, 0x09	; 9
    117e:	91 05       	cpc	r25, r1
    1180:	08 f0       	brcs	.+2      	; 0x1184 <parcoursSearch+0x20>
    1182:	41 c0       	rjmp	.+130    	; 0x1206 <parcoursSearch+0xa2>
    1184:	fc 01       	movw	r30, r24
    1186:	ec 5c       	subi	r30, 0xCC	; 204
    1188:	ff 4f       	sbci	r31, 0xFF	; 255
    118a:	0c 94 33 1d 	jmp	0x3a66	; 0x3a66 <__tablejump2__>
    118e:	83 e5       	ldi	r24, 0x53	; 83
    1190:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1194:	38 c0       	rjmp	.+112    	; 0x1206 <parcoursSearch+0xa2>
    1196:	8c e4       	ldi	r24, 0x4C	; 76
    1198:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    119c:	8c e4       	ldi	r24, 0x4C	; 76
    119e:	89 83       	std	Y+1, r24	; 0x01
    11a0:	41 e0       	ldi	r20, 0x01	; 1
    11a2:	50 e0       	ldi	r21, 0x00	; 0
    11a4:	be 01       	movw	r22, r28
    11a6:	6f 5f       	subi	r22, 0xFF	; 255
    11a8:	7f 4f       	sbci	r23, 0xFF	; 255
    11aa:	84 e1       	ldi	r24, 0x14	; 20
    11ac:	91 e0       	ldi	r25, 0x01	; 1
    11ae:	0e 94 b3 1e 	call	0x3d66	; 0x3d66 <strncat>
    11b2:	29 c0       	rjmp	.+82     	; 0x1206 <parcoursSearch+0xa2>
    11b4:	82 e5       	ldi	r24, 0x52	; 82
    11b6:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    11ba:	82 e5       	ldi	r24, 0x52	; 82
    11bc:	89 83       	std	Y+1, r24	; 0x01
    11be:	41 e0       	ldi	r20, 0x01	; 1
    11c0:	50 e0       	ldi	r21, 0x00	; 0
    11c2:	be 01       	movw	r22, r28
    11c4:	6f 5f       	subi	r22, 0xFF	; 255
    11c6:	7f 4f       	sbci	r23, 0xFF	; 255
    11c8:	84 e1       	ldi	r24, 0x14	; 20
    11ca:	91 e0       	ldi	r25, 0x01	; 1
    11cc:	0e 94 b3 1e 	call	0x3d66	; 0x3d66 <strncat>
    11d0:	1a c0       	rjmp	.+52     	; 0x1206 <parcoursSearch+0xa2>
    11d2:	83 e5       	ldi	r24, 0x53	; 83
    11d4:	89 83       	std	Y+1, r24	; 0x01
    11d6:	41 e0       	ldi	r20, 0x01	; 1
    11d8:	50 e0       	ldi	r21, 0x00	; 0
    11da:	be 01       	movw	r22, r28
    11dc:	6f 5f       	subi	r22, 0xFF	; 255
    11de:	7f 4f       	sbci	r23, 0xFF	; 255
    11e0:	84 e1       	ldi	r24, 0x14	; 20
    11e2:	91 e0       	ldi	r25, 0x01	; 1
    11e4:	0e 94 b3 1e 	call	0x3d66	; 0x3d66 <strncat>
    11e8:	0e c0       	rjmp	.+28     	; 0x1206 <parcoursSearch+0xa2>
    11ea:	84 e5       	ldi	r24, 0x54	; 84
    11ec:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    11f0:	84 e5       	ldi	r24, 0x54	; 84
    11f2:	89 83       	std	Y+1, r24	; 0x01
    11f4:	41 e0       	ldi	r20, 0x01	; 1
    11f6:	50 e0       	ldi	r21, 0x00	; 0
    11f8:	be 01       	movw	r22, r28
    11fa:	6f 5f       	subi	r22, 0xFF	; 255
    11fc:	7f 4f       	sbci	r23, 0xFF	; 255
    11fe:	84 e1       	ldi	r24, 0x14	; 20
    1200:	91 e0       	ldi	r25, 0x01	; 1
    1202:	0e 94 b3 1e 	call	0x3d66	; 0x3d66 <strncat>
    1206:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <clear>
    120a:	60 e0       	ldi	r22, 0x00	; 0
    120c:	80 e0       	ldi	r24, 0x00	; 0
    120e:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <lcd_goto_xy>
    1212:	00 e0       	ldi	r16, 0x00	; 0
    1214:	10 e0       	ldi	r17, 0x00	; 0
    1216:	08 c0       	rjmp	.+16     	; 0x1228 <parcoursSearch+0xc4>
    1218:	f8 01       	movw	r30, r16
    121a:	ec 5e       	subi	r30, 0xEC	; 236
    121c:	fe 4f       	sbci	r31, 0xFE	; 254
    121e:	80 81       	ld	r24, Z
    1220:	0e 94 63 13 	call	0x26c6	; 0x26c6 <print_character>
    1224:	0f 5f       	subi	r16, 0xFF	; 255
    1226:	1f 4f       	sbci	r17, 0xFF	; 255
    1228:	e4 e1       	ldi	r30, 0x14	; 20
    122a:	f1 e0       	ldi	r31, 0x01	; 1
    122c:	01 90       	ld	r0, Z+
    122e:	00 20       	and	r0, r0
    1230:	e9 f7       	brne	.-6      	; 0x122c <parcoursSearch+0xc8>
    1232:	31 97       	sbiw	r30, 0x01	; 1
    1234:	e4 51       	subi	r30, 0x14	; 20
    1236:	f1 40       	sbci	r31, 0x01	; 1
    1238:	e0 17       	cp	r30, r16
    123a:	f1 07       	cpc	r31, r17
    123c:	68 f7       	brcc	.-38     	; 0x1218 <parcoursSearch+0xb4>
    123e:	df 01       	movw	r26, r30
    1240:	ae 5e       	subi	r26, 0xEE	; 238
    1242:	be 4f       	sbci	r27, 0xFE	; 254
    1244:	8c 91       	ld	r24, X
    1246:	84 35       	cpi	r24, 0x54	; 84
    1248:	09 f0       	breq	.+2      	; 0x124c <parcoursSearch+0xe8>
    124a:	93 cf       	rjmp	.-218    	; 0x1172 <parcoursSearch+0xe>
    124c:	df 01       	movw	r26, r30
    124e:	af 5e       	subi	r26, 0xEF	; 239
    1250:	be 4f       	sbci	r27, 0xFE	; 254
    1252:	8c 91       	ld	r24, X
    1254:	ed 5e       	subi	r30, 0xED	; 237
    1256:	fe 4f       	sbci	r31, 0xFE	; 254
    1258:	90 81       	ld	r25, Z
    125a:	8c 34       	cpi	r24, 0x4C	; 76
    125c:	29 f4       	brne	.+10     	; 0x1268 <parcoursSearch+0x104>
    125e:	9c 34       	cpi	r25, 0x4C	; 76
    1260:	19 f4       	brne	.+6      	; 0x1268 <parcoursSearch+0x104>
    1262:	83 e5       	ldi	r24, 0x53	; 83
    1264:	8a 83       	std	Y+2, r24	; 0x02
    1266:	1b c0       	rjmp	.+54     	; 0x129e <parcoursSearch+0x13a>
    1268:	83 35       	cpi	r24, 0x53	; 83
    126a:	29 f4       	brne	.+10     	; 0x1276 <parcoursSearch+0x112>
    126c:	9c 34       	cpi	r25, 0x4C	; 76
    126e:	19 f4       	brne	.+6      	; 0x1276 <parcoursSearch+0x112>
    1270:	82 e5       	ldi	r24, 0x52	; 82
    1272:	8a 83       	std	Y+2, r24	; 0x02
    1274:	14 c0       	rjmp	.+40     	; 0x129e <parcoursSearch+0x13a>
    1276:	82 35       	cpi	r24, 0x52	; 82
    1278:	29 f4       	brne	.+10     	; 0x1284 <parcoursSearch+0x120>
    127a:	9c 34       	cpi	r25, 0x4C	; 76
    127c:	19 f4       	brne	.+6      	; 0x1284 <parcoursSearch+0x120>
    127e:	84 e5       	ldi	r24, 0x54	; 84
    1280:	8a 83       	std	Y+2, r24	; 0x02
    1282:	0d c0       	rjmp	.+26     	; 0x129e <parcoursSearch+0x13a>
    1284:	8c 34       	cpi	r24, 0x4C	; 76
    1286:	29 f4       	brne	.+10     	; 0x1292 <parcoursSearch+0x12e>
    1288:	92 35       	cpi	r25, 0x52	; 82
    128a:	19 f4       	brne	.+6      	; 0x1292 <parcoursSearch+0x12e>
    128c:	84 e5       	ldi	r24, 0x54	; 84
    128e:	8a 83       	std	Y+2, r24	; 0x02
    1290:	06 c0       	rjmp	.+12     	; 0x129e <parcoursSearch+0x13a>
    1292:	8c 34       	cpi	r24, 0x4C	; 76
    1294:	21 f4       	brne	.+8      	; 0x129e <parcoursSearch+0x13a>
    1296:	93 35       	cpi	r25, 0x53	; 83
    1298:	11 f4       	brne	.+4      	; 0x129e <parcoursSearch+0x13a>
    129a:	82 e5       	ldi	r24, 0x52	; 82
    129c:	8a 83       	std	Y+2, r24	; 0x02
    129e:	e4 e1       	ldi	r30, 0x14	; 20
    12a0:	f1 e0       	ldi	r31, 0x01	; 1
    12a2:	01 90       	ld	r0, Z+
    12a4:	00 20       	and	r0, r0
    12a6:	e9 f7       	brne	.-6      	; 0x12a2 <parcoursSearch+0x13e>
    12a8:	34 97       	sbiw	r30, 0x04	; 4
    12aa:	10 82       	st	Z, r1
    12ac:	41 e0       	ldi	r20, 0x01	; 1
    12ae:	50 e0       	ldi	r21, 0x00	; 0
    12b0:	be 01       	movw	r22, r28
    12b2:	6e 5f       	subi	r22, 0xFE	; 254
    12b4:	7f 4f       	sbci	r23, 0xFF	; 255
    12b6:	84 e1       	ldi	r24, 0x14	; 20
    12b8:	91 e0       	ldi	r25, 0x01	; 1
    12ba:	0e 94 b3 1e 	call	0x3d66	; 0x3d66 <strncat>
    12be:	59 cf       	rjmp	.-334    	; 0x1172 <parcoursSearch+0xe>
    12c0:	80 e5       	ldi	r24, 0x50	; 80
    12c2:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    12c6:	80 e0       	ldi	r24, 0x00	; 0
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	0f 90       	pop	r0
    12cc:	0f 90       	pop	r0
    12ce:	df 91       	pop	r29
    12d0:	cf 91       	pop	r28
    12d2:	1f 91       	pop	r17
    12d4:	0f 91       	pop	r16
    12d6:	08 95       	ret

000012d8 <parcours>:

int parcours(char way, Communications *communications) 
{
    12d8:	cf 93       	push	r28
    12da:	df 93       	push	r29
    12dc:	00 d0       	rcall	.+0      	; 0x12de <parcours+0x6>
    12de:	cd b7       	in	r28, 0x3d	; 61
    12e0:	de b7       	in	r29, 0x3e	; 62
    12e2:	7a 83       	std	Y+2, r23	; 0x02
    12e4:	69 83       	std	Y+1, r22	; 0x01
	updateDisplay(0, batteryPercentage(), mazeSolver);
    12e6:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
    12ea:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <__fixsfsi>
    12ee:	41 e0       	ldi	r20, 0x01	; 1
    12f0:	80 e0       	ldi	r24, 0x00	; 0
    12f2:	90 e0       	ldi	r25, 0x00	; 0
    12f4:	0e 94 19 03 	call	0x632	; 0x632 <updateDisplay>
	if (route[0] == '_'){
    12f8:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <route>
    12fc:	8f 35       	cpi	r24, 0x5F	; 95
    12fe:	61 f4       	brne	.+24     	; 0x1318 <parcours+0x40>
		memset(route,0,sizeof route);
    1300:	84 e1       	ldi	r24, 0x14	; 20
    1302:	e4 e1       	ldi	r30, 0x14	; 20
    1304:	f1 e0       	ldi	r31, 0x01	; 1
    1306:	df 01       	movw	r26, r30
    1308:	1d 92       	st	X+, r1
    130a:	8a 95       	dec	r24
    130c:	e9 f7       	brne	.-6      	; 0x1308 <parcours+0x30>
		parcoursSearch(&communications);
    130e:	ce 01       	movw	r24, r28
    1310:	01 96       	adiw	r24, 0x01	; 1
    1312:	0e 94 b2 08 	call	0x1164	; 0x1164 <parcoursSearch>
    1316:	04 c0       	rjmp	.+8      	; 0x1320 <parcours+0x48>
	} 
	else 
	{
	//	parcoursRun(way, communications);
		parcoursSearch(&communications);
    1318:	ce 01       	movw	r24, r28
    131a:	01 96       	adiw	r24, 0x01	; 1
    131c:	0e 94 b2 08 	call	0x1164	; 0x1164 <parcoursSearch>
	} 
	return 0;
    1320:	80 e0       	ldi	r24, 0x00	; 0
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	0f 90       	pop	r0
    1326:	0f 90       	pop	r0
    1328:	df 91       	pop	r29
    132a:	cf 91       	pop	r28
    132c:	08 95       	ret

0000132e <swap>:
    132e:	fc 01       	movw	r30, r24
    1330:	20 81       	ld	r18, Z
    1332:	fb 01       	movw	r30, r22
    1334:	30 81       	ld	r19, Z
    1336:	fc 01       	movw	r30, r24
    1338:	30 83       	st	Z, r19
    133a:	fb 01       	movw	r30, r22
    133c:	20 83       	st	Z, r18
    133e:	08 95       	ret

00001340 <bubbleSort>:
    1340:	8f 92       	push	r8
    1342:	9f 92       	push	r9
    1344:	af 92       	push	r10
    1346:	bf 92       	push	r11
    1348:	cf 92       	push	r12
    134a:	df 92       	push	r13
    134c:	ef 92       	push	r14
    134e:	ff 92       	push	r15
    1350:	0f 93       	push	r16
    1352:	1f 93       	push	r17
    1354:	cf 93       	push	r28
    1356:	df 93       	push	r29
    1358:	8c 01       	movw	r16, r24
    135a:	5b 01       	movw	r10, r22
    135c:	6a 01       	movw	r12, r20
    135e:	e1 2c       	mov	r14, r1
    1360:	f1 2c       	mov	r15, r1
    1362:	28 c0       	rjmp	.+80     	; 0x13b4 <bubbleSort+0x74>
    1364:	f8 01       	movw	r30, r16
    1366:	ec 0f       	add	r30, r28
    1368:	fd 1f       	adc	r31, r29
    136a:	90 81       	ld	r25, Z
    136c:	4e 01       	movw	r8, r28
    136e:	8f ef       	ldi	r24, 0xFF	; 255
    1370:	88 1a       	sub	r8, r24
    1372:	98 0a       	sbc	r9, r24
    1374:	d8 01       	movw	r26, r16
    1376:	a8 0d       	add	r26, r8
    1378:	b9 1d       	adc	r27, r9
    137a:	8c 91       	ld	r24, X
    137c:	89 17       	cp	r24, r25
    137e:	60 f4       	brcc	.+24     	; 0x1398 <bubbleSort+0x58>
    1380:	bd 01       	movw	r22, r26
    1382:	cf 01       	movw	r24, r30
    1384:	0e 94 97 09 	call	0x132e	; 0x132e <swap>
    1388:	b5 01       	movw	r22, r10
    138a:	68 0d       	add	r22, r8
    138c:	79 1d       	adc	r23, r9
    138e:	c5 01       	movw	r24, r10
    1390:	8c 0f       	add	r24, r28
    1392:	9d 1f       	adc	r25, r29
    1394:	0e 94 97 09 	call	0x132e	; 0x132e <swap>
    1398:	21 96       	adiw	r28, 0x01	; 1
    139a:	02 c0       	rjmp	.+4      	; 0x13a0 <bubbleSort+0x60>
    139c:	c0 e0       	ldi	r28, 0x00	; 0
    139e:	d0 e0       	ldi	r29, 0x00	; 0
    13a0:	c6 01       	movw	r24, r12
    13a2:	8e 19       	sub	r24, r14
    13a4:	9f 09       	sbc	r25, r15
    13a6:	01 97       	sbiw	r24, 0x01	; 1
    13a8:	c8 17       	cp	r28, r24
    13aa:	d9 07       	cpc	r29, r25
    13ac:	dc f2       	brlt	.-74     	; 0x1364 <bubbleSort+0x24>
    13ae:	8f ef       	ldi	r24, 0xFF	; 255
    13b0:	e8 1a       	sub	r14, r24
    13b2:	f8 0a       	sbc	r15, r24
    13b4:	c6 01       	movw	r24, r12
    13b6:	01 97       	sbiw	r24, 0x01	; 1
    13b8:	e8 16       	cp	r14, r24
    13ba:	f9 06       	cpc	r15, r25
    13bc:	7c f3       	brlt	.-34     	; 0x139c <bubbleSort+0x5c>
    13be:	df 91       	pop	r29
    13c0:	cf 91       	pop	r28
    13c2:	1f 91       	pop	r17
    13c4:	0f 91       	pop	r16
    13c6:	ff 90       	pop	r15
    13c8:	ef 90       	pop	r14
    13ca:	df 90       	pop	r13
    13cc:	cf 90       	pop	r12
    13ce:	bf 90       	pop	r11
    13d0:	af 90       	pop	r10
    13d2:	9f 90       	pop	r9
    13d4:	8f 90       	pop	r8
    13d6:	08 95       	ret

000013d8 <drive>:
    13d8:	cf 92       	push	r12
    13da:	df 92       	push	r13
    13dc:	ef 92       	push	r14
    13de:	ff 92       	push	r15
    13e0:	0f 93       	push	r16
    13e2:	1f 93       	push	r17
    13e4:	cf 93       	push	r28
    13e6:	df 93       	push	r29
    13e8:	6c 01       	movw	r12, r24
    13ea:	7a 01       	movw	r14, r20
    13ec:	83 e5       	ldi	r24, 0x53	; 83
    13ee:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    13f2:	00 e0       	ldi	r16, 0x00	; 0
    13f4:	10 e0       	ldi	r17, 0x00	; 0
    13f6:	c1 e0       	ldi	r28, 0x01	; 1
    13f8:	d0 e0       	ldi	r29, 0x00	; 0
    13fa:	22 c0       	rjmp	.+68     	; 0x1440 <drive+0x68>
    13fc:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lineType>
    1400:	81 30       	cpi	r24, 0x01	; 1
    1402:	49 f0       	breq	.+18     	; 0x1416 <drive+0x3e>
    1404:	20 f0       	brcs	.+8      	; 0x140e <drive+0x36>
    1406:	83 50       	subi	r24, 0x03	; 3
    1408:	86 30       	cpi	r24, 0x06	; 6
    140a:	d0 f4       	brcc	.+52     	; 0x1440 <drive+0x68>
    140c:	04 c0       	rjmp	.+8      	; 0x1416 <drive+0x3e>
    140e:	83 e5       	ldi	r24, 0x53	; 83
    1410:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1414:	15 c0       	rjmp	.+42     	; 0x1440 <drive+0x68>
    1416:	0f 5f       	subi	r16, 0xFF	; 255
    1418:	1f 4f       	sbci	r17, 0xFF	; 255
    141a:	83 e5       	ldi	r24, 0x53	; 83
    141c:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1420:	0c 15       	cp	r16, r12
    1422:	1d 05       	cpc	r17, r13
    1424:	29 f4       	brne	.+10     	; 0x1430 <drive+0x58>
    1426:	80 e5       	ldi	r24, 0x50	; 80
    1428:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    142c:	c0 e0       	ldi	r28, 0x00	; 0
    142e:	d0 e0       	ldi	r29, 0x00	; 0
    1430:	f7 01       	movw	r30, r14
    1432:	ef 58       	subi	r30, 0x8F	; 143
    1434:	ff 4f       	sbci	r31, 0xFF	; 255
    1436:	01 90       	ld	r0, Z+
    1438:	f0 81       	ld	r31, Z
    143a:	e0 2d       	mov	r30, r0
    143c:	c7 01       	movw	r24, r14
    143e:	09 95       	icall
    1440:	20 97       	sbiw	r28, 0x00	; 0
    1442:	e1 f6       	brne	.-72     	; 0x13fc <drive+0x24>
    1444:	df 91       	pop	r29
    1446:	cf 91       	pop	r28
    1448:	1f 91       	pop	r17
    144a:	0f 91       	pop	r16
    144c:	ff 90       	pop	r15
    144e:	ef 90       	pop	r14
    1450:	df 90       	pop	r13
    1452:	cf 90       	pop	r12
    1454:	08 95       	ret

00001456 <waitForTurn>:
    1456:	cf 93       	push	r28
    1458:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lineType>
    145c:	c8 2f       	mov	r28, r24
    145e:	8f e0       	ldi	r24, 0x0F	; 15
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	0e 94 19 17 	call	0x2e32	; 0x2e32 <delay_ms>
    1466:	03 c0       	rjmp	.+6      	; 0x146e <waitForTurn+0x18>
    1468:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lineType>
    146c:	c8 2f       	mov	r28, r24
    146e:	c1 11       	cpse	r28, r1
    1470:	fb cf       	rjmp	.-10     	; 0x1468 <waitForTurn+0x12>
    1472:	8e e4       	ldi	r24, 0x4E	; 78
    1474:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1478:	cf 91       	pop	r28
    147a:	08 95       	ret

0000147c <turnRobot>:
    147c:	ef 92       	push	r14
    147e:	ff 92       	push	r15
    1480:	0f 93       	push	r16
    1482:	1f 93       	push	r17
    1484:	cf 93       	push	r28
    1486:	c8 2f       	mov	r28, r24
    1488:	8b 01       	movw	r16, r22
    148a:	ee 24       	eor	r14, r14
    148c:	e3 94       	inc	r14
    148e:	f1 2c       	mov	r15, r1
    1490:	a6 c0       	rjmp	.+332    	; 0x15de <turnRobot+0x162>
    1492:	f8 01       	movw	r30, r16
    1494:	84 81       	ldd	r24, Z+4	; 0x04
    1496:	8e 34       	cpi	r24, 0x4E	; 78
    1498:	59 f0       	breq	.+22     	; 0x14b0 <turnRobot+0x34>
    149a:	18 f4       	brcc	.+6      	; 0x14a2 <turnRobot+0x26>
    149c:	85 34       	cpi	r24, 0x45	; 69
    149e:	69 f1       	breq	.+90     	; 0x14fa <turnRobot+0x7e>
    14a0:	98 c0       	rjmp	.+304    	; 0x15d2 <turnRobot+0x156>
    14a2:	83 35       	cpi	r24, 0x53	; 83
    14a4:	09 f4       	brne	.+2      	; 0x14a8 <turnRobot+0x2c>
    14a6:	4e c0       	rjmp	.+156    	; 0x1544 <turnRobot+0xc8>
    14a8:	87 35       	cpi	r24, 0x57	; 87
    14aa:	09 f4       	brne	.+2      	; 0x14ae <turnRobot+0x32>
    14ac:	6f c0       	rjmp	.+222    	; 0x158c <turnRobot+0x110>
    14ae:	91 c0       	rjmp	.+290    	; 0x15d2 <turnRobot+0x156>
    14b0:	c5 34       	cpi	r28, 0x45	; 69
    14b2:	49 f4       	brne	.+18     	; 0x14c6 <turnRobot+0x4a>
    14b4:	82 e5       	ldi	r24, 0x52	; 82
    14b6:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    14ba:	0e 94 2b 0a 	call	0x1456	; 0x1456 <waitForTurn>
    14be:	85 e4       	ldi	r24, 0x45	; 69
    14c0:	f8 01       	movw	r30, r16
    14c2:	84 83       	std	Z+4, r24	; 0x04
    14c4:	86 c0       	rjmp	.+268    	; 0x15d2 <turnRobot+0x156>
    14c6:	c7 35       	cpi	r28, 0x57	; 87
    14c8:	49 f4       	brne	.+18     	; 0x14dc <turnRobot+0x60>
    14ca:	8c e4       	ldi	r24, 0x4C	; 76
    14cc:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    14d0:	0e 94 2b 0a 	call	0x1456	; 0x1456 <waitForTurn>
    14d4:	87 e5       	ldi	r24, 0x57	; 87
    14d6:	f8 01       	movw	r30, r16
    14d8:	84 83       	std	Z+4, r24	; 0x04
    14da:	7b c0       	rjmp	.+246    	; 0x15d2 <turnRobot+0x156>
    14dc:	c3 35       	cpi	r28, 0x53	; 83
    14de:	09 f0       	breq	.+2      	; 0x14e2 <turnRobot+0x66>
    14e0:	78 c0       	rjmp	.+240    	; 0x15d2 <turnRobot+0x156>
    14e2:	8c e4       	ldi	r24, 0x4C	; 76
    14e4:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    14e8:	8c e4       	ldi	r24, 0x4C	; 76
    14ea:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    14ee:	0e 94 2b 0a 	call	0x1456	; 0x1456 <waitForTurn>
    14f2:	83 e5       	ldi	r24, 0x53	; 83
    14f4:	f8 01       	movw	r30, r16
    14f6:	84 83       	std	Z+4, r24	; 0x04
    14f8:	6c c0       	rjmp	.+216    	; 0x15d2 <turnRobot+0x156>
    14fa:	c3 35       	cpi	r28, 0x53	; 83
    14fc:	49 f4       	brne	.+18     	; 0x1510 <turnRobot+0x94>
    14fe:	82 e5       	ldi	r24, 0x52	; 82
    1500:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1504:	0e 94 2b 0a 	call	0x1456	; 0x1456 <waitForTurn>
    1508:	83 e5       	ldi	r24, 0x53	; 83
    150a:	f8 01       	movw	r30, r16
    150c:	84 83       	std	Z+4, r24	; 0x04
    150e:	61 c0       	rjmp	.+194    	; 0x15d2 <turnRobot+0x156>
    1510:	c7 35       	cpi	r28, 0x57	; 87
    1512:	49 f4       	brne	.+18     	; 0x1526 <turnRobot+0xaa>
    1514:	8c e4       	ldi	r24, 0x4C	; 76
    1516:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    151a:	0e 94 2b 0a 	call	0x1456	; 0x1456 <waitForTurn>
    151e:	87 e5       	ldi	r24, 0x57	; 87
    1520:	f8 01       	movw	r30, r16
    1522:	84 83       	std	Z+4, r24	; 0x04
    1524:	56 c0       	rjmp	.+172    	; 0x15d2 <turnRobot+0x156>
    1526:	c3 35       	cpi	r28, 0x53	; 83
    1528:	09 f0       	breq	.+2      	; 0x152c <turnRobot+0xb0>
    152a:	53 c0       	rjmp	.+166    	; 0x15d2 <turnRobot+0x156>
    152c:	8c e4       	ldi	r24, 0x4C	; 76
    152e:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1532:	8c e4       	ldi	r24, 0x4C	; 76
    1534:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1538:	0e 94 2b 0a 	call	0x1456	; 0x1456 <waitForTurn>
    153c:	83 e5       	ldi	r24, 0x53	; 83
    153e:	f8 01       	movw	r30, r16
    1540:	84 83       	std	Z+4, r24	; 0x04
    1542:	47 c0       	rjmp	.+142    	; 0x15d2 <turnRobot+0x156>
    1544:	c7 35       	cpi	r28, 0x57	; 87
    1546:	49 f4       	brne	.+18     	; 0x155a <turnRobot+0xde>
    1548:	82 e5       	ldi	r24, 0x52	; 82
    154a:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    154e:	0e 94 2b 0a 	call	0x1456	; 0x1456 <waitForTurn>
    1552:	87 e5       	ldi	r24, 0x57	; 87
    1554:	f8 01       	movw	r30, r16
    1556:	84 83       	std	Z+4, r24	; 0x04
    1558:	3c c0       	rjmp	.+120    	; 0x15d2 <turnRobot+0x156>
    155a:	c5 34       	cpi	r28, 0x45	; 69
    155c:	49 f4       	brne	.+18     	; 0x1570 <turnRobot+0xf4>
    155e:	8c e4       	ldi	r24, 0x4C	; 76
    1560:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1564:	0e 94 2b 0a 	call	0x1456	; 0x1456 <waitForTurn>
    1568:	85 e4       	ldi	r24, 0x45	; 69
    156a:	f8 01       	movw	r30, r16
    156c:	84 83       	std	Z+4, r24	; 0x04
    156e:	31 c0       	rjmp	.+98     	; 0x15d2 <turnRobot+0x156>
    1570:	ce 34       	cpi	r28, 0x4E	; 78
    1572:	79 f5       	brne	.+94     	; 0x15d2 <turnRobot+0x156>
    1574:	8c e4       	ldi	r24, 0x4C	; 76
    1576:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    157a:	8c e4       	ldi	r24, 0x4C	; 76
    157c:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1580:	0e 94 2b 0a 	call	0x1456	; 0x1456 <waitForTurn>
    1584:	8e e4       	ldi	r24, 0x4E	; 78
    1586:	f8 01       	movw	r30, r16
    1588:	84 83       	std	Z+4, r24	; 0x04
    158a:	23 c0       	rjmp	.+70     	; 0x15d2 <turnRobot+0x156>
    158c:	ce 34       	cpi	r28, 0x4E	; 78
    158e:	49 f4       	brne	.+18     	; 0x15a2 <turnRobot+0x126>
    1590:	82 e5       	ldi	r24, 0x52	; 82
    1592:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1596:	0e 94 2b 0a 	call	0x1456	; 0x1456 <waitForTurn>
    159a:	8e e4       	ldi	r24, 0x4E	; 78
    159c:	f8 01       	movw	r30, r16
    159e:	84 83       	std	Z+4, r24	; 0x04
    15a0:	18 c0       	rjmp	.+48     	; 0x15d2 <turnRobot+0x156>
    15a2:	c3 35       	cpi	r28, 0x53	; 83
    15a4:	49 f4       	brne	.+18     	; 0x15b8 <turnRobot+0x13c>
    15a6:	8c e4       	ldi	r24, 0x4C	; 76
    15a8:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    15ac:	0e 94 2b 0a 	call	0x1456	; 0x1456 <waitForTurn>
    15b0:	83 e5       	ldi	r24, 0x53	; 83
    15b2:	f8 01       	movw	r30, r16
    15b4:	84 83       	std	Z+4, r24	; 0x04
    15b6:	0d c0       	rjmp	.+26     	; 0x15d2 <turnRobot+0x156>
    15b8:	c5 34       	cpi	r28, 0x45	; 69
    15ba:	59 f4       	brne	.+22     	; 0x15d2 <turnRobot+0x156>
    15bc:	8c e4       	ldi	r24, 0x4C	; 76
    15be:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    15c2:	8c e4       	ldi	r24, 0x4C	; 76
    15c4:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    15c8:	0e 94 2b 0a 	call	0x1456	; 0x1456 <waitForTurn>
    15cc:	85 e4       	ldi	r24, 0x45	; 69
    15ce:	f8 01       	movw	r30, r16
    15d0:	84 83       	std	Z+4, r24	; 0x04
    15d2:	f8 01       	movw	r30, r16
    15d4:	84 81       	ldd	r24, Z+4	; 0x04
    15d6:	c8 13       	cpse	r28, r24
    15d8:	02 c0       	rjmp	.+4      	; 0x15de <turnRobot+0x162>
    15da:	e1 2c       	mov	r14, r1
    15dc:	f1 2c       	mov	r15, r1
    15de:	f1 e0       	ldi	r31, 0x01	; 1
    15e0:	ef 16       	cp	r14, r31
    15e2:	f1 04       	cpc	r15, r1
    15e4:	09 f4       	brne	.+2      	; 0x15e8 <turnRobot+0x16c>
    15e6:	55 cf       	rjmp	.-342    	; 0x1492 <turnRobot+0x16>
    15e8:	cf 91       	pop	r28
    15ea:	1f 91       	pop	r17
    15ec:	0f 91       	pop	r16
    15ee:	ff 90       	pop	r15
    15f0:	ef 90       	pop	r14
    15f2:	08 95       	ret

000015f4 <moveX>:
    15f4:	ef 92       	push	r14
    15f6:	ff 92       	push	r15
    15f8:	0f 93       	push	r16
    15fa:	1f 93       	push	r17
    15fc:	cf 93       	push	r28
    15fe:	df 93       	push	r29
    1600:	fb 01       	movw	r30, r22
    1602:	20 81       	ld	r18, Z
    1604:	31 81       	ldd	r19, Z+1	; 0x01
    1606:	28 17       	cp	r18, r24
    1608:	39 07       	cpc	r19, r25
    160a:	d9 f0       	breq	.+54     	; 0x1642 <moveX+0x4e>
    160c:	7a 01       	movw	r14, r20
    160e:	eb 01       	movw	r28, r22
    1610:	8c 01       	movw	r16, r24
    1612:	28 17       	cp	r18, r24
    1614:	39 07       	cpc	r19, r25
    1616:	54 f4       	brge	.+20     	; 0x162c <moveX+0x38>
    1618:	87 e5       	ldi	r24, 0x57	; 87
    161a:	0e 94 3e 0a 	call	0x147c	; 0x147c <turnRobot>
    161e:	88 81       	ld	r24, Y
    1620:	99 81       	ldd	r25, Y+1	; 0x01
    1622:	98 01       	movw	r18, r16
    1624:	28 1b       	sub	r18, r24
    1626:	39 0b       	sbc	r19, r25
    1628:	c9 01       	movw	r24, r18
    162a:	07 c0       	rjmp	.+14     	; 0x163a <moveX+0x46>
    162c:	85 e4       	ldi	r24, 0x45	; 69
    162e:	0e 94 3e 0a 	call	0x147c	; 0x147c <turnRobot>
    1632:	88 81       	ld	r24, Y
    1634:	99 81       	ldd	r25, Y+1	; 0x01
    1636:	80 1b       	sub	r24, r16
    1638:	91 0b       	sbc	r25, r17
    163a:	a7 01       	movw	r20, r14
    163c:	be 01       	movw	r22, r28
    163e:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <drive>
    1642:	df 91       	pop	r29
    1644:	cf 91       	pop	r28
    1646:	1f 91       	pop	r17
    1648:	0f 91       	pop	r16
    164a:	ff 90       	pop	r15
    164c:	ef 90       	pop	r14
    164e:	08 95       	ret

00001650 <moveY>:
    1650:	ef 92       	push	r14
    1652:	ff 92       	push	r15
    1654:	0f 93       	push	r16
    1656:	1f 93       	push	r17
    1658:	cf 93       	push	r28
    165a:	df 93       	push	r29
    165c:	fb 01       	movw	r30, r22
    165e:	22 81       	ldd	r18, Z+2	; 0x02
    1660:	33 81       	ldd	r19, Z+3	; 0x03
    1662:	28 17       	cp	r18, r24
    1664:	39 07       	cpc	r19, r25
    1666:	d9 f0       	breq	.+54     	; 0x169e <moveY+0x4e>
    1668:	7a 01       	movw	r14, r20
    166a:	eb 01       	movw	r28, r22
    166c:	8c 01       	movw	r16, r24
    166e:	28 17       	cp	r18, r24
    1670:	39 07       	cpc	r19, r25
    1672:	54 f4       	brge	.+20     	; 0x1688 <moveY+0x38>
    1674:	8e e4       	ldi	r24, 0x4E	; 78
    1676:	0e 94 3e 0a 	call	0x147c	; 0x147c <turnRobot>
    167a:	8a 81       	ldd	r24, Y+2	; 0x02
    167c:	9b 81       	ldd	r25, Y+3	; 0x03
    167e:	98 01       	movw	r18, r16
    1680:	28 1b       	sub	r18, r24
    1682:	39 0b       	sbc	r19, r25
    1684:	c9 01       	movw	r24, r18
    1686:	07 c0       	rjmp	.+14     	; 0x1696 <moveY+0x46>
    1688:	83 e5       	ldi	r24, 0x53	; 83
    168a:	0e 94 3e 0a 	call	0x147c	; 0x147c <turnRobot>
    168e:	8a 81       	ldd	r24, Y+2	; 0x02
    1690:	9b 81       	ldd	r25, Y+3	; 0x03
    1692:	80 1b       	sub	r24, r16
    1694:	91 0b       	sbc	r25, r17
    1696:	a7 01       	movw	r20, r14
    1698:	be 01       	movw	r22, r28
    169a:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <drive>
    169e:	df 91       	pop	r29
    16a0:	cf 91       	pop	r28
    16a2:	1f 91       	pop	r17
    16a4:	0f 91       	pop	r16
    16a6:	ff 90       	pop	r15
    16a8:	ef 90       	pop	r14
    16aa:	08 95       	ret

000016ac <warehouse>:
    16ac:	2f 92       	push	r2
    16ae:	3f 92       	push	r3
    16b0:	4f 92       	push	r4
    16b2:	5f 92       	push	r5
    16b4:	6f 92       	push	r6
    16b6:	7f 92       	push	r7
    16b8:	8f 92       	push	r8
    16ba:	9f 92       	push	r9
    16bc:	af 92       	push	r10
    16be:	bf 92       	push	r11
    16c0:	cf 92       	push	r12
    16c2:	df 92       	push	r13
    16c4:	ef 92       	push	r14
    16c6:	ff 92       	push	r15
    16c8:	0f 93       	push	r16
    16ca:	1f 93       	push	r17
    16cc:	cf 93       	push	r28
    16ce:	df 93       	push	r29
    16d0:	cd b7       	in	r28, 0x3d	; 61
    16d2:	de b7       	in	r29, 0x3e	; 62
    16d4:	e7 97       	sbiw	r28, 0x37	; 55
    16d6:	0f b6       	in	r0, 0x3f	; 63
    16d8:	f8 94       	cli
    16da:	de bf       	out	0x3e, r29	; 62
    16dc:	0f be       	out	0x3f, r0	; 63
    16de:	cd bf       	out	0x3d, r28	; 61
    16e0:	f8 2e       	mov	r15, r24
    16e2:	8b 01       	movw	r16, r22
    16e4:	87 e5       	ldi	r24, 0x57	; 87
    16e6:	8d 83       	std	Y+5, r24	; 0x05
    16e8:	1a 82       	std	Y+2, r1	; 0x02
    16ea:	19 82       	std	Y+1, r1	; 0x01
    16ec:	81 e0       	ldi	r24, 0x01	; 1
    16ee:	90 e0       	ldi	r25, 0x00	; 0
    16f0:	9c 83       	std	Y+4, r25	; 0x04
    16f2:	8b 83       	std	Y+3, r24	; 0x03
    16f4:	fb 01       	movw	r30, r22
    16f6:	e2 59       	subi	r30, 0x92	; 146
    16f8:	ff 4f       	sbci	r31, 0xFF	; 255
    16fa:	10 82       	st	Z, r1
    16fc:	31 96       	adiw	r30, 0x01	; 1
    16fe:	80 83       	st	Z, r24
    1700:	80 e0       	ldi	r24, 0x00	; 0
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	c1 2c       	mov	r12, r1
    1706:	d1 2c       	mov	r13, r1
    1708:	0c c0       	rjmp	.+24     	; 0x1722 <warehouse+0x76>
    170a:	f8 01       	movw	r30, r16
    170c:	e8 0f       	add	r30, r24
    170e:	f9 1f       	adc	r31, r25
    1710:	ee 5a       	subi	r30, 0xAE	; 174
    1712:	ff 4f       	sbci	r31, 0xFF	; 255
    1714:	20 81       	ld	r18, Z
    1716:	22 23       	and	r18, r18
    1718:	19 f0       	breq	.+6      	; 0x1720 <warehouse+0x74>
    171a:	2f ef       	ldi	r18, 0xFF	; 255
    171c:	c2 1a       	sub	r12, r18
    171e:	d2 0a       	sbc	r13, r18
    1720:	01 96       	adiw	r24, 0x01	; 1
    1722:	89 31       	cpi	r24, 0x19	; 25
    1724:	91 05       	cpc	r25, r1
    1726:	8c f3       	brlt	.-30     	; 0x170a <warehouse+0x5e>
    1728:	80 e0       	ldi	r24, 0x00	; 0
    172a:	90 e0       	ldi	r25, 0x00	; 0
    172c:	18 c0       	rjmp	.+48     	; 0x175e <warehouse+0xb2>
    172e:	d8 01       	movw	r26, r16
    1730:	a8 0f       	add	r26, r24
    1732:	b9 1f       	adc	r27, r25
    1734:	fd 01       	movw	r30, r26
    1736:	ee 5a       	subi	r30, 0xAE	; 174
    1738:	ff 4f       	sbci	r31, 0xFF	; 255
    173a:	20 81       	ld	r18, Z
    173c:	e6 e0       	ldi	r30, 0x06	; 6
    173e:	f0 e0       	ldi	r31, 0x00	; 0
    1740:	ec 0f       	add	r30, r28
    1742:	fd 1f       	adc	r31, r29
    1744:	e8 0f       	add	r30, r24
    1746:	f9 1f       	adc	r31, r25
    1748:	20 83       	st	Z, r18
    174a:	d9 96       	adiw	r26, 0x39	; 57
    174c:	2c 91       	ld	r18, X
    174e:	ef e1       	ldi	r30, 0x1F	; 31
    1750:	f0 e0       	ldi	r31, 0x00	; 0
    1752:	ec 0f       	add	r30, r28
    1754:	fd 1f       	adc	r31, r29
    1756:	e8 0f       	add	r30, r24
    1758:	f9 1f       	adc	r31, r25
    175a:	20 83       	st	Z, r18
    175c:	01 96       	adiw	r24, 0x01	; 1
    175e:	8c 15       	cp	r24, r12
    1760:	9d 05       	cpc	r25, r13
    1762:	2c f3       	brlt	.-54     	; 0x172e <warehouse+0x82>
    1764:	a6 01       	movw	r20, r12
    1766:	be 01       	movw	r22, r28
    1768:	61 5e       	subi	r22, 0xE1	; 225
    176a:	7f 4f       	sbci	r23, 0xFF	; 255
    176c:	ce 01       	movw	r24, r28
    176e:	06 96       	adiw	r24, 0x06	; 6
    1770:	0e 94 a0 09 	call	0x1340	; 0x1340 <bubbleSort>
    1774:	ff 20       	and	r15, r15
    1776:	09 f4       	brne	.+2      	; 0x177a <warehouse+0xce>
    1778:	8f c0       	rjmp	.+286    	; 0x1898 <warehouse+0x1ec>
    177a:	a5 c0       	rjmp	.+330    	; 0x18c6 <warehouse+0x21a>
    177c:	b1 01       	movw	r22, r2
    177e:	03 2c       	mov	r0, r3
    1780:	00 0c       	add	r0, r0
    1782:	88 0b       	sbc	r24, r24
    1784:	99 0b       	sbc	r25, r25
    1786:	0e 94 d7 0d 	call	0x1bae	; 0x1bae <__floatsisf>
    178a:	2b 01       	movw	r4, r22
    178c:	3c 01       	movw	r6, r24
    178e:	b6 01       	movw	r22, r12
    1790:	0d 2c       	mov	r0, r13
    1792:	00 0c       	add	r0, r0
    1794:	88 0b       	sbc	r24, r24
    1796:	99 0b       	sbc	r25, r25
    1798:	0e 94 d7 0d 	call	0x1bae	; 0x1bae <__floatsisf>
    179c:	4b 01       	movw	r8, r22
    179e:	5c 01       	movw	r10, r24
    17a0:	0f 2e       	mov	r0, r31
    17a2:	f6 e0       	ldi	r31, 0x06	; 6
    17a4:	ef 2e       	mov	r14, r31
    17a6:	f1 2c       	mov	r15, r1
    17a8:	f0 2d       	mov	r31, r0
    17aa:	ec 0e       	add	r14, r28
    17ac:	fd 1e       	adc	r15, r29
    17ae:	e2 0c       	add	r14, r2
    17b0:	f3 1c       	adc	r15, r3
    17b2:	f7 01       	movw	r30, r14
    17b4:	80 81       	ld	r24, Z
    17b6:	a8 01       	movw	r20, r16
    17b8:	be 01       	movw	r22, r28
    17ba:	6f 5f       	subi	r22, 0xFF	; 255
    17bc:	7f 4f       	sbci	r23, 0xFF	; 255
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <moveX>
    17c4:	f7 01       	movw	r30, r14
    17c6:	80 81       	ld	r24, Z
    17c8:	28 2f       	mov	r18, r24
    17ca:	30 e0       	ldi	r19, 0x00	; 0
    17cc:	3a 83       	std	Y+2, r19	; 0x02
    17ce:	29 83       	std	Y+1, r18	; 0x01
    17d0:	f8 01       	movw	r30, r16
    17d2:	e2 59       	subi	r30, 0x92	; 146
    17d4:	ff 4f       	sbci	r31, 0xFF	; 255
    17d6:	80 83       	st	Z, r24
    17d8:	0f 2e       	mov	r0, r31
    17da:	ff e1       	ldi	r31, 0x1F	; 31
    17dc:	ef 2e       	mov	r14, r31
    17de:	f1 2c       	mov	r15, r1
    17e0:	f0 2d       	mov	r31, r0
    17e2:	ec 0e       	add	r14, r28
    17e4:	fd 1e       	adc	r15, r29
    17e6:	e2 0c       	add	r14, r2
    17e8:	f3 1c       	adc	r15, r3
    17ea:	f7 01       	movw	r30, r14
    17ec:	80 81       	ld	r24, Z
    17ee:	a8 01       	movw	r20, r16
    17f0:	be 01       	movw	r22, r28
    17f2:	6f 5f       	subi	r22, 0xFF	; 255
    17f4:	7f 4f       	sbci	r23, 0xFF	; 255
    17f6:	90 e0       	ldi	r25, 0x00	; 0
    17f8:	0e 94 28 0b 	call	0x1650	; 0x1650 <moveY>
    17fc:	f7 01       	movw	r30, r14
    17fe:	80 81       	ld	r24, Z
    1800:	28 2f       	mov	r18, r24
    1802:	30 e0       	ldi	r19, 0x00	; 0
    1804:	3c 83       	std	Y+4, r19	; 0x04
    1806:	2b 83       	std	Y+3, r18	; 0x03
    1808:	f8 01       	movw	r30, r16
    180a:	e1 59       	subi	r30, 0x91	; 145
    180c:	ff 4f       	sbci	r31, 0xFF	; 255
    180e:	80 83       	st	Z, r24
    1810:	88 ee       	ldi	r24, 0xE8	; 232
    1812:	93 e0       	ldi	r25, 0x03	; 3
    1814:	0e 94 19 17 	call	0x2e32	; 0x2e32 <delay_ms>
    1818:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
    181c:	78 01       	movw	r14, r16
    181e:	fc e6       	ldi	r31, 0x6C	; 108
    1820:	ef 0e       	add	r14, r31
    1822:	f1 1c       	adc	r15, r1
    1824:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <__fixunssfsi>
    1828:	f7 01       	movw	r30, r14
    182a:	60 83       	st	Z, r22
    182c:	20 e0       	ldi	r18, 0x00	; 0
    182e:	30 e0       	ldi	r19, 0x00	; 0
    1830:	40 e8       	ldi	r20, 0x80	; 128
    1832:	5f e3       	ldi	r21, 0x3F	; 63
    1834:	c3 01       	movw	r24, r6
    1836:	b2 01       	movw	r22, r4
    1838:	0e 94 c1 0c 	call	0x1982	; 0x1982 <__addsf3>
    183c:	a5 01       	movw	r20, r10
    183e:	94 01       	movw	r18, r8
    1840:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <__divsf3>
    1844:	20 e0       	ldi	r18, 0x00	; 0
    1846:	30 e0       	ldi	r19, 0x00	; 0
    1848:	48 ec       	ldi	r20, 0xC8	; 200
    184a:	52 e4       	ldi	r21, 0x42	; 66
    184c:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <__mulsf3>
    1850:	4b 01       	movw	r8, r22
    1852:	5c 01       	movw	r10, r24
    1854:	78 01       	movw	r14, r16
    1856:	fd e6       	ldi	r31, 0x6D	; 109
    1858:	ef 0e       	add	r14, r31
    185a:	f1 1c       	adc	r15, r1
    185c:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <__fixunssfsi>
    1860:	f7 01       	movw	r30, r14
    1862:	60 83       	st	Z, r22
    1864:	34 96       	adiw	r30, 0x04	; 4
    1866:	01 90       	ld	r0, Z+
    1868:	f0 81       	ld	r31, Z
    186a:	e0 2d       	mov	r30, r0
    186c:	c8 01       	movw	r24, r16
    186e:	09 95       	icall
    1870:	0e 94 f7 02 	call	0x5ee	; 0x5ee <batteryPercentage>
    1874:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <__fixsfsi>
    1878:	2b 01       	movw	r4, r22
    187a:	3c 01       	movw	r6, r24
    187c:	c5 01       	movw	r24, r10
    187e:	b4 01       	movw	r22, r8
    1880:	0e 94 9f 0d 	call	0x1b3e	; 0x1b3e <__fixsfsi>
    1884:	dc 01       	movw	r26, r24
    1886:	cb 01       	movw	r24, r22
    1888:	42 e0       	ldi	r20, 0x02	; 2
    188a:	b2 01       	movw	r22, r4
    188c:	0e 94 19 03 	call	0x632	; 0x632 <updateDisplay>
    1890:	ff ef       	ldi	r31, 0xFF	; 255
    1892:	2f 1a       	sub	r2, r31
    1894:	3f 0a       	sbc	r3, r31
    1896:	02 c0       	rjmp	.+4      	; 0x189c <warehouse+0x1f0>
    1898:	21 2c       	mov	r2, r1
    189a:	31 2c       	mov	r3, r1
    189c:	2c 14       	cp	r2, r12
    189e:	3d 04       	cpc	r3, r13
    18a0:	0c f4       	brge	.+2      	; 0x18a4 <warehouse+0x1f8>
    18a2:	6c cf       	rjmp	.-296    	; 0x177c <warehouse+0xd0>
    18a4:	a8 01       	movw	r20, r16
    18a6:	be 01       	movw	r22, r28
    18a8:	6f 5f       	subi	r22, 0xFF	; 255
    18aa:	7f 4f       	sbci	r23, 0xFF	; 255
    18ac:	81 e0       	ldi	r24, 0x01	; 1
    18ae:	90 e0       	ldi	r25, 0x00	; 0
    18b0:	0e 94 28 0b 	call	0x1650	; 0x1650 <moveY>
    18b4:	a8 01       	movw	r20, r16
    18b6:	be 01       	movw	r22, r28
    18b8:	6f 5f       	subi	r22, 0xFF	; 255
    18ba:	7f 4f       	sbci	r23, 0xFF	; 255
    18bc:	81 e0       	ldi	r24, 0x01	; 1
    18be:	90 e0       	ldi	r25, 0x00	; 0
    18c0:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <moveX>
    18c4:	44 c0       	rjmp	.+136    	; 0x194e <warehouse+0x2a2>
    18c6:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <charged.2338>
    18ca:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <charged.2338+0x1>
    18ce:	89 2b       	or	r24, r25
    18d0:	29 f5       	brne	.+74     	; 0x191c <warehouse+0x270>
    18d2:	a8 01       	movw	r20, r16
    18d4:	be 01       	movw	r22, r28
    18d6:	6f 5f       	subi	r22, 0xFF	; 255
    18d8:	7f 4f       	sbci	r23, 0xFF	; 255
    18da:	81 e0       	ldi	r24, 0x01	; 1
    18dc:	90 e0       	ldi	r25, 0x00	; 0
    18de:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <drive>
    18e2:	82 e5       	ldi	r24, 0x52	; 82
    18e4:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    18e8:	a8 01       	movw	r20, r16
    18ea:	be 01       	movw	r22, r28
    18ec:	6f 5f       	subi	r22, 0xFF	; 255
    18ee:	7f 4f       	sbci	r23, 0xFF	; 255
    18f0:	83 e0       	ldi	r24, 0x03	; 3
    18f2:	90 e0       	ldi	r25, 0x00	; 0
    18f4:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <drive>
    18f8:	82 e5       	ldi	r24, 0x52	; 82
    18fa:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    18fe:	a8 01       	movw	r20, r16
    1900:	be 01       	movw	r22, r28
    1902:	6f 5f       	subi	r22, 0xFF	; 255
    1904:	7f 4f       	sbci	r23, 0xFF	; 255
    1906:	81 e0       	ldi	r24, 0x01	; 1
    1908:	90 e0       	ldi	r25, 0x00	; 0
    190a:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <drive>
    190e:	81 e0       	ldi	r24, 0x01	; 1
    1910:	90 e0       	ldi	r25, 0x00	; 0
    1912:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <charged.2338+0x1>
    1916:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <charged.2338>
    191a:	19 c0       	rjmp	.+50     	; 0x194e <warehouse+0x2a2>
    191c:	84 e5       	ldi	r24, 0x54	; 84
    191e:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1922:	a8 01       	movw	r20, r16
    1924:	be 01       	movw	r22, r28
    1926:	6f 5f       	subi	r22, 0xFF	; 255
    1928:	7f 4f       	sbci	r23, 0xFF	; 255
    192a:	81 e0       	ldi	r24, 0x01	; 1
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <drive>
    1932:	8c e4       	ldi	r24, 0x4C	; 76
    1934:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    1938:	a8 01       	movw	r20, r16
    193a:	be 01       	movw	r22, r28
    193c:	6f 5f       	subi	r22, 0xFF	; 255
    193e:	7f 4f       	sbci	r23, 0xFF	; 255
    1940:	83 e0       	ldi	r24, 0x03	; 3
    1942:	90 e0       	ldi	r25, 0x00	; 0
    1944:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <drive>
    1948:	8c e4       	ldi	r24, 0x4C	; 76
    194a:	0e 94 da 05 	call	0xbb4	; 0xbb4 <motorControl>
    194e:	e7 96       	adiw	r28, 0x37	; 55
    1950:	0f b6       	in	r0, 0x3f	; 63
    1952:	f8 94       	cli
    1954:	de bf       	out	0x3e, r29	; 62
    1956:	0f be       	out	0x3f, r0	; 63
    1958:	cd bf       	out	0x3d, r28	; 61
    195a:	df 91       	pop	r29
    195c:	cf 91       	pop	r28
    195e:	1f 91       	pop	r17
    1960:	0f 91       	pop	r16
    1962:	ff 90       	pop	r15
    1964:	ef 90       	pop	r14
    1966:	df 90       	pop	r13
    1968:	cf 90       	pop	r12
    196a:	bf 90       	pop	r11
    196c:	af 90       	pop	r10
    196e:	9f 90       	pop	r9
    1970:	8f 90       	pop	r8
    1972:	7f 90       	pop	r7
    1974:	6f 90       	pop	r6
    1976:	5f 90       	pop	r5
    1978:	4f 90       	pop	r4
    197a:	3f 90       	pop	r3
    197c:	2f 90       	pop	r2
    197e:	08 95       	ret

00001980 <__subsf3>:
    1980:	50 58       	subi	r21, 0x80	; 128

00001982 <__addsf3>:
    1982:	bb 27       	eor	r27, r27
    1984:	aa 27       	eor	r26, r26
    1986:	0e 94 d8 0c 	call	0x19b0	; 0x19b0 <__addsf3x>
    198a:	0c 94 29 0e 	jmp	0x1c52	; 0x1c52 <__fp_round>
    198e:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <__fp_pscA>
    1992:	38 f0       	brcs	.+14     	; 0x19a2 <__addsf3+0x20>
    1994:	0e 94 22 0e 	call	0x1c44	; 0x1c44 <__fp_pscB>
    1998:	20 f0       	brcs	.+8      	; 0x19a2 <__addsf3+0x20>
    199a:	39 f4       	brne	.+14     	; 0x19aa <__addsf3+0x28>
    199c:	9f 3f       	cpi	r25, 0xFF	; 255
    199e:	19 f4       	brne	.+6      	; 0x19a6 <__addsf3+0x24>
    19a0:	26 f4       	brtc	.+8      	; 0x19aa <__addsf3+0x28>
    19a2:	0c 94 18 0e 	jmp	0x1c30	; 0x1c30 <__fp_nan>
    19a6:	0e f4       	brtc	.+2      	; 0x19aa <__addsf3+0x28>
    19a8:	e0 95       	com	r30
    19aa:	e7 fb       	bst	r30, 7
    19ac:	0c 94 12 0e 	jmp	0x1c24	; 0x1c24 <__fp_inf>

000019b0 <__addsf3x>:
    19b0:	e9 2f       	mov	r30, r25
    19b2:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fp_split3>
    19b6:	58 f3       	brcs	.-42     	; 0x198e <__addsf3+0xc>
    19b8:	ba 17       	cp	r27, r26
    19ba:	62 07       	cpc	r22, r18
    19bc:	73 07       	cpc	r23, r19
    19be:	84 07       	cpc	r24, r20
    19c0:	95 07       	cpc	r25, r21
    19c2:	20 f0       	brcs	.+8      	; 0x19cc <__addsf3x+0x1c>
    19c4:	79 f4       	brne	.+30     	; 0x19e4 <__addsf3x+0x34>
    19c6:	a6 f5       	brtc	.+104    	; 0x1a30 <__addsf3x+0x80>
    19c8:	0c 94 5c 0e 	jmp	0x1cb8	; 0x1cb8 <__fp_zero>
    19cc:	0e f4       	brtc	.+2      	; 0x19d0 <__addsf3x+0x20>
    19ce:	e0 95       	com	r30
    19d0:	0b 2e       	mov	r0, r27
    19d2:	ba 2f       	mov	r27, r26
    19d4:	a0 2d       	mov	r26, r0
    19d6:	0b 01       	movw	r0, r22
    19d8:	b9 01       	movw	r22, r18
    19da:	90 01       	movw	r18, r0
    19dc:	0c 01       	movw	r0, r24
    19de:	ca 01       	movw	r24, r20
    19e0:	a0 01       	movw	r20, r0
    19e2:	11 24       	eor	r1, r1
    19e4:	ff 27       	eor	r31, r31
    19e6:	59 1b       	sub	r21, r25
    19e8:	99 f0       	breq	.+38     	; 0x1a10 <__addsf3x+0x60>
    19ea:	59 3f       	cpi	r21, 0xF9	; 249
    19ec:	50 f4       	brcc	.+20     	; 0x1a02 <__addsf3x+0x52>
    19ee:	50 3e       	cpi	r21, 0xE0	; 224
    19f0:	68 f1       	brcs	.+90     	; 0x1a4c <__addsf3x+0x9c>
    19f2:	1a 16       	cp	r1, r26
    19f4:	f0 40       	sbci	r31, 0x00	; 0
    19f6:	a2 2f       	mov	r26, r18
    19f8:	23 2f       	mov	r18, r19
    19fa:	34 2f       	mov	r19, r20
    19fc:	44 27       	eor	r20, r20
    19fe:	58 5f       	subi	r21, 0xF8	; 248
    1a00:	f3 cf       	rjmp	.-26     	; 0x19e8 <__addsf3x+0x38>
    1a02:	46 95       	lsr	r20
    1a04:	37 95       	ror	r19
    1a06:	27 95       	ror	r18
    1a08:	a7 95       	ror	r26
    1a0a:	f0 40       	sbci	r31, 0x00	; 0
    1a0c:	53 95       	inc	r21
    1a0e:	c9 f7       	brne	.-14     	; 0x1a02 <__addsf3x+0x52>
    1a10:	7e f4       	brtc	.+30     	; 0x1a30 <__addsf3x+0x80>
    1a12:	1f 16       	cp	r1, r31
    1a14:	ba 0b       	sbc	r27, r26
    1a16:	62 0b       	sbc	r22, r18
    1a18:	73 0b       	sbc	r23, r19
    1a1a:	84 0b       	sbc	r24, r20
    1a1c:	ba f0       	brmi	.+46     	; 0x1a4c <__addsf3x+0x9c>
    1a1e:	91 50       	subi	r25, 0x01	; 1
    1a20:	a1 f0       	breq	.+40     	; 0x1a4a <__addsf3x+0x9a>
    1a22:	ff 0f       	add	r31, r31
    1a24:	bb 1f       	adc	r27, r27
    1a26:	66 1f       	adc	r22, r22
    1a28:	77 1f       	adc	r23, r23
    1a2a:	88 1f       	adc	r24, r24
    1a2c:	c2 f7       	brpl	.-16     	; 0x1a1e <__addsf3x+0x6e>
    1a2e:	0e c0       	rjmp	.+28     	; 0x1a4c <__addsf3x+0x9c>
    1a30:	ba 0f       	add	r27, r26
    1a32:	62 1f       	adc	r22, r18
    1a34:	73 1f       	adc	r23, r19
    1a36:	84 1f       	adc	r24, r20
    1a38:	48 f4       	brcc	.+18     	; 0x1a4c <__addsf3x+0x9c>
    1a3a:	87 95       	ror	r24
    1a3c:	77 95       	ror	r23
    1a3e:	67 95       	ror	r22
    1a40:	b7 95       	ror	r27
    1a42:	f7 95       	ror	r31
    1a44:	9e 3f       	cpi	r25, 0xFE	; 254
    1a46:	08 f0       	brcs	.+2      	; 0x1a4a <__addsf3x+0x9a>
    1a48:	b0 cf       	rjmp	.-160    	; 0x19aa <__addsf3+0x28>
    1a4a:	93 95       	inc	r25
    1a4c:	88 0f       	add	r24, r24
    1a4e:	08 f0       	brcs	.+2      	; 0x1a52 <__addsf3x+0xa2>
    1a50:	99 27       	eor	r25, r25
    1a52:	ee 0f       	add	r30, r30
    1a54:	97 95       	ror	r25
    1a56:	87 95       	ror	r24
    1a58:	08 95       	ret

00001a5a <__divsf3>:
    1a5a:	0e 94 41 0d 	call	0x1a82	; 0x1a82 <__divsf3x>
    1a5e:	0c 94 29 0e 	jmp	0x1c52	; 0x1c52 <__fp_round>
    1a62:	0e 94 22 0e 	call	0x1c44	; 0x1c44 <__fp_pscB>
    1a66:	58 f0       	brcs	.+22     	; 0x1a7e <__divsf3+0x24>
    1a68:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <__fp_pscA>
    1a6c:	40 f0       	brcs	.+16     	; 0x1a7e <__divsf3+0x24>
    1a6e:	29 f4       	brne	.+10     	; 0x1a7a <__divsf3+0x20>
    1a70:	5f 3f       	cpi	r21, 0xFF	; 255
    1a72:	29 f0       	breq	.+10     	; 0x1a7e <__divsf3+0x24>
    1a74:	0c 94 12 0e 	jmp	0x1c24	; 0x1c24 <__fp_inf>
    1a78:	51 11       	cpse	r21, r1
    1a7a:	0c 94 5d 0e 	jmp	0x1cba	; 0x1cba <__fp_szero>
    1a7e:	0c 94 18 0e 	jmp	0x1c30	; 0x1c30 <__fp_nan>

00001a82 <__divsf3x>:
    1a82:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fp_split3>
    1a86:	68 f3       	brcs	.-38     	; 0x1a62 <__divsf3+0x8>

00001a88 <__divsf3_pse>:
    1a88:	99 23       	and	r25, r25
    1a8a:	b1 f3       	breq	.-20     	; 0x1a78 <__divsf3+0x1e>
    1a8c:	55 23       	and	r21, r21
    1a8e:	91 f3       	breq	.-28     	; 0x1a74 <__divsf3+0x1a>
    1a90:	95 1b       	sub	r25, r21
    1a92:	55 0b       	sbc	r21, r21
    1a94:	bb 27       	eor	r27, r27
    1a96:	aa 27       	eor	r26, r26
    1a98:	62 17       	cp	r22, r18
    1a9a:	73 07       	cpc	r23, r19
    1a9c:	84 07       	cpc	r24, r20
    1a9e:	38 f0       	brcs	.+14     	; 0x1aae <__divsf3_pse+0x26>
    1aa0:	9f 5f       	subi	r25, 0xFF	; 255
    1aa2:	5f 4f       	sbci	r21, 0xFF	; 255
    1aa4:	22 0f       	add	r18, r18
    1aa6:	33 1f       	adc	r19, r19
    1aa8:	44 1f       	adc	r20, r20
    1aaa:	aa 1f       	adc	r26, r26
    1aac:	a9 f3       	breq	.-22     	; 0x1a98 <__divsf3_pse+0x10>
    1aae:	35 d0       	rcall	.+106    	; 0x1b1a <__divsf3_pse+0x92>
    1ab0:	0e 2e       	mov	r0, r30
    1ab2:	3a f0       	brmi	.+14     	; 0x1ac2 <__divsf3_pse+0x3a>
    1ab4:	e0 e8       	ldi	r30, 0x80	; 128
    1ab6:	32 d0       	rcall	.+100    	; 0x1b1c <__divsf3_pse+0x94>
    1ab8:	91 50       	subi	r25, 0x01	; 1
    1aba:	50 40       	sbci	r21, 0x00	; 0
    1abc:	e6 95       	lsr	r30
    1abe:	00 1c       	adc	r0, r0
    1ac0:	ca f7       	brpl	.-14     	; 0x1ab4 <__divsf3_pse+0x2c>
    1ac2:	2b d0       	rcall	.+86     	; 0x1b1a <__divsf3_pse+0x92>
    1ac4:	fe 2f       	mov	r31, r30
    1ac6:	29 d0       	rcall	.+82     	; 0x1b1a <__divsf3_pse+0x92>
    1ac8:	66 0f       	add	r22, r22
    1aca:	77 1f       	adc	r23, r23
    1acc:	88 1f       	adc	r24, r24
    1ace:	bb 1f       	adc	r27, r27
    1ad0:	26 17       	cp	r18, r22
    1ad2:	37 07       	cpc	r19, r23
    1ad4:	48 07       	cpc	r20, r24
    1ad6:	ab 07       	cpc	r26, r27
    1ad8:	b0 e8       	ldi	r27, 0x80	; 128
    1ada:	09 f0       	breq	.+2      	; 0x1ade <__divsf3_pse+0x56>
    1adc:	bb 0b       	sbc	r27, r27
    1ade:	80 2d       	mov	r24, r0
    1ae0:	bf 01       	movw	r22, r30
    1ae2:	ff 27       	eor	r31, r31
    1ae4:	93 58       	subi	r25, 0x83	; 131
    1ae6:	5f 4f       	sbci	r21, 0xFF	; 255
    1ae8:	3a f0       	brmi	.+14     	; 0x1af8 <__divsf3_pse+0x70>
    1aea:	9e 3f       	cpi	r25, 0xFE	; 254
    1aec:	51 05       	cpc	r21, r1
    1aee:	78 f0       	brcs	.+30     	; 0x1b0e <__divsf3_pse+0x86>
    1af0:	0c 94 12 0e 	jmp	0x1c24	; 0x1c24 <__fp_inf>
    1af4:	0c 94 5d 0e 	jmp	0x1cba	; 0x1cba <__fp_szero>
    1af8:	5f 3f       	cpi	r21, 0xFF	; 255
    1afa:	e4 f3       	brlt	.-8      	; 0x1af4 <__divsf3_pse+0x6c>
    1afc:	98 3e       	cpi	r25, 0xE8	; 232
    1afe:	d4 f3       	brlt	.-12     	; 0x1af4 <__divsf3_pse+0x6c>
    1b00:	86 95       	lsr	r24
    1b02:	77 95       	ror	r23
    1b04:	67 95       	ror	r22
    1b06:	b7 95       	ror	r27
    1b08:	f7 95       	ror	r31
    1b0a:	9f 5f       	subi	r25, 0xFF	; 255
    1b0c:	c9 f7       	brne	.-14     	; 0x1b00 <__divsf3_pse+0x78>
    1b0e:	88 0f       	add	r24, r24
    1b10:	91 1d       	adc	r25, r1
    1b12:	96 95       	lsr	r25
    1b14:	87 95       	ror	r24
    1b16:	97 f9       	bld	r25, 7
    1b18:	08 95       	ret
    1b1a:	e1 e0       	ldi	r30, 0x01	; 1
    1b1c:	66 0f       	add	r22, r22
    1b1e:	77 1f       	adc	r23, r23
    1b20:	88 1f       	adc	r24, r24
    1b22:	bb 1f       	adc	r27, r27
    1b24:	62 17       	cp	r22, r18
    1b26:	73 07       	cpc	r23, r19
    1b28:	84 07       	cpc	r24, r20
    1b2a:	ba 07       	cpc	r27, r26
    1b2c:	20 f0       	brcs	.+8      	; 0x1b36 <__divsf3_pse+0xae>
    1b2e:	62 1b       	sub	r22, r18
    1b30:	73 0b       	sbc	r23, r19
    1b32:	84 0b       	sbc	r24, r20
    1b34:	ba 0b       	sbc	r27, r26
    1b36:	ee 1f       	adc	r30, r30
    1b38:	88 f7       	brcc	.-30     	; 0x1b1c <__divsf3_pse+0x94>
    1b3a:	e0 95       	com	r30
    1b3c:	08 95       	ret

00001b3e <__fixsfsi>:
    1b3e:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <__fixunssfsi>
    1b42:	68 94       	set
    1b44:	b1 11       	cpse	r27, r1
    1b46:	0c 94 5d 0e 	jmp	0x1cba	; 0x1cba <__fp_szero>
    1b4a:	08 95       	ret

00001b4c <__fixunssfsi>:
    1b4c:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <__fp_splitA>
    1b50:	88 f0       	brcs	.+34     	; 0x1b74 <__fixunssfsi+0x28>
    1b52:	9f 57       	subi	r25, 0x7F	; 127
    1b54:	98 f0       	brcs	.+38     	; 0x1b7c <__fixunssfsi+0x30>
    1b56:	b9 2f       	mov	r27, r25
    1b58:	99 27       	eor	r25, r25
    1b5a:	b7 51       	subi	r27, 0x17	; 23
    1b5c:	b0 f0       	brcs	.+44     	; 0x1b8a <__fixunssfsi+0x3e>
    1b5e:	e1 f0       	breq	.+56     	; 0x1b98 <__fixunssfsi+0x4c>
    1b60:	66 0f       	add	r22, r22
    1b62:	77 1f       	adc	r23, r23
    1b64:	88 1f       	adc	r24, r24
    1b66:	99 1f       	adc	r25, r25
    1b68:	1a f0       	brmi	.+6      	; 0x1b70 <__fixunssfsi+0x24>
    1b6a:	ba 95       	dec	r27
    1b6c:	c9 f7       	brne	.-14     	; 0x1b60 <__fixunssfsi+0x14>
    1b6e:	14 c0       	rjmp	.+40     	; 0x1b98 <__fixunssfsi+0x4c>
    1b70:	b1 30       	cpi	r27, 0x01	; 1
    1b72:	91 f0       	breq	.+36     	; 0x1b98 <__fixunssfsi+0x4c>
    1b74:	0e 94 5c 0e 	call	0x1cb8	; 0x1cb8 <__fp_zero>
    1b78:	b1 e0       	ldi	r27, 0x01	; 1
    1b7a:	08 95       	ret
    1b7c:	0c 94 5c 0e 	jmp	0x1cb8	; 0x1cb8 <__fp_zero>
    1b80:	67 2f       	mov	r22, r23
    1b82:	78 2f       	mov	r23, r24
    1b84:	88 27       	eor	r24, r24
    1b86:	b8 5f       	subi	r27, 0xF8	; 248
    1b88:	39 f0       	breq	.+14     	; 0x1b98 <__fixunssfsi+0x4c>
    1b8a:	b9 3f       	cpi	r27, 0xF9	; 249
    1b8c:	cc f3       	brlt	.-14     	; 0x1b80 <__fixunssfsi+0x34>
    1b8e:	86 95       	lsr	r24
    1b90:	77 95       	ror	r23
    1b92:	67 95       	ror	r22
    1b94:	b3 95       	inc	r27
    1b96:	d9 f7       	brne	.-10     	; 0x1b8e <__fixunssfsi+0x42>
    1b98:	3e f4       	brtc	.+14     	; 0x1ba8 <__fixunssfsi+0x5c>
    1b9a:	90 95       	com	r25
    1b9c:	80 95       	com	r24
    1b9e:	70 95       	com	r23
    1ba0:	61 95       	neg	r22
    1ba2:	7f 4f       	sbci	r23, 0xFF	; 255
    1ba4:	8f 4f       	sbci	r24, 0xFF	; 255
    1ba6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ba8:	08 95       	ret

00001baa <__floatunsisf>:
    1baa:	e8 94       	clt
    1bac:	09 c0       	rjmp	.+18     	; 0x1bc0 <__floatsisf+0x12>

00001bae <__floatsisf>:
    1bae:	97 fb       	bst	r25, 7
    1bb0:	3e f4       	brtc	.+14     	; 0x1bc0 <__floatsisf+0x12>
    1bb2:	90 95       	com	r25
    1bb4:	80 95       	com	r24
    1bb6:	70 95       	com	r23
    1bb8:	61 95       	neg	r22
    1bba:	7f 4f       	sbci	r23, 0xFF	; 255
    1bbc:	8f 4f       	sbci	r24, 0xFF	; 255
    1bbe:	9f 4f       	sbci	r25, 0xFF	; 255
    1bc0:	99 23       	and	r25, r25
    1bc2:	a9 f0       	breq	.+42     	; 0x1bee <__floatsisf+0x40>
    1bc4:	f9 2f       	mov	r31, r25
    1bc6:	96 e9       	ldi	r25, 0x96	; 150
    1bc8:	bb 27       	eor	r27, r27
    1bca:	93 95       	inc	r25
    1bcc:	f6 95       	lsr	r31
    1bce:	87 95       	ror	r24
    1bd0:	77 95       	ror	r23
    1bd2:	67 95       	ror	r22
    1bd4:	b7 95       	ror	r27
    1bd6:	f1 11       	cpse	r31, r1
    1bd8:	f8 cf       	rjmp	.-16     	; 0x1bca <__floatsisf+0x1c>
    1bda:	fa f4       	brpl	.+62     	; 0x1c1a <__floatsisf+0x6c>
    1bdc:	bb 0f       	add	r27, r27
    1bde:	11 f4       	brne	.+4      	; 0x1be4 <__floatsisf+0x36>
    1be0:	60 ff       	sbrs	r22, 0
    1be2:	1b c0       	rjmp	.+54     	; 0x1c1a <__floatsisf+0x6c>
    1be4:	6f 5f       	subi	r22, 0xFF	; 255
    1be6:	7f 4f       	sbci	r23, 0xFF	; 255
    1be8:	8f 4f       	sbci	r24, 0xFF	; 255
    1bea:	9f 4f       	sbci	r25, 0xFF	; 255
    1bec:	16 c0       	rjmp	.+44     	; 0x1c1a <__floatsisf+0x6c>
    1bee:	88 23       	and	r24, r24
    1bf0:	11 f0       	breq	.+4      	; 0x1bf6 <__floatsisf+0x48>
    1bf2:	96 e9       	ldi	r25, 0x96	; 150
    1bf4:	11 c0       	rjmp	.+34     	; 0x1c18 <__floatsisf+0x6a>
    1bf6:	77 23       	and	r23, r23
    1bf8:	21 f0       	breq	.+8      	; 0x1c02 <__floatsisf+0x54>
    1bfa:	9e e8       	ldi	r25, 0x8E	; 142
    1bfc:	87 2f       	mov	r24, r23
    1bfe:	76 2f       	mov	r23, r22
    1c00:	05 c0       	rjmp	.+10     	; 0x1c0c <__floatsisf+0x5e>
    1c02:	66 23       	and	r22, r22
    1c04:	71 f0       	breq	.+28     	; 0x1c22 <__floatsisf+0x74>
    1c06:	96 e8       	ldi	r25, 0x86	; 134
    1c08:	86 2f       	mov	r24, r22
    1c0a:	70 e0       	ldi	r23, 0x00	; 0
    1c0c:	60 e0       	ldi	r22, 0x00	; 0
    1c0e:	2a f0       	brmi	.+10     	; 0x1c1a <__floatsisf+0x6c>
    1c10:	9a 95       	dec	r25
    1c12:	66 0f       	add	r22, r22
    1c14:	77 1f       	adc	r23, r23
    1c16:	88 1f       	adc	r24, r24
    1c18:	da f7       	brpl	.-10     	; 0x1c10 <__floatsisf+0x62>
    1c1a:	88 0f       	add	r24, r24
    1c1c:	96 95       	lsr	r25
    1c1e:	87 95       	ror	r24
    1c20:	97 f9       	bld	r25, 7
    1c22:	08 95       	ret

00001c24 <__fp_inf>:
    1c24:	97 f9       	bld	r25, 7
    1c26:	9f 67       	ori	r25, 0x7F	; 127
    1c28:	80 e8       	ldi	r24, 0x80	; 128
    1c2a:	70 e0       	ldi	r23, 0x00	; 0
    1c2c:	60 e0       	ldi	r22, 0x00	; 0
    1c2e:	08 95       	ret

00001c30 <__fp_nan>:
    1c30:	9f ef       	ldi	r25, 0xFF	; 255
    1c32:	80 ec       	ldi	r24, 0xC0	; 192
    1c34:	08 95       	ret

00001c36 <__fp_pscA>:
    1c36:	00 24       	eor	r0, r0
    1c38:	0a 94       	dec	r0
    1c3a:	16 16       	cp	r1, r22
    1c3c:	17 06       	cpc	r1, r23
    1c3e:	18 06       	cpc	r1, r24
    1c40:	09 06       	cpc	r0, r25
    1c42:	08 95       	ret

00001c44 <__fp_pscB>:
    1c44:	00 24       	eor	r0, r0
    1c46:	0a 94       	dec	r0
    1c48:	12 16       	cp	r1, r18
    1c4a:	13 06       	cpc	r1, r19
    1c4c:	14 06       	cpc	r1, r20
    1c4e:	05 06       	cpc	r0, r21
    1c50:	08 95       	ret

00001c52 <__fp_round>:
    1c52:	09 2e       	mov	r0, r25
    1c54:	03 94       	inc	r0
    1c56:	00 0c       	add	r0, r0
    1c58:	11 f4       	brne	.+4      	; 0x1c5e <__fp_round+0xc>
    1c5a:	88 23       	and	r24, r24
    1c5c:	52 f0       	brmi	.+20     	; 0x1c72 <__fp_round+0x20>
    1c5e:	bb 0f       	add	r27, r27
    1c60:	40 f4       	brcc	.+16     	; 0x1c72 <__fp_round+0x20>
    1c62:	bf 2b       	or	r27, r31
    1c64:	11 f4       	brne	.+4      	; 0x1c6a <__fp_round+0x18>
    1c66:	60 ff       	sbrs	r22, 0
    1c68:	04 c0       	rjmp	.+8      	; 0x1c72 <__fp_round+0x20>
    1c6a:	6f 5f       	subi	r22, 0xFF	; 255
    1c6c:	7f 4f       	sbci	r23, 0xFF	; 255
    1c6e:	8f 4f       	sbci	r24, 0xFF	; 255
    1c70:	9f 4f       	sbci	r25, 0xFF	; 255
    1c72:	08 95       	ret

00001c74 <__fp_split3>:
    1c74:	57 fd       	sbrc	r21, 7
    1c76:	90 58       	subi	r25, 0x80	; 128
    1c78:	44 0f       	add	r20, r20
    1c7a:	55 1f       	adc	r21, r21
    1c7c:	59 f0       	breq	.+22     	; 0x1c94 <__fp_splitA+0x10>
    1c7e:	5f 3f       	cpi	r21, 0xFF	; 255
    1c80:	71 f0       	breq	.+28     	; 0x1c9e <__fp_splitA+0x1a>
    1c82:	47 95       	ror	r20

00001c84 <__fp_splitA>:
    1c84:	88 0f       	add	r24, r24
    1c86:	97 fb       	bst	r25, 7
    1c88:	99 1f       	adc	r25, r25
    1c8a:	61 f0       	breq	.+24     	; 0x1ca4 <__fp_splitA+0x20>
    1c8c:	9f 3f       	cpi	r25, 0xFF	; 255
    1c8e:	79 f0       	breq	.+30     	; 0x1cae <__fp_splitA+0x2a>
    1c90:	87 95       	ror	r24
    1c92:	08 95       	ret
    1c94:	12 16       	cp	r1, r18
    1c96:	13 06       	cpc	r1, r19
    1c98:	14 06       	cpc	r1, r20
    1c9a:	55 1f       	adc	r21, r21
    1c9c:	f2 cf       	rjmp	.-28     	; 0x1c82 <__fp_split3+0xe>
    1c9e:	46 95       	lsr	r20
    1ca0:	f1 df       	rcall	.-30     	; 0x1c84 <__fp_splitA>
    1ca2:	08 c0       	rjmp	.+16     	; 0x1cb4 <__fp_splitA+0x30>
    1ca4:	16 16       	cp	r1, r22
    1ca6:	17 06       	cpc	r1, r23
    1ca8:	18 06       	cpc	r1, r24
    1caa:	99 1f       	adc	r25, r25
    1cac:	f1 cf       	rjmp	.-30     	; 0x1c90 <__fp_splitA+0xc>
    1cae:	86 95       	lsr	r24
    1cb0:	71 05       	cpc	r23, r1
    1cb2:	61 05       	cpc	r22, r1
    1cb4:	08 94       	sec
    1cb6:	08 95       	ret

00001cb8 <__fp_zero>:
    1cb8:	e8 94       	clt

00001cba <__fp_szero>:
    1cba:	bb 27       	eor	r27, r27
    1cbc:	66 27       	eor	r22, r22
    1cbe:	77 27       	eor	r23, r23
    1cc0:	cb 01       	movw	r24, r22
    1cc2:	97 f9       	bld	r25, 7
    1cc4:	08 95       	ret

00001cc6 <__mulsf3>:
    1cc6:	0e 94 76 0e 	call	0x1cec	; 0x1cec <__mulsf3x>
    1cca:	0c 94 29 0e 	jmp	0x1c52	; 0x1c52 <__fp_round>
    1cce:	0e 94 1b 0e 	call	0x1c36	; 0x1c36 <__fp_pscA>
    1cd2:	38 f0       	brcs	.+14     	; 0x1ce2 <__mulsf3+0x1c>
    1cd4:	0e 94 22 0e 	call	0x1c44	; 0x1c44 <__fp_pscB>
    1cd8:	20 f0       	brcs	.+8      	; 0x1ce2 <__mulsf3+0x1c>
    1cda:	95 23       	and	r25, r21
    1cdc:	11 f0       	breq	.+4      	; 0x1ce2 <__mulsf3+0x1c>
    1cde:	0c 94 12 0e 	jmp	0x1c24	; 0x1c24 <__fp_inf>
    1ce2:	0c 94 18 0e 	jmp	0x1c30	; 0x1c30 <__fp_nan>
    1ce6:	11 24       	eor	r1, r1
    1ce8:	0c 94 5d 0e 	jmp	0x1cba	; 0x1cba <__fp_szero>

00001cec <__mulsf3x>:
    1cec:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fp_split3>
    1cf0:	70 f3       	brcs	.-36     	; 0x1cce <__mulsf3+0x8>

00001cf2 <__mulsf3_pse>:
    1cf2:	95 9f       	mul	r25, r21
    1cf4:	c1 f3       	breq	.-16     	; 0x1ce6 <__mulsf3+0x20>
    1cf6:	95 0f       	add	r25, r21
    1cf8:	50 e0       	ldi	r21, 0x00	; 0
    1cfa:	55 1f       	adc	r21, r21
    1cfc:	62 9f       	mul	r22, r18
    1cfe:	f0 01       	movw	r30, r0
    1d00:	72 9f       	mul	r23, r18
    1d02:	bb 27       	eor	r27, r27
    1d04:	f0 0d       	add	r31, r0
    1d06:	b1 1d       	adc	r27, r1
    1d08:	63 9f       	mul	r22, r19
    1d0a:	aa 27       	eor	r26, r26
    1d0c:	f0 0d       	add	r31, r0
    1d0e:	b1 1d       	adc	r27, r1
    1d10:	aa 1f       	adc	r26, r26
    1d12:	64 9f       	mul	r22, r20
    1d14:	66 27       	eor	r22, r22
    1d16:	b0 0d       	add	r27, r0
    1d18:	a1 1d       	adc	r26, r1
    1d1a:	66 1f       	adc	r22, r22
    1d1c:	82 9f       	mul	r24, r18
    1d1e:	22 27       	eor	r18, r18
    1d20:	b0 0d       	add	r27, r0
    1d22:	a1 1d       	adc	r26, r1
    1d24:	62 1f       	adc	r22, r18
    1d26:	73 9f       	mul	r23, r19
    1d28:	b0 0d       	add	r27, r0
    1d2a:	a1 1d       	adc	r26, r1
    1d2c:	62 1f       	adc	r22, r18
    1d2e:	83 9f       	mul	r24, r19
    1d30:	a0 0d       	add	r26, r0
    1d32:	61 1d       	adc	r22, r1
    1d34:	22 1f       	adc	r18, r18
    1d36:	74 9f       	mul	r23, r20
    1d38:	33 27       	eor	r19, r19
    1d3a:	a0 0d       	add	r26, r0
    1d3c:	61 1d       	adc	r22, r1
    1d3e:	23 1f       	adc	r18, r19
    1d40:	84 9f       	mul	r24, r20
    1d42:	60 0d       	add	r22, r0
    1d44:	21 1d       	adc	r18, r1
    1d46:	82 2f       	mov	r24, r18
    1d48:	76 2f       	mov	r23, r22
    1d4a:	6a 2f       	mov	r22, r26
    1d4c:	11 24       	eor	r1, r1
    1d4e:	9f 57       	subi	r25, 0x7F	; 127
    1d50:	50 40       	sbci	r21, 0x00	; 0
    1d52:	9a f0       	brmi	.+38     	; 0x1d7a <__mulsf3_pse+0x88>
    1d54:	f1 f0       	breq	.+60     	; 0x1d92 <__mulsf3_pse+0xa0>
    1d56:	88 23       	and	r24, r24
    1d58:	4a f0       	brmi	.+18     	; 0x1d6c <__mulsf3_pse+0x7a>
    1d5a:	ee 0f       	add	r30, r30
    1d5c:	ff 1f       	adc	r31, r31
    1d5e:	bb 1f       	adc	r27, r27
    1d60:	66 1f       	adc	r22, r22
    1d62:	77 1f       	adc	r23, r23
    1d64:	88 1f       	adc	r24, r24
    1d66:	91 50       	subi	r25, 0x01	; 1
    1d68:	50 40       	sbci	r21, 0x00	; 0
    1d6a:	a9 f7       	brne	.-22     	; 0x1d56 <__mulsf3_pse+0x64>
    1d6c:	9e 3f       	cpi	r25, 0xFE	; 254
    1d6e:	51 05       	cpc	r21, r1
    1d70:	80 f0       	brcs	.+32     	; 0x1d92 <__mulsf3_pse+0xa0>
    1d72:	0c 94 12 0e 	jmp	0x1c24	; 0x1c24 <__fp_inf>
    1d76:	0c 94 5d 0e 	jmp	0x1cba	; 0x1cba <__fp_szero>
    1d7a:	5f 3f       	cpi	r21, 0xFF	; 255
    1d7c:	e4 f3       	brlt	.-8      	; 0x1d76 <__mulsf3_pse+0x84>
    1d7e:	98 3e       	cpi	r25, 0xE8	; 232
    1d80:	d4 f3       	brlt	.-12     	; 0x1d76 <__mulsf3_pse+0x84>
    1d82:	86 95       	lsr	r24
    1d84:	77 95       	ror	r23
    1d86:	67 95       	ror	r22
    1d88:	b7 95       	ror	r27
    1d8a:	f7 95       	ror	r31
    1d8c:	e7 95       	ror	r30
    1d8e:	9f 5f       	subi	r25, 0xFF	; 255
    1d90:	c1 f7       	brne	.-16     	; 0x1d82 <__mulsf3_pse+0x90>
    1d92:	fe 2b       	or	r31, r30
    1d94:	88 0f       	add	r24, r24
    1d96:	91 1d       	adc	r25, r1
    1d98:	96 95       	lsr	r25
    1d9a:	87 95       	ror	r24
    1d9c:	97 f9       	bld	r25, 7
    1d9e:	08 95       	ret

00001da0 <_ZN15OrangutanAnalog7setModeEh.part.0>:
    1da0:	ec e7       	ldi	r30, 0x7C	; 124
    1da2:	f0 e0       	ldi	r31, 0x00	; 0
    1da4:	80 81       	ld	r24, Z
    1da6:	8f 7d       	andi	r24, 0xDF	; 223
    1da8:	80 83       	st	Z, r24
    1daa:	08 95       	ret

00001dac <_ZN15OrangutanAnalog7setModeEh>:
    1dac:	81 11       	cpse	r24, r1
    1dae:	03 c0       	rjmp	.+6      	; 0x1db6 <_ZN15OrangutanAnalog7setModeEh+0xa>
    1db0:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <_ZN15OrangutanAnalog7setModeEh.part.0>
    1db4:	08 95       	ret
    1db6:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1dba:	80 62       	ori	r24, 0x20	; 32
    1dbc:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1dc0:	08 95       	ret

00001dc2 <_ZN15OrangutanAnalog7getModeEv>:
    1dc2:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1dc6:	85 fb       	bst	r24, 5
    1dc8:	88 27       	eor	r24, r24
    1dca:	80 f9       	bld	r24, 0
    1dcc:	08 95       	ret

00001dce <_ZN15OrangutanAnalog16conversionResultEv>:
    1dce:	0e 94 e1 0e 	call	0x1dc2	; 0x1dc2 <_ZN15OrangutanAnalog7getModeEv>
    1dd2:	88 23       	and	r24, r24
    1dd4:	21 f0       	breq	.+8      	; 0x1dde <_ZN15OrangutanAnalog16conversionResultEv+0x10>
    1dd6:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1dda:	90 e0       	ldi	r25, 0x00	; 0
    1ddc:	08 95       	ret
    1dde:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    1de2:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1de6:	08 95       	ret

00001de8 <_ZN15OrangutanAnalog15startConversionEhh>:
    1de8:	80 32       	cpi	r24, 0x20	; 32
    1dea:	a0 f4       	brcc	.+40     	; 0x1e14 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
    1dec:	97 e8       	ldi	r25, 0x87	; 135
    1dee:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1df2:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1df6:	66 23       	and	r22, r22
    1df8:	11 f0       	breq	.+4      	; 0x1dfe <_ZN15OrangutanAnalog15startConversionEhh+0x16>
    1dfa:	90 6c       	ori	r25, 0xC0	; 192
    1dfc:	02 c0       	rjmp	.+4      	; 0x1e02 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
    1dfe:	9f 77       	andi	r25, 0x7F	; 127
    1e00:	90 64       	ori	r25, 0x40	; 64
    1e02:	90 7e       	andi	r25, 0xE0	; 224
    1e04:	98 2b       	or	r25, r24
    1e06:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1e0a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1e0e:	80 64       	ori	r24, 0x40	; 64
    1e10:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1e14:	08 95       	ret

00001e16 <_ZN15OrangutanAnalog4readEh>:
    1e16:	60 e0       	ldi	r22, 0x00	; 0
    1e18:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <_ZN15OrangutanAnalog15startConversionEhh>
    1e1c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1e20:	86 fd       	sbrc	r24, 6
    1e22:	fc cf       	rjmp	.-8      	; 0x1e1c <_ZN15OrangutanAnalog4readEh+0x6>
    1e24:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <_ZN15OrangutanAnalog16conversionResultEv>
    1e28:	08 95       	ret

00001e2a <analog_read>:
    1e2a:	0e 94 0b 0f 	call	0x1e16	; 0x1e16 <_ZN15OrangutanAnalog4readEh>
    1e2e:	08 95       	ret

00001e30 <_ZN15OrangutanAnalog11readAverageEhj>:
    1e30:	a0 e0       	ldi	r26, 0x00	; 0
    1e32:	b0 e0       	ldi	r27, 0x00	; 0
    1e34:	ee e1       	ldi	r30, 0x1E	; 30
    1e36:	ff e0       	ldi	r31, 0x0F	; 15
    1e38:	0c 94 65 1d 	jmp	0x3aca	; 0x3aca <__prologue_saves__+0x14>
    1e3c:	eb 01       	movw	r28, r22
    1e3e:	60 e0       	ldi	r22, 0x00	; 0
    1e40:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <_ZN15OrangutanAnalog15startConversionEhh>
    1e44:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1e48:	86 fd       	sbrc	r24, 6
    1e4a:	fc cf       	rjmp	.-8      	; 0x1e44 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
    1e4c:	8e 01       	movw	r16, r28
    1e4e:	c1 2c       	mov	r12, r1
    1e50:	d1 2c       	mov	r13, r1
    1e52:	76 01       	movw	r14, r12
    1e54:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1e58:	80 64       	ori	r24, 0x40	; 64
    1e5a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1e5e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1e62:	86 fd       	sbrc	r24, 6
    1e64:	fc cf       	rjmp	.-8      	; 0x1e5e <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
    1e66:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <_ZN15OrangutanAnalog16conversionResultEv>
    1e6a:	c8 0e       	add	r12, r24
    1e6c:	d9 1e       	adc	r13, r25
    1e6e:	e1 1c       	adc	r14, r1
    1e70:	f1 1c       	adc	r15, r1
    1e72:	01 50       	subi	r16, 0x01	; 1
    1e74:	11 09       	sbc	r17, r1
    1e76:	01 15       	cp	r16, r1
    1e78:	11 05       	cpc	r17, r1
    1e7a:	61 f7       	brne	.-40     	; 0x1e54 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
    1e7c:	ce 01       	movw	r24, r28
    1e7e:	96 95       	lsr	r25
    1e80:	87 95       	ror	r24
    1e82:	c0 34       	cpi	r28, 0x40	; 64
    1e84:	d1 05       	cpc	r29, r1
    1e86:	38 f4       	brcc	.+14     	; 0x1e96 <_ZN15OrangutanAnalog11readAverageEhj+0x66>
    1e88:	8c 0d       	add	r24, r12
    1e8a:	9d 1d       	adc	r25, r13
    1e8c:	be 01       	movw	r22, r28
    1e8e:	0e 94 ca 1c 	call	0x3994	; 0x3994 <__udivmodhi4>
    1e92:	cb 01       	movw	r24, r22
    1e94:	0e c0       	rjmp	.+28     	; 0x1eb2 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
    1e96:	a7 01       	movw	r20, r14
    1e98:	96 01       	movw	r18, r12
    1e9a:	28 0f       	add	r18, r24
    1e9c:	39 1f       	adc	r19, r25
    1e9e:	41 1d       	adc	r20, r1
    1ea0:	51 1d       	adc	r21, r1
    1ea2:	ca 01       	movw	r24, r20
    1ea4:	b9 01       	movw	r22, r18
    1ea6:	9e 01       	movw	r18, r28
    1ea8:	40 e0       	ldi	r20, 0x00	; 0
    1eaa:	50 e0       	ldi	r21, 0x00	; 0
    1eac:	0e 94 f2 1c 	call	0x39e4	; 0x39e4 <__udivmodsi4>
    1eb0:	c9 01       	movw	r24, r18
    1eb2:	cd b7       	in	r28, 0x3d	; 61
    1eb4:	de b7       	in	r29, 0x3e	; 62
    1eb6:	e8 e0       	ldi	r30, 0x08	; 8
    1eb8:	0c 94 81 1d 	jmp	0x3b02	; 0x3b02 <__epilogue_restores__+0x14>

00001ebc <_ZN15OrangutanAnalog12toMillivoltsEj>:
    1ebc:	cf 92       	push	r12
    1ebe:	df 92       	push	r13
    1ec0:	ef 92       	push	r14
    1ec2:	ff 92       	push	r15
    1ec4:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ec8:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ecc:	9c 01       	movw	r18, r24
    1ece:	0e 94 39 1d 	call	0x3a72	; 0x3a72 <__umulhisi3>
    1ed2:	6b 01       	movw	r12, r22
    1ed4:	7c 01       	movw	r14, r24
    1ed6:	0e 94 e1 0e 	call	0x1dc2	; 0x1dc2 <_ZN15OrangutanAnalog7getModeEv>
    1eda:	88 23       	and	r24, r24
    1edc:	59 f0       	breq	.+22     	; 0x1ef4 <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
    1ede:	c7 01       	movw	r24, r14
    1ee0:	b6 01       	movw	r22, r12
    1ee2:	61 58       	subi	r22, 0x81	; 129
    1ee4:	7f 4f       	sbci	r23, 0xFF	; 255
    1ee6:	8f 4f       	sbci	r24, 0xFF	; 255
    1ee8:	9f 4f       	sbci	r25, 0xFF	; 255
    1eea:	2f ef       	ldi	r18, 0xFF	; 255
    1eec:	30 e0       	ldi	r19, 0x00	; 0
    1eee:	40 e0       	ldi	r20, 0x00	; 0
    1ef0:	50 e0       	ldi	r21, 0x00	; 0
    1ef2:	0a c0       	rjmp	.+20     	; 0x1f08 <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
    1ef4:	c7 01       	movw	r24, r14
    1ef6:	b6 01       	movw	r22, r12
    1ef8:	61 50       	subi	r22, 0x01	; 1
    1efa:	7e 4f       	sbci	r23, 0xFE	; 254
    1efc:	8f 4f       	sbci	r24, 0xFF	; 255
    1efe:	9f 4f       	sbci	r25, 0xFF	; 255
    1f00:	2f ef       	ldi	r18, 0xFF	; 255
    1f02:	33 e0       	ldi	r19, 0x03	; 3
    1f04:	40 e0       	ldi	r20, 0x00	; 0
    1f06:	50 e0       	ldi	r21, 0x00	; 0
    1f08:	0e 94 f2 1c 	call	0x39e4	; 0x39e4 <__udivmodsi4>
    1f0c:	c9 01       	movw	r24, r18
    1f0e:	ff 90       	pop	r15
    1f10:	ef 90       	pop	r14
    1f12:	df 90       	pop	r13
    1f14:	cf 90       	pop	r12
    1f16:	08 95       	ret

00001f18 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
    1f18:	0e 94 18 0f 	call	0x1e30	; 0x1e30 <_ZN15OrangutanAnalog11readAverageEhj>
    1f1c:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <_ZN15OrangutanAnalog12toMillivoltsEj>
    1f20:	08 95       	ret

00001f22 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
    1f22:	1f 93       	push	r17
    1f24:	cf 93       	push	r28
    1f26:	df 93       	push	r29
    1f28:	0e 94 e1 0e 	call	0x1dc2	; 0x1dc2 <_ZN15OrangutanAnalog7getModeEv>
    1f2c:	18 2f       	mov	r17, r24
    1f2e:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <_ZN15OrangutanAnalog7setModeEh.part.0>
    1f32:	6a e0       	ldi	r22, 0x0A	; 10
    1f34:	70 e0       	ldi	r23, 0x00	; 0
    1f36:	86 e0       	ldi	r24, 0x06	; 6
    1f38:	0e 94 8c 0f 	call	0x1f18	; 0x1f18 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
    1f3c:	ec 01       	movw	r28, r24
    1f3e:	81 2f       	mov	r24, r17
    1f40:	0e 94 d6 0e 	call	0x1dac	; 0x1dac <_ZN15OrangutanAnalog7setModeEh>
    1f44:	ce 01       	movw	r24, r28
    1f46:	88 0f       	add	r24, r24
    1f48:	99 1f       	adc	r25, r25
    1f4a:	8c 0f       	add	r24, r28
    1f4c:	9d 1f       	adc	r25, r29
    1f4e:	01 96       	adiw	r24, 0x01	; 1
    1f50:	96 95       	lsr	r25
    1f52:	87 95       	ror	r24
    1f54:	df 91       	pop	r29
    1f56:	cf 91       	pop	r28
    1f58:	1f 91       	pop	r17
    1f5a:	08 95       	ret

00001f5c <read_battery_millivolts_3pi>:
    1f5c:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
    1f60:	08 95       	ret

00001f62 <_ZL16currentCharacterv>:
    1f62:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <_ZL17use_program_space>
    1f66:	e0 91 8c 01 	lds	r30, 0x018C	; 0x80018c <__data_end>
    1f6a:	f0 91 8d 01 	lds	r31, 0x018D	; 0x80018d <__data_end+0x1>
    1f6e:	99 23       	and	r25, r25
    1f70:	11 f0       	breq	.+4      	; 0x1f76 <_ZL16currentCharacterv+0x14>
    1f72:	84 91       	lpm	r24, Z
    1f74:	01 c0       	rjmp	.+2      	; 0x1f78 <_ZL16currentCharacterv+0x16>
    1f76:	80 81       	ld	r24, Z
    1f78:	2f eb       	ldi	r18, 0xBF	; 191
    1f7a:	28 0f       	add	r18, r24
    1f7c:	2a 31       	cpi	r18, 0x1A	; 26
    1f7e:	10 f4       	brcc	.+4      	; 0x1f84 <_ZL16currentCharacterv+0x22>
    1f80:	80 5e       	subi	r24, 0xE0	; 224
    1f82:	08 95       	ret
    1f84:	80 32       	cpi	r24, 0x20	; 32
    1f86:	49 f4       	brne	.+18     	; 0x1f9a <_ZL16currentCharacterv+0x38>
    1f88:	9f 01       	movw	r18, r30
    1f8a:	2f 5f       	subi	r18, 0xFF	; 255
    1f8c:	3f 4f       	sbci	r19, 0xFF	; 255
    1f8e:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    1f92:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    1f96:	ef 2b       	or	r30, r31
    1f98:	31 f7       	brne	.-52     	; 0x1f66 <_ZL16currentCharacterv+0x4>
    1f9a:	08 95       	ret

00001f9c <_ZL9getNumberv>:
    1f9c:	1f 93       	push	r17
    1f9e:	cf 93       	push	r28
    1fa0:	df 93       	push	r29
    1fa2:	0e 94 b1 0f 	call	0x1f62	; 0x1f62 <_ZL16currentCharacterv>
    1fa6:	c0 e0       	ldi	r28, 0x00	; 0
    1fa8:	d0 e0       	ldi	r29, 0x00	; 0
    1faa:	1a e0       	ldi	r17, 0x0A	; 10
    1fac:	90 ed       	ldi	r25, 0xD0	; 208
    1fae:	98 0f       	add	r25, r24
    1fb0:	9a 30       	cpi	r25, 0x0A	; 10
    1fb2:	b8 f4       	brcc	.+46     	; 0x1fe2 <_ZL9getNumberv+0x46>
    1fb4:	9e 01       	movw	r18, r28
    1fb6:	12 9f       	mul	r17, r18
    1fb8:	e0 01       	movw	r28, r0
    1fba:	13 9f       	mul	r17, r19
    1fbc:	d0 0d       	add	r29, r0
    1fbe:	11 24       	eor	r1, r1
    1fc0:	c8 0f       	add	r28, r24
    1fc2:	d1 1d       	adc	r29, r1
    1fc4:	87 fd       	sbrc	r24, 7
    1fc6:	da 95       	dec	r29
    1fc8:	e0 97       	sbiw	r28, 0x30	; 48
    1fca:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <__data_end>
    1fce:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <__data_end+0x1>
    1fd2:	01 96       	adiw	r24, 0x01	; 1
    1fd4:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <__data_end+0x1>
    1fd8:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <__data_end>
    1fdc:	0e 94 b1 0f 	call	0x1f62	; 0x1f62 <_ZL16currentCharacterv>
    1fe0:	e5 cf       	rjmp	.-54     	; 0x1fac <_ZL9getNumberv+0x10>
    1fe2:	ce 01       	movw	r24, r28
    1fe4:	df 91       	pop	r29
    1fe6:	cf 91       	pop	r28
    1fe8:	1f 91       	pop	r17
    1fea:	08 95       	ret

00001fec <_ZN15OrangutanBuzzer5init2Ev>:
    1fec:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1ff0:	83 e2       	ldi	r24, 0x23	; 35
    1ff2:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    1ff6:	81 e1       	ldi	r24, 0x11	; 17
    1ff8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1ffc:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7f8082>
    2000:	80 e1       	ldi	r24, 0x10	; 16
    2002:	97 e2       	ldi	r25, 0x27	; 39
    2004:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    2008:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    200c:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    2010:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    2014:	22 9a       	sbi	0x04, 2	; 4
    2016:	78 94       	sei
    2018:	08 95       	ret

0000201a <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
    201a:	8f 92       	push	r8
    201c:	9f 92       	push	r9
    201e:	af 92       	push	r10
    2020:	bf 92       	push	r11
    2022:	df 92       	push	r13
    2024:	ef 92       	push	r14
    2026:	ff 92       	push	r15
    2028:	0f 93       	push	r16
    202a:	1f 93       	push	r17
    202c:	cf 93       	push	r28
    202e:	df 93       	push	r29
    2030:	5c 01       	movw	r10, r24
    2032:	8b 01       	movw	r16, r22
    2034:	d4 2e       	mov	r13, r20
    2036:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <buzzerInitialized>
    203a:	81 11       	cpse	r24, r1
    203c:	05 c0       	rjmp	.+10     	; 0x2048 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
    203e:	81 e0       	ldi	r24, 0x01	; 1
    2040:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <buzzerInitialized>
    2044:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <_ZN15OrangutanBuzzer5init2Ev>
    2048:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <buzzerFinished>
    204c:	b7 fe       	sbrs	r11, 7
    204e:	05 c0       	rjmp	.+10     	; 0x205a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
    2050:	e8 94       	clt
    2052:	b7 f8       	bld	r11, 7
    2054:	2a e0       	ldi	r18, 0x0A	; 10
    2056:	f2 2e       	mov	r15, r18
    2058:	02 c0       	rjmp	.+4      	; 0x205e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
    205a:	ff 24       	eor	r15, r15
    205c:	f3 94       	inc	r15
    205e:	e0 90 81 00 	lds	r14, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    2062:	2e 2d       	mov	r18, r14
    2064:	28 7f       	andi	r18, 0xF8	; 248
    2066:	e2 2e       	mov	r14, r18
    2068:	48 ec       	ldi	r20, 0xC8	; 200
    206a:	f4 9e       	mul	r15, r20
    206c:	c0 01       	movw	r24, r0
    206e:	11 24       	eor	r1, r1
    2070:	8a 15       	cp	r24, r10
    2072:	9b 05       	cpc	r25, r11
    2074:	e0 f4       	brcc	.+56     	; 0x20ae <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
    2076:	e5 01       	movw	r28, r10
    2078:	51 e1       	ldi	r21, 0x11	; 17
    207a:	a5 16       	cp	r10, r21
    207c:	57 e2       	ldi	r21, 0x27	; 39
    207e:	b5 06       	cpc	r11, r21
    2080:	10 f0       	brcs	.+4      	; 0x2086 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
    2082:	c0 e1       	ldi	r28, 0x10	; 16
    2084:	d7 e2       	ldi	r29, 0x27	; 39
    2086:	be 01       	movw	r22, r28
    2088:	76 95       	lsr	r23
    208a:	67 95       	ror	r22
    208c:	80 e0       	ldi	r24, 0x00	; 0
    208e:	90 e0       	ldi	r25, 0x00	; 0
    2090:	60 58       	subi	r22, 0x80	; 128
    2092:	79 46       	sbci	r23, 0x69	; 105
    2094:	87 46       	sbci	r24, 0x67	; 103
    2096:	9f 4f       	sbci	r25, 0xFF	; 255
    2098:	4e 01       	movw	r8, r28
    209a:	a1 2c       	mov	r10, r1
    209c:	b1 2c       	mov	r11, r1
    209e:	a5 01       	movw	r20, r10
    20a0:	94 01       	movw	r18, r8
    20a2:	0e 94 f2 1c 	call	0x39e4	; 0x39e4 <__udivmodsi4>
    20a6:	59 01       	movw	r10, r18
    20a8:	8e 2d       	mov	r24, r14
    20aa:	81 60       	ori	r24, 0x01	; 1
    20ac:	24 c0       	rjmp	.+72     	; 0x20f6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
    20ae:	c8 e2       	ldi	r28, 0x28	; 40
    20b0:	fc 9e       	mul	r15, r28
    20b2:	c0 2d       	mov	r28, r0
    20b4:	11 24       	eor	r1, r1
    20b6:	d0 e0       	ldi	r29, 0x00	; 0
    20b8:	ca 15       	cp	r28, r10
    20ba:	db 05       	cpc	r29, r11
    20bc:	08 f4       	brcc	.+2      	; 0x20c0 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
    20be:	e5 01       	movw	r28, r10
    20c0:	be 01       	movw	r22, r28
    20c2:	76 95       	lsr	r23
    20c4:	67 95       	ror	r22
    20c6:	9e 01       	movw	r18, r28
    20c8:	40 e0       	ldi	r20, 0x00	; 0
    20ca:	50 e0       	ldi	r21, 0x00	; 0
    20cc:	8a e0       	ldi	r24, 0x0A	; 10
    20ce:	f8 12       	cpse	r15, r24
    20d0:	07 c0       	rjmp	.+14     	; 0x20e0 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
    20d2:	80 e0       	ldi	r24, 0x00	; 0
    20d4:	90 e0       	ldi	r25, 0x00	; 0
    20d6:	60 5e       	subi	r22, 0xE0	; 224
    20d8:	73 44       	sbci	r23, 0x43	; 67
    20da:	81 44       	sbci	r24, 0x41	; 65
    20dc:	9f 4f       	sbci	r25, 0xFF	; 255
    20de:	06 c0       	rjmp	.+12     	; 0x20ec <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
    20e0:	80 e0       	ldi	r24, 0x00	; 0
    20e2:	90 e0       	ldi	r25, 0x00	; 0
    20e4:	60 53       	subi	r22, 0x30	; 48
    20e6:	7d 4e       	sbci	r23, 0xED	; 237
    20e8:	8c 4e       	sbci	r24, 0xEC	; 236
    20ea:	9f 4f       	sbci	r25, 0xFF	; 255
    20ec:	0e 94 f2 1c 	call	0x39e4	; 0x39e4 <__udivmodsi4>
    20f0:	59 01       	movw	r10, r18
    20f2:	8e 2d       	mov	r24, r14
    20f4:	82 60       	ori	r24, 0x02	; 2
    20f6:	88 2e       	mov	r8, r24
    20f8:	2a e0       	ldi	r18, 0x0A	; 10
    20fa:	f2 12       	cpse	r15, r18
    20fc:	07 c0       	rjmp	.+14     	; 0x210c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
    20fe:	ce 01       	movw	r24, r28
    2100:	05 96       	adiw	r24, 0x05	; 5
    2102:	6a e0       	ldi	r22, 0x0A	; 10
    2104:	70 e0       	ldi	r23, 0x00	; 0
    2106:	0e 94 ca 1c 	call	0x3994	; 0x3994 <__udivmodhi4>
    210a:	eb 01       	movw	r28, r22
    210c:	c8 3e       	cpi	r28, 0xE8	; 232
    210e:	43 e0       	ldi	r20, 0x03	; 3
    2110:	d4 07       	cpc	r29, r20
    2112:	59 f0       	breq	.+22     	; 0x212a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
    2114:	98 01       	movw	r18, r16
    2116:	de 01       	movw	r26, r28
    2118:	0e 94 39 1d 	call	0x3a72	; 0x3a72 <__umulhisi3>
    211c:	28 ee       	ldi	r18, 0xE8	; 232
    211e:	33 e0       	ldi	r19, 0x03	; 3
    2120:	40 e0       	ldi	r20, 0x00	; 0
    2122:	50 e0       	ldi	r21, 0x00	; 0
    2124:	0e 94 14 1d 	call	0x3a28	; 0x3a28 <__divmodsi4>
    2128:	89 01       	movw	r16, r18
    212a:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    212e:	80 92 81 00 	sts	0x0081, r8	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    2132:	b0 92 89 00 	sts	0x0089, r11	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    2136:	a0 92 88 00 	sts	0x0088, r10	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    213a:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    213e:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    2142:	4d 2d       	mov	r20, r13
    2144:	40 31       	cpi	r20, 0x10	; 16
    2146:	08 f0       	brcs	.+2      	; 0x214a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
    2148:	4f e0       	ldi	r20, 0x0F	; 15
    214a:	80 e1       	ldi	r24, 0x10	; 16
    214c:	90 e0       	ldi	r25, 0x00	; 0
    214e:	84 1b       	sub	r24, r20
    2150:	91 09       	sbc	r25, r1
    2152:	a9 01       	movw	r20, r18
    2154:	02 c0       	rjmp	.+4      	; 0x215a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
    2156:	56 95       	lsr	r21
    2158:	47 95       	ror	r20
    215a:	8a 95       	dec	r24
    215c:	e2 f7       	brpl	.-8      	; 0x2156 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
    215e:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    2162:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    2166:	10 93 94 01 	sts	0x0194, r17	; 0x800194 <_ZL13buzzerTimeout+0x1>
    216a:	00 93 93 01 	sts	0x0193, r16	; 0x800193 <_ZL13buzzerTimeout>
    216e:	86 b3       	in	r24, 0x16	; 22
    2170:	8f ef       	ldi	r24, 0xFF	; 255
    2172:	86 bb       	out	0x16, r24	; 22
    2174:	81 e0       	ldi	r24, 0x01	; 1
    2176:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    217a:	df 91       	pop	r29
    217c:	cf 91       	pop	r28
    217e:	1f 91       	pop	r17
    2180:	0f 91       	pop	r16
    2182:	ff 90       	pop	r15
    2184:	ef 90       	pop	r14
    2186:	df 90       	pop	r13
    2188:	bf 90       	pop	r11
    218a:	af 90       	pop	r10
    218c:	9f 90       	pop	r9
    218e:	8f 90       	pop	r8
    2190:	08 95       	ret

00002192 <_ZN15OrangutanBuzzer8playNoteEhjh>:
    2192:	cf 93       	push	r28
    2194:	df 93       	push	r29
    2196:	eb 01       	movw	r28, r22
    2198:	8f 3f       	cpi	r24, 0xFF	; 255
    219a:	11 f0       	breq	.+4      	; 0x21a0 <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
    219c:	41 11       	cpse	r20, r1
    219e:	05 c0       	rjmp	.+10     	; 0x21aa <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
    21a0:	40 e0       	ldi	r20, 0x00	; 0
    21a2:	be 01       	movw	r22, r28
    21a4:	88 ee       	ldi	r24, 0xE8	; 232
    21a6:	93 e0       	ldi	r25, 0x03	; 3
    21a8:	43 c0       	rjmp	.+134    	; 0x2230 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
    21aa:	81 31       	cpi	r24, 0x11	; 17
    21ac:	30 f0       	brcs	.+12     	; 0x21ba <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
    21ae:	50 ef       	ldi	r21, 0xF0	; 240
    21b0:	58 0f       	add	r21, r24
    21b2:	50 36       	cpi	r21, 0x60	; 96
    21b4:	18 f0       	brcs	.+6      	; 0x21bc <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    21b6:	5f e5       	ldi	r21, 0x5F	; 95
    21b8:	01 c0       	rjmp	.+2      	; 0x21bc <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    21ba:	50 e0       	ldi	r21, 0x00	; 0
    21bc:	85 2f       	mov	r24, r21
    21be:	6c e0       	ldi	r22, 0x0C	; 12
    21c0:	0e 94 be 1c 	call	0x397c	; 0x397c <__udivmodqi4>
    21c4:	68 2f       	mov	r22, r24
    21c6:	74 ef       	ldi	r23, 0xF4	; 244
    21c8:	76 03       	mulsu	r23, r22
    21ca:	90 01       	movw	r18, r0
    21cc:	11 24       	eor	r1, r1
    21ce:	25 0f       	add	r18, r21
    21d0:	31 1d       	adc	r19, r1
    21d2:	2c 30       	cpi	r18, 0x0C	; 12
    21d4:	31 05       	cpc	r19, r1
    21d6:	40 f4       	brcc	.+16     	; 0x21e8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
    21d8:	f9 01       	movw	r30, r18
    21da:	ee 0f       	add	r30, r30
    21dc:	ff 1f       	adc	r31, r31
    21de:	e8 5c       	subi	r30, 0xC8	; 200
    21e0:	fe 4f       	sbci	r31, 0xFE	; 254
    21e2:	20 81       	ld	r18, Z
    21e4:	31 81       	ldd	r19, Z+1	; 0x01
    21e6:	02 c0       	rjmp	.+4      	; 0x21ec <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
    21e8:	20 e0       	ldi	r18, 0x00	; 0
    21ea:	30 e0       	ldi	r19, 0x00	; 0
    21ec:	87 30       	cpi	r24, 0x07	; 7
    21ee:	81 f0       	breq	.+32     	; 0x2210 <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
    21f0:	08 2e       	mov	r0, r24
    21f2:	02 c0       	rjmp	.+4      	; 0x21f8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
    21f4:	22 0f       	add	r18, r18
    21f6:	33 1f       	adc	r19, r19
    21f8:	0a 94       	dec	r0
    21fa:	e2 f7       	brpl	.-8      	; 0x21f4 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
    21fc:	82 30       	cpi	r24, 0x02	; 2
    21fe:	28 f0       	brcs	.+10     	; 0x220a <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
    2200:	c9 01       	movw	r24, r18
    2202:	05 96       	adiw	r24, 0x05	; 5
    2204:	6a e0       	ldi	r22, 0x0A	; 10
    2206:	70 e0       	ldi	r23, 0x00	; 0
    2208:	0c c0       	rjmp	.+24     	; 0x2222 <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
    220a:	c9 01       	movw	r24, r18
    220c:	90 58       	subi	r25, 0x80	; 128
    220e:	0c c0       	rjmp	.+24     	; 0x2228 <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
    2210:	c9 01       	movw	r24, r18
    2212:	36 e0       	ldi	r19, 0x06	; 6
    2214:	88 0f       	add	r24, r24
    2216:	99 1f       	adc	r25, r25
    2218:	3a 95       	dec	r19
    221a:	e1 f7       	brne	.-8      	; 0x2214 <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
    221c:	02 96       	adiw	r24, 0x02	; 2
    221e:	65 e0       	ldi	r22, 0x05	; 5
    2220:	70 e0       	ldi	r23, 0x00	; 0
    2222:	0e 94 ca 1c 	call	0x3994	; 0x3994 <__udivmodhi4>
    2226:	cb 01       	movw	r24, r22
    2228:	40 31       	cpi	r20, 0x10	; 16
    222a:	08 f0       	brcs	.+2      	; 0x222e <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
    222c:	4f e0       	ldi	r20, 0x0F	; 15
    222e:	be 01       	movw	r22, r28
    2230:	0e 94 0d 10 	call	0x201a	; 0x201a <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    2234:	df 91       	pop	r29
    2236:	cf 91       	pop	r28
    2238:	08 95       	ret

0000223a <_ZL8nextNotev>:
    223a:	a2 e0       	ldi	r26, 0x02	; 2
    223c:	b0 e0       	ldi	r27, 0x00	; 0
    223e:	e3 e2       	ldi	r30, 0x23	; 35
    2240:	f1 e1       	ldi	r31, 0x11	; 17
    2242:	0c 94 5d 1d 	jmp	0x3aba	; 0x3aba <__prologue_saves__+0x4>
    2246:	90 90 0a 01 	lds	r9, 0x010A	; 0x80010a <_ZL6octave>
    224a:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <_ZL8staccato>
    224e:	88 23       	and	r24, r24
    2250:	21 f0       	breq	.+8      	; 0x225a <_ZL8nextNotev+0x20>
    2252:	60 91 8f 01 	lds	r22, 0x018F	; 0x80018f <_ZL22staccato_rest_duration>
    2256:	61 11       	cpse	r22, r1
    2258:	17 c0       	rjmp	.+46     	; 0x2288 <_ZL8nextNotev+0x4e>
    225a:	77 24       	eor	r7, r7
    225c:	73 94       	inc	r7
    225e:	b0 ec       	ldi	r27, 0xC0	; 192
    2260:	ab 2e       	mov	r10, r27
    2262:	bd e5       	ldi	r27, 0x5D	; 93
    2264:	bb 2e       	mov	r11, r27
    2266:	1a e0       	ldi	r17, 0x0A	; 10
    2268:	61 2e       	mov	r6, r17
    226a:	04 e0       	ldi	r16, 0x04	; 4
    226c:	80 2e       	mov	r8, r16
    226e:	80 ed       	ldi	r24, 0xD0	; 208
    2270:	c8 2e       	mov	r12, r24
    2272:	87 e0       	ldi	r24, 0x07	; 7
    2274:	d8 2e       	mov	r13, r24
    2276:	94 e0       	ldi	r25, 0x04	; 4
    2278:	e9 2e       	mov	r14, r25
    227a:	f1 2c       	mov	r15, r1
    227c:	04 ef       	ldi	r16, 0xF4	; 244
    227e:	11 e0       	ldi	r17, 0x01	; 1
    2280:	2f e0       	ldi	r18, 0x0F	; 15
    2282:	42 2e       	mov	r4, r18
    2284:	51 2c       	mov	r5, r1
    2286:	15 c0       	rjmp	.+42     	; 0x22b2 <_ZL8nextNotev+0x78>
    2288:	70 e0       	ldi	r23, 0x00	; 0
    228a:	40 e0       	ldi	r20, 0x00	; 0
    228c:	88 ee       	ldi	r24, 0xE8	; 232
    228e:	93 e0       	ldi	r25, 0x03	; 3
    2290:	0e 94 0d 10 	call	0x201a	; 0x201a <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    2294:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <_ZL22staccato_rest_duration>
    2298:	17 c1       	rjmp	.+558    	; 0x24c8 <_ZL8nextNotev+0x28e>
    229a:	86 36       	cpi	r24, 0x66	; 102
    229c:	d4 f5       	brge	.+116    	; 0x2312 <_ZL8nextNotev+0xd8>
    229e:	81 36       	cpi	r24, 0x61	; 97
    22a0:	09 f4       	brne	.+2      	; 0x22a4 <_ZL8nextNotev+0x6a>
    22a2:	a9 c0       	rjmp	.+338    	; 0x23f6 <_ZL8nextNotev+0x1bc>
    22a4:	7c f5       	brge	.+94     	; 0x2304 <_ZL8nextNotev+0xca>
    22a6:	8c 33       	cpi	r24, 0x3C	; 60
    22a8:	09 f4       	brne	.+2      	; 0x22ac <_ZL8nextNotev+0x72>
    22aa:	60 c0       	rjmp	.+192    	; 0x236c <_ZL8nextNotev+0x132>
    22ac:	8e 33       	cpi	r24, 0x3E	; 62
    22ae:	81 f4       	brne	.+32     	; 0x22d0 <_ZL8nextNotev+0x96>
    22b0:	93 94       	inc	r9
    22b2:	0e 94 b1 0f 	call	0x1f62	; 0x1f62 <_ZL16currentCharacterv>
    22b6:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <__data_end>
    22ba:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <__data_end+0x1>
    22be:	2f 5f       	subi	r18, 0xFF	; 255
    22c0:	3f 4f       	sbci	r19, 0xFF	; 255
    22c2:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    22c6:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    22ca:	85 36       	cpi	r24, 0x65	; 101
    22cc:	31 f7       	brne	.-52     	; 0x229a <_ZL8nextNotev+0x60>
    22ce:	52 c0       	rjmp	.+164    	; 0x2374 <_ZL8nextNotev+0x13a>
    22d0:	81 32       	cpi	r24, 0x21	; 33
    22d2:	09 f0       	breq	.+2      	; 0x22d6 <_ZL8nextNotev+0x9c>
    22d4:	8b c0       	rjmp	.+278    	; 0x23ec <_ZL8nextNotev+0x1b2>
    22d6:	80 92 0a 01 	sts	0x010A, r8	; 0x80010a <_ZL6octave>
    22da:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <_ZL19whole_note_duration+0x1>
    22de:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <_ZL19whole_note_duration>
    22e2:	f0 92 07 01 	sts	0x0107, r15	; 0x800107 <_ZL9note_type+0x1>
    22e6:	e0 92 06 01 	sts	0x0106, r14	; 0x800106 <_ZL9note_type>
    22ea:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <_ZL8duration+0x1>
    22ee:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <_ZL8duration>
    22f2:	50 92 03 01 	sts	0x0103, r5	; 0x800103 <_ZL6volume+0x1>
    22f6:	40 92 02 01 	sts	0x0102, r4	; 0x800102 <_ZL6volume>
    22fa:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <_ZL8staccato>
    22fe:	a4 e0       	ldi	r26, 0x04	; 4
    2300:	9a 2e       	mov	r9, r26
    2302:	d7 cf       	rjmp	.-82     	; 0x22b2 <_ZL8nextNotev+0x78>
    2304:	83 36       	cpi	r24, 0x63	; 99
    2306:	a1 f1       	breq	.+104    	; 0x2370 <_ZL8nextNotev+0x136>
    2308:	0c f4       	brge	.+2      	; 0x230c <_ZL8nextNotev+0xd2>
    230a:	78 c0       	rjmp	.+240    	; 0x23fc <_ZL8nextNotev+0x1c2>
    230c:	10 e0       	ldi	r17, 0x00	; 0
    230e:	82 e0       	ldi	r24, 0x02	; 2
    2310:	77 c0       	rjmp	.+238    	; 0x2400 <_ZL8nextNotev+0x1c6>
    2312:	8d 36       	cpi	r24, 0x6D	; 109
    2314:	c1 f1       	breq	.+112    	; 0x2386 <_ZL8nextNotev+0x14c>
    2316:	94 f4       	brge	.+36     	; 0x233c <_ZL8nextNotev+0x102>
    2318:	87 36       	cpi	r24, 0x67	; 103
    231a:	91 f1       	breq	.+100    	; 0x2380 <_ZL8nextNotev+0x146>
    231c:	74 f1       	brlt	.+92     	; 0x237a <_ZL8nextNotev+0x140>
    231e:	8c 36       	cpi	r24, 0x6C	; 108
    2320:	09 f0       	breq	.+2      	; 0x2324 <_ZL8nextNotev+0xea>
    2322:	64 c0       	rjmp	.+200    	; 0x23ec <_ZL8nextNotev+0x1b2>
    2324:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <_ZL9getNumberv>
    2328:	bc 01       	movw	r22, r24
    232a:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_ZL9note_type+0x1>
    232e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_ZL9note_type>
    2332:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    2336:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    233a:	51 c0       	rjmp	.+162    	; 0x23de <_ZL8nextNotev+0x1a4>
    233c:	82 37       	cpi	r24, 0x72	; 114
    233e:	c9 f1       	breq	.+114    	; 0x23b2 <_ZL8nextNotev+0x178>
    2340:	4c f4       	brge	.+18     	; 0x2354 <_ZL8nextNotev+0x11a>
    2342:	8f 36       	cpi	r24, 0x6F	; 111
    2344:	09 f0       	breq	.+2      	; 0x2348 <_ZL8nextNotev+0x10e>
    2346:	52 c0       	rjmp	.+164    	; 0x23ec <_ZL8nextNotev+0x1b2>
    2348:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <_ZL9getNumberv>
    234c:	98 2e       	mov	r9, r24
    234e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_ZL6octave>
    2352:	af cf       	rjmp	.-162    	; 0x22b2 <_ZL8nextNotev+0x78>
    2354:	84 37       	cpi	r24, 0x74	; 116
    2356:	81 f1       	breq	.+96     	; 0x23b8 <_ZL8nextNotev+0x17e>
    2358:	86 37       	cpi	r24, 0x76	; 118
    235a:	09 f0       	breq	.+2      	; 0x235e <_ZL8nextNotev+0x124>
    235c:	47 c0       	rjmp	.+142    	; 0x23ec <_ZL8nextNotev+0x1b2>
    235e:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <_ZL9getNumberv>
    2362:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_ZL6volume+0x1>
    2366:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_ZL6volume>
    236a:	a3 cf       	rjmp	.-186    	; 0x22b2 <_ZL8nextNotev+0x78>
    236c:	9a 94       	dec	r9
    236e:	a1 cf       	rjmp	.-190    	; 0x22b2 <_ZL8nextNotev+0x78>
    2370:	10 e0       	ldi	r17, 0x00	; 0
    2372:	20 c0       	rjmp	.+64     	; 0x23b4 <_ZL8nextNotev+0x17a>
    2374:	10 e0       	ldi	r17, 0x00	; 0
    2376:	84 e0       	ldi	r24, 0x04	; 4
    2378:	43 c0       	rjmp	.+134    	; 0x2400 <_ZL8nextNotev+0x1c6>
    237a:	10 e0       	ldi	r17, 0x00	; 0
    237c:	85 e0       	ldi	r24, 0x05	; 5
    237e:	40 c0       	rjmp	.+128    	; 0x2400 <_ZL8nextNotev+0x1c6>
    2380:	10 e0       	ldi	r17, 0x00	; 0
    2382:	87 e0       	ldi	r24, 0x07	; 7
    2384:	3d c0       	rjmp	.+122    	; 0x2400 <_ZL8nextNotev+0x1c6>
    2386:	0e 94 b1 0f 	call	0x1f62	; 0x1f62 <_ZL16currentCharacterv>
    238a:	8c 36       	cpi	r24, 0x6C	; 108
    238c:	19 f4       	brne	.+6      	; 0x2394 <_ZL8nextNotev+0x15a>
    238e:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <_ZL8staccato>
    2392:	04 c0       	rjmp	.+8      	; 0x239c <_ZL8nextNotev+0x162>
    2394:	70 92 90 01 	sts	0x0190, r7	; 0x800190 <_ZL8staccato>
    2398:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <_ZL22staccato_rest_duration>
    239c:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <__data_end>
    23a0:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <__data_end+0x1>
    23a4:	2f 5f       	subi	r18, 0xFF	; 255
    23a6:	3f 4f       	sbci	r19, 0xFF	; 255
    23a8:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    23ac:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    23b0:	80 cf       	rjmp	.-256    	; 0x22b2 <_ZL8nextNotev+0x78>
    23b2:	11 e0       	ldi	r17, 0x01	; 1
    23b4:	80 e0       	ldi	r24, 0x00	; 0
    23b6:	24 c0       	rjmp	.+72     	; 0x2400 <_ZL8nextNotev+0x1c6>
    23b8:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <_ZL9getNumberv>
    23bc:	bc 01       	movw	r22, r24
    23be:	c5 01       	movw	r24, r10
    23c0:	0e 94 ca 1c 	call	0x3994	; 0x3994 <__udivmodhi4>
    23c4:	66 9e       	mul	r6, r22
    23c6:	c0 01       	movw	r24, r0
    23c8:	67 9e       	mul	r6, r23
    23ca:	90 0d       	add	r25, r0
    23cc:	11 24       	eor	r1, r1
    23ce:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_ZL19whole_note_duration+0x1>
    23d2:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_ZL19whole_note_duration>
    23d6:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <_ZL9note_type>
    23da:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <_ZL9note_type+0x1>
    23de:	0e 94 ca 1c 	call	0x3994	; 0x3994 <__udivmodhi4>
    23e2:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_ZL8duration+0x1>
    23e6:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_ZL8duration>
    23ea:	63 cf       	rjmp	.-314    	; 0x22b2 <_ZL8nextNotev+0x78>
    23ec:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <__data_end+0x1>
    23f0:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <__data_end>
    23f4:	69 c0       	rjmp	.+210    	; 0x24c8 <_ZL8nextNotev+0x28e>
    23f6:	10 e0       	ldi	r17, 0x00	; 0
    23f8:	89 e0       	ldi	r24, 0x09	; 9
    23fa:	02 c0       	rjmp	.+4      	; 0x2400 <_ZL8nextNotev+0x1c6>
    23fc:	10 e0       	ldi	r17, 0x00	; 0
    23fe:	8b e0       	ldi	r24, 0x0B	; 11
    2400:	08 2f       	mov	r16, r24
    2402:	9c e0       	ldi	r25, 0x0C	; 12
    2404:	99 9e       	mul	r9, r25
    2406:	00 0d       	add	r16, r0
    2408:	11 24       	eor	r1, r1
    240a:	0e 94 b1 0f 	call	0x1f62	; 0x1f62 <_ZL16currentCharacterv>
    240e:	98 2f       	mov	r25, r24
    2410:	97 7f       	andi	r25, 0xF7	; 247
    2412:	93 32       	cpi	r25, 0x23	; 35
    2414:	61 f4       	brne	.+24     	; 0x242e <_ZL8nextNotev+0x1f4>
    2416:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <__data_end>
    241a:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <__data_end+0x1>
    241e:	2f 5f       	subi	r18, 0xFF	; 255
    2420:	3f 4f       	sbci	r19, 0xFF	; 255
    2422:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    2426:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    242a:	0f 5f       	subi	r16, 0xFF	; 255
    242c:	ee cf       	rjmp	.-36     	; 0x240a <_ZL8nextNotev+0x1d0>
    242e:	8d 32       	cpi	r24, 0x2D	; 45
    2430:	71 f4       	brne	.+28     	; 0x244e <_ZL8nextNotev+0x214>
    2432:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <__data_end>
    2436:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <__data_end+0x1>
    243a:	2f 5f       	subi	r18, 0xFF	; 255
    243c:	3f 4f       	sbci	r19, 0xFF	; 255
    243e:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    2442:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    2446:	01 50       	subi	r16, 0x01	; 1
    2448:	0e 94 b1 0f 	call	0x1f62	; 0x1f62 <_ZL16currentCharacterv>
    244c:	f0 cf       	rjmp	.-32     	; 0x242e <_ZL8nextNotev+0x1f4>
    244e:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <_ZL8duration>
    2452:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <_ZL8duration+0x1>
    2456:	81 53       	subi	r24, 0x31	; 49
    2458:	88 30       	cpi	r24, 0x08	; 8
    245a:	50 f4       	brcc	.+20     	; 0x2470 <_ZL8nextNotev+0x236>
    245c:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    2460:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    2464:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <_ZL9getNumberv>
    2468:	bc 01       	movw	r22, r24
    246a:	c7 01       	movw	r24, r14
    246c:	0e 94 ca 1c 	call	0x3994	; 0x3994 <__udivmodhi4>
    2470:	7b 01       	movw	r14, r22
    2472:	f6 94       	lsr	r15
    2474:	e7 94       	ror	r14
    2476:	69 83       	std	Y+1, r22	; 0x01
    2478:	7a 83       	std	Y+2, r23	; 0x02
    247a:	0e 94 b1 0f 	call	0x1f62	; 0x1f62 <_ZL16currentCharacterv>
    247e:	69 81       	ldd	r22, Y+1	; 0x01
    2480:	7a 81       	ldd	r23, Y+2	; 0x02
    2482:	8e 32       	cpi	r24, 0x2E	; 46
    2484:	69 f4       	brne	.+26     	; 0x24a0 <_ZL8nextNotev+0x266>
    2486:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <__data_end>
    248a:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <__data_end+0x1>
    248e:	2f 5f       	subi	r18, 0xFF	; 255
    2490:	3f 4f       	sbci	r19, 0xFF	; 255
    2492:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <__data_end+0x1>
    2496:	20 93 8c 01 	sts	0x018C, r18	; 0x80018c <__data_end>
    249a:	6e 0d       	add	r22, r14
    249c:	7f 1d       	adc	r23, r15
    249e:	e9 cf       	rjmp	.-46     	; 0x2472 <_ZL8nextNotev+0x238>
    24a0:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <_ZL8staccato>
    24a4:	88 23       	and	r24, r24
    24a6:	39 f0       	breq	.+14     	; 0x24b6 <_ZL8nextNotev+0x27c>
    24a8:	9b 01       	movw	r18, r22
    24aa:	36 95       	lsr	r19
    24ac:	27 95       	ror	r18
    24ae:	20 93 8f 01 	sts	0x018F, r18	; 0x80018f <_ZL22staccato_rest_duration>
    24b2:	62 1b       	sub	r22, r18
    24b4:	71 09       	sbc	r23, r1
    24b6:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <_ZL6volume>
    24ba:	11 23       	and	r17, r17
    24bc:	11 f0       	breq	.+4      	; 0x24c2 <_ZL8nextNotev+0x288>
    24be:	8f ef       	ldi	r24, 0xFF	; 255
    24c0:	01 c0       	rjmp	.+2      	; 0x24c4 <_ZL8nextNotev+0x28a>
    24c2:	80 2f       	mov	r24, r16
    24c4:	0e 94 c9 10 	call	0x2192	; 0x2192 <_ZN15OrangutanBuzzer8playNoteEhjh>
    24c8:	22 96       	adiw	r28, 0x02	; 2
    24ca:	e0 e1       	ldi	r30, 0x10	; 16
    24cc:	0c 94 79 1d 	jmp	0x3af2	; 0x3af2 <__epilogue_restores__+0x4>

000024d0 <__vector_13>:
    24d0:	1f 92       	push	r1
    24d2:	0f 92       	push	r0
    24d4:	0f b6       	in	r0, 0x3f	; 63
    24d6:	0f 92       	push	r0
    24d8:	11 24       	eor	r1, r1
    24da:	2f 93       	push	r18
    24dc:	3f 93       	push	r19
    24de:	4f 93       	push	r20
    24e0:	5f 93       	push	r21
    24e2:	6f 93       	push	r22
    24e4:	7f 93       	push	r23
    24e6:	8f 93       	push	r24
    24e8:	9f 93       	push	r25
    24ea:	af 93       	push	r26
    24ec:	bf 93       	push	r27
    24ee:	ef 93       	push	r30
    24f0:	ff 93       	push	r31
    24f2:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <_ZL13buzzerTimeout>
    24f6:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <_ZL13buzzerTimeout+0x1>
    24fa:	9c 01       	movw	r18, r24
    24fc:	21 50       	subi	r18, 0x01	; 1
    24fe:	31 09       	sbc	r19, r1
    2500:	30 93 94 01 	sts	0x0194, r19	; 0x800194 <_ZL13buzzerTimeout+0x1>
    2504:	20 93 93 01 	sts	0x0193, r18	; 0x800193 <_ZL13buzzerTimeout>
    2508:	89 2b       	or	r24, r25
    250a:	11 f5       	brne	.+68     	; 0x2550 <__vector_13+0x80>
    250c:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    2510:	78 94       	sei
    2512:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    2516:	88 7f       	andi	r24, 0xF8	; 248
    2518:	81 60       	ori	r24, 0x01	; 1
    251a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    251e:	80 e1       	ldi	r24, 0x10	; 16
    2520:	97 e2       	ldi	r25, 0x27	; 39
    2522:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    2526:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    252a:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    252e:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    2532:	81 e0       	ldi	r24, 0x01	; 1
    2534:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <buzzerFinished>
    2538:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <__data_end>
    253c:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <__data_end+0x1>
    2540:	89 2b       	or	r24, r25
    2542:	31 f0       	breq	.+12     	; 0x2550 <__vector_13+0x80>
    2544:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <_ZL17play_mode_setting>
    2548:	81 11       	cpse	r24, r1
    254a:	02 c0       	rjmp	.+4      	; 0x2550 <__vector_13+0x80>
    254c:	0e 94 1d 11 	call	0x223a	; 0x223a <_ZL8nextNotev>
    2550:	ff 91       	pop	r31
    2552:	ef 91       	pop	r30
    2554:	bf 91       	pop	r27
    2556:	af 91       	pop	r26
    2558:	9f 91       	pop	r25
    255a:	8f 91       	pop	r24
    255c:	7f 91       	pop	r23
    255e:	6f 91       	pop	r22
    2560:	5f 91       	pop	r21
    2562:	4f 91       	pop	r20
    2564:	3f 91       	pop	r19
    2566:	2f 91       	pop	r18
    2568:	0f 90       	pop	r0
    256a:	0f be       	out	0x3f, r0	; 63
    256c:	0f 90       	pop	r0
    256e:	1f 90       	pop	r1
    2570:	18 95       	reti

00002572 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    2572:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    2576:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <__data_end+0x1>
    257a:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <__data_end>
    257e:	81 e0       	ldi	r24, 0x01	; 1
    2580:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <_ZL17use_program_space>
    2584:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <_ZL22staccato_rest_duration>
    2588:	0e 94 1d 11 	call	0x223a	; 0x223a <_ZL8nextNotev>
    258c:	08 95       	ret

0000258e <play_from_program_space>:
    258e:	0e 94 b9 12 	call	0x2572	; 0x2572 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    2592:	08 95       	ret

00002594 <delay_us.constprop.0>:
    2594:	81 e0       	ldi	r24, 0x01	; 1
    2596:	90 e0       	ldi	r25, 0x00	; 0
    2598:	6f 93       	push	r22
    259a:	64 e0       	ldi	r22, 0x04	; 4
    259c:	6a 95       	dec	r22
    259e:	f1 f7       	brne	.-4      	; 0x259c <delay_us.constprop.0+0x8>
    25a0:	6f 91       	pop	r22
    25a2:	01 97       	sbiw	r24, 0x01	; 1
    25a4:	c9 f7       	brne	.-14     	; 0x2598 <delay_us.constprop.0+0x4>
    25a6:	08 95       	ret

000025a8 <_ZN12OrangutanLCD8busyWaitEv>:
    25a8:	0f 93       	push	r16
    25aa:	1f 93       	push	r17
    25ac:	cf 93       	push	r28
    25ae:	df 93       	push	r29
    25b0:	1a b1       	in	r17, 0x0a	; 10
    25b2:	57 98       	cbi	0x0a, 7	; 10
    25b4:	5a 98       	cbi	0x0b, 2	; 11
    25b6:	28 9a       	sbi	0x05, 0	; 5
    25b8:	c0 e0       	ldi	r28, 0x00	; 0
    25ba:	d0 e0       	ldi	r29, 0x00	; 0
    25bc:	0e 94 ca 12 	call	0x2594	; 0x2594 <delay_us.constprop.0>
    25c0:	5c 9a       	sbi	0x0b, 4	; 11
    25c2:	0e 94 ca 12 	call	0x2594	; 0x2594 <delay_us.constprop.0>
    25c6:	09 b1       	in	r16, 0x09	; 9
    25c8:	5c 98       	cbi	0x0b, 4	; 11
    25ca:	0e 94 ca 12 	call	0x2594	; 0x2594 <delay_us.constprop.0>
    25ce:	5c 9a       	sbi	0x0b, 4	; 11
    25d0:	0e 94 ca 12 	call	0x2594	; 0x2594 <delay_us.constprop.0>
    25d4:	5c 98       	cbi	0x0b, 4	; 11
    25d6:	24 96       	adiw	r28, 0x04	; 4
    25d8:	07 ff       	sbrs	r16, 7
    25da:	10 c0       	rjmp	.+32     	; 0x25fc <_ZN12OrangutanLCD8busyWaitEv+0x54>
    25dc:	ae 01       	movw	r20, r28
    25de:	60 e0       	ldi	r22, 0x00	; 0
    25e0:	70 e0       	ldi	r23, 0x00	; 0
    25e2:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <lcdTimeout>
    25e6:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <lcdTimeout+0x1>
    25ea:	a0 91 97 01 	lds	r26, 0x0197	; 0x800197 <lcdTimeout+0x2>
    25ee:	b0 91 98 01 	lds	r27, 0x0198	; 0x800198 <lcdTimeout+0x3>
    25f2:	48 17       	cp	r20, r24
    25f4:	59 07       	cpc	r21, r25
    25f6:	6a 07       	cpc	r22, r26
    25f8:	7b 07       	cpc	r23, r27
    25fa:	00 f3       	brcs	.-64     	; 0x25bc <_ZN12OrangutanLCD8busyWaitEv+0x14>
    25fc:	1a b9       	out	0x0a, r17	; 10
    25fe:	df 91       	pop	r29
    2600:	cf 91       	pop	r28
    2602:	1f 91       	pop	r17
    2604:	0f 91       	pop	r16
    2606:	08 95       	ret

00002608 <_ZN12OrangutanLCD8sendDataEh>:
    2608:	95 b1       	in	r25, 0x05	; 5
    260a:	28 2f       	mov	r18, r24
    260c:	21 70       	andi	r18, 0x01	; 1
    260e:	30 e0       	ldi	r19, 0x00	; 0
    2610:	22 0f       	add	r18, r18
    2612:	33 1f       	adc	r19, r19
    2614:	48 2f       	mov	r20, r24
    2616:	46 70       	andi	r20, 0x06	; 6
    2618:	68 e0       	ldi	r22, 0x08	; 8
    261a:	46 9f       	mul	r20, r22
    261c:	a0 01       	movw	r20, r0
    261e:	11 24       	eor	r1, r1
    2620:	24 2b       	or	r18, r20
    2622:	9d 7c       	andi	r25, 0xCD	; 205
    2624:	29 2b       	or	r18, r25
    2626:	25 b9       	out	0x05, r18	; 5
    2628:	9b b1       	in	r25, 0x0b	; 11
    262a:	88 70       	andi	r24, 0x08	; 8
    262c:	82 95       	swap	r24
    262e:	80 7f       	andi	r24, 0xF0	; 240
    2630:	9f 77       	andi	r25, 0x7F	; 127
    2632:	89 2b       	or	r24, r25
    2634:	8b b9       	out	0x0b, r24	; 11
    2636:	5c 9a       	sbi	0x0b, 4	; 11
    2638:	0e 94 ca 12 	call	0x2594	; 0x2594 <delay_us.constprop.0>
    263c:	5c 98       	cbi	0x0b, 4	; 11
    263e:	0e 94 ca 12 	call	0x2594	; 0x2594 <delay_us.constprop.0>
    2642:	08 95       	ret

00002644 <_ZN12OrangutanLCD4sendEhhh>:
    2644:	a0 e0       	ldi	r26, 0x00	; 0
    2646:	b0 e0       	ldi	r27, 0x00	; 0
    2648:	e8 e2       	ldi	r30, 0x28	; 40
    264a:	f3 e1       	ldi	r31, 0x13	; 19
    264c:	0c 94 66 1d 	jmp	0x3acc	; 0x3acc <__prologue_saves__+0x16>
    2650:	c8 2f       	mov	r28, r24
    2652:	d6 2e       	mov	r13, r22
    2654:	e4 2e       	mov	r14, r20
    2656:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <_ZZN12OrangutanLCD4initEvE11initialized>
    265a:	81 11       	cpse	r24, r1
    265c:	05 c0       	rjmp	.+10     	; 0x2668 <_ZN12OrangutanLCD4sendEhhh+0x24>
    265e:	81 e0       	ldi	r24, 0x01	; 1
    2660:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <_ZZN12OrangutanLCD4initEvE11initialized>
    2664:	0e 94 6b 13 	call	0x26d6	; 0x26d6 <_ZN12OrangutanLCD5init2Ev>
    2668:	0e 94 d4 12 	call	0x25a8	; 0x25a8 <_ZN12OrangutanLCD8busyWaitEv>
    266c:	14 b1       	in	r17, 0x04	; 4
    266e:	d5 b1       	in	r29, 0x05	; 5
    2670:	fa b0       	in	r15, 0x0a	; 10
    2672:	0b b1       	in	r16, 0x0b	; 11
    2674:	28 98       	cbi	0x05, 0	; 5
    2676:	dd 20       	and	r13, r13
    2678:	11 f0       	breq	.+4      	; 0x267e <_ZN12OrangutanLCD4sendEhhh+0x3a>
    267a:	5a 9a       	sbi	0x0b, 2	; 11
    267c:	01 c0       	rjmp	.+2      	; 0x2680 <_ZN12OrangutanLCD4sendEhhh+0x3c>
    267e:	5a 98       	cbi	0x0b, 2	; 11
    2680:	94 b1       	in	r25, 0x04	; 4
    2682:	92 63       	ori	r25, 0x32	; 50
    2684:	94 b9       	out	0x04, r25	; 4
    2686:	57 9a       	sbi	0x0a, 7	; 10
    2688:	81 e0       	ldi	r24, 0x01	; 1
    268a:	e8 16       	cp	r14, r24
    268c:	29 f0       	breq	.+10     	; 0x2698 <_ZN12OrangutanLCD4sendEhhh+0x54>
    268e:	8c 2f       	mov	r24, r28
    2690:	82 95       	swap	r24
    2692:	8f 70       	andi	r24, 0x0F	; 15
    2694:	0e 94 04 13 	call	0x2608	; 0x2608 <_ZN12OrangutanLCD8sendDataEh>
    2698:	8c 2f       	mov	r24, r28
    269a:	8f 70       	andi	r24, 0x0F	; 15
    269c:	0e 94 04 13 	call	0x2608	; 0x2608 <_ZN12OrangutanLCD8sendDataEh>
    26a0:	fa b8       	out	0x0a, r15	; 10
    26a2:	0b b9       	out	0x0b, r16	; 11
    26a4:	14 b9       	out	0x04, r17	; 4
    26a6:	d5 b9       	out	0x05, r29	; 5
    26a8:	cd b7       	in	r28, 0x3d	; 61
    26aa:	de b7       	in	r29, 0x3e	; 62
    26ac:	e7 e0       	ldi	r30, 0x07	; 7
    26ae:	0c 94 82 1d 	jmp	0x3b04	; 0x3b04 <__epilogue_restores__+0x16>

000026b2 <_ZN12OrangutanLCD8send_cmdEh>:
    26b2:	42 e0       	ldi	r20, 0x02	; 2
    26b4:	60 e0       	ldi	r22, 0x00	; 0
    26b6:	0e 94 22 13 	call	0x2644	; 0x2644 <_ZN12OrangutanLCD4sendEhhh>
    26ba:	08 95       	ret

000026bc <_ZN12OrangutanLCD9send_dataEh>:
    26bc:	42 e0       	ldi	r20, 0x02	; 2
    26be:	61 e0       	ldi	r22, 0x01	; 1
    26c0:	0e 94 22 13 	call	0x2644	; 0x2644 <_ZN12OrangutanLCD4sendEhhh>
    26c4:	08 95       	ret

000026c6 <print_character>:
    26c6:	0e 94 5e 13 	call	0x26bc	; 0x26bc <_ZN12OrangutanLCD9send_dataEh>
    26ca:	08 95       	ret

000026cc <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    26cc:	41 e0       	ldi	r20, 0x01	; 1
    26ce:	60 e0       	ldi	r22, 0x00	; 0
    26d0:	0e 94 22 13 	call	0x2644	; 0x2644 <_ZN12OrangutanLCD4sendEhhh>
    26d4:	08 95       	ret

000026d6 <_ZN12OrangutanLCD5init2Ev>:
    26d6:	80 e1       	ldi	r24, 0x10	; 16
    26d8:	97 e2       	ldi	r25, 0x27	; 39
    26da:	a0 e0       	ldi	r26, 0x00	; 0
    26dc:	b0 e0       	ldi	r27, 0x00	; 0
    26de:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <lcdTimeout>
    26e2:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <lcdTimeout+0x1>
    26e6:	a0 93 97 01 	sts	0x0197, r26	; 0x800197 <lcdTimeout+0x2>
    26ea:	b0 93 98 01 	sts	0x0198, r27	; 0x800198 <lcdTimeout+0x3>
    26ee:	52 9a       	sbi	0x0a, 2	; 10
    26f0:	20 9a       	sbi	0x04, 0	; 4
    26f2:	54 9a       	sbi	0x0a, 4	; 10
    26f4:	8e e1       	ldi	r24, 0x1E	; 30
    26f6:	90 e0       	ldi	r25, 0x00	; 0
    26f8:	0e 94 19 17 	call	0x2e32	; 0x2e32 <delay_ms>
    26fc:	83 e0       	ldi	r24, 0x03	; 3
    26fe:	0e 94 66 13 	call	0x26cc	; 0x26cc <_ZN12OrangutanLCD13send_4bit_cmdEh>
    2702:	86 e0       	ldi	r24, 0x06	; 6
    2704:	90 e0       	ldi	r25, 0x00	; 0
    2706:	0e 94 19 17 	call	0x2e32	; 0x2e32 <delay_ms>
    270a:	83 e0       	ldi	r24, 0x03	; 3
    270c:	0e 94 66 13 	call	0x26cc	; 0x26cc <_ZN12OrangutanLCD13send_4bit_cmdEh>
    2710:	82 e0       	ldi	r24, 0x02	; 2
    2712:	90 e0       	ldi	r25, 0x00	; 0
    2714:	0e 94 19 17 	call	0x2e32	; 0x2e32 <delay_ms>
    2718:	83 e0       	ldi	r24, 0x03	; 3
    271a:	0e 94 66 13 	call	0x26cc	; 0x26cc <_ZN12OrangutanLCD13send_4bit_cmdEh>
    271e:	82 e0       	ldi	r24, 0x02	; 2
    2720:	90 e0       	ldi	r25, 0x00	; 0
    2722:	0e 94 19 17 	call	0x2e32	; 0x2e32 <delay_ms>
    2726:	82 e0       	ldi	r24, 0x02	; 2
    2728:	0e 94 66 13 	call	0x26cc	; 0x26cc <_ZN12OrangutanLCD13send_4bit_cmdEh>
    272c:	82 e0       	ldi	r24, 0x02	; 2
    272e:	90 e0       	ldi	r25, 0x00	; 0
    2730:	0e 94 19 17 	call	0x2e32	; 0x2e32 <delay_ms>
    2734:	88 e2       	ldi	r24, 0x28	; 40
    2736:	0e 94 59 13 	call	0x26b2	; 0x26b2 <_ZN12OrangutanLCD8send_cmdEh>
    273a:	88 e0       	ldi	r24, 0x08	; 8
    273c:	0e 94 59 13 	call	0x26b2	; 0x26b2 <_ZN12OrangutanLCD8send_cmdEh>
    2740:	81 e0       	ldi	r24, 0x01	; 1
    2742:	0e 94 59 13 	call	0x26b2	; 0x26b2 <_ZN12OrangutanLCD8send_cmdEh>
    2746:	86 e0       	ldi	r24, 0x06	; 6
    2748:	0e 94 59 13 	call	0x26b2	; 0x26b2 <_ZN12OrangutanLCD8send_cmdEh>
    274c:	8c e0       	ldi	r24, 0x0C	; 12
    274e:	0e 94 59 13 	call	0x26b2	; 0x26b2 <_ZN12OrangutanLCD8send_cmdEh>
    2752:	08 95       	ret

00002754 <_ZN12OrangutanLCD5clearEv>:
    2754:	81 e0       	ldi	r24, 0x01	; 1
    2756:	0e 94 59 13 	call	0x26b2	; 0x26b2 <_ZN12OrangutanLCD8send_cmdEh>
    275a:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <printf_chars>
    275e:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <printf_chars+0x1>
    2762:	89 2b       	or	r24, r25
    2764:	f9 f0       	breq	.+62     	; 0x27a4 <_ZN12OrangutanLCD5clearEv+0x50>
    2766:	60 e0       	ldi	r22, 0x00	; 0
    2768:	a0 e2       	ldi	r26, 0x20	; 32
    276a:	26 2f       	mov	r18, r22
    276c:	30 e0       	ldi	r19, 0x00	; 0
    276e:	70 91 0c 01 	lds	r23, 0x010C	; 0x80010c <numLCDCols>
    2772:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <numLCDRows>
    2776:	90 e0       	ldi	r25, 0x00	; 0
    2778:	01 97       	sbiw	r24, 0x01	; 1
    277a:	78 9f       	mul	r23, r24
    277c:	a0 01       	movw	r20, r0
    277e:	79 9f       	mul	r23, r25
    2780:	50 0d       	add	r21, r0
    2782:	11 24       	eor	r1, r1
    2784:	24 17       	cp	r18, r20
    2786:	35 07       	cpc	r19, r21
    2788:	4c f4       	brge	.+18     	; 0x279c <_ZN12OrangutanLCD5clearEv+0x48>
    278a:	e0 91 9b 01 	lds	r30, 0x019B	; 0x80019b <printf_chars>
    278e:	f0 91 9c 01 	lds	r31, 0x019C	; 0x80019c <printf_chars+0x1>
    2792:	e2 0f       	add	r30, r18
    2794:	f3 1f       	adc	r31, r19
    2796:	a0 83       	st	Z, r26
    2798:	6f 5f       	subi	r22, 0xFF	; 255
    279a:	e7 cf       	rjmp	.-50     	; 0x276a <_ZN12OrangutanLCD5clearEv+0x16>
    279c:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <col>
    27a0:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <row>
    27a4:	08 95       	ret

000027a6 <clear>:
    27a6:	0e 94 aa 13 	call	0x2754	; 0x2754 <_ZN12OrangutanLCD5clearEv>
    27aa:	08 95       	ret

000027ac <_ZN12OrangutanLCD5printEPKc>:
    27ac:	cf 93       	push	r28
    27ae:	df 93       	push	r29
    27b0:	ec 01       	movw	r28, r24
    27b2:	89 91       	ld	r24, Y+
    27b4:	88 23       	and	r24, r24
    27b6:	19 f0       	breq	.+6      	; 0x27be <_ZN12OrangutanLCD5printEPKc+0x12>
    27b8:	0e 94 5e 13 	call	0x26bc	; 0x26bc <_ZN12OrangutanLCD9send_dataEh>
    27bc:	fa cf       	rjmp	.-12     	; 0x27b2 <_ZN12OrangutanLCD5printEPKc+0x6>
    27be:	df 91       	pop	r29
    27c0:	cf 91       	pop	r28
    27c2:	08 95       	ret

000027c4 <print>:
    27c4:	0e 94 d6 13 	call	0x27ac	; 0x27ac <_ZN12OrangutanLCD5printEPKc>
    27c8:	08 95       	ret

000027ca <_ZN12OrangutanLCD5printEm>:
    27ca:	aa e0       	ldi	r26, 0x0A	; 10
    27cc:	b0 e0       	ldi	r27, 0x00	; 0
    27ce:	eb ee       	ldi	r30, 0xEB	; 235
    27d0:	f3 e1       	ldi	r31, 0x13	; 19
    27d2:	0c 94 65 1d 	jmp	0x3aca	; 0x3aca <__prologue_saves__+0x14>
    27d6:	1a e0       	ldi	r17, 0x0A	; 10
    27d8:	5a e0       	ldi	r21, 0x0A	; 10
    27da:	c5 2e       	mov	r12, r21
    27dc:	d1 2c       	mov	r13, r1
    27de:	e1 2c       	mov	r14, r1
    27e0:	f1 2c       	mov	r15, r1
    27e2:	06 2f       	mov	r16, r22
    27e4:	a7 01       	movw	r20, r14
    27e6:	96 01       	movw	r18, r12
    27e8:	0e 94 f2 1c 	call	0x39e4	; 0x39e4 <__udivmodsi4>
    27ec:	ca 01       	movw	r24, r20
    27ee:	b9 01       	movw	r22, r18
    27f0:	11 50       	subi	r17, 0x01	; 1
    27f2:	e1 e0       	ldi	r30, 0x01	; 1
    27f4:	f0 e0       	ldi	r31, 0x00	; 0
    27f6:	ec 0f       	add	r30, r28
    27f8:	fd 1f       	adc	r31, r29
    27fa:	e1 0f       	add	r30, r17
    27fc:	f1 1d       	adc	r31, r1
    27fe:	00 5d       	subi	r16, 0xD0	; 208
    2800:	2a e0       	ldi	r18, 0x0A	; 10
    2802:	62 9f       	mul	r22, r18
    2804:	00 19       	sub	r16, r0
    2806:	11 24       	eor	r1, r1
    2808:	00 83       	st	Z, r16
    280a:	61 15       	cp	r22, r1
    280c:	71 05       	cpc	r23, r1
    280e:	81 05       	cpc	r24, r1
    2810:	91 05       	cpc	r25, r1
    2812:	39 f7       	brne	.-50     	; 0x27e2 <_ZN12OrangutanLCD5printEm+0x18>
    2814:	1a 30       	cpi	r17, 0x0A	; 10
    2816:	58 f4       	brcc	.+22     	; 0x282e <_ZN12OrangutanLCD5printEm+0x64>
    2818:	e1 e0       	ldi	r30, 0x01	; 1
    281a:	f0 e0       	ldi	r31, 0x00	; 0
    281c:	ec 0f       	add	r30, r28
    281e:	fd 1f       	adc	r31, r29
    2820:	e1 0f       	add	r30, r17
    2822:	f1 1d       	adc	r31, r1
    2824:	80 81       	ld	r24, Z
    2826:	0e 94 5e 13 	call	0x26bc	; 0x26bc <_ZN12OrangutanLCD9send_dataEh>
    282a:	1f 5f       	subi	r17, 0xFF	; 255
    282c:	f3 cf       	rjmp	.-26     	; 0x2814 <_ZN12OrangutanLCD5printEm+0x4a>
    282e:	2a 96       	adiw	r28, 0x0a	; 10
    2830:	e8 e0       	ldi	r30, 0x08	; 8
    2832:	0c 94 81 1d 	jmp	0x3b02	; 0x3b02 <__epilogue_restores__+0x14>

00002836 <_ZN12OrangutanLCD5printEl>:
    2836:	cf 92       	push	r12
    2838:	df 92       	push	r13
    283a:	ef 92       	push	r14
    283c:	ff 92       	push	r15
    283e:	6b 01       	movw	r12, r22
    2840:	7c 01       	movw	r14, r24
    2842:	97 ff       	sbrs	r25, 7
    2844:	0b c0       	rjmp	.+22     	; 0x285c <_ZN12OrangutanLCD5printEl+0x26>
    2846:	f0 94       	com	r15
    2848:	e0 94       	com	r14
    284a:	d0 94       	com	r13
    284c:	c0 94       	com	r12
    284e:	c1 1c       	adc	r12, r1
    2850:	d1 1c       	adc	r13, r1
    2852:	e1 1c       	adc	r14, r1
    2854:	f1 1c       	adc	r15, r1
    2856:	8d e2       	ldi	r24, 0x2D	; 45
    2858:	0e 94 5e 13 	call	0x26bc	; 0x26bc <_ZN12OrangutanLCD9send_dataEh>
    285c:	c7 01       	movw	r24, r14
    285e:	b6 01       	movw	r22, r12
    2860:	0e 94 e5 13 	call	0x27ca	; 0x27ca <_ZN12OrangutanLCD5printEm>
    2864:	ff 90       	pop	r15
    2866:	ef 90       	pop	r14
    2868:	df 90       	pop	r13
    286a:	cf 90       	pop	r12
    286c:	08 95       	ret

0000286e <print_long>:
    286e:	0e 94 1b 14 	call	0x2836	; 0x2836 <_ZN12OrangutanLCD5printEl>
    2872:	08 95       	ret

00002874 <_ZN12OrangutanLCD6gotoXYEhh>:
    2874:	a5 e0       	ldi	r26, 0x05	; 5
    2876:	b0 e0       	ldi	r27, 0x00	; 0
    2878:	e0 e4       	ldi	r30, 0x40	; 64
    287a:	f4 e1       	ldi	r31, 0x14	; 20
    287c:	0c 94 6a 1d 	jmp	0x3ad4	; 0x3ad4 <__prologue_saves__+0x1e>
    2880:	18 2f       	mov	r17, r24
    2882:	80 e8       	ldi	r24, 0x80	; 128
    2884:	89 83       	std	Y+1, r24	; 0x01
    2886:	80 ec       	ldi	r24, 0xC0	; 192
    2888:	8a 83       	std	Y+2, r24	; 0x02
    288a:	84 e9       	ldi	r24, 0x94	; 148
    288c:	8b 83       	std	Y+3, r24	; 0x03
    288e:	84 ed       	ldi	r24, 0xD4	; 212
    2890:	8c 83       	std	Y+4, r24	; 0x04
    2892:	fe 01       	movw	r30, r28
    2894:	e6 0f       	add	r30, r22
    2896:	f1 1d       	adc	r31, r1
    2898:	81 81       	ldd	r24, Z+1	; 0x01
    289a:	81 0f       	add	r24, r17
    289c:	6d 83       	std	Y+5, r22	; 0x05
    289e:	0e 94 59 13 	call	0x26b2	; 0x26b2 <_ZN12OrangutanLCD8send_cmdEh>
    28a2:	10 93 99 01 	sts	0x0199, r17	; 0x800199 <col>
    28a6:	6d 81       	ldd	r22, Y+5	; 0x05
    28a8:	60 93 9a 01 	sts	0x019A, r22	; 0x80019a <row>
    28ac:	25 96       	adiw	r28, 0x05	; 5
    28ae:	e3 e0       	ldi	r30, 0x03	; 3
    28b0:	0c 94 86 1d 	jmp	0x3b0c	; 0x3b0c <__epilogue_restores__+0x1e>

000028b4 <lcd_goto_xy>:
    28b4:	0e 94 3a 14 	call	0x2874	; 0x2874 <_ZN12OrangutanLCD6gotoXYEhh>
    28b8:	08 95       	ret

000028ba <_ZN16OrangutanDigital9setOutputEhh>:
    28ba:	88 30       	cpi	r24, 0x08	; 8
    28bc:	58 f4       	brcc	.+22     	; 0x28d4 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    28be:	91 e0       	ldi	r25, 0x01	; 1
    28c0:	01 c0       	rjmp	.+2      	; 0x28c4 <_ZN16OrangutanDigital9setOutputEhh+0xa>
    28c2:	99 0f       	add	r25, r25
    28c4:	8a 95       	dec	r24
    28c6:	ea f7       	brpl	.-6      	; 0x28c2 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    28c8:	89 2f       	mov	r24, r25
    28ca:	aa e2       	ldi	r26, 0x2A	; 42
    28cc:	b0 e0       	ldi	r27, 0x00	; 0
    28ce:	eb e2       	ldi	r30, 0x2B	; 43
    28d0:	f0 e0       	ldi	r31, 0x00	; 0
    28d2:	21 c0       	rjmp	.+66     	; 0x2916 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    28d4:	8e 30       	cpi	r24, 0x0E	; 14
    28d6:	60 f4       	brcc	.+24     	; 0x28f0 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    28d8:	98 ef       	ldi	r25, 0xF8	; 248
    28da:	98 0f       	add	r25, r24
    28dc:	81 e0       	ldi	r24, 0x01	; 1
    28de:	01 c0       	rjmp	.+2      	; 0x28e2 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    28e0:	88 0f       	add	r24, r24
    28e2:	9a 95       	dec	r25
    28e4:	ea f7       	brpl	.-6      	; 0x28e0 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    28e6:	a4 e2       	ldi	r26, 0x24	; 36
    28e8:	b0 e0       	ldi	r27, 0x00	; 0
    28ea:	e5 e2       	ldi	r30, 0x25	; 37
    28ec:	f0 e0       	ldi	r31, 0x00	; 0
    28ee:	13 c0       	rjmp	.+38     	; 0x2916 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    28f0:	85 31       	cpi	r24, 0x15	; 21
    28f2:	60 f4       	brcc	.+24     	; 0x290c <_ZN16OrangutanDigital9setOutputEhh+0x52>
    28f4:	92 ef       	ldi	r25, 0xF2	; 242
    28f6:	98 0f       	add	r25, r24
    28f8:	81 e0       	ldi	r24, 0x01	; 1
    28fa:	01 c0       	rjmp	.+2      	; 0x28fe <_ZN16OrangutanDigital9setOutputEhh+0x44>
    28fc:	88 0f       	add	r24, r24
    28fe:	9a 95       	dec	r25
    2900:	ea f7       	brpl	.-6      	; 0x28fc <_ZN16OrangutanDigital9setOutputEhh+0x42>
    2902:	a7 e2       	ldi	r26, 0x27	; 39
    2904:	b0 e0       	ldi	r27, 0x00	; 0
    2906:	e8 e2       	ldi	r30, 0x28	; 40
    2908:	f0 e0       	ldi	r31, 0x00	; 0
    290a:	05 c0       	rjmp	.+10     	; 0x2916 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    290c:	80 e0       	ldi	r24, 0x00	; 0
    290e:	a0 e0       	ldi	r26, 0x00	; 0
    2910:	b0 e0       	ldi	r27, 0x00	; 0
    2912:	e0 e0       	ldi	r30, 0x00	; 0
    2914:	f0 e0       	ldi	r31, 0x00	; 0
    2916:	6f 3f       	cpi	r22, 0xFF	; 255
    2918:	19 f4       	brne	.+6      	; 0x2920 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    291a:	90 81       	ld	r25, Z
    291c:	98 27       	eor	r25, r24
    291e:	09 c0       	rjmp	.+18     	; 0x2932 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    2920:	66 23       	and	r22, r22
    2922:	19 f0       	breq	.+6      	; 0x292a <_ZN16OrangutanDigital9setOutputEhh+0x70>
    2924:	90 81       	ld	r25, Z
    2926:	98 2b       	or	r25, r24
    2928:	04 c0       	rjmp	.+8      	; 0x2932 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    292a:	20 81       	ld	r18, Z
    292c:	98 2f       	mov	r25, r24
    292e:	90 95       	com	r25
    2930:	92 23       	and	r25, r18
    2932:	90 83       	st	Z, r25
    2934:	9c 91       	ld	r25, X
    2936:	98 2b       	or	r25, r24
    2938:	9c 93       	st	X, r25
    293a:	08 95       	ret

0000293c <_ZN15OrangutanMotors5init2Ev>:
    293c:	83 ef       	ldi	r24, 0xF3	; 243
    293e:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2942:	84 bd       	out	0x24, r24	; 36
    2944:	82 e0       	ldi	r24, 0x02	; 2
    2946:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    294a:	85 bd       	out	0x25, r24	; 37
    294c:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    2950:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    2954:	18 bc       	out	0x28, r1	; 40
    2956:	17 bc       	out	0x27, r1	; 39
    2958:	60 e0       	ldi	r22, 0x00	; 0
    295a:	86 e0       	ldi	r24, 0x06	; 6
    295c:	0e 94 5d 14 	call	0x28ba	; 0x28ba <_ZN16OrangutanDigital9setOutputEhh>
    2960:	60 e0       	ldi	r22, 0x00	; 0
    2962:	85 e0       	ldi	r24, 0x05	; 5
    2964:	0e 94 5d 14 	call	0x28ba	; 0x28ba <_ZN16OrangutanDigital9setOutputEhh>
    2968:	60 e0       	ldi	r22, 0x00	; 0
    296a:	8b e0       	ldi	r24, 0x0B	; 11
    296c:	0e 94 5d 14 	call	0x28ba	; 0x28ba <_ZN16OrangutanDigital9setOutputEhh>
    2970:	60 e0       	ldi	r22, 0x00	; 0
    2972:	83 e0       	ldi	r24, 0x03	; 3
    2974:	0e 94 5d 14 	call	0x28ba	; 0x28ba <_ZN16OrangutanDigital9setOutputEhh>
    2978:	08 95       	ret

0000297a <_ZN15OrangutanMotors4initEv>:
    297a:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <_ZZN15OrangutanMotors4initEvE11initialized>
    297e:	81 11       	cpse	r24, r1
    2980:	05 c0       	rjmp	.+10     	; 0x298c <_ZN15OrangutanMotors4initEv+0x12>
    2982:	81 e0       	ldi	r24, 0x01	; 1
    2984:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <_ZZN15OrangutanMotors4initEvE11initialized>
    2988:	0e 94 9e 14 	call	0x293c	; 0x293c <_ZN15OrangutanMotors5init2Ev>
    298c:	08 95       	ret

0000298e <_ZN15OrangutanMotors10setM1SpeedEi>:
    298e:	cf 93       	push	r28
    2990:	df 93       	push	r29
    2992:	ec 01       	movw	r28, r24
    2994:	0e 94 bd 14 	call	0x297a	; 0x297a <_ZN15OrangutanMotors4initEv>
    2998:	d7 ff       	sbrs	r29, 7
    299a:	05 c0       	rjmp	.+10     	; 0x29a6 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    299c:	d1 95       	neg	r29
    299e:	c1 95       	neg	r28
    29a0:	d1 09       	sbc	r29, r1
    29a2:	81 e0       	ldi	r24, 0x01	; 1
    29a4:	01 c0       	rjmp	.+2      	; 0x29a8 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    29a6:	80 e0       	ldi	r24, 0x00	; 0
    29a8:	cf 3f       	cpi	r28, 0xFF	; 255
    29aa:	d1 05       	cpc	r29, r1
    29ac:	19 f0       	breq	.+6      	; 0x29b4 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    29ae:	14 f0       	brlt	.+4      	; 0x29b4 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    29b0:	cf ef       	ldi	r28, 0xFF	; 255
    29b2:	d0 e0       	ldi	r29, 0x00	; 0
    29b4:	88 23       	and	r24, r24
    29b6:	19 f0       	breq	.+6      	; 0x29be <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    29b8:	18 bc       	out	0x28, r1	; 40
    29ba:	c7 bd       	out	0x27, r28	; 39
    29bc:	02 c0       	rjmp	.+4      	; 0x29c2 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    29be:	c8 bd       	out	0x28, r28	; 40
    29c0:	17 bc       	out	0x27, r1	; 39
    29c2:	df 91       	pop	r29
    29c4:	cf 91       	pop	r28
    29c6:	08 95       	ret

000029c8 <_ZN15OrangutanMotors10setM2SpeedEi>:
    29c8:	cf 93       	push	r28
    29ca:	df 93       	push	r29
    29cc:	ec 01       	movw	r28, r24
    29ce:	0e 94 bd 14 	call	0x297a	; 0x297a <_ZN15OrangutanMotors4initEv>
    29d2:	d7 ff       	sbrs	r29, 7
    29d4:	05 c0       	rjmp	.+10     	; 0x29e0 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    29d6:	d1 95       	neg	r29
    29d8:	c1 95       	neg	r28
    29da:	d1 09       	sbc	r29, r1
    29dc:	81 e0       	ldi	r24, 0x01	; 1
    29de:	01 c0       	rjmp	.+2      	; 0x29e2 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    29e0:	80 e0       	ldi	r24, 0x00	; 0
    29e2:	cf 3f       	cpi	r28, 0xFF	; 255
    29e4:	d1 05       	cpc	r29, r1
    29e6:	19 f0       	breq	.+6      	; 0x29ee <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    29e8:	14 f0       	brlt	.+4      	; 0x29ee <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    29ea:	cf ef       	ldi	r28, 0xFF	; 255
    29ec:	d0 e0       	ldi	r29, 0x00	; 0
    29ee:	88 23       	and	r24, r24
    29f0:	29 f0       	breq	.+10     	; 0x29fc <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    29f2:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    29f6:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    29fa:	04 c0       	rjmp	.+8      	; 0x2a04 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    29fc:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    2a00:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    2a04:	df 91       	pop	r29
    2a06:	cf 91       	pop	r28
    2a08:	08 95       	ret

00002a0a <_ZN15OrangutanMotors9setSpeedsEii>:
    2a0a:	cf 93       	push	r28
    2a0c:	df 93       	push	r29
    2a0e:	eb 01       	movw	r28, r22
    2a10:	0e 94 c7 14 	call	0x298e	; 0x298e <_ZN15OrangutanMotors10setM1SpeedEi>
    2a14:	ce 01       	movw	r24, r28
    2a16:	0e 94 e4 14 	call	0x29c8	; 0x29c8 <_ZN15OrangutanMotors10setM2SpeedEi>
    2a1a:	df 91       	pop	r29
    2a1c:	cf 91       	pop	r28
    2a1e:	08 95       	ret

00002a20 <set_motors>:
    2a20:	0e 94 05 15 	call	0x2a0a	; 0x2a0a <_ZN15OrangutanMotors9setSpeedsEii>
    2a24:	08 95       	ret

00002a26 <_ZN20OrangutanPushbuttons5init2Ev>:
    2a26:	84 b1       	in	r24, 0x04	; 4
    2a28:	8d 7c       	andi	r24, 0xCD	; 205
    2a2a:	84 b9       	out	0x04, r24	; 4
    2a2c:	85 b1       	in	r24, 0x05	; 5
    2a2e:	82 63       	ori	r24, 0x32	; 50
    2a30:	85 b9       	out	0x05, r24	; 5
    2a32:	85 e0       	ldi	r24, 0x05	; 5
    2a34:	90 e0       	ldi	r25, 0x00	; 0
    2a36:	6f 93       	push	r22
    2a38:	64 e0       	ldi	r22, 0x04	; 4
    2a3a:	6a 95       	dec	r22
    2a3c:	f1 f7       	brne	.-4      	; 0x2a3a <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    2a3e:	6f 91       	pop	r22
    2a40:	01 97       	sbiw	r24, 0x01	; 1
    2a42:	c9 f7       	brne	.-14     	; 0x2a36 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    2a44:	08 95       	ret

00002a46 <_ZN20OrangutanPushbuttons4initEv>:
    2a46:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    2a4a:	81 11       	cpse	r24, r1
    2a4c:	05 c0       	rjmp	.+10     	; 0x2a58 <_ZN20OrangutanPushbuttons4initEv+0x12>
    2a4e:	81 e0       	ldi	r24, 0x01	; 1
    2a50:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    2a54:	0e 94 13 15 	call	0x2a26	; 0x2a26 <_ZN20OrangutanPushbuttons5init2Ev>
    2a58:	08 95       	ret

00002a5a <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    2a5a:	cf 93       	push	r28
    2a5c:	c8 2f       	mov	r28, r24
    2a5e:	0e 94 23 15 	call	0x2a46	; 0x2a46 <_ZN20OrangutanPushbuttons4initEv>
    2a62:	83 b1       	in	r24, 0x03	; 3
    2a64:	8c 23       	and	r24, r28
    2a66:	e9 f3       	breq	.-6      	; 0x2a62 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    2a68:	8a e0       	ldi	r24, 0x0A	; 10
    2a6a:	90 e0       	ldi	r25, 0x00	; 0
    2a6c:	0e 94 19 17 	call	0x2e32	; 0x2e32 <delay_ms>
    2a70:	83 b1       	in	r24, 0x03	; 3
    2a72:	8c 23       	and	r24, r28
    2a74:	b1 f3       	breq	.-20     	; 0x2a62 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    2a76:	83 b1       	in	r24, 0x03	; 3
    2a78:	8c 23       	and	r24, r28
    2a7a:	cf 91       	pop	r28
    2a7c:	08 95       	ret

00002a7e <wait_for_button_release>:
    2a7e:	0e 94 2d 15 	call	0x2a5a	; 0x2a5a <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    2a82:	08 95       	ret

00002a84 <_ZN20OrangutanPushbuttons9isPressedEh>:
    2a84:	a1 e0       	ldi	r26, 0x01	; 1
    2a86:	b0 e0       	ldi	r27, 0x00	; 0
    2a88:	e8 e4       	ldi	r30, 0x48	; 72
    2a8a:	f5 e1       	ldi	r31, 0x15	; 21
    2a8c:	0c 94 6b 1d 	jmp	0x3ad6	; 0x3ad6 <__prologue_saves__+0x20>
    2a90:	89 83       	std	Y+1, r24	; 0x01
    2a92:	0e 94 23 15 	call	0x2a46	; 0x2a46 <_ZN20OrangutanPushbuttons4initEv>
    2a96:	93 b1       	in	r25, 0x03	; 3
    2a98:	90 95       	com	r25
    2a9a:	89 81       	ldd	r24, Y+1	; 0x01
    2a9c:	89 23       	and	r24, r25
    2a9e:	21 96       	adiw	r28, 0x01	; 1
    2aa0:	e2 e0       	ldi	r30, 0x02	; 2
    2aa2:	0c 94 87 1d 	jmp	0x3b0e	; 0x3b0e <__epilogue_restores__+0x20>

00002aa6 <button_is_pressed>:
    2aa6:	0e 94 42 15 	call	0x2a84	; 0x2a84 <_ZN20OrangutanPushbuttons9isPressedEh>
    2aaa:	08 95       	ret

00002aac <serial_receive_buffer_full>:
    2aac:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <_ZN15OrangutanSerial5portsE+0x2>
    2ab0:	81 e0       	ldi	r24, 0x01	; 1
    2ab2:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <_ZN15OrangutanSerial5portsE+0x4>
    2ab6:	29 13       	cpse	r18, r25
    2ab8:	80 e0       	ldi	r24, 0x00	; 0
    2aba:	08 95       	ret

00002abc <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
    2abc:	28 2f       	mov	r18, r24
    2abe:	30 e0       	ldi	r19, 0x00	; 0
    2ac0:	9a e0       	ldi	r25, 0x0A	; 10
    2ac2:	89 9f       	mul	r24, r25
    2ac4:	f0 01       	movw	r30, r0
    2ac6:	11 24       	eor	r1, r1
    2ac8:	e3 56       	subi	r30, 0x63	; 99
    2aca:	fe 4f       	sbci	r31, 0xFE	; 254
    2acc:	80 85       	ldd	r24, Z+8	; 0x08
    2ace:	91 85       	ldd	r25, Z+9	; 0x09
    2ad0:	00 97       	sbiw	r24, 0x00	; 0
    2ad2:	21 f0       	breq	.+8      	; 0x2adc <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    2ad4:	52 81       	ldd	r21, Z+2	; 0x02
    2ad6:	44 81       	ldd	r20, Z+4	; 0x04
    2ad8:	54 17       	cp	r21, r20
    2ada:	80 f0       	brcs	.+32     	; 0x2afc <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x40>
    2adc:	8a e0       	ldi	r24, 0x0A	; 10
    2ade:	82 9f       	mul	r24, r18
    2ae0:	f0 01       	movw	r30, r0
    2ae2:	83 9f       	mul	r24, r19
    2ae4:	f0 0d       	add	r31, r0
    2ae6:	11 24       	eor	r1, r1
    2ae8:	e3 56       	subi	r30, 0x63	; 99
    2aea:	fe 4f       	sbci	r31, 0xFE	; 254
    2aec:	92 81       	ldd	r25, Z+2	; 0x02
    2aee:	84 81       	ldd	r24, Z+4	; 0x04
    2af0:	98 13       	cpse	r25, r24
    2af2:	0e c0       	rjmp	.+28     	; 0x2b10 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x54>
    2af4:	85 81       	ldd	r24, Z+5	; 0x05
    2af6:	81 11       	cpse	r24, r1
    2af8:	0a c0       	rjmp	.+20     	; 0x2b0e <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
    2afa:	08 95       	ret
    2afc:	42 81       	ldd	r20, Z+2	; 0x02
    2afe:	dc 01       	movw	r26, r24
    2b00:	a4 0f       	add	r26, r20
    2b02:	b1 1d       	adc	r27, r1
    2b04:	6c 93       	st	X, r22
    2b06:	82 81       	ldd	r24, Z+2	; 0x02
    2b08:	8f 5f       	subi	r24, 0xFF	; 255
    2b0a:	82 83       	std	Z+2, r24	; 0x02
    2b0c:	e7 cf       	rjmp	.-50     	; 0x2adc <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    2b0e:	12 82       	std	Z+2, r1	; 0x02
    2b10:	08 95       	ret

00002b12 <_ZN15OrangutanSerial15serial_rx_checkEh>:
    2b12:	cf 93       	push	r28
    2b14:	df 93       	push	r29
    2b16:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b1a:	9f 77       	andi	r25, 0x7F	; 127
    2b1c:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b20:	c8 2f       	mov	r28, r24
    2b22:	d0 e0       	ldi	r29, 0x00	; 0
    2b24:	9a e0       	ldi	r25, 0x0A	; 10
    2b26:	89 9f       	mul	r24, r25
    2b28:	f0 01       	movw	r30, r0
    2b2a:	11 24       	eor	r1, r1
    2b2c:	e3 56       	subi	r30, 0x63	; 99
    2b2e:	fe 4f       	sbci	r31, 0xFE	; 254
    2b30:	20 85       	ldd	r18, Z+8	; 0x08
    2b32:	31 85       	ldd	r19, Z+9	; 0x09
    2b34:	23 2b       	or	r18, r19
    2b36:	41 f0       	breq	.+16     	; 0x2b48 <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2b38:	22 81       	ldd	r18, Z+2	; 0x02
    2b3a:	94 81       	ldd	r25, Z+4	; 0x04
    2b3c:	29 17       	cp	r18, r25
    2b3e:	20 f4       	brcc	.+8      	; 0x2b48 <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2b40:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2b44:	97 fd       	sbrc	r25, 7
    2b46:	11 c0       	rjmp	.+34     	; 0x2b6a <_ZN15OrangutanSerial15serial_rx_checkEh+0x58>
    2b48:	8a e0       	ldi	r24, 0x0A	; 10
    2b4a:	8c 9f       	mul	r24, r28
    2b4c:	f0 01       	movw	r30, r0
    2b4e:	8d 9f       	mul	r24, r29
    2b50:	f0 0d       	add	r31, r0
    2b52:	11 24       	eor	r1, r1
    2b54:	e3 56       	subi	r30, 0x63	; 99
    2b56:	fe 4f       	sbci	r31, 0xFE	; 254
    2b58:	80 81       	ld	r24, Z
    2b5a:	81 11       	cpse	r24, r1
    2b5c:	0b c0       	rjmp	.+22     	; 0x2b74 <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    2b5e:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b62:	80 68       	ori	r24, 0x80	; 128
    2b64:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b68:	05 c0       	rjmp	.+10     	; 0x2b74 <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    2b6a:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2b6e:	0e 94 5e 15 	call	0x2abc	; 0x2abc <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    2b72:	ea cf       	rjmp	.-44     	; 0x2b48 <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2b74:	df 91       	pop	r29
    2b76:	cf 91       	pop	r28
    2b78:	08 95       	ret

00002b7a <_ZN15OrangutanSerial14receive_inlineEhPchh>:
    2b7a:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b7e:	9f 77       	andi	r25, 0x7F	; 127
    2b80:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b84:	9a e0       	ldi	r25, 0x0A	; 10
    2b86:	89 9f       	mul	r24, r25
    2b88:	f0 01       	movw	r30, r0
    2b8a:	11 24       	eor	r1, r1
    2b8c:	e3 56       	subi	r30, 0x63	; 99
    2b8e:	fe 4f       	sbci	r31, 0xFE	; 254
    2b90:	71 87       	std	Z+9, r23	; 0x09
    2b92:	60 87       	std	Z+8, r22	; 0x08
    2b94:	12 82       	std	Z+2, r1	; 0x02
    2b96:	44 83       	std	Z+4, r20	; 0x04
    2b98:	25 83       	std	Z+5, r18	; 0x05
    2b9a:	80 81       	ld	r24, Z
    2b9c:	81 11       	cpse	r24, r1
    2b9e:	05 c0       	rjmp	.+10     	; 0x2baa <_ZN15OrangutanSerial14receive_inlineEhPchh+0x30>
    2ba0:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2ba4:	80 68       	ori	r24, 0x80	; 128
    2ba6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2baa:	08 95       	ret

00002bac <_ZN15OrangutanSerial7receiveEPch>:
    2bac:	46 2f       	mov	r20, r22
    2bae:	20 e0       	ldi	r18, 0x00	; 0
    2bb0:	bc 01       	movw	r22, r24
    2bb2:	80 e0       	ldi	r24, 0x00	; 0
    2bb4:	0e 94 bd 15 	call	0x2b7a	; 0x2b7a <_ZN15OrangutanSerial14receive_inlineEhPchh>
    2bb8:	08 95       	ret

00002bba <serial_receive>:
    2bba:	0e 94 d6 15 	call	0x2bac	; 0x2bac <_ZN15OrangutanSerial7receiveEPch>
    2bbe:	08 95       	ret

00002bc0 <__vector_18>:
    2bc0:	1f 92       	push	r1
    2bc2:	0f 92       	push	r0
    2bc4:	0f b6       	in	r0, 0x3f	; 63
    2bc6:	0f 92       	push	r0
    2bc8:	11 24       	eor	r1, r1
    2bca:	2f 93       	push	r18
    2bcc:	3f 93       	push	r19
    2bce:	4f 93       	push	r20
    2bd0:	5f 93       	push	r21
    2bd2:	6f 93       	push	r22
    2bd4:	7f 93       	push	r23
    2bd6:	8f 93       	push	r24
    2bd8:	9f 93       	push	r25
    2bda:	af 93       	push	r26
    2bdc:	bf 93       	push	r27
    2bde:	ef 93       	push	r30
    2be0:	ff 93       	push	r31
    2be2:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2be6:	80 e0       	ldi	r24, 0x00	; 0
    2be8:	0e 94 5e 15 	call	0x2abc	; 0x2abc <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    2bec:	ff 91       	pop	r31
    2bee:	ef 91       	pop	r30
    2bf0:	bf 91       	pop	r27
    2bf2:	af 91       	pop	r26
    2bf4:	9f 91       	pop	r25
    2bf6:	8f 91       	pop	r24
    2bf8:	7f 91       	pop	r23
    2bfa:	6f 91       	pop	r22
    2bfc:	5f 91       	pop	r21
    2bfe:	4f 91       	pop	r20
    2c00:	3f 91       	pop	r19
    2c02:	2f 91       	pop	r18
    2c04:	0f 90       	pop	r0
    2c06:	0f be       	out	0x3f, r0	; 63
    2c08:	0f 90       	pop	r0
    2c0a:	1f 90       	pop	r1
    2c0c:	18 95       	reti

00002c0e <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    2c0e:	9a e0       	ldi	r25, 0x0A	; 10
    2c10:	89 9f       	mul	r24, r25
    2c12:	f0 01       	movw	r30, r0
    2c14:	11 24       	eor	r1, r1
    2c16:	e3 56       	subi	r30, 0x63	; 99
    2c18:	fe 4f       	sbci	r31, 0xFE	; 254
    2c1a:	86 81       	ldd	r24, Z+6	; 0x06
    2c1c:	97 81       	ldd	r25, Z+7	; 0x07
    2c1e:	89 2b       	or	r24, r25
    2c20:	59 f0       	breq	.+22     	; 0x2c38 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2c22:	91 81       	ldd	r25, Z+1	; 0x01
    2c24:	83 81       	ldd	r24, Z+3	; 0x03
    2c26:	98 17       	cp	r25, r24
    2c28:	38 f4       	brcc	.+14     	; 0x2c38 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2c2a:	80 81       	ld	r24, Z
    2c2c:	81 11       	cpse	r24, r1
    2c2e:	04 c0       	rjmp	.+8      	; 0x2c38 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2c30:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2c34:	80 62       	ori	r24, 0x20	; 32
    2c36:	03 c0       	rjmp	.+6      	; 0x2c3e <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x30>
    2c38:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2c3c:	8f 7d       	andi	r24, 0xDF	; 223
    2c3e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2c42:	08 95       	ret

00002c44 <_ZN15OrangutanSerial15initUART_inlineEh>:
    2c44:	9a e0       	ldi	r25, 0x0A	; 10
    2c46:	89 9f       	mul	r24, r25
    2c48:	f0 01       	movw	r30, r0
    2c4a:	11 24       	eor	r1, r1
    2c4c:	e3 56       	subi	r30, 0x63	; 99
    2c4e:	fe 4f       	sbci	r31, 0xFE	; 254
    2c50:	90 81       	ld	r25, Z
    2c52:	91 11       	cpse	r25, r1
    2c54:	02 c0       	rjmp	.+4      	; 0x2c5a <_ZN15OrangutanSerial15initUART_inlineEh+0x16>
    2c56:	98 e9       	ldi	r25, 0x98	; 152
    2c58:	01 c0       	rjmp	.+2      	; 0x2c5c <_ZN15OrangutanSerial15initUART_inlineEh+0x18>
    2c5a:	98 e1       	ldi	r25, 0x18	; 24
    2c5c:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2c60:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2c64:	78 94       	sei
    2c66:	08 95       	ret

00002c68 <serial_set_baud_rate>:
    2c68:	cf 92       	push	r12
    2c6a:	df 92       	push	r13
    2c6c:	ef 92       	push	r14
    2c6e:	ff 92       	push	r15
    2c70:	6b 01       	movw	r12, r22
    2c72:	7c 01       	movw	r14, r24
    2c74:	80 e0       	ldi	r24, 0x00	; 0
    2c76:	0e 94 22 16 	call	0x2c44	; 0x2c44 <_ZN15OrangutanSerial15initUART_inlineEh>
    2c7a:	a8 ef       	ldi	r26, 0xF8	; 248
    2c7c:	bf ef       	ldi	r27, 0xFF	; 255
    2c7e:	a7 01       	movw	r20, r14
    2c80:	96 01       	movw	r18, r12
    2c82:	0e 94 56 1d 	call	0x3aac	; 0x3aac <__mulohisi3>
    2c86:	73 5d       	subi	r23, 0xD3	; 211
    2c88:	8e 4c       	sbci	r24, 0xCE	; 206
    2c8a:	9e 4f       	sbci	r25, 0xFE	; 254
    2c8c:	e4 e0       	ldi	r30, 0x04	; 4
    2c8e:	22 0f       	add	r18, r18
    2c90:	33 1f       	adc	r19, r19
    2c92:	44 1f       	adc	r20, r20
    2c94:	55 1f       	adc	r21, r21
    2c96:	ea 95       	dec	r30
    2c98:	d1 f7       	brne	.-12     	; 0x2c8e <serial_set_baud_rate+0x26>
    2c9a:	0e 94 f2 1c 	call	0x39e4	; 0x39e4 <__udivmodsi4>
    2c9e:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
    2ca2:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
    2ca6:	ff 90       	pop	r15
    2ca8:	ef 90       	pop	r14
    2caa:	df 90       	pop	r13
    2cac:	cf 90       	pop	r12
    2cae:	08 95       	ret

00002cb0 <_ZN15OrangutanSerial4sendEPch>:
    2cb0:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <_ZN15OrangutanSerial5portsE+0x7>
    2cb4:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <_ZN15OrangutanSerial5portsE+0x6>
    2cb8:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <_ZN15OrangutanSerial5portsE+0x1>
    2cbc:	60 93 a0 01 	sts	0x01A0, r22	; 0x8001a0 <_ZN15OrangutanSerial5portsE+0x3>
    2cc0:	80 e0       	ldi	r24, 0x00	; 0
    2cc2:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2cc6:	08 95       	ret

00002cc8 <serial_send>:
    2cc8:	0e 94 58 16 	call	0x2cb0	; 0x2cb0 <_ZN15OrangutanSerial4sendEPch>
    2ccc:	08 95       	ret

00002cce <_ZN15OrangutanSerial11uart_tx_isrEh>:
    2cce:	9a e0       	ldi	r25, 0x0A	; 10
    2cd0:	89 9f       	mul	r24, r25
    2cd2:	f0 01       	movw	r30, r0
    2cd4:	11 24       	eor	r1, r1
    2cd6:	e3 56       	subi	r30, 0x63	; 99
    2cd8:	fe 4f       	sbci	r31, 0xFE	; 254
    2cda:	26 81       	ldd	r18, Z+6	; 0x06
    2cdc:	37 81       	ldd	r19, Z+7	; 0x07
    2cde:	21 15       	cp	r18, r1
    2ce0:	31 05       	cpc	r19, r1
    2ce2:	41 f0       	breq	.+16     	; 0x2cf4 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2ce4:	41 81       	ldd	r20, Z+1	; 0x01
    2ce6:	93 81       	ldd	r25, Z+3	; 0x03
    2ce8:	49 17       	cp	r20, r25
    2cea:	20 f4       	brcc	.+8      	; 0x2cf4 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2cec:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2cf0:	95 fd       	sbrc	r25, 5
    2cf2:	03 c0       	rjmp	.+6      	; 0x2cfa <_ZN15OrangutanSerial11uart_tx_isrEh+0x2c>
    2cf4:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2cf8:	08 95       	ret
    2cfa:	91 81       	ldd	r25, Z+1	; 0x01
    2cfc:	d9 01       	movw	r26, r18
    2cfe:	a9 0f       	add	r26, r25
    2d00:	b1 1d       	adc	r27, r1
    2d02:	9c 91       	ld	r25, X
    2d04:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2d08:	91 81       	ldd	r25, Z+1	; 0x01
    2d0a:	9f 5f       	subi	r25, 0xFF	; 255
    2d0c:	91 83       	std	Z+1, r25	; 0x01
    2d0e:	f2 cf       	rjmp	.-28     	; 0x2cf4 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>

00002d10 <_ZN15OrangutanSerial5checkEv>:
    2d10:	e1 ec       	ldi	r30, 0xC1	; 193
    2d12:	f0 e0       	ldi	r31, 0x00	; 0
    2d14:	80 81       	ld	r24, Z
    2d16:	8f 7d       	andi	r24, 0xDF	; 223
    2d18:	80 83       	st	Z, r24
    2d1a:	80 e0       	ldi	r24, 0x00	; 0
    2d1c:	0e 94 67 16 	call	0x2cce	; 0x2cce <_ZN15OrangutanSerial11uart_tx_isrEh>
    2d20:	80 e0       	ldi	r24, 0x00	; 0
    2d22:	0e 94 89 15 	call	0x2b12	; 0x2b12 <_ZN15OrangutanSerial15serial_rx_checkEh>
    2d26:	08 95       	ret

00002d28 <_ZN15OrangutanSerial12sendBlockingEPch>:
    2d28:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <_ZN15OrangutanSerial5portsE+0x7>
    2d2c:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <_ZN15OrangutanSerial5portsE+0x6>
    2d30:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <_ZN15OrangutanSerial5portsE+0x1>
    2d34:	60 93 a0 01 	sts	0x01A0, r22	; 0x8001a0 <_ZN15OrangutanSerial5portsE+0x3>
    2d38:	80 e0       	ldi	r24, 0x00	; 0
    2d3a:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2d3e:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <_ZN15OrangutanSerial5portsE+0x1>
    2d42:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <_ZN15OrangutanSerial5portsE+0x3>
    2d46:	98 17       	cp	r25, r24
    2d48:	19 f0       	breq	.+6      	; 0x2d50 <_ZN15OrangutanSerial12sendBlockingEPch+0x28>
    2d4a:	0e 94 88 16 	call	0x2d10	; 0x2d10 <_ZN15OrangutanSerial5checkEv>
    2d4e:	f7 cf       	rjmp	.-18     	; 0x2d3e <_ZN15OrangutanSerial12sendBlockingEPch+0x16>
    2d50:	08 95       	ret

00002d52 <serial_send_blocking>:
    2d52:	0e 94 94 16 	call	0x2d28	; 0x2d28 <_ZN15OrangutanSerial12sendBlockingEPch>
    2d56:	08 95       	ret

00002d58 <__vector_19>:
    2d58:	1f 92       	push	r1
    2d5a:	0f 92       	push	r0
    2d5c:	0f b6       	in	r0, 0x3f	; 63
    2d5e:	0f 92       	push	r0
    2d60:	11 24       	eor	r1, r1
    2d62:	2f 93       	push	r18
    2d64:	3f 93       	push	r19
    2d66:	4f 93       	push	r20
    2d68:	5f 93       	push	r21
    2d6a:	6f 93       	push	r22
    2d6c:	7f 93       	push	r23
    2d6e:	8f 93       	push	r24
    2d70:	9f 93       	push	r25
    2d72:	af 93       	push	r26
    2d74:	bf 93       	push	r27
    2d76:	ef 93       	push	r30
    2d78:	ff 93       	push	r31
    2d7a:	80 e0       	ldi	r24, 0x00	; 0
    2d7c:	0e 94 67 16 	call	0x2cce	; 0x2cce <_ZN15OrangutanSerial11uart_tx_isrEh>
    2d80:	ff 91       	pop	r31
    2d82:	ef 91       	pop	r30
    2d84:	bf 91       	pop	r27
    2d86:	af 91       	pop	r26
    2d88:	9f 91       	pop	r25
    2d8a:	8f 91       	pop	r24
    2d8c:	7f 91       	pop	r23
    2d8e:	6f 91       	pop	r22
    2d90:	5f 91       	pop	r21
    2d92:	4f 91       	pop	r20
    2d94:	3f 91       	pop	r19
    2d96:	2f 91       	pop	r18
    2d98:	0f 90       	pop	r0
    2d9a:	0f be       	out	0x3f, r0	; 63
    2d9c:	0f 90       	pop	r0
    2d9e:	1f 90       	pop	r1
    2da0:	18 95       	reti

00002da2 <__vector_9>:
    2da2:	2f 92       	push	r2
    2da4:	8f 93       	push	r24
    2da6:	9f 93       	push	r25
    2da8:	2f b6       	in	r2, 0x3f	; 63
    2daa:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <tickCount+0x1>
    2dae:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <tickCount+0x2>
    2db2:	01 96       	adiw	r24, 0x01	; 1
    2db4:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <tickCount+0x1>
    2db8:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <tickCount+0x2>
    2dbc:	90 e0       	ldi	r25, 0x00	; 0
    2dbe:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <tickCount+0x3>
    2dc2:	89 1f       	adc	r24, r25
    2dc4:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <tickCount+0x3>
    2dc8:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <us_over_10+0x1>
    2dcc:	9c 5f       	subi	r25, 0xFC	; 252
    2dce:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <us_over_10+0x1>
    2dd2:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <us_over_10>
    2dd6:	80 51       	subi	r24, 0x10	; 16
    2dd8:	97 42       	sbci	r25, 0x27	; 39
    2dda:	c0 f0       	brcs	.+48     	; 0x2e0c <end>
    2ddc:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <us_over_10+0x1>
    2de0:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <us_over_10>
    2de4:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <msCounter>
    2de8:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <msCounter+0x1>
    2dec:	01 96       	adiw	r24, 0x01	; 1
    2dee:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <msCounter>
    2df2:	90 93 aa 01 	sts	0x01AA, r25	; 0x8001aa <msCounter+0x1>
    2df6:	90 e0       	ldi	r25, 0x00	; 0
    2df8:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <msCounter+0x2>
    2dfc:	89 1f       	adc	r24, r25
    2dfe:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <msCounter+0x2>
    2e02:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <msCounter+0x3>
    2e06:	89 1f       	adc	r24, r25
    2e08:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <msCounter+0x3>

00002e0c <end>:
    2e0c:	2f be       	out	0x3f, r2	; 63
    2e0e:	9f 91       	pop	r25
    2e10:	8f 91       	pop	r24
    2e12:	2f 90       	pop	r2
    2e14:	18 95       	reti

00002e16 <_ZN13OrangutanTime17delayMillisecondsEj>:
    2e16:	28 ee       	ldi	r18, 0xE8	; 232
    2e18:	33 e0       	ldi	r19, 0x03	; 3
    2e1a:	01 97       	sbiw	r24, 0x01	; 1
    2e1c:	48 f0       	brcs	.+18     	; 0x2e30 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    2e1e:	f9 01       	movw	r30, r18
    2e20:	6f 93       	push	r22
    2e22:	64 e0       	ldi	r22, 0x04	; 4
    2e24:	6a 95       	dec	r22
    2e26:	f1 f7       	brne	.-4      	; 0x2e24 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    2e28:	6f 91       	pop	r22
    2e2a:	31 97       	sbiw	r30, 0x01	; 1
    2e2c:	c9 f7       	brne	.-14     	; 0x2e20 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    2e2e:	f5 cf       	rjmp	.-22     	; 0x2e1a <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    2e30:	08 95       	ret

00002e32 <delay_ms>:
    2e32:	0e 94 0b 17 	call	0x2e16	; 0x2e16 <_ZN13OrangutanTime17delayMillisecondsEj>
    2e36:	08 95       	ret

00002e38 <_ZN13OrangutanTime5init2Ev>:
    2e38:	e0 e7       	ldi	r30, 0x70	; 112
    2e3a:	f0 e0       	ldi	r31, 0x00	; 0
    2e3c:	80 81       	ld	r24, Z
    2e3e:	8e 7f       	andi	r24, 0xFE	; 254
    2e40:	80 83       	st	Z, r24
    2e42:	a0 eb       	ldi	r26, 0xB0	; 176
    2e44:	b0 e0       	ldi	r27, 0x00	; 0
    2e46:	8c 91       	ld	r24, X
    2e48:	83 60       	ori	r24, 0x03	; 3
    2e4a:	8c 93       	st	X, r24
    2e4c:	a1 eb       	ldi	r26, 0xB1	; 177
    2e4e:	b0 e0       	ldi	r27, 0x00	; 0
    2e50:	8c 91       	ld	r24, X
    2e52:	80 7f       	andi	r24, 0xF0	; 240
    2e54:	8c 93       	st	X, r24
    2e56:	8c 91       	ld	r24, X
    2e58:	82 60       	ori	r24, 0x02	; 2
    2e5a:	8c 93       	st	X, r24
    2e5c:	b8 9a       	sbi	0x17, 0	; 23
    2e5e:	80 81       	ld	r24, Z
    2e60:	81 60       	ori	r24, 0x01	; 1
    2e62:	80 83       	st	Z, r24
    2e64:	78 94       	sei
    2e66:	08 95       	ret

00002e68 <_ZN13OrangutanTime4initEv>:
    2e68:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <_ZZN13OrangutanTime4initEvE11initialized>
    2e6c:	81 11       	cpse	r24, r1
    2e6e:	05 c0       	rjmp	.+10     	; 0x2e7a <_ZN13OrangutanTime4initEv+0x12>
    2e70:	81 e0       	ldi	r24, 0x01	; 1
    2e72:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <_ZZN13OrangutanTime4initEvE11initialized>
    2e76:	0e 94 1c 17 	call	0x2e38	; 0x2e38 <_ZN13OrangutanTime5init2Ev>
    2e7a:	08 95       	ret

00002e7c <_ZN13OrangutanTime2msEv>:
    2e7c:	0e 94 34 17 	call	0x2e68	; 0x2e68 <_ZN13OrangutanTime4initEv>
    2e80:	e0 e7       	ldi	r30, 0x70	; 112
    2e82:	f0 e0       	ldi	r31, 0x00	; 0
    2e84:	80 81       	ld	r24, Z
    2e86:	8e 7f       	andi	r24, 0xFE	; 254
    2e88:	80 83       	st	Z, r24
    2e8a:	60 91 a9 01 	lds	r22, 0x01A9	; 0x8001a9 <msCounter>
    2e8e:	70 91 aa 01 	lds	r23, 0x01AA	; 0x8001aa <msCounter+0x1>
    2e92:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <msCounter+0x2>
    2e96:	90 91 ac 01 	lds	r25, 0x01AC	; 0x8001ac <msCounter+0x3>
    2e9a:	20 81       	ld	r18, Z
    2e9c:	21 60       	ori	r18, 0x01	; 1
    2e9e:	20 83       	st	Z, r18
    2ea0:	08 95       	ret

00002ea2 <get_ms>:
    2ea2:	0e 94 3e 17 	call	0x2e7c	; 0x2e7c <_ZN13OrangutanTime2msEv>
    2ea6:	08 95       	ret

00002ea8 <_ZN13OrangutanTime5resetEv>:
    2ea8:	0e 94 34 17 	call	0x2e68	; 0x2e68 <_ZN13OrangutanTime4initEv>
    2eac:	e0 e7       	ldi	r30, 0x70	; 112
    2eae:	f0 e0       	ldi	r31, 0x00	; 0
    2eb0:	80 81       	ld	r24, Z
    2eb2:	8e 7f       	andi	r24, 0xFE	; 254
    2eb4:	80 83       	st	Z, r24
    2eb6:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <msCounter>
    2eba:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <msCounter+0x1>
    2ebe:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <msCounter+0x2>
    2ec2:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <msCounter+0x3>
    2ec6:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <us_over_10+0x1>
    2eca:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <us_over_10>
    2ece:	80 81       	ld	r24, Z
    2ed0:	81 60       	ori	r24, 0x01	; 1
    2ed2:	80 83       	st	Z, r24
    2ed4:	08 95       	ret

00002ed6 <calibrate_line_sensors>:
    2ed6:	68 2f       	mov	r22, r24
    2ed8:	81 eb       	ldi	r24, 0xB1	; 177
    2eda:	91 e0       	ldi	r25, 0x01	; 1
    2edc:	0e 94 5a 1b 	call	0x36b4	; 0x36b4 <_ZN16PololuQTRSensors9calibrateEh>
    2ee0:	08 95       	ret

00002ee2 <read_line_sensors_calibrated>:
    2ee2:	46 2f       	mov	r20, r22
    2ee4:	bc 01       	movw	r22, r24
    2ee6:	81 eb       	ldi	r24, 0xB1	; 177
    2ee8:	91 e0       	ldi	r25, 0x01	; 1
    2eea:	0e 94 7e 1b 	call	0x36fc	; 0x36fc <_ZN16PololuQTRSensors14readCalibratedEPjh>
    2eee:	08 95       	ret

00002ef0 <read_line>:
    2ef0:	46 2f       	mov	r20, r22
    2ef2:	20 e0       	ldi	r18, 0x00	; 0
    2ef4:	bc 01       	movw	r22, r24
    2ef6:	81 eb       	ldi	r24, 0xB1	; 177
    2ef8:	91 e0       	ldi	r25, 0x01	; 1
    2efa:	0e 94 2b 1c 	call	0x3856	; 0x3856 <_ZN16PololuQTRSensors8readLineEPjhh>
    2efe:	08 95       	ret

00002f00 <_ZN9Pololu3pi4initEjh>:
    2f00:	0f 93       	push	r16
    2f02:	cf 93       	push	r28
    2f04:	df 93       	push	r29
    2f06:	00 d0       	rcall	.+0      	; 0x2f08 <_ZN9Pololu3pi4initEjh+0x8>
    2f08:	00 d0       	rcall	.+0      	; 0x2f0a <_ZN9Pololu3pi4initEjh+0xa>
    2f0a:	1f 92       	push	r1
    2f0c:	cd b7       	in	r28, 0x3d	; 61
    2f0e:	de b7       	in	r29, 0x3e	; 62
    2f10:	9c 01       	movw	r18, r24
    2f12:	85 e0       	ldi	r24, 0x05	; 5
    2f14:	e0 e5       	ldi	r30, 0x50	; 80
    2f16:	f1 e0       	ldi	r31, 0x01	; 1
    2f18:	de 01       	movw	r26, r28
    2f1a:	11 96       	adiw	r26, 0x01	; 1
    2f1c:	01 90       	ld	r0, Z+
    2f1e:	0d 92       	st	X+, r0
    2f20:	8a 95       	dec	r24
    2f22:	e1 f7       	brne	.-8      	; 0x2f1c <_ZN9Pololu3pi4initEjh+0x1c>
    2f24:	66 23       	and	r22, r22
    2f26:	11 f0       	breq	.+4      	; 0x2f2c <_ZN9Pololu3pi4initEjh+0x2c>
    2f28:	0f ef       	ldi	r16, 0xFF	; 255
    2f2a:	01 c0       	rjmp	.+2      	; 0x2f2e <_ZN9Pololu3pi4initEjh+0x2e>
    2f2c:	03 e1       	ldi	r16, 0x13	; 19
    2f2e:	45 e0       	ldi	r20, 0x05	; 5
    2f30:	be 01       	movw	r22, r28
    2f32:	6f 5f       	subi	r22, 0xFF	; 255
    2f34:	7f 4f       	sbci	r23, 0xFF	; 255
    2f36:	81 eb       	ldi	r24, 0xB1	; 177
    2f38:	91 e0       	ldi	r25, 0x01	; 1
    2f3a:	0e 94 52 18 	call	0x30a4	; 0x30a4 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    2f3e:	81 eb       	ldi	r24, 0xB1	; 177
    2f40:	91 e0       	ldi	r25, 0x01	; 1
    2f42:	0e 94 29 18 	call	0x3052	; 0x3052 <_ZN16PololuQTRSensors11emittersOffEv>
    2f46:	0e 94 54 17 	call	0x2ea8	; 0x2ea8 <_ZN13OrangutanTime5resetEv>
    2f4a:	0f 90       	pop	r0
    2f4c:	0f 90       	pop	r0
    2f4e:	0f 90       	pop	r0
    2f50:	0f 90       	pop	r0
    2f52:	0f 90       	pop	r0
    2f54:	df 91       	pop	r29
    2f56:	cf 91       	pop	r28
    2f58:	0f 91       	pop	r16
    2f5a:	08 95       	ret

00002f5c <pololu_3pi_init>:
    2f5c:	60 e0       	ldi	r22, 0x00	; 0
    2f5e:	0e 94 80 17 	call	0x2f00	; 0x2f00 <_ZN9Pololu3pi4initEjh>
    2f62:	08 95       	ret

00002f64 <_GLOBAL__sub_D_pololu_3pi_init>:
    2f64:	81 eb       	ldi	r24, 0xB1	; 177
    2f66:	91 e0       	ldi	r25, 0x01	; 1
    2f68:	0e 94 a0 1c 	call	0x3940	; 0x3940 <_ZN16PololuQTRSensorsD1Ev>
    2f6c:	08 95       	ret

00002f6e <delay_us>:
    2f6e:	6f 93       	push	r22
    2f70:	64 e0       	ldi	r22, 0x04	; 4
    2f72:	6a 95       	dec	r22
    2f74:	f1 f7       	brne	.-4      	; 0x2f72 <delay_us+0x4>
    2f76:	6f 91       	pop	r22
    2f78:	01 97       	sbiw	r24, 0x01	; 1
    2f7a:	c9 f7       	brne	.-14     	; 0x2f6e <delay_us>
    2f7c:	08 95       	ret

00002f7e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    2f7e:	fc 01       	movw	r30, r24
    2f80:	11 82       	std	Z+1, r1	; 0x01
    2f82:	10 82       	st	Z, r1
    2f84:	13 82       	std	Z+3, r1	; 0x03
    2f86:	12 82       	std	Z+2, r1	; 0x02
    2f88:	15 82       	std	Z+5, r1	; 0x05
    2f8a:	14 82       	std	Z+4, r1	; 0x04
    2f8c:	16 82       	std	Z+6, r1	; 0x06
    2f8e:	68 30       	cpi	r22, 0x08	; 8
    2f90:	68 f4       	brcc	.+26     	; 0x2fac <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    2f92:	89 e2       	ldi	r24, 0x29	; 41
    2f94:	90 e0       	ldi	r25, 0x00	; 0
    2f96:	91 83       	std	Z+1, r25	; 0x01
    2f98:	80 83       	st	Z, r24
    2f9a:	8b e2       	ldi	r24, 0x2B	; 43
    2f9c:	90 e0       	ldi	r25, 0x00	; 0
    2f9e:	93 83       	std	Z+3, r25	; 0x03
    2fa0:	82 83       	std	Z+2, r24	; 0x02
    2fa2:	8a e2       	ldi	r24, 0x2A	; 42
    2fa4:	90 e0       	ldi	r25, 0x00	; 0
    2fa6:	95 83       	std	Z+5, r25	; 0x05
    2fa8:	84 83       	std	Z+4, r24	; 0x04
    2faa:	1f c0       	rjmp	.+62     	; 0x2fea <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2fac:	6e 30       	cpi	r22, 0x0E	; 14
    2fae:	70 f4       	brcc	.+28     	; 0x2fcc <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    2fb0:	83 e2       	ldi	r24, 0x23	; 35
    2fb2:	90 e0       	ldi	r25, 0x00	; 0
    2fb4:	91 83       	std	Z+1, r25	; 0x01
    2fb6:	80 83       	st	Z, r24
    2fb8:	85 e2       	ldi	r24, 0x25	; 37
    2fba:	90 e0       	ldi	r25, 0x00	; 0
    2fbc:	93 83       	std	Z+3, r25	; 0x03
    2fbe:	82 83       	std	Z+2, r24	; 0x02
    2fc0:	84 e2       	ldi	r24, 0x24	; 36
    2fc2:	90 e0       	ldi	r25, 0x00	; 0
    2fc4:	95 83       	std	Z+5, r25	; 0x05
    2fc6:	84 83       	std	Z+4, r24	; 0x04
    2fc8:	68 50       	subi	r22, 0x08	; 8
    2fca:	0f c0       	rjmp	.+30     	; 0x2fea <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2fcc:	65 31       	cpi	r22, 0x15	; 21
    2fce:	98 f4       	brcc	.+38     	; 0x2ff6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    2fd0:	86 e2       	ldi	r24, 0x26	; 38
    2fd2:	90 e0       	ldi	r25, 0x00	; 0
    2fd4:	91 83       	std	Z+1, r25	; 0x01
    2fd6:	80 83       	st	Z, r24
    2fd8:	88 e2       	ldi	r24, 0x28	; 40
    2fda:	90 e0       	ldi	r25, 0x00	; 0
    2fdc:	93 83       	std	Z+3, r25	; 0x03
    2fde:	82 83       	std	Z+2, r24	; 0x02
    2fe0:	87 e2       	ldi	r24, 0x27	; 39
    2fe2:	90 e0       	ldi	r25, 0x00	; 0
    2fe4:	95 83       	std	Z+5, r25	; 0x05
    2fe6:	84 83       	std	Z+4, r24	; 0x04
    2fe8:	6e 50       	subi	r22, 0x0E	; 14
    2fea:	81 e0       	ldi	r24, 0x01	; 1
    2fec:	01 c0       	rjmp	.+2      	; 0x2ff0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    2fee:	88 0f       	add	r24, r24
    2ff0:	6a 95       	dec	r22
    2ff2:	ea f7       	brpl	.-6      	; 0x2fee <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    2ff4:	86 83       	std	Z+6, r24	; 0x06
    2ff6:	08 95       	ret

00002ff8 <_ZN16PololuQTRSensors4initEhhh>:
    2ff8:	a7 e0       	ldi	r26, 0x07	; 7
    2ffa:	b0 e0       	ldi	r27, 0x00	; 0
    2ffc:	e2 e0       	ldi	r30, 0x02	; 2
    2ffe:	f8 e1       	ldi	r31, 0x18	; 24
    3000:	0c 94 69 1d 	jmp	0x3ad2	; 0x3ad2 <__prologue_saves__+0x1c>
    3004:	8c 01       	movw	r16, r24
    3006:	fc 01       	movw	r30, r24
    3008:	11 82       	std	Z+1, r1	; 0x01
    300a:	10 82       	st	Z, r1
    300c:	13 82       	std	Z+3, r1	; 0x03
    300e:	12 82       	std	Z+2, r1	; 0x02
    3010:	15 82       	std	Z+5, r1	; 0x05
    3012:	14 82       	std	Z+4, r1	; 0x04
    3014:	17 82       	std	Z+7, r1	; 0x07
    3016:	16 82       	std	Z+6, r1	; 0x06
    3018:	61 31       	cpi	r22, 0x11	; 17
    301a:	18 f0       	brcs	.+6      	; 0x3022 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    301c:	80 e1       	ldi	r24, 0x10	; 16
    301e:	80 87       	std	Z+8, r24	; 0x08
    3020:	02 c0       	rjmp	.+4      	; 0x3026 <_ZN16PololuQTRSensors4initEhhh+0x2e>
    3022:	fc 01       	movw	r30, r24
    3024:	60 87       	std	Z+8, r22	; 0x08
    3026:	f8 01       	movw	r30, r16
    3028:	20 8b       	std	Z+16, r18	; 0x10
    302a:	64 2f       	mov	r22, r20
    302c:	ce 01       	movw	r24, r28
    302e:	01 96       	adiw	r24, 0x01	; 1
    3030:	0e 94 bf 17 	call	0x2f7e	; 0x2f7e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    3034:	8f 81       	ldd	r24, Y+7	; 0x07
    3036:	f8 01       	movw	r30, r16
    3038:	81 87       	std	Z+9, r24	; 0x09
    303a:	8b 81       	ldd	r24, Y+3	; 0x03
    303c:	9c 81       	ldd	r25, Y+4	; 0x04
    303e:	93 87       	std	Z+11, r25	; 0x0b
    3040:	82 87       	std	Z+10, r24	; 0x0a
    3042:	8d 81       	ldd	r24, Y+5	; 0x05
    3044:	9e 81       	ldd	r25, Y+6	; 0x06
    3046:	95 87       	std	Z+13, r25	; 0x0d
    3048:	84 87       	std	Z+12, r24	; 0x0c
    304a:	27 96       	adiw	r28, 0x07	; 7
    304c:	e4 e0       	ldi	r30, 0x04	; 4
    304e:	0c 94 85 1d 	jmp	0x3b0a	; 0x3b0a <__epilogue_restores__+0x1c>

00003052 <_ZN16PololuQTRSensors11emittersOffEv>:
    3052:	fc 01       	movw	r30, r24
    3054:	a4 85       	ldd	r26, Z+12	; 0x0c
    3056:	b5 85       	ldd	r27, Z+13	; 0x0d
    3058:	10 97       	sbiw	r26, 0x00	; 0
    305a:	79 f0       	breq	.+30     	; 0x307a <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    305c:	8c 91       	ld	r24, X
    305e:	91 85       	ldd	r25, Z+9	; 0x09
    3060:	89 2b       	or	r24, r25
    3062:	8c 93       	st	X, r24
    3064:	a2 85       	ldd	r26, Z+10	; 0x0a
    3066:	b3 85       	ldd	r27, Z+11	; 0x0b
    3068:	9c 91       	ld	r25, X
    306a:	81 85       	ldd	r24, Z+9	; 0x09
    306c:	80 95       	com	r24
    306e:	89 23       	and	r24, r25
    3070:	8c 93       	st	X, r24
    3072:	88 ec       	ldi	r24, 0xC8	; 200
    3074:	90 e0       	ldi	r25, 0x00	; 0
    3076:	0e 94 b7 17 	call	0x2f6e	; 0x2f6e <delay_us>
    307a:	08 95       	ret

0000307c <_ZN16PololuQTRSensors10emittersOnEv>:
    307c:	fc 01       	movw	r30, r24
    307e:	a4 85       	ldd	r26, Z+12	; 0x0c
    3080:	b5 85       	ldd	r27, Z+13	; 0x0d
    3082:	10 97       	sbiw	r26, 0x00	; 0
    3084:	71 f0       	breq	.+28     	; 0x30a2 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    3086:	8c 91       	ld	r24, X
    3088:	91 85       	ldd	r25, Z+9	; 0x09
    308a:	89 2b       	or	r24, r25
    308c:	8c 93       	st	X, r24
    308e:	a2 85       	ldd	r26, Z+10	; 0x0a
    3090:	b3 85       	ldd	r27, Z+11	; 0x0b
    3092:	8c 91       	ld	r24, X
    3094:	91 85       	ldd	r25, Z+9	; 0x09
    3096:	89 2b       	or	r24, r25
    3098:	8c 93       	st	X, r24
    309a:	88 ec       	ldi	r24, 0xC8	; 200
    309c:	90 e0       	ldi	r25, 0x00	; 0
    309e:	0e 94 b7 17 	call	0x2f6e	; 0x2f6e <delay_us>
    30a2:	08 95       	ret

000030a4 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    30a4:	a7 e0       	ldi	r26, 0x07	; 7
    30a6:	b0 e0       	ldi	r27, 0x00	; 0
    30a8:	e8 e5       	ldi	r30, 0x58	; 88
    30aa:	f8 e1       	ldi	r31, 0x18	; 24
    30ac:	0c 94 5e 1d 	jmp	0x3abc	; 0x3abc <__prologue_saves__+0x6>
    30b0:	7c 01       	movw	r14, r24
    30b2:	4b 01       	movw	r8, r22
    30b4:	64 2f       	mov	r22, r20
    30b6:	39 01       	movw	r6, r18
    30b8:	40 2f       	mov	r20, r16
    30ba:	20 e0       	ldi	r18, 0x00	; 0
    30bc:	0e 94 fc 17 	call	0x2ff8	; 0x2ff8 <_ZN16PololuQTRSensors4initEhhh>
    30c0:	87 01       	movw	r16, r14
    30c2:	0f 5b       	subi	r16, 0xBF	; 191
    30c4:	1f 4f       	sbci	r17, 0xFF	; 255
    30c6:	f8 01       	movw	r30, r16
    30c8:	10 82       	st	Z, r1
    30ca:	67 01       	movw	r12, r14
    30cc:	f2 e4       	ldi	r31, 0x42	; 66
    30ce:	cf 0e       	add	r12, r31
    30d0:	d1 1c       	adc	r13, r1
    30d2:	f6 01       	movw	r30, r12
    30d4:	10 82       	st	Z, r1
    30d6:	57 01       	movw	r10, r14
    30d8:	f3 e4       	ldi	r31, 0x43	; 67
    30da:	af 0e       	add	r10, r31
    30dc:	b1 1c       	adc	r11, r1
    30de:	f5 01       	movw	r30, r10
    30e0:	10 82       	st	Z, r1
    30e2:	f7 01       	movw	r30, r14
    30e4:	77 86       	std	Z+15, r7	; 0x0f
    30e6:	66 86       	std	Z+14, r6	; 0x0e
    30e8:	51 2c       	mov	r5, r1
    30ea:	f7 01       	movw	r30, r14
    30ec:	80 85       	ldd	r24, Z+8	; 0x08
    30ee:	58 16       	cp	r5, r24
    30f0:	50 f5       	brcc	.+84     	; 0x3146 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    30f2:	65 2c       	mov	r6, r5
    30f4:	71 2c       	mov	r7, r1
    30f6:	f4 01       	movw	r30, r8
    30f8:	e6 0d       	add	r30, r6
    30fa:	f7 1d       	adc	r31, r7
    30fc:	60 81       	ld	r22, Z
    30fe:	ce 01       	movw	r24, r28
    3100:	01 96       	adiw	r24, 0x01	; 1
    3102:	0e 94 bf 17 	call	0x2f7e	; 0x2f7e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    3106:	2f 81       	ldd	r18, Y+7	; 0x07
    3108:	f7 01       	movw	r30, r14
    310a:	e6 0d       	add	r30, r6
    310c:	f7 1d       	adc	r31, r7
    310e:	21 8b       	std	Z+17, r18	; 0x11
    3110:	89 81       	ldd	r24, Y+1	; 0x01
    3112:	9a 81       	ldd	r25, Y+2	; 0x02
    3114:	f3 01       	movw	r30, r6
    3116:	ee 0f       	add	r30, r30
    3118:	ff 1f       	adc	r31, r31
    311a:	ee 0d       	add	r30, r14
    311c:	ff 1d       	adc	r31, r15
    311e:	92 a3       	std	Z+34, r25	; 0x22
    3120:	81 a3       	std	Z+33, r24	; 0x21
    3122:	83 32       	cpi	r24, 0x23	; 35
    3124:	91 05       	cpc	r25, r1
    3126:	11 f4       	brne	.+4      	; 0x312c <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    3128:	f8 01       	movw	r30, r16
    312a:	08 c0       	rjmp	.+16     	; 0x313c <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    312c:	86 32       	cpi	r24, 0x26	; 38
    312e:	91 05       	cpc	r25, r1
    3130:	11 f4       	brne	.+4      	; 0x3136 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    3132:	f6 01       	movw	r30, r12
    3134:	03 c0       	rjmp	.+6      	; 0x313c <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    3136:	89 97       	sbiw	r24, 0x29	; 41
    3138:	21 f4       	brne	.+8      	; 0x3142 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    313a:	f5 01       	movw	r30, r10
    313c:	80 81       	ld	r24, Z
    313e:	82 2b       	or	r24, r18
    3140:	80 83       	st	Z, r24
    3142:	53 94       	inc	r5
    3144:	d2 cf       	rjmp	.-92     	; 0x30ea <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    3146:	27 96       	adiw	r28, 0x07	; 7
    3148:	ef e0       	ldi	r30, 0x0F	; 15
    314a:	0c 94 7a 1d 	jmp	0x3af4	; 0x3af4 <__epilogue_restores__+0x6>

0000314e <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    314e:	a0 e0       	ldi	r26, 0x00	; 0
    3150:	b0 e0       	ldi	r27, 0x00	; 0
    3152:	ed ea       	ldi	r30, 0xAD	; 173
    3154:	f8 e1       	ldi	r31, 0x18	; 24
    3156:	0c 94 60 1d 	jmp	0x3ac0	; 0x3ac0 <__prologue_saves__+0xa>
    315a:	ec 01       	movw	r28, r24
    315c:	5b 01       	movw	r10, r22
    315e:	6c 01       	movw	r12, r24
    3160:	81 e4       	ldi	r24, 0x41	; 65
    3162:	c8 0e       	add	r12, r24
    3164:	d1 1c       	adc	r13, r1
    3166:	f6 01       	movw	r30, r12
    3168:	80 80       	ld	r8, Z
    316a:	7e 01       	movw	r14, r28
    316c:	f2 e4       	ldi	r31, 0x42	; 66
    316e:	ef 0e       	add	r14, r31
    3170:	f1 1c       	adc	r15, r1
    3172:	f7 01       	movw	r30, r14
    3174:	70 80       	ld	r7, Z
    3176:	8e 01       	movw	r16, r28
    3178:	0d 5b       	subi	r16, 0xBD	; 189
    317a:	1f 4f       	sbci	r17, 0xFF	; 255
    317c:	f8 01       	movw	r30, r16
    317e:	90 80       	ld	r9, Z
    3180:	80 e0       	ldi	r24, 0x00	; 0
    3182:	98 85       	ldd	r25, Y+8	; 0x08
    3184:	89 17       	cp	r24, r25
    3186:	48 f4       	brcc	.+18     	; 0x319a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    3188:	f5 01       	movw	r30, r10
    318a:	e8 0f       	add	r30, r24
    318c:	f1 1d       	adc	r31, r1
    318e:	e8 0f       	add	r30, r24
    3190:	f1 1d       	adc	r31, r1
    3192:	11 82       	std	Z+1, r1	; 0x01
    3194:	10 82       	st	Z, r1
    3196:	8f 5f       	subi	r24, 0xFF	; 255
    3198:	f4 cf       	rjmp	.-24     	; 0x3182 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    319a:	84 b1       	in	r24, 0x04	; 4
    319c:	f6 01       	movw	r30, r12
    319e:	90 81       	ld	r25, Z
    31a0:	89 2b       	or	r24, r25
    31a2:	84 b9       	out	0x04, r24	; 4
    31a4:	87 b1       	in	r24, 0x07	; 7
    31a6:	f7 01       	movw	r30, r14
    31a8:	90 81       	ld	r25, Z
    31aa:	89 2b       	or	r24, r25
    31ac:	87 b9       	out	0x07, r24	; 7
    31ae:	8a b1       	in	r24, 0x0a	; 10
    31b0:	f8 01       	movw	r30, r16
    31b2:	90 81       	ld	r25, Z
    31b4:	89 2b       	or	r24, r25
    31b6:	8a b9       	out	0x0a, r24	; 10
    31b8:	85 b1       	in	r24, 0x05	; 5
    31ba:	f6 01       	movw	r30, r12
    31bc:	90 81       	ld	r25, Z
    31be:	89 2b       	or	r24, r25
    31c0:	85 b9       	out	0x05, r24	; 5
    31c2:	88 b1       	in	r24, 0x08	; 8
    31c4:	f7 01       	movw	r30, r14
    31c6:	90 81       	ld	r25, Z
    31c8:	89 2b       	or	r24, r25
    31ca:	88 b9       	out	0x08, r24	; 8
    31cc:	8b b1       	in	r24, 0x0b	; 11
    31ce:	f8 01       	movw	r30, r16
    31d0:	90 81       	ld	r25, Z
    31d2:	89 2b       	or	r24, r25
    31d4:	8b b9       	out	0x0b, r24	; 11
    31d6:	8a e0       	ldi	r24, 0x0A	; 10
    31d8:	90 e0       	ldi	r25, 0x00	; 0
    31da:	0e 94 b7 17 	call	0x2f6e	; 0x2f6e <delay_us>
    31de:	94 b1       	in	r25, 0x04	; 4
    31e0:	f6 01       	movw	r30, r12
    31e2:	80 81       	ld	r24, Z
    31e4:	80 95       	com	r24
    31e6:	89 23       	and	r24, r25
    31e8:	84 b9       	out	0x04, r24	; 4
    31ea:	97 b1       	in	r25, 0x07	; 7
    31ec:	f7 01       	movw	r30, r14
    31ee:	80 81       	ld	r24, Z
    31f0:	80 95       	com	r24
    31f2:	89 23       	and	r24, r25
    31f4:	87 b9       	out	0x07, r24	; 7
    31f6:	9a b1       	in	r25, 0x0a	; 10
    31f8:	f8 01       	movw	r30, r16
    31fa:	80 81       	ld	r24, Z
    31fc:	80 95       	com	r24
    31fe:	89 23       	and	r24, r25
    3200:	8a b9       	out	0x0a, r24	; 10
    3202:	95 b1       	in	r25, 0x05	; 5
    3204:	f6 01       	movw	r30, r12
    3206:	80 81       	ld	r24, Z
    3208:	80 95       	com	r24
    320a:	89 23       	and	r24, r25
    320c:	85 b9       	out	0x05, r24	; 5
    320e:	98 b1       	in	r25, 0x08	; 8
    3210:	f7 01       	movw	r30, r14
    3212:	80 81       	ld	r24, Z
    3214:	80 95       	com	r24
    3216:	89 23       	and	r24, r25
    3218:	88 b9       	out	0x08, r24	; 8
    321a:	9b b1       	in	r25, 0x0b	; 11
    321c:	f8 01       	movw	r30, r16
    321e:	80 81       	ld	r24, Z
    3220:	80 95       	com	r24
    3222:	89 23       	and	r24, r25
    3224:	8b b9       	out	0x0b, r24	; 11
    3226:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    322a:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    322e:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    3232:	83 60       	ori	r24, 0x03	; 3
    3234:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    3238:	82 e0       	ldi	r24, 0x02	; 2
    323a:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    323e:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    3242:	80 e0       	ldi	r24, 0x00	; 0
    3244:	90 e0       	ldi	r25, 0x00	; 0
    3246:	2e 85       	ldd	r18, Y+14	; 0x0e
    3248:	3f 85       	ldd	r19, Y+15	; 0x0f
    324a:	82 17       	cp	r24, r18
    324c:	93 07       	cpc	r25, r19
    324e:	20 f5       	brcc	.+72     	; 0x3298 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    3250:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    3254:	2c 2d       	mov	r18, r12
    3256:	24 1b       	sub	r18, r20
    3258:	82 0f       	add	r24, r18
    325a:	91 1d       	adc	r25, r1
    325c:	03 b1       	in	r16, 0x03	; 3
    325e:	08 11       	cpse	r16, r8
    3260:	32 c0       	rjmp	.+100    	; 0x32c6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    3262:	f6 b0       	in	r15, 0x06	; 6
    3264:	f7 10       	cpse	r15, r7
    3266:	2f c0       	rjmp	.+94     	; 0x32c6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    3268:	29 b1       	in	r18, 0x09	; 9
    326a:	29 11       	cpse	r18, r9
    326c:	2c c0       	rjmp	.+88     	; 0x32c6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    326e:	10 c0       	rjmp	.+32     	; 0x3290 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    3270:	21 2f       	mov	r18, r17
    3272:	30 e0       	ldi	r19, 0x00	; 0
    3274:	a9 01       	movw	r20, r18
    3276:	44 0f       	add	r20, r20
    3278:	55 1f       	adc	r21, r21
    327a:	f5 01       	movw	r30, r10
    327c:	e4 0f       	add	r30, r20
    327e:	f5 1f       	adc	r31, r21
    3280:	60 81       	ld	r22, Z
    3282:	71 81       	ldd	r23, Z+1	; 0x01
    3284:	67 2b       	or	r22, r23
    3286:	21 f1       	breq	.+72     	; 0x32d0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    3288:	1f 5f       	subi	r17, 0xFF	; 255
    328a:	28 85       	ldd	r18, Y+8	; 0x08
    328c:	12 17       	cp	r17, r18
    328e:	80 f3       	brcs	.-32     	; 0x3270 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    3290:	7f 2c       	mov	r7, r15
    3292:	80 2e       	mov	r8, r16
    3294:	4c 2d       	mov	r20, r12
    3296:	d7 cf       	rjmp	.-82     	; 0x3246 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    3298:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    329c:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    32a0:	20 e0       	ldi	r18, 0x00	; 0
    32a2:	88 85       	ldd	r24, Y+8	; 0x08
    32a4:	28 17       	cp	r18, r24
    32a6:	30 f5       	brcc	.+76     	; 0x32f4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    32a8:	f5 01       	movw	r30, r10
    32aa:	e2 0f       	add	r30, r18
    32ac:	f1 1d       	adc	r31, r1
    32ae:	e2 0f       	add	r30, r18
    32b0:	f1 1d       	adc	r31, r1
    32b2:	80 81       	ld	r24, Z
    32b4:	91 81       	ldd	r25, Z+1	; 0x01
    32b6:	89 2b       	or	r24, r25
    32b8:	21 f4       	brne	.+8      	; 0x32c2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    32ba:	8e 85       	ldd	r24, Y+14	; 0x0e
    32bc:	9f 85       	ldd	r25, Y+15	; 0x0f
    32be:	91 83       	std	Z+1, r25	; 0x01
    32c0:	80 83       	st	Z, r24
    32c2:	2f 5f       	subi	r18, 0xFF	; 255
    32c4:	ee cf       	rjmp	.-36     	; 0x32a2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    32c6:	03 b1       	in	r16, 0x03	; 3
    32c8:	f6 b0       	in	r15, 0x06	; 6
    32ca:	99 b0       	in	r9, 0x09	; 9
    32cc:	10 e0       	ldi	r17, 0x00	; 0
    32ce:	dd cf       	rjmp	.-70     	; 0x328a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    32d0:	de 01       	movw	r26, r28
    32d2:	a4 0f       	add	r26, r20
    32d4:	b5 1f       	adc	r27, r21
    32d6:	91 96       	adiw	r26, 0x21	; 33
    32d8:	0d 90       	ld	r0, X+
    32da:	bc 91       	ld	r27, X
    32dc:	a0 2d       	mov	r26, r0
    32de:	4c 91       	ld	r20, X
    32e0:	de 01       	movw	r26, r28
    32e2:	a2 0f       	add	r26, r18
    32e4:	b3 1f       	adc	r27, r19
    32e6:	51 96       	adiw	r26, 0x11	; 17
    32e8:	2c 91       	ld	r18, X
    32ea:	42 23       	and	r20, r18
    32ec:	69 f6       	brne	.-102    	; 0x3288 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    32ee:	91 83       	std	Z+1, r25	; 0x01
    32f0:	80 83       	st	Z, r24
    32f2:	ca cf       	rjmp	.-108    	; 0x3288 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    32f4:	cd b7       	in	r28, 0x3d	; 61
    32f6:	de b7       	in	r29, 0x3e	; 62
    32f8:	ed e0       	ldi	r30, 0x0D	; 13
    32fa:	0c 94 7c 1d 	jmp	0x3af8	; 0x3af8 <__epilogue_restores__+0xa>

000032fe <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    32fe:	ef 92       	push	r14
    3300:	ff 92       	push	r15
    3302:	0f 93       	push	r16
    3304:	1f 93       	push	r17
    3306:	cf 93       	push	r28
    3308:	df 93       	push	r29
    330a:	fc 01       	movw	r30, r24
    330c:	9b 01       	movw	r18, r22
    330e:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    3312:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3316:	47 b1       	in	r20, 0x07	; 7
    3318:	18 b1       	in	r17, 0x08	; 8
    331a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    331e:	86 fd       	sbrc	r24, 6
    3320:	fc cf       	rjmp	.-8      	; 0x331a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    3322:	80 e0       	ldi	r24, 0x00	; 0
    3324:	90 85       	ldd	r25, Z+8	; 0x08
    3326:	89 17       	cp	r24, r25
    3328:	48 f4       	brcc	.+18     	; 0x333c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    332a:	d9 01       	movw	r26, r18
    332c:	a8 0f       	add	r26, r24
    332e:	b1 1d       	adc	r27, r1
    3330:	a8 0f       	add	r26, r24
    3332:	b1 1d       	adc	r27, r1
    3334:	1d 92       	st	X+, r1
    3336:	1c 92       	st	X, r1
    3338:	8f 5f       	subi	r24, 0xFF	; 255
    333a:	f4 cf       	rjmp	.-24     	; 0x3324 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    333c:	97 b1       	in	r25, 0x07	; 7
    333e:	82 a1       	ldd	r24, Z+34	; 0x22
    3340:	80 95       	com	r24
    3342:	89 23       	and	r24, r25
    3344:	87 b9       	out	0x07, r24	; 7
    3346:	98 b1       	in	r25, 0x08	; 8
    3348:	82 a1       	ldd	r24, Z+34	; 0x22
    334a:	80 95       	com	r24
    334c:	89 23       	and	r24, r25
    334e:	88 b9       	out	0x08, r24	; 8
    3350:	87 e8       	ldi	r24, 0x87	; 135
    3352:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3356:	e1 2c       	mov	r14, r1
    3358:	81 a1       	ldd	r24, Z+33	; 0x21
    335a:	e8 16       	cp	r14, r24
    335c:	10 f0       	brcs	.+4      	; 0x3362 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    335e:	e1 2c       	mov	r14, r1
    3360:	29 c0       	rjmp	.+82     	; 0x33b4 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    3362:	50 e0       	ldi	r21, 0x00	; 0
    3364:	80 85       	ldd	r24, Z+8	; 0x08
    3366:	58 17       	cp	r21, r24
    3368:	18 f5       	brcc	.+70     	; 0x33b0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    336a:	a5 2f       	mov	r26, r21
    336c:	b0 e0       	ldi	r27, 0x00	; 0
    336e:	ef 01       	movw	r28, r30
    3370:	ca 0f       	add	r28, r26
    3372:	db 1f       	adc	r29, r27
    3374:	89 89       	ldd	r24, Y+17	; 0x11
    3376:	80 64       	ori	r24, 0x40	; 64
    3378:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    337c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3380:	80 64       	ori	r24, 0x40	; 64
    3382:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3386:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    338a:	86 fd       	sbrc	r24, 6
    338c:	fc cf       	rjmp	.-8      	; 0x3386 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    338e:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    3392:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    3396:	aa 0f       	add	r26, r26
    3398:	bb 1f       	adc	r27, r27
    339a:	a2 0f       	add	r26, r18
    339c:	b3 1f       	adc	r27, r19
    339e:	8d 91       	ld	r24, X+
    33a0:	9c 91       	ld	r25, X
    33a2:	11 97       	sbiw	r26, 0x01	; 1
    33a4:	86 0f       	add	r24, r22
    33a6:	97 1f       	adc	r25, r23
    33a8:	8d 93       	st	X+, r24
    33aa:	9c 93       	st	X, r25
    33ac:	5f 5f       	subi	r21, 0xFF	; 255
    33ae:	da cf       	rjmp	.-76     	; 0x3364 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    33b0:	e3 94       	inc	r14
    33b2:	d2 cf       	rjmp	.-92     	; 0x3358 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    33b4:	80 85       	ldd	r24, Z+8	; 0x08
    33b6:	e8 16       	cp	r14, r24
    33b8:	a0 f4       	brcc	.+40     	; 0x33e2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    33ba:	e9 01       	movw	r28, r18
    33bc:	ce 0d       	add	r28, r14
    33be:	d1 1d       	adc	r29, r1
    33c0:	ce 0d       	add	r28, r14
    33c2:	d1 1d       	adc	r29, r1
    33c4:	61 a1       	ldd	r22, Z+33	; 0x21
    33c6:	70 e0       	ldi	r23, 0x00	; 0
    33c8:	cb 01       	movw	r24, r22
    33ca:	95 95       	asr	r25
    33cc:	87 95       	ror	r24
    33ce:	a8 81       	ld	r26, Y
    33d0:	b9 81       	ldd	r27, Y+1	; 0x01
    33d2:	8a 0f       	add	r24, r26
    33d4:	9b 1f       	adc	r25, r27
    33d6:	0e 94 ca 1c 	call	0x3994	; 0x3994 <__udivmodhi4>
    33da:	79 83       	std	Y+1, r23	; 0x01
    33dc:	68 83       	st	Y, r22
    33de:	e3 94       	inc	r14
    33e0:	e9 cf       	rjmp	.-46     	; 0x33b4 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    33e2:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    33e6:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    33ea:	18 b9       	out	0x08, r17	; 8
    33ec:	47 b9       	out	0x07, r20	; 7
    33ee:	cd b7       	in	r28, 0x3d	; 61
    33f0:	de b7       	in	r29, 0x3e	; 62
    33f2:	e6 e0       	ldi	r30, 0x06	; 6
    33f4:	0c 94 83 1d 	jmp	0x3b06	; 0x3b06 <__epilogue_restores__+0x18>

000033f8 <_ZN16PololuQTRSensors4readEPjh>:
    33f8:	a0 e2       	ldi	r26, 0x20	; 32
    33fa:	b0 e0       	ldi	r27, 0x00	; 0
    33fc:	e2 e0       	ldi	r30, 0x02	; 2
    33fe:	fa e1       	ldi	r31, 0x1A	; 26
    3400:	0c 94 66 1d 	jmp	0x3acc	; 0x3acc <__prologue_saves__+0x16>
    3404:	8c 01       	movw	r16, r24
    3406:	7b 01       	movw	r14, r22
    3408:	d4 2e       	mov	r13, r20
    340a:	8f ef       	ldi	r24, 0xFF	; 255
    340c:	84 0f       	add	r24, r20
    340e:	82 30       	cpi	r24, 0x02	; 2
    3410:	18 f4       	brcc	.+6      	; 0x3418 <_ZN16PololuQTRSensors4readEPjh+0x20>
    3412:	c8 01       	movw	r24, r16
    3414:	0e 94 3e 18 	call	0x307c	; 0x307c <_ZN16PololuQTRSensors10emittersOnEv>
    3418:	d8 01       	movw	r26, r16
    341a:	50 96       	adiw	r26, 0x10	; 16
    341c:	8c 91       	ld	r24, X
    341e:	b7 01       	movw	r22, r14
    3420:	81 11       	cpse	r24, r1
    3422:	10 c0       	rjmp	.+32     	; 0x3444 <_ZN16PololuQTRSensors4readEPjh+0x4c>
    3424:	c8 01       	movw	r24, r16
    3426:	0e 94 a7 18 	call	0x314e	; 0x314e <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    342a:	c8 01       	movw	r24, r16
    342c:	0e 94 29 18 	call	0x3052	; 0x3052 <_ZN16PololuQTRSensors11emittersOffEv>
    3430:	b2 e0       	ldi	r27, 0x02	; 2
    3432:	db 12       	cpse	r13, r27
    3434:	3a c0       	rjmp	.+116    	; 0x34aa <_ZN16PololuQTRSensors4readEPjh+0xb2>
    3436:	be 01       	movw	r22, r28
    3438:	6f 5f       	subi	r22, 0xFF	; 255
    343a:	7f 4f       	sbci	r23, 0xFF	; 255
    343c:	c8 01       	movw	r24, r16
    343e:	0e 94 a7 18 	call	0x314e	; 0x314e <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    3442:	0f c0       	rjmp	.+30     	; 0x3462 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    3444:	c8 01       	movw	r24, r16
    3446:	0e 94 7f 19 	call	0x32fe	; 0x32fe <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    344a:	c8 01       	movw	r24, r16
    344c:	0e 94 29 18 	call	0x3052	; 0x3052 <_ZN16PololuQTRSensors11emittersOffEv>
    3450:	e2 e0       	ldi	r30, 0x02	; 2
    3452:	de 12       	cpse	r13, r30
    3454:	2a c0       	rjmp	.+84     	; 0x34aa <_ZN16PololuQTRSensors4readEPjh+0xb2>
    3456:	be 01       	movw	r22, r28
    3458:	6f 5f       	subi	r22, 0xFF	; 255
    345a:	7f 4f       	sbci	r23, 0xFF	; 255
    345c:	c8 01       	movw	r24, r16
    345e:	0e 94 7f 19 	call	0x32fe	; 0x32fe <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    3462:	40 e0       	ldi	r20, 0x00	; 0
    3464:	f8 01       	movw	r30, r16
    3466:	80 85       	ldd	r24, Z+8	; 0x08
    3468:	48 17       	cp	r20, r24
    346a:	f8 f4       	brcc	.+62     	; 0x34aa <_ZN16PololuQTRSensors4readEPjh+0xb2>
    346c:	84 2f       	mov	r24, r20
    346e:	90 e0       	ldi	r25, 0x00	; 0
    3470:	88 0f       	add	r24, r24
    3472:	99 1f       	adc	r25, r25
    3474:	f7 01       	movw	r30, r14
    3476:	e8 0f       	add	r30, r24
    3478:	f9 1f       	adc	r31, r25
    347a:	21 e0       	ldi	r18, 0x01	; 1
    347c:	30 e0       	ldi	r19, 0x00	; 0
    347e:	2c 0f       	add	r18, r28
    3480:	3d 1f       	adc	r19, r29
    3482:	82 0f       	add	r24, r18
    3484:	93 1f       	adc	r25, r19
    3486:	d8 01       	movw	r26, r16
    3488:	1e 96       	adiw	r26, 0x0e	; 14
    348a:	2d 91       	ld	r18, X+
    348c:	3c 91       	ld	r19, X
    348e:	1f 97       	sbiw	r26, 0x0f	; 15
    3490:	dc 01       	movw	r26, r24
    3492:	8d 91       	ld	r24, X+
    3494:	9c 91       	ld	r25, X
    3496:	28 1b       	sub	r18, r24
    3498:	39 0b       	sbc	r19, r25
    349a:	80 81       	ld	r24, Z
    349c:	91 81       	ldd	r25, Z+1	; 0x01
    349e:	82 0f       	add	r24, r18
    34a0:	93 1f       	adc	r25, r19
    34a2:	91 83       	std	Z+1, r25	; 0x01
    34a4:	80 83       	st	Z, r24
    34a6:	4f 5f       	subi	r20, 0xFF	; 255
    34a8:	dd cf       	rjmp	.-70     	; 0x3464 <_ZN16PololuQTRSensors4readEPjh+0x6c>
    34aa:	a0 96       	adiw	r28, 0x20	; 32
    34ac:	e7 e0       	ldi	r30, 0x07	; 7
    34ae:	0c 94 82 1d 	jmp	0x3b04	; 0x3b04 <__epilogue_restores__+0x16>

000034b2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    34b2:	2f 92       	push	r2
    34b4:	3f 92       	push	r3
    34b6:	5f 92       	push	r5
    34b8:	6f 92       	push	r6
    34ba:	7f 92       	push	r7
    34bc:	8f 92       	push	r8
    34be:	9f 92       	push	r9
    34c0:	af 92       	push	r10
    34c2:	bf 92       	push	r11
    34c4:	cf 92       	push	r12
    34c6:	df 92       	push	r13
    34c8:	ef 92       	push	r14
    34ca:	ff 92       	push	r15
    34cc:	0f 93       	push	r16
    34ce:	1f 93       	push	r17
    34d0:	cf 93       	push	r28
    34d2:	df 93       	push	r29
    34d4:	cd b7       	in	r28, 0x3d	; 61
    34d6:	de b7       	in	r29, 0x3e	; 62
    34d8:	c0 56       	subi	r28, 0x60	; 96
    34da:	d1 09       	sbc	r29, r1
    34dc:	0f b6       	in	r0, 0x3f	; 63
    34de:	f8 94       	cli
    34e0:	de bf       	out	0x3e, r29	; 62
    34e2:	0f be       	out	0x3f, r0	; 63
    34e4:	cd bf       	out	0x3d, r28	; 61
    34e6:	8c 01       	movw	r16, r24
    34e8:	4b 01       	movw	r8, r22
    34ea:	5a 01       	movw	r10, r20
    34ec:	52 2e       	mov	r5, r18
    34ee:	da 01       	movw	r26, r20
    34f0:	8d 91       	ld	r24, X+
    34f2:	9c 91       	ld	r25, X
    34f4:	89 2b       	or	r24, r25
    34f6:	31 f0       	breq	.+12     	; 0x3504 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    34f8:	f4 01       	movw	r30, r8
    34fa:	80 81       	ld	r24, Z
    34fc:	91 81       	ldd	r25, Z+1	; 0x01
    34fe:	89 2b       	or	r24, r25
    3500:	f1 f4       	brne	.+60     	; 0x353e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    3502:	24 c0       	rjmp	.+72     	; 0x354c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    3504:	d8 01       	movw	r26, r16
    3506:	18 96       	adiw	r26, 0x08	; 8
    3508:	8c 91       	ld	r24, X
    350a:	90 e0       	ldi	r25, 0x00	; 0
    350c:	88 0f       	add	r24, r24
    350e:	99 1f       	adc	r25, r25
    3510:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <malloc>
    3514:	f5 01       	movw	r30, r10
    3516:	91 83       	std	Z+1, r25	; 0x01
    3518:	80 83       	st	Z, r24
    351a:	00 97       	sbiw	r24, 0x00	; 0
    351c:	09 f4       	brne	.+2      	; 0x3520 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    351e:	b1 c0       	rjmp	.+354    	; 0x3682 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    3520:	fc 01       	movw	r30, r24
    3522:	20 e0       	ldi	r18, 0x00	; 0
    3524:	30 e0       	ldi	r19, 0x00	; 0
    3526:	d8 01       	movw	r26, r16
    3528:	18 96       	adiw	r26, 0x08	; 8
    352a:	8c 91       	ld	r24, X
    352c:	90 e0       	ldi	r25, 0x00	; 0
    352e:	28 17       	cp	r18, r24
    3530:	39 07       	cpc	r19, r25
    3532:	14 f7       	brge	.-60     	; 0x34f8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    3534:	11 92       	st	Z+, r1
    3536:	11 92       	st	Z+, r1
    3538:	2f 5f       	subi	r18, 0xFF	; 255
    353a:	3f 4f       	sbci	r19, 0xFF	; 255
    353c:	f4 cf       	rjmp	.-24     	; 0x3526 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    353e:	e1 2c       	mov	r14, r1
    3540:	f1 2c       	mov	r15, r1
    3542:	6e 01       	movw	r12, r28
    3544:	b1 e2       	ldi	r27, 0x21	; 33
    3546:	cb 0e       	add	r12, r27
    3548:	d1 1c       	adc	r13, r1
    354a:	21 c0       	rjmp	.+66     	; 0x358e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    354c:	f8 01       	movw	r30, r16
    354e:	80 85       	ldd	r24, Z+8	; 0x08
    3550:	90 e0       	ldi	r25, 0x00	; 0
    3552:	88 0f       	add	r24, r24
    3554:	99 1f       	adc	r25, r25
    3556:	0e 94 92 1d 	call	0x3b24	; 0x3b24 <malloc>
    355a:	d4 01       	movw	r26, r8
    355c:	8d 93       	st	X+, r24
    355e:	9c 93       	st	X, r25
    3560:	00 97       	sbiw	r24, 0x00	; 0
    3562:	09 f4       	brne	.+2      	; 0x3566 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    3564:	8e c0       	rjmp	.+284    	; 0x3682 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    3566:	fc 01       	movw	r30, r24
    3568:	20 e0       	ldi	r18, 0x00	; 0
    356a:	30 e0       	ldi	r19, 0x00	; 0
    356c:	d8 01       	movw	r26, r16
    356e:	18 96       	adiw	r26, 0x08	; 8
    3570:	8c 91       	ld	r24, X
    3572:	90 e0       	ldi	r25, 0x00	; 0
    3574:	28 17       	cp	r18, r24
    3576:	39 07       	cpc	r19, r25
    3578:	14 f7       	brge	.-60     	; 0x353e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    357a:	d8 01       	movw	r26, r16
    357c:	1e 96       	adiw	r26, 0x0e	; 14
    357e:	8d 91       	ld	r24, X+
    3580:	9c 91       	ld	r25, X
    3582:	1f 97       	sbiw	r26, 0x0f	; 15
    3584:	81 93       	st	Z+, r24
    3586:	91 93       	st	Z+, r25
    3588:	2f 5f       	subi	r18, 0xFF	; 255
    358a:	3f 4f       	sbci	r19, 0xFF	; 255
    358c:	ef cf       	rjmp	.-34     	; 0x356c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    358e:	45 2d       	mov	r20, r5
    3590:	be 01       	movw	r22, r28
    3592:	6f 5b       	subi	r22, 0xBF	; 191
    3594:	7f 4f       	sbci	r23, 0xFF	; 255
    3596:	c8 01       	movw	r24, r16
    3598:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <_ZN16PololuQTRSensors4readEPjh>
    359c:	f8 01       	movw	r30, r16
    359e:	60 84       	ldd	r6, Z+8	; 0x08
    35a0:	71 2c       	mov	r7, r1
    35a2:	fe 01       	movw	r30, r28
    35a4:	ef 5b       	subi	r30, 0xBF	; 191
    35a6:	ff 4f       	sbci	r31, 0xFF	; 255
    35a8:	c6 01       	movw	r24, r12
    35aa:	9e 01       	movw	r18, r28
    35ac:	2f 5f       	subi	r18, 0xFF	; 255
    35ae:	3f 4f       	sbci	r19, 0xFF	; 255
    35b0:	19 01       	movw	r2, r18
    35b2:	20 e0       	ldi	r18, 0x00	; 0
    35b4:	30 e0       	ldi	r19, 0x00	; 0
    35b6:	26 15       	cp	r18, r6
    35b8:	37 05       	cpc	r19, r7
    35ba:	4c f5       	brge	.+82     	; 0x360e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    35bc:	e1 14       	cp	r14, r1
    35be:	f1 04       	cpc	r15, r1
    35c0:	89 f0       	breq	.+34     	; 0x35e4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    35c2:	dc 01       	movw	r26, r24
    35c4:	6d 91       	ld	r22, X+
    35c6:	7c 91       	ld	r23, X
    35c8:	40 81       	ld	r20, Z
    35ca:	51 81       	ldd	r21, Z+1	; 0x01
    35cc:	64 17       	cp	r22, r20
    35ce:	75 07       	cpc	r23, r21
    35d0:	48 f0       	brcs	.+18     	; 0x35e4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    35d2:	d1 01       	movw	r26, r2
    35d4:	6d 91       	ld	r22, X+
    35d6:	7c 91       	ld	r23, X
    35d8:	40 81       	ld	r20, Z
    35da:	51 81       	ldd	r21, Z+1	; 0x01
    35dc:	46 17       	cp	r20, r22
    35de:	57 07       	cpc	r21, r23
    35e0:	48 f0       	brcs	.+18     	; 0x35f4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    35e2:	0d c0       	rjmp	.+26     	; 0x35fe <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    35e4:	40 81       	ld	r20, Z
    35e6:	51 81       	ldd	r21, Z+1	; 0x01
    35e8:	dc 01       	movw	r26, r24
    35ea:	4d 93       	st	X+, r20
    35ec:	5c 93       	st	X, r21
    35ee:	e1 14       	cp	r14, r1
    35f0:	f1 04       	cpc	r15, r1
    35f2:	79 f7       	brne	.-34     	; 0x35d2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    35f4:	40 81       	ld	r20, Z
    35f6:	51 81       	ldd	r21, Z+1	; 0x01
    35f8:	d1 01       	movw	r26, r2
    35fa:	4d 93       	st	X+, r20
    35fc:	5c 93       	st	X, r21
    35fe:	2f 5f       	subi	r18, 0xFF	; 255
    3600:	3f 4f       	sbci	r19, 0xFF	; 255
    3602:	b2 e0       	ldi	r27, 0x02	; 2
    3604:	2b 0e       	add	r2, r27
    3606:	31 1c       	adc	r3, r1
    3608:	32 96       	adiw	r30, 0x02	; 2
    360a:	02 96       	adiw	r24, 0x02	; 2
    360c:	d4 cf       	rjmp	.-88     	; 0x35b6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    360e:	ef ef       	ldi	r30, 0xFF	; 255
    3610:	ee 1a       	sub	r14, r30
    3612:	fe 0a       	sbc	r15, r30
    3614:	fa e0       	ldi	r31, 0x0A	; 10
    3616:	ef 16       	cp	r14, r31
    3618:	f1 04       	cpc	r15, r1
    361a:	09 f0       	breq	.+2      	; 0x361e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    361c:	b8 cf       	rjmp	.-144    	; 0x358e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    361e:	9e 01       	movw	r18, r28
    3620:	2f 5f       	subi	r18, 0xFF	; 255
    3622:	3f 4f       	sbci	r19, 0xFF	; 255
    3624:	79 01       	movw	r14, r18
    3626:	36 01       	movw	r6, r12
    3628:	80 e0       	ldi	r24, 0x00	; 0
    362a:	90 e0       	ldi	r25, 0x00	; 0
    362c:	f8 01       	movw	r30, r16
    362e:	20 85       	ldd	r18, Z+8	; 0x08
    3630:	30 e0       	ldi	r19, 0x00	; 0
    3632:	82 17       	cp	r24, r18
    3634:	93 07       	cpc	r25, r19
    3636:	2c f5       	brge	.+74     	; 0x3682 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    3638:	d7 01       	movw	r26, r14
    363a:	2d 91       	ld	r18, X+
    363c:	3d 91       	ld	r19, X+
    363e:	7d 01       	movw	r14, r26
    3640:	b3 01       	movw	r22, r6
    3642:	6c 19       	sub	r22, r12
    3644:	7d 09       	sbc	r23, r13
    3646:	d5 01       	movw	r26, r10
    3648:	ed 91       	ld	r30, X+
    364a:	fc 91       	ld	r31, X
    364c:	e6 0f       	add	r30, r22
    364e:	f7 1f       	adc	r31, r23
    3650:	40 81       	ld	r20, Z
    3652:	51 81       	ldd	r21, Z+1	; 0x01
    3654:	42 17       	cp	r20, r18
    3656:	53 07       	cpc	r21, r19
    3658:	10 f4       	brcc	.+4      	; 0x365e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    365a:	31 83       	std	Z+1, r19	; 0x01
    365c:	20 83       	st	Z, r18
    365e:	f3 01       	movw	r30, r6
    3660:	21 91       	ld	r18, Z+
    3662:	31 91       	ld	r19, Z+
    3664:	3f 01       	movw	r6, r30
    3666:	d4 01       	movw	r26, r8
    3668:	ed 91       	ld	r30, X+
    366a:	fc 91       	ld	r31, X
    366c:	e6 0f       	add	r30, r22
    366e:	f7 1f       	adc	r31, r23
    3670:	40 81       	ld	r20, Z
    3672:	51 81       	ldd	r21, Z+1	; 0x01
    3674:	24 17       	cp	r18, r20
    3676:	35 07       	cpc	r19, r21
    3678:	10 f4       	brcc	.+4      	; 0x367e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    367a:	31 83       	std	Z+1, r19	; 0x01
    367c:	20 83       	st	Z, r18
    367e:	01 96       	adiw	r24, 0x01	; 1
    3680:	d5 cf       	rjmp	.-86     	; 0x362c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    3682:	c0 5a       	subi	r28, 0xA0	; 160
    3684:	df 4f       	sbci	r29, 0xFF	; 255
    3686:	0f b6       	in	r0, 0x3f	; 63
    3688:	f8 94       	cli
    368a:	de bf       	out	0x3e, r29	; 62
    368c:	0f be       	out	0x3f, r0	; 63
    368e:	cd bf       	out	0x3d, r28	; 61
    3690:	df 91       	pop	r29
    3692:	cf 91       	pop	r28
    3694:	1f 91       	pop	r17
    3696:	0f 91       	pop	r16
    3698:	ff 90       	pop	r15
    369a:	ef 90       	pop	r14
    369c:	df 90       	pop	r13
    369e:	cf 90       	pop	r12
    36a0:	bf 90       	pop	r11
    36a2:	af 90       	pop	r10
    36a4:	9f 90       	pop	r9
    36a6:	8f 90       	pop	r8
    36a8:	7f 90       	pop	r7
    36aa:	6f 90       	pop	r6
    36ac:	5f 90       	pop	r5
    36ae:	3f 90       	pop	r3
    36b0:	2f 90       	pop	r2
    36b2:	08 95       	ret

000036b4 <_ZN16PololuQTRSensors9calibrateEh>:
    36b4:	1f 93       	push	r17
    36b6:	cf 93       	push	r28
    36b8:	df 93       	push	r29
    36ba:	ec 01       	movw	r28, r24
    36bc:	16 2f       	mov	r17, r22
    36be:	8f ef       	ldi	r24, 0xFF	; 255
    36c0:	86 0f       	add	r24, r22
    36c2:	82 30       	cpi	r24, 0x02	; 2
    36c4:	18 f0       	brcs	.+6      	; 0x36cc <_ZN16PololuQTRSensors9calibrateEh+0x18>
    36c6:	66 23       	and	r22, r22
    36c8:	59 f0       	breq	.+22     	; 0x36e0 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    36ca:	14 c0       	rjmp	.+40     	; 0x36f4 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    36cc:	21 e0       	ldi	r18, 0x01	; 1
    36ce:	ae 01       	movw	r20, r28
    36d0:	4e 5f       	subi	r20, 0xFE	; 254
    36d2:	5f 4f       	sbci	r21, 0xFF	; 255
    36d4:	be 01       	movw	r22, r28
    36d6:	ce 01       	movw	r24, r28
    36d8:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    36dc:	12 30       	cpi	r17, 0x02	; 2
    36de:	51 f4       	brne	.+20     	; 0x36f4 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    36e0:	ae 01       	movw	r20, r28
    36e2:	4a 5f       	subi	r20, 0xFA	; 250
    36e4:	5f 4f       	sbci	r21, 0xFF	; 255
    36e6:	be 01       	movw	r22, r28
    36e8:	6c 5f       	subi	r22, 0xFC	; 252
    36ea:	7f 4f       	sbci	r23, 0xFF	; 255
    36ec:	20 e0       	ldi	r18, 0x00	; 0
    36ee:	ce 01       	movw	r24, r28
    36f0:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    36f4:	df 91       	pop	r29
    36f6:	cf 91       	pop	r28
    36f8:	1f 91       	pop	r17
    36fa:	08 95       	ret

000036fc <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    36fc:	a0 e0       	ldi	r26, 0x00	; 0
    36fe:	b0 e0       	ldi	r27, 0x00	; 0
    3700:	e4 e8       	ldi	r30, 0x84	; 132
    3702:	fb e1       	ldi	r31, 0x1B	; 27
    3704:	0c 94 64 1d 	jmp	0x3ac8	; 0x3ac8 <__prologue_saves__+0x12>
    3708:	ec 01       	movw	r28, r24
    370a:	8b 01       	movw	r16, r22
    370c:	b4 2e       	mov	r11, r20
    370e:	84 2f       	mov	r24, r20
    3710:	8d 7f       	andi	r24, 0xFD	; 253
    3712:	51 f4       	brne	.+20     	; 0x3728 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    3714:	8c 81       	ldd	r24, Y+4	; 0x04
    3716:	9d 81       	ldd	r25, Y+5	; 0x05
    3718:	89 2b       	or	r24, r25
    371a:	09 f4       	brne	.+2      	; 0x371e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    371c:	97 c0       	rjmp	.+302    	; 0x384c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    371e:	8e 81       	ldd	r24, Y+6	; 0x06
    3720:	9f 81       	ldd	r25, Y+7	; 0x07
    3722:	89 2b       	or	r24, r25
    3724:	09 f4       	brne	.+2      	; 0x3728 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    3726:	92 c0       	rjmp	.+292    	; 0x384c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3728:	8f ef       	ldi	r24, 0xFF	; 255
    372a:	8b 0d       	add	r24, r11
    372c:	82 30       	cpi	r24, 0x02	; 2
    372e:	50 f4       	brcc	.+20     	; 0x3744 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    3730:	88 81       	ld	r24, Y
    3732:	99 81       	ldd	r25, Y+1	; 0x01
    3734:	89 2b       	or	r24, r25
    3736:	09 f4       	brne	.+2      	; 0x373a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    3738:	89 c0       	rjmp	.+274    	; 0x384c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    373a:	8a 81       	ldd	r24, Y+2	; 0x02
    373c:	9b 81       	ldd	r25, Y+3	; 0x03
    373e:	89 2b       	or	r24, r25
    3740:	09 f4       	brne	.+2      	; 0x3744 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    3742:	84 c0       	rjmp	.+264    	; 0x384c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3744:	4b 2d       	mov	r20, r11
    3746:	b8 01       	movw	r22, r16
    3748:	ce 01       	movw	r24, r28
    374a:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <_ZN16PololuQTRSensors4readEPjh>
    374e:	78 01       	movw	r14, r16
    3750:	00 e0       	ldi	r16, 0x00	; 0
    3752:	10 e0       	ldi	r17, 0x00	; 0
    3754:	c1 2c       	mov	r12, r1
    3756:	d1 2c       	mov	r13, r1
    3758:	88 85       	ldd	r24, Y+8	; 0x08
    375a:	90 e0       	ldi	r25, 0x00	; 0
    375c:	c8 16       	cp	r12, r24
    375e:	d9 06       	cpc	r13, r25
    3760:	0c f0       	brlt	.+2      	; 0x3764 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    3762:	74 c0       	rjmp	.+232    	; 0x384c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3764:	81 e0       	ldi	r24, 0x01	; 1
    3766:	b8 12       	cpse	r11, r24
    3768:	0a c0       	rjmp	.+20     	; 0x377e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    376a:	ea 81       	ldd	r30, Y+2	; 0x02
    376c:	fb 81       	ldd	r31, Y+3	; 0x03
    376e:	e0 0f       	add	r30, r16
    3770:	f1 1f       	adc	r31, r17
    3772:	01 90       	ld	r0, Z+
    3774:	f0 81       	ld	r31, Z
    3776:	e0 2d       	mov	r30, r0
    3778:	a8 81       	ld	r26, Y
    377a:	b9 81       	ldd	r27, Y+1	; 0x01
    377c:	0d c0       	rjmp	.+26     	; 0x3798 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    377e:	8c 81       	ldd	r24, Y+4	; 0x04
    3780:	9d 81       	ldd	r25, Y+5	; 0x05
    3782:	2e 81       	ldd	r18, Y+6	; 0x06
    3784:	3f 81       	ldd	r19, Y+7	; 0x07
    3786:	b1 10       	cpse	r11, r1
    3788:	0c c0       	rjmp	.+24     	; 0x37a2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    378a:	f9 01       	movw	r30, r18
    378c:	e0 0f       	add	r30, r16
    378e:	f1 1f       	adc	r31, r17
    3790:	01 90       	ld	r0, Z+
    3792:	f0 81       	ld	r31, Z
    3794:	e0 2d       	mov	r30, r0
    3796:	dc 01       	movw	r26, r24
    3798:	a0 0f       	add	r26, r16
    379a:	b1 1f       	adc	r27, r17
    379c:	8d 91       	ld	r24, X+
    379e:	9c 91       	ld	r25, X
    37a0:	28 c0       	rjmp	.+80     	; 0x37f2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    37a2:	fc 01       	movw	r30, r24
    37a4:	e0 0f       	add	r30, r16
    37a6:	f1 1f       	adc	r31, r17
    37a8:	40 81       	ld	r20, Z
    37aa:	51 81       	ldd	r21, Z+1	; 0x01
    37ac:	e8 81       	ld	r30, Y
    37ae:	f9 81       	ldd	r31, Y+1	; 0x01
    37b0:	e0 0f       	add	r30, r16
    37b2:	f1 1f       	adc	r31, r17
    37b4:	80 81       	ld	r24, Z
    37b6:	91 81       	ldd	r25, Z+1	; 0x01
    37b8:	ee 85       	ldd	r30, Y+14	; 0x0e
    37ba:	ff 85       	ldd	r31, Y+15	; 0x0f
    37bc:	48 17       	cp	r20, r24
    37be:	59 07       	cpc	r21, r25
    37c0:	10 f4       	brcc	.+4      	; 0x37c6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    37c2:	cf 01       	movw	r24, r30
    37c4:	04 c0       	rjmp	.+8      	; 0x37ce <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    37c6:	8e 0f       	add	r24, r30
    37c8:	9f 1f       	adc	r25, r31
    37ca:	84 1b       	sub	r24, r20
    37cc:	95 0b       	sbc	r25, r21
    37ce:	d9 01       	movw	r26, r18
    37d0:	a0 0f       	add	r26, r16
    37d2:	b1 1f       	adc	r27, r17
    37d4:	2d 91       	ld	r18, X+
    37d6:	3c 91       	ld	r19, X
    37d8:	aa 81       	ldd	r26, Y+2	; 0x02
    37da:	bb 81       	ldd	r27, Y+3	; 0x03
    37dc:	a0 0f       	add	r26, r16
    37de:	b1 1f       	adc	r27, r17
    37e0:	4d 91       	ld	r20, X+
    37e2:	5c 91       	ld	r21, X
    37e4:	24 17       	cp	r18, r20
    37e6:	35 07       	cpc	r19, r21
    37e8:	20 f0       	brcs	.+8      	; 0x37f2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    37ea:	e4 0f       	add	r30, r20
    37ec:	f5 1f       	adc	r31, r21
    37ee:	e2 1b       	sub	r30, r18
    37f0:	f3 0b       	sbc	r31, r19
    37f2:	e8 1b       	sub	r30, r24
    37f4:	f9 0b       	sbc	r31, r25
    37f6:	a9 f0       	breq	.+42     	; 0x3822 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    37f8:	d7 01       	movw	r26, r14
    37fa:	2d 91       	ld	r18, X+
    37fc:	3c 91       	ld	r19, X
    37fe:	40 e0       	ldi	r20, 0x00	; 0
    3800:	50 e0       	ldi	r21, 0x00	; 0
    3802:	28 1b       	sub	r18, r24
    3804:	39 0b       	sbc	r19, r25
    3806:	41 09       	sbc	r20, r1
    3808:	51 09       	sbc	r21, r1
    380a:	a8 ee       	ldi	r26, 0xE8	; 232
    380c:	b3 e0       	ldi	r27, 0x03	; 3
    380e:	0e 94 48 1d 	call	0x3a90	; 0x3a90 <__muluhisi3>
    3812:	9f 01       	movw	r18, r30
    3814:	40 e0       	ldi	r20, 0x00	; 0
    3816:	50 e0       	ldi	r21, 0x00	; 0
    3818:	0e 94 14 1d 	call	0x3a28	; 0x3a28 <__divmodsi4>
    381c:	37 fd       	sbrc	r19, 7
    381e:	0a c0       	rjmp	.+20     	; 0x3834 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    3820:	02 c0       	rjmp	.+4      	; 0x3826 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    3822:	20 e0       	ldi	r18, 0x00	; 0
    3824:	30 e0       	ldi	r19, 0x00	; 0
    3826:	29 3e       	cpi	r18, 0xE9	; 233
    3828:	b3 e0       	ldi	r27, 0x03	; 3
    382a:	3b 07       	cpc	r19, r27
    382c:	2c f0       	brlt	.+10     	; 0x3838 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    382e:	28 ee       	ldi	r18, 0xE8	; 232
    3830:	33 e0       	ldi	r19, 0x03	; 3
    3832:	02 c0       	rjmp	.+4      	; 0x3838 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    3834:	20 e0       	ldi	r18, 0x00	; 0
    3836:	30 e0       	ldi	r19, 0x00	; 0
    3838:	f7 01       	movw	r30, r14
    383a:	21 93       	st	Z+, r18
    383c:	31 93       	st	Z+, r19
    383e:	7f 01       	movw	r14, r30
    3840:	ff ef       	ldi	r31, 0xFF	; 255
    3842:	cf 1a       	sub	r12, r31
    3844:	df 0a       	sbc	r13, r31
    3846:	0e 5f       	subi	r16, 0xFE	; 254
    3848:	1f 4f       	sbci	r17, 0xFF	; 255
    384a:	86 cf       	rjmp	.-244    	; 0x3758 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    384c:	cd b7       	in	r28, 0x3d	; 61
    384e:	de b7       	in	r29, 0x3e	; 62
    3850:	e9 e0       	ldi	r30, 0x09	; 9
    3852:	0c 94 80 1d 	jmp	0x3b00	; 0x3b00 <__epilogue_restores__+0x12>

00003856 <_ZN16PololuQTRSensors8readLineEPjhh>:
    3856:	a0 e0       	ldi	r26, 0x00	; 0
    3858:	b0 e0       	ldi	r27, 0x00	; 0
    385a:	e1 e3       	ldi	r30, 0x31	; 49
    385c:	fc e1       	ldi	r31, 0x1C	; 28
    385e:	0c 94 5b 1d 	jmp	0x3ab6	; 0x3ab6 <__prologue_saves__>
    3862:	ec 01       	movw	r28, r24
    3864:	8b 01       	movw	r16, r22
    3866:	82 2e       	mov	r8, r18
    3868:	0e 94 7e 1b 	call	0x36fc	; 0x36fc <_ZN16PololuQTRSensors14readCalibratedEPjh>
    386c:	28 84       	ldd	r2, Y+8	; 0x08
    386e:	e8 01       	movw	r28, r16
    3870:	41 2c       	mov	r4, r1
    3872:	51 2c       	mov	r5, r1
    3874:	32 01       	movw	r6, r4
    3876:	00 e0       	ldi	r16, 0x00	; 0
    3878:	10 e0       	ldi	r17, 0x00	; 0
    387a:	c1 2c       	mov	r12, r1
    387c:	d1 2c       	mov	r13, r1
    387e:	76 01       	movw	r14, r12
    3880:	31 2c       	mov	r3, r1
    3882:	91 2c       	mov	r9, r1
    3884:	58 ee       	ldi	r21, 0xE8	; 232
    3886:	a5 2e       	mov	r10, r21
    3888:	53 e0       	ldi	r21, 0x03	; 3
    388a:	b5 2e       	mov	r11, r21
    388c:	92 14       	cp	r9, r2
    388e:	21 f1       	breq	.+72     	; 0x38d8 <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    3890:	e9 91       	ld	r30, Y+
    3892:	f9 91       	ld	r31, Y+
    3894:	88 20       	and	r8, r8
    3896:	21 f0       	breq	.+8      	; 0x38a0 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    3898:	c5 01       	movw	r24, r10
    389a:	8e 1b       	sub	r24, r30
    389c:	9f 0b       	sbc	r25, r31
    389e:	fc 01       	movw	r30, r24
    38a0:	e9 3c       	cpi	r30, 0xC9	; 201
    38a2:	f1 05       	cpc	r31, r1
    38a4:	24 f4       	brge	.+8      	; 0x38ae <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    38a6:	e3 33       	cpi	r30, 0x33	; 51
    38a8:	f1 05       	cpc	r31, r1
    38aa:	74 f0       	brlt	.+28     	; 0x38c8 <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    38ac:	02 c0       	rjmp	.+4      	; 0x38b2 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    38ae:	33 24       	eor	r3, r3
    38b0:	33 94       	inc	r3
    38b2:	df 01       	movw	r26, r30
    38b4:	a3 01       	movw	r20, r6
    38b6:	92 01       	movw	r18, r4
    38b8:	0e 94 53 1d 	call	0x3aa6	; 0x3aa6 <__mulshisi3>
    38bc:	c6 0e       	add	r12, r22
    38be:	d7 1e       	adc	r13, r23
    38c0:	e8 1e       	adc	r14, r24
    38c2:	f9 1e       	adc	r15, r25
    38c4:	0e 0f       	add	r16, r30
    38c6:	1f 1f       	adc	r17, r31
    38c8:	93 94       	inc	r9
    38ca:	98 ee       	ldi	r25, 0xE8	; 232
    38cc:	49 0e       	add	r4, r25
    38ce:	93 e0       	ldi	r25, 0x03	; 3
    38d0:	59 1e       	adc	r5, r25
    38d2:	61 1c       	adc	r6, r1
    38d4:	71 1c       	adc	r7, r1
    38d6:	da cf       	rjmp	.-76     	; 0x388c <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    38d8:	31 10       	cpse	r3, r1
    38da:	1e c0       	rjmp	.+60     	; 0x3918 <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    38dc:	49 2d       	mov	r20, r9
    38de:	50 e0       	ldi	r21, 0x00	; 0
    38e0:	41 50       	subi	r20, 0x01	; 1
    38e2:	51 09       	sbc	r21, r1
    38e4:	24 ef       	ldi	r18, 0xF4	; 244
    38e6:	31 e0       	ldi	r19, 0x01	; 1
    38e8:	42 9f       	mul	r20, r18
    38ea:	c0 01       	movw	r24, r0
    38ec:	43 9f       	mul	r20, r19
    38ee:	90 0d       	add	r25, r0
    38f0:	52 9f       	mul	r21, r18
    38f2:	90 0d       	add	r25, r0
    38f4:	11 24       	eor	r1, r1
    38f6:	20 91 f5 01 	lds	r18, 0x01F5	; 0x8001f5 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    38fa:	30 91 f6 01 	lds	r19, 0x01F6	; 0x8001f6 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    38fe:	28 17       	cp	r18, r24
    3900:	39 07       	cpc	r19, r25
    3902:	b4 f0       	brlt	.+44     	; 0x3930 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    3904:	88 ee       	ldi	r24, 0xE8	; 232
    3906:	93 e0       	ldi	r25, 0x03	; 3
    3908:	48 9f       	mul	r20, r24
    390a:	90 01       	movw	r18, r0
    390c:	49 9f       	mul	r20, r25
    390e:	30 0d       	add	r19, r0
    3910:	58 9f       	mul	r21, r24
    3912:	30 0d       	add	r19, r0
    3914:	11 24       	eor	r1, r1
    3916:	0e c0       	rjmp	.+28     	; 0x3934 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    3918:	98 01       	movw	r18, r16
    391a:	40 e0       	ldi	r20, 0x00	; 0
    391c:	50 e0       	ldi	r21, 0x00	; 0
    391e:	c7 01       	movw	r24, r14
    3920:	b6 01       	movw	r22, r12
    3922:	0e 94 f2 1c 	call	0x39e4	; 0x39e4 <__udivmodsi4>
    3926:	30 93 f6 01 	sts	0x01F6, r19	; 0x8001f6 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    392a:	20 93 f5 01 	sts	0x01F5, r18	; 0x8001f5 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    392e:	02 c0       	rjmp	.+4      	; 0x3934 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    3930:	20 e0       	ldi	r18, 0x00	; 0
    3932:	30 e0       	ldi	r19, 0x00	; 0
    3934:	c9 01       	movw	r24, r18
    3936:	cd b7       	in	r28, 0x3d	; 61
    3938:	de b7       	in	r29, 0x3e	; 62
    393a:	e2 e1       	ldi	r30, 0x12	; 18
    393c:	0c 94 77 1d 	jmp	0x3aee	; 0x3aee <__epilogue_restores__>

00003940 <_ZN16PololuQTRSensorsD1Ev>:
    3940:	cf 93       	push	r28
    3942:	df 93       	push	r29
    3944:	ec 01       	movw	r28, r24
    3946:	8a 81       	ldd	r24, Y+2	; 0x02
    3948:	9b 81       	ldd	r25, Y+3	; 0x03
    394a:	00 97       	sbiw	r24, 0x00	; 0
    394c:	11 f0       	breq	.+4      	; 0x3952 <_ZN16PololuQTRSensorsD1Ev+0x12>
    394e:	0e 94 2a 1e 	call	0x3c54	; 0x3c54 <free>
    3952:	8e 81       	ldd	r24, Y+6	; 0x06
    3954:	9f 81       	ldd	r25, Y+7	; 0x07
    3956:	00 97       	sbiw	r24, 0x00	; 0
    3958:	11 f0       	breq	.+4      	; 0x395e <_ZN16PololuQTRSensorsD1Ev+0x1e>
    395a:	0e 94 2a 1e 	call	0x3c54	; 0x3c54 <free>
    395e:	88 81       	ld	r24, Y
    3960:	99 81       	ldd	r25, Y+1	; 0x01
    3962:	00 97       	sbiw	r24, 0x00	; 0
    3964:	11 f0       	breq	.+4      	; 0x396a <_ZN16PololuQTRSensorsD1Ev+0x2a>
    3966:	0e 94 2a 1e 	call	0x3c54	; 0x3c54 <free>
    396a:	8c 81       	ldd	r24, Y+4	; 0x04
    396c:	9d 81       	ldd	r25, Y+5	; 0x05
    396e:	00 97       	sbiw	r24, 0x00	; 0
    3970:	11 f0       	breq	.+4      	; 0x3976 <_ZN16PololuQTRSensorsD1Ev+0x36>
    3972:	0e 94 2a 1e 	call	0x3c54	; 0x3c54 <free>
    3976:	df 91       	pop	r29
    3978:	cf 91       	pop	r28
    397a:	08 95       	ret

0000397c <__udivmodqi4>:
    397c:	99 1b       	sub	r25, r25
    397e:	79 e0       	ldi	r23, 0x09	; 9
    3980:	04 c0       	rjmp	.+8      	; 0x398a <__udivmodqi4_ep>

00003982 <__udivmodqi4_loop>:
    3982:	99 1f       	adc	r25, r25
    3984:	96 17       	cp	r25, r22
    3986:	08 f0       	brcs	.+2      	; 0x398a <__udivmodqi4_ep>
    3988:	96 1b       	sub	r25, r22

0000398a <__udivmodqi4_ep>:
    398a:	88 1f       	adc	r24, r24
    398c:	7a 95       	dec	r23
    398e:	c9 f7       	brne	.-14     	; 0x3982 <__udivmodqi4_loop>
    3990:	80 95       	com	r24
    3992:	08 95       	ret

00003994 <__udivmodhi4>:
    3994:	aa 1b       	sub	r26, r26
    3996:	bb 1b       	sub	r27, r27
    3998:	51 e1       	ldi	r21, 0x11	; 17
    399a:	07 c0       	rjmp	.+14     	; 0x39aa <__udivmodhi4_ep>

0000399c <__udivmodhi4_loop>:
    399c:	aa 1f       	adc	r26, r26
    399e:	bb 1f       	adc	r27, r27
    39a0:	a6 17       	cp	r26, r22
    39a2:	b7 07       	cpc	r27, r23
    39a4:	10 f0       	brcs	.+4      	; 0x39aa <__udivmodhi4_ep>
    39a6:	a6 1b       	sub	r26, r22
    39a8:	b7 0b       	sbc	r27, r23

000039aa <__udivmodhi4_ep>:
    39aa:	88 1f       	adc	r24, r24
    39ac:	99 1f       	adc	r25, r25
    39ae:	5a 95       	dec	r21
    39b0:	a9 f7       	brne	.-22     	; 0x399c <__udivmodhi4_loop>
    39b2:	80 95       	com	r24
    39b4:	90 95       	com	r25
    39b6:	bc 01       	movw	r22, r24
    39b8:	cd 01       	movw	r24, r26
    39ba:	08 95       	ret

000039bc <__divmodhi4>:
    39bc:	97 fb       	bst	r25, 7
    39be:	07 2e       	mov	r0, r23
    39c0:	16 f4       	brtc	.+4      	; 0x39c6 <__divmodhi4+0xa>
    39c2:	00 94       	com	r0
    39c4:	07 d0       	rcall	.+14     	; 0x39d4 <__divmodhi4_neg1>
    39c6:	77 fd       	sbrc	r23, 7
    39c8:	09 d0       	rcall	.+18     	; 0x39dc <__divmodhi4_neg2>
    39ca:	0e 94 ca 1c 	call	0x3994	; 0x3994 <__udivmodhi4>
    39ce:	07 fc       	sbrc	r0, 7
    39d0:	05 d0       	rcall	.+10     	; 0x39dc <__divmodhi4_neg2>
    39d2:	3e f4       	brtc	.+14     	; 0x39e2 <__divmodhi4_exit>

000039d4 <__divmodhi4_neg1>:
    39d4:	90 95       	com	r25
    39d6:	81 95       	neg	r24
    39d8:	9f 4f       	sbci	r25, 0xFF	; 255
    39da:	08 95       	ret

000039dc <__divmodhi4_neg2>:
    39dc:	70 95       	com	r23
    39de:	61 95       	neg	r22
    39e0:	7f 4f       	sbci	r23, 0xFF	; 255

000039e2 <__divmodhi4_exit>:
    39e2:	08 95       	ret

000039e4 <__udivmodsi4>:
    39e4:	a1 e2       	ldi	r26, 0x21	; 33
    39e6:	1a 2e       	mov	r1, r26
    39e8:	aa 1b       	sub	r26, r26
    39ea:	bb 1b       	sub	r27, r27
    39ec:	fd 01       	movw	r30, r26
    39ee:	0d c0       	rjmp	.+26     	; 0x3a0a <__udivmodsi4_ep>

000039f0 <__udivmodsi4_loop>:
    39f0:	aa 1f       	adc	r26, r26
    39f2:	bb 1f       	adc	r27, r27
    39f4:	ee 1f       	adc	r30, r30
    39f6:	ff 1f       	adc	r31, r31
    39f8:	a2 17       	cp	r26, r18
    39fa:	b3 07       	cpc	r27, r19
    39fc:	e4 07       	cpc	r30, r20
    39fe:	f5 07       	cpc	r31, r21
    3a00:	20 f0       	brcs	.+8      	; 0x3a0a <__udivmodsi4_ep>
    3a02:	a2 1b       	sub	r26, r18
    3a04:	b3 0b       	sbc	r27, r19
    3a06:	e4 0b       	sbc	r30, r20
    3a08:	f5 0b       	sbc	r31, r21

00003a0a <__udivmodsi4_ep>:
    3a0a:	66 1f       	adc	r22, r22
    3a0c:	77 1f       	adc	r23, r23
    3a0e:	88 1f       	adc	r24, r24
    3a10:	99 1f       	adc	r25, r25
    3a12:	1a 94       	dec	r1
    3a14:	69 f7       	brne	.-38     	; 0x39f0 <__udivmodsi4_loop>
    3a16:	60 95       	com	r22
    3a18:	70 95       	com	r23
    3a1a:	80 95       	com	r24
    3a1c:	90 95       	com	r25
    3a1e:	9b 01       	movw	r18, r22
    3a20:	ac 01       	movw	r20, r24
    3a22:	bd 01       	movw	r22, r26
    3a24:	cf 01       	movw	r24, r30
    3a26:	08 95       	ret

00003a28 <__divmodsi4>:
    3a28:	05 2e       	mov	r0, r21
    3a2a:	97 fb       	bst	r25, 7
    3a2c:	1e f4       	brtc	.+6      	; 0x3a34 <__divmodsi4+0xc>
    3a2e:	00 94       	com	r0
    3a30:	0e 94 2b 1d 	call	0x3a56	; 0x3a56 <__negsi2>
    3a34:	57 fd       	sbrc	r21, 7
    3a36:	07 d0       	rcall	.+14     	; 0x3a46 <__divmodsi4_neg2>
    3a38:	0e 94 f2 1c 	call	0x39e4	; 0x39e4 <__udivmodsi4>
    3a3c:	07 fc       	sbrc	r0, 7
    3a3e:	03 d0       	rcall	.+6      	; 0x3a46 <__divmodsi4_neg2>
    3a40:	4e f4       	brtc	.+18     	; 0x3a54 <__divmodsi4_exit>
    3a42:	0c 94 2b 1d 	jmp	0x3a56	; 0x3a56 <__negsi2>

00003a46 <__divmodsi4_neg2>:
    3a46:	50 95       	com	r21
    3a48:	40 95       	com	r20
    3a4a:	30 95       	com	r19
    3a4c:	21 95       	neg	r18
    3a4e:	3f 4f       	sbci	r19, 0xFF	; 255
    3a50:	4f 4f       	sbci	r20, 0xFF	; 255
    3a52:	5f 4f       	sbci	r21, 0xFF	; 255

00003a54 <__divmodsi4_exit>:
    3a54:	08 95       	ret

00003a56 <__negsi2>:
    3a56:	90 95       	com	r25
    3a58:	80 95       	com	r24
    3a5a:	70 95       	com	r23
    3a5c:	61 95       	neg	r22
    3a5e:	7f 4f       	sbci	r23, 0xFF	; 255
    3a60:	8f 4f       	sbci	r24, 0xFF	; 255
    3a62:	9f 4f       	sbci	r25, 0xFF	; 255
    3a64:	08 95       	ret

00003a66 <__tablejump2__>:
    3a66:	ee 0f       	add	r30, r30
    3a68:	ff 1f       	adc	r31, r31
    3a6a:	05 90       	lpm	r0, Z+
    3a6c:	f4 91       	lpm	r31, Z
    3a6e:	e0 2d       	mov	r30, r0
    3a70:	09 94       	ijmp

00003a72 <__umulhisi3>:
    3a72:	a2 9f       	mul	r26, r18
    3a74:	b0 01       	movw	r22, r0
    3a76:	b3 9f       	mul	r27, r19
    3a78:	c0 01       	movw	r24, r0
    3a7a:	a3 9f       	mul	r26, r19
    3a7c:	70 0d       	add	r23, r0
    3a7e:	81 1d       	adc	r24, r1
    3a80:	11 24       	eor	r1, r1
    3a82:	91 1d       	adc	r25, r1
    3a84:	b2 9f       	mul	r27, r18
    3a86:	70 0d       	add	r23, r0
    3a88:	81 1d       	adc	r24, r1
    3a8a:	11 24       	eor	r1, r1
    3a8c:	91 1d       	adc	r25, r1
    3a8e:	08 95       	ret

00003a90 <__muluhisi3>:
    3a90:	0e 94 39 1d 	call	0x3a72	; 0x3a72 <__umulhisi3>
    3a94:	a5 9f       	mul	r26, r21
    3a96:	90 0d       	add	r25, r0
    3a98:	b4 9f       	mul	r27, r20
    3a9a:	90 0d       	add	r25, r0
    3a9c:	a4 9f       	mul	r26, r20
    3a9e:	80 0d       	add	r24, r0
    3aa0:	91 1d       	adc	r25, r1
    3aa2:	11 24       	eor	r1, r1
    3aa4:	08 95       	ret

00003aa6 <__mulshisi3>:
    3aa6:	b7 ff       	sbrs	r27, 7
    3aa8:	0c 94 48 1d 	jmp	0x3a90	; 0x3a90 <__muluhisi3>

00003aac <__mulohisi3>:
    3aac:	0e 94 48 1d 	call	0x3a90	; 0x3a90 <__muluhisi3>
    3ab0:	82 1b       	sub	r24, r18
    3ab2:	93 0b       	sbc	r25, r19
    3ab4:	08 95       	ret

00003ab6 <__prologue_saves__>:
    3ab6:	2f 92       	push	r2
    3ab8:	3f 92       	push	r3
    3aba:	4f 92       	push	r4
    3abc:	5f 92       	push	r5
    3abe:	6f 92       	push	r6
    3ac0:	7f 92       	push	r7
    3ac2:	8f 92       	push	r8
    3ac4:	9f 92       	push	r9
    3ac6:	af 92       	push	r10
    3ac8:	bf 92       	push	r11
    3aca:	cf 92       	push	r12
    3acc:	df 92       	push	r13
    3ace:	ef 92       	push	r14
    3ad0:	ff 92       	push	r15
    3ad2:	0f 93       	push	r16
    3ad4:	1f 93       	push	r17
    3ad6:	cf 93       	push	r28
    3ad8:	df 93       	push	r29
    3ada:	cd b7       	in	r28, 0x3d	; 61
    3adc:	de b7       	in	r29, 0x3e	; 62
    3ade:	ca 1b       	sub	r28, r26
    3ae0:	db 0b       	sbc	r29, r27
    3ae2:	0f b6       	in	r0, 0x3f	; 63
    3ae4:	f8 94       	cli
    3ae6:	de bf       	out	0x3e, r29	; 62
    3ae8:	0f be       	out	0x3f, r0	; 63
    3aea:	cd bf       	out	0x3d, r28	; 61
    3aec:	09 94       	ijmp

00003aee <__epilogue_restores__>:
    3aee:	2a 88       	ldd	r2, Y+18	; 0x12
    3af0:	39 88       	ldd	r3, Y+17	; 0x11
    3af2:	48 88       	ldd	r4, Y+16	; 0x10
    3af4:	5f 84       	ldd	r5, Y+15	; 0x0f
    3af6:	6e 84       	ldd	r6, Y+14	; 0x0e
    3af8:	7d 84       	ldd	r7, Y+13	; 0x0d
    3afa:	8c 84       	ldd	r8, Y+12	; 0x0c
    3afc:	9b 84       	ldd	r9, Y+11	; 0x0b
    3afe:	aa 84       	ldd	r10, Y+10	; 0x0a
    3b00:	b9 84       	ldd	r11, Y+9	; 0x09
    3b02:	c8 84       	ldd	r12, Y+8	; 0x08
    3b04:	df 80       	ldd	r13, Y+7	; 0x07
    3b06:	ee 80       	ldd	r14, Y+6	; 0x06
    3b08:	fd 80       	ldd	r15, Y+5	; 0x05
    3b0a:	0c 81       	ldd	r16, Y+4	; 0x04
    3b0c:	1b 81       	ldd	r17, Y+3	; 0x03
    3b0e:	aa 81       	ldd	r26, Y+2	; 0x02
    3b10:	b9 81       	ldd	r27, Y+1	; 0x01
    3b12:	ce 0f       	add	r28, r30
    3b14:	d1 1d       	adc	r29, r1
    3b16:	0f b6       	in	r0, 0x3f	; 63
    3b18:	f8 94       	cli
    3b1a:	de bf       	out	0x3e, r29	; 62
    3b1c:	0f be       	out	0x3f, r0	; 63
    3b1e:	cd bf       	out	0x3d, r28	; 61
    3b20:	ed 01       	movw	r28, r26
    3b22:	08 95       	ret

00003b24 <malloc>:
    3b24:	0f 93       	push	r16
    3b26:	1f 93       	push	r17
    3b28:	cf 93       	push	r28
    3b2a:	df 93       	push	r29
    3b2c:	82 30       	cpi	r24, 0x02	; 2
    3b2e:	91 05       	cpc	r25, r1
    3b30:	10 f4       	brcc	.+4      	; 0x3b36 <malloc+0x12>
    3b32:	82 e0       	ldi	r24, 0x02	; 2
    3b34:	90 e0       	ldi	r25, 0x00	; 0
    3b36:	e0 91 1d 02 	lds	r30, 0x021D	; 0x80021d <__flp>
    3b3a:	f0 91 1e 02 	lds	r31, 0x021E	; 0x80021e <__flp+0x1>
    3b3e:	20 e0       	ldi	r18, 0x00	; 0
    3b40:	30 e0       	ldi	r19, 0x00	; 0
    3b42:	a0 e0       	ldi	r26, 0x00	; 0
    3b44:	b0 e0       	ldi	r27, 0x00	; 0
    3b46:	30 97       	sbiw	r30, 0x00	; 0
    3b48:	19 f1       	breq	.+70     	; 0x3b90 <malloc+0x6c>
    3b4a:	40 81       	ld	r20, Z
    3b4c:	51 81       	ldd	r21, Z+1	; 0x01
    3b4e:	02 81       	ldd	r16, Z+2	; 0x02
    3b50:	13 81       	ldd	r17, Z+3	; 0x03
    3b52:	48 17       	cp	r20, r24
    3b54:	59 07       	cpc	r21, r25
    3b56:	c8 f0       	brcs	.+50     	; 0x3b8a <malloc+0x66>
    3b58:	84 17       	cp	r24, r20
    3b5a:	95 07       	cpc	r25, r21
    3b5c:	69 f4       	brne	.+26     	; 0x3b78 <malloc+0x54>
    3b5e:	10 97       	sbiw	r26, 0x00	; 0
    3b60:	31 f0       	breq	.+12     	; 0x3b6e <malloc+0x4a>
    3b62:	12 96       	adiw	r26, 0x02	; 2
    3b64:	0c 93       	st	X, r16
    3b66:	12 97       	sbiw	r26, 0x02	; 2
    3b68:	13 96       	adiw	r26, 0x03	; 3
    3b6a:	1c 93       	st	X, r17
    3b6c:	27 c0       	rjmp	.+78     	; 0x3bbc <malloc+0x98>
    3b6e:	00 93 1d 02 	sts	0x021D, r16	; 0x80021d <__flp>
    3b72:	10 93 1e 02 	sts	0x021E, r17	; 0x80021e <__flp+0x1>
    3b76:	22 c0       	rjmp	.+68     	; 0x3bbc <malloc+0x98>
    3b78:	21 15       	cp	r18, r1
    3b7a:	31 05       	cpc	r19, r1
    3b7c:	19 f0       	breq	.+6      	; 0x3b84 <malloc+0x60>
    3b7e:	42 17       	cp	r20, r18
    3b80:	53 07       	cpc	r21, r19
    3b82:	18 f4       	brcc	.+6      	; 0x3b8a <malloc+0x66>
    3b84:	9a 01       	movw	r18, r20
    3b86:	bd 01       	movw	r22, r26
    3b88:	ef 01       	movw	r28, r30
    3b8a:	df 01       	movw	r26, r30
    3b8c:	f8 01       	movw	r30, r16
    3b8e:	db cf       	rjmp	.-74     	; 0x3b46 <malloc+0x22>
    3b90:	21 15       	cp	r18, r1
    3b92:	31 05       	cpc	r19, r1
    3b94:	f9 f0       	breq	.+62     	; 0x3bd4 <malloc+0xb0>
    3b96:	28 1b       	sub	r18, r24
    3b98:	39 0b       	sbc	r19, r25
    3b9a:	24 30       	cpi	r18, 0x04	; 4
    3b9c:	31 05       	cpc	r19, r1
    3b9e:	80 f4       	brcc	.+32     	; 0x3bc0 <malloc+0x9c>
    3ba0:	8a 81       	ldd	r24, Y+2	; 0x02
    3ba2:	9b 81       	ldd	r25, Y+3	; 0x03
    3ba4:	61 15       	cp	r22, r1
    3ba6:	71 05       	cpc	r23, r1
    3ba8:	21 f0       	breq	.+8      	; 0x3bb2 <malloc+0x8e>
    3baa:	fb 01       	movw	r30, r22
    3bac:	93 83       	std	Z+3, r25	; 0x03
    3bae:	82 83       	std	Z+2, r24	; 0x02
    3bb0:	04 c0       	rjmp	.+8      	; 0x3bba <malloc+0x96>
    3bb2:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <__flp+0x1>
    3bb6:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <__flp>
    3bba:	fe 01       	movw	r30, r28
    3bbc:	32 96       	adiw	r30, 0x02	; 2
    3bbe:	44 c0       	rjmp	.+136    	; 0x3c48 <malloc+0x124>
    3bc0:	fe 01       	movw	r30, r28
    3bc2:	e2 0f       	add	r30, r18
    3bc4:	f3 1f       	adc	r31, r19
    3bc6:	81 93       	st	Z+, r24
    3bc8:	91 93       	st	Z+, r25
    3bca:	22 50       	subi	r18, 0x02	; 2
    3bcc:	31 09       	sbc	r19, r1
    3bce:	39 83       	std	Y+1, r19	; 0x01
    3bd0:	28 83       	st	Y, r18
    3bd2:	3a c0       	rjmp	.+116    	; 0x3c48 <malloc+0x124>
    3bd4:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <__brkval>
    3bd8:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <__brkval+0x1>
    3bdc:	23 2b       	or	r18, r19
    3bde:	41 f4       	brne	.+16     	; 0x3bf0 <malloc+0xcc>
    3be0:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__malloc_heap_start>
    3be4:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__malloc_heap_start+0x1>
    3be8:	30 93 1c 02 	sts	0x021C, r19	; 0x80021c <__brkval+0x1>
    3bec:	20 93 1b 02 	sts	0x021B, r18	; 0x80021b <__brkval>
    3bf0:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_end>
    3bf4:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_end+0x1>
    3bf8:	21 15       	cp	r18, r1
    3bfa:	31 05       	cpc	r19, r1
    3bfc:	41 f4       	brne	.+16     	; 0x3c0e <malloc+0xea>
    3bfe:	2d b7       	in	r18, 0x3d	; 61
    3c00:	3e b7       	in	r19, 0x3e	; 62
    3c02:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <__malloc_margin>
    3c06:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <__malloc_margin+0x1>
    3c0a:	24 1b       	sub	r18, r20
    3c0c:	35 0b       	sbc	r19, r21
    3c0e:	e0 91 1b 02 	lds	r30, 0x021B	; 0x80021b <__brkval>
    3c12:	f0 91 1c 02 	lds	r31, 0x021C	; 0x80021c <__brkval+0x1>
    3c16:	e2 17       	cp	r30, r18
    3c18:	f3 07       	cpc	r31, r19
    3c1a:	a0 f4       	brcc	.+40     	; 0x3c44 <malloc+0x120>
    3c1c:	2e 1b       	sub	r18, r30
    3c1e:	3f 0b       	sbc	r19, r31
    3c20:	28 17       	cp	r18, r24
    3c22:	39 07       	cpc	r19, r25
    3c24:	78 f0       	brcs	.+30     	; 0x3c44 <malloc+0x120>
    3c26:	ac 01       	movw	r20, r24
    3c28:	4e 5f       	subi	r20, 0xFE	; 254
    3c2a:	5f 4f       	sbci	r21, 0xFF	; 255
    3c2c:	24 17       	cp	r18, r20
    3c2e:	35 07       	cpc	r19, r21
    3c30:	48 f0       	brcs	.+18     	; 0x3c44 <malloc+0x120>
    3c32:	4e 0f       	add	r20, r30
    3c34:	5f 1f       	adc	r21, r31
    3c36:	50 93 1c 02 	sts	0x021C, r21	; 0x80021c <__brkval+0x1>
    3c3a:	40 93 1b 02 	sts	0x021B, r20	; 0x80021b <__brkval>
    3c3e:	81 93       	st	Z+, r24
    3c40:	91 93       	st	Z+, r25
    3c42:	02 c0       	rjmp	.+4      	; 0x3c48 <malloc+0x124>
    3c44:	e0 e0       	ldi	r30, 0x00	; 0
    3c46:	f0 e0       	ldi	r31, 0x00	; 0
    3c48:	cf 01       	movw	r24, r30
    3c4a:	df 91       	pop	r29
    3c4c:	cf 91       	pop	r28
    3c4e:	1f 91       	pop	r17
    3c50:	0f 91       	pop	r16
    3c52:	08 95       	ret

00003c54 <free>:
    3c54:	cf 93       	push	r28
    3c56:	df 93       	push	r29
    3c58:	00 97       	sbiw	r24, 0x00	; 0
    3c5a:	09 f4       	brne	.+2      	; 0x3c5e <free+0xa>
    3c5c:	81 c0       	rjmp	.+258    	; 0x3d60 <free+0x10c>
    3c5e:	fc 01       	movw	r30, r24
    3c60:	32 97       	sbiw	r30, 0x02	; 2
    3c62:	13 82       	std	Z+3, r1	; 0x03
    3c64:	12 82       	std	Z+2, r1	; 0x02
    3c66:	a0 91 1d 02 	lds	r26, 0x021D	; 0x80021d <__flp>
    3c6a:	b0 91 1e 02 	lds	r27, 0x021E	; 0x80021e <__flp+0x1>
    3c6e:	10 97       	sbiw	r26, 0x00	; 0
    3c70:	81 f4       	brne	.+32     	; 0x3c92 <free+0x3e>
    3c72:	20 81       	ld	r18, Z
    3c74:	31 81       	ldd	r19, Z+1	; 0x01
    3c76:	82 0f       	add	r24, r18
    3c78:	93 1f       	adc	r25, r19
    3c7a:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <__brkval>
    3c7e:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <__brkval+0x1>
    3c82:	28 17       	cp	r18, r24
    3c84:	39 07       	cpc	r19, r25
    3c86:	51 f5       	brne	.+84     	; 0x3cdc <free+0x88>
    3c88:	f0 93 1c 02 	sts	0x021C, r31	; 0x80021c <__brkval+0x1>
    3c8c:	e0 93 1b 02 	sts	0x021B, r30	; 0x80021b <__brkval>
    3c90:	67 c0       	rjmp	.+206    	; 0x3d60 <free+0x10c>
    3c92:	ed 01       	movw	r28, r26
    3c94:	20 e0       	ldi	r18, 0x00	; 0
    3c96:	30 e0       	ldi	r19, 0x00	; 0
    3c98:	ce 17       	cp	r28, r30
    3c9a:	df 07       	cpc	r29, r31
    3c9c:	40 f4       	brcc	.+16     	; 0x3cae <free+0x5a>
    3c9e:	4a 81       	ldd	r20, Y+2	; 0x02
    3ca0:	5b 81       	ldd	r21, Y+3	; 0x03
    3ca2:	9e 01       	movw	r18, r28
    3ca4:	41 15       	cp	r20, r1
    3ca6:	51 05       	cpc	r21, r1
    3ca8:	f1 f0       	breq	.+60     	; 0x3ce6 <free+0x92>
    3caa:	ea 01       	movw	r28, r20
    3cac:	f5 cf       	rjmp	.-22     	; 0x3c98 <free+0x44>
    3cae:	d3 83       	std	Z+3, r29	; 0x03
    3cb0:	c2 83       	std	Z+2, r28	; 0x02
    3cb2:	40 81       	ld	r20, Z
    3cb4:	51 81       	ldd	r21, Z+1	; 0x01
    3cb6:	84 0f       	add	r24, r20
    3cb8:	95 1f       	adc	r25, r21
    3cba:	c8 17       	cp	r28, r24
    3cbc:	d9 07       	cpc	r29, r25
    3cbe:	59 f4       	brne	.+22     	; 0x3cd6 <free+0x82>
    3cc0:	88 81       	ld	r24, Y
    3cc2:	99 81       	ldd	r25, Y+1	; 0x01
    3cc4:	84 0f       	add	r24, r20
    3cc6:	95 1f       	adc	r25, r21
    3cc8:	02 96       	adiw	r24, 0x02	; 2
    3cca:	91 83       	std	Z+1, r25	; 0x01
    3ccc:	80 83       	st	Z, r24
    3cce:	8a 81       	ldd	r24, Y+2	; 0x02
    3cd0:	9b 81       	ldd	r25, Y+3	; 0x03
    3cd2:	93 83       	std	Z+3, r25	; 0x03
    3cd4:	82 83       	std	Z+2, r24	; 0x02
    3cd6:	21 15       	cp	r18, r1
    3cd8:	31 05       	cpc	r19, r1
    3cda:	29 f4       	brne	.+10     	; 0x3ce6 <free+0x92>
    3cdc:	f0 93 1e 02 	sts	0x021E, r31	; 0x80021e <__flp+0x1>
    3ce0:	e0 93 1d 02 	sts	0x021D, r30	; 0x80021d <__flp>
    3ce4:	3d c0       	rjmp	.+122    	; 0x3d60 <free+0x10c>
    3ce6:	e9 01       	movw	r28, r18
    3ce8:	fb 83       	std	Y+3, r31	; 0x03
    3cea:	ea 83       	std	Y+2, r30	; 0x02
    3cec:	49 91       	ld	r20, Y+
    3cee:	59 91       	ld	r21, Y+
    3cf0:	c4 0f       	add	r28, r20
    3cf2:	d5 1f       	adc	r29, r21
    3cf4:	ec 17       	cp	r30, r28
    3cf6:	fd 07       	cpc	r31, r29
    3cf8:	61 f4       	brne	.+24     	; 0x3d12 <free+0xbe>
    3cfa:	80 81       	ld	r24, Z
    3cfc:	91 81       	ldd	r25, Z+1	; 0x01
    3cfe:	84 0f       	add	r24, r20
    3d00:	95 1f       	adc	r25, r21
    3d02:	02 96       	adiw	r24, 0x02	; 2
    3d04:	e9 01       	movw	r28, r18
    3d06:	99 83       	std	Y+1, r25	; 0x01
    3d08:	88 83       	st	Y, r24
    3d0a:	82 81       	ldd	r24, Z+2	; 0x02
    3d0c:	93 81       	ldd	r25, Z+3	; 0x03
    3d0e:	9b 83       	std	Y+3, r25	; 0x03
    3d10:	8a 83       	std	Y+2, r24	; 0x02
    3d12:	e0 e0       	ldi	r30, 0x00	; 0
    3d14:	f0 e0       	ldi	r31, 0x00	; 0
    3d16:	12 96       	adiw	r26, 0x02	; 2
    3d18:	8d 91       	ld	r24, X+
    3d1a:	9c 91       	ld	r25, X
    3d1c:	13 97       	sbiw	r26, 0x03	; 3
    3d1e:	00 97       	sbiw	r24, 0x00	; 0
    3d20:	19 f0       	breq	.+6      	; 0x3d28 <free+0xd4>
    3d22:	fd 01       	movw	r30, r26
    3d24:	dc 01       	movw	r26, r24
    3d26:	f7 cf       	rjmp	.-18     	; 0x3d16 <free+0xc2>
    3d28:	8d 91       	ld	r24, X+
    3d2a:	9c 91       	ld	r25, X
    3d2c:	11 97       	sbiw	r26, 0x01	; 1
    3d2e:	9d 01       	movw	r18, r26
    3d30:	2e 5f       	subi	r18, 0xFE	; 254
    3d32:	3f 4f       	sbci	r19, 0xFF	; 255
    3d34:	82 0f       	add	r24, r18
    3d36:	93 1f       	adc	r25, r19
    3d38:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <__brkval>
    3d3c:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <__brkval+0x1>
    3d40:	28 17       	cp	r18, r24
    3d42:	39 07       	cpc	r19, r25
    3d44:	69 f4       	brne	.+26     	; 0x3d60 <free+0x10c>
    3d46:	30 97       	sbiw	r30, 0x00	; 0
    3d48:	29 f4       	brne	.+10     	; 0x3d54 <free+0x100>
    3d4a:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <__flp+0x1>
    3d4e:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <__flp>
    3d52:	02 c0       	rjmp	.+4      	; 0x3d58 <free+0x104>
    3d54:	13 82       	std	Z+3, r1	; 0x03
    3d56:	12 82       	std	Z+2, r1	; 0x02
    3d58:	b0 93 1c 02 	sts	0x021C, r27	; 0x80021c <__brkval+0x1>
    3d5c:	a0 93 1b 02 	sts	0x021B, r26	; 0x80021b <__brkval>
    3d60:	df 91       	pop	r29
    3d62:	cf 91       	pop	r28
    3d64:	08 95       	ret

00003d66 <strncat>:
    3d66:	fb 01       	movw	r30, r22
    3d68:	dc 01       	movw	r26, r24
    3d6a:	0d 90       	ld	r0, X+
    3d6c:	00 20       	and	r0, r0
    3d6e:	e9 f7       	brne	.-6      	; 0x3d6a <strncat+0x4>
    3d70:	11 97       	sbiw	r26, 0x01	; 1
    3d72:	41 50       	subi	r20, 0x01	; 1
    3d74:	50 40       	sbci	r21, 0x00	; 0
    3d76:	28 f0       	brcs	.+10     	; 0x3d82 <strncat+0x1c>
    3d78:	01 90       	ld	r0, Z+
    3d7a:	00 20       	and	r0, r0
    3d7c:	0d 92       	st	X+, r0
    3d7e:	c9 f7       	brne	.-14     	; 0x3d72 <strncat+0xc>
    3d80:	08 95       	ret
    3d82:	1c 92       	st	X, r1
    3d84:	08 95       	ret

00003d86 <__do_global_dtors>:
    3d86:	10 e0       	ldi	r17, 0x00	; 0
    3d88:	c2 e4       	ldi	r28, 0x42	; 66
    3d8a:	d0 e0       	ldi	r29, 0x00	; 0
    3d8c:	04 c0       	rjmp	.+8      	; 0x3d96 <__do_global_dtors+0x10>
    3d8e:	fe 01       	movw	r30, r28
    3d90:	0e 94 33 1d 	call	0x3a66	; 0x3a66 <__tablejump2__>
    3d94:	21 96       	adiw	r28, 0x01	; 1
    3d96:	c3 34       	cpi	r28, 0x43	; 67
    3d98:	d1 07       	cpc	r29, r17
    3d9a:	c9 f7       	brne	.-14     	; 0x3d8e <__do_global_dtors+0x8>
    3d9c:	f8 94       	cli

00003d9e <__stop_program>:
    3d9e:	ff cf       	rjmp	.-2      	; 0x3d9e <__stop_program>
