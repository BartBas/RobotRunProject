
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00002380  00002414  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002380  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006f  0080013a  0080013a  0000244e  2**0
                  ALLOC
  3 .stab         000059c4  00000000  00000000  00002450  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000084be  00000000  00000000  00007e14  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  000102d2  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00010314  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000108  00000000  00000000  00010354  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00001a69  00000000  00000000  0001045c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000c17  00000000  00000000  00011ec5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0000117b  00000000  00000000  00012adc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000002dc  00000000  00000000  00013c58  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    000007a4  00000000  00000000  00013f34  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00000985  00000000  00000000  000146d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000000e0  00000000  00000000  0001505d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__dtors_end>
       4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
       8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
       c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      24:	0c 94 fa 09 	jmp	0x13f4	; 0x13f4 <__vector_9>
      28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	be 0a       	sbc	r11, r30

0000006a <__dtors_end>:
      6a:	11 24       	eor	r1, r1
      6c:	1f be       	out	0x3f, r1	; 63
      6e:	cf ef       	ldi	r28, 0xFF	; 255
      70:	d8 e0       	ldi	r29, 0x08	; 8
      72:	de bf       	out	0x3e, r29	; 62
      74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e0       	ldi	r26, 0x00	; 0
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	e0 e8       	ldi	r30, 0x80	; 128
      7e:	f3 e2       	ldi	r31, 0x23	; 35
      80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
      82:	05 90       	lpm	r0, Z+
      84:	0d 92       	st	X+, r0
      86:	aa 33       	cpi	r26, 0x3A	; 58
      88:	b1 07       	cpc	r27, r17
      8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
      8c:	21 e0       	ldi	r18, 0x01	; 1
      8e:	aa e3       	ldi	r26, 0x3A	; 58
      90:	b1 e0       	ldi	r27, 0x01	; 1
      92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
      94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
      96:	a9 3a       	cpi	r26, 0xA9	; 169
      98:	b2 07       	cpc	r27, r18
      9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>
      9c:	0e 94 b5 00 	call	0x16a	; 0x16a <main>
      a0:	0c 94 b3 11 	jmp	0x2366	; 0x2366 <__do_global_dtors>

000000a4 <__bad_interrupt>:
      a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <batteryPercentage>:
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
      a8:	0e 94 6e 07 	call	0xedc	; 0xedc <read_battery_millivolts_3pi>

int batteryPercentage()//Should this function be in main or in display.c or something else?
{
	
	int milliVolts = read_battery_millivolts();
	int batteryPercent = milliVolts/50;
      ac:	62 e3       	ldi	r22, 0x32	; 50
      ae:	70 e0       	ldi	r23, 0x00	; 0
      b0:	0e 94 de 0f 	call	0x1fbc	; 0x1fbc <__divmodhi4>
      b4:	cb 01       	movw	r24, r22
	return batteryPercent;
}
      b6:	08 95       	ret

000000b8 <updateDisplay>:

void updateDisplay(int orderPercent, int batteryPercent, robotStates currentState)
{
      b8:	ef 92       	push	r14
      ba:	ff 92       	push	r15
      bc:	0f 93       	push	r16
      be:	1f 93       	push	r17
      c0:	cf 93       	push	r28
      c2:	7c 01       	movw	r14, r24
      c4:	8b 01       	movw	r16, r22
      c6:	c4 2f       	mov	r28, r20
	clear();
      c8:	0e 94 77 08 	call	0x10ee	; 0x10ee <clear>
	lcd_goto_xy(0,0);
      cc:	60 e0       	ldi	r22, 0x00	; 0
      ce:	80 e0       	ldi	r24, 0x00	; 0
      d0:	0e 94 fe 08 	call	0x11fc	; 0x11fc <lcd_goto_xy>
	print("Task:");
      d4:	83 e2       	ldi	r24, 0x23	; 35
      d6:	91 e0       	ldi	r25, 0x01	; 1
      d8:	0e 94 86 08 	call	0x110c	; 0x110c <print>
	print_long(orderPercent);
      dc:	b7 01       	movw	r22, r14
      de:	ff 0c       	add	r15, r15
      e0:	88 0b       	sbc	r24, r24
      e2:	99 0b       	sbc	r25, r25
      e4:	0e 94 db 08 	call	0x11b6	; 0x11b6 <print_long>
	print("%");
      e8:	89 e2       	ldi	r24, 0x29	; 41
      ea:	91 e0       	ldi	r25, 0x01	; 1
      ec:	0e 94 86 08 	call	0x110c	; 0x110c <print>
	
	lcd_goto_xy(0,1);
      f0:	61 e0       	ldi	r22, 0x01	; 1
      f2:	80 e0       	ldi	r24, 0x00	; 0
      f4:	0e 94 fe 08 	call	0x11fc	; 0x11fc <lcd_goto_xy>
	print("Bat:");
      f8:	8b e2       	ldi	r24, 0x2B	; 43
      fa:	91 e0       	ldi	r25, 0x01	; 1
      fc:	0e 94 86 08 	call	0x110c	; 0x110c <print>
	print_long(batteryPercent);
     100:	b8 01       	movw	r22, r16
     102:	11 0f       	add	r17, r17
     104:	88 0b       	sbc	r24, r24
     106:	99 0b       	sbc	r25, r25
     108:	0e 94 db 08 	call	0x11b6	; 0x11b6 <print_long>
	print("%");
     10c:	89 e2       	ldi	r24, 0x29	; 41
     10e:	91 e0       	ldi	r25, 0x01	; 1
     110:	0e 94 86 08 	call	0x110c	; 0x110c <print>
	switch(currentState)
     114:	c2 30       	cpi	r28, 0x02	; 2
     116:	a9 f0       	breq	.+42     	; 0x142 <updateDisplay+0x8a>
     118:	28 f4       	brcc	.+10     	; 0x124 <updateDisplay+0x6c>
     11a:	cc 23       	and	r28, r28
     11c:	41 f0       	breq	.+16     	; 0x12e <updateDisplay+0x76>
     11e:	c1 30       	cpi	r28, 0x01	; 1
     120:	59 f0       	breq	.+22     	; 0x138 <updateDisplay+0x80>
     122:	1d c0       	rjmp	.+58     	; 0x15e <updateDisplay+0xa6>
     124:	c3 30       	cpi	r28, 0x03	; 3
     126:	91 f0       	breq	.+36     	; 0x14c <updateDisplay+0x94>
     128:	c4 30       	cpi	r28, 0x04	; 4
     12a:	a9 f0       	breq	.+42     	; 0x156 <updateDisplay+0x9e>
     12c:	18 c0       	rjmp	.+48     	; 0x15e <updateDisplay+0xa6>
	{
		case manualControl:
		print("M");//M for Manual
     12e:	80 e3       	ldi	r24, 0x30	; 48
     130:	91 e0       	ldi	r25, 0x01	; 1
     132:	0e 94 86 08 	call	0x110c	; 0x110c <print>
		break;
     136:	13 c0       	rjmp	.+38     	; 0x15e <updateDisplay+0xa6>
		case mazeSolver:
		print("P");//P for Parcours
     138:	82 e3       	ldi	r24, 0x32	; 50
     13a:	91 e0       	ldi	r25, 0x01	; 1
     13c:	0e 94 86 08 	call	0x110c	; 0x110c <print>
		break;
     140:	0e c0       	rjmp	.+28     	; 0x15e <updateDisplay+0xa6>
		case logicsBot:
		print("O");//O for Order
     142:	84 e3       	ldi	r24, 0x34	; 52
     144:	91 e0       	ldi	r25, 0x01	; 1
     146:	0e 94 86 08 	call	0x110c	; 0x110c <print>
		break;
     14a:	09 c0       	rjmp	.+18     	; 0x15e <updateDisplay+0xa6>
		case chargeMode:
		print("C");//C for Charge
     14c:	86 e3       	ldi	r24, 0x36	; 54
     14e:	91 e0       	ldi	r25, 0x01	; 1
     150:	0e 94 86 08 	call	0x110c	; 0x110c <print>
		break;
     154:	04 c0       	rjmp	.+8      	; 0x15e <updateDisplay+0xa6>
		case homingMode:
		print("H");//H for Homing
     156:	88 e3       	ldi	r24, 0x38	; 56
     158:	91 e0       	ldi	r25, 0x01	; 1
     15a:	0e 94 86 08 	call	0x110c	; 0x110c <print>
		break;
	}
}
     15e:	cf 91       	pop	r28
     160:	1f 91       	pop	r17
     162:	0f 91       	pop	r16
     164:	ff 90       	pop	r15
     166:	ef 90       	pop	r14
     168:	08 95       	ret

0000016a <main>:
     16a:	0e 94 77 08 	call	0x10ee	; 0x10ee <clear>
     16e:	80 ed       	ldi	r24, 0xD0	; 208
     170:	97 e0       	ldi	r25, 0x07	; 7
     172:	0e 94 ba 0a 	call	0x1574	; 0x1574 <pololu_3pi_init>
     176:	0e 94 c2 00 	call	0x184	; 0x184 <initialize>
     17a:	0e 94 55 04 	call	0x8aa	; 0x8aa <warehouse>
     17e:	80 e0       	ldi	r24, 0x00	; 0
     180:	90 e0       	ldi	r25, 0x00	; 0
     182:	08 95       	ret

00000184 <initialize>:
		print_character(c);
	}
}

void initialize()
{
     184:	cf 93       	push	r28
     186:	df 93       	push	r29
	unsigned int counter; // used as a simple timer
	
	pololu_3pi_init(2000);
     188:	80 ed       	ldi	r24, 0xD0	; 208
     18a:	97 e0       	ldi	r25, 0x07	; 7
     18c:	0e 94 ba 0a 	call	0x1574	; 0x1574 <pololu_3pi_init>
	
	while(!button_is_pressed(BUTTON_B)){}	
     190:	80 e1       	ldi	r24, 0x10	; 16
     192:	0e 94 f7 09 	call	0x13ee	; 0x13ee <button_is_pressed>
     196:	88 23       	and	r24, r24
     198:	d9 f3       	breq	.-10     	; 0x190 <initialize+0xc>
	wait_for_button_release(BUTTON_B);
     19a:	80 e1       	ldi	r24, 0x10	; 16
     19c:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <wait_for_button_release>
	delay_ms(1000);
     1a0:	88 ee       	ldi	r24, 0xE8	; 232
     1a2:	93 e0       	ldi	r25, 0x03	; 3
     1a4:	0e 94 42 0a 	call	0x1484	; 0x1484 <delay_ms>

	for(counter=0;counter<80;counter++)
     1a8:	c0 e0       	ldi	r28, 0x00	; 0
     1aa:	d0 e0       	ldi	r29, 0x00	; 0
     1ac:	19 c0       	rjmp	.+50     	; 0x1e0 <initialize+0x5c>
	{
		if(counter < 20 || counter >= 60)
     1ae:	ce 01       	movw	r24, r28
     1b0:	44 97       	sbiw	r24, 0x14	; 20
     1b2:	88 97       	sbiw	r24, 0x28	; 40
     1b4:	38 f0       	brcs	.+14     	; 0x1c4 <initialize+0x40>
		set_motors(40,-40);
     1b6:	68 ed       	ldi	r22, 0xD8	; 216
     1b8:	7f ef       	ldi	r23, 0xFF	; 255
     1ba:	88 e2       	ldi	r24, 0x28	; 40
     1bc:	90 e0       	ldi	r25, 0x00	; 0
     1be:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
     1c2:	06 c0       	rjmp	.+12     	; 0x1d0 <initialize+0x4c>
		else
		set_motors(-40,40);
     1c4:	68 e2       	ldi	r22, 0x28	; 40
     1c6:	70 e0       	ldi	r23, 0x00	; 0
     1c8:	88 ed       	ldi	r24, 0xD8	; 216
     1ca:	9f ef       	ldi	r25, 0xFF	; 255
     1cc:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
		calibrate_line_sensors(IR_EMITTERS_ON);
     1d0:	81 e0       	ldi	r24, 0x01	; 1
     1d2:	0e 94 7e 0a 	call	0x14fc	; 0x14fc <calibrate_line_sensors>
		
		delay_ms(20);
     1d6:	84 e1       	ldi	r24, 0x14	; 20
     1d8:	90 e0       	ldi	r25, 0x00	; 0
     1da:	0e 94 42 0a 	call	0x1484	; 0x1484 <delay_ms>
	
	while(!button_is_pressed(BUTTON_B)){}	
	wait_for_button_release(BUTTON_B);
	delay_ms(1000);

	for(counter=0;counter<80;counter++)
     1de:	21 96       	adiw	r28, 0x01	; 1
     1e0:	c0 35       	cpi	r28, 0x50	; 80
     1e2:	d1 05       	cpc	r29, r1
     1e4:	20 f3       	brcs	.-56     	; 0x1ae <initialize+0x2a>
		set_motors(-40,40);
		calibrate_line_sensors(IR_EMITTERS_ON);
		
		delay_ms(20);
	}
	set_motors(0,0);
     1e6:	60 e0       	ldi	r22, 0x00	; 0
     1e8:	70 e0       	ldi	r23, 0x00	; 0
     1ea:	80 e0       	ldi	r24, 0x00	; 0
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
	
	while(!button_is_pressed(BUTTON_B)){}
     1f2:	80 e1       	ldi	r24, 0x10	; 16
     1f4:	0e 94 f7 09 	call	0x13ee	; 0x13ee <button_is_pressed>
     1f8:	88 23       	and	r24, r24
     1fa:	d9 f3       	breq	.-10     	; 0x1f2 <initialize+0x6e>
	wait_for_button_release(BUTTON_B);
     1fc:	80 e1       	ldi	r24, 0x10	; 16
     1fe:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <wait_for_button_release>
	
	clear();
     202:	0e 94 77 08 	call	0x10ee	; 0x10ee <clear>
}
     206:	df 91       	pop	r29
     208:	cf 91       	pop	r28
     20a:	08 95       	ret

0000020c <inch>:

void inch(){
	set_motors(50,50);
     20c:	62 e3       	ldi	r22, 0x32	; 50
     20e:	70 e0       	ldi	r23, 0x00	; 0
     210:	82 e3       	ldi	r24, 0x32	; 50
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     218:	88 ec       	ldi	r24, 0xC8	; 200
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	0e 94 42 0a 	call	0x1484	; 0x1484 <delay_ms>
	delay(200);
	set_motors(0,0);
     220:	60 e0       	ldi	r22, 0x00	; 0
     222:	70 e0       	ldi	r23, 0x00	; 0
     224:	80 e0       	ldi	r24, 0x00	; 0
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
     22c:	08 95       	ret

0000022e <motorControl>:
		
	}
}


void motorControl(char x){
     22e:	cf 93       	push	r28
     230:	c8 2f       	mov	r28, r24
	read_line(sensors,IR_EMITTERS_ON);
     232:	61 e0       	ldi	r22, 0x01	; 1
     234:	8b e9       	ldi	r24, 0x9B	; 155
     236:	91 e0       	ldi	r25, 0x01	; 1
     238:	0e 94 84 0a 	call	0x1508	; 0x1508 <read_line>
	
	if(x == 'N')
     23c:	ce 34       	cpi	r28, 0x4E	; 78
     23e:	39 f4       	brne	.+14     	; 0x24e <motorControl+0x20>
	set_motors(0,0);
     240:	60 e0       	ldi	r22, 0x00	; 0
     242:	70 e0       	ldi	r23, 0x00	; 0
     244:	80 e0       	ldi	r24, 0x00	; 0
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
     24c:	ba c0       	rjmp	.+372    	; 0x3c2 <motorControl+0x194>
	
	
	else if(x == 'L'){										//turn left
     24e:	cc 34       	cpi	r28, 0x4C	; 76
     250:	09 f5       	brne	.+66     	; 0x294 <motorControl+0x66>
		set_motors(-50,50);
     252:	62 e3       	ldi	r22, 0x32	; 50
     254:	70 e0       	ldi	r23, 0x00	; 0
     256:	8e ec       	ldi	r24, 0xCE	; 206
     258:	9f ef       	ldi	r25, 0xFF	; 255
     25a:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
		while (sensors[2] >=500){
     25e:	05 c0       	rjmp	.+10     	; 0x26a <motorControl+0x3c>
			read_line(sensors,IR_EMITTERS_ON);
     260:	61 e0       	ldi	r22, 0x01	; 1
     262:	8b e9       	ldi	r24, 0x9B	; 155
     264:	91 e0       	ldi	r25, 0x01	; 1
     266:	0e 94 84 0a 	call	0x1508	; 0x1508 <read_line>
	set_motors(0,0);
	
	
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
     26a:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     26e:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     272:	84 3f       	cpi	r24, 0xF4	; 244
     274:	91 40       	sbci	r25, 0x01	; 1
     276:	a0 f7       	brcc	.-24     	; 0x260 <motorControl+0x32>
     278:	05 c0       	rjmp	.+10     	; 0x284 <motorControl+0x56>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     27a:	61 e0       	ldi	r22, 0x01	; 1
     27c:	8b e9       	ldi	r24, 0x9B	; 155
     27e:	91 e0       	ldi	r25, 0x01	; 1
     280:	0e 94 84 0a 	call	0x1508	; 0x1508 <read_line>
	else if(x == 'L'){										//turn left
		set_motors(-50,50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     284:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     288:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     28c:	85 3f       	cpi	r24, 0xF5	; 245
     28e:	91 40       	sbci	r25, 0x01	; 1
     290:	a0 f3       	brcs	.-24     	; 0x27a <motorControl+0x4c>
     292:	97 c0       	rjmp	.+302    	; 0x3c2 <motorControl+0x194>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'R'){									//turn right
     294:	c2 35       	cpi	r28, 0x52	; 82
     296:	09 f5       	brne	.+66     	; 0x2da <motorControl+0xac>
		set_motors(50,-50);
     298:	6e ec       	ldi	r22, 0xCE	; 206
     29a:	7f ef       	ldi	r23, 0xFF	; 255
     29c:	82 e3       	ldi	r24, 0x32	; 50
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
		while (sensors[2] >=500){
     2a4:	05 c0       	rjmp	.+10     	; 0x2b0 <motorControl+0x82>
			read_line(sensors,IR_EMITTERS_ON);
     2a6:	61 e0       	ldi	r22, 0x01	; 1
     2a8:	8b e9       	ldi	r24, 0x9B	; 155
     2aa:	91 e0       	ldi	r25, 0x01	; 1
     2ac:	0e 94 84 0a 	call	0x1508	; 0x1508 <read_line>
		}
	}
	
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
     2b0:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     2b4:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     2b8:	84 3f       	cpi	r24, 0xF4	; 244
     2ba:	91 40       	sbci	r25, 0x01	; 1
     2bc:	a0 f7       	brcc	.-24     	; 0x2a6 <motorControl+0x78>
     2be:	05 c0       	rjmp	.+10     	; 0x2ca <motorControl+0x9c>
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
			read_line(sensors,IR_EMITTERS_ON);
     2c0:	61 e0       	ldi	r22, 0x01	; 1
     2c2:	8b e9       	ldi	r24, 0x9B	; 155
     2c4:	91 e0       	ldi	r25, 0x01	; 1
     2c6:	0e 94 84 0a 	call	0x1508	; 0x1508 <read_line>
	else if(x == 'R'){									//turn right
		set_motors(50,-50);
		while (sensors[2] >=500){
			read_line(sensors,IR_EMITTERS_ON);
		}
		while (sensors[2] <=500){
     2ca:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     2ce:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     2d2:	85 3f       	cpi	r24, 0xF5	; 245
     2d4:	91 40       	sbci	r25, 0x01	; 1
     2d6:	a0 f3       	brcs	.-24     	; 0x2c0 <motorControl+0x92>
     2d8:	74 c0       	rjmp	.+232    	; 0x3c2 <motorControl+0x194>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'S'){									//drive straight and corrects the adjusment of the robot if it aint straight
     2da:	c3 35       	cpi	r28, 0x53	; 83
     2dc:	89 f5       	brne	.+98     	; 0x340 <motorControl+0x112>
		set_motors(50,50);
     2de:	62 e3       	ldi	r22, 0x32	; 50
     2e0:	70 e0       	ldi	r23, 0x00	; 0
     2e2:	82 e3       	ldi	r24, 0x32	; 50
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
		
		if (sensors[3] >= 600 && sensors[4] <= 300 )
     2ea:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <sensors+0x6>
     2ee:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <sensors+0x7>
     2f2:	88 35       	cpi	r24, 0x58	; 88
     2f4:	92 40       	sbci	r25, 0x02	; 2
     2f6:	68 f0       	brcs	.+26     	; 0x312 <motorControl+0xe4>
     2f8:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <sensors+0x8>
     2fc:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <sensors+0x9>
     300:	8d 32       	cpi	r24, 0x2D	; 45
     302:	91 40       	sbci	r25, 0x01	; 1
     304:	30 f4       	brcc	.+12     	; 0x312 <motorControl+0xe4>
			set_motors(120,40);
     306:	68 e2       	ldi	r22, 0x28	; 40
     308:	70 e0       	ldi	r23, 0x00	; 0
     30a:	88 e7       	ldi	r24, 0x78	; 120
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
		if (sensors[1] >= 600 && sensors[0] <= 300 )
     312:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     316:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     31a:	88 35       	cpi	r24, 0x58	; 88
     31c:	92 40       	sbci	r25, 0x02	; 2
     31e:	08 f4       	brcc	.+2      	; 0x322 <motorControl+0xf4>
     320:	50 c0       	rjmp	.+160    	; 0x3c2 <motorControl+0x194>
     322:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <sensors>
     326:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <sensors+0x1>
     32a:	8d 32       	cpi	r24, 0x2D	; 45
     32c:	91 40       	sbci	r25, 0x01	; 1
     32e:	08 f0       	brcs	.+2      	; 0x332 <motorControl+0x104>
     330:	48 c0       	rjmp	.+144    	; 0x3c2 <motorControl+0x194>
			set_motors(40,120);
     332:	68 e7       	ldi	r22, 0x78	; 120
     334:	70 e0       	ldi	r23, 0x00	; 0
     336:	88 e2       	ldi	r24, 0x28	; 40
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
     33e:	41 c0       	rjmp	.+130    	; 0x3c2 <motorControl+0x194>
	}
	
	else if(x == 'B'){									// reverse
     340:	c2 34       	cpi	r28, 0x42	; 66
     342:	09 f5       	brne	.+66     	; 0x386 <motorControl+0x158>
		set_motors(-50,-50);
     344:	6e ec       	ldi	r22, 0xCE	; 206
     346:	7f ef       	ldi	r23, 0xFF	; 255
     348:	8e ec       	ldi	r24, 0xCE	; 206
     34a:	9f ef       	ldi	r25, 0xFF	; 255
     34c:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
		if (sensors[3] >=400)
     350:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <sensors+0x6>
     354:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <sensors+0x7>
     358:	80 39       	cpi	r24, 0x90	; 144
     35a:	91 40       	sbci	r25, 0x01	; 1
     35c:	30 f0       	brcs	.+12     	; 0x36a <motorControl+0x13c>
		set_motors(-50,-55);
     35e:	69 ec       	ldi	r22, 0xC9	; 201
     360:	7f ef       	ldi	r23, 0xFF	; 255
     362:	8e ec       	ldi	r24, 0xCE	; 206
     364:	9f ef       	ldi	r25, 0xFF	; 255
     366:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
		if (sensors[1] >=400)
     36a:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     36e:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     372:	80 39       	cpi	r24, 0x90	; 144
     374:	91 40       	sbci	r25, 0x01	; 1
     376:	28 f1       	brcs	.+74     	; 0x3c2 <motorControl+0x194>
		set_motors(-55,-50);
     378:	6e ec       	ldi	r22, 0xCE	; 206
     37a:	7f ef       	ldi	r23, 0xFF	; 255
     37c:	89 ec       	ldi	r24, 0xC9	; 201
     37e:	9f ef       	ldi	r25, 0xFF	; 255
     380:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
     384:	1e c0       	rjmp	.+60     	; 0x3c2 <motorControl+0x194>
	}
	else if(x == 'T'){									// Turn around
     386:	c4 35       	cpi	r28, 0x54	; 84
     388:	a1 f4       	brne	.+40     	; 0x3b2 <motorControl+0x184>
		set_motors(-75,75);
     38a:	6b e4       	ldi	r22, 0x4B	; 75
     38c:	70 e0       	ldi	r23, 0x00	; 0
     38e:	85 eb       	ldi	r24, 0xB5	; 181
     390:	9f ef       	ldi	r25, 0xFF	; 255
     392:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
		while (sensors[2] >=500){
     396:	05 c0       	rjmp	.+10     	; 0x3a2 <motorControl+0x174>
			read_line(sensors,IR_EMITTERS_ON);
     398:	61 e0       	ldi	r22, 0x01	; 1
     39a:	8b e9       	ldi	r24, 0x9B	; 155
     39c:	91 e0       	ldi	r25, 0x01	; 1
     39e:	0e 94 84 0a 	call	0x1508	; 0x1508 <read_line>
		if (sensors[1] >=400)
		set_motors(-55,-50);
	}
	else if(x == 'T'){									// Turn around
		set_motors(-75,75);
		while (sensors[2] >=500){
     3a2:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     3a6:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     3aa:	84 3f       	cpi	r24, 0xF4	; 244
     3ac:	91 40       	sbci	r25, 0x01	; 1
     3ae:	a0 f7       	brcc	.-24     	; 0x398 <motorControl+0x16a>
     3b0:	08 c0       	rjmp	.+16     	; 0x3c2 <motorControl+0x194>
			read_line(sensors,IR_EMITTERS_ON);
		}
	}
	
	else if(x == 'P'){									// robot stopt rustig met rijden
     3b2:	c0 35       	cpi	r28, 0x50	; 80
     3b4:	31 f4       	brne	.+12     	; 0x3c2 <motorControl+0x194>
		for( int i=50;i==10;i-=3){
			set_motors(i,i);
			delay(1);
		}
		set_motors(0,0);
     3b6:	60 e0       	ldi	r22, 0x00	; 0
     3b8:	70 e0       	ldi	r23, 0x00	; 0
     3ba:	80 e0       	ldi	r24, 0x00	; 0
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	0e 94 b4 09 	call	0x1368	; 0x1368 <set_motors>
		}
     3c2:	cf 91       	pop	r28
     3c4:	08 95       	ret

000003c6 <lineType>:
	set_motors(0,0);
}

char lineType(){																											// function that returns the type of junction it detects
	while(1){																												// >= 500 = black line		<=500 = white
		read_line(sensors,IR_EMITTERS_ON);
     3c6:	61 e0       	ldi	r22, 0x01	; 1
     3c8:	8b e9       	ldi	r24, 0x9B	; 155
     3ca:	91 e0       	ldi	r25, 0x01	; 1
     3cc:	0e 94 84 0a 	call	0x1508	; 0x1508 <read_line>
		
		if (sensors[1] >=500 && sensors[3] >= 500){																			// this checks if its a X junction or a T junction
     3d0:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     3d4:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     3d8:	84 3f       	cpi	r24, 0xF4	; 244
     3da:	21 e0       	ldi	r18, 0x01	; 1
     3dc:	92 07       	cpc	r25, r18
     3de:	c0 f0       	brcs	.+48     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
     3e0:	20 91 a1 01 	lds	r18, 0x01A1	; 0x8001a1 <sensors+0x6>
     3e4:	30 91 a2 01 	lds	r19, 0x01A2	; 0x8001a2 <sensors+0x7>
     3e8:	24 3f       	cpi	r18, 0xF4	; 244
     3ea:	31 40       	sbci	r19, 0x01	; 1
     3ec:	88 f0       	brcs	.+34     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
			inch();
     3ee:	0e 94 06 01 	call	0x20c	; 0x20c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     3f2:	61 e0       	ldi	r22, 0x01	; 1
     3f4:	8b e9       	ldi	r24, 0x9B	; 155
     3f6:	91 e0       	ldi	r25, 0x01	; 1
     3f8:	0e 94 84 0a 	call	0x1508	; 0x1508 <read_line>
			
			if (sensors[2] >=500)
     3fc:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     400:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     404:	84 3f       	cpi	r24, 0xF4	; 244
     406:	91 40       	sbci	r25, 0x01	; 1
     408:	08 f4       	brcc	.+2      	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
     40a:	90 c0       	rjmp	.+288    	; 0x52c <__EEPROM_REGION_LENGTH__+0x12c>
			return X_junction;
     40c:	88 e0       	ldi	r24, 0x08	; 8
     40e:	08 95       	ret
			else
			return T_junction;
		}
		
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
     410:	84 3f       	cpi	r24, 0xF4	; 244
     412:	21 e0       	ldi	r18, 0x01	; 1
     414:	92 07       	cpc	r25, r18
     416:	00 f1       	brcs	.+64     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
     418:	20 91 9b 01 	lds	r18, 0x019B	; 0x80019b <sensors>
     41c:	30 91 9c 01 	lds	r19, 0x019C	; 0x80019c <sensors+0x1>
     420:	24 3f       	cpi	r18, 0xF4	; 244
     422:	31 40       	sbci	r19, 0x01	; 1
     424:	c8 f0       	brcs	.+50     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
			inch();
     426:	0e 94 06 01 	call	0x20c	; 0x20c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     42a:	61 e0       	ldi	r22, 0x01	; 1
     42c:	8b e9       	ldi	r24, 0x9B	; 155
     42e:	91 e0       	ldi	r25, 0x01	; 1
     430:	0e 94 84 0a 	call	0x1508	; 0x1508 <read_line>
			
			if (sensors[2] >= 500 || sensors[3] >=500)
     434:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     438:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     43c:	84 3f       	cpi	r24, 0xF4	; 244
     43e:	91 40       	sbci	r25, 0x01	; 1
     440:	08 f0       	brcs	.+2      	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
     442:	76 c0       	rjmp	.+236    	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
     444:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <sensors+0x6>
     448:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <sensors+0x7>
     44c:	84 3f       	cpi	r24, 0xF4	; 244
     44e:	91 40       	sbci	r25, 0x01	; 1
     450:	08 f4       	brcc	.+2      	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
     452:	70 c0       	rjmp	.+224    	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
			return Straight_left_junction;
     454:	86 e0       	ldi	r24, 0x06	; 6
     456:	08 95       	ret
			else
			return Left_corner;
		}
		
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
     458:	40 91 a1 01 	lds	r20, 0x01A1	; 0x8001a1 <sensors+0x6>
     45c:	50 91 a2 01 	lds	r21, 0x01A2	; 0x8001a2 <sensors+0x7>
     460:	44 3f       	cpi	r20, 0xF4	; 244
     462:	61 e0       	ldi	r22, 0x01	; 1
     464:	56 07       	cpc	r21, r22
     466:	00 f1       	brcs	.+64     	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
     468:	20 91 a3 01 	lds	r18, 0x01A3	; 0x8001a3 <sensors+0x8>
     46c:	30 91 a4 01 	lds	r19, 0x01A4	; 0x8001a4 <sensors+0x9>
     470:	24 3f       	cpi	r18, 0xF4	; 244
     472:	31 40       	sbci	r19, 0x01	; 1
     474:	c8 f0       	brcs	.+50     	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
			inch();
     476:	0e 94 06 01 	call	0x20c	; 0x20c <inch>
			read_line(sensors,IR_EMITTERS_ON);
     47a:	61 e0       	ldi	r22, 0x01	; 1
     47c:	8b e9       	ldi	r24, 0x9B	; 155
     47e:	91 e0       	ldi	r25, 0x01	; 1
     480:	0e 94 84 0a 	call	0x1508	; 0x1508 <read_line>
			
			if (sensors[2] >= 500 || sensors[1] >=500)
     484:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <sensors+0x4>
     488:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <sensors+0x5>
     48c:	84 3f       	cpi	r24, 0xF4	; 244
     48e:	91 40       	sbci	r25, 0x01	; 1
     490:	08 f0       	brcs	.+2      	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
     492:	52 c0       	rjmp	.+164    	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
     494:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <sensors+0x2>
     498:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <sensors+0x3>
     49c:	84 3f       	cpi	r24, 0xF4	; 244
     49e:	91 40       	sbci	r25, 0x01	; 1
     4a0:	08 f4       	brcc	.+2      	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
     4a2:	4c c0       	rjmp	.+152    	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
			return Straight_right_junction;
     4a4:	85 e0       	ldi	r24, 0x05	; 5
     4a6:	08 95       	ret
			else
			return Right_corner;
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
     4a8:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <sensors+0x4>
     4ac:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <sensors+0x5>
     4b0:	29 3c       	cpi	r18, 0xC9	; 201
     4b2:	31 05       	cpc	r19, r1
     4b4:	08 f4       	brcc	.+2      	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
     4b6:	44 c0       	rjmp	.+136    	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
			return Line_end;
		}

		
		else if (sensors[2] >=500){
     4b8:	24 3f       	cpi	r18, 0xF4	; 244
     4ba:	61 e0       	ldi	r22, 0x01	; 1
     4bc:	36 07       	cpc	r19, r22
     4be:	08 f4       	brcc	.+2      	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>
     4c0:	82 cf       	rjmp	.-252    	; 0x3c6 <lineType>
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
     4c2:	24 3f       	cpi	r18, 0xF4	; 244
     4c4:	61 e0       	ldi	r22, 0x01	; 1
     4c6:	36 07       	cpc	r19, r22
     4c8:	e8 f1       	brcs	.+122    	; 0x544 <__EEPROM_REGION_LENGTH__+0x144>
     4ca:	45 3f       	cpi	r20, 0xF5	; 245
     4cc:	51 40       	sbci	r21, 0x01	; 1
     4ce:	e0 f5       	brcc	.+120    	; 0x548 <__EEPROM_REGION_LENGTH__+0x148>
     4d0:	40 91 a3 01 	lds	r20, 0x01A3	; 0x8001a3 <sensors+0x8>
     4d4:	50 91 a4 01 	lds	r21, 0x01A4	; 0x8001a4 <sensors+0x9>
     4d8:	44 3f       	cpi	r20, 0xF4	; 244
     4da:	51 40       	sbci	r21, 0x01	; 1
     4dc:	b8 f1       	brcs	.+110    	; 0x54c <__EEPROM_REGION_LENGTH__+0x14c>
     4de:	40 91 9b 01 	lds	r20, 0x019B	; 0x80019b <sensors>
     4e2:	50 91 9c 01 	lds	r21, 0x019C	; 0x80019c <sensors+0x1>
     4e6:	44 3f       	cpi	r20, 0xF4	; 244
     4e8:	51 40       	sbci	r21, 0x01	; 1
     4ea:	90 f1       	brcs	.+100    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
     4ec:	85 3f       	cpi	r24, 0xF5	; 245
     4ee:	91 40       	sbci	r25, 0x01	; 1
     4f0:	88 f5       	brcc	.+98     	; 0x554 <__EEPROM_REGION_LENGTH__+0x154>
     4f2:	24 3f       	cpi	r18, 0xF4	; 244
     4f4:	31 40       	sbci	r19, 0x01	; 1
     4f6:	50 f4       	brcc	.+20     	; 0x50c <__EEPROM_REGION_LENGTH__+0x10c>
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
			}
			else
			return Straight;																						// check if its straight without any corners
     4f8:	80 e0       	ldi	r24, 0x00	; 0
     4fa:	08 95       	ret

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
					read_line(sensors,IR_EMITTERS_ON);
     4fc:	61 e0       	ldi	r22, 0x01	; 1
     4fe:	8b e9       	ldi	r24, 0x9B	; 155
     500:	91 e0       	ldi	r25, 0x01	; 1
     502:	0e 94 84 0a 	call	0x1508	; 0x1508 <read_line>
					motorControl('S');
     506:	83 e5       	ldi	r24, 0x53	; 83
     508:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
		}

		
		else if (sensors[2] >=500){
			if ((sensors[2] >=500 && sensors[3] <=500 && sensors[4] >=500) && (sensors[0] >=500 && sensors[1] <=500 && sensors[2] >=500)){
				while(sensors[4] >= 400 || sensors[0] >=400){
     50c:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <sensors+0x8>
     510:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <sensors+0x9>
     514:	80 39       	cpi	r24, 0x90	; 144
     516:	91 40       	sbci	r25, 0x01	; 1
     518:	88 f7       	brcc	.-30     	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
     51a:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <sensors>
     51e:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <sensors+0x1>
     522:	80 39       	cpi	r24, 0x90	; 144
     524:	91 40       	sbci	r25, 0x01	; 1
     526:	50 f7       	brcc	.-44     	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
					read_line(sensors,IR_EMITTERS_ON);
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
     528:	82 e0       	ldi	r24, 0x02	; 2
     52a:	08 95       	ret
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >=500)
			return X_junction;
			else
			return T_junction;
     52c:	87 e0       	ldi	r24, 0x07	; 7
     52e:	08 95       	ret
		else if (sensors[1] >=500 && sensors[0] >= 500){																// this function checks if its a left corner or a straight with left corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[3] >=500)
			return Straight_left_junction;
     530:	86 e0       	ldi	r24, 0x06	; 6
     532:	08 95       	ret
			else
			return Left_corner;
     534:	83 e0       	ldi	r24, 0x03	; 3
     536:	08 95       	ret
		else if (sensors[3] >=500 && sensors[4] >= 500){																	// this function checks if its a right corner or a straight with right corner
			inch();
			read_line(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= 500 || sensors[1] >=500)
			return Straight_right_junction;
     538:	85 e0       	ldi	r24, 0x05	; 5
     53a:	08 95       	ret
			else
			return Right_corner;
     53c:	84 e0       	ldi	r24, 0x04	; 4
     53e:	08 95       	ret
		}
		
		else if(sensors[2] <=200){																						// check if the line ends
			return Line_end;
     540:	81 e0       	ldi	r24, 0x01	; 1
     542:	08 95       	ret
					motorControl('S');
				}		// checks if it detects the "barcode"
				return Barcode;
			}
			else
			return Straight;																						// check if its straight without any corners
     544:	80 e0       	ldi	r24, 0x00	; 0
     546:	08 95       	ret
     548:	80 e0       	ldi	r24, 0x00	; 0
     54a:	08 95       	ret
     54c:	80 e0       	ldi	r24, 0x00	; 0
     54e:	08 95       	ret
     550:	80 e0       	ldi	r24, 0x00	; 0
     552:	08 95       	ret
     554:	80 e0       	ldi	r24, 0x00	; 0
			
		}
		
	}
}
     556:	08 95       	ret

00000558 <swap>:
     558:	fc 01       	movw	r30, r24
     55a:	20 81       	ld	r18, Z
     55c:	31 81       	ldd	r19, Z+1	; 0x01
     55e:	fb 01       	movw	r30, r22
     560:	40 81       	ld	r20, Z
     562:	51 81       	ldd	r21, Z+1	; 0x01
     564:	fc 01       	movw	r30, r24
     566:	51 83       	std	Z+1, r21	; 0x01
     568:	40 83       	st	Z, r20
     56a:	fb 01       	movw	r30, r22
     56c:	31 83       	std	Z+1, r19	; 0x01
     56e:	20 83       	st	Z, r18
     570:	08 95       	ret

00000572 <bubbleSort>:
     572:	6f 92       	push	r6
     574:	7f 92       	push	r7
     576:	8f 92       	push	r8
     578:	9f 92       	push	r9
     57a:	af 92       	push	r10
     57c:	bf 92       	push	r11
     57e:	cf 92       	push	r12
     580:	df 92       	push	r13
     582:	ef 92       	push	r14
     584:	ff 92       	push	r15
     586:	0f 93       	push	r16
     588:	1f 93       	push	r17
     58a:	cf 93       	push	r28
     58c:	df 93       	push	r29
     58e:	6c 01       	movw	r12, r24
     590:	3b 01       	movw	r6, r22
     592:	4a 01       	movw	r8, r20
     594:	a1 2c       	mov	r10, r1
     596:	b1 2c       	mov	r11, r1
     598:	30 c0       	rjmp	.+96     	; 0x5fa <bubbleSort+0x88>
     59a:	7e 01       	movw	r14, r28
     59c:	ee 0c       	add	r14, r14
     59e:	ff 1c       	adc	r15, r15
     5a0:	f6 01       	movw	r30, r12
     5a2:	ee 0d       	add	r30, r14
     5a4:	ff 1d       	adc	r31, r15
     5a6:	20 81       	ld	r18, Z
     5a8:	31 81       	ldd	r19, Z+1	; 0x01
     5aa:	8e 01       	movw	r16, r28
     5ac:	0f 5f       	subi	r16, 0xFF	; 255
     5ae:	1f 4f       	sbci	r17, 0xFF	; 255
     5b0:	00 0f       	add	r16, r16
     5b2:	11 1f       	adc	r17, r17
     5b4:	d6 01       	movw	r26, r12
     5b6:	a0 0f       	add	r26, r16
     5b8:	b1 1f       	adc	r27, r17
     5ba:	8d 91       	ld	r24, X+
     5bc:	9c 91       	ld	r25, X
     5be:	11 97       	sbiw	r26, 0x01	; 1
     5c0:	82 17       	cp	r24, r18
     5c2:	93 07       	cpc	r25, r19
     5c4:	64 f4       	brge	.+24     	; 0x5de <bubbleSort+0x6c>
     5c6:	bd 01       	movw	r22, r26
     5c8:	cf 01       	movw	r24, r30
     5ca:	0e 94 ac 02 	call	0x558	; 0x558 <swap>
     5ce:	b3 01       	movw	r22, r6
     5d0:	60 0f       	add	r22, r16
     5d2:	71 1f       	adc	r23, r17
     5d4:	c3 01       	movw	r24, r6
     5d6:	8e 0d       	add	r24, r14
     5d8:	9f 1d       	adc	r25, r15
     5da:	0e 94 ac 02 	call	0x558	; 0x558 <swap>
     5de:	21 96       	adiw	r28, 0x01	; 1
     5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <bubbleSort+0x74>
     5e2:	c0 e0       	ldi	r28, 0x00	; 0
     5e4:	d0 e0       	ldi	r29, 0x00	; 0
     5e6:	c4 01       	movw	r24, r8
     5e8:	8a 19       	sub	r24, r10
     5ea:	9b 09       	sbc	r25, r11
     5ec:	01 97       	sbiw	r24, 0x01	; 1
     5ee:	c8 17       	cp	r28, r24
     5f0:	d9 07       	cpc	r29, r25
     5f2:	9c f2       	brlt	.-90     	; 0x59a <bubbleSort+0x28>
     5f4:	8f ef       	ldi	r24, 0xFF	; 255
     5f6:	a8 1a       	sub	r10, r24
     5f8:	b8 0a       	sbc	r11, r24
     5fa:	c4 01       	movw	r24, r8
     5fc:	01 97       	sbiw	r24, 0x01	; 1
     5fe:	a8 16       	cp	r10, r24
     600:	b9 06       	cpc	r11, r25
     602:	7c f3       	brlt	.-34     	; 0x5e2 <bubbleSort+0x70>
     604:	df 91       	pop	r29
     606:	cf 91       	pop	r28
     608:	1f 91       	pop	r17
     60a:	0f 91       	pop	r16
     60c:	ff 90       	pop	r15
     60e:	ef 90       	pop	r14
     610:	df 90       	pop	r13
     612:	cf 90       	pop	r12
     614:	bf 90       	pop	r11
     616:	af 90       	pop	r10
     618:	9f 90       	pop	r9
     61a:	8f 90       	pop	r8
     61c:	7f 90       	pop	r7
     61e:	6f 90       	pop	r6
     620:	08 95       	ret

00000622 <drive>:
     622:	ef 92       	push	r14
     624:	ff 92       	push	r15
     626:	0f 93       	push	r16
     628:	1f 93       	push	r17
     62a:	cf 93       	push	r28
     62c:	df 93       	push	r29
     62e:	7c 01       	movw	r14, r24
     630:	83 e5       	ldi	r24, 0x53	; 83
     632:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     636:	00 e0       	ldi	r16, 0x00	; 0
     638:	10 e0       	ldi	r17, 0x00	; 0
     63a:	c1 e0       	ldi	r28, 0x01	; 1
     63c:	d0 e0       	ldi	r29, 0x00	; 0
     63e:	1a c0       	rjmp	.+52     	; 0x674 <drive+0x52>
     640:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <lineType>
     644:	99 27       	eor	r25, r25
     646:	00 97       	sbiw	r24, 0x00	; 0
     648:	21 f0       	breq	.+8      	; 0x652 <drive+0x30>
     64a:	03 97       	sbiw	r24, 0x03	; 3
     64c:	06 97       	sbiw	r24, 0x06	; 6
     64e:	28 f0       	brcs	.+10     	; 0x65a <drive+0x38>
     650:	11 c0       	rjmp	.+34     	; 0x674 <drive+0x52>
     652:	83 e5       	ldi	r24, 0x53	; 83
     654:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     658:	0d c0       	rjmp	.+26     	; 0x674 <drive+0x52>
     65a:	0f 5f       	subi	r16, 0xFF	; 255
     65c:	1f 4f       	sbci	r17, 0xFF	; 255
     65e:	83 e5       	ldi	r24, 0x53	; 83
     660:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     664:	0e 15       	cp	r16, r14
     666:	1f 05       	cpc	r17, r15
     668:	29 f4       	brne	.+10     	; 0x674 <drive+0x52>
     66a:	8e e4       	ldi	r24, 0x4E	; 78
     66c:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     670:	c0 e0       	ldi	r28, 0x00	; 0
     672:	d0 e0       	ldi	r29, 0x00	; 0
     674:	20 97       	sbiw	r28, 0x00	; 0
     676:	21 f7       	brne	.-56     	; 0x640 <drive+0x1e>
     678:	df 91       	pop	r29
     67a:	cf 91       	pop	r28
     67c:	1f 91       	pop	r17
     67e:	0f 91       	pop	r16
     680:	ff 90       	pop	r15
     682:	ef 90       	pop	r14
     684:	08 95       	ret

00000686 <waitForTurn>:
     686:	cf 93       	push	r28
     688:	8f e0       	ldi	r24, 0x0F	; 15
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	0e 94 42 0a 	call	0x1484	; 0x1484 <delay_ms>
     690:	03 c0       	rjmp	.+6      	; 0x698 <waitForTurn+0x12>
     692:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <lineType>
     696:	c8 2f       	mov	r28, r24
     698:	c1 11       	cpse	r28, r1
     69a:	fb cf       	rjmp	.-10     	; 0x692 <waitForTurn+0xc>
     69c:	8e e4       	ldi	r24, 0x4E	; 78
     69e:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     6a2:	cf 91       	pop	r28
     6a4:	08 95       	ret

000006a6 <turnRobot>:
     6a6:	ef 92       	push	r14
     6a8:	ff 92       	push	r15
     6aa:	0f 93       	push	r16
     6ac:	1f 93       	push	r17
     6ae:	cf 93       	push	r28
     6b0:	c8 2f       	mov	r28, r24
     6b2:	8b 01       	movw	r16, r22
     6b4:	ee 24       	eor	r14, r14
     6b6:	e3 94       	inc	r14
     6b8:	f1 2c       	mov	r15, r1
     6ba:	9a c0       	rjmp	.+308    	; 0x7f0 <turnRobot+0x14a>
     6bc:	f8 01       	movw	r30, r16
     6be:	84 81       	ldd	r24, Z+4	; 0x04
     6c0:	8e 34       	cpi	r24, 0x4E	; 78
     6c2:	59 f0       	breq	.+22     	; 0x6da <turnRobot+0x34>
     6c4:	18 f4       	brcc	.+6      	; 0x6cc <turnRobot+0x26>
     6c6:	85 34       	cpi	r24, 0x45	; 69
     6c8:	51 f1       	breq	.+84     	; 0x71e <turnRobot+0x78>
     6ca:	8c c0       	rjmp	.+280    	; 0x7e4 <turnRobot+0x13e>
     6cc:	83 35       	cpi	r24, 0x53	; 83
     6ce:	09 f4       	brne	.+2      	; 0x6d2 <turnRobot+0x2c>
     6d0:	48 c0       	rjmp	.+144    	; 0x762 <turnRobot+0xbc>
     6d2:	87 35       	cpi	r24, 0x57	; 87
     6d4:	09 f4       	brne	.+2      	; 0x6d8 <turnRobot+0x32>
     6d6:	66 c0       	rjmp	.+204    	; 0x7a4 <turnRobot+0xfe>
     6d8:	85 c0       	rjmp	.+266    	; 0x7e4 <turnRobot+0x13e>
     6da:	c5 34       	cpi	r28, 0x45	; 69
     6dc:	49 f4       	brne	.+18     	; 0x6f0 <turnRobot+0x4a>
     6de:	82 e5       	ldi	r24, 0x52	; 82
     6e0:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     6e4:	0e 94 43 03 	call	0x686	; 0x686 <waitForTurn>
     6e8:	85 e4       	ldi	r24, 0x45	; 69
     6ea:	f8 01       	movw	r30, r16
     6ec:	84 83       	std	Z+4, r24	; 0x04
     6ee:	7a c0       	rjmp	.+244    	; 0x7e4 <turnRobot+0x13e>
     6f0:	c7 35       	cpi	r28, 0x57	; 87
     6f2:	49 f4       	brne	.+18     	; 0x706 <turnRobot+0x60>
     6f4:	8c e4       	ldi	r24, 0x4C	; 76
     6f6:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     6fa:	0e 94 43 03 	call	0x686	; 0x686 <waitForTurn>
     6fe:	87 e5       	ldi	r24, 0x57	; 87
     700:	f8 01       	movw	r30, r16
     702:	84 83       	std	Z+4, r24	; 0x04
     704:	6f c0       	rjmp	.+222    	; 0x7e4 <turnRobot+0x13e>
     706:	c3 35       	cpi	r28, 0x53	; 83
     708:	09 f0       	breq	.+2      	; 0x70c <turnRobot+0x66>
     70a:	6c c0       	rjmp	.+216    	; 0x7e4 <turnRobot+0x13e>
     70c:	84 e5       	ldi	r24, 0x54	; 84
     70e:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     712:	0e 94 43 03 	call	0x686	; 0x686 <waitForTurn>
     716:	83 e5       	ldi	r24, 0x53	; 83
     718:	f8 01       	movw	r30, r16
     71a:	84 83       	std	Z+4, r24	; 0x04
     71c:	63 c0       	rjmp	.+198    	; 0x7e4 <turnRobot+0x13e>
     71e:	c3 35       	cpi	r28, 0x53	; 83
     720:	49 f4       	brne	.+18     	; 0x734 <turnRobot+0x8e>
     722:	82 e5       	ldi	r24, 0x52	; 82
     724:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     728:	0e 94 43 03 	call	0x686	; 0x686 <waitForTurn>
     72c:	83 e5       	ldi	r24, 0x53	; 83
     72e:	f8 01       	movw	r30, r16
     730:	84 83       	std	Z+4, r24	; 0x04
     732:	58 c0       	rjmp	.+176    	; 0x7e4 <turnRobot+0x13e>
     734:	c7 35       	cpi	r28, 0x57	; 87
     736:	49 f4       	brne	.+18     	; 0x74a <turnRobot+0xa4>
     738:	8c e4       	ldi	r24, 0x4C	; 76
     73a:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     73e:	0e 94 43 03 	call	0x686	; 0x686 <waitForTurn>
     742:	87 e5       	ldi	r24, 0x57	; 87
     744:	f8 01       	movw	r30, r16
     746:	84 83       	std	Z+4, r24	; 0x04
     748:	4d c0       	rjmp	.+154    	; 0x7e4 <turnRobot+0x13e>
     74a:	c3 35       	cpi	r28, 0x53	; 83
     74c:	09 f0       	breq	.+2      	; 0x750 <turnRobot+0xaa>
     74e:	4a c0       	rjmp	.+148    	; 0x7e4 <turnRobot+0x13e>
     750:	84 e5       	ldi	r24, 0x54	; 84
     752:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     756:	0e 94 43 03 	call	0x686	; 0x686 <waitForTurn>
     75a:	83 e5       	ldi	r24, 0x53	; 83
     75c:	f8 01       	movw	r30, r16
     75e:	84 83       	std	Z+4, r24	; 0x04
     760:	41 c0       	rjmp	.+130    	; 0x7e4 <turnRobot+0x13e>
     762:	c7 35       	cpi	r28, 0x57	; 87
     764:	49 f4       	brne	.+18     	; 0x778 <turnRobot+0xd2>
     766:	82 e5       	ldi	r24, 0x52	; 82
     768:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     76c:	0e 94 43 03 	call	0x686	; 0x686 <waitForTurn>
     770:	87 e5       	ldi	r24, 0x57	; 87
     772:	f8 01       	movw	r30, r16
     774:	84 83       	std	Z+4, r24	; 0x04
     776:	36 c0       	rjmp	.+108    	; 0x7e4 <turnRobot+0x13e>
     778:	c5 34       	cpi	r28, 0x45	; 69
     77a:	49 f4       	brne	.+18     	; 0x78e <turnRobot+0xe8>
     77c:	8c e4       	ldi	r24, 0x4C	; 76
     77e:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     782:	0e 94 43 03 	call	0x686	; 0x686 <waitForTurn>
     786:	85 e4       	ldi	r24, 0x45	; 69
     788:	f8 01       	movw	r30, r16
     78a:	84 83       	std	Z+4, r24	; 0x04
     78c:	2b c0       	rjmp	.+86     	; 0x7e4 <turnRobot+0x13e>
     78e:	ce 34       	cpi	r28, 0x4E	; 78
     790:	49 f5       	brne	.+82     	; 0x7e4 <turnRobot+0x13e>
     792:	84 e5       	ldi	r24, 0x54	; 84
     794:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     798:	0e 94 43 03 	call	0x686	; 0x686 <waitForTurn>
     79c:	8e e4       	ldi	r24, 0x4E	; 78
     79e:	f8 01       	movw	r30, r16
     7a0:	84 83       	std	Z+4, r24	; 0x04
     7a2:	20 c0       	rjmp	.+64     	; 0x7e4 <turnRobot+0x13e>
     7a4:	ce 34       	cpi	r28, 0x4E	; 78
     7a6:	49 f4       	brne	.+18     	; 0x7ba <turnRobot+0x114>
     7a8:	82 e5       	ldi	r24, 0x52	; 82
     7aa:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     7ae:	0e 94 43 03 	call	0x686	; 0x686 <waitForTurn>
     7b2:	8e e4       	ldi	r24, 0x4E	; 78
     7b4:	f8 01       	movw	r30, r16
     7b6:	84 83       	std	Z+4, r24	; 0x04
     7b8:	15 c0       	rjmp	.+42     	; 0x7e4 <turnRobot+0x13e>
     7ba:	c3 35       	cpi	r28, 0x53	; 83
     7bc:	49 f4       	brne	.+18     	; 0x7d0 <turnRobot+0x12a>
     7be:	8c e4       	ldi	r24, 0x4C	; 76
     7c0:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     7c4:	0e 94 43 03 	call	0x686	; 0x686 <waitForTurn>
     7c8:	83 e5       	ldi	r24, 0x53	; 83
     7ca:	f8 01       	movw	r30, r16
     7cc:	84 83       	std	Z+4, r24	; 0x04
     7ce:	0a c0       	rjmp	.+20     	; 0x7e4 <turnRobot+0x13e>
     7d0:	c5 34       	cpi	r28, 0x45	; 69
     7d2:	41 f4       	brne	.+16     	; 0x7e4 <turnRobot+0x13e>
     7d4:	84 e5       	ldi	r24, 0x54	; 84
     7d6:	0e 94 17 01 	call	0x22e	; 0x22e <motorControl>
     7da:	0e 94 43 03 	call	0x686	; 0x686 <waitForTurn>
     7de:	85 e4       	ldi	r24, 0x45	; 69
     7e0:	f8 01       	movw	r30, r16
     7e2:	84 83       	std	Z+4, r24	; 0x04
     7e4:	f8 01       	movw	r30, r16
     7e6:	84 81       	ldd	r24, Z+4	; 0x04
     7e8:	c8 13       	cpse	r28, r24
     7ea:	02 c0       	rjmp	.+4      	; 0x7f0 <turnRobot+0x14a>
     7ec:	e1 2c       	mov	r14, r1
     7ee:	f1 2c       	mov	r15, r1
     7f0:	f1 e0       	ldi	r31, 0x01	; 1
     7f2:	ef 16       	cp	r14, r31
     7f4:	f1 04       	cpc	r15, r1
     7f6:	09 f4       	brne	.+2      	; 0x7fa <turnRobot+0x154>
     7f8:	61 cf       	rjmp	.-318    	; 0x6bc <turnRobot+0x16>
     7fa:	cf 91       	pop	r28
     7fc:	1f 91       	pop	r17
     7fe:	0f 91       	pop	r16
     800:	ff 90       	pop	r15
     802:	ef 90       	pop	r14
     804:	08 95       	ret

00000806 <moveX>:
     806:	0f 93       	push	r16
     808:	1f 93       	push	r17
     80a:	cf 93       	push	r28
     80c:	df 93       	push	r29
     80e:	fb 01       	movw	r30, r22
     810:	20 81       	ld	r18, Z
     812:	31 81       	ldd	r19, Z+1	; 0x01
     814:	28 17       	cp	r18, r24
     816:	39 07       	cpc	r19, r25
     818:	d1 f0       	breq	.+52     	; 0x84e <moveX+0x48>
     81a:	8b 01       	movw	r16, r22
     81c:	ec 01       	movw	r28, r24
     81e:	28 17       	cp	r18, r24
     820:	39 07       	cpc	r19, r25
     822:	5c f4       	brge	.+22     	; 0x83a <moveX+0x34>
     824:	87 e5       	ldi	r24, 0x57	; 87
     826:	0e 94 53 03 	call	0x6a6	; 0x6a6 <turnRobot>
     82a:	f8 01       	movw	r30, r16
     82c:	80 81       	ld	r24, Z
     82e:	91 81       	ldd	r25, Z+1	; 0x01
     830:	9e 01       	movw	r18, r28
     832:	28 1b       	sub	r18, r24
     834:	39 0b       	sbc	r19, r25
     836:	c9 01       	movw	r24, r18
     838:	08 c0       	rjmp	.+16     	; 0x84a <moveX+0x44>
     83a:	85 e4       	ldi	r24, 0x45	; 69
     83c:	0e 94 53 03 	call	0x6a6	; 0x6a6 <turnRobot>
     840:	f8 01       	movw	r30, r16
     842:	80 81       	ld	r24, Z
     844:	91 81       	ldd	r25, Z+1	; 0x01
     846:	8c 1b       	sub	r24, r28
     848:	9d 0b       	sbc	r25, r29
     84a:	0e 94 11 03 	call	0x622	; 0x622 <drive>
     84e:	df 91       	pop	r29
     850:	cf 91       	pop	r28
     852:	1f 91       	pop	r17
     854:	0f 91       	pop	r16
     856:	08 95       	ret

00000858 <moveY>:
     858:	0f 93       	push	r16
     85a:	1f 93       	push	r17
     85c:	cf 93       	push	r28
     85e:	df 93       	push	r29
     860:	fb 01       	movw	r30, r22
     862:	22 81       	ldd	r18, Z+2	; 0x02
     864:	33 81       	ldd	r19, Z+3	; 0x03
     866:	28 17       	cp	r18, r24
     868:	39 07       	cpc	r19, r25
     86a:	d1 f0       	breq	.+52     	; 0x8a0 <moveY+0x48>
     86c:	8b 01       	movw	r16, r22
     86e:	ec 01       	movw	r28, r24
     870:	28 17       	cp	r18, r24
     872:	39 07       	cpc	r19, r25
     874:	5c f4       	brge	.+22     	; 0x88c <moveY+0x34>
     876:	8e e4       	ldi	r24, 0x4E	; 78
     878:	0e 94 53 03 	call	0x6a6	; 0x6a6 <turnRobot>
     87c:	f8 01       	movw	r30, r16
     87e:	82 81       	ldd	r24, Z+2	; 0x02
     880:	93 81       	ldd	r25, Z+3	; 0x03
     882:	9e 01       	movw	r18, r28
     884:	28 1b       	sub	r18, r24
     886:	39 0b       	sbc	r19, r25
     888:	c9 01       	movw	r24, r18
     88a:	08 c0       	rjmp	.+16     	; 0x89c <moveY+0x44>
     88c:	83 e5       	ldi	r24, 0x53	; 83
     88e:	0e 94 53 03 	call	0x6a6	; 0x6a6 <turnRobot>
     892:	f8 01       	movw	r30, r16
     894:	82 81       	ldd	r24, Z+2	; 0x02
     896:	93 81       	ldd	r25, Z+3	; 0x03
     898:	8c 1b       	sub	r24, r28
     89a:	9d 0b       	sbc	r25, r29
     89c:	0e 94 11 03 	call	0x622	; 0x622 <drive>
     8a0:	df 91       	pop	r29
     8a2:	cf 91       	pop	r28
     8a4:	1f 91       	pop	r17
     8a6:	0f 91       	pop	r16
     8a8:	08 95       	ret

000008aa <warehouse>:
     8aa:	8f 92       	push	r8
     8ac:	9f 92       	push	r9
     8ae:	af 92       	push	r10
     8b0:	bf 92       	push	r11
     8b2:	ef 92       	push	r14
     8b4:	ff 92       	push	r15
     8b6:	0f 93       	push	r16
     8b8:	1f 93       	push	r17
     8ba:	cf 93       	push	r28
     8bc:	df 93       	push	r29
     8be:	cd b7       	in	r28, 0x3d	; 61
     8c0:	de b7       	in	r29, 0x3e	; 62
     8c2:	69 97       	sbiw	r28, 0x19	; 25
     8c4:	0f b6       	in	r0, 0x3f	; 63
     8c6:	f8 94       	cli
     8c8:	de bf       	out	0x3e, r29	; 62
     8ca:	0f be       	out	0x3f, r0	; 63
     8cc:	cd bf       	out	0x3d, r28	; 61
     8ce:	87 e5       	ldi	r24, 0x57	; 87
     8d0:	8d 83       	std	Y+5, r24	; 0x05
     8d2:	8f ef       	ldi	r24, 0xFF	; 255
     8d4:	9f ef       	ldi	r25, 0xFF	; 255
     8d6:	9a 83       	std	Y+2, r25	; 0x02
     8d8:	89 83       	std	Y+1, r24	; 0x01
     8da:	1c 82       	std	Y+4, r1	; 0x04
     8dc:	1b 82       	std	Y+3, r1	; 0x03
     8de:	8a e0       	ldi	r24, 0x0A	; 10
     8e0:	ea e0       	ldi	r30, 0x0A	; 10
     8e2:	f1 e0       	ldi	r31, 0x01	; 1
     8e4:	de 01       	movw	r26, r28
     8e6:	16 96       	adiw	r26, 0x06	; 6
     8e8:	01 90       	ld	r0, Z+
     8ea:	0d 92       	st	X+, r0
     8ec:	8a 95       	dec	r24
     8ee:	e1 f7       	brne	.-8      	; 0x8e8 <warehouse+0x3e>
     8f0:	8a e0       	ldi	r24, 0x0A	; 10
     8f2:	e4 e1       	ldi	r30, 0x14	; 20
     8f4:	f1 e0       	ldi	r31, 0x01	; 1
     8f6:	de 01       	movw	r26, r28
     8f8:	50 96       	adiw	r26, 0x10	; 16
     8fa:	01 90       	ld	r0, Z+
     8fc:	0d 92       	st	X+, r0
     8fe:	8a 95       	dec	r24
     900:	e1 f7       	brne	.-8      	; 0x8fa <warehouse+0x50>
     902:	45 e0       	ldi	r20, 0x05	; 5
     904:	50 e0       	ldi	r21, 0x00	; 0
     906:	be 01       	movw	r22, r28
     908:	60 5f       	subi	r22, 0xF0	; 240
     90a:	7f 4f       	sbci	r23, 0xFF	; 255
     90c:	ce 01       	movw	r24, r28
     90e:	06 96       	adiw	r24, 0x06	; 6
     910:	0e 94 b9 02 	call	0x572	; 0x572 <bubbleSort>
     914:	e1 2c       	mov	r14, r1
     916:	f1 2c       	mov	r15, r1
     918:	49 c0       	rjmp	.+146    	; 0x9ac <__stack+0xad>
     91a:	b7 01       	movw	r22, r14
     91c:	0f 2c       	mov	r0, r15
     91e:	00 0c       	add	r0, r0
     920:	88 0b       	sbc	r24, r24
     922:	99 0b       	sbc	r25, r25
     924:	0e 94 a4 05 	call	0xb48	; 0xb48 <__floatsisf>
     928:	4b 01       	movw	r8, r22
     92a:	5c 01       	movw	r10, r24
     92c:	87 01       	movw	r16, r14
     92e:	00 0f       	add	r16, r16
     930:	11 1f       	adc	r17, r17
     932:	81 e0       	ldi	r24, 0x01	; 1
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	8c 0f       	add	r24, r28
     938:	9d 1f       	adc	r25, r29
     93a:	08 0f       	add	r16, r24
     93c:	19 1f       	adc	r17, r25
     93e:	bc 01       	movw	r22, r24
     940:	f8 01       	movw	r30, r16
     942:	85 81       	ldd	r24, Z+5	; 0x05
     944:	96 81       	ldd	r25, Z+6	; 0x06
     946:	0e 94 03 04 	call	0x806	; 0x806 <moveX>
     94a:	f8 01       	movw	r30, r16
     94c:	85 81       	ldd	r24, Z+5	; 0x05
     94e:	96 81       	ldd	r25, Z+6	; 0x06
     950:	9a 83       	std	Y+2, r25	; 0x02
     952:	89 83       	std	Y+1, r24	; 0x01
     954:	be 01       	movw	r22, r28
     956:	6f 5f       	subi	r22, 0xFF	; 255
     958:	7f 4f       	sbci	r23, 0xFF	; 255
     95a:	87 85       	ldd	r24, Z+15	; 0x0f
     95c:	90 89       	ldd	r25, Z+16	; 0x10
     95e:	0e 94 2c 04 	call	0x858	; 0x858 <moveY>
     962:	f8 01       	movw	r30, r16
     964:	87 85       	ldd	r24, Z+15	; 0x0f
     966:	90 89       	ldd	r25, Z+16	; 0x10
     968:	9c 83       	std	Y+4, r25	; 0x04
     96a:	8b 83       	std	Y+3, r24	; 0x03
     96c:	88 ee       	ldi	r24, 0xE8	; 232
     96e:	93 e0       	ldi	r25, 0x03	; 3
     970:	0e 94 42 0a 	call	0x1484	; 0x1484 <delay_ms>
     974:	0e 94 54 00 	call	0xa8	; 0xa8 <batteryPercentage>
     978:	8c 01       	movw	r16, r24
     97a:	20 e0       	ldi	r18, 0x00	; 0
     97c:	30 e0       	ldi	r19, 0x00	; 0
     97e:	40 ea       	ldi	r20, 0xA0	; 160
     980:	50 e4       	ldi	r21, 0x40	; 64
     982:	c5 01       	movw	r24, r10
     984:	b4 01       	movw	r22, r8
     986:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__divsf3>
     98a:	20 e0       	ldi	r18, 0x00	; 0
     98c:	30 e0       	ldi	r19, 0x00	; 0
     98e:	48 ec       	ldi	r20, 0xC8	; 200
     990:	52 e4       	ldi	r21, 0x42	; 66
     992:	0e 94 30 06 	call	0xc60	; 0xc60 <__mulsf3>
     996:	0e 94 6c 05 	call	0xad8	; 0xad8 <__fixsfsi>
     99a:	dc 01       	movw	r26, r24
     99c:	cb 01       	movw	r24, r22
     99e:	42 e0       	ldi	r20, 0x02	; 2
     9a0:	b8 01       	movw	r22, r16
     9a2:	0e 94 5c 00 	call	0xb8	; 0xb8 <updateDisplay>
     9a6:	ff ef       	ldi	r31, 0xFF	; 255
     9a8:	ef 1a       	sub	r14, r31
     9aa:	ff 0a       	sbc	r15, r31
     9ac:	85 e0       	ldi	r24, 0x05	; 5
     9ae:	e8 16       	cp	r14, r24
     9b0:	f1 04       	cpc	r15, r1
     9b2:	0c f4       	brge	.+2      	; 0x9b6 <__stack+0xb7>
     9b4:	b2 cf       	rjmp	.-156    	; 0x91a <__stack+0x1b>
     9b6:	be 01       	movw	r22, r28
     9b8:	6f 5f       	subi	r22, 0xFF	; 255
     9ba:	7f 4f       	sbci	r23, 0xFF	; 255
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	0e 94 2c 04 	call	0x858	; 0x858 <moveY>
     9c4:	be 01       	movw	r22, r28
     9c6:	6f 5f       	subi	r22, 0xFF	; 255
     9c8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ca:	80 e0       	ldi	r24, 0x00	; 0
     9cc:	90 e0       	ldi	r25, 0x00	; 0
     9ce:	0e 94 03 04 	call	0x806	; 0x806 <moveX>
     9d2:	69 96       	adiw	r28, 0x19	; 25
     9d4:	0f b6       	in	r0, 0x3f	; 63
     9d6:	f8 94       	cli
     9d8:	de bf       	out	0x3e, r29	; 62
     9da:	0f be       	out	0x3f, r0	; 63
     9dc:	cd bf       	out	0x3d, r28	; 61
     9de:	df 91       	pop	r29
     9e0:	cf 91       	pop	r28
     9e2:	1f 91       	pop	r17
     9e4:	0f 91       	pop	r16
     9e6:	ff 90       	pop	r15
     9e8:	ef 90       	pop	r14
     9ea:	bf 90       	pop	r11
     9ec:	af 90       	pop	r10
     9ee:	9f 90       	pop	r9
     9f0:	8f 90       	pop	r8
     9f2:	08 95       	ret

000009f4 <__divsf3>:
     9f4:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__divsf3x>
     9f8:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__fp_round>
     9fc:	0e 94 ef 05 	call	0xbde	; 0xbde <__fp_pscB>
     a00:	58 f0       	brcs	.+22     	; 0xa18 <__divsf3+0x24>
     a02:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <__fp_pscA>
     a06:	40 f0       	brcs	.+16     	; 0xa18 <__divsf3+0x24>
     a08:	29 f4       	brne	.+10     	; 0xa14 <__divsf3+0x20>
     a0a:	5f 3f       	cpi	r21, 0xFF	; 255
     a0c:	29 f0       	breq	.+10     	; 0xa18 <__divsf3+0x24>
     a0e:	0c 94 df 05 	jmp	0xbbe	; 0xbbe <__fp_inf>
     a12:	51 11       	cpse	r21, r1
     a14:	0c 94 2a 06 	jmp	0xc54	; 0xc54 <__fp_szero>
     a18:	0c 94 e5 05 	jmp	0xbca	; 0xbca <__fp_nan>

00000a1c <__divsf3x>:
     a1c:	0e 94 07 06 	call	0xc0e	; 0xc0e <__fp_split3>
     a20:	68 f3       	brcs	.-38     	; 0x9fc <__divsf3+0x8>

00000a22 <__divsf3_pse>:
     a22:	99 23       	and	r25, r25
     a24:	b1 f3       	breq	.-20     	; 0xa12 <__divsf3+0x1e>
     a26:	55 23       	and	r21, r21
     a28:	91 f3       	breq	.-28     	; 0xa0e <__divsf3+0x1a>
     a2a:	95 1b       	sub	r25, r21
     a2c:	55 0b       	sbc	r21, r21
     a2e:	bb 27       	eor	r27, r27
     a30:	aa 27       	eor	r26, r26
     a32:	62 17       	cp	r22, r18
     a34:	73 07       	cpc	r23, r19
     a36:	84 07       	cpc	r24, r20
     a38:	38 f0       	brcs	.+14     	; 0xa48 <__divsf3_pse+0x26>
     a3a:	9f 5f       	subi	r25, 0xFF	; 255
     a3c:	5f 4f       	sbci	r21, 0xFF	; 255
     a3e:	22 0f       	add	r18, r18
     a40:	33 1f       	adc	r19, r19
     a42:	44 1f       	adc	r20, r20
     a44:	aa 1f       	adc	r26, r26
     a46:	a9 f3       	breq	.-22     	; 0xa32 <__divsf3_pse+0x10>
     a48:	35 d0       	rcall	.+106    	; 0xab4 <__divsf3_pse+0x92>
     a4a:	0e 2e       	mov	r0, r30
     a4c:	3a f0       	brmi	.+14     	; 0xa5c <__divsf3_pse+0x3a>
     a4e:	e0 e8       	ldi	r30, 0x80	; 128
     a50:	32 d0       	rcall	.+100    	; 0xab6 <__divsf3_pse+0x94>
     a52:	91 50       	subi	r25, 0x01	; 1
     a54:	50 40       	sbci	r21, 0x00	; 0
     a56:	e6 95       	lsr	r30
     a58:	00 1c       	adc	r0, r0
     a5a:	ca f7       	brpl	.-14     	; 0xa4e <__divsf3_pse+0x2c>
     a5c:	2b d0       	rcall	.+86     	; 0xab4 <__divsf3_pse+0x92>
     a5e:	fe 2f       	mov	r31, r30
     a60:	29 d0       	rcall	.+82     	; 0xab4 <__divsf3_pse+0x92>
     a62:	66 0f       	add	r22, r22
     a64:	77 1f       	adc	r23, r23
     a66:	88 1f       	adc	r24, r24
     a68:	bb 1f       	adc	r27, r27
     a6a:	26 17       	cp	r18, r22
     a6c:	37 07       	cpc	r19, r23
     a6e:	48 07       	cpc	r20, r24
     a70:	ab 07       	cpc	r26, r27
     a72:	b0 e8       	ldi	r27, 0x80	; 128
     a74:	09 f0       	breq	.+2      	; 0xa78 <__divsf3_pse+0x56>
     a76:	bb 0b       	sbc	r27, r27
     a78:	80 2d       	mov	r24, r0
     a7a:	bf 01       	movw	r22, r30
     a7c:	ff 27       	eor	r31, r31
     a7e:	93 58       	subi	r25, 0x83	; 131
     a80:	5f 4f       	sbci	r21, 0xFF	; 255
     a82:	3a f0       	brmi	.+14     	; 0xa92 <__divsf3_pse+0x70>
     a84:	9e 3f       	cpi	r25, 0xFE	; 254
     a86:	51 05       	cpc	r21, r1
     a88:	78 f0       	brcs	.+30     	; 0xaa8 <__divsf3_pse+0x86>
     a8a:	0c 94 df 05 	jmp	0xbbe	; 0xbbe <__fp_inf>
     a8e:	0c 94 2a 06 	jmp	0xc54	; 0xc54 <__fp_szero>
     a92:	5f 3f       	cpi	r21, 0xFF	; 255
     a94:	e4 f3       	brlt	.-8      	; 0xa8e <__divsf3_pse+0x6c>
     a96:	98 3e       	cpi	r25, 0xE8	; 232
     a98:	d4 f3       	brlt	.-12     	; 0xa8e <__divsf3_pse+0x6c>
     a9a:	86 95       	lsr	r24
     a9c:	77 95       	ror	r23
     a9e:	67 95       	ror	r22
     aa0:	b7 95       	ror	r27
     aa2:	f7 95       	ror	r31
     aa4:	9f 5f       	subi	r25, 0xFF	; 255
     aa6:	c9 f7       	brne	.-14     	; 0xa9a <__divsf3_pse+0x78>
     aa8:	88 0f       	add	r24, r24
     aaa:	91 1d       	adc	r25, r1
     aac:	96 95       	lsr	r25
     aae:	87 95       	ror	r24
     ab0:	97 f9       	bld	r25, 7
     ab2:	08 95       	ret
     ab4:	e1 e0       	ldi	r30, 0x01	; 1
     ab6:	66 0f       	add	r22, r22
     ab8:	77 1f       	adc	r23, r23
     aba:	88 1f       	adc	r24, r24
     abc:	bb 1f       	adc	r27, r27
     abe:	62 17       	cp	r22, r18
     ac0:	73 07       	cpc	r23, r19
     ac2:	84 07       	cpc	r24, r20
     ac4:	ba 07       	cpc	r27, r26
     ac6:	20 f0       	brcs	.+8      	; 0xad0 <__divsf3_pse+0xae>
     ac8:	62 1b       	sub	r22, r18
     aca:	73 0b       	sbc	r23, r19
     acc:	84 0b       	sbc	r24, r20
     ace:	ba 0b       	sbc	r27, r26
     ad0:	ee 1f       	adc	r30, r30
     ad2:	88 f7       	brcc	.-30     	; 0xab6 <__divsf3_pse+0x94>
     ad4:	e0 95       	com	r30
     ad6:	08 95       	ret

00000ad8 <__fixsfsi>:
     ad8:	0e 94 73 05 	call	0xae6	; 0xae6 <__fixunssfsi>
     adc:	68 94       	set
     ade:	b1 11       	cpse	r27, r1
     ae0:	0c 94 2a 06 	jmp	0xc54	; 0xc54 <__fp_szero>
     ae4:	08 95       	ret

00000ae6 <__fixunssfsi>:
     ae6:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__fp_splitA>
     aea:	88 f0       	brcs	.+34     	; 0xb0e <__fixunssfsi+0x28>
     aec:	9f 57       	subi	r25, 0x7F	; 127
     aee:	98 f0       	brcs	.+38     	; 0xb16 <__fixunssfsi+0x30>
     af0:	b9 2f       	mov	r27, r25
     af2:	99 27       	eor	r25, r25
     af4:	b7 51       	subi	r27, 0x17	; 23
     af6:	b0 f0       	brcs	.+44     	; 0xb24 <__fixunssfsi+0x3e>
     af8:	e1 f0       	breq	.+56     	; 0xb32 <__fixunssfsi+0x4c>
     afa:	66 0f       	add	r22, r22
     afc:	77 1f       	adc	r23, r23
     afe:	88 1f       	adc	r24, r24
     b00:	99 1f       	adc	r25, r25
     b02:	1a f0       	brmi	.+6      	; 0xb0a <__fixunssfsi+0x24>
     b04:	ba 95       	dec	r27
     b06:	c9 f7       	brne	.-14     	; 0xafa <__fixunssfsi+0x14>
     b08:	14 c0       	rjmp	.+40     	; 0xb32 <__fixunssfsi+0x4c>
     b0a:	b1 30       	cpi	r27, 0x01	; 1
     b0c:	91 f0       	breq	.+36     	; 0xb32 <__fixunssfsi+0x4c>
     b0e:	0e 94 29 06 	call	0xc52	; 0xc52 <__fp_zero>
     b12:	b1 e0       	ldi	r27, 0x01	; 1
     b14:	08 95       	ret
     b16:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__fp_zero>
     b1a:	67 2f       	mov	r22, r23
     b1c:	78 2f       	mov	r23, r24
     b1e:	88 27       	eor	r24, r24
     b20:	b8 5f       	subi	r27, 0xF8	; 248
     b22:	39 f0       	breq	.+14     	; 0xb32 <__fixunssfsi+0x4c>
     b24:	b9 3f       	cpi	r27, 0xF9	; 249
     b26:	cc f3       	brlt	.-14     	; 0xb1a <__fixunssfsi+0x34>
     b28:	86 95       	lsr	r24
     b2a:	77 95       	ror	r23
     b2c:	67 95       	ror	r22
     b2e:	b3 95       	inc	r27
     b30:	d9 f7       	brne	.-10     	; 0xb28 <__fixunssfsi+0x42>
     b32:	3e f4       	brtc	.+14     	; 0xb42 <__fixunssfsi+0x5c>
     b34:	90 95       	com	r25
     b36:	80 95       	com	r24
     b38:	70 95       	com	r23
     b3a:	61 95       	neg	r22
     b3c:	7f 4f       	sbci	r23, 0xFF	; 255
     b3e:	8f 4f       	sbci	r24, 0xFF	; 255
     b40:	9f 4f       	sbci	r25, 0xFF	; 255
     b42:	08 95       	ret

00000b44 <__floatunsisf>:
     b44:	e8 94       	clt
     b46:	09 c0       	rjmp	.+18     	; 0xb5a <__floatsisf+0x12>

00000b48 <__floatsisf>:
     b48:	97 fb       	bst	r25, 7
     b4a:	3e f4       	brtc	.+14     	; 0xb5a <__floatsisf+0x12>
     b4c:	90 95       	com	r25
     b4e:	80 95       	com	r24
     b50:	70 95       	com	r23
     b52:	61 95       	neg	r22
     b54:	7f 4f       	sbci	r23, 0xFF	; 255
     b56:	8f 4f       	sbci	r24, 0xFF	; 255
     b58:	9f 4f       	sbci	r25, 0xFF	; 255
     b5a:	99 23       	and	r25, r25
     b5c:	a9 f0       	breq	.+42     	; 0xb88 <__floatsisf+0x40>
     b5e:	f9 2f       	mov	r31, r25
     b60:	96 e9       	ldi	r25, 0x96	; 150
     b62:	bb 27       	eor	r27, r27
     b64:	93 95       	inc	r25
     b66:	f6 95       	lsr	r31
     b68:	87 95       	ror	r24
     b6a:	77 95       	ror	r23
     b6c:	67 95       	ror	r22
     b6e:	b7 95       	ror	r27
     b70:	f1 11       	cpse	r31, r1
     b72:	f8 cf       	rjmp	.-16     	; 0xb64 <__floatsisf+0x1c>
     b74:	fa f4       	brpl	.+62     	; 0xbb4 <__floatsisf+0x6c>
     b76:	bb 0f       	add	r27, r27
     b78:	11 f4       	brne	.+4      	; 0xb7e <__floatsisf+0x36>
     b7a:	60 ff       	sbrs	r22, 0
     b7c:	1b c0       	rjmp	.+54     	; 0xbb4 <__floatsisf+0x6c>
     b7e:	6f 5f       	subi	r22, 0xFF	; 255
     b80:	7f 4f       	sbci	r23, 0xFF	; 255
     b82:	8f 4f       	sbci	r24, 0xFF	; 255
     b84:	9f 4f       	sbci	r25, 0xFF	; 255
     b86:	16 c0       	rjmp	.+44     	; 0xbb4 <__floatsisf+0x6c>
     b88:	88 23       	and	r24, r24
     b8a:	11 f0       	breq	.+4      	; 0xb90 <__floatsisf+0x48>
     b8c:	96 e9       	ldi	r25, 0x96	; 150
     b8e:	11 c0       	rjmp	.+34     	; 0xbb2 <__floatsisf+0x6a>
     b90:	77 23       	and	r23, r23
     b92:	21 f0       	breq	.+8      	; 0xb9c <__floatsisf+0x54>
     b94:	9e e8       	ldi	r25, 0x8E	; 142
     b96:	87 2f       	mov	r24, r23
     b98:	76 2f       	mov	r23, r22
     b9a:	05 c0       	rjmp	.+10     	; 0xba6 <__floatsisf+0x5e>
     b9c:	66 23       	and	r22, r22
     b9e:	71 f0       	breq	.+28     	; 0xbbc <__floatsisf+0x74>
     ba0:	96 e8       	ldi	r25, 0x86	; 134
     ba2:	86 2f       	mov	r24, r22
     ba4:	70 e0       	ldi	r23, 0x00	; 0
     ba6:	60 e0       	ldi	r22, 0x00	; 0
     ba8:	2a f0       	brmi	.+10     	; 0xbb4 <__floatsisf+0x6c>
     baa:	9a 95       	dec	r25
     bac:	66 0f       	add	r22, r22
     bae:	77 1f       	adc	r23, r23
     bb0:	88 1f       	adc	r24, r24
     bb2:	da f7       	brpl	.-10     	; 0xbaa <__floatsisf+0x62>
     bb4:	88 0f       	add	r24, r24
     bb6:	96 95       	lsr	r25
     bb8:	87 95       	ror	r24
     bba:	97 f9       	bld	r25, 7
     bbc:	08 95       	ret

00000bbe <__fp_inf>:
     bbe:	97 f9       	bld	r25, 7
     bc0:	9f 67       	ori	r25, 0x7F	; 127
     bc2:	80 e8       	ldi	r24, 0x80	; 128
     bc4:	70 e0       	ldi	r23, 0x00	; 0
     bc6:	60 e0       	ldi	r22, 0x00	; 0
     bc8:	08 95       	ret

00000bca <__fp_nan>:
     bca:	9f ef       	ldi	r25, 0xFF	; 255
     bcc:	80 ec       	ldi	r24, 0xC0	; 192
     bce:	08 95       	ret

00000bd0 <__fp_pscA>:
     bd0:	00 24       	eor	r0, r0
     bd2:	0a 94       	dec	r0
     bd4:	16 16       	cp	r1, r22
     bd6:	17 06       	cpc	r1, r23
     bd8:	18 06       	cpc	r1, r24
     bda:	09 06       	cpc	r0, r25
     bdc:	08 95       	ret

00000bde <__fp_pscB>:
     bde:	00 24       	eor	r0, r0
     be0:	0a 94       	dec	r0
     be2:	12 16       	cp	r1, r18
     be4:	13 06       	cpc	r1, r19
     be6:	14 06       	cpc	r1, r20
     be8:	05 06       	cpc	r0, r21
     bea:	08 95       	ret

00000bec <__fp_round>:
     bec:	09 2e       	mov	r0, r25
     bee:	03 94       	inc	r0
     bf0:	00 0c       	add	r0, r0
     bf2:	11 f4       	brne	.+4      	; 0xbf8 <__fp_round+0xc>
     bf4:	88 23       	and	r24, r24
     bf6:	52 f0       	brmi	.+20     	; 0xc0c <__fp_round+0x20>
     bf8:	bb 0f       	add	r27, r27
     bfa:	40 f4       	brcc	.+16     	; 0xc0c <__fp_round+0x20>
     bfc:	bf 2b       	or	r27, r31
     bfe:	11 f4       	brne	.+4      	; 0xc04 <__fp_round+0x18>
     c00:	60 ff       	sbrs	r22, 0
     c02:	04 c0       	rjmp	.+8      	; 0xc0c <__fp_round+0x20>
     c04:	6f 5f       	subi	r22, 0xFF	; 255
     c06:	7f 4f       	sbci	r23, 0xFF	; 255
     c08:	8f 4f       	sbci	r24, 0xFF	; 255
     c0a:	9f 4f       	sbci	r25, 0xFF	; 255
     c0c:	08 95       	ret

00000c0e <__fp_split3>:
     c0e:	57 fd       	sbrc	r21, 7
     c10:	90 58       	subi	r25, 0x80	; 128
     c12:	44 0f       	add	r20, r20
     c14:	55 1f       	adc	r21, r21
     c16:	59 f0       	breq	.+22     	; 0xc2e <__fp_splitA+0x10>
     c18:	5f 3f       	cpi	r21, 0xFF	; 255
     c1a:	71 f0       	breq	.+28     	; 0xc38 <__fp_splitA+0x1a>
     c1c:	47 95       	ror	r20

00000c1e <__fp_splitA>:
     c1e:	88 0f       	add	r24, r24
     c20:	97 fb       	bst	r25, 7
     c22:	99 1f       	adc	r25, r25
     c24:	61 f0       	breq	.+24     	; 0xc3e <__fp_splitA+0x20>
     c26:	9f 3f       	cpi	r25, 0xFF	; 255
     c28:	79 f0       	breq	.+30     	; 0xc48 <__fp_splitA+0x2a>
     c2a:	87 95       	ror	r24
     c2c:	08 95       	ret
     c2e:	12 16       	cp	r1, r18
     c30:	13 06       	cpc	r1, r19
     c32:	14 06       	cpc	r1, r20
     c34:	55 1f       	adc	r21, r21
     c36:	f2 cf       	rjmp	.-28     	; 0xc1c <__fp_split3+0xe>
     c38:	46 95       	lsr	r20
     c3a:	f1 df       	rcall	.-30     	; 0xc1e <__fp_splitA>
     c3c:	08 c0       	rjmp	.+16     	; 0xc4e <__fp_splitA+0x30>
     c3e:	16 16       	cp	r1, r22
     c40:	17 06       	cpc	r1, r23
     c42:	18 06       	cpc	r1, r24
     c44:	99 1f       	adc	r25, r25
     c46:	f1 cf       	rjmp	.-30     	; 0xc2a <__fp_splitA+0xc>
     c48:	86 95       	lsr	r24
     c4a:	71 05       	cpc	r23, r1
     c4c:	61 05       	cpc	r22, r1
     c4e:	08 94       	sec
     c50:	08 95       	ret

00000c52 <__fp_zero>:
     c52:	e8 94       	clt

00000c54 <__fp_szero>:
     c54:	bb 27       	eor	r27, r27
     c56:	66 27       	eor	r22, r22
     c58:	77 27       	eor	r23, r23
     c5a:	cb 01       	movw	r24, r22
     c5c:	97 f9       	bld	r25, 7
     c5e:	08 95       	ret

00000c60 <__mulsf3>:
     c60:	0e 94 43 06 	call	0xc86	; 0xc86 <__mulsf3x>
     c64:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__fp_round>
     c68:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <__fp_pscA>
     c6c:	38 f0       	brcs	.+14     	; 0xc7c <__mulsf3+0x1c>
     c6e:	0e 94 ef 05 	call	0xbde	; 0xbde <__fp_pscB>
     c72:	20 f0       	brcs	.+8      	; 0xc7c <__mulsf3+0x1c>
     c74:	95 23       	and	r25, r21
     c76:	11 f0       	breq	.+4      	; 0xc7c <__mulsf3+0x1c>
     c78:	0c 94 df 05 	jmp	0xbbe	; 0xbbe <__fp_inf>
     c7c:	0c 94 e5 05 	jmp	0xbca	; 0xbca <__fp_nan>
     c80:	11 24       	eor	r1, r1
     c82:	0c 94 2a 06 	jmp	0xc54	; 0xc54 <__fp_szero>

00000c86 <__mulsf3x>:
     c86:	0e 94 07 06 	call	0xc0e	; 0xc0e <__fp_split3>
     c8a:	70 f3       	brcs	.-36     	; 0xc68 <__mulsf3+0x8>

00000c8c <__mulsf3_pse>:
     c8c:	95 9f       	mul	r25, r21
     c8e:	c1 f3       	breq	.-16     	; 0xc80 <__mulsf3+0x20>
     c90:	95 0f       	add	r25, r21
     c92:	50 e0       	ldi	r21, 0x00	; 0
     c94:	55 1f       	adc	r21, r21
     c96:	62 9f       	mul	r22, r18
     c98:	f0 01       	movw	r30, r0
     c9a:	72 9f       	mul	r23, r18
     c9c:	bb 27       	eor	r27, r27
     c9e:	f0 0d       	add	r31, r0
     ca0:	b1 1d       	adc	r27, r1
     ca2:	63 9f       	mul	r22, r19
     ca4:	aa 27       	eor	r26, r26
     ca6:	f0 0d       	add	r31, r0
     ca8:	b1 1d       	adc	r27, r1
     caa:	aa 1f       	adc	r26, r26
     cac:	64 9f       	mul	r22, r20
     cae:	66 27       	eor	r22, r22
     cb0:	b0 0d       	add	r27, r0
     cb2:	a1 1d       	adc	r26, r1
     cb4:	66 1f       	adc	r22, r22
     cb6:	82 9f       	mul	r24, r18
     cb8:	22 27       	eor	r18, r18
     cba:	b0 0d       	add	r27, r0
     cbc:	a1 1d       	adc	r26, r1
     cbe:	62 1f       	adc	r22, r18
     cc0:	73 9f       	mul	r23, r19
     cc2:	b0 0d       	add	r27, r0
     cc4:	a1 1d       	adc	r26, r1
     cc6:	62 1f       	adc	r22, r18
     cc8:	83 9f       	mul	r24, r19
     cca:	a0 0d       	add	r26, r0
     ccc:	61 1d       	adc	r22, r1
     cce:	22 1f       	adc	r18, r18
     cd0:	74 9f       	mul	r23, r20
     cd2:	33 27       	eor	r19, r19
     cd4:	a0 0d       	add	r26, r0
     cd6:	61 1d       	adc	r22, r1
     cd8:	23 1f       	adc	r18, r19
     cda:	84 9f       	mul	r24, r20
     cdc:	60 0d       	add	r22, r0
     cde:	21 1d       	adc	r18, r1
     ce0:	82 2f       	mov	r24, r18
     ce2:	76 2f       	mov	r23, r22
     ce4:	6a 2f       	mov	r22, r26
     ce6:	11 24       	eor	r1, r1
     ce8:	9f 57       	subi	r25, 0x7F	; 127
     cea:	50 40       	sbci	r21, 0x00	; 0
     cec:	9a f0       	brmi	.+38     	; 0xd14 <__mulsf3_pse+0x88>
     cee:	f1 f0       	breq	.+60     	; 0xd2c <__mulsf3_pse+0xa0>
     cf0:	88 23       	and	r24, r24
     cf2:	4a f0       	brmi	.+18     	; 0xd06 <__mulsf3_pse+0x7a>
     cf4:	ee 0f       	add	r30, r30
     cf6:	ff 1f       	adc	r31, r31
     cf8:	bb 1f       	adc	r27, r27
     cfa:	66 1f       	adc	r22, r22
     cfc:	77 1f       	adc	r23, r23
     cfe:	88 1f       	adc	r24, r24
     d00:	91 50       	subi	r25, 0x01	; 1
     d02:	50 40       	sbci	r21, 0x00	; 0
     d04:	a9 f7       	brne	.-22     	; 0xcf0 <__mulsf3_pse+0x64>
     d06:	9e 3f       	cpi	r25, 0xFE	; 254
     d08:	51 05       	cpc	r21, r1
     d0a:	80 f0       	brcs	.+32     	; 0xd2c <__mulsf3_pse+0xa0>
     d0c:	0c 94 df 05 	jmp	0xbbe	; 0xbbe <__fp_inf>
     d10:	0c 94 2a 06 	jmp	0xc54	; 0xc54 <__fp_szero>
     d14:	5f 3f       	cpi	r21, 0xFF	; 255
     d16:	e4 f3       	brlt	.-8      	; 0xd10 <__mulsf3_pse+0x84>
     d18:	98 3e       	cpi	r25, 0xE8	; 232
     d1a:	d4 f3       	brlt	.-12     	; 0xd10 <__mulsf3_pse+0x84>
     d1c:	86 95       	lsr	r24
     d1e:	77 95       	ror	r23
     d20:	67 95       	ror	r22
     d22:	b7 95       	ror	r27
     d24:	f7 95       	ror	r31
     d26:	e7 95       	ror	r30
     d28:	9f 5f       	subi	r25, 0xFF	; 255
     d2a:	c1 f7       	brne	.-16     	; 0xd1c <__mulsf3_pse+0x90>
     d2c:	fe 2b       	or	r31, r30
     d2e:	88 0f       	add	r24, r24
     d30:	91 1d       	adc	r25, r1
     d32:	96 95       	lsr	r25
     d34:	87 95       	ror	r24
     d36:	97 f9       	bld	r25, 7
     d38:	08 95       	ret

00000d3a <_ZN15OrangutanAnalog7setModeEh.part.0>:
     d3a:	ec e7       	ldi	r30, 0x7C	; 124
     d3c:	f0 e0       	ldi	r31, 0x00	; 0
     d3e:	80 81       	ld	r24, Z
     d40:	8f 7d       	andi	r24, 0xDF	; 223
     d42:	80 83       	st	Z, r24
     d44:	08 95       	ret

00000d46 <_ZN15OrangutanAnalog7setModeEh>:
     d46:	81 11       	cpse	r24, r1
     d48:	03 c0       	rjmp	.+6      	; 0xd50 <_ZN15OrangutanAnalog7setModeEh+0xa>
     d4a:	0e 94 9d 06 	call	0xd3a	; 0xd3a <_ZN15OrangutanAnalog7setModeEh.part.0>
     d4e:	08 95       	ret
     d50:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     d54:	80 62       	ori	r24, 0x20	; 32
     d56:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     d5a:	08 95       	ret

00000d5c <_ZN15OrangutanAnalog7getModeEv>:
     d5c:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     d60:	85 fb       	bst	r24, 5
     d62:	88 27       	eor	r24, r24
     d64:	80 f9       	bld	r24, 0
     d66:	08 95       	ret

00000d68 <_ZN15OrangutanAnalog16conversionResultEv>:
     d68:	0e 94 ae 06 	call	0xd5c	; 0xd5c <_ZN15OrangutanAnalog7getModeEv>
     d6c:	88 23       	and	r24, r24
     d6e:	21 f0       	breq	.+8      	; 0xd78 <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     d70:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     d74:	90 e0       	ldi	r25, 0x00	; 0
     d76:	08 95       	ret
     d78:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     d7c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     d80:	08 95       	ret

00000d82 <_ZN15OrangutanAnalog15startConversionEhh>:
     d82:	80 32       	cpi	r24, 0x20	; 32
     d84:	a0 f4       	brcc	.+40     	; 0xdae <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
     d86:	97 e8       	ldi	r25, 0x87	; 135
     d88:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     d8c:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     d90:	66 23       	and	r22, r22
     d92:	11 f0       	breq	.+4      	; 0xd98 <_ZN15OrangutanAnalog15startConversionEhh+0x16>
     d94:	90 6c       	ori	r25, 0xC0	; 192
     d96:	02 c0       	rjmp	.+4      	; 0xd9c <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
     d98:	9f 77       	andi	r25, 0x7F	; 127
     d9a:	90 64       	ori	r25, 0x40	; 64
     d9c:	90 7e       	andi	r25, 0xE0	; 224
     d9e:	98 2b       	or	r25, r24
     da0:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     da4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     da8:	80 64       	ori	r24, 0x40	; 64
     daa:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     dae:	08 95       	ret

00000db0 <_ZN15OrangutanAnalog11readAverageEhj>:
     db0:	a0 e0       	ldi	r26, 0x00	; 0
     db2:	b0 e0       	ldi	r27, 0x00	; 0
     db4:	ee ed       	ldi	r30, 0xDE	; 222
     db6:	f6 e0       	ldi	r31, 0x06	; 6
     db8:	0c 94 65 10 	jmp	0x20ca	; 0x20ca <__prologue_saves__+0x14>
     dbc:	eb 01       	movw	r28, r22
     dbe:	60 e0       	ldi	r22, 0x00	; 0
     dc0:	0e 94 c1 06 	call	0xd82	; 0xd82 <_ZN15OrangutanAnalog15startConversionEhh>
     dc4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     dc8:	86 fd       	sbrc	r24, 6
     dca:	fc cf       	rjmp	.-8      	; 0xdc4 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
     dcc:	8e 01       	movw	r16, r28
     dce:	c1 2c       	mov	r12, r1
     dd0:	d1 2c       	mov	r13, r1
     dd2:	76 01       	movw	r14, r12
     dd4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     dd8:	80 64       	ori	r24, 0x40	; 64
     dda:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     dde:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     de2:	86 fd       	sbrc	r24, 6
     de4:	fc cf       	rjmp	.-8      	; 0xdde <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
     de6:	0e 94 b4 06 	call	0xd68	; 0xd68 <_ZN15OrangutanAnalog16conversionResultEv>
     dea:	c8 0e       	add	r12, r24
     dec:	d9 1e       	adc	r13, r25
     dee:	e1 1c       	adc	r14, r1
     df0:	f1 1c       	adc	r15, r1
     df2:	01 50       	subi	r16, 0x01	; 1
     df4:	11 09       	sbc	r17, r1
     df6:	01 15       	cp	r16, r1
     df8:	11 05       	cpc	r17, r1
     dfa:	61 f7       	brne	.-40     	; 0xdd4 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
     dfc:	ce 01       	movw	r24, r28
     dfe:	96 95       	lsr	r25
     e00:	87 95       	ror	r24
     e02:	c0 34       	cpi	r28, 0x40	; 64
     e04:	d1 05       	cpc	r29, r1
     e06:	38 f4       	brcc	.+14     	; 0xe16 <_ZN15OrangutanAnalog11readAverageEhj+0x66>
     e08:	8c 0d       	add	r24, r12
     e0a:	9d 1d       	adc	r25, r13
     e0c:	be 01       	movw	r22, r28
     e0e:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <__udivmodhi4>
     e12:	cb 01       	movw	r24, r22
     e14:	0e c0       	rjmp	.+28     	; 0xe32 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
     e16:	a7 01       	movw	r20, r14
     e18:	96 01       	movw	r18, r12
     e1a:	28 0f       	add	r18, r24
     e1c:	39 1f       	adc	r19, r25
     e1e:	41 1d       	adc	r20, r1
     e20:	51 1d       	adc	r21, r1
     e22:	ca 01       	movw	r24, r20
     e24:	b9 01       	movw	r22, r18
     e26:	9e 01       	movw	r18, r28
     e28:	40 e0       	ldi	r20, 0x00	; 0
     e2a:	50 e0       	ldi	r21, 0x00	; 0
     e2c:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__udivmodsi4>
     e30:	c9 01       	movw	r24, r18
     e32:	cd b7       	in	r28, 0x3d	; 61
     e34:	de b7       	in	r29, 0x3e	; 62
     e36:	e8 e0       	ldi	r30, 0x08	; 8
     e38:	0c 94 81 10 	jmp	0x2102	; 0x2102 <__epilogue_restores__+0x14>

00000e3c <_ZN15OrangutanAnalog12toMillivoltsEj>:
     e3c:	cf 92       	push	r12
     e3e:	df 92       	push	r13
     e40:	ef 92       	push	r14
     e42:	ff 92       	push	r15
     e44:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e48:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     e4c:	9c 01       	movw	r18, r24
     e4e:	0e 94 39 10 	call	0x2072	; 0x2072 <__umulhisi3>
     e52:	6b 01       	movw	r12, r22
     e54:	7c 01       	movw	r14, r24
     e56:	0e 94 ae 06 	call	0xd5c	; 0xd5c <_ZN15OrangutanAnalog7getModeEv>
     e5a:	88 23       	and	r24, r24
     e5c:	59 f0       	breq	.+22     	; 0xe74 <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
     e5e:	c7 01       	movw	r24, r14
     e60:	b6 01       	movw	r22, r12
     e62:	61 58       	subi	r22, 0x81	; 129
     e64:	7f 4f       	sbci	r23, 0xFF	; 255
     e66:	8f 4f       	sbci	r24, 0xFF	; 255
     e68:	9f 4f       	sbci	r25, 0xFF	; 255
     e6a:	2f ef       	ldi	r18, 0xFF	; 255
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	40 e0       	ldi	r20, 0x00	; 0
     e70:	50 e0       	ldi	r21, 0x00	; 0
     e72:	0a c0       	rjmp	.+20     	; 0xe88 <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
     e74:	c7 01       	movw	r24, r14
     e76:	b6 01       	movw	r22, r12
     e78:	61 50       	subi	r22, 0x01	; 1
     e7a:	7e 4f       	sbci	r23, 0xFE	; 254
     e7c:	8f 4f       	sbci	r24, 0xFF	; 255
     e7e:	9f 4f       	sbci	r25, 0xFF	; 255
     e80:	2f ef       	ldi	r18, 0xFF	; 255
     e82:	33 e0       	ldi	r19, 0x03	; 3
     e84:	40 e0       	ldi	r20, 0x00	; 0
     e86:	50 e0       	ldi	r21, 0x00	; 0
     e88:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__udivmodsi4>
     e8c:	c9 01       	movw	r24, r18
     e8e:	ff 90       	pop	r15
     e90:	ef 90       	pop	r14
     e92:	df 90       	pop	r13
     e94:	cf 90       	pop	r12
     e96:	08 95       	ret

00000e98 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
     e98:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <_ZN15OrangutanAnalog11readAverageEhj>
     e9c:	0e 94 1e 07 	call	0xe3c	; 0xe3c <_ZN15OrangutanAnalog12toMillivoltsEj>
     ea0:	08 95       	ret

00000ea2 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
     ea2:	1f 93       	push	r17
     ea4:	cf 93       	push	r28
     ea6:	df 93       	push	r29
     ea8:	0e 94 ae 06 	call	0xd5c	; 0xd5c <_ZN15OrangutanAnalog7getModeEv>
     eac:	18 2f       	mov	r17, r24
     eae:	0e 94 9d 06 	call	0xd3a	; 0xd3a <_ZN15OrangutanAnalog7setModeEh.part.0>
     eb2:	6a e0       	ldi	r22, 0x0A	; 10
     eb4:	70 e0       	ldi	r23, 0x00	; 0
     eb6:	86 e0       	ldi	r24, 0x06	; 6
     eb8:	0e 94 4c 07 	call	0xe98	; 0xe98 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
     ebc:	ec 01       	movw	r28, r24
     ebe:	81 2f       	mov	r24, r17
     ec0:	0e 94 a3 06 	call	0xd46	; 0xd46 <_ZN15OrangutanAnalog7setModeEh>
     ec4:	ce 01       	movw	r24, r28
     ec6:	88 0f       	add	r24, r24
     ec8:	99 1f       	adc	r25, r25
     eca:	8c 0f       	add	r24, r28
     ecc:	9d 1f       	adc	r25, r29
     ece:	01 96       	adiw	r24, 0x01	; 1
     ed0:	96 95       	lsr	r25
     ed2:	87 95       	ror	r24
     ed4:	df 91       	pop	r29
     ed6:	cf 91       	pop	r28
     ed8:	1f 91       	pop	r17
     eda:	08 95       	ret

00000edc <read_battery_millivolts_3pi>:
     edc:	0e 94 51 07 	call	0xea2	; 0xea2 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
     ee0:	08 95       	ret

00000ee2 <delay_us.constprop.0>:
     ee2:	81 e0       	ldi	r24, 0x01	; 1
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	6f 93       	push	r22
     ee8:	64 e0       	ldi	r22, 0x04	; 4
     eea:	6a 95       	dec	r22
     eec:	f1 f7       	brne	.-4      	; 0xeea <delay_us.constprop.0+0x8>
     eee:	6f 91       	pop	r22
     ef0:	01 97       	sbiw	r24, 0x01	; 1
     ef2:	c9 f7       	brne	.-14     	; 0xee6 <delay_us.constprop.0+0x4>
     ef4:	08 95       	ret

00000ef6 <_ZN12OrangutanLCD8busyWaitEv>:
     ef6:	0f 93       	push	r16
     ef8:	1f 93       	push	r17
     efa:	cf 93       	push	r28
     efc:	df 93       	push	r29
     efe:	1a b1       	in	r17, 0x0a	; 10
     f00:	57 98       	cbi	0x0a, 7	; 10
     f02:	5a 98       	cbi	0x0b, 2	; 11
     f04:	28 9a       	sbi	0x05, 0	; 5
     f06:	c0 e0       	ldi	r28, 0x00	; 0
     f08:	d0 e0       	ldi	r29, 0x00	; 0
     f0a:	0e 94 71 07 	call	0xee2	; 0xee2 <delay_us.constprop.0>
     f0e:	5c 9a       	sbi	0x0b, 4	; 11
     f10:	0e 94 71 07 	call	0xee2	; 0xee2 <delay_us.constprop.0>
     f14:	09 b1       	in	r16, 0x09	; 9
     f16:	5c 98       	cbi	0x0b, 4	; 11
     f18:	0e 94 71 07 	call	0xee2	; 0xee2 <delay_us.constprop.0>
     f1c:	5c 9a       	sbi	0x0b, 4	; 11
     f1e:	0e 94 71 07 	call	0xee2	; 0xee2 <delay_us.constprop.0>
     f22:	5c 98       	cbi	0x0b, 4	; 11
     f24:	24 96       	adiw	r28, 0x04	; 4
     f26:	07 ff       	sbrs	r16, 7
     f28:	10 c0       	rjmp	.+32     	; 0xf4a <_ZN12OrangutanLCD8busyWaitEv+0x54>
     f2a:	ae 01       	movw	r20, r28
     f2c:	60 e0       	ldi	r22, 0x00	; 0
     f2e:	70 e0       	ldi	r23, 0x00	; 0
     f30:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
     f34:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <__data_end+0x1>
     f38:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <__data_end+0x2>
     f3c:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <__data_end+0x3>
     f40:	48 17       	cp	r20, r24
     f42:	59 07       	cpc	r21, r25
     f44:	6a 07       	cpc	r22, r26
     f46:	7b 07       	cpc	r23, r27
     f48:	00 f3       	brcs	.-64     	; 0xf0a <_ZN12OrangutanLCD8busyWaitEv+0x14>
     f4a:	1a b9       	out	0x0a, r17	; 10
     f4c:	df 91       	pop	r29
     f4e:	cf 91       	pop	r28
     f50:	1f 91       	pop	r17
     f52:	0f 91       	pop	r16
     f54:	08 95       	ret

00000f56 <_ZN12OrangutanLCD8sendDataEh>:
     f56:	95 b1       	in	r25, 0x05	; 5
     f58:	28 2f       	mov	r18, r24
     f5a:	21 70       	andi	r18, 0x01	; 1
     f5c:	30 e0       	ldi	r19, 0x00	; 0
     f5e:	22 0f       	add	r18, r18
     f60:	33 1f       	adc	r19, r19
     f62:	48 2f       	mov	r20, r24
     f64:	46 70       	andi	r20, 0x06	; 6
     f66:	68 e0       	ldi	r22, 0x08	; 8
     f68:	46 9f       	mul	r20, r22
     f6a:	a0 01       	movw	r20, r0
     f6c:	11 24       	eor	r1, r1
     f6e:	24 2b       	or	r18, r20
     f70:	9d 7c       	andi	r25, 0xCD	; 205
     f72:	29 2b       	or	r18, r25
     f74:	25 b9       	out	0x05, r18	; 5
     f76:	9b b1       	in	r25, 0x0b	; 11
     f78:	88 70       	andi	r24, 0x08	; 8
     f7a:	82 95       	swap	r24
     f7c:	80 7f       	andi	r24, 0xF0	; 240
     f7e:	9f 77       	andi	r25, 0x7F	; 127
     f80:	89 2b       	or	r24, r25
     f82:	8b b9       	out	0x0b, r24	; 11
     f84:	5c 9a       	sbi	0x0b, 4	; 11
     f86:	0e 94 71 07 	call	0xee2	; 0xee2 <delay_us.constprop.0>
     f8a:	5c 98       	cbi	0x0b, 4	; 11
     f8c:	0e 94 71 07 	call	0xee2	; 0xee2 <delay_us.constprop.0>
     f90:	08 95       	ret

00000f92 <_ZN12OrangutanLCD4sendEhhh>:
     f92:	a0 e0       	ldi	r26, 0x00	; 0
     f94:	b0 e0       	ldi	r27, 0x00	; 0
     f96:	ef ec       	ldi	r30, 0xCF	; 207
     f98:	f7 e0       	ldi	r31, 0x07	; 7
     f9a:	0c 94 66 10 	jmp	0x20cc	; 0x20cc <__prologue_saves__+0x16>
     f9e:	c8 2f       	mov	r28, r24
     fa0:	d6 2e       	mov	r13, r22
     fa2:	e4 2e       	mov	r14, r20
     fa4:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <_ZZN12OrangutanLCD4initEvE11initialized>
     fa8:	81 11       	cpse	r24, r1
     faa:	05 c0       	rjmp	.+10     	; 0xfb6 <_ZN12OrangutanLCD4sendEhhh+0x24>
     fac:	81 e0       	ldi	r24, 0x01	; 1
     fae:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <_ZZN12OrangutanLCD4initEvE11initialized>
     fb2:	0e 94 0f 08 	call	0x101e	; 0x101e <_ZN12OrangutanLCD5init2Ev>
     fb6:	0e 94 7b 07 	call	0xef6	; 0xef6 <_ZN12OrangutanLCD8busyWaitEv>
     fba:	14 b1       	in	r17, 0x04	; 4
     fbc:	d5 b1       	in	r29, 0x05	; 5
     fbe:	fa b0       	in	r15, 0x0a	; 10
     fc0:	0b b1       	in	r16, 0x0b	; 11
     fc2:	28 98       	cbi	0x05, 0	; 5
     fc4:	dd 20       	and	r13, r13
     fc6:	11 f0       	breq	.+4      	; 0xfcc <_ZN12OrangutanLCD4sendEhhh+0x3a>
     fc8:	5a 9a       	sbi	0x0b, 2	; 11
     fca:	01 c0       	rjmp	.+2      	; 0xfce <_ZN12OrangutanLCD4sendEhhh+0x3c>
     fcc:	5a 98       	cbi	0x0b, 2	; 11
     fce:	94 b1       	in	r25, 0x04	; 4
     fd0:	92 63       	ori	r25, 0x32	; 50
     fd2:	94 b9       	out	0x04, r25	; 4
     fd4:	57 9a       	sbi	0x0a, 7	; 10
     fd6:	81 e0       	ldi	r24, 0x01	; 1
     fd8:	e8 16       	cp	r14, r24
     fda:	29 f0       	breq	.+10     	; 0xfe6 <_ZN12OrangutanLCD4sendEhhh+0x54>
     fdc:	8c 2f       	mov	r24, r28
     fde:	82 95       	swap	r24
     fe0:	8f 70       	andi	r24, 0x0F	; 15
     fe2:	0e 94 ab 07 	call	0xf56	; 0xf56 <_ZN12OrangutanLCD8sendDataEh>
     fe6:	8c 2f       	mov	r24, r28
     fe8:	8f 70       	andi	r24, 0x0F	; 15
     fea:	0e 94 ab 07 	call	0xf56	; 0xf56 <_ZN12OrangutanLCD8sendDataEh>
     fee:	fa b8       	out	0x0a, r15	; 10
     ff0:	0b b9       	out	0x0b, r16	; 11
     ff2:	14 b9       	out	0x04, r17	; 4
     ff4:	d5 b9       	out	0x05, r29	; 5
     ff6:	cd b7       	in	r28, 0x3d	; 61
     ff8:	de b7       	in	r29, 0x3e	; 62
     ffa:	e7 e0       	ldi	r30, 0x07	; 7
     ffc:	0c 94 82 10 	jmp	0x2104	; 0x2104 <__epilogue_restores__+0x16>

00001000 <_ZN12OrangutanLCD8send_cmdEh>:
    1000:	42 e0       	ldi	r20, 0x02	; 2
    1002:	60 e0       	ldi	r22, 0x00	; 0
    1004:	0e 94 c9 07 	call	0xf92	; 0xf92 <_ZN12OrangutanLCD4sendEhhh>
    1008:	08 95       	ret

0000100a <_ZN12OrangutanLCD9send_dataEh>:
    100a:	42 e0       	ldi	r20, 0x02	; 2
    100c:	61 e0       	ldi	r22, 0x01	; 1
    100e:	0e 94 c9 07 	call	0xf92	; 0xf92 <_ZN12OrangutanLCD4sendEhhh>
    1012:	08 95       	ret

00001014 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    1014:	41 e0       	ldi	r20, 0x01	; 1
    1016:	60 e0       	ldi	r22, 0x00	; 0
    1018:	0e 94 c9 07 	call	0xf92	; 0xf92 <_ZN12OrangutanLCD4sendEhhh>
    101c:	08 95       	ret

0000101e <_ZN12OrangutanLCD5init2Ev>:
    101e:	80 e1       	ldi	r24, 0x10	; 16
    1020:	97 e2       	ldi	r25, 0x27	; 39
    1022:	a0 e0       	ldi	r26, 0x00	; 0
    1024:	b0 e0       	ldi	r27, 0x00	; 0
    1026:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
    102a:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <__data_end+0x1>
    102e:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <__data_end+0x2>
    1032:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <__data_end+0x3>
    1036:	52 9a       	sbi	0x0a, 2	; 10
    1038:	20 9a       	sbi	0x04, 0	; 4
    103a:	54 9a       	sbi	0x0a, 4	; 10
    103c:	8e e1       	ldi	r24, 0x1E	; 30
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	0e 94 42 0a 	call	0x1484	; 0x1484 <delay_ms>
    1044:	83 e0       	ldi	r24, 0x03	; 3
    1046:	0e 94 0a 08 	call	0x1014	; 0x1014 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    104a:	86 e0       	ldi	r24, 0x06	; 6
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	0e 94 42 0a 	call	0x1484	; 0x1484 <delay_ms>
    1052:	83 e0       	ldi	r24, 0x03	; 3
    1054:	0e 94 0a 08 	call	0x1014	; 0x1014 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1058:	82 e0       	ldi	r24, 0x02	; 2
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	0e 94 42 0a 	call	0x1484	; 0x1484 <delay_ms>
    1060:	83 e0       	ldi	r24, 0x03	; 3
    1062:	0e 94 0a 08 	call	0x1014	; 0x1014 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1066:	82 e0       	ldi	r24, 0x02	; 2
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	0e 94 42 0a 	call	0x1484	; 0x1484 <delay_ms>
    106e:	82 e0       	ldi	r24, 0x02	; 2
    1070:	0e 94 0a 08 	call	0x1014	; 0x1014 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1074:	82 e0       	ldi	r24, 0x02	; 2
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	0e 94 42 0a 	call	0x1484	; 0x1484 <delay_ms>
    107c:	88 e2       	ldi	r24, 0x28	; 40
    107e:	0e 94 00 08 	call	0x1000	; 0x1000 <_ZN12OrangutanLCD8send_cmdEh>
    1082:	88 e0       	ldi	r24, 0x08	; 8
    1084:	0e 94 00 08 	call	0x1000	; 0x1000 <_ZN12OrangutanLCD8send_cmdEh>
    1088:	81 e0       	ldi	r24, 0x01	; 1
    108a:	0e 94 00 08 	call	0x1000	; 0x1000 <_ZN12OrangutanLCD8send_cmdEh>
    108e:	86 e0       	ldi	r24, 0x06	; 6
    1090:	0e 94 00 08 	call	0x1000	; 0x1000 <_ZN12OrangutanLCD8send_cmdEh>
    1094:	8c e0       	ldi	r24, 0x0C	; 12
    1096:	0e 94 00 08 	call	0x1000	; 0x1000 <_ZN12OrangutanLCD8send_cmdEh>
    109a:	08 95       	ret

0000109c <_ZN12OrangutanLCD5clearEv>:
    109c:	81 e0       	ldi	r24, 0x01	; 1
    109e:	0e 94 00 08 	call	0x1000	; 0x1000 <_ZN12OrangutanLCD8send_cmdEh>
    10a2:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <printf_chars>
    10a6:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <printf_chars+0x1>
    10aa:	89 2b       	or	r24, r25
    10ac:	f9 f0       	breq	.+62     	; 0x10ec <_ZN12OrangutanLCD5clearEv+0x50>
    10ae:	60 e0       	ldi	r22, 0x00	; 0
    10b0:	a0 e2       	ldi	r26, 0x20	; 32
    10b2:	26 2f       	mov	r18, r22
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <numLCDCols>
    10ba:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <numLCDRows>
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	01 97       	sbiw	r24, 0x01	; 1
    10c2:	78 9f       	mul	r23, r24
    10c4:	a0 01       	movw	r20, r0
    10c6:	79 9f       	mul	r23, r25
    10c8:	50 0d       	add	r21, r0
    10ca:	11 24       	eor	r1, r1
    10cc:	24 17       	cp	r18, r20
    10ce:	35 07       	cpc	r19, r21
    10d0:	4c f4       	brge	.+18     	; 0x10e4 <_ZN12OrangutanLCD5clearEv+0x48>
    10d2:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <printf_chars>
    10d6:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <printf_chars+0x1>
    10da:	e2 0f       	add	r30, r18
    10dc:	f3 1f       	adc	r31, r19
    10de:	a0 83       	st	Z, r26
    10e0:	6f 5f       	subi	r22, 0xFF	; 255
    10e2:	e7 cf       	rjmp	.-50     	; 0x10b2 <_ZN12OrangutanLCD5clearEv+0x16>
    10e4:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <col>
    10e8:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <row>
    10ec:	08 95       	ret

000010ee <clear>:
    10ee:	0e 94 4e 08 	call	0x109c	; 0x109c <_ZN12OrangutanLCD5clearEv>
    10f2:	08 95       	ret

000010f4 <_ZN12OrangutanLCD5printEPKc>:
    10f4:	cf 93       	push	r28
    10f6:	df 93       	push	r29
    10f8:	ec 01       	movw	r28, r24
    10fa:	89 91       	ld	r24, Y+
    10fc:	88 23       	and	r24, r24
    10fe:	19 f0       	breq	.+6      	; 0x1106 <_ZN12OrangutanLCD5printEPKc+0x12>
    1100:	0e 94 05 08 	call	0x100a	; 0x100a <_ZN12OrangutanLCD9send_dataEh>
    1104:	fa cf       	rjmp	.-12     	; 0x10fa <_ZN12OrangutanLCD5printEPKc+0x6>
    1106:	df 91       	pop	r29
    1108:	cf 91       	pop	r28
    110a:	08 95       	ret

0000110c <print>:
    110c:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <_ZN12OrangutanLCD5printEPKc>
    1110:	08 95       	ret

00001112 <_ZN12OrangutanLCD5printEm>:
    1112:	aa e0       	ldi	r26, 0x0A	; 10
    1114:	b0 e0       	ldi	r27, 0x00	; 0
    1116:	ef e8       	ldi	r30, 0x8F	; 143
    1118:	f8 e0       	ldi	r31, 0x08	; 8
    111a:	0c 94 65 10 	jmp	0x20ca	; 0x20ca <__prologue_saves__+0x14>
    111e:	1a e0       	ldi	r17, 0x0A	; 10
    1120:	5a e0       	ldi	r21, 0x0A	; 10
    1122:	c5 2e       	mov	r12, r21
    1124:	d1 2c       	mov	r13, r1
    1126:	e1 2c       	mov	r14, r1
    1128:	f1 2c       	mov	r15, r1
    112a:	06 2f       	mov	r16, r22
    112c:	a7 01       	movw	r20, r14
    112e:	96 01       	movw	r18, r12
    1130:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__udivmodsi4>
    1134:	ca 01       	movw	r24, r20
    1136:	b9 01       	movw	r22, r18
    1138:	11 50       	subi	r17, 0x01	; 1
    113a:	e1 e0       	ldi	r30, 0x01	; 1
    113c:	f0 e0       	ldi	r31, 0x00	; 0
    113e:	ec 0f       	add	r30, r28
    1140:	fd 1f       	adc	r31, r29
    1142:	e1 0f       	add	r30, r17
    1144:	f1 1d       	adc	r31, r1
    1146:	00 5d       	subi	r16, 0xD0	; 208
    1148:	2a e0       	ldi	r18, 0x0A	; 10
    114a:	62 9f       	mul	r22, r18
    114c:	00 19       	sub	r16, r0
    114e:	11 24       	eor	r1, r1
    1150:	00 83       	st	Z, r16
    1152:	61 15       	cp	r22, r1
    1154:	71 05       	cpc	r23, r1
    1156:	81 05       	cpc	r24, r1
    1158:	91 05       	cpc	r25, r1
    115a:	39 f7       	brne	.-50     	; 0x112a <_ZN12OrangutanLCD5printEm+0x18>
    115c:	1a 30       	cpi	r17, 0x0A	; 10
    115e:	58 f4       	brcc	.+22     	; 0x1176 <_ZN12OrangutanLCD5printEm+0x64>
    1160:	e1 e0       	ldi	r30, 0x01	; 1
    1162:	f0 e0       	ldi	r31, 0x00	; 0
    1164:	ec 0f       	add	r30, r28
    1166:	fd 1f       	adc	r31, r29
    1168:	e1 0f       	add	r30, r17
    116a:	f1 1d       	adc	r31, r1
    116c:	80 81       	ld	r24, Z
    116e:	0e 94 05 08 	call	0x100a	; 0x100a <_ZN12OrangutanLCD9send_dataEh>
    1172:	1f 5f       	subi	r17, 0xFF	; 255
    1174:	f3 cf       	rjmp	.-26     	; 0x115c <_ZN12OrangutanLCD5printEm+0x4a>
    1176:	2a 96       	adiw	r28, 0x0a	; 10
    1178:	e8 e0       	ldi	r30, 0x08	; 8
    117a:	0c 94 81 10 	jmp	0x2102	; 0x2102 <__epilogue_restores__+0x14>

0000117e <_ZN12OrangutanLCD5printEl>:
    117e:	cf 92       	push	r12
    1180:	df 92       	push	r13
    1182:	ef 92       	push	r14
    1184:	ff 92       	push	r15
    1186:	6b 01       	movw	r12, r22
    1188:	7c 01       	movw	r14, r24
    118a:	97 ff       	sbrs	r25, 7
    118c:	0b c0       	rjmp	.+22     	; 0x11a4 <_ZN12OrangutanLCD5printEl+0x26>
    118e:	f0 94       	com	r15
    1190:	e0 94       	com	r14
    1192:	d0 94       	com	r13
    1194:	c0 94       	com	r12
    1196:	c1 1c       	adc	r12, r1
    1198:	d1 1c       	adc	r13, r1
    119a:	e1 1c       	adc	r14, r1
    119c:	f1 1c       	adc	r15, r1
    119e:	8d e2       	ldi	r24, 0x2D	; 45
    11a0:	0e 94 05 08 	call	0x100a	; 0x100a <_ZN12OrangutanLCD9send_dataEh>
    11a4:	c7 01       	movw	r24, r14
    11a6:	b6 01       	movw	r22, r12
    11a8:	0e 94 89 08 	call	0x1112	; 0x1112 <_ZN12OrangutanLCD5printEm>
    11ac:	ff 90       	pop	r15
    11ae:	ef 90       	pop	r14
    11b0:	df 90       	pop	r13
    11b2:	cf 90       	pop	r12
    11b4:	08 95       	ret

000011b6 <print_long>:
    11b6:	0e 94 bf 08 	call	0x117e	; 0x117e <_ZN12OrangutanLCD5printEl>
    11ba:	08 95       	ret

000011bc <_ZN12OrangutanLCD6gotoXYEhh>:
    11bc:	a5 e0       	ldi	r26, 0x05	; 5
    11be:	b0 e0       	ldi	r27, 0x00	; 0
    11c0:	e4 ee       	ldi	r30, 0xE4	; 228
    11c2:	f8 e0       	ldi	r31, 0x08	; 8
    11c4:	0c 94 6a 10 	jmp	0x20d4	; 0x20d4 <__prologue_saves__+0x1e>
    11c8:	18 2f       	mov	r17, r24
    11ca:	80 e8       	ldi	r24, 0x80	; 128
    11cc:	89 83       	std	Y+1, r24	; 0x01
    11ce:	80 ec       	ldi	r24, 0xC0	; 192
    11d0:	8a 83       	std	Y+2, r24	; 0x02
    11d2:	84 e9       	ldi	r24, 0x94	; 148
    11d4:	8b 83       	std	Y+3, r24	; 0x03
    11d6:	84 ed       	ldi	r24, 0xD4	; 212
    11d8:	8c 83       	std	Y+4, r24	; 0x04
    11da:	fe 01       	movw	r30, r28
    11dc:	e6 0f       	add	r30, r22
    11de:	f1 1d       	adc	r31, r1
    11e0:	81 81       	ldd	r24, Z+1	; 0x01
    11e2:	81 0f       	add	r24, r17
    11e4:	6d 83       	std	Y+5, r22	; 0x05
    11e6:	0e 94 00 08 	call	0x1000	; 0x1000 <_ZN12OrangutanLCD8send_cmdEh>
    11ea:	10 93 3e 01 	sts	0x013E, r17	; 0x80013e <col>
    11ee:	6d 81       	ldd	r22, Y+5	; 0x05
    11f0:	60 93 3f 01 	sts	0x013F, r22	; 0x80013f <row>
    11f4:	25 96       	adiw	r28, 0x05	; 5
    11f6:	e3 e0       	ldi	r30, 0x03	; 3
    11f8:	0c 94 86 10 	jmp	0x210c	; 0x210c <__epilogue_restores__+0x1e>

000011fc <lcd_goto_xy>:
    11fc:	0e 94 de 08 	call	0x11bc	; 0x11bc <_ZN12OrangutanLCD6gotoXYEhh>
    1200:	08 95       	ret

00001202 <_ZN16OrangutanDigital9setOutputEhh>:
    1202:	88 30       	cpi	r24, 0x08	; 8
    1204:	58 f4       	brcc	.+22     	; 0x121c <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    1206:	91 e0       	ldi	r25, 0x01	; 1
    1208:	01 c0       	rjmp	.+2      	; 0x120c <_ZN16OrangutanDigital9setOutputEhh+0xa>
    120a:	99 0f       	add	r25, r25
    120c:	8a 95       	dec	r24
    120e:	ea f7       	brpl	.-6      	; 0x120a <_ZN16OrangutanDigital9setOutputEhh+0x8>
    1210:	89 2f       	mov	r24, r25
    1212:	aa e2       	ldi	r26, 0x2A	; 42
    1214:	b0 e0       	ldi	r27, 0x00	; 0
    1216:	eb e2       	ldi	r30, 0x2B	; 43
    1218:	f0 e0       	ldi	r31, 0x00	; 0
    121a:	21 c0       	rjmp	.+66     	; 0x125e <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    121c:	8e 30       	cpi	r24, 0x0E	; 14
    121e:	60 f4       	brcc	.+24     	; 0x1238 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    1220:	98 ef       	ldi	r25, 0xF8	; 248
    1222:	98 0f       	add	r25, r24
    1224:	81 e0       	ldi	r24, 0x01	; 1
    1226:	01 c0       	rjmp	.+2      	; 0x122a <_ZN16OrangutanDigital9setOutputEhh+0x28>
    1228:	88 0f       	add	r24, r24
    122a:	9a 95       	dec	r25
    122c:	ea f7       	brpl	.-6      	; 0x1228 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    122e:	a4 e2       	ldi	r26, 0x24	; 36
    1230:	b0 e0       	ldi	r27, 0x00	; 0
    1232:	e5 e2       	ldi	r30, 0x25	; 37
    1234:	f0 e0       	ldi	r31, 0x00	; 0
    1236:	13 c0       	rjmp	.+38     	; 0x125e <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1238:	85 31       	cpi	r24, 0x15	; 21
    123a:	60 f4       	brcc	.+24     	; 0x1254 <_ZN16OrangutanDigital9setOutputEhh+0x52>
    123c:	92 ef       	ldi	r25, 0xF2	; 242
    123e:	98 0f       	add	r25, r24
    1240:	81 e0       	ldi	r24, 0x01	; 1
    1242:	01 c0       	rjmp	.+2      	; 0x1246 <_ZN16OrangutanDigital9setOutputEhh+0x44>
    1244:	88 0f       	add	r24, r24
    1246:	9a 95       	dec	r25
    1248:	ea f7       	brpl	.-6      	; 0x1244 <_ZN16OrangutanDigital9setOutputEhh+0x42>
    124a:	a7 e2       	ldi	r26, 0x27	; 39
    124c:	b0 e0       	ldi	r27, 0x00	; 0
    124e:	e8 e2       	ldi	r30, 0x28	; 40
    1250:	f0 e0       	ldi	r31, 0x00	; 0
    1252:	05 c0       	rjmp	.+10     	; 0x125e <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1254:	80 e0       	ldi	r24, 0x00	; 0
    1256:	a0 e0       	ldi	r26, 0x00	; 0
    1258:	b0 e0       	ldi	r27, 0x00	; 0
    125a:	e0 e0       	ldi	r30, 0x00	; 0
    125c:	f0 e0       	ldi	r31, 0x00	; 0
    125e:	6f 3f       	cpi	r22, 0xFF	; 255
    1260:	19 f4       	brne	.+6      	; 0x1268 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    1262:	90 81       	ld	r25, Z
    1264:	98 27       	eor	r25, r24
    1266:	09 c0       	rjmp	.+18     	; 0x127a <_ZN16OrangutanDigital9setOutputEhh+0x78>
    1268:	66 23       	and	r22, r22
    126a:	19 f0       	breq	.+6      	; 0x1272 <_ZN16OrangutanDigital9setOutputEhh+0x70>
    126c:	90 81       	ld	r25, Z
    126e:	98 2b       	or	r25, r24
    1270:	04 c0       	rjmp	.+8      	; 0x127a <_ZN16OrangutanDigital9setOutputEhh+0x78>
    1272:	20 81       	ld	r18, Z
    1274:	98 2f       	mov	r25, r24
    1276:	90 95       	com	r25
    1278:	92 23       	and	r25, r18
    127a:	90 83       	st	Z, r25
    127c:	9c 91       	ld	r25, X
    127e:	98 2b       	or	r25, r24
    1280:	9c 93       	st	X, r25
    1282:	08 95       	ret

00001284 <_ZN15OrangutanMotors5init2Ev>:
    1284:	83 ef       	ldi	r24, 0xF3	; 243
    1286:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    128a:	84 bd       	out	0x24, r24	; 36
    128c:	82 e0       	ldi	r24, 0x02	; 2
    128e:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1292:	85 bd       	out	0x25, r24	; 37
    1294:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    1298:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    129c:	18 bc       	out	0x28, r1	; 40
    129e:	17 bc       	out	0x27, r1	; 39
    12a0:	60 e0       	ldi	r22, 0x00	; 0
    12a2:	86 e0       	ldi	r24, 0x06	; 6
    12a4:	0e 94 01 09 	call	0x1202	; 0x1202 <_ZN16OrangutanDigital9setOutputEhh>
    12a8:	60 e0       	ldi	r22, 0x00	; 0
    12aa:	85 e0       	ldi	r24, 0x05	; 5
    12ac:	0e 94 01 09 	call	0x1202	; 0x1202 <_ZN16OrangutanDigital9setOutputEhh>
    12b0:	60 e0       	ldi	r22, 0x00	; 0
    12b2:	8b e0       	ldi	r24, 0x0B	; 11
    12b4:	0e 94 01 09 	call	0x1202	; 0x1202 <_ZN16OrangutanDigital9setOutputEhh>
    12b8:	60 e0       	ldi	r22, 0x00	; 0
    12ba:	83 e0       	ldi	r24, 0x03	; 3
    12bc:	0e 94 01 09 	call	0x1202	; 0x1202 <_ZN16OrangutanDigital9setOutputEhh>
    12c0:	08 95       	ret

000012c2 <_ZN15OrangutanMotors4initEv>:
    12c2:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <_ZZN15OrangutanMotors4initEvE11initialized>
    12c6:	81 11       	cpse	r24, r1
    12c8:	05 c0       	rjmp	.+10     	; 0x12d4 <_ZN15OrangutanMotors4initEv+0x12>
    12ca:	81 e0       	ldi	r24, 0x01	; 1
    12cc:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <_ZZN15OrangutanMotors4initEvE11initialized>
    12d0:	0e 94 42 09 	call	0x1284	; 0x1284 <_ZN15OrangutanMotors5init2Ev>
    12d4:	08 95       	ret

000012d6 <_ZN15OrangutanMotors10setM1SpeedEi>:
    12d6:	cf 93       	push	r28
    12d8:	df 93       	push	r29
    12da:	ec 01       	movw	r28, r24
    12dc:	0e 94 61 09 	call	0x12c2	; 0x12c2 <_ZN15OrangutanMotors4initEv>
    12e0:	d7 ff       	sbrs	r29, 7
    12e2:	05 c0       	rjmp	.+10     	; 0x12ee <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    12e4:	d1 95       	neg	r29
    12e6:	c1 95       	neg	r28
    12e8:	d1 09       	sbc	r29, r1
    12ea:	81 e0       	ldi	r24, 0x01	; 1
    12ec:	01 c0       	rjmp	.+2      	; 0x12f0 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    12ee:	80 e0       	ldi	r24, 0x00	; 0
    12f0:	cf 3f       	cpi	r28, 0xFF	; 255
    12f2:	d1 05       	cpc	r29, r1
    12f4:	19 f0       	breq	.+6      	; 0x12fc <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    12f6:	14 f0       	brlt	.+4      	; 0x12fc <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    12f8:	cf ef       	ldi	r28, 0xFF	; 255
    12fa:	d0 e0       	ldi	r29, 0x00	; 0
    12fc:	88 23       	and	r24, r24
    12fe:	19 f0       	breq	.+6      	; 0x1306 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    1300:	18 bc       	out	0x28, r1	; 40
    1302:	c7 bd       	out	0x27, r28	; 39
    1304:	02 c0       	rjmp	.+4      	; 0x130a <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    1306:	c8 bd       	out	0x28, r28	; 40
    1308:	17 bc       	out	0x27, r1	; 39
    130a:	df 91       	pop	r29
    130c:	cf 91       	pop	r28
    130e:	08 95       	ret

00001310 <_ZN15OrangutanMotors10setM2SpeedEi>:
    1310:	cf 93       	push	r28
    1312:	df 93       	push	r29
    1314:	ec 01       	movw	r28, r24
    1316:	0e 94 61 09 	call	0x12c2	; 0x12c2 <_ZN15OrangutanMotors4initEv>
    131a:	d7 ff       	sbrs	r29, 7
    131c:	05 c0       	rjmp	.+10     	; 0x1328 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    131e:	d1 95       	neg	r29
    1320:	c1 95       	neg	r28
    1322:	d1 09       	sbc	r29, r1
    1324:	81 e0       	ldi	r24, 0x01	; 1
    1326:	01 c0       	rjmp	.+2      	; 0x132a <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    1328:	80 e0       	ldi	r24, 0x00	; 0
    132a:	cf 3f       	cpi	r28, 0xFF	; 255
    132c:	d1 05       	cpc	r29, r1
    132e:	19 f0       	breq	.+6      	; 0x1336 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1330:	14 f0       	brlt	.+4      	; 0x1336 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1332:	cf ef       	ldi	r28, 0xFF	; 255
    1334:	d0 e0       	ldi	r29, 0x00	; 0
    1336:	88 23       	and	r24, r24
    1338:	29 f0       	breq	.+10     	; 0x1344 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    133a:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    133e:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    1342:	04 c0       	rjmp	.+8      	; 0x134c <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    1344:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    1348:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    134c:	df 91       	pop	r29
    134e:	cf 91       	pop	r28
    1350:	08 95       	ret

00001352 <_ZN15OrangutanMotors9setSpeedsEii>:
    1352:	cf 93       	push	r28
    1354:	df 93       	push	r29
    1356:	eb 01       	movw	r28, r22
    1358:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <_ZN15OrangutanMotors10setM1SpeedEi>
    135c:	ce 01       	movw	r24, r28
    135e:	0e 94 88 09 	call	0x1310	; 0x1310 <_ZN15OrangutanMotors10setM2SpeedEi>
    1362:	df 91       	pop	r29
    1364:	cf 91       	pop	r28
    1366:	08 95       	ret

00001368 <set_motors>:
    1368:	0e 94 a9 09 	call	0x1352	; 0x1352 <_ZN15OrangutanMotors9setSpeedsEii>
    136c:	08 95       	ret

0000136e <_ZN20OrangutanPushbuttons5init2Ev>:
    136e:	84 b1       	in	r24, 0x04	; 4
    1370:	8d 7c       	andi	r24, 0xCD	; 205
    1372:	84 b9       	out	0x04, r24	; 4
    1374:	85 b1       	in	r24, 0x05	; 5
    1376:	82 63       	ori	r24, 0x32	; 50
    1378:	85 b9       	out	0x05, r24	; 5
    137a:	85 e0       	ldi	r24, 0x05	; 5
    137c:	90 e0       	ldi	r25, 0x00	; 0
    137e:	6f 93       	push	r22
    1380:	64 e0       	ldi	r22, 0x04	; 4
    1382:	6a 95       	dec	r22
    1384:	f1 f7       	brne	.-4      	; 0x1382 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    1386:	6f 91       	pop	r22
    1388:	01 97       	sbiw	r24, 0x01	; 1
    138a:	c9 f7       	brne	.-14     	; 0x137e <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    138c:	08 95       	ret

0000138e <_ZN20OrangutanPushbuttons4initEv>:
    138e:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    1392:	81 11       	cpse	r24, r1
    1394:	05 c0       	rjmp	.+10     	; 0x13a0 <_ZN20OrangutanPushbuttons4initEv+0x12>
    1396:	81 e0       	ldi	r24, 0x01	; 1
    1398:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    139c:	0e 94 b7 09 	call	0x136e	; 0x136e <_ZN20OrangutanPushbuttons5init2Ev>
    13a0:	08 95       	ret

000013a2 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    13a2:	cf 93       	push	r28
    13a4:	c8 2f       	mov	r28, r24
    13a6:	0e 94 c7 09 	call	0x138e	; 0x138e <_ZN20OrangutanPushbuttons4initEv>
    13aa:	83 b1       	in	r24, 0x03	; 3
    13ac:	8c 23       	and	r24, r28
    13ae:	e9 f3       	breq	.-6      	; 0x13aa <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    13b0:	8a e0       	ldi	r24, 0x0A	; 10
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	0e 94 42 0a 	call	0x1484	; 0x1484 <delay_ms>
    13b8:	83 b1       	in	r24, 0x03	; 3
    13ba:	8c 23       	and	r24, r28
    13bc:	b1 f3       	breq	.-20     	; 0x13aa <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    13be:	83 b1       	in	r24, 0x03	; 3
    13c0:	8c 23       	and	r24, r28
    13c2:	cf 91       	pop	r28
    13c4:	08 95       	ret

000013c6 <wait_for_button_release>:
    13c6:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    13ca:	08 95       	ret

000013cc <_ZN20OrangutanPushbuttons9isPressedEh>:
    13cc:	a1 e0       	ldi	r26, 0x01	; 1
    13ce:	b0 e0       	ldi	r27, 0x00	; 0
    13d0:	ec ee       	ldi	r30, 0xEC	; 236
    13d2:	f9 e0       	ldi	r31, 0x09	; 9
    13d4:	0c 94 6b 10 	jmp	0x20d6	; 0x20d6 <__prologue_saves__+0x20>
    13d8:	89 83       	std	Y+1, r24	; 0x01
    13da:	0e 94 c7 09 	call	0x138e	; 0x138e <_ZN20OrangutanPushbuttons4initEv>
    13de:	93 b1       	in	r25, 0x03	; 3
    13e0:	90 95       	com	r25
    13e2:	89 81       	ldd	r24, Y+1	; 0x01
    13e4:	89 23       	and	r24, r25
    13e6:	21 96       	adiw	r28, 0x01	; 1
    13e8:	e2 e0       	ldi	r30, 0x02	; 2
    13ea:	0c 94 87 10 	jmp	0x210e	; 0x210e <__epilogue_restores__+0x20>

000013ee <button_is_pressed>:
    13ee:	0e 94 e6 09 	call	0x13cc	; 0x13cc <_ZN20OrangutanPushbuttons9isPressedEh>
    13f2:	08 95       	ret

000013f4 <__vector_9>:
    13f4:	2f 92       	push	r2
    13f6:	8f 93       	push	r24
    13f8:	9f 93       	push	r25
    13fa:	2f b6       	in	r2, 0x3f	; 63
    13fc:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <tickCount+0x1>
    1400:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <tickCount+0x2>
    1404:	01 96       	adiw	r24, 0x01	; 1
    1406:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <tickCount+0x1>
    140a:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <tickCount+0x2>
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <tickCount+0x3>
    1414:	89 1f       	adc	r24, r25
    1416:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <tickCount+0x3>
    141a:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <us_over_10+0x1>
    141e:	9c 5f       	subi	r25, 0xFC	; 252
    1420:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <us_over_10+0x1>
    1424:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <us_over_10>
    1428:	80 51       	subi	r24, 0x10	; 16
    142a:	97 42       	sbci	r25, 0x27	; 39
    142c:	c0 f0       	brcs	.+48     	; 0x145e <end>
    142e:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <us_over_10+0x1>
    1432:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <us_over_10>
    1436:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <msCounter>
    143a:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <msCounter+0x1>
    143e:	01 96       	adiw	r24, 0x01	; 1
    1440:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <msCounter>
    1444:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <msCounter+0x1>
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <msCounter+0x2>
    144e:	89 1f       	adc	r24, r25
    1450:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <msCounter+0x2>
    1454:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <msCounter+0x3>
    1458:	89 1f       	adc	r24, r25
    145a:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <msCounter+0x3>

0000145e <end>:
    145e:	2f be       	out	0x3f, r2	; 63
    1460:	9f 91       	pop	r25
    1462:	8f 91       	pop	r24
    1464:	2f 90       	pop	r2
    1466:	18 95       	reti

00001468 <_ZN13OrangutanTime17delayMillisecondsEj>:
    1468:	28 ee       	ldi	r18, 0xE8	; 232
    146a:	33 e0       	ldi	r19, 0x03	; 3
    146c:	01 97       	sbiw	r24, 0x01	; 1
    146e:	48 f0       	brcs	.+18     	; 0x1482 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    1470:	f9 01       	movw	r30, r18
    1472:	6f 93       	push	r22
    1474:	64 e0       	ldi	r22, 0x04	; 4
    1476:	6a 95       	dec	r22
    1478:	f1 f7       	brne	.-4      	; 0x1476 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    147a:	6f 91       	pop	r22
    147c:	31 97       	sbiw	r30, 0x01	; 1
    147e:	c9 f7       	brne	.-14     	; 0x1472 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    1480:	f5 cf       	rjmp	.-22     	; 0x146c <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    1482:	08 95       	ret

00001484 <delay_ms>:
    1484:	0e 94 34 0a 	call	0x1468	; 0x1468 <_ZN13OrangutanTime17delayMillisecondsEj>
    1488:	08 95       	ret

0000148a <_ZN13OrangutanTime5init2Ev>:
    148a:	e0 e7       	ldi	r30, 0x70	; 112
    148c:	f0 e0       	ldi	r31, 0x00	; 0
    148e:	80 81       	ld	r24, Z
    1490:	8e 7f       	andi	r24, 0xFE	; 254
    1492:	80 83       	st	Z, r24
    1494:	a0 eb       	ldi	r26, 0xB0	; 176
    1496:	b0 e0       	ldi	r27, 0x00	; 0
    1498:	8c 91       	ld	r24, X
    149a:	83 60       	ori	r24, 0x03	; 3
    149c:	8c 93       	st	X, r24
    149e:	a1 eb       	ldi	r26, 0xB1	; 177
    14a0:	b0 e0       	ldi	r27, 0x00	; 0
    14a2:	8c 91       	ld	r24, X
    14a4:	80 7f       	andi	r24, 0xF0	; 240
    14a6:	8c 93       	st	X, r24
    14a8:	8c 91       	ld	r24, X
    14aa:	82 60       	ori	r24, 0x02	; 2
    14ac:	8c 93       	st	X, r24
    14ae:	b8 9a       	sbi	0x17, 0	; 23
    14b0:	80 81       	ld	r24, Z
    14b2:	81 60       	ori	r24, 0x01	; 1
    14b4:	80 83       	st	Z, r24
    14b6:	78 94       	sei
    14b8:	08 95       	ret

000014ba <_ZN13OrangutanTime4initEv>:
    14ba:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <_ZZN13OrangutanTime4initEvE11initialized>
    14be:	81 11       	cpse	r24, r1
    14c0:	05 c0       	rjmp	.+10     	; 0x14cc <_ZN13OrangutanTime4initEv+0x12>
    14c2:	81 e0       	ldi	r24, 0x01	; 1
    14c4:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <_ZZN13OrangutanTime4initEvE11initialized>
    14c8:	0e 94 45 0a 	call	0x148a	; 0x148a <_ZN13OrangutanTime5init2Ev>
    14cc:	08 95       	ret

000014ce <_ZN13OrangutanTime5resetEv>:
    14ce:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <_ZN13OrangutanTime4initEv>
    14d2:	e0 e7       	ldi	r30, 0x70	; 112
    14d4:	f0 e0       	ldi	r31, 0x00	; 0
    14d6:	80 81       	ld	r24, Z
    14d8:	8e 7f       	andi	r24, 0xFE	; 254
    14da:	80 83       	st	Z, r24
    14dc:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <msCounter>
    14e0:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <msCounter+0x1>
    14e4:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <msCounter+0x2>
    14e8:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <msCounter+0x3>
    14ec:	10 92 43 01 	sts	0x0143, r1	; 0x800143 <us_over_10+0x1>
    14f0:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <us_over_10>
    14f4:	80 81       	ld	r24, Z
    14f6:	81 60       	ori	r24, 0x01	; 1
    14f8:	80 83       	st	Z, r24
    14fa:	08 95       	ret

000014fc <calibrate_line_sensors>:
    14fc:	68 2f       	mov	r22, r24
    14fe:	8c e4       	ldi	r24, 0x4C	; 76
    1500:	91 e0       	ldi	r25, 0x01	; 1
    1502:	0e 94 66 0e 	call	0x1ccc	; 0x1ccc <_ZN16PololuQTRSensors9calibrateEh>
    1506:	08 95       	ret

00001508 <read_line>:
    1508:	46 2f       	mov	r20, r22
    150a:	20 e0       	ldi	r18, 0x00	; 0
    150c:	bc 01       	movw	r22, r24
    150e:	8c e4       	ldi	r24, 0x4C	; 76
    1510:	91 e0       	ldi	r25, 0x01	; 1
    1512:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <_ZN16PololuQTRSensors8readLineEPjhh>
    1516:	08 95       	ret

00001518 <_ZN9Pololu3pi4initEjh>:
    1518:	0f 93       	push	r16
    151a:	cf 93       	push	r28
    151c:	df 93       	push	r29
    151e:	00 d0       	rcall	.+0      	; 0x1520 <_ZN9Pololu3pi4initEjh+0x8>
    1520:	00 d0       	rcall	.+0      	; 0x1522 <_ZN9Pololu3pi4initEjh+0xa>
    1522:	1f 92       	push	r1
    1524:	cd b7       	in	r28, 0x3d	; 61
    1526:	de b7       	in	r29, 0x3e	; 62
    1528:	9c 01       	movw	r18, r24
    152a:	85 e0       	ldi	r24, 0x05	; 5
    152c:	ee e1       	ldi	r30, 0x1E	; 30
    152e:	f1 e0       	ldi	r31, 0x01	; 1
    1530:	de 01       	movw	r26, r28
    1532:	11 96       	adiw	r26, 0x01	; 1
    1534:	01 90       	ld	r0, Z+
    1536:	0d 92       	st	X+, r0
    1538:	8a 95       	dec	r24
    153a:	e1 f7       	brne	.-8      	; 0x1534 <_ZN9Pololu3pi4initEjh+0x1c>
    153c:	66 23       	and	r22, r22
    153e:	11 f0       	breq	.+4      	; 0x1544 <_ZN9Pololu3pi4initEjh+0x2c>
    1540:	0f ef       	ldi	r16, 0xFF	; 255
    1542:	01 c0       	rjmp	.+2      	; 0x1546 <_ZN9Pololu3pi4initEjh+0x2e>
    1544:	03 e1       	ldi	r16, 0x13	; 19
    1546:	45 e0       	ldi	r20, 0x05	; 5
    1548:	be 01       	movw	r22, r28
    154a:	6f 5f       	subi	r22, 0xFF	; 255
    154c:	7f 4f       	sbci	r23, 0xFF	; 255
    154e:	8c e4       	ldi	r24, 0x4C	; 76
    1550:	91 e0       	ldi	r25, 0x01	; 1
    1552:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <_ZN18PololuQTRSensorsRC4initEPhhjh>
    1556:	8c e4       	ldi	r24, 0x4C	; 76
    1558:	91 e0       	ldi	r25, 0x01	; 1
    155a:	0e 94 35 0b 	call	0x166a	; 0x166a <_ZN16PololuQTRSensors11emittersOffEv>
    155e:	0e 94 67 0a 	call	0x14ce	; 0x14ce <_ZN13OrangutanTime5resetEv>
    1562:	0f 90       	pop	r0
    1564:	0f 90       	pop	r0
    1566:	0f 90       	pop	r0
    1568:	0f 90       	pop	r0
    156a:	0f 90       	pop	r0
    156c:	df 91       	pop	r29
    156e:	cf 91       	pop	r28
    1570:	0f 91       	pop	r16
    1572:	08 95       	ret

00001574 <pololu_3pi_init>:
    1574:	60 e0       	ldi	r22, 0x00	; 0
    1576:	0e 94 8c 0a 	call	0x1518	; 0x1518 <_ZN9Pololu3pi4initEjh>
    157a:	08 95       	ret

0000157c <_GLOBAL__sub_D_pololu_3pi_init>:
    157c:	8c e4       	ldi	r24, 0x4C	; 76
    157e:	91 e0       	ldi	r25, 0x01	; 1
    1580:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <_ZN16PololuQTRSensorsD1Ev>
    1584:	08 95       	ret

00001586 <delay_us>:
    1586:	6f 93       	push	r22
    1588:	64 e0       	ldi	r22, 0x04	; 4
    158a:	6a 95       	dec	r22
    158c:	f1 f7       	brne	.-4      	; 0x158a <delay_us+0x4>
    158e:	6f 91       	pop	r22
    1590:	01 97       	sbiw	r24, 0x01	; 1
    1592:	c9 f7       	brne	.-14     	; 0x1586 <delay_us>
    1594:	08 95       	ret

00001596 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    1596:	fc 01       	movw	r30, r24
    1598:	11 82       	std	Z+1, r1	; 0x01
    159a:	10 82       	st	Z, r1
    159c:	13 82       	std	Z+3, r1	; 0x03
    159e:	12 82       	std	Z+2, r1	; 0x02
    15a0:	15 82       	std	Z+5, r1	; 0x05
    15a2:	14 82       	std	Z+4, r1	; 0x04
    15a4:	16 82       	std	Z+6, r1	; 0x06
    15a6:	68 30       	cpi	r22, 0x08	; 8
    15a8:	68 f4       	brcc	.+26     	; 0x15c4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    15aa:	89 e2       	ldi	r24, 0x29	; 41
    15ac:	90 e0       	ldi	r25, 0x00	; 0
    15ae:	91 83       	std	Z+1, r25	; 0x01
    15b0:	80 83       	st	Z, r24
    15b2:	8b e2       	ldi	r24, 0x2B	; 43
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	93 83       	std	Z+3, r25	; 0x03
    15b8:	82 83       	std	Z+2, r24	; 0x02
    15ba:	8a e2       	ldi	r24, 0x2A	; 42
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	95 83       	std	Z+5, r25	; 0x05
    15c0:	84 83       	std	Z+4, r24	; 0x04
    15c2:	1f c0       	rjmp	.+62     	; 0x1602 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    15c4:	6e 30       	cpi	r22, 0x0E	; 14
    15c6:	70 f4       	brcc	.+28     	; 0x15e4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    15c8:	83 e2       	ldi	r24, 0x23	; 35
    15ca:	90 e0       	ldi	r25, 0x00	; 0
    15cc:	91 83       	std	Z+1, r25	; 0x01
    15ce:	80 83       	st	Z, r24
    15d0:	85 e2       	ldi	r24, 0x25	; 37
    15d2:	90 e0       	ldi	r25, 0x00	; 0
    15d4:	93 83       	std	Z+3, r25	; 0x03
    15d6:	82 83       	std	Z+2, r24	; 0x02
    15d8:	84 e2       	ldi	r24, 0x24	; 36
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	95 83       	std	Z+5, r25	; 0x05
    15de:	84 83       	std	Z+4, r24	; 0x04
    15e0:	68 50       	subi	r22, 0x08	; 8
    15e2:	0f c0       	rjmp	.+30     	; 0x1602 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    15e4:	65 31       	cpi	r22, 0x15	; 21
    15e6:	98 f4       	brcc	.+38     	; 0x160e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    15e8:	86 e2       	ldi	r24, 0x26	; 38
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	91 83       	std	Z+1, r25	; 0x01
    15ee:	80 83       	st	Z, r24
    15f0:	88 e2       	ldi	r24, 0x28	; 40
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	93 83       	std	Z+3, r25	; 0x03
    15f6:	82 83       	std	Z+2, r24	; 0x02
    15f8:	87 e2       	ldi	r24, 0x27	; 39
    15fa:	90 e0       	ldi	r25, 0x00	; 0
    15fc:	95 83       	std	Z+5, r25	; 0x05
    15fe:	84 83       	std	Z+4, r24	; 0x04
    1600:	6e 50       	subi	r22, 0x0E	; 14
    1602:	81 e0       	ldi	r24, 0x01	; 1
    1604:	01 c0       	rjmp	.+2      	; 0x1608 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    1606:	88 0f       	add	r24, r24
    1608:	6a 95       	dec	r22
    160a:	ea f7       	brpl	.-6      	; 0x1606 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    160c:	86 83       	std	Z+6, r24	; 0x06
    160e:	08 95       	ret

00001610 <_ZN16PololuQTRSensors4initEhhh>:
    1610:	a7 e0       	ldi	r26, 0x07	; 7
    1612:	b0 e0       	ldi	r27, 0x00	; 0
    1614:	ee e0       	ldi	r30, 0x0E	; 14
    1616:	fb e0       	ldi	r31, 0x0B	; 11
    1618:	0c 94 69 10 	jmp	0x20d2	; 0x20d2 <__prologue_saves__+0x1c>
    161c:	8c 01       	movw	r16, r24
    161e:	fc 01       	movw	r30, r24
    1620:	11 82       	std	Z+1, r1	; 0x01
    1622:	10 82       	st	Z, r1
    1624:	13 82       	std	Z+3, r1	; 0x03
    1626:	12 82       	std	Z+2, r1	; 0x02
    1628:	15 82       	std	Z+5, r1	; 0x05
    162a:	14 82       	std	Z+4, r1	; 0x04
    162c:	17 82       	std	Z+7, r1	; 0x07
    162e:	16 82       	std	Z+6, r1	; 0x06
    1630:	61 31       	cpi	r22, 0x11	; 17
    1632:	18 f0       	brcs	.+6      	; 0x163a <_ZN16PololuQTRSensors4initEhhh+0x2a>
    1634:	80 e1       	ldi	r24, 0x10	; 16
    1636:	80 87       	std	Z+8, r24	; 0x08
    1638:	02 c0       	rjmp	.+4      	; 0x163e <_ZN16PololuQTRSensors4initEhhh+0x2e>
    163a:	fc 01       	movw	r30, r24
    163c:	60 87       	std	Z+8, r22	; 0x08
    163e:	f8 01       	movw	r30, r16
    1640:	20 8b       	std	Z+16, r18	; 0x10
    1642:	64 2f       	mov	r22, r20
    1644:	ce 01       	movw	r24, r28
    1646:	01 96       	adiw	r24, 0x01	; 1
    1648:	0e 94 cb 0a 	call	0x1596	; 0x1596 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    164c:	8f 81       	ldd	r24, Y+7	; 0x07
    164e:	f8 01       	movw	r30, r16
    1650:	81 87       	std	Z+9, r24	; 0x09
    1652:	8b 81       	ldd	r24, Y+3	; 0x03
    1654:	9c 81       	ldd	r25, Y+4	; 0x04
    1656:	93 87       	std	Z+11, r25	; 0x0b
    1658:	82 87       	std	Z+10, r24	; 0x0a
    165a:	8d 81       	ldd	r24, Y+5	; 0x05
    165c:	9e 81       	ldd	r25, Y+6	; 0x06
    165e:	95 87       	std	Z+13, r25	; 0x0d
    1660:	84 87       	std	Z+12, r24	; 0x0c
    1662:	27 96       	adiw	r28, 0x07	; 7
    1664:	e4 e0       	ldi	r30, 0x04	; 4
    1666:	0c 94 85 10 	jmp	0x210a	; 0x210a <__epilogue_restores__+0x1c>

0000166a <_ZN16PololuQTRSensors11emittersOffEv>:
    166a:	fc 01       	movw	r30, r24
    166c:	a4 85       	ldd	r26, Z+12	; 0x0c
    166e:	b5 85       	ldd	r27, Z+13	; 0x0d
    1670:	10 97       	sbiw	r26, 0x00	; 0
    1672:	79 f0       	breq	.+30     	; 0x1692 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    1674:	8c 91       	ld	r24, X
    1676:	91 85       	ldd	r25, Z+9	; 0x09
    1678:	89 2b       	or	r24, r25
    167a:	8c 93       	st	X, r24
    167c:	a2 85       	ldd	r26, Z+10	; 0x0a
    167e:	b3 85       	ldd	r27, Z+11	; 0x0b
    1680:	9c 91       	ld	r25, X
    1682:	81 85       	ldd	r24, Z+9	; 0x09
    1684:	80 95       	com	r24
    1686:	89 23       	and	r24, r25
    1688:	8c 93       	st	X, r24
    168a:	88 ec       	ldi	r24, 0xC8	; 200
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	0e 94 c3 0a 	call	0x1586	; 0x1586 <delay_us>
    1692:	08 95       	ret

00001694 <_ZN16PololuQTRSensors10emittersOnEv>:
    1694:	fc 01       	movw	r30, r24
    1696:	a4 85       	ldd	r26, Z+12	; 0x0c
    1698:	b5 85       	ldd	r27, Z+13	; 0x0d
    169a:	10 97       	sbiw	r26, 0x00	; 0
    169c:	71 f0       	breq	.+28     	; 0x16ba <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    169e:	8c 91       	ld	r24, X
    16a0:	91 85       	ldd	r25, Z+9	; 0x09
    16a2:	89 2b       	or	r24, r25
    16a4:	8c 93       	st	X, r24
    16a6:	a2 85       	ldd	r26, Z+10	; 0x0a
    16a8:	b3 85       	ldd	r27, Z+11	; 0x0b
    16aa:	8c 91       	ld	r24, X
    16ac:	91 85       	ldd	r25, Z+9	; 0x09
    16ae:	89 2b       	or	r24, r25
    16b0:	8c 93       	st	X, r24
    16b2:	88 ec       	ldi	r24, 0xC8	; 200
    16b4:	90 e0       	ldi	r25, 0x00	; 0
    16b6:	0e 94 c3 0a 	call	0x1586	; 0x1586 <delay_us>
    16ba:	08 95       	ret

000016bc <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    16bc:	a7 e0       	ldi	r26, 0x07	; 7
    16be:	b0 e0       	ldi	r27, 0x00	; 0
    16c0:	e4 e6       	ldi	r30, 0x64	; 100
    16c2:	fb e0       	ldi	r31, 0x0B	; 11
    16c4:	0c 94 5e 10 	jmp	0x20bc	; 0x20bc <__prologue_saves__+0x6>
    16c8:	7c 01       	movw	r14, r24
    16ca:	4b 01       	movw	r8, r22
    16cc:	64 2f       	mov	r22, r20
    16ce:	39 01       	movw	r6, r18
    16d0:	40 2f       	mov	r20, r16
    16d2:	20 e0       	ldi	r18, 0x00	; 0
    16d4:	0e 94 08 0b 	call	0x1610	; 0x1610 <_ZN16PololuQTRSensors4initEhhh>
    16d8:	87 01       	movw	r16, r14
    16da:	0f 5b       	subi	r16, 0xBF	; 191
    16dc:	1f 4f       	sbci	r17, 0xFF	; 255
    16de:	f8 01       	movw	r30, r16
    16e0:	10 82       	st	Z, r1
    16e2:	67 01       	movw	r12, r14
    16e4:	f2 e4       	ldi	r31, 0x42	; 66
    16e6:	cf 0e       	add	r12, r31
    16e8:	d1 1c       	adc	r13, r1
    16ea:	f6 01       	movw	r30, r12
    16ec:	10 82       	st	Z, r1
    16ee:	57 01       	movw	r10, r14
    16f0:	f3 e4       	ldi	r31, 0x43	; 67
    16f2:	af 0e       	add	r10, r31
    16f4:	b1 1c       	adc	r11, r1
    16f6:	f5 01       	movw	r30, r10
    16f8:	10 82       	st	Z, r1
    16fa:	f7 01       	movw	r30, r14
    16fc:	77 86       	std	Z+15, r7	; 0x0f
    16fe:	66 86       	std	Z+14, r6	; 0x0e
    1700:	51 2c       	mov	r5, r1
    1702:	f7 01       	movw	r30, r14
    1704:	80 85       	ldd	r24, Z+8	; 0x08
    1706:	58 16       	cp	r5, r24
    1708:	50 f5       	brcc	.+84     	; 0x175e <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    170a:	65 2c       	mov	r6, r5
    170c:	71 2c       	mov	r7, r1
    170e:	f4 01       	movw	r30, r8
    1710:	e6 0d       	add	r30, r6
    1712:	f7 1d       	adc	r31, r7
    1714:	60 81       	ld	r22, Z
    1716:	ce 01       	movw	r24, r28
    1718:	01 96       	adiw	r24, 0x01	; 1
    171a:	0e 94 cb 0a 	call	0x1596	; 0x1596 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    171e:	2f 81       	ldd	r18, Y+7	; 0x07
    1720:	f7 01       	movw	r30, r14
    1722:	e6 0d       	add	r30, r6
    1724:	f7 1d       	adc	r31, r7
    1726:	21 8b       	std	Z+17, r18	; 0x11
    1728:	89 81       	ldd	r24, Y+1	; 0x01
    172a:	9a 81       	ldd	r25, Y+2	; 0x02
    172c:	f3 01       	movw	r30, r6
    172e:	ee 0f       	add	r30, r30
    1730:	ff 1f       	adc	r31, r31
    1732:	ee 0d       	add	r30, r14
    1734:	ff 1d       	adc	r31, r15
    1736:	92 a3       	std	Z+34, r25	; 0x22
    1738:	81 a3       	std	Z+33, r24	; 0x21
    173a:	83 32       	cpi	r24, 0x23	; 35
    173c:	91 05       	cpc	r25, r1
    173e:	11 f4       	brne	.+4      	; 0x1744 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    1740:	f8 01       	movw	r30, r16
    1742:	08 c0       	rjmp	.+16     	; 0x1754 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    1744:	86 32       	cpi	r24, 0x26	; 38
    1746:	91 05       	cpc	r25, r1
    1748:	11 f4       	brne	.+4      	; 0x174e <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    174a:	f6 01       	movw	r30, r12
    174c:	03 c0       	rjmp	.+6      	; 0x1754 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    174e:	89 97       	sbiw	r24, 0x29	; 41
    1750:	21 f4       	brne	.+8      	; 0x175a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    1752:	f5 01       	movw	r30, r10
    1754:	80 81       	ld	r24, Z
    1756:	82 2b       	or	r24, r18
    1758:	80 83       	st	Z, r24
    175a:	53 94       	inc	r5
    175c:	d2 cf       	rjmp	.-92     	; 0x1702 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    175e:	27 96       	adiw	r28, 0x07	; 7
    1760:	ef e0       	ldi	r30, 0x0F	; 15
    1762:	0c 94 7a 10 	jmp	0x20f4	; 0x20f4 <__epilogue_restores__+0x6>

00001766 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1766:	a0 e0       	ldi	r26, 0x00	; 0
    1768:	b0 e0       	ldi	r27, 0x00	; 0
    176a:	e9 eb       	ldi	r30, 0xB9	; 185
    176c:	fb e0       	ldi	r31, 0x0B	; 11
    176e:	0c 94 60 10 	jmp	0x20c0	; 0x20c0 <__prologue_saves__+0xa>
    1772:	ec 01       	movw	r28, r24
    1774:	5b 01       	movw	r10, r22
    1776:	6c 01       	movw	r12, r24
    1778:	81 e4       	ldi	r24, 0x41	; 65
    177a:	c8 0e       	add	r12, r24
    177c:	d1 1c       	adc	r13, r1
    177e:	f6 01       	movw	r30, r12
    1780:	80 80       	ld	r8, Z
    1782:	7e 01       	movw	r14, r28
    1784:	f2 e4       	ldi	r31, 0x42	; 66
    1786:	ef 0e       	add	r14, r31
    1788:	f1 1c       	adc	r15, r1
    178a:	f7 01       	movw	r30, r14
    178c:	70 80       	ld	r7, Z
    178e:	8e 01       	movw	r16, r28
    1790:	0d 5b       	subi	r16, 0xBD	; 189
    1792:	1f 4f       	sbci	r17, 0xFF	; 255
    1794:	f8 01       	movw	r30, r16
    1796:	90 80       	ld	r9, Z
    1798:	80 e0       	ldi	r24, 0x00	; 0
    179a:	98 85       	ldd	r25, Y+8	; 0x08
    179c:	89 17       	cp	r24, r25
    179e:	48 f4       	brcc	.+18     	; 0x17b2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    17a0:	f5 01       	movw	r30, r10
    17a2:	e8 0f       	add	r30, r24
    17a4:	f1 1d       	adc	r31, r1
    17a6:	e8 0f       	add	r30, r24
    17a8:	f1 1d       	adc	r31, r1
    17aa:	11 82       	std	Z+1, r1	; 0x01
    17ac:	10 82       	st	Z, r1
    17ae:	8f 5f       	subi	r24, 0xFF	; 255
    17b0:	f4 cf       	rjmp	.-24     	; 0x179a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    17b2:	84 b1       	in	r24, 0x04	; 4
    17b4:	f6 01       	movw	r30, r12
    17b6:	90 81       	ld	r25, Z
    17b8:	89 2b       	or	r24, r25
    17ba:	84 b9       	out	0x04, r24	; 4
    17bc:	87 b1       	in	r24, 0x07	; 7
    17be:	f7 01       	movw	r30, r14
    17c0:	90 81       	ld	r25, Z
    17c2:	89 2b       	or	r24, r25
    17c4:	87 b9       	out	0x07, r24	; 7
    17c6:	8a b1       	in	r24, 0x0a	; 10
    17c8:	f8 01       	movw	r30, r16
    17ca:	90 81       	ld	r25, Z
    17cc:	89 2b       	or	r24, r25
    17ce:	8a b9       	out	0x0a, r24	; 10
    17d0:	85 b1       	in	r24, 0x05	; 5
    17d2:	f6 01       	movw	r30, r12
    17d4:	90 81       	ld	r25, Z
    17d6:	89 2b       	or	r24, r25
    17d8:	85 b9       	out	0x05, r24	; 5
    17da:	88 b1       	in	r24, 0x08	; 8
    17dc:	f7 01       	movw	r30, r14
    17de:	90 81       	ld	r25, Z
    17e0:	89 2b       	or	r24, r25
    17e2:	88 b9       	out	0x08, r24	; 8
    17e4:	8b b1       	in	r24, 0x0b	; 11
    17e6:	f8 01       	movw	r30, r16
    17e8:	90 81       	ld	r25, Z
    17ea:	89 2b       	or	r24, r25
    17ec:	8b b9       	out	0x0b, r24	; 11
    17ee:	8a e0       	ldi	r24, 0x0A	; 10
    17f0:	90 e0       	ldi	r25, 0x00	; 0
    17f2:	0e 94 c3 0a 	call	0x1586	; 0x1586 <delay_us>
    17f6:	94 b1       	in	r25, 0x04	; 4
    17f8:	f6 01       	movw	r30, r12
    17fa:	80 81       	ld	r24, Z
    17fc:	80 95       	com	r24
    17fe:	89 23       	and	r24, r25
    1800:	84 b9       	out	0x04, r24	; 4
    1802:	97 b1       	in	r25, 0x07	; 7
    1804:	f7 01       	movw	r30, r14
    1806:	80 81       	ld	r24, Z
    1808:	80 95       	com	r24
    180a:	89 23       	and	r24, r25
    180c:	87 b9       	out	0x07, r24	; 7
    180e:	9a b1       	in	r25, 0x0a	; 10
    1810:	f8 01       	movw	r30, r16
    1812:	80 81       	ld	r24, Z
    1814:	80 95       	com	r24
    1816:	89 23       	and	r24, r25
    1818:	8a b9       	out	0x0a, r24	; 10
    181a:	95 b1       	in	r25, 0x05	; 5
    181c:	f6 01       	movw	r30, r12
    181e:	80 81       	ld	r24, Z
    1820:	80 95       	com	r24
    1822:	89 23       	and	r24, r25
    1824:	85 b9       	out	0x05, r24	; 5
    1826:	98 b1       	in	r25, 0x08	; 8
    1828:	f7 01       	movw	r30, r14
    182a:	80 81       	ld	r24, Z
    182c:	80 95       	com	r24
    182e:	89 23       	and	r24, r25
    1830:	88 b9       	out	0x08, r24	; 8
    1832:	9b b1       	in	r25, 0x0b	; 11
    1834:	f8 01       	movw	r30, r16
    1836:	80 81       	ld	r24, Z
    1838:	80 95       	com	r24
    183a:	89 23       	and	r24, r25
    183c:	8b b9       	out	0x0b, r24	; 11
    183e:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1842:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1846:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    184a:	83 60       	ori	r24, 0x03	; 3
    184c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1850:	82 e0       	ldi	r24, 0x02	; 2
    1852:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1856:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    185a:	80 e0       	ldi	r24, 0x00	; 0
    185c:	90 e0       	ldi	r25, 0x00	; 0
    185e:	2e 85       	ldd	r18, Y+14	; 0x0e
    1860:	3f 85       	ldd	r19, Y+15	; 0x0f
    1862:	82 17       	cp	r24, r18
    1864:	93 07       	cpc	r25, r19
    1866:	20 f5       	brcc	.+72     	; 0x18b0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    1868:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    186c:	2c 2d       	mov	r18, r12
    186e:	24 1b       	sub	r18, r20
    1870:	82 0f       	add	r24, r18
    1872:	91 1d       	adc	r25, r1
    1874:	03 b1       	in	r16, 0x03	; 3
    1876:	08 11       	cpse	r16, r8
    1878:	32 c0       	rjmp	.+100    	; 0x18de <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    187a:	f6 b0       	in	r15, 0x06	; 6
    187c:	f7 10       	cpse	r15, r7
    187e:	2f c0       	rjmp	.+94     	; 0x18de <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1880:	29 b1       	in	r18, 0x09	; 9
    1882:	29 11       	cpse	r18, r9
    1884:	2c c0       	rjmp	.+88     	; 0x18de <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1886:	10 c0       	rjmp	.+32     	; 0x18a8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    1888:	21 2f       	mov	r18, r17
    188a:	30 e0       	ldi	r19, 0x00	; 0
    188c:	a9 01       	movw	r20, r18
    188e:	44 0f       	add	r20, r20
    1890:	55 1f       	adc	r21, r21
    1892:	f5 01       	movw	r30, r10
    1894:	e4 0f       	add	r30, r20
    1896:	f5 1f       	adc	r31, r21
    1898:	60 81       	ld	r22, Z
    189a:	71 81       	ldd	r23, Z+1	; 0x01
    189c:	67 2b       	or	r22, r23
    189e:	21 f1       	breq	.+72     	; 0x18e8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    18a0:	1f 5f       	subi	r17, 0xFF	; 255
    18a2:	28 85       	ldd	r18, Y+8	; 0x08
    18a4:	12 17       	cp	r17, r18
    18a6:	80 f3       	brcs	.-32     	; 0x1888 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    18a8:	7f 2c       	mov	r7, r15
    18aa:	80 2e       	mov	r8, r16
    18ac:	4c 2d       	mov	r20, r12
    18ae:	d7 cf       	rjmp	.-82     	; 0x185e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    18b0:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    18b4:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    18b8:	20 e0       	ldi	r18, 0x00	; 0
    18ba:	88 85       	ldd	r24, Y+8	; 0x08
    18bc:	28 17       	cp	r18, r24
    18be:	30 f5       	brcc	.+76     	; 0x190c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    18c0:	f5 01       	movw	r30, r10
    18c2:	e2 0f       	add	r30, r18
    18c4:	f1 1d       	adc	r31, r1
    18c6:	e2 0f       	add	r30, r18
    18c8:	f1 1d       	adc	r31, r1
    18ca:	80 81       	ld	r24, Z
    18cc:	91 81       	ldd	r25, Z+1	; 0x01
    18ce:	89 2b       	or	r24, r25
    18d0:	21 f4       	brne	.+8      	; 0x18da <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    18d2:	8e 85       	ldd	r24, Y+14	; 0x0e
    18d4:	9f 85       	ldd	r25, Y+15	; 0x0f
    18d6:	91 83       	std	Z+1, r25	; 0x01
    18d8:	80 83       	st	Z, r24
    18da:	2f 5f       	subi	r18, 0xFF	; 255
    18dc:	ee cf       	rjmp	.-36     	; 0x18ba <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    18de:	03 b1       	in	r16, 0x03	; 3
    18e0:	f6 b0       	in	r15, 0x06	; 6
    18e2:	99 b0       	in	r9, 0x09	; 9
    18e4:	10 e0       	ldi	r17, 0x00	; 0
    18e6:	dd cf       	rjmp	.-70     	; 0x18a2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    18e8:	de 01       	movw	r26, r28
    18ea:	a4 0f       	add	r26, r20
    18ec:	b5 1f       	adc	r27, r21
    18ee:	91 96       	adiw	r26, 0x21	; 33
    18f0:	0d 90       	ld	r0, X+
    18f2:	bc 91       	ld	r27, X
    18f4:	a0 2d       	mov	r26, r0
    18f6:	4c 91       	ld	r20, X
    18f8:	de 01       	movw	r26, r28
    18fa:	a2 0f       	add	r26, r18
    18fc:	b3 1f       	adc	r27, r19
    18fe:	51 96       	adiw	r26, 0x11	; 17
    1900:	2c 91       	ld	r18, X
    1902:	42 23       	and	r20, r18
    1904:	69 f6       	brne	.-102    	; 0x18a0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    1906:	91 83       	std	Z+1, r25	; 0x01
    1908:	80 83       	st	Z, r24
    190a:	ca cf       	rjmp	.-108    	; 0x18a0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    190c:	cd b7       	in	r28, 0x3d	; 61
    190e:	de b7       	in	r29, 0x3e	; 62
    1910:	ed e0       	ldi	r30, 0x0D	; 13
    1912:	0c 94 7c 10 	jmp	0x20f8	; 0x20f8 <__epilogue_restores__+0xa>

00001916 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    1916:	ef 92       	push	r14
    1918:	ff 92       	push	r15
    191a:	0f 93       	push	r16
    191c:	1f 93       	push	r17
    191e:	cf 93       	push	r28
    1920:	df 93       	push	r29
    1922:	fc 01       	movw	r30, r24
    1924:	9b 01       	movw	r18, r22
    1926:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    192a:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    192e:	47 b1       	in	r20, 0x07	; 7
    1930:	18 b1       	in	r17, 0x08	; 8
    1932:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1936:	86 fd       	sbrc	r24, 6
    1938:	fc cf       	rjmp	.-8      	; 0x1932 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    193a:	80 e0       	ldi	r24, 0x00	; 0
    193c:	90 85       	ldd	r25, Z+8	; 0x08
    193e:	89 17       	cp	r24, r25
    1940:	48 f4       	brcc	.+18     	; 0x1954 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    1942:	d9 01       	movw	r26, r18
    1944:	a8 0f       	add	r26, r24
    1946:	b1 1d       	adc	r27, r1
    1948:	a8 0f       	add	r26, r24
    194a:	b1 1d       	adc	r27, r1
    194c:	1d 92       	st	X+, r1
    194e:	1c 92       	st	X, r1
    1950:	8f 5f       	subi	r24, 0xFF	; 255
    1952:	f4 cf       	rjmp	.-24     	; 0x193c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    1954:	97 b1       	in	r25, 0x07	; 7
    1956:	82 a1       	ldd	r24, Z+34	; 0x22
    1958:	80 95       	com	r24
    195a:	89 23       	and	r24, r25
    195c:	87 b9       	out	0x07, r24	; 7
    195e:	98 b1       	in	r25, 0x08	; 8
    1960:	82 a1       	ldd	r24, Z+34	; 0x22
    1962:	80 95       	com	r24
    1964:	89 23       	and	r24, r25
    1966:	88 b9       	out	0x08, r24	; 8
    1968:	87 e8       	ldi	r24, 0x87	; 135
    196a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    196e:	e1 2c       	mov	r14, r1
    1970:	81 a1       	ldd	r24, Z+33	; 0x21
    1972:	e8 16       	cp	r14, r24
    1974:	10 f0       	brcs	.+4      	; 0x197a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    1976:	e1 2c       	mov	r14, r1
    1978:	29 c0       	rjmp	.+82     	; 0x19cc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    197a:	50 e0       	ldi	r21, 0x00	; 0
    197c:	80 85       	ldd	r24, Z+8	; 0x08
    197e:	58 17       	cp	r21, r24
    1980:	18 f5       	brcc	.+70     	; 0x19c8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1982:	a5 2f       	mov	r26, r21
    1984:	b0 e0       	ldi	r27, 0x00	; 0
    1986:	ef 01       	movw	r28, r30
    1988:	ca 0f       	add	r28, r26
    198a:	db 1f       	adc	r29, r27
    198c:	89 89       	ldd	r24, Y+17	; 0x11
    198e:	80 64       	ori	r24, 0x40	; 64
    1990:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1994:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1998:	80 64       	ori	r24, 0x40	; 64
    199a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    199e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    19a2:	86 fd       	sbrc	r24, 6
    19a4:	fc cf       	rjmp	.-8      	; 0x199e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    19a6:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    19aa:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    19ae:	aa 0f       	add	r26, r26
    19b0:	bb 1f       	adc	r27, r27
    19b2:	a2 0f       	add	r26, r18
    19b4:	b3 1f       	adc	r27, r19
    19b6:	8d 91       	ld	r24, X+
    19b8:	9c 91       	ld	r25, X
    19ba:	11 97       	sbiw	r26, 0x01	; 1
    19bc:	86 0f       	add	r24, r22
    19be:	97 1f       	adc	r25, r23
    19c0:	8d 93       	st	X+, r24
    19c2:	9c 93       	st	X, r25
    19c4:	5f 5f       	subi	r21, 0xFF	; 255
    19c6:	da cf       	rjmp	.-76     	; 0x197c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    19c8:	e3 94       	inc	r14
    19ca:	d2 cf       	rjmp	.-92     	; 0x1970 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    19cc:	80 85       	ldd	r24, Z+8	; 0x08
    19ce:	e8 16       	cp	r14, r24
    19d0:	a0 f4       	brcc	.+40     	; 0x19fa <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    19d2:	e9 01       	movw	r28, r18
    19d4:	ce 0d       	add	r28, r14
    19d6:	d1 1d       	adc	r29, r1
    19d8:	ce 0d       	add	r28, r14
    19da:	d1 1d       	adc	r29, r1
    19dc:	61 a1       	ldd	r22, Z+33	; 0x21
    19de:	70 e0       	ldi	r23, 0x00	; 0
    19e0:	cb 01       	movw	r24, r22
    19e2:	95 95       	asr	r25
    19e4:	87 95       	ror	r24
    19e6:	a8 81       	ld	r26, Y
    19e8:	b9 81       	ldd	r27, Y+1	; 0x01
    19ea:	8a 0f       	add	r24, r26
    19ec:	9b 1f       	adc	r25, r27
    19ee:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <__udivmodhi4>
    19f2:	79 83       	std	Y+1, r23	; 0x01
    19f4:	68 83       	st	Y, r22
    19f6:	e3 94       	inc	r14
    19f8:	e9 cf       	rjmp	.-46     	; 0x19cc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    19fa:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    19fe:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1a02:	18 b9       	out	0x08, r17	; 8
    1a04:	47 b9       	out	0x07, r20	; 7
    1a06:	cd b7       	in	r28, 0x3d	; 61
    1a08:	de b7       	in	r29, 0x3e	; 62
    1a0a:	e6 e0       	ldi	r30, 0x06	; 6
    1a0c:	0c 94 83 10 	jmp	0x2106	; 0x2106 <__epilogue_restores__+0x18>

00001a10 <_ZN16PololuQTRSensors4readEPjh>:
    1a10:	a0 e2       	ldi	r26, 0x20	; 32
    1a12:	b0 e0       	ldi	r27, 0x00	; 0
    1a14:	ee e0       	ldi	r30, 0x0E	; 14
    1a16:	fd e0       	ldi	r31, 0x0D	; 13
    1a18:	0c 94 66 10 	jmp	0x20cc	; 0x20cc <__prologue_saves__+0x16>
    1a1c:	8c 01       	movw	r16, r24
    1a1e:	7b 01       	movw	r14, r22
    1a20:	d4 2e       	mov	r13, r20
    1a22:	8f ef       	ldi	r24, 0xFF	; 255
    1a24:	84 0f       	add	r24, r20
    1a26:	82 30       	cpi	r24, 0x02	; 2
    1a28:	18 f4       	brcc	.+6      	; 0x1a30 <_ZN16PololuQTRSensors4readEPjh+0x20>
    1a2a:	c8 01       	movw	r24, r16
    1a2c:	0e 94 4a 0b 	call	0x1694	; 0x1694 <_ZN16PololuQTRSensors10emittersOnEv>
    1a30:	d8 01       	movw	r26, r16
    1a32:	50 96       	adiw	r26, 0x10	; 16
    1a34:	8c 91       	ld	r24, X
    1a36:	b7 01       	movw	r22, r14
    1a38:	81 11       	cpse	r24, r1
    1a3a:	10 c0       	rjmp	.+32     	; 0x1a5c <_ZN16PololuQTRSensors4readEPjh+0x4c>
    1a3c:	c8 01       	movw	r24, r16
    1a3e:	0e 94 b3 0b 	call	0x1766	; 0x1766 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1a42:	c8 01       	movw	r24, r16
    1a44:	0e 94 35 0b 	call	0x166a	; 0x166a <_ZN16PololuQTRSensors11emittersOffEv>
    1a48:	b2 e0       	ldi	r27, 0x02	; 2
    1a4a:	db 12       	cpse	r13, r27
    1a4c:	3a c0       	rjmp	.+116    	; 0x1ac2 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1a4e:	be 01       	movw	r22, r28
    1a50:	6f 5f       	subi	r22, 0xFF	; 255
    1a52:	7f 4f       	sbci	r23, 0xFF	; 255
    1a54:	c8 01       	movw	r24, r16
    1a56:	0e 94 b3 0b 	call	0x1766	; 0x1766 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1a5a:	0f c0       	rjmp	.+30     	; 0x1a7a <_ZN16PololuQTRSensors4readEPjh+0x6a>
    1a5c:	c8 01       	movw	r24, r16
    1a5e:	0e 94 8b 0c 	call	0x1916	; 0x1916 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1a62:	c8 01       	movw	r24, r16
    1a64:	0e 94 35 0b 	call	0x166a	; 0x166a <_ZN16PololuQTRSensors11emittersOffEv>
    1a68:	e2 e0       	ldi	r30, 0x02	; 2
    1a6a:	de 12       	cpse	r13, r30
    1a6c:	2a c0       	rjmp	.+84     	; 0x1ac2 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1a6e:	be 01       	movw	r22, r28
    1a70:	6f 5f       	subi	r22, 0xFF	; 255
    1a72:	7f 4f       	sbci	r23, 0xFF	; 255
    1a74:	c8 01       	movw	r24, r16
    1a76:	0e 94 8b 0c 	call	0x1916	; 0x1916 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1a7a:	40 e0       	ldi	r20, 0x00	; 0
    1a7c:	f8 01       	movw	r30, r16
    1a7e:	80 85       	ldd	r24, Z+8	; 0x08
    1a80:	48 17       	cp	r20, r24
    1a82:	f8 f4       	brcc	.+62     	; 0x1ac2 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1a84:	84 2f       	mov	r24, r20
    1a86:	90 e0       	ldi	r25, 0x00	; 0
    1a88:	88 0f       	add	r24, r24
    1a8a:	99 1f       	adc	r25, r25
    1a8c:	f7 01       	movw	r30, r14
    1a8e:	e8 0f       	add	r30, r24
    1a90:	f9 1f       	adc	r31, r25
    1a92:	21 e0       	ldi	r18, 0x01	; 1
    1a94:	30 e0       	ldi	r19, 0x00	; 0
    1a96:	2c 0f       	add	r18, r28
    1a98:	3d 1f       	adc	r19, r29
    1a9a:	82 0f       	add	r24, r18
    1a9c:	93 1f       	adc	r25, r19
    1a9e:	d8 01       	movw	r26, r16
    1aa0:	1e 96       	adiw	r26, 0x0e	; 14
    1aa2:	2d 91       	ld	r18, X+
    1aa4:	3c 91       	ld	r19, X
    1aa6:	1f 97       	sbiw	r26, 0x0f	; 15
    1aa8:	dc 01       	movw	r26, r24
    1aaa:	8d 91       	ld	r24, X+
    1aac:	9c 91       	ld	r25, X
    1aae:	28 1b       	sub	r18, r24
    1ab0:	39 0b       	sbc	r19, r25
    1ab2:	80 81       	ld	r24, Z
    1ab4:	91 81       	ldd	r25, Z+1	; 0x01
    1ab6:	82 0f       	add	r24, r18
    1ab8:	93 1f       	adc	r25, r19
    1aba:	91 83       	std	Z+1, r25	; 0x01
    1abc:	80 83       	st	Z, r24
    1abe:	4f 5f       	subi	r20, 0xFF	; 255
    1ac0:	dd cf       	rjmp	.-70     	; 0x1a7c <_ZN16PololuQTRSensors4readEPjh+0x6c>
    1ac2:	a0 96       	adiw	r28, 0x20	; 32
    1ac4:	e7 e0       	ldi	r30, 0x07	; 7
    1ac6:	0c 94 82 10 	jmp	0x2104	; 0x2104 <__epilogue_restores__+0x16>

00001aca <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    1aca:	2f 92       	push	r2
    1acc:	3f 92       	push	r3
    1ace:	5f 92       	push	r5
    1ad0:	6f 92       	push	r6
    1ad2:	7f 92       	push	r7
    1ad4:	8f 92       	push	r8
    1ad6:	9f 92       	push	r9
    1ad8:	af 92       	push	r10
    1ada:	bf 92       	push	r11
    1adc:	cf 92       	push	r12
    1ade:	df 92       	push	r13
    1ae0:	ef 92       	push	r14
    1ae2:	ff 92       	push	r15
    1ae4:	0f 93       	push	r16
    1ae6:	1f 93       	push	r17
    1ae8:	cf 93       	push	r28
    1aea:	df 93       	push	r29
    1aec:	cd b7       	in	r28, 0x3d	; 61
    1aee:	de b7       	in	r29, 0x3e	; 62
    1af0:	c0 56       	subi	r28, 0x60	; 96
    1af2:	d1 09       	sbc	r29, r1
    1af4:	0f b6       	in	r0, 0x3f	; 63
    1af6:	f8 94       	cli
    1af8:	de bf       	out	0x3e, r29	; 62
    1afa:	0f be       	out	0x3f, r0	; 63
    1afc:	cd bf       	out	0x3d, r28	; 61
    1afe:	8c 01       	movw	r16, r24
    1b00:	4b 01       	movw	r8, r22
    1b02:	5a 01       	movw	r10, r20
    1b04:	52 2e       	mov	r5, r18
    1b06:	da 01       	movw	r26, r20
    1b08:	8d 91       	ld	r24, X+
    1b0a:	9c 91       	ld	r25, X
    1b0c:	89 2b       	or	r24, r25
    1b0e:	31 f0       	breq	.+12     	; 0x1b1c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    1b10:	f4 01       	movw	r30, r8
    1b12:	80 81       	ld	r24, Z
    1b14:	91 81       	ldd	r25, Z+1	; 0x01
    1b16:	89 2b       	or	r24, r25
    1b18:	f1 f4       	brne	.+60     	; 0x1b56 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1b1a:	24 c0       	rjmp	.+72     	; 0x1b64 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    1b1c:	d8 01       	movw	r26, r16
    1b1e:	18 96       	adiw	r26, 0x08	; 8
    1b20:	8c 91       	ld	r24, X
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	88 0f       	add	r24, r24
    1b26:	99 1f       	adc	r25, r25
    1b28:	0e 94 92 10 	call	0x2124	; 0x2124 <malloc>
    1b2c:	f5 01       	movw	r30, r10
    1b2e:	91 83       	std	Z+1, r25	; 0x01
    1b30:	80 83       	st	Z, r24
    1b32:	00 97       	sbiw	r24, 0x00	; 0
    1b34:	09 f4       	brne	.+2      	; 0x1b38 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    1b36:	b1 c0       	rjmp	.+354    	; 0x1c9a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1b38:	fc 01       	movw	r30, r24
    1b3a:	20 e0       	ldi	r18, 0x00	; 0
    1b3c:	30 e0       	ldi	r19, 0x00	; 0
    1b3e:	d8 01       	movw	r26, r16
    1b40:	18 96       	adiw	r26, 0x08	; 8
    1b42:	8c 91       	ld	r24, X
    1b44:	90 e0       	ldi	r25, 0x00	; 0
    1b46:	28 17       	cp	r18, r24
    1b48:	39 07       	cpc	r19, r25
    1b4a:	14 f7       	brge	.-60     	; 0x1b10 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    1b4c:	11 92       	st	Z+, r1
    1b4e:	11 92       	st	Z+, r1
    1b50:	2f 5f       	subi	r18, 0xFF	; 255
    1b52:	3f 4f       	sbci	r19, 0xFF	; 255
    1b54:	f4 cf       	rjmp	.-24     	; 0x1b3e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    1b56:	e1 2c       	mov	r14, r1
    1b58:	f1 2c       	mov	r15, r1
    1b5a:	6e 01       	movw	r12, r28
    1b5c:	b1 e2       	ldi	r27, 0x21	; 33
    1b5e:	cb 0e       	add	r12, r27
    1b60:	d1 1c       	adc	r13, r1
    1b62:	21 c0       	rjmp	.+66     	; 0x1ba6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    1b64:	f8 01       	movw	r30, r16
    1b66:	80 85       	ldd	r24, Z+8	; 0x08
    1b68:	90 e0       	ldi	r25, 0x00	; 0
    1b6a:	88 0f       	add	r24, r24
    1b6c:	99 1f       	adc	r25, r25
    1b6e:	0e 94 92 10 	call	0x2124	; 0x2124 <malloc>
    1b72:	d4 01       	movw	r26, r8
    1b74:	8d 93       	st	X+, r24
    1b76:	9c 93       	st	X, r25
    1b78:	00 97       	sbiw	r24, 0x00	; 0
    1b7a:	09 f4       	brne	.+2      	; 0x1b7e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    1b7c:	8e c0       	rjmp	.+284    	; 0x1c9a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1b7e:	fc 01       	movw	r30, r24
    1b80:	20 e0       	ldi	r18, 0x00	; 0
    1b82:	30 e0       	ldi	r19, 0x00	; 0
    1b84:	d8 01       	movw	r26, r16
    1b86:	18 96       	adiw	r26, 0x08	; 8
    1b88:	8c 91       	ld	r24, X
    1b8a:	90 e0       	ldi	r25, 0x00	; 0
    1b8c:	28 17       	cp	r18, r24
    1b8e:	39 07       	cpc	r19, r25
    1b90:	14 f7       	brge	.-60     	; 0x1b56 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1b92:	d8 01       	movw	r26, r16
    1b94:	1e 96       	adiw	r26, 0x0e	; 14
    1b96:	8d 91       	ld	r24, X+
    1b98:	9c 91       	ld	r25, X
    1b9a:	1f 97       	sbiw	r26, 0x0f	; 15
    1b9c:	81 93       	st	Z+, r24
    1b9e:	91 93       	st	Z+, r25
    1ba0:	2f 5f       	subi	r18, 0xFF	; 255
    1ba2:	3f 4f       	sbci	r19, 0xFF	; 255
    1ba4:	ef cf       	rjmp	.-34     	; 0x1b84 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    1ba6:	45 2d       	mov	r20, r5
    1ba8:	be 01       	movw	r22, r28
    1baa:	6f 5b       	subi	r22, 0xBF	; 191
    1bac:	7f 4f       	sbci	r23, 0xFF	; 255
    1bae:	c8 01       	movw	r24, r16
    1bb0:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <_ZN16PololuQTRSensors4readEPjh>
    1bb4:	f8 01       	movw	r30, r16
    1bb6:	60 84       	ldd	r6, Z+8	; 0x08
    1bb8:	71 2c       	mov	r7, r1
    1bba:	fe 01       	movw	r30, r28
    1bbc:	ef 5b       	subi	r30, 0xBF	; 191
    1bbe:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc0:	c6 01       	movw	r24, r12
    1bc2:	9e 01       	movw	r18, r28
    1bc4:	2f 5f       	subi	r18, 0xFF	; 255
    1bc6:	3f 4f       	sbci	r19, 0xFF	; 255
    1bc8:	19 01       	movw	r2, r18
    1bca:	20 e0       	ldi	r18, 0x00	; 0
    1bcc:	30 e0       	ldi	r19, 0x00	; 0
    1bce:	26 15       	cp	r18, r6
    1bd0:	37 05       	cpc	r19, r7
    1bd2:	4c f5       	brge	.+82     	; 0x1c26 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    1bd4:	e1 14       	cp	r14, r1
    1bd6:	f1 04       	cpc	r15, r1
    1bd8:	89 f0       	breq	.+34     	; 0x1bfc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1bda:	dc 01       	movw	r26, r24
    1bdc:	6d 91       	ld	r22, X+
    1bde:	7c 91       	ld	r23, X
    1be0:	40 81       	ld	r20, Z
    1be2:	51 81       	ldd	r21, Z+1	; 0x01
    1be4:	64 17       	cp	r22, r20
    1be6:	75 07       	cpc	r23, r21
    1be8:	48 f0       	brcs	.+18     	; 0x1bfc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1bea:	d1 01       	movw	r26, r2
    1bec:	6d 91       	ld	r22, X+
    1bee:	7c 91       	ld	r23, X
    1bf0:	40 81       	ld	r20, Z
    1bf2:	51 81       	ldd	r21, Z+1	; 0x01
    1bf4:	46 17       	cp	r20, r22
    1bf6:	57 07       	cpc	r21, r23
    1bf8:	48 f0       	brcs	.+18     	; 0x1c0c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    1bfa:	0d c0       	rjmp	.+26     	; 0x1c16 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    1bfc:	40 81       	ld	r20, Z
    1bfe:	51 81       	ldd	r21, Z+1	; 0x01
    1c00:	dc 01       	movw	r26, r24
    1c02:	4d 93       	st	X+, r20
    1c04:	5c 93       	st	X, r21
    1c06:	e1 14       	cp	r14, r1
    1c08:	f1 04       	cpc	r15, r1
    1c0a:	79 f7       	brne	.-34     	; 0x1bea <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    1c0c:	40 81       	ld	r20, Z
    1c0e:	51 81       	ldd	r21, Z+1	; 0x01
    1c10:	d1 01       	movw	r26, r2
    1c12:	4d 93       	st	X+, r20
    1c14:	5c 93       	st	X, r21
    1c16:	2f 5f       	subi	r18, 0xFF	; 255
    1c18:	3f 4f       	sbci	r19, 0xFF	; 255
    1c1a:	b2 e0       	ldi	r27, 0x02	; 2
    1c1c:	2b 0e       	add	r2, r27
    1c1e:	31 1c       	adc	r3, r1
    1c20:	32 96       	adiw	r30, 0x02	; 2
    1c22:	02 96       	adiw	r24, 0x02	; 2
    1c24:	d4 cf       	rjmp	.-88     	; 0x1bce <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    1c26:	ef ef       	ldi	r30, 0xFF	; 255
    1c28:	ee 1a       	sub	r14, r30
    1c2a:	fe 0a       	sbc	r15, r30
    1c2c:	fa e0       	ldi	r31, 0x0A	; 10
    1c2e:	ef 16       	cp	r14, r31
    1c30:	f1 04       	cpc	r15, r1
    1c32:	09 f0       	breq	.+2      	; 0x1c36 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    1c34:	b8 cf       	rjmp	.-144    	; 0x1ba6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    1c36:	9e 01       	movw	r18, r28
    1c38:	2f 5f       	subi	r18, 0xFF	; 255
    1c3a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c3c:	79 01       	movw	r14, r18
    1c3e:	36 01       	movw	r6, r12
    1c40:	80 e0       	ldi	r24, 0x00	; 0
    1c42:	90 e0       	ldi	r25, 0x00	; 0
    1c44:	f8 01       	movw	r30, r16
    1c46:	20 85       	ldd	r18, Z+8	; 0x08
    1c48:	30 e0       	ldi	r19, 0x00	; 0
    1c4a:	82 17       	cp	r24, r18
    1c4c:	93 07       	cpc	r25, r19
    1c4e:	2c f5       	brge	.+74     	; 0x1c9a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1c50:	d7 01       	movw	r26, r14
    1c52:	2d 91       	ld	r18, X+
    1c54:	3d 91       	ld	r19, X+
    1c56:	7d 01       	movw	r14, r26
    1c58:	b3 01       	movw	r22, r6
    1c5a:	6c 19       	sub	r22, r12
    1c5c:	7d 09       	sbc	r23, r13
    1c5e:	d5 01       	movw	r26, r10
    1c60:	ed 91       	ld	r30, X+
    1c62:	fc 91       	ld	r31, X
    1c64:	e6 0f       	add	r30, r22
    1c66:	f7 1f       	adc	r31, r23
    1c68:	40 81       	ld	r20, Z
    1c6a:	51 81       	ldd	r21, Z+1	; 0x01
    1c6c:	42 17       	cp	r20, r18
    1c6e:	53 07       	cpc	r21, r19
    1c70:	10 f4       	brcc	.+4      	; 0x1c76 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    1c72:	31 83       	std	Z+1, r19	; 0x01
    1c74:	20 83       	st	Z, r18
    1c76:	f3 01       	movw	r30, r6
    1c78:	21 91       	ld	r18, Z+
    1c7a:	31 91       	ld	r19, Z+
    1c7c:	3f 01       	movw	r6, r30
    1c7e:	d4 01       	movw	r26, r8
    1c80:	ed 91       	ld	r30, X+
    1c82:	fc 91       	ld	r31, X
    1c84:	e6 0f       	add	r30, r22
    1c86:	f7 1f       	adc	r31, r23
    1c88:	40 81       	ld	r20, Z
    1c8a:	51 81       	ldd	r21, Z+1	; 0x01
    1c8c:	24 17       	cp	r18, r20
    1c8e:	35 07       	cpc	r19, r21
    1c90:	10 f4       	brcc	.+4      	; 0x1c96 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    1c92:	31 83       	std	Z+1, r19	; 0x01
    1c94:	20 83       	st	Z, r18
    1c96:	01 96       	adiw	r24, 0x01	; 1
    1c98:	d5 cf       	rjmp	.-86     	; 0x1c44 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    1c9a:	c0 5a       	subi	r28, 0xA0	; 160
    1c9c:	df 4f       	sbci	r29, 0xFF	; 255
    1c9e:	0f b6       	in	r0, 0x3f	; 63
    1ca0:	f8 94       	cli
    1ca2:	de bf       	out	0x3e, r29	; 62
    1ca4:	0f be       	out	0x3f, r0	; 63
    1ca6:	cd bf       	out	0x3d, r28	; 61
    1ca8:	df 91       	pop	r29
    1caa:	cf 91       	pop	r28
    1cac:	1f 91       	pop	r17
    1cae:	0f 91       	pop	r16
    1cb0:	ff 90       	pop	r15
    1cb2:	ef 90       	pop	r14
    1cb4:	df 90       	pop	r13
    1cb6:	cf 90       	pop	r12
    1cb8:	bf 90       	pop	r11
    1cba:	af 90       	pop	r10
    1cbc:	9f 90       	pop	r9
    1cbe:	8f 90       	pop	r8
    1cc0:	7f 90       	pop	r7
    1cc2:	6f 90       	pop	r6
    1cc4:	5f 90       	pop	r5
    1cc6:	3f 90       	pop	r3
    1cc8:	2f 90       	pop	r2
    1cca:	08 95       	ret

00001ccc <_ZN16PololuQTRSensors9calibrateEh>:
    1ccc:	1f 93       	push	r17
    1cce:	cf 93       	push	r28
    1cd0:	df 93       	push	r29
    1cd2:	ec 01       	movw	r28, r24
    1cd4:	16 2f       	mov	r17, r22
    1cd6:	8f ef       	ldi	r24, 0xFF	; 255
    1cd8:	86 0f       	add	r24, r22
    1cda:	82 30       	cpi	r24, 0x02	; 2
    1cdc:	18 f0       	brcs	.+6      	; 0x1ce4 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    1cde:	66 23       	and	r22, r22
    1ce0:	59 f0       	breq	.+22     	; 0x1cf8 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    1ce2:	14 c0       	rjmp	.+40     	; 0x1d0c <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1ce4:	21 e0       	ldi	r18, 0x01	; 1
    1ce6:	ae 01       	movw	r20, r28
    1ce8:	4e 5f       	subi	r20, 0xFE	; 254
    1cea:	5f 4f       	sbci	r21, 0xFF	; 255
    1cec:	be 01       	movw	r22, r28
    1cee:	ce 01       	movw	r24, r28
    1cf0:	0e 94 65 0d 	call	0x1aca	; 0x1aca <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1cf4:	12 30       	cpi	r17, 0x02	; 2
    1cf6:	51 f4       	brne	.+20     	; 0x1d0c <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1cf8:	ae 01       	movw	r20, r28
    1cfa:	4a 5f       	subi	r20, 0xFA	; 250
    1cfc:	5f 4f       	sbci	r21, 0xFF	; 255
    1cfe:	be 01       	movw	r22, r28
    1d00:	6c 5f       	subi	r22, 0xFC	; 252
    1d02:	7f 4f       	sbci	r23, 0xFF	; 255
    1d04:	20 e0       	ldi	r18, 0x00	; 0
    1d06:	ce 01       	movw	r24, r28
    1d08:	0e 94 65 0d 	call	0x1aca	; 0x1aca <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1d0c:	df 91       	pop	r29
    1d0e:	cf 91       	pop	r28
    1d10:	1f 91       	pop	r17
    1d12:	08 95       	ret

00001d14 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    1d14:	a0 e0       	ldi	r26, 0x00	; 0
    1d16:	b0 e0       	ldi	r27, 0x00	; 0
    1d18:	e0 e9       	ldi	r30, 0x90	; 144
    1d1a:	fe e0       	ldi	r31, 0x0E	; 14
    1d1c:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__prologue_saves__+0x12>
    1d20:	ec 01       	movw	r28, r24
    1d22:	8b 01       	movw	r16, r22
    1d24:	b4 2e       	mov	r11, r20
    1d26:	84 2f       	mov	r24, r20
    1d28:	8d 7f       	andi	r24, 0xFD	; 253
    1d2a:	51 f4       	brne	.+20     	; 0x1d40 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    1d2c:	8c 81       	ldd	r24, Y+4	; 0x04
    1d2e:	9d 81       	ldd	r25, Y+5	; 0x05
    1d30:	89 2b       	or	r24, r25
    1d32:	09 f4       	brne	.+2      	; 0x1d36 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    1d34:	97 c0       	rjmp	.+302    	; 0x1e64 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1d36:	8e 81       	ldd	r24, Y+6	; 0x06
    1d38:	9f 81       	ldd	r25, Y+7	; 0x07
    1d3a:	89 2b       	or	r24, r25
    1d3c:	09 f4       	brne	.+2      	; 0x1d40 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    1d3e:	92 c0       	rjmp	.+292    	; 0x1e64 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1d40:	8f ef       	ldi	r24, 0xFF	; 255
    1d42:	8b 0d       	add	r24, r11
    1d44:	82 30       	cpi	r24, 0x02	; 2
    1d46:	50 f4       	brcc	.+20     	; 0x1d5c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    1d48:	88 81       	ld	r24, Y
    1d4a:	99 81       	ldd	r25, Y+1	; 0x01
    1d4c:	89 2b       	or	r24, r25
    1d4e:	09 f4       	brne	.+2      	; 0x1d52 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    1d50:	89 c0       	rjmp	.+274    	; 0x1e64 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1d52:	8a 81       	ldd	r24, Y+2	; 0x02
    1d54:	9b 81       	ldd	r25, Y+3	; 0x03
    1d56:	89 2b       	or	r24, r25
    1d58:	09 f4       	brne	.+2      	; 0x1d5c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    1d5a:	84 c0       	rjmp	.+264    	; 0x1e64 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1d5c:	4b 2d       	mov	r20, r11
    1d5e:	b8 01       	movw	r22, r16
    1d60:	ce 01       	movw	r24, r28
    1d62:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <_ZN16PololuQTRSensors4readEPjh>
    1d66:	78 01       	movw	r14, r16
    1d68:	00 e0       	ldi	r16, 0x00	; 0
    1d6a:	10 e0       	ldi	r17, 0x00	; 0
    1d6c:	c1 2c       	mov	r12, r1
    1d6e:	d1 2c       	mov	r13, r1
    1d70:	88 85       	ldd	r24, Y+8	; 0x08
    1d72:	90 e0       	ldi	r25, 0x00	; 0
    1d74:	c8 16       	cp	r12, r24
    1d76:	d9 06       	cpc	r13, r25
    1d78:	0c f0       	brlt	.+2      	; 0x1d7c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    1d7a:	74 c0       	rjmp	.+232    	; 0x1e64 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1d7c:	81 e0       	ldi	r24, 0x01	; 1
    1d7e:	b8 12       	cpse	r11, r24
    1d80:	0a c0       	rjmp	.+20     	; 0x1d96 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    1d82:	ea 81       	ldd	r30, Y+2	; 0x02
    1d84:	fb 81       	ldd	r31, Y+3	; 0x03
    1d86:	e0 0f       	add	r30, r16
    1d88:	f1 1f       	adc	r31, r17
    1d8a:	01 90       	ld	r0, Z+
    1d8c:	f0 81       	ld	r31, Z
    1d8e:	e0 2d       	mov	r30, r0
    1d90:	a8 81       	ld	r26, Y
    1d92:	b9 81       	ldd	r27, Y+1	; 0x01
    1d94:	0d c0       	rjmp	.+26     	; 0x1db0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    1d96:	8c 81       	ldd	r24, Y+4	; 0x04
    1d98:	9d 81       	ldd	r25, Y+5	; 0x05
    1d9a:	2e 81       	ldd	r18, Y+6	; 0x06
    1d9c:	3f 81       	ldd	r19, Y+7	; 0x07
    1d9e:	b1 10       	cpse	r11, r1
    1da0:	0c c0       	rjmp	.+24     	; 0x1dba <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    1da2:	f9 01       	movw	r30, r18
    1da4:	e0 0f       	add	r30, r16
    1da6:	f1 1f       	adc	r31, r17
    1da8:	01 90       	ld	r0, Z+
    1daa:	f0 81       	ld	r31, Z
    1dac:	e0 2d       	mov	r30, r0
    1dae:	dc 01       	movw	r26, r24
    1db0:	a0 0f       	add	r26, r16
    1db2:	b1 1f       	adc	r27, r17
    1db4:	8d 91       	ld	r24, X+
    1db6:	9c 91       	ld	r25, X
    1db8:	28 c0       	rjmp	.+80     	; 0x1e0a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    1dba:	fc 01       	movw	r30, r24
    1dbc:	e0 0f       	add	r30, r16
    1dbe:	f1 1f       	adc	r31, r17
    1dc0:	40 81       	ld	r20, Z
    1dc2:	51 81       	ldd	r21, Z+1	; 0x01
    1dc4:	e8 81       	ld	r30, Y
    1dc6:	f9 81       	ldd	r31, Y+1	; 0x01
    1dc8:	e0 0f       	add	r30, r16
    1dca:	f1 1f       	adc	r31, r17
    1dcc:	80 81       	ld	r24, Z
    1dce:	91 81       	ldd	r25, Z+1	; 0x01
    1dd0:	ee 85       	ldd	r30, Y+14	; 0x0e
    1dd2:	ff 85       	ldd	r31, Y+15	; 0x0f
    1dd4:	48 17       	cp	r20, r24
    1dd6:	59 07       	cpc	r21, r25
    1dd8:	10 f4       	brcc	.+4      	; 0x1dde <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    1dda:	cf 01       	movw	r24, r30
    1ddc:	04 c0       	rjmp	.+8      	; 0x1de6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    1dde:	8e 0f       	add	r24, r30
    1de0:	9f 1f       	adc	r25, r31
    1de2:	84 1b       	sub	r24, r20
    1de4:	95 0b       	sbc	r25, r21
    1de6:	d9 01       	movw	r26, r18
    1de8:	a0 0f       	add	r26, r16
    1dea:	b1 1f       	adc	r27, r17
    1dec:	2d 91       	ld	r18, X+
    1dee:	3c 91       	ld	r19, X
    1df0:	aa 81       	ldd	r26, Y+2	; 0x02
    1df2:	bb 81       	ldd	r27, Y+3	; 0x03
    1df4:	a0 0f       	add	r26, r16
    1df6:	b1 1f       	adc	r27, r17
    1df8:	4d 91       	ld	r20, X+
    1dfa:	5c 91       	ld	r21, X
    1dfc:	24 17       	cp	r18, r20
    1dfe:	35 07       	cpc	r19, r21
    1e00:	20 f0       	brcs	.+8      	; 0x1e0a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    1e02:	e4 0f       	add	r30, r20
    1e04:	f5 1f       	adc	r31, r21
    1e06:	e2 1b       	sub	r30, r18
    1e08:	f3 0b       	sbc	r31, r19
    1e0a:	e8 1b       	sub	r30, r24
    1e0c:	f9 0b       	sbc	r31, r25
    1e0e:	a9 f0       	breq	.+42     	; 0x1e3a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    1e10:	d7 01       	movw	r26, r14
    1e12:	2d 91       	ld	r18, X+
    1e14:	3c 91       	ld	r19, X
    1e16:	40 e0       	ldi	r20, 0x00	; 0
    1e18:	50 e0       	ldi	r21, 0x00	; 0
    1e1a:	28 1b       	sub	r18, r24
    1e1c:	39 0b       	sbc	r19, r25
    1e1e:	41 09       	sbc	r20, r1
    1e20:	51 09       	sbc	r21, r1
    1e22:	a8 ee       	ldi	r26, 0xE8	; 232
    1e24:	b3 e0       	ldi	r27, 0x03	; 3
    1e26:	0e 94 48 10 	call	0x2090	; 0x2090 <__muluhisi3>
    1e2a:	9f 01       	movw	r18, r30
    1e2c:	40 e0       	ldi	r20, 0x00	; 0
    1e2e:	50 e0       	ldi	r21, 0x00	; 0
    1e30:	0e 94 14 10 	call	0x2028	; 0x2028 <__divmodsi4>
    1e34:	37 fd       	sbrc	r19, 7
    1e36:	0a c0       	rjmp	.+20     	; 0x1e4c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    1e38:	02 c0       	rjmp	.+4      	; 0x1e3e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    1e3a:	20 e0       	ldi	r18, 0x00	; 0
    1e3c:	30 e0       	ldi	r19, 0x00	; 0
    1e3e:	29 3e       	cpi	r18, 0xE9	; 233
    1e40:	b3 e0       	ldi	r27, 0x03	; 3
    1e42:	3b 07       	cpc	r19, r27
    1e44:	2c f0       	brlt	.+10     	; 0x1e50 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1e46:	28 ee       	ldi	r18, 0xE8	; 232
    1e48:	33 e0       	ldi	r19, 0x03	; 3
    1e4a:	02 c0       	rjmp	.+4      	; 0x1e50 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1e4c:	20 e0       	ldi	r18, 0x00	; 0
    1e4e:	30 e0       	ldi	r19, 0x00	; 0
    1e50:	f7 01       	movw	r30, r14
    1e52:	21 93       	st	Z+, r18
    1e54:	31 93       	st	Z+, r19
    1e56:	7f 01       	movw	r14, r30
    1e58:	ff ef       	ldi	r31, 0xFF	; 255
    1e5a:	cf 1a       	sub	r12, r31
    1e5c:	df 0a       	sbc	r13, r31
    1e5e:	0e 5f       	subi	r16, 0xFE	; 254
    1e60:	1f 4f       	sbci	r17, 0xFF	; 255
    1e62:	86 cf       	rjmp	.-244    	; 0x1d70 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    1e64:	cd b7       	in	r28, 0x3d	; 61
    1e66:	de b7       	in	r29, 0x3e	; 62
    1e68:	e9 e0       	ldi	r30, 0x09	; 9
    1e6a:	0c 94 80 10 	jmp	0x2100	; 0x2100 <__epilogue_restores__+0x12>

00001e6e <_ZN16PololuQTRSensors8readLineEPjhh>:
    1e6e:	a0 e0       	ldi	r26, 0x00	; 0
    1e70:	b0 e0       	ldi	r27, 0x00	; 0
    1e72:	ed e3       	ldi	r30, 0x3D	; 61
    1e74:	ff e0       	ldi	r31, 0x0F	; 15
    1e76:	0c 94 5b 10 	jmp	0x20b6	; 0x20b6 <__prologue_saves__>
    1e7a:	ec 01       	movw	r28, r24
    1e7c:	8b 01       	movw	r16, r22
    1e7e:	82 2e       	mov	r8, r18
    1e80:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    1e84:	28 84       	ldd	r2, Y+8	; 0x08
    1e86:	e8 01       	movw	r28, r16
    1e88:	41 2c       	mov	r4, r1
    1e8a:	51 2c       	mov	r5, r1
    1e8c:	32 01       	movw	r6, r4
    1e8e:	00 e0       	ldi	r16, 0x00	; 0
    1e90:	10 e0       	ldi	r17, 0x00	; 0
    1e92:	c1 2c       	mov	r12, r1
    1e94:	d1 2c       	mov	r13, r1
    1e96:	76 01       	movw	r14, r12
    1e98:	31 2c       	mov	r3, r1
    1e9a:	91 2c       	mov	r9, r1
    1e9c:	58 ee       	ldi	r21, 0xE8	; 232
    1e9e:	a5 2e       	mov	r10, r21
    1ea0:	53 e0       	ldi	r21, 0x03	; 3
    1ea2:	b5 2e       	mov	r11, r21
    1ea4:	92 14       	cp	r9, r2
    1ea6:	21 f1       	breq	.+72     	; 0x1ef0 <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    1ea8:	e9 91       	ld	r30, Y+
    1eaa:	f9 91       	ld	r31, Y+
    1eac:	88 20       	and	r8, r8
    1eae:	21 f0       	breq	.+8      	; 0x1eb8 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    1eb0:	c5 01       	movw	r24, r10
    1eb2:	8e 1b       	sub	r24, r30
    1eb4:	9f 0b       	sbc	r25, r31
    1eb6:	fc 01       	movw	r30, r24
    1eb8:	e9 3c       	cpi	r30, 0xC9	; 201
    1eba:	f1 05       	cpc	r31, r1
    1ebc:	24 f4       	brge	.+8      	; 0x1ec6 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    1ebe:	e3 33       	cpi	r30, 0x33	; 51
    1ec0:	f1 05       	cpc	r31, r1
    1ec2:	74 f0       	brlt	.+28     	; 0x1ee0 <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    1ec4:	02 c0       	rjmp	.+4      	; 0x1eca <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    1ec6:	33 24       	eor	r3, r3
    1ec8:	33 94       	inc	r3
    1eca:	df 01       	movw	r26, r30
    1ecc:	a3 01       	movw	r20, r6
    1ece:	92 01       	movw	r18, r4
    1ed0:	0e 94 53 10 	call	0x20a6	; 0x20a6 <__mulshisi3>
    1ed4:	c6 0e       	add	r12, r22
    1ed6:	d7 1e       	adc	r13, r23
    1ed8:	e8 1e       	adc	r14, r24
    1eda:	f9 1e       	adc	r15, r25
    1edc:	0e 0f       	add	r16, r30
    1ede:	1f 1f       	adc	r17, r31
    1ee0:	93 94       	inc	r9
    1ee2:	98 ee       	ldi	r25, 0xE8	; 232
    1ee4:	49 0e       	add	r4, r25
    1ee6:	93 e0       	ldi	r25, 0x03	; 3
    1ee8:	59 1e       	adc	r5, r25
    1eea:	61 1c       	adc	r6, r1
    1eec:	71 1c       	adc	r7, r1
    1eee:	da cf       	rjmp	.-76     	; 0x1ea4 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    1ef0:	31 10       	cpse	r3, r1
    1ef2:	1e c0       	rjmp	.+60     	; 0x1f30 <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    1ef4:	49 2d       	mov	r20, r9
    1ef6:	50 e0       	ldi	r21, 0x00	; 0
    1ef8:	41 50       	subi	r20, 0x01	; 1
    1efa:	51 09       	sbc	r21, r1
    1efc:	24 ef       	ldi	r18, 0xF4	; 244
    1efe:	31 e0       	ldi	r19, 0x01	; 1
    1f00:	42 9f       	mul	r20, r18
    1f02:	c0 01       	movw	r24, r0
    1f04:	43 9f       	mul	r20, r19
    1f06:	90 0d       	add	r25, r0
    1f08:	52 9f       	mul	r21, r18
    1f0a:	90 0d       	add	r25, r0
    1f0c:	11 24       	eor	r1, r1
    1f0e:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    1f12:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    1f16:	28 17       	cp	r18, r24
    1f18:	39 07       	cpc	r19, r25
    1f1a:	b4 f0       	brlt	.+44     	; 0x1f48 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    1f1c:	88 ee       	ldi	r24, 0xE8	; 232
    1f1e:	93 e0       	ldi	r25, 0x03	; 3
    1f20:	48 9f       	mul	r20, r24
    1f22:	90 01       	movw	r18, r0
    1f24:	49 9f       	mul	r20, r25
    1f26:	30 0d       	add	r19, r0
    1f28:	58 9f       	mul	r21, r24
    1f2a:	30 0d       	add	r19, r0
    1f2c:	11 24       	eor	r1, r1
    1f2e:	0e c0       	rjmp	.+28     	; 0x1f4c <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    1f30:	98 01       	movw	r18, r16
    1f32:	40 e0       	ldi	r20, 0x00	; 0
    1f34:	50 e0       	ldi	r21, 0x00	; 0
    1f36:	c7 01       	movw	r24, r14
    1f38:	b6 01       	movw	r22, r12
    1f3a:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__udivmodsi4>
    1f3e:	30 93 91 01 	sts	0x0191, r19	; 0x800191 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    1f42:	20 93 90 01 	sts	0x0190, r18	; 0x800190 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    1f46:	02 c0       	rjmp	.+4      	; 0x1f4c <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    1f48:	20 e0       	ldi	r18, 0x00	; 0
    1f4a:	30 e0       	ldi	r19, 0x00	; 0
    1f4c:	c9 01       	movw	r24, r18
    1f4e:	cd b7       	in	r28, 0x3d	; 61
    1f50:	de b7       	in	r29, 0x3e	; 62
    1f52:	e2 e1       	ldi	r30, 0x12	; 18
    1f54:	0c 94 77 10 	jmp	0x20ee	; 0x20ee <__epilogue_restores__>

00001f58 <_ZN16PololuQTRSensorsD1Ev>:
    1f58:	cf 93       	push	r28
    1f5a:	df 93       	push	r29
    1f5c:	ec 01       	movw	r28, r24
    1f5e:	8a 81       	ldd	r24, Y+2	; 0x02
    1f60:	9b 81       	ldd	r25, Y+3	; 0x03
    1f62:	00 97       	sbiw	r24, 0x00	; 0
    1f64:	11 f0       	breq	.+4      	; 0x1f6a <_ZN16PololuQTRSensorsD1Ev+0x12>
    1f66:	0e 94 2a 11 	call	0x2254	; 0x2254 <free>
    1f6a:	8e 81       	ldd	r24, Y+6	; 0x06
    1f6c:	9f 81       	ldd	r25, Y+7	; 0x07
    1f6e:	00 97       	sbiw	r24, 0x00	; 0
    1f70:	11 f0       	breq	.+4      	; 0x1f76 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    1f72:	0e 94 2a 11 	call	0x2254	; 0x2254 <free>
    1f76:	88 81       	ld	r24, Y
    1f78:	99 81       	ldd	r25, Y+1	; 0x01
    1f7a:	00 97       	sbiw	r24, 0x00	; 0
    1f7c:	11 f0       	breq	.+4      	; 0x1f82 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    1f7e:	0e 94 2a 11 	call	0x2254	; 0x2254 <free>
    1f82:	8c 81       	ldd	r24, Y+4	; 0x04
    1f84:	9d 81       	ldd	r25, Y+5	; 0x05
    1f86:	00 97       	sbiw	r24, 0x00	; 0
    1f88:	11 f0       	breq	.+4      	; 0x1f8e <_ZN16PololuQTRSensorsD1Ev+0x36>
    1f8a:	0e 94 2a 11 	call	0x2254	; 0x2254 <free>
    1f8e:	df 91       	pop	r29
    1f90:	cf 91       	pop	r28
    1f92:	08 95       	ret

00001f94 <__udivmodhi4>:
    1f94:	aa 1b       	sub	r26, r26
    1f96:	bb 1b       	sub	r27, r27
    1f98:	51 e1       	ldi	r21, 0x11	; 17
    1f9a:	07 c0       	rjmp	.+14     	; 0x1faa <__udivmodhi4_ep>

00001f9c <__udivmodhi4_loop>:
    1f9c:	aa 1f       	adc	r26, r26
    1f9e:	bb 1f       	adc	r27, r27
    1fa0:	a6 17       	cp	r26, r22
    1fa2:	b7 07       	cpc	r27, r23
    1fa4:	10 f0       	brcs	.+4      	; 0x1faa <__udivmodhi4_ep>
    1fa6:	a6 1b       	sub	r26, r22
    1fa8:	b7 0b       	sbc	r27, r23

00001faa <__udivmodhi4_ep>:
    1faa:	88 1f       	adc	r24, r24
    1fac:	99 1f       	adc	r25, r25
    1fae:	5a 95       	dec	r21
    1fb0:	a9 f7       	brne	.-22     	; 0x1f9c <__udivmodhi4_loop>
    1fb2:	80 95       	com	r24
    1fb4:	90 95       	com	r25
    1fb6:	bc 01       	movw	r22, r24
    1fb8:	cd 01       	movw	r24, r26
    1fba:	08 95       	ret

00001fbc <__divmodhi4>:
    1fbc:	97 fb       	bst	r25, 7
    1fbe:	07 2e       	mov	r0, r23
    1fc0:	16 f4       	brtc	.+4      	; 0x1fc6 <__divmodhi4+0xa>
    1fc2:	00 94       	com	r0
    1fc4:	07 d0       	rcall	.+14     	; 0x1fd4 <__divmodhi4_neg1>
    1fc6:	77 fd       	sbrc	r23, 7
    1fc8:	09 d0       	rcall	.+18     	; 0x1fdc <__divmodhi4_neg2>
    1fca:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <__udivmodhi4>
    1fce:	07 fc       	sbrc	r0, 7
    1fd0:	05 d0       	rcall	.+10     	; 0x1fdc <__divmodhi4_neg2>
    1fd2:	3e f4       	brtc	.+14     	; 0x1fe2 <__divmodhi4_exit>

00001fd4 <__divmodhi4_neg1>:
    1fd4:	90 95       	com	r25
    1fd6:	81 95       	neg	r24
    1fd8:	9f 4f       	sbci	r25, 0xFF	; 255
    1fda:	08 95       	ret

00001fdc <__divmodhi4_neg2>:
    1fdc:	70 95       	com	r23
    1fde:	61 95       	neg	r22
    1fe0:	7f 4f       	sbci	r23, 0xFF	; 255

00001fe2 <__divmodhi4_exit>:
    1fe2:	08 95       	ret

00001fe4 <__udivmodsi4>:
    1fe4:	a1 e2       	ldi	r26, 0x21	; 33
    1fe6:	1a 2e       	mov	r1, r26
    1fe8:	aa 1b       	sub	r26, r26
    1fea:	bb 1b       	sub	r27, r27
    1fec:	fd 01       	movw	r30, r26
    1fee:	0d c0       	rjmp	.+26     	; 0x200a <__udivmodsi4_ep>

00001ff0 <__udivmodsi4_loop>:
    1ff0:	aa 1f       	adc	r26, r26
    1ff2:	bb 1f       	adc	r27, r27
    1ff4:	ee 1f       	adc	r30, r30
    1ff6:	ff 1f       	adc	r31, r31
    1ff8:	a2 17       	cp	r26, r18
    1ffa:	b3 07       	cpc	r27, r19
    1ffc:	e4 07       	cpc	r30, r20
    1ffe:	f5 07       	cpc	r31, r21
    2000:	20 f0       	brcs	.+8      	; 0x200a <__udivmodsi4_ep>
    2002:	a2 1b       	sub	r26, r18
    2004:	b3 0b       	sbc	r27, r19
    2006:	e4 0b       	sbc	r30, r20
    2008:	f5 0b       	sbc	r31, r21

0000200a <__udivmodsi4_ep>:
    200a:	66 1f       	adc	r22, r22
    200c:	77 1f       	adc	r23, r23
    200e:	88 1f       	adc	r24, r24
    2010:	99 1f       	adc	r25, r25
    2012:	1a 94       	dec	r1
    2014:	69 f7       	brne	.-38     	; 0x1ff0 <__udivmodsi4_loop>
    2016:	60 95       	com	r22
    2018:	70 95       	com	r23
    201a:	80 95       	com	r24
    201c:	90 95       	com	r25
    201e:	9b 01       	movw	r18, r22
    2020:	ac 01       	movw	r20, r24
    2022:	bd 01       	movw	r22, r26
    2024:	cf 01       	movw	r24, r30
    2026:	08 95       	ret

00002028 <__divmodsi4>:
    2028:	05 2e       	mov	r0, r21
    202a:	97 fb       	bst	r25, 7
    202c:	1e f4       	brtc	.+6      	; 0x2034 <__divmodsi4+0xc>
    202e:	00 94       	com	r0
    2030:	0e 94 2b 10 	call	0x2056	; 0x2056 <__negsi2>
    2034:	57 fd       	sbrc	r21, 7
    2036:	07 d0       	rcall	.+14     	; 0x2046 <__divmodsi4_neg2>
    2038:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <__udivmodsi4>
    203c:	07 fc       	sbrc	r0, 7
    203e:	03 d0       	rcall	.+6      	; 0x2046 <__divmodsi4_neg2>
    2040:	4e f4       	brtc	.+18     	; 0x2054 <__divmodsi4_exit>
    2042:	0c 94 2b 10 	jmp	0x2056	; 0x2056 <__negsi2>

00002046 <__divmodsi4_neg2>:
    2046:	50 95       	com	r21
    2048:	40 95       	com	r20
    204a:	30 95       	com	r19
    204c:	21 95       	neg	r18
    204e:	3f 4f       	sbci	r19, 0xFF	; 255
    2050:	4f 4f       	sbci	r20, 0xFF	; 255
    2052:	5f 4f       	sbci	r21, 0xFF	; 255

00002054 <__divmodsi4_exit>:
    2054:	08 95       	ret

00002056 <__negsi2>:
    2056:	90 95       	com	r25
    2058:	80 95       	com	r24
    205a:	70 95       	com	r23
    205c:	61 95       	neg	r22
    205e:	7f 4f       	sbci	r23, 0xFF	; 255
    2060:	8f 4f       	sbci	r24, 0xFF	; 255
    2062:	9f 4f       	sbci	r25, 0xFF	; 255
    2064:	08 95       	ret

00002066 <__tablejump2__>:
    2066:	ee 0f       	add	r30, r30
    2068:	ff 1f       	adc	r31, r31
    206a:	05 90       	lpm	r0, Z+
    206c:	f4 91       	lpm	r31, Z
    206e:	e0 2d       	mov	r30, r0
    2070:	09 94       	ijmp

00002072 <__umulhisi3>:
    2072:	a2 9f       	mul	r26, r18
    2074:	b0 01       	movw	r22, r0
    2076:	b3 9f       	mul	r27, r19
    2078:	c0 01       	movw	r24, r0
    207a:	a3 9f       	mul	r26, r19
    207c:	70 0d       	add	r23, r0
    207e:	81 1d       	adc	r24, r1
    2080:	11 24       	eor	r1, r1
    2082:	91 1d       	adc	r25, r1
    2084:	b2 9f       	mul	r27, r18
    2086:	70 0d       	add	r23, r0
    2088:	81 1d       	adc	r24, r1
    208a:	11 24       	eor	r1, r1
    208c:	91 1d       	adc	r25, r1
    208e:	08 95       	ret

00002090 <__muluhisi3>:
    2090:	0e 94 39 10 	call	0x2072	; 0x2072 <__umulhisi3>
    2094:	a5 9f       	mul	r26, r21
    2096:	90 0d       	add	r25, r0
    2098:	b4 9f       	mul	r27, r20
    209a:	90 0d       	add	r25, r0
    209c:	a4 9f       	mul	r26, r20
    209e:	80 0d       	add	r24, r0
    20a0:	91 1d       	adc	r25, r1
    20a2:	11 24       	eor	r1, r1
    20a4:	08 95       	ret

000020a6 <__mulshisi3>:
    20a6:	b7 ff       	sbrs	r27, 7
    20a8:	0c 94 48 10 	jmp	0x2090	; 0x2090 <__muluhisi3>

000020ac <__mulohisi3>:
    20ac:	0e 94 48 10 	call	0x2090	; 0x2090 <__muluhisi3>
    20b0:	82 1b       	sub	r24, r18
    20b2:	93 0b       	sbc	r25, r19
    20b4:	08 95       	ret

000020b6 <__prologue_saves__>:
    20b6:	2f 92       	push	r2
    20b8:	3f 92       	push	r3
    20ba:	4f 92       	push	r4
    20bc:	5f 92       	push	r5
    20be:	6f 92       	push	r6
    20c0:	7f 92       	push	r7
    20c2:	8f 92       	push	r8
    20c4:	9f 92       	push	r9
    20c6:	af 92       	push	r10
    20c8:	bf 92       	push	r11
    20ca:	cf 92       	push	r12
    20cc:	df 92       	push	r13
    20ce:	ef 92       	push	r14
    20d0:	ff 92       	push	r15
    20d2:	0f 93       	push	r16
    20d4:	1f 93       	push	r17
    20d6:	cf 93       	push	r28
    20d8:	df 93       	push	r29
    20da:	cd b7       	in	r28, 0x3d	; 61
    20dc:	de b7       	in	r29, 0x3e	; 62
    20de:	ca 1b       	sub	r28, r26
    20e0:	db 0b       	sbc	r29, r27
    20e2:	0f b6       	in	r0, 0x3f	; 63
    20e4:	f8 94       	cli
    20e6:	de bf       	out	0x3e, r29	; 62
    20e8:	0f be       	out	0x3f, r0	; 63
    20ea:	cd bf       	out	0x3d, r28	; 61
    20ec:	09 94       	ijmp

000020ee <__epilogue_restores__>:
    20ee:	2a 88       	ldd	r2, Y+18	; 0x12
    20f0:	39 88       	ldd	r3, Y+17	; 0x11
    20f2:	48 88       	ldd	r4, Y+16	; 0x10
    20f4:	5f 84       	ldd	r5, Y+15	; 0x0f
    20f6:	6e 84       	ldd	r6, Y+14	; 0x0e
    20f8:	7d 84       	ldd	r7, Y+13	; 0x0d
    20fa:	8c 84       	ldd	r8, Y+12	; 0x0c
    20fc:	9b 84       	ldd	r9, Y+11	; 0x0b
    20fe:	aa 84       	ldd	r10, Y+10	; 0x0a
    2100:	b9 84       	ldd	r11, Y+9	; 0x09
    2102:	c8 84       	ldd	r12, Y+8	; 0x08
    2104:	df 80       	ldd	r13, Y+7	; 0x07
    2106:	ee 80       	ldd	r14, Y+6	; 0x06
    2108:	fd 80       	ldd	r15, Y+5	; 0x05
    210a:	0c 81       	ldd	r16, Y+4	; 0x04
    210c:	1b 81       	ldd	r17, Y+3	; 0x03
    210e:	aa 81       	ldd	r26, Y+2	; 0x02
    2110:	b9 81       	ldd	r27, Y+1	; 0x01
    2112:	ce 0f       	add	r28, r30
    2114:	d1 1d       	adc	r29, r1
    2116:	0f b6       	in	r0, 0x3f	; 63
    2118:	f8 94       	cli
    211a:	de bf       	out	0x3e, r29	; 62
    211c:	0f be       	out	0x3f, r0	; 63
    211e:	cd bf       	out	0x3d, r28	; 61
    2120:	ed 01       	movw	r28, r26
    2122:	08 95       	ret

00002124 <malloc>:
    2124:	0f 93       	push	r16
    2126:	1f 93       	push	r17
    2128:	cf 93       	push	r28
    212a:	df 93       	push	r29
    212c:	82 30       	cpi	r24, 0x02	; 2
    212e:	91 05       	cpc	r25, r1
    2130:	10 f4       	brcc	.+4      	; 0x2136 <malloc+0x12>
    2132:	82 e0       	ldi	r24, 0x02	; 2
    2134:	90 e0       	ldi	r25, 0x00	; 0
    2136:	e0 91 a7 01 	lds	r30, 0x01A7	; 0x8001a7 <__flp>
    213a:	f0 91 a8 01 	lds	r31, 0x01A8	; 0x8001a8 <__flp+0x1>
    213e:	20 e0       	ldi	r18, 0x00	; 0
    2140:	30 e0       	ldi	r19, 0x00	; 0
    2142:	a0 e0       	ldi	r26, 0x00	; 0
    2144:	b0 e0       	ldi	r27, 0x00	; 0
    2146:	30 97       	sbiw	r30, 0x00	; 0
    2148:	19 f1       	breq	.+70     	; 0x2190 <malloc+0x6c>
    214a:	40 81       	ld	r20, Z
    214c:	51 81       	ldd	r21, Z+1	; 0x01
    214e:	02 81       	ldd	r16, Z+2	; 0x02
    2150:	13 81       	ldd	r17, Z+3	; 0x03
    2152:	48 17       	cp	r20, r24
    2154:	59 07       	cpc	r21, r25
    2156:	c8 f0       	brcs	.+50     	; 0x218a <malloc+0x66>
    2158:	84 17       	cp	r24, r20
    215a:	95 07       	cpc	r25, r21
    215c:	69 f4       	brne	.+26     	; 0x2178 <malloc+0x54>
    215e:	10 97       	sbiw	r26, 0x00	; 0
    2160:	31 f0       	breq	.+12     	; 0x216e <malloc+0x4a>
    2162:	12 96       	adiw	r26, 0x02	; 2
    2164:	0c 93       	st	X, r16
    2166:	12 97       	sbiw	r26, 0x02	; 2
    2168:	13 96       	adiw	r26, 0x03	; 3
    216a:	1c 93       	st	X, r17
    216c:	27 c0       	rjmp	.+78     	; 0x21bc <malloc+0x98>
    216e:	00 93 a7 01 	sts	0x01A7, r16	; 0x8001a7 <__flp>
    2172:	10 93 a8 01 	sts	0x01A8, r17	; 0x8001a8 <__flp+0x1>
    2176:	22 c0       	rjmp	.+68     	; 0x21bc <malloc+0x98>
    2178:	21 15       	cp	r18, r1
    217a:	31 05       	cpc	r19, r1
    217c:	19 f0       	breq	.+6      	; 0x2184 <malloc+0x60>
    217e:	42 17       	cp	r20, r18
    2180:	53 07       	cpc	r21, r19
    2182:	18 f4       	brcc	.+6      	; 0x218a <malloc+0x66>
    2184:	9a 01       	movw	r18, r20
    2186:	bd 01       	movw	r22, r26
    2188:	ef 01       	movw	r28, r30
    218a:	df 01       	movw	r26, r30
    218c:	f8 01       	movw	r30, r16
    218e:	db cf       	rjmp	.-74     	; 0x2146 <malloc+0x22>
    2190:	21 15       	cp	r18, r1
    2192:	31 05       	cpc	r19, r1
    2194:	f9 f0       	breq	.+62     	; 0x21d4 <malloc+0xb0>
    2196:	28 1b       	sub	r18, r24
    2198:	39 0b       	sbc	r19, r25
    219a:	24 30       	cpi	r18, 0x04	; 4
    219c:	31 05       	cpc	r19, r1
    219e:	80 f4       	brcc	.+32     	; 0x21c0 <malloc+0x9c>
    21a0:	8a 81       	ldd	r24, Y+2	; 0x02
    21a2:	9b 81       	ldd	r25, Y+3	; 0x03
    21a4:	61 15       	cp	r22, r1
    21a6:	71 05       	cpc	r23, r1
    21a8:	21 f0       	breq	.+8      	; 0x21b2 <malloc+0x8e>
    21aa:	fb 01       	movw	r30, r22
    21ac:	93 83       	std	Z+3, r25	; 0x03
    21ae:	82 83       	std	Z+2, r24	; 0x02
    21b0:	04 c0       	rjmp	.+8      	; 0x21ba <malloc+0x96>
    21b2:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <__flp+0x1>
    21b6:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <__flp>
    21ba:	fe 01       	movw	r30, r28
    21bc:	32 96       	adiw	r30, 0x02	; 2
    21be:	44 c0       	rjmp	.+136    	; 0x2248 <malloc+0x124>
    21c0:	fe 01       	movw	r30, r28
    21c2:	e2 0f       	add	r30, r18
    21c4:	f3 1f       	adc	r31, r19
    21c6:	81 93       	st	Z+, r24
    21c8:	91 93       	st	Z+, r25
    21ca:	22 50       	subi	r18, 0x02	; 2
    21cc:	31 09       	sbc	r19, r1
    21ce:	39 83       	std	Y+1, r19	; 0x01
    21d0:	28 83       	st	Y, r18
    21d2:	3a c0       	rjmp	.+116    	; 0x2248 <malloc+0x124>
    21d4:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <__brkval>
    21d8:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <__brkval+0x1>
    21dc:	23 2b       	or	r18, r19
    21de:	41 f4       	brne	.+16     	; 0x21f0 <malloc+0xcc>
    21e0:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    21e4:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    21e8:	30 93 a6 01 	sts	0x01A6, r19	; 0x8001a6 <__brkval+0x1>
    21ec:	20 93 a5 01 	sts	0x01A5, r18	; 0x8001a5 <__brkval>
    21f0:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    21f4:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    21f8:	21 15       	cp	r18, r1
    21fa:	31 05       	cpc	r19, r1
    21fc:	41 f4       	brne	.+16     	; 0x220e <malloc+0xea>
    21fe:	2d b7       	in	r18, 0x3d	; 61
    2200:	3e b7       	in	r19, 0x3e	; 62
    2202:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    2206:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    220a:	24 1b       	sub	r18, r20
    220c:	35 0b       	sbc	r19, r21
    220e:	e0 91 a5 01 	lds	r30, 0x01A5	; 0x8001a5 <__brkval>
    2212:	f0 91 a6 01 	lds	r31, 0x01A6	; 0x8001a6 <__brkval+0x1>
    2216:	e2 17       	cp	r30, r18
    2218:	f3 07       	cpc	r31, r19
    221a:	a0 f4       	brcc	.+40     	; 0x2244 <malloc+0x120>
    221c:	2e 1b       	sub	r18, r30
    221e:	3f 0b       	sbc	r19, r31
    2220:	28 17       	cp	r18, r24
    2222:	39 07       	cpc	r19, r25
    2224:	78 f0       	brcs	.+30     	; 0x2244 <malloc+0x120>
    2226:	ac 01       	movw	r20, r24
    2228:	4e 5f       	subi	r20, 0xFE	; 254
    222a:	5f 4f       	sbci	r21, 0xFF	; 255
    222c:	24 17       	cp	r18, r20
    222e:	35 07       	cpc	r19, r21
    2230:	48 f0       	brcs	.+18     	; 0x2244 <malloc+0x120>
    2232:	4e 0f       	add	r20, r30
    2234:	5f 1f       	adc	r21, r31
    2236:	50 93 a6 01 	sts	0x01A6, r21	; 0x8001a6 <__brkval+0x1>
    223a:	40 93 a5 01 	sts	0x01A5, r20	; 0x8001a5 <__brkval>
    223e:	81 93       	st	Z+, r24
    2240:	91 93       	st	Z+, r25
    2242:	02 c0       	rjmp	.+4      	; 0x2248 <malloc+0x124>
    2244:	e0 e0       	ldi	r30, 0x00	; 0
    2246:	f0 e0       	ldi	r31, 0x00	; 0
    2248:	cf 01       	movw	r24, r30
    224a:	df 91       	pop	r29
    224c:	cf 91       	pop	r28
    224e:	1f 91       	pop	r17
    2250:	0f 91       	pop	r16
    2252:	08 95       	ret

00002254 <free>:
    2254:	cf 93       	push	r28
    2256:	df 93       	push	r29
    2258:	00 97       	sbiw	r24, 0x00	; 0
    225a:	09 f4       	brne	.+2      	; 0x225e <free+0xa>
    225c:	81 c0       	rjmp	.+258    	; 0x2360 <free+0x10c>
    225e:	fc 01       	movw	r30, r24
    2260:	32 97       	sbiw	r30, 0x02	; 2
    2262:	13 82       	std	Z+3, r1	; 0x03
    2264:	12 82       	std	Z+2, r1	; 0x02
    2266:	a0 91 a7 01 	lds	r26, 0x01A7	; 0x8001a7 <__flp>
    226a:	b0 91 a8 01 	lds	r27, 0x01A8	; 0x8001a8 <__flp+0x1>
    226e:	10 97       	sbiw	r26, 0x00	; 0
    2270:	81 f4       	brne	.+32     	; 0x2292 <free+0x3e>
    2272:	20 81       	ld	r18, Z
    2274:	31 81       	ldd	r19, Z+1	; 0x01
    2276:	82 0f       	add	r24, r18
    2278:	93 1f       	adc	r25, r19
    227a:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <__brkval>
    227e:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <__brkval+0x1>
    2282:	28 17       	cp	r18, r24
    2284:	39 07       	cpc	r19, r25
    2286:	51 f5       	brne	.+84     	; 0x22dc <free+0x88>
    2288:	f0 93 a6 01 	sts	0x01A6, r31	; 0x8001a6 <__brkval+0x1>
    228c:	e0 93 a5 01 	sts	0x01A5, r30	; 0x8001a5 <__brkval>
    2290:	67 c0       	rjmp	.+206    	; 0x2360 <free+0x10c>
    2292:	ed 01       	movw	r28, r26
    2294:	20 e0       	ldi	r18, 0x00	; 0
    2296:	30 e0       	ldi	r19, 0x00	; 0
    2298:	ce 17       	cp	r28, r30
    229a:	df 07       	cpc	r29, r31
    229c:	40 f4       	brcc	.+16     	; 0x22ae <free+0x5a>
    229e:	4a 81       	ldd	r20, Y+2	; 0x02
    22a0:	5b 81       	ldd	r21, Y+3	; 0x03
    22a2:	9e 01       	movw	r18, r28
    22a4:	41 15       	cp	r20, r1
    22a6:	51 05       	cpc	r21, r1
    22a8:	f1 f0       	breq	.+60     	; 0x22e6 <free+0x92>
    22aa:	ea 01       	movw	r28, r20
    22ac:	f5 cf       	rjmp	.-22     	; 0x2298 <free+0x44>
    22ae:	d3 83       	std	Z+3, r29	; 0x03
    22b0:	c2 83       	std	Z+2, r28	; 0x02
    22b2:	40 81       	ld	r20, Z
    22b4:	51 81       	ldd	r21, Z+1	; 0x01
    22b6:	84 0f       	add	r24, r20
    22b8:	95 1f       	adc	r25, r21
    22ba:	c8 17       	cp	r28, r24
    22bc:	d9 07       	cpc	r29, r25
    22be:	59 f4       	brne	.+22     	; 0x22d6 <free+0x82>
    22c0:	88 81       	ld	r24, Y
    22c2:	99 81       	ldd	r25, Y+1	; 0x01
    22c4:	84 0f       	add	r24, r20
    22c6:	95 1f       	adc	r25, r21
    22c8:	02 96       	adiw	r24, 0x02	; 2
    22ca:	91 83       	std	Z+1, r25	; 0x01
    22cc:	80 83       	st	Z, r24
    22ce:	8a 81       	ldd	r24, Y+2	; 0x02
    22d0:	9b 81       	ldd	r25, Y+3	; 0x03
    22d2:	93 83       	std	Z+3, r25	; 0x03
    22d4:	82 83       	std	Z+2, r24	; 0x02
    22d6:	21 15       	cp	r18, r1
    22d8:	31 05       	cpc	r19, r1
    22da:	29 f4       	brne	.+10     	; 0x22e6 <free+0x92>
    22dc:	f0 93 a8 01 	sts	0x01A8, r31	; 0x8001a8 <__flp+0x1>
    22e0:	e0 93 a7 01 	sts	0x01A7, r30	; 0x8001a7 <__flp>
    22e4:	3d c0       	rjmp	.+122    	; 0x2360 <free+0x10c>
    22e6:	e9 01       	movw	r28, r18
    22e8:	fb 83       	std	Y+3, r31	; 0x03
    22ea:	ea 83       	std	Y+2, r30	; 0x02
    22ec:	49 91       	ld	r20, Y+
    22ee:	59 91       	ld	r21, Y+
    22f0:	c4 0f       	add	r28, r20
    22f2:	d5 1f       	adc	r29, r21
    22f4:	ec 17       	cp	r30, r28
    22f6:	fd 07       	cpc	r31, r29
    22f8:	61 f4       	brne	.+24     	; 0x2312 <free+0xbe>
    22fa:	80 81       	ld	r24, Z
    22fc:	91 81       	ldd	r25, Z+1	; 0x01
    22fe:	84 0f       	add	r24, r20
    2300:	95 1f       	adc	r25, r21
    2302:	02 96       	adiw	r24, 0x02	; 2
    2304:	e9 01       	movw	r28, r18
    2306:	99 83       	std	Y+1, r25	; 0x01
    2308:	88 83       	st	Y, r24
    230a:	82 81       	ldd	r24, Z+2	; 0x02
    230c:	93 81       	ldd	r25, Z+3	; 0x03
    230e:	9b 83       	std	Y+3, r25	; 0x03
    2310:	8a 83       	std	Y+2, r24	; 0x02
    2312:	e0 e0       	ldi	r30, 0x00	; 0
    2314:	f0 e0       	ldi	r31, 0x00	; 0
    2316:	12 96       	adiw	r26, 0x02	; 2
    2318:	8d 91       	ld	r24, X+
    231a:	9c 91       	ld	r25, X
    231c:	13 97       	sbiw	r26, 0x03	; 3
    231e:	00 97       	sbiw	r24, 0x00	; 0
    2320:	19 f0       	breq	.+6      	; 0x2328 <free+0xd4>
    2322:	fd 01       	movw	r30, r26
    2324:	dc 01       	movw	r26, r24
    2326:	f7 cf       	rjmp	.-18     	; 0x2316 <free+0xc2>
    2328:	8d 91       	ld	r24, X+
    232a:	9c 91       	ld	r25, X
    232c:	11 97       	sbiw	r26, 0x01	; 1
    232e:	9d 01       	movw	r18, r26
    2330:	2e 5f       	subi	r18, 0xFE	; 254
    2332:	3f 4f       	sbci	r19, 0xFF	; 255
    2334:	82 0f       	add	r24, r18
    2336:	93 1f       	adc	r25, r19
    2338:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <__brkval>
    233c:	30 91 a6 01 	lds	r19, 0x01A6	; 0x8001a6 <__brkval+0x1>
    2340:	28 17       	cp	r18, r24
    2342:	39 07       	cpc	r19, r25
    2344:	69 f4       	brne	.+26     	; 0x2360 <free+0x10c>
    2346:	30 97       	sbiw	r30, 0x00	; 0
    2348:	29 f4       	brne	.+10     	; 0x2354 <free+0x100>
    234a:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <__flp+0x1>
    234e:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <__flp>
    2352:	02 c0       	rjmp	.+4      	; 0x2358 <free+0x104>
    2354:	13 82       	std	Z+3, r1	; 0x03
    2356:	12 82       	std	Z+2, r1	; 0x02
    2358:	b0 93 a6 01 	sts	0x01A6, r27	; 0x8001a6 <__brkval+0x1>
    235c:	a0 93 a5 01 	sts	0x01A5, r26	; 0x8001a5 <__brkval>
    2360:	df 91       	pop	r29
    2362:	cf 91       	pop	r28
    2364:	08 95       	ret

00002366 <__do_global_dtors>:
    2366:	10 e0       	ldi	r17, 0x00	; 0
    2368:	c4 e3       	ldi	r28, 0x34	; 52
    236a:	d0 e0       	ldi	r29, 0x00	; 0
    236c:	04 c0       	rjmp	.+8      	; 0x2376 <__do_global_dtors+0x10>
    236e:	fe 01       	movw	r30, r28
    2370:	0e 94 33 10 	call	0x2066	; 0x2066 <__tablejump2__>
    2374:	21 96       	adiw	r28, 0x01	; 1
    2376:	c5 33       	cpi	r28, 0x35	; 53
    2378:	d1 07       	cpc	r29, r17
    237a:	c9 f7       	brne	.-14     	; 0x236e <__do_global_dtors+0x8>
    237c:	f8 94       	cli

0000237e <__stop_program>:
    237e:	ff cf       	rjmp	.-2      	; 0x237e <__stop_program>
