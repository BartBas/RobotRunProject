
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00002612  000026a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002612  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000071  0080013a  0080013a  000026e0  2**0
                  ALLOC
  3 .stab         000059c4  00000000  00000000  000026e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000084be  00000000  00000000  000080a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  00010562  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000105a4  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000130  00000000  00000000  000105e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00001d62  00000000  00000000  00010714  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000d56  00000000  00000000  00012476  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   000013d8  00000000  00000000  000131cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000348  00000000  00000000  000145a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0000075e  00000000  00000000  000148ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00000b03  00000000  00000000  0001504a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000128  00000000  00000000  00015b4d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__dtors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 47 0b 	jmp	0x168e	; 0x168e <__vector_9>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	13 03       	mulsu	r17, r19
      6a:	17 03       	mulsu	r17, r23
      6c:	6d 03       	fmul	r22, r21
      6e:	02 03       	mulsu	r16, r18
      70:	09 03       	fmul	r16, r17
      72:	10 03       	mulsu	r17, r16
      74:	02 03       	mulsu	r16, r18
      76:	02 03       	mulsu	r16, r18
      78:	02 03       	mulsu	r16, r18

0000007a <__ctors_end>:
      7a:	0b 0c       	add	r0, r11

0000007c <__dtors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d8 e0       	ldi	r29, 0x08	; 8
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	11 e0       	ldi	r17, 0x01	; 1
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	e2 e1       	ldi	r30, 0x12	; 18
      90:	f6 e2       	ldi	r31, 0x26	; 38
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	aa 33       	cpi	r26, 0x3A	; 58
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	21 e0       	ldi	r18, 0x01	; 1
      a0:	aa e3       	ldi	r26, 0x3A	; 58
      a2:	b1 e0       	ldi	r27, 0x01	; 1
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	ab 3a       	cpi	r26, 0xAB	; 171
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <main>
      b2:	0c 94 fc 12 	jmp	0x25f8	; 0x25f8 <__do_global_dtors>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <batteryPercentage>:

#include "display.h"
#include <pololu/3pi.h>

float batteryPercentage()//Should this function be in main or in display.c or something else?
{
      ba:	cf 92       	push	r12
      bc:	df 92       	push	r13
      be:	ef 92       	push	r14
      c0:	ff 92       	push	r15
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
      c2:	0e 94 bb 08 	call	0x1176	; 0x1176 <read_battery_millivolts_3pi>
	
	float milliVolts = read_battery_millivolts();
      c6:	bc 01       	movw	r22, r24
      c8:	80 e0       	ldi	r24, 0x00	; 0
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	0e 94 ef 06 	call	0xdde	; 0xdde <__floatunsisf>
      d0:	6b 01       	movw	r12, r22
      d2:	7c 01       	movw	r14, r24
	float batteryPercent = 0.000000000632*((milliVolts)*(milliVolts)*(milliVolts));
      d4:	9b 01       	movw	r18, r22
      d6:	ac 01       	movw	r20, r24
      d8:	0e 94 7d 07 	call	0xefa	; 0xefa <__mulsf3>
      dc:	9b 01       	movw	r18, r22
      de:	ac 01       	movw	r20, r24
      e0:	c7 01       	movw	r24, r14
      e2:	b6 01       	movw	r22, r12
      e4:	0e 94 7d 07 	call	0xefa	; 0xefa <__mulsf3>
      e8:	2c e0       	ldi	r18, 0x0C	; 12
      ea:	39 eb       	ldi	r19, 0xB9	; 185
      ec:	4d e2       	ldi	r20, 0x2D	; 45
      ee:	50 e3       	ldi	r21, 0x30	; 48
      f0:	0e 94 7d 07 	call	0xefa	; 0xefa <__mulsf3>
	return batteryPercent;
}
      f4:	ff 90       	pop	r15
      f6:	ef 90       	pop	r14
      f8:	df 90       	pop	r13
      fa:	cf 90       	pop	r12
      fc:	08 95       	ret

000000fe <updateDisplay>:

void updateDisplay(int orderPercent, int batteryPercent, robotStates currentState)
{
      fe:	ef 92       	push	r14
     100:	ff 92       	push	r15
     102:	0f 93       	push	r16
     104:	1f 93       	push	r17
     106:	cf 93       	push	r28
     108:	7c 01       	movw	r14, r24
     10a:	8b 01       	movw	r16, r22
     10c:	c4 2f       	mov	r28, r20
	clear();
     10e:	0e 94 c4 09 	call	0x1388	; 0x1388 <clear>
	lcd_goto_xy(0,0);
     112:	60 e0       	ldi	r22, 0x00	; 0
     114:	80 e0       	ldi	r24, 0x00	; 0
     116:	0e 94 4b 0a 	call	0x1496	; 0x1496 <lcd_goto_xy>
	print("Job:");
     11a:	83 e2       	ldi	r24, 0x23	; 35
     11c:	91 e0       	ldi	r25, 0x01	; 1
     11e:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <print>
	print_long(orderPercent);
     122:	b7 01       	movw	r22, r14
     124:	ff 0c       	add	r15, r15
     126:	88 0b       	sbc	r24, r24
     128:	99 0b       	sbc	r25, r25
     12a:	0e 94 28 0a 	call	0x1450	; 0x1450 <print_long>
	print("%");
     12e:	88 e2       	ldi	r24, 0x28	; 40
     130:	91 e0       	ldi	r25, 0x01	; 1
     132:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <print>
	
	lcd_goto_xy(0,1);
     136:	61 e0       	ldi	r22, 0x01	; 1
     138:	80 e0       	ldi	r24, 0x00	; 0
     13a:	0e 94 4b 0a 	call	0x1496	; 0x1496 <lcd_goto_xy>
	print("Bat:");
     13e:	8a e2       	ldi	r24, 0x2A	; 42
     140:	91 e0       	ldi	r25, 0x01	; 1
     142:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <print>
	print_long(batteryPercent);
     146:	b8 01       	movw	r22, r16
     148:	11 0f       	add	r17, r17
     14a:	88 0b       	sbc	r24, r24
     14c:	99 0b       	sbc	r25, r25
     14e:	0e 94 28 0a 	call	0x1450	; 0x1450 <print_long>
	print("%");
     152:	88 e2       	ldi	r24, 0x28	; 40
     154:	91 e0       	ldi	r25, 0x01	; 1
     156:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <print>
	switch(currentState)
     15a:	c2 30       	cpi	r28, 0x02	; 2
     15c:	a9 f0       	breq	.+42     	; 0x188 <updateDisplay+0x8a>
     15e:	28 f4       	brcc	.+10     	; 0x16a <updateDisplay+0x6c>
     160:	cc 23       	and	r28, r28
     162:	41 f0       	breq	.+16     	; 0x174 <updateDisplay+0x76>
     164:	c1 30       	cpi	r28, 0x01	; 1
     166:	59 f0       	breq	.+22     	; 0x17e <updateDisplay+0x80>
     168:	1d c0       	rjmp	.+58     	; 0x1a4 <updateDisplay+0xa6>
     16a:	c3 30       	cpi	r28, 0x03	; 3
     16c:	91 f0       	breq	.+36     	; 0x192 <updateDisplay+0x94>
     16e:	c4 30       	cpi	r28, 0x04	; 4
     170:	a9 f0       	breq	.+42     	; 0x19c <updateDisplay+0x9e>
     172:	18 c0       	rjmp	.+48     	; 0x1a4 <updateDisplay+0xa6>
	{
		case manual:
		print("M");//M for Manual
     174:	8f e2       	ldi	r24, 0x2F	; 47
     176:	91 e0       	ldi	r25, 0x01	; 1
     178:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <print>
		break;
     17c:	13 c0       	rjmp	.+38     	; 0x1a4 <updateDisplay+0xa6>
		case mazeSolver:
		print("P");//P for Parcours
     17e:	81 e3       	ldi	r24, 0x31	; 49
     180:	91 e0       	ldi	r25, 0x01	; 1
     182:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <print>
		break;
     186:	0e c0       	rjmp	.+28     	; 0x1a4 <updateDisplay+0xa6>
		case logicsBot:
		print("O");//O for Order
     188:	83 e3       	ldi	r24, 0x33	; 51
     18a:	91 e0       	ldi	r25, 0x01	; 1
     18c:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <print>
		break;
     190:	09 c0       	rjmp	.+18     	; 0x1a4 <updateDisplay+0xa6>
		case chargeMode:
		print("C");//C for Charge
     192:	85 e3       	ldi	r24, 0x35	; 53
     194:	91 e0       	ldi	r25, 0x01	; 1
     196:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <print>
		break;
     19a:	04 c0       	rjmp	.+8      	; 0x1a4 <updateDisplay+0xa6>
		case homingMode:
		print("H");//H for Homing
     19c:	87 e3       	ldi	r24, 0x37	; 55
     19e:	91 e0       	ldi	r25, 0x01	; 1
     1a0:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <print>
		break;
	}
}
     1a4:	cf 91       	pop	r28
     1a6:	1f 91       	pop	r17
     1a8:	0f 91       	pop	r16
     1aa:	ff 90       	pop	r15
     1ac:	ef 90       	pop	r14
     1ae:	08 95       	ret

000001b0 <main>:
#include <pololu/3pi.h>
#include <avr/pgmspace.h>


int main()
{
     1b0:	cf 93       	push	r28
     1b2:	df 93       	push	r29
     1b4:	cd b7       	in	r28, 0x3d	; 61
     1b6:	de b7       	in	r29, 0x3e	; 62
     1b8:	64 97       	sbiw	r28, 0x14	; 20
     1ba:	0f b6       	in	r0, 0x3f	; 63
     1bc:	f8 94       	cli
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	0f be       	out	0x3f, r0	; 63
     1c2:	cd bf       	out	0x3d, r28	; 61
	clear();
     1c4:	0e 94 c4 09 	call	0x1388	; 0x1388 <clear>
	pololu_3pi_init(2000);
     1c8:	80 ed       	ldi	r24, 0xD0	; 208
     1ca:	97 e0       	ldi	r25, 0x07	; 7
     1cc:	0e 94 07 0c 	call	0x180e	; 0x180e <pololu_3pi_init>
	initialize();
     1d0:	0e 94 fd 00 	call	0x1fa	; 0x1fa <initialize>
	
	
	
	char parecour[20];
	parcour(parecour);
     1d4:	ce 01       	movw	r24, r28
     1d6:	01 96       	adiw	r24, 0x01	; 1
     1d8:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <parcour>
	print(parecour);
     1dc:	ce 01       	movw	r24, r28
     1de:	01 96       	adiw	r24, 0x01	; 1
     1e0:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <print>
	
	
	
	
     1e4:	80 e0       	ldi	r24, 0x00	; 0
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	64 96       	adiw	r28, 0x14	; 20
     1ea:	0f b6       	in	r0, 0x3f	; 63
     1ec:	f8 94       	cli
     1ee:	de bf       	out	0x3e, r29	; 62
     1f0:	0f be       	out	0x3f, r0	; 63
     1f2:	cd bf       	out	0x3d, r28	; 61
     1f4:	df 91       	pop	r29
     1f6:	cf 91       	pop	r28
     1f8:	08 95       	ret

000001fa <initialize>:
     1fa:	cf 93       	push	r28
     1fc:	df 93       	push	r29
     1fe:	80 ed       	ldi	r24, 0xD0	; 208
     200:	97 e0       	ldi	r25, 0x07	; 7
     202:	0e 94 07 0c 	call	0x180e	; 0x180e <pololu_3pi_init>
     206:	80 e1       	ldi	r24, 0x10	; 16
     208:	0e 94 44 0b 	call	0x1688	; 0x1688 <button_is_pressed>
     20c:	88 23       	and	r24, r24
     20e:	d9 f3       	breq	.-10     	; 0x206 <initialize+0xc>
     210:	80 e1       	ldi	r24, 0x10	; 16
     212:	0e 94 30 0b 	call	0x1660	; 0x1660 <wait_for_button_release>
     216:	88 ee       	ldi	r24, 0xE8	; 232
     218:	93 e0       	ldi	r25, 0x03	; 3
     21a:	0e 94 8f 0b 	call	0x171e	; 0x171e <delay_ms>
     21e:	c0 e0       	ldi	r28, 0x00	; 0
     220:	d0 e0       	ldi	r29, 0x00	; 0
     222:	19 c0       	rjmp	.+50     	; 0x256 <initialize+0x5c>
     224:	ce 01       	movw	r24, r28
     226:	44 97       	sbiw	r24, 0x14	; 20
     228:	88 97       	sbiw	r24, 0x28	; 40
     22a:	38 f0       	brcs	.+14     	; 0x23a <initialize+0x40>
     22c:	68 ed       	ldi	r22, 0xD8	; 216
     22e:	7f ef       	ldi	r23, 0xFF	; 255
     230:	88 e2       	ldi	r24, 0x28	; 40
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
     238:	06 c0       	rjmp	.+12     	; 0x246 <initialize+0x4c>
     23a:	68 e2       	ldi	r22, 0x28	; 40
     23c:	70 e0       	ldi	r23, 0x00	; 0
     23e:	88 ed       	ldi	r24, 0xD8	; 216
     240:	9f ef       	ldi	r25, 0xFF	; 255
     242:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
     246:	81 e0       	ldi	r24, 0x01	; 1
     248:	0e 94 cb 0b 	call	0x1796	; 0x1796 <calibrate_line_sensors>
     24c:	84 e1       	ldi	r24, 0x14	; 20
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	0e 94 8f 0b 	call	0x171e	; 0x171e <delay_ms>
     254:	21 96       	adiw	r28, 0x01	; 1
     256:	c0 35       	cpi	r28, 0x50	; 80
     258:	d1 05       	cpc	r29, r1
     25a:	20 f3       	brcs	.-56     	; 0x224 <initialize+0x2a>
     25c:	60 e0       	ldi	r22, 0x00	; 0
     25e:	70 e0       	ldi	r23, 0x00	; 0
     260:	80 e0       	ldi	r24, 0x00	; 0
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
     268:	80 e1       	ldi	r24, 0x10	; 16
     26a:	0e 94 44 0b 	call	0x1688	; 0x1688 <button_is_pressed>
     26e:	88 23       	and	r24, r24
     270:	d9 f3       	breq	.-10     	; 0x268 <initialize+0x6e>
     272:	80 e1       	ldi	r24, 0x10	; 16
     274:	0e 94 30 0b 	call	0x1660	; 0x1660 <wait_for_button_release>
     278:	0e 94 c4 09 	call	0x1388	; 0x1388 <clear>
     27c:	df 91       	pop	r29
     27e:	cf 91       	pop	r28
     280:	08 95       	ret

00000282 <inch>:
     282:	62 e3       	ldi	r22, 0x32	; 50
     284:	70 e0       	ldi	r23, 0x00	; 0
     286:	82 e3       	ldi	r24, 0x32	; 50
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     28e:	88 ec       	ldi	r24, 0xC8	; 200
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	0e 94 8f 0b 	call	0x171e	; 0x171e <delay_ms>
     296:	60 e0       	ldi	r22, 0x00	; 0
     298:	70 e0       	ldi	r23, 0x00	; 0
     29a:	80 e0       	ldi	r24, 0x00	; 0
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
     2a2:	08 95       	ret

000002a4 <motorControl>:
     2a4:	cf 93       	push	r28
     2a6:	df 93       	push	r29
     2a8:	c8 2f       	mov	r28, r24
     2aa:	61 e0       	ldi	r22, 0x01	; 1
     2ac:	8c e9       	ldi	r24, 0x9C	; 156
     2ae:	91 e0       	ldi	r25, 0x01	; 1
     2b0:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <read_line>
     2b4:	ce 34       	cpi	r28, 0x4E	; 78
     2b6:	39 f4       	brne	.+14     	; 0x2c6 <motorControl+0x22>
     2b8:	60 e0       	ldi	r22, 0x00	; 0
     2ba:	70 e0       	ldi	r23, 0x00	; 0
     2bc:	80 e0       	ldi	r24, 0x00	; 0
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
     2c4:	c3 c0       	rjmp	.+390    	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     2c6:	cc 34       	cpi	r28, 0x4C	; 76
     2c8:	09 f5       	brne	.+66     	; 0x30c <motorControl+0x68>
     2ca:	62 e3       	ldi	r22, 0x32	; 50
     2cc:	70 e0       	ldi	r23, 0x00	; 0
     2ce:	8e ec       	ldi	r24, 0xCE	; 206
     2d0:	9f ef       	ldi	r25, 0xFF	; 255
     2d2:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
     2d6:	05 c0       	rjmp	.+10     	; 0x2e2 <motorControl+0x3e>
     2d8:	61 e0       	ldi	r22, 0x01	; 1
     2da:	8c e9       	ldi	r24, 0x9C	; 156
     2dc:	91 e0       	ldi	r25, 0x01	; 1
     2de:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <read_line>
     2e2:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     2e6:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     2ea:	84 3f       	cpi	r24, 0xF4	; 244
     2ec:	91 40       	sbci	r25, 0x01	; 1
     2ee:	a0 f7       	brcc	.-24     	; 0x2d8 <motorControl+0x34>
     2f0:	05 c0       	rjmp	.+10     	; 0x2fc <motorControl+0x58>
     2f2:	61 e0       	ldi	r22, 0x01	; 1
     2f4:	8c e9       	ldi	r24, 0x9C	; 156
     2f6:	91 e0       	ldi	r25, 0x01	; 1
     2f8:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <read_line>
     2fc:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     300:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     304:	85 3f       	cpi	r24, 0xF5	; 245
     306:	91 40       	sbci	r25, 0x01	; 1
     308:	a0 f3       	brcs	.-24     	; 0x2f2 <motorControl+0x4e>
     30a:	a0 c0       	rjmp	.+320    	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     30c:	c2 35       	cpi	r28, 0x52	; 82
     30e:	09 f5       	brne	.+66     	; 0x352 <motorControl+0xae>
     310:	6e ec       	ldi	r22, 0xCE	; 206
     312:	7f ef       	ldi	r23, 0xFF	; 255
     314:	82 e3       	ldi	r24, 0x32	; 50
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
     31c:	05 c0       	rjmp	.+10     	; 0x328 <motorControl+0x84>
     31e:	61 e0       	ldi	r22, 0x01	; 1
     320:	8c e9       	ldi	r24, 0x9C	; 156
     322:	91 e0       	ldi	r25, 0x01	; 1
     324:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <read_line>
     328:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     32c:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     330:	84 3f       	cpi	r24, 0xF4	; 244
     332:	91 40       	sbci	r25, 0x01	; 1
     334:	a0 f7       	brcc	.-24     	; 0x31e <motorControl+0x7a>
     336:	05 c0       	rjmp	.+10     	; 0x342 <motorControl+0x9e>
     338:	61 e0       	ldi	r22, 0x01	; 1
     33a:	8c e9       	ldi	r24, 0x9C	; 156
     33c:	91 e0       	ldi	r25, 0x01	; 1
     33e:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <read_line>
     342:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     346:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     34a:	85 3f       	cpi	r24, 0xF5	; 245
     34c:	91 40       	sbci	r25, 0x01	; 1
     34e:	a0 f3       	brcs	.-24     	; 0x338 <motorControl+0x94>
     350:	7d c0       	rjmp	.+250    	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     352:	c3 35       	cpi	r28, 0x53	; 83
     354:	89 f5       	brne	.+98     	; 0x3b8 <motorControl+0x114>
     356:	62 e3       	ldi	r22, 0x32	; 50
     358:	70 e0       	ldi	r23, 0x00	; 0
     35a:	82 e3       	ldi	r24, 0x32	; 50
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
     362:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <sensors+0x6>
     366:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <sensors+0x7>
     36a:	84 3f       	cpi	r24, 0xF4	; 244
     36c:	91 40       	sbci	r25, 0x01	; 1
     36e:	68 f0       	brcs	.+26     	; 0x38a <motorControl+0xe6>
     370:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <sensors+0x8>
     374:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <sensors+0x9>
     378:	8d 32       	cpi	r24, 0x2D	; 45
     37a:	91 40       	sbci	r25, 0x01	; 1
     37c:	30 f4       	brcc	.+12     	; 0x38a <motorControl+0xe6>
     37e:	6e e1       	ldi	r22, 0x1E	; 30
     380:	70 e0       	ldi	r23, 0x00	; 0
     382:	82 e3       	ldi	r24, 0x32	; 50
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
     38a:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x2>
     38e:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x3>
     392:	84 3f       	cpi	r24, 0xF4	; 244
     394:	91 40       	sbci	r25, 0x01	; 1
     396:	08 f4       	brcc	.+2      	; 0x39a <motorControl+0xf6>
     398:	59 c0       	rjmp	.+178    	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     39a:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors>
     39e:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x1>
     3a2:	8d 32       	cpi	r24, 0x2D	; 45
     3a4:	91 40       	sbci	r25, 0x01	; 1
     3a6:	08 f0       	brcs	.+2      	; 0x3aa <motorControl+0x106>
     3a8:	51 c0       	rjmp	.+162    	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     3aa:	62 e3       	ldi	r22, 0x32	; 50
     3ac:	70 e0       	ldi	r23, 0x00	; 0
     3ae:	8e e1       	ldi	r24, 0x1E	; 30
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
     3b6:	4a c0       	rjmp	.+148    	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     3b8:	c2 34       	cpi	r28, 0x42	; 66
     3ba:	09 f5       	brne	.+66     	; 0x3fe <motorControl+0x15a>
     3bc:	6e ec       	ldi	r22, 0xCE	; 206
     3be:	7f ef       	ldi	r23, 0xFF	; 255
     3c0:	8e ec       	ldi	r24, 0xCE	; 206
     3c2:	9f ef       	ldi	r25, 0xFF	; 255
     3c4:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
     3c8:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <sensors+0x6>
     3cc:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <sensors+0x7>
     3d0:	80 39       	cpi	r24, 0x90	; 144
     3d2:	91 40       	sbci	r25, 0x01	; 1
     3d4:	30 f0       	brcs	.+12     	; 0x3e2 <motorControl+0x13e>
     3d6:	69 ec       	ldi	r22, 0xC9	; 201
     3d8:	7f ef       	ldi	r23, 0xFF	; 255
     3da:	8e ec       	ldi	r24, 0xCE	; 206
     3dc:	9f ef       	ldi	r25, 0xFF	; 255
     3de:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
     3e2:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x2>
     3e6:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x3>
     3ea:	80 39       	cpi	r24, 0x90	; 144
     3ec:	91 40       	sbci	r25, 0x01	; 1
     3ee:	70 f1       	brcs	.+92     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     3f0:	6e ec       	ldi	r22, 0xCE	; 206
     3f2:	7f ef       	ldi	r23, 0xFF	; 255
     3f4:	89 ec       	ldi	r24, 0xC9	; 201
     3f6:	9f ef       	ldi	r25, 0xFF	; 255
     3f8:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
     3fc:	27 c0       	rjmp	.+78     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     3fe:	c4 35       	cpi	r28, 0x54	; 84
     400:	a1 f4       	brne	.+40     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
     402:	6b e4       	ldi	r22, 0x4B	; 75
     404:	70 e0       	ldi	r23, 0x00	; 0
     406:	85 eb       	ldi	r24, 0xB5	; 181
     408:	9f ef       	ldi	r25, 0xFF	; 255
     40a:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
     40e:	05 c0       	rjmp	.+10     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     410:	61 e0       	ldi	r22, 0x01	; 1
     412:	8c e9       	ldi	r24, 0x9C	; 156
     414:	91 e0       	ldi	r25, 0x01	; 1
     416:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <read_line>
     41a:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     41e:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     422:	84 3f       	cpi	r24, 0xF4	; 244
     424:	91 40       	sbci	r25, 0x01	; 1
     426:	a0 f7       	brcc	.-24     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
     428:	11 c0       	rjmp	.+34     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     42a:	c0 35       	cpi	r28, 0x50	; 80
     42c:	79 f4       	brne	.+30     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     42e:	0a c0       	rjmp	.+20     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
     430:	be 01       	movw	r22, r28
     432:	ce 01       	movw	r24, r28
     434:	0e 94 01 0b 	call	0x1602	; 0x1602 <set_motors>
     438:	85 e0       	ldi	r24, 0x05	; 5
     43a:	90 e0       	ldi	r25, 0x00	; 0
     43c:	0e 94 8f 0b 	call	0x171e	; 0x171e <delay_ms>
     440:	22 97       	sbiw	r28, 0x02	; 2
     442:	02 c0       	rjmp	.+4      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
     444:	c2 e3       	ldi	r28, 0x32	; 50
     446:	d0 e0       	ldi	r29, 0x00	; 0
     448:	dd 23       	and	r29, r29
     44a:	94 f7       	brge	.-28     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
     44c:	df 91       	pop	r29
     44e:	cf 91       	pop	r28
     450:	08 95       	ret

00000452 <lineType>:
     452:	61 e0       	ldi	r22, 0x01	; 1
     454:	8c e9       	ldi	r24, 0x9C	; 156
     456:	91 e0       	ldi	r25, 0x01	; 1
     458:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <read_line>
     45c:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x2>
     460:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x3>
     464:	84 3f       	cpi	r24, 0xF4	; 244
     466:	21 e0       	ldi	r18, 0x01	; 1
     468:	92 07       	cpc	r25, r18
     46a:	c0 f0       	brcs	.+48     	; 0x49c <lineType+0x4a>
     46c:	20 91 a2 01 	lds	r18, 0x01A2	; 0x8001a2 <sensors+0x6>
     470:	30 91 a3 01 	lds	r19, 0x01A3	; 0x8001a3 <sensors+0x7>
     474:	24 3f       	cpi	r18, 0xF4	; 244
     476:	31 40       	sbci	r19, 0x01	; 1
     478:	88 f0       	brcs	.+34     	; 0x49c <lineType+0x4a>
     47a:	0e 94 41 01 	call	0x282	; 0x282 <inch>
     47e:	61 e0       	ldi	r22, 0x01	; 1
     480:	8c e9       	ldi	r24, 0x9C	; 156
     482:	91 e0       	ldi	r25, 0x01	; 1
     484:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <read_line>
     488:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     48c:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     490:	84 3f       	cpi	r24, 0xF4	; 244
     492:	91 40       	sbci	r25, 0x01	; 1
     494:	08 f4       	brcc	.+2      	; 0x498 <lineType+0x46>
     496:	90 c0       	rjmp	.+288    	; 0x5b8 <lineType+0x166>
     498:	88 e0       	ldi	r24, 0x08	; 8
     49a:	08 95       	ret
     49c:	84 3f       	cpi	r24, 0xF4	; 244
     49e:	21 e0       	ldi	r18, 0x01	; 1
     4a0:	92 07       	cpc	r25, r18
     4a2:	00 f1       	brcs	.+64     	; 0x4e4 <lineType+0x92>
     4a4:	20 91 9c 01 	lds	r18, 0x019C	; 0x80019c <sensors>
     4a8:	30 91 9d 01 	lds	r19, 0x019D	; 0x80019d <sensors+0x1>
     4ac:	24 3f       	cpi	r18, 0xF4	; 244
     4ae:	31 40       	sbci	r19, 0x01	; 1
     4b0:	c8 f0       	brcs	.+50     	; 0x4e4 <lineType+0x92>
     4b2:	0e 94 41 01 	call	0x282	; 0x282 <inch>
     4b6:	61 e0       	ldi	r22, 0x01	; 1
     4b8:	8c e9       	ldi	r24, 0x9C	; 156
     4ba:	91 e0       	ldi	r25, 0x01	; 1
     4bc:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <read_line>
     4c0:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     4c4:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     4c8:	84 3f       	cpi	r24, 0xF4	; 244
     4ca:	91 40       	sbci	r25, 0x01	; 1
     4cc:	08 f0       	brcs	.+2      	; 0x4d0 <lineType+0x7e>
     4ce:	76 c0       	rjmp	.+236    	; 0x5bc <lineType+0x16a>
     4d0:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <sensors+0x6>
     4d4:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <sensors+0x7>
     4d8:	84 3f       	cpi	r24, 0xF4	; 244
     4da:	91 40       	sbci	r25, 0x01	; 1
     4dc:	08 f4       	brcc	.+2      	; 0x4e0 <lineType+0x8e>
     4de:	70 c0       	rjmp	.+224    	; 0x5c0 <lineType+0x16e>
     4e0:	86 e0       	ldi	r24, 0x06	; 6
     4e2:	08 95       	ret
     4e4:	40 91 a2 01 	lds	r20, 0x01A2	; 0x8001a2 <sensors+0x6>
     4e8:	50 91 a3 01 	lds	r21, 0x01A3	; 0x8001a3 <sensors+0x7>
     4ec:	44 3f       	cpi	r20, 0xF4	; 244
     4ee:	61 e0       	ldi	r22, 0x01	; 1
     4f0:	56 07       	cpc	r21, r22
     4f2:	00 f1       	brcs	.+64     	; 0x534 <lineType+0xe2>
     4f4:	20 91 a4 01 	lds	r18, 0x01A4	; 0x8001a4 <sensors+0x8>
     4f8:	30 91 a5 01 	lds	r19, 0x01A5	; 0x8001a5 <sensors+0x9>
     4fc:	24 3f       	cpi	r18, 0xF4	; 244
     4fe:	31 40       	sbci	r19, 0x01	; 1
     500:	c8 f0       	brcs	.+50     	; 0x534 <lineType+0xe2>
     502:	0e 94 41 01 	call	0x282	; 0x282 <inch>
     506:	61 e0       	ldi	r22, 0x01	; 1
     508:	8c e9       	ldi	r24, 0x9C	; 156
     50a:	91 e0       	ldi	r25, 0x01	; 1
     50c:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <read_line>
     510:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <sensors+0x4>
     514:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <sensors+0x5>
     518:	84 3f       	cpi	r24, 0xF4	; 244
     51a:	91 40       	sbci	r25, 0x01	; 1
     51c:	08 f0       	brcs	.+2      	; 0x520 <lineType+0xce>
     51e:	52 c0       	rjmp	.+164    	; 0x5c4 <lineType+0x172>
     520:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <sensors+0x2>
     524:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <sensors+0x3>
     528:	84 3f       	cpi	r24, 0xF4	; 244
     52a:	91 40       	sbci	r25, 0x01	; 1
     52c:	08 f4       	brcc	.+2      	; 0x530 <lineType+0xde>
     52e:	4c c0       	rjmp	.+152    	; 0x5c8 <lineType+0x176>
     530:	85 e0       	ldi	r24, 0x05	; 5
     532:	08 95       	ret
     534:	20 91 a0 01 	lds	r18, 0x01A0	; 0x8001a0 <sensors+0x4>
     538:	30 91 a1 01 	lds	r19, 0x01A1	; 0x8001a1 <sensors+0x5>
     53c:	29 3c       	cpi	r18, 0xC9	; 201
     53e:	31 05       	cpc	r19, r1
     540:	08 f4       	brcc	.+2      	; 0x544 <lineType+0xf2>
     542:	44 c0       	rjmp	.+136    	; 0x5cc <lineType+0x17a>
     544:	24 3f       	cpi	r18, 0xF4	; 244
     546:	61 e0       	ldi	r22, 0x01	; 1
     548:	36 07       	cpc	r19, r22
     54a:	08 f4       	brcc	.+2      	; 0x54e <lineType+0xfc>
     54c:	82 cf       	rjmp	.-252    	; 0x452 <lineType>
     54e:	24 3f       	cpi	r18, 0xF4	; 244
     550:	61 e0       	ldi	r22, 0x01	; 1
     552:	36 07       	cpc	r19, r22
     554:	e8 f1       	brcs	.+122    	; 0x5d0 <lineType+0x17e>
     556:	45 3f       	cpi	r20, 0xF5	; 245
     558:	51 40       	sbci	r21, 0x01	; 1
     55a:	e0 f5       	brcc	.+120    	; 0x5d4 <lineType+0x182>
     55c:	40 91 a4 01 	lds	r20, 0x01A4	; 0x8001a4 <sensors+0x8>
     560:	50 91 a5 01 	lds	r21, 0x01A5	; 0x8001a5 <sensors+0x9>
     564:	44 3f       	cpi	r20, 0xF4	; 244
     566:	51 40       	sbci	r21, 0x01	; 1
     568:	b8 f1       	brcs	.+110    	; 0x5d8 <lineType+0x186>
     56a:	40 91 9c 01 	lds	r20, 0x019C	; 0x80019c <sensors>
     56e:	50 91 9d 01 	lds	r21, 0x019D	; 0x80019d <sensors+0x1>
     572:	44 3f       	cpi	r20, 0xF4	; 244
     574:	51 40       	sbci	r21, 0x01	; 1
     576:	90 f1       	brcs	.+100    	; 0x5dc <lineType+0x18a>
     578:	85 3f       	cpi	r24, 0xF5	; 245
     57a:	91 40       	sbci	r25, 0x01	; 1
     57c:	88 f5       	brcc	.+98     	; 0x5e0 <lineType+0x18e>
     57e:	24 3f       	cpi	r18, 0xF4	; 244
     580:	31 40       	sbci	r19, 0x01	; 1
     582:	50 f4       	brcc	.+20     	; 0x598 <lineType+0x146>
     584:	80 e0       	ldi	r24, 0x00	; 0
     586:	08 95       	ret
     588:	61 e0       	ldi	r22, 0x01	; 1
     58a:	8c e9       	ldi	r24, 0x9C	; 156
     58c:	91 e0       	ldi	r25, 0x01	; 1
     58e:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <read_line>
     592:	83 e5       	ldi	r24, 0x53	; 83
     594:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
     598:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <sensors+0x8>
     59c:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <sensors+0x9>
     5a0:	80 39       	cpi	r24, 0x90	; 144
     5a2:	91 40       	sbci	r25, 0x01	; 1
     5a4:	88 f7       	brcc	.-30     	; 0x588 <lineType+0x136>
     5a6:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <sensors>
     5aa:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <sensors+0x1>
     5ae:	80 39       	cpi	r24, 0x90	; 144
     5b0:	91 40       	sbci	r25, 0x01	; 1
     5b2:	50 f7       	brcc	.-44     	; 0x588 <lineType+0x136>
     5b4:	82 e0       	ldi	r24, 0x02	; 2
     5b6:	08 95       	ret
     5b8:	87 e0       	ldi	r24, 0x07	; 7
     5ba:	08 95       	ret
     5bc:	86 e0       	ldi	r24, 0x06	; 6
     5be:	08 95       	ret
     5c0:	83 e0       	ldi	r24, 0x03	; 3
     5c2:	08 95       	ret
     5c4:	85 e0       	ldi	r24, 0x05	; 5
     5c6:	08 95       	ret
     5c8:	84 e0       	ldi	r24, 0x04	; 4
     5ca:	08 95       	ret
     5cc:	81 e0       	ldi	r24, 0x01	; 1
     5ce:	08 95       	ret
     5d0:	80 e0       	ldi	r24, 0x00	; 0
     5d2:	08 95       	ret
     5d4:	80 e0       	ldi	r24, 0x00	; 0
     5d6:	08 95       	ret
     5d8:	80 e0       	ldi	r24, 0x00	; 0
     5da:	08 95       	ret
     5dc:	80 e0       	ldi	r24, 0x00	; 0
     5de:	08 95       	ret
     5e0:	80 e0       	ldi	r24, 0x00	; 0
     5e2:	08 95       	ret

000005e4 <parcour>:

char richting;

Junctions situatie = Straight;

char parcour(char *route) {
     5e4:	cf 93       	push	r28
     5e6:	df 93       	push	r29
     5e8:	ec 01       	movw	r28, r24
	while(1) {
		situatie = lineType();
     5ea:	0e 94 29 02 	call	0x452	; 0x452 <lineType>
     5ee:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <situatie>
		
		switch (situatie) {
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	89 30       	cpi	r24, 0x09	; 9
     5f6:	91 05       	cpc	r25, r1
     5f8:	00 f5       	brcc	.+64     	; 0x63a <parcour+0x56>
     5fa:	fc 01       	movw	r30, r24
     5fc:	ec 5c       	subi	r30, 0xCC	; 204
     5fe:	ff 4f       	sbci	r31, 0xFF	; 255
     600:	0c 94 6c 11 	jmp	0x22d8	; 0x22d8 <__tablejump2__>
			
			case X_junction:
			case Left_corner:
			case T_junction:
			case Straight_left_junction:
				motorControl('L');
     604:	8c e4       	ldi	r24, 0x4C	; 76
     606:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
				richting = 'L';
     60a:	8c e4       	ldi	r24, 0x4C	; 76
     60c:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
				//strncat(route, &richting, 1);
				break;
     610:	14 c0       	rjmp	.+40     	; 0x63a <parcour+0x56>
			
			case Right_corner:
				motorControl('R');
     612:	82 e5       	ldi	r24, 0x52	; 82
     614:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
				richting = 'R';
     618:	82 e5       	ldi	r24, 0x52	; 82
     61a:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
				//strncat(route, &richting, 1);
				break;
     61e:	0d c0       	rjmp	.+26     	; 0x63a <parcour+0x56>
			
			case Straight_right_junction:
				richting = 'S';
     620:	83 e5       	ldi	r24, 0x53	; 83
     622:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
				//strncat(route, &richting, 1);
			case Straight:
				motorControl('S');
     626:	83 e5       	ldi	r24, 0x53	; 83
     628:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
				break;
     62c:	06 c0       	rjmp	.+12     	; 0x63a <parcour+0x56>
			
			case Line_end:
				motorControl('T');
     62e:	84 e5       	ldi	r24, 0x54	; 84
     630:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
				richting = 'T';
     634:	84 e5       	ldi	r24, 0x54	; 84
     636:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
				//strncat(route, &richting, 1);
				break;
		}
		
		
		if (route[-2] == 'T') {
     63a:	fe 01       	movw	r30, r28
     63c:	32 97       	sbiw	r30, 0x02	; 2
     63e:	80 81       	ld	r24, Z
     640:	84 35       	cpi	r24, 0x54	; 84
     642:	99 f6       	brne	.-90     	; 0x5ea <parcour+0x6>
			route[strlen(route)-3] = '\0';
     644:	fe 01       	movw	r30, r28
     646:	01 90       	ld	r0, Z+
     648:	00 20       	and	r0, r0
     64a:	e9 f7       	brne	.-6      	; 0x646 <parcour+0x62>
     64c:	31 97       	sbiw	r30, 0x01	; 1
     64e:	ec 1b       	sub	r30, r28
     650:	fd 0b       	sbc	r31, r29
     652:	33 97       	sbiw	r30, 0x03	; 3
     654:	ec 0f       	add	r30, r28
     656:	fd 1f       	adc	r31, r29
     658:	10 82       	st	Z, r1
			if (route[-3] == 'L' && route[-1] == 'L') {
     65a:	fe 01       	movw	r30, r28
     65c:	33 97       	sbiw	r30, 0x03	; 3
     65e:	80 81       	ld	r24, Z
     660:	8c 34       	cpi	r24, 0x4C	; 76
     662:	41 f4       	brne	.+16     	; 0x674 <parcour+0x90>
     664:	32 96       	adiw	r30, 0x02	; 2
     666:	90 81       	ld	r25, Z
     668:	9c 34       	cpi	r25, 0x4C	; 76
     66a:	21 f4       	brne	.+8      	; 0x674 <parcour+0x90>
				richting = 'S';
     66c:	83 e5       	ldi	r24, 0x53	; 83
     66e:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
     672:	2b c0       	rjmp	.+86     	; 0x6ca <parcour+0xe6>
			} else if (route[-3] == 'S' && route[-1] == 'L'){
     674:	83 35       	cpi	r24, 0x53	; 83
     676:	49 f4       	brne	.+18     	; 0x68a <parcour+0xa6>
     678:	fe 01       	movw	r30, r28
     67a:	31 97       	sbiw	r30, 0x01	; 1
     67c:	90 81       	ld	r25, Z
     67e:	9c 34       	cpi	r25, 0x4C	; 76
     680:	21 f4       	brne	.+8      	; 0x68a <parcour+0xa6>
				richting = 'R';			
     682:	82 e5       	ldi	r24, 0x52	; 82
     684:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
     688:	20 c0       	rjmp	.+64     	; 0x6ca <parcour+0xe6>
			} else if (route[-3] == 'R' && route[-1] == 'L'){
     68a:	82 35       	cpi	r24, 0x52	; 82
     68c:	49 f4       	brne	.+18     	; 0x6a0 <parcour+0xbc>
     68e:	fe 01       	movw	r30, r28
     690:	31 97       	sbiw	r30, 0x01	; 1
     692:	90 81       	ld	r25, Z
     694:	9c 34       	cpi	r25, 0x4C	; 76
     696:	21 f4       	brne	.+8      	; 0x6a0 <parcour+0xbc>
				richting = 'T';			
     698:	84 e5       	ldi	r24, 0x54	; 84
     69a:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
     69e:	15 c0       	rjmp	.+42     	; 0x6ca <parcour+0xe6>
			} else if (route[-3] == 'L' && route[-1] == 'R'){
     6a0:	8c 34       	cpi	r24, 0x4C	; 76
     6a2:	49 f4       	brne	.+18     	; 0x6b6 <parcour+0xd2>
     6a4:	fe 01       	movw	r30, r28
     6a6:	31 97       	sbiw	r30, 0x01	; 1
     6a8:	90 81       	ld	r25, Z
     6aa:	92 35       	cpi	r25, 0x52	; 82
     6ac:	21 f4       	brne	.+8      	; 0x6b6 <parcour+0xd2>
				richting = 'T';			
     6ae:	84 e5       	ldi	r24, 0x54	; 84
     6b0:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
     6b4:	0a c0       	rjmp	.+20     	; 0x6ca <parcour+0xe6>
			} else if (route[-3] == 'L' && route[-1] == 'S'){
     6b6:	8c 34       	cpi	r24, 0x4C	; 76
     6b8:	41 f4       	brne	.+16     	; 0x6ca <parcour+0xe6>
     6ba:	fe 01       	movw	r30, r28
     6bc:	31 97       	sbiw	r30, 0x01	; 1
     6be:	80 81       	ld	r24, Z
     6c0:	83 35       	cpi	r24, 0x53	; 83
     6c2:	19 f4       	brne	.+6      	; 0x6ca <parcour+0xe6>
				richting = 'R';			
     6c4:	82 e5       	ldi	r24, 0x52	; 82
     6c6:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <richting>
			}
			strncat(route, &richting, 1);				
     6ca:	41 e0       	ldi	r20, 0x01	; 1
     6cc:	50 e0       	ldi	r21, 0x00	; 0
     6ce:	66 ea       	ldi	r22, 0xA6	; 166
     6d0:	71 e0       	ldi	r23, 0x01	; 1
     6d2:	ce 01       	movw	r24, r28
     6d4:	0e 94 ec 12 	call	0x25d8	; 0x25d8 <strncat>
     6d8:	88 cf       	rjmp	.-240    	; 0x5ea <parcour+0x6>
	while(1) {
		situatie = lineType();
		
		switch (situatie) {
			case Barcode: // end of parcour
				warehouse();
     6da:	0e 94 1c 05 	call	0xa38	; 0xa38 <warehouse>
			}
			strncat(route, &richting, 1);				
		}
	}
	return 0;
     6de:	80 e0       	ldi	r24, 0x00	; 0
     6e0:	df 91       	pop	r29
     6e2:	cf 91       	pop	r28
     6e4:	08 95       	ret

000006e6 <swap>:
#include <pololu/3pi.h>
#include <avr/pgmspace.h>


void swap(int *a, int *b) {
    int temp = *a;
     6e6:	fc 01       	movw	r30, r24
     6e8:	20 81       	ld	r18, Z
     6ea:	31 81       	ldd	r19, Z+1	; 0x01
    *a = *b;
     6ec:	fb 01       	movw	r30, r22
     6ee:	40 81       	ld	r20, Z
     6f0:	51 81       	ldd	r21, Z+1	; 0x01
     6f2:	fc 01       	movw	r30, r24
     6f4:	51 83       	std	Z+1, r21	; 0x01
     6f6:	40 83       	st	Z, r20
    *b = temp;
     6f8:	fb 01       	movw	r30, r22
     6fa:	31 83       	std	Z+1, r19	; 0x01
     6fc:	20 83       	st	Z, r18
     6fe:	08 95       	ret

00000700 <bubbleSort>:
}

void bubbleSort(int arr[],int orderY[], int n) {
     700:	6f 92       	push	r6
     702:	7f 92       	push	r7
     704:	8f 92       	push	r8
     706:	9f 92       	push	r9
     708:	af 92       	push	r10
     70a:	bf 92       	push	r11
     70c:	cf 92       	push	r12
     70e:	df 92       	push	r13
     710:	ef 92       	push	r14
     712:	ff 92       	push	r15
     714:	0f 93       	push	r16
     716:	1f 93       	push	r17
     718:	cf 93       	push	r28
     71a:	df 93       	push	r29
     71c:	6c 01       	movw	r12, r24
     71e:	3b 01       	movw	r6, r22
     720:	4a 01       	movw	r8, r20
    for (int i = 0; i < n - 1; i++) {
     722:	a1 2c       	mov	r10, r1
     724:	b1 2c       	mov	r11, r1
     726:	30 c0       	rjmp	.+96     	; 0x788 <bubbleSort+0x88>
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
     728:	7e 01       	movw	r14, r28
     72a:	ee 0c       	add	r14, r14
     72c:	ff 1c       	adc	r15, r15
     72e:	f6 01       	movw	r30, r12
     730:	ee 0d       	add	r30, r14
     732:	ff 1d       	adc	r31, r15
     734:	20 81       	ld	r18, Z
     736:	31 81       	ldd	r19, Z+1	; 0x01
     738:	8e 01       	movw	r16, r28
     73a:	0f 5f       	subi	r16, 0xFF	; 255
     73c:	1f 4f       	sbci	r17, 0xFF	; 255
     73e:	00 0f       	add	r16, r16
     740:	11 1f       	adc	r17, r17
     742:	d6 01       	movw	r26, r12
     744:	a0 0f       	add	r26, r16
     746:	b1 1f       	adc	r27, r17
     748:	8d 91       	ld	r24, X+
     74a:	9c 91       	ld	r25, X
     74c:	11 97       	sbiw	r26, 0x01	; 1
     74e:	82 17       	cp	r24, r18
     750:	93 07       	cpc	r25, r19
     752:	64 f4       	brge	.+24     	; 0x76c <bubbleSort+0x6c>
                swap(&arr[j], &arr[j + 1]);
     754:	bd 01       	movw	r22, r26
     756:	cf 01       	movw	r24, r30
     758:	0e 94 73 03 	call	0x6e6	; 0x6e6 <swap>
                swap(&orderY[j], &orderY[j + 1]);
     75c:	b3 01       	movw	r22, r6
     75e:	60 0f       	add	r22, r16
     760:	71 1f       	adc	r23, r17
     762:	c3 01       	movw	r24, r6
     764:	8e 0d       	add	r24, r14
     766:	9f 1d       	adc	r25, r15
     768:	0e 94 73 03 	call	0x6e6	; 0x6e6 <swap>
    *b = temp;
}

void bubbleSort(int arr[],int orderY[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
     76c:	21 96       	adiw	r28, 0x01	; 1
     76e:	02 c0       	rjmp	.+4      	; 0x774 <bubbleSort+0x74>
     770:	c0 e0       	ldi	r28, 0x00	; 0
     772:	d0 e0       	ldi	r29, 0x00	; 0
     774:	c4 01       	movw	r24, r8
     776:	8a 19       	sub	r24, r10
     778:	9b 09       	sbc	r25, r11
     77a:	01 97       	sbiw	r24, 0x01	; 1
     77c:	c8 17       	cp	r28, r24
     77e:	d9 07       	cpc	r29, r25
     780:	9c f2       	brlt	.-90     	; 0x728 <bubbleSort+0x28>
    *a = *b;
    *b = temp;
}

void bubbleSort(int arr[],int orderY[], int n) {
    for (int i = 0; i < n - 1; i++) {
     782:	8f ef       	ldi	r24, 0xFF	; 255
     784:	a8 1a       	sub	r10, r24
     786:	b8 0a       	sbc	r11, r24
     788:	c4 01       	movw	r24, r8
     78a:	01 97       	sbiw	r24, 0x01	; 1
     78c:	a8 16       	cp	r10, r24
     78e:	b9 06       	cpc	r11, r25
     790:	7c f3       	brlt	.-34     	; 0x770 <bubbleSort+0x70>
                swap(&orderY[j], &orderY[j + 1]);
				
            }
		}
    }
}
     792:	df 91       	pop	r29
     794:	cf 91       	pop	r28
     796:	1f 91       	pop	r17
     798:	0f 91       	pop	r16
     79a:	ff 90       	pop	r15
     79c:	ef 90       	pop	r14
     79e:	df 90       	pop	r13
     7a0:	cf 90       	pop	r12
     7a2:	bf 90       	pop	r11
     7a4:	af 90       	pop	r10
     7a6:	9f 90       	pop	r9
     7a8:	8f 90       	pop	r8
     7aa:	7f 90       	pop	r7
     7ac:	6f 90       	pop	r6
     7ae:	08 95       	ret

000007b0 <drive>:



void drive(int junctions)
{
     7b0:	ef 92       	push	r14
     7b2:	ff 92       	push	r15
     7b4:	0f 93       	push	r16
     7b6:	1f 93       	push	r17
     7b8:	cf 93       	push	r28
     7ba:	df 93       	push	r29
     7bc:	7c 01       	movw	r14, r24
	Junctions situatie;
	motorControl('S');
     7be:	83 e5       	ldi	r24, 0x53	; 83
     7c0:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
	int driving = 1;
	int count = 0;
     7c4:	00 e0       	ldi	r16, 0x00	; 0
     7c6:	10 e0       	ldi	r17, 0x00	; 0

void drive(int junctions)
{
	Junctions situatie;
	motorControl('S');
	int driving = 1;
     7c8:	c1 e0       	ldi	r28, 0x01	; 1
     7ca:	d0 e0       	ldi	r29, 0x00	; 0
	int count = 0;
	while(driving) {
     7cc:	1a c0       	rjmp	.+52     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
		situatie = lineType();
     7ce:	0e 94 29 02 	call	0x452	; 0x452 <lineType>
		//clear();
		switch (situatie) {
     7d2:	99 27       	eor	r25, r25
     7d4:	00 97       	sbiw	r24, 0x00	; 0
     7d6:	21 f0       	breq	.+8      	; 0x7e0 <drive+0x30>
     7d8:	03 97       	sbiw	r24, 0x03	; 3
     7da:	06 97       	sbiw	r24, 0x06	; 6
     7dc:	28 f0       	brcs	.+10     	; 0x7e8 <drive+0x38>
     7de:	11 c0       	rjmp	.+34     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
			case Barcode: // end of parcour
			//motorControl('N');
			break;
			
			case Straight:
			motorControl('S');
     7e0:	83 e5       	ldi	r24, 0x53	; 83
     7e2:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
			break;
     7e6:	0d c0       	rjmp	.+26     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
			case Left_corner:
			case T_junction:
			case Straight_left_junction:
			case Right_corner:
			case Straight_right_junction:
				count++;
     7e8:	0f 5f       	subi	r16, 0xFF	; 255
     7ea:	1f 4f       	sbci	r17, 0xFF	; 255
				motorControl('S');
     7ec:	83 e5       	ldi	r24, 0x53	; 83
     7ee:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
				if(count == junctions)
     7f2:	0e 15       	cp	r16, r14
     7f4:	1f 05       	cpc	r17, r15
     7f6:	29 f4       	brne	.+10     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
				{
					motorControl('N');
     7f8:	8e e4       	ldi	r24, 0x4E	; 78
     7fa:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
					driving = 0;
     7fe:	c0 e0       	ldi	r28, 0x00	; 0
     800:	d0 e0       	ldi	r29, 0x00	; 0
{
	Junctions situatie;
	motorControl('S');
	int driving = 1;
	int count = 0;
	while(driving) {
     802:	20 97       	sbiw	r28, 0x00	; 0
     804:	21 f7       	brne	.-56     	; 0x7ce <drive+0x1e>
			
			
		}
		
	}
}
     806:	df 91       	pop	r29
     808:	cf 91       	pop	r28
     80a:	1f 91       	pop	r17
     80c:	0f 91       	pop	r16
     80e:	ff 90       	pop	r15
     810:	ef 90       	pop	r14
     812:	08 95       	ret

00000814 <waitForTurn>:

void waitForTurn()
{
     814:	cf 93       	push	r28
     816:	8f e0       	ldi	r24, 0x0F	; 15
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	0e 94 8f 0b 	call	0x171e	; 0x171e <delay_ms>
     81e:	03 c0       	rjmp	.+6      	; 0x826 <waitForTurn+0x12>
	Junctions lijn;
	delay(15);
	while(lijn != Straight)
	{
		lijn  = lineType();
     820:	0e 94 29 02 	call	0x452	; 0x452 <lineType>
     824:	c8 2f       	mov	r28, r24

void waitForTurn()
{
	Junctions lijn;
	delay(15);
	while(lijn != Straight)
     826:	c1 11       	cpse	r28, r1
     828:	fb cf       	rjmp	.-10     	; 0x820 <waitForTurn+0xc>
	{
		lijn  = lineType();
	}
	motorControl('N');
     82a:	8e e4       	ldi	r24, 0x4E	; 78
     82c:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
}
     830:	cf 91       	pop	r28
     832:	08 95       	ret

00000834 <turnRobot>:

void turnRobot(char direction, piRobot *myRobot)
{
     834:	ef 92       	push	r14
     836:	ff 92       	push	r15
     838:	0f 93       	push	r16
     83a:	1f 93       	push	r17
     83c:	cf 93       	push	r28
     83e:	c8 2f       	mov	r28, r24
     840:	8b 01       	movw	r16, r22
    int changing = 1;
     842:	ee 24       	eor	r14, r14
     844:	e3 94       	inc	r14
     846:	f1 2c       	mov	r15, r1

    while(changing==1)
     848:	9a c0       	rjmp	.+308    	; 0x97e <__stack+0x7f>
    {
		
        switch(myRobot->direction)
     84a:	f8 01       	movw	r30, r16
     84c:	84 81       	ldd	r24, Z+4	; 0x04
     84e:	8e 34       	cpi	r24, 0x4E	; 78
     850:	59 f0       	breq	.+22     	; 0x868 <turnRobot+0x34>
     852:	18 f4       	brcc	.+6      	; 0x85a <turnRobot+0x26>
     854:	85 34       	cpi	r24, 0x45	; 69
     856:	51 f1       	breq	.+84     	; 0x8ac <turnRobot+0x78>
     858:	8c c0       	rjmp	.+280    	; 0x972 <__stack+0x73>
     85a:	83 35       	cpi	r24, 0x53	; 83
     85c:	09 f4       	brne	.+2      	; 0x860 <turnRobot+0x2c>
     85e:	48 c0       	rjmp	.+144    	; 0x8f0 <turnRobot+0xbc>
     860:	87 35       	cpi	r24, 0x57	; 87
     862:	09 f4       	brne	.+2      	; 0x866 <turnRobot+0x32>
     864:	66 c0       	rjmp	.+204    	; 0x932 <__stack+0x33>
     866:	85 c0       	rjmp	.+266    	; 0x972 <__stack+0x73>
        {
            case 'N':
                if(direction == 'E')
     868:	c5 34       	cpi	r28, 0x45	; 69
     86a:	49 f4       	brne	.+18     	; 0x87e <turnRobot+0x4a>
                {
                    motorControl('R');
     86c:	82 e5       	ldi	r24, 0x52	; 82
     86e:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
					waitForTurn();
     872:	0e 94 0a 04 	call	0x814	; 0x814 <waitForTurn>
                    myRobot->direction = 'E';
     876:	85 e4       	ldi	r24, 0x45	; 69
     878:	f8 01       	movw	r30, r16
     87a:	84 83       	std	Z+4, r24	; 0x04
     87c:	7a c0       	rjmp	.+244    	; 0x972 <__stack+0x73>
                }
                else if(direction == 'W')
     87e:	c7 35       	cpi	r28, 0x57	; 87
     880:	49 f4       	brne	.+18     	; 0x894 <turnRobot+0x60>
                {
                    motorControl('L');
     882:	8c e4       	ldi	r24, 0x4C	; 76
     884:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
					waitForTurn();
     888:	0e 94 0a 04 	call	0x814	; 0x814 <waitForTurn>
                    myRobot->direction = 'W';
     88c:	87 e5       	ldi	r24, 0x57	; 87
     88e:	f8 01       	movw	r30, r16
     890:	84 83       	std	Z+4, r24	; 0x04
     892:	6f c0       	rjmp	.+222    	; 0x972 <__stack+0x73>
                }
                else if(direction == 'S')
     894:	c3 35       	cpi	r28, 0x53	; 83
     896:	09 f0       	breq	.+2      	; 0x89a <turnRobot+0x66>
     898:	6c c0       	rjmp	.+216    	; 0x972 <__stack+0x73>
                {
                    motorControl('T');
     89a:	84 e5       	ldi	r24, 0x54	; 84
     89c:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
					waitForTurn();
     8a0:	0e 94 0a 04 	call	0x814	; 0x814 <waitForTurn>
                    myRobot->direction = 'S';
     8a4:	83 e5       	ldi	r24, 0x53	; 83
     8a6:	f8 01       	movw	r30, r16
     8a8:	84 83       	std	Z+4, r24	; 0x04
     8aa:	63 c0       	rjmp	.+198    	; 0x972 <__stack+0x73>
                }
                break;
            case 'E':
                if(direction == 'S')
     8ac:	c3 35       	cpi	r28, 0x53	; 83
     8ae:	49 f4       	brne	.+18     	; 0x8c2 <turnRobot+0x8e>
                {
                    motorControl('R');
     8b0:	82 e5       	ldi	r24, 0x52	; 82
     8b2:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
					waitForTurn();
     8b6:	0e 94 0a 04 	call	0x814	; 0x814 <waitForTurn>
                    myRobot->direction = 'S';
     8ba:	83 e5       	ldi	r24, 0x53	; 83
     8bc:	f8 01       	movw	r30, r16
     8be:	84 83       	std	Z+4, r24	; 0x04
     8c0:	58 c0       	rjmp	.+176    	; 0x972 <__stack+0x73>
                }
                else if(direction == 'W')
     8c2:	c7 35       	cpi	r28, 0x57	; 87
     8c4:	49 f4       	brne	.+18     	; 0x8d8 <turnRobot+0xa4>
                {
                    motorControl('L');
     8c6:	8c e4       	ldi	r24, 0x4C	; 76
     8c8:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
					waitForTurn();
     8cc:	0e 94 0a 04 	call	0x814	; 0x814 <waitForTurn>
                    myRobot->direction = 'W';
     8d0:	87 e5       	ldi	r24, 0x57	; 87
     8d2:	f8 01       	movw	r30, r16
     8d4:	84 83       	std	Z+4, r24	; 0x04
     8d6:	4d c0       	rjmp	.+154    	; 0x972 <__stack+0x73>
                }
                else if(direction == 'S')
     8d8:	c3 35       	cpi	r28, 0x53	; 83
     8da:	09 f0       	breq	.+2      	; 0x8de <turnRobot+0xaa>
     8dc:	4a c0       	rjmp	.+148    	; 0x972 <__stack+0x73>
                {
                    motorControl('T');
     8de:	84 e5       	ldi	r24, 0x54	; 84
     8e0:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
					waitForTurn();
     8e4:	0e 94 0a 04 	call	0x814	; 0x814 <waitForTurn>
                    myRobot->direction = 'S';
     8e8:	83 e5       	ldi	r24, 0x53	; 83
     8ea:	f8 01       	movw	r30, r16
     8ec:	84 83       	std	Z+4, r24	; 0x04
     8ee:	41 c0       	rjmp	.+130    	; 0x972 <__stack+0x73>
                }
                break;
            case 'S':
                if(direction == 'W')
     8f0:	c7 35       	cpi	r28, 0x57	; 87
     8f2:	49 f4       	brne	.+18     	; 0x906 <__stack+0x7>
                {
                    motorControl('R');
     8f4:	82 e5       	ldi	r24, 0x52	; 82
     8f6:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
					waitForTurn();
     8fa:	0e 94 0a 04 	call	0x814	; 0x814 <waitForTurn>
                    myRobot->direction = 'W';
     8fe:	87 e5       	ldi	r24, 0x57	; 87
     900:	f8 01       	movw	r30, r16
     902:	84 83       	std	Z+4, r24	; 0x04
     904:	36 c0       	rjmp	.+108    	; 0x972 <__stack+0x73>
                }
                else if(direction == 'E')
     906:	c5 34       	cpi	r28, 0x45	; 69
     908:	49 f4       	brne	.+18     	; 0x91c <__stack+0x1d>
                {
                    motorControl('L');
     90a:	8c e4       	ldi	r24, 0x4C	; 76
     90c:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
					waitForTurn();
     910:	0e 94 0a 04 	call	0x814	; 0x814 <waitForTurn>
                    myRobot->direction = 'E';
     914:	85 e4       	ldi	r24, 0x45	; 69
     916:	f8 01       	movw	r30, r16
     918:	84 83       	std	Z+4, r24	; 0x04
     91a:	2b c0       	rjmp	.+86     	; 0x972 <__stack+0x73>
                }
                else if(direction == 'N')
     91c:	ce 34       	cpi	r28, 0x4E	; 78
     91e:	49 f5       	brne	.+82     	; 0x972 <__stack+0x73>
                {
                    motorControl('T');
     920:	84 e5       	ldi	r24, 0x54	; 84
     922:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
					waitForTurn();
     926:	0e 94 0a 04 	call	0x814	; 0x814 <waitForTurn>
                    myRobot->direction = 'N';
     92a:	8e e4       	ldi	r24, 0x4E	; 78
     92c:	f8 01       	movw	r30, r16
     92e:	84 83       	std	Z+4, r24	; 0x04
     930:	20 c0       	rjmp	.+64     	; 0x972 <__stack+0x73>
                }
                break;
            case 'W':
                if(direction == 'N')
     932:	ce 34       	cpi	r28, 0x4E	; 78
     934:	49 f4       	brne	.+18     	; 0x948 <__stack+0x49>
                {
					
                    motorControl('R');
     936:	82 e5       	ldi	r24, 0x52	; 82
     938:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
					waitForTurn();
     93c:	0e 94 0a 04 	call	0x814	; 0x814 <waitForTurn>
                    myRobot->direction = 'N';
     940:	8e e4       	ldi	r24, 0x4E	; 78
     942:	f8 01       	movw	r30, r16
     944:	84 83       	std	Z+4, r24	; 0x04
     946:	15 c0       	rjmp	.+42     	; 0x972 <__stack+0x73>
                }
                else if(direction == 'S')
     948:	c3 35       	cpi	r28, 0x53	; 83
     94a:	49 f4       	brne	.+18     	; 0x95e <__stack+0x5f>
                {
                    motorControl('L');
     94c:	8c e4       	ldi	r24, 0x4C	; 76
     94e:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
					waitForTurn();
     952:	0e 94 0a 04 	call	0x814	; 0x814 <waitForTurn>
                    myRobot->direction = 'S';
     956:	83 e5       	ldi	r24, 0x53	; 83
     958:	f8 01       	movw	r30, r16
     95a:	84 83       	std	Z+4, r24	; 0x04
     95c:	0a c0       	rjmp	.+20     	; 0x972 <__stack+0x73>
                }
                else if(direction == 'E')
     95e:	c5 34       	cpi	r28, 0x45	; 69
     960:	41 f4       	brne	.+16     	; 0x972 <__stack+0x73>
                {
                    motorControl('T');
     962:	84 e5       	ldi	r24, 0x54	; 84
     964:	0e 94 52 01 	call	0x2a4	; 0x2a4 <motorControl>
					waitForTurn();
     968:	0e 94 0a 04 	call	0x814	; 0x814 <waitForTurn>
                    myRobot->direction = 'E';
     96c:	85 e4       	ldi	r24, 0x45	; 69
     96e:	f8 01       	movw	r30, r16
     970:	84 83       	std	Z+4, r24	; 0x04
                }
                break;
		}
		
				if(myRobot->direction == direction)
     972:	f8 01       	movw	r30, r16
     974:	84 81       	ldd	r24, Z+4	; 0x04
     976:	c8 13       	cpse	r28, r24
     978:	02 c0       	rjmp	.+4      	; 0x97e <__stack+0x7f>
				{
					changing = 0;
     97a:	e1 2c       	mov	r14, r1
     97c:	f1 2c       	mov	r15, r1

void turnRobot(char direction, piRobot *myRobot)
{
    int changing = 1;

    while(changing==1)
     97e:	f1 e0       	ldi	r31, 0x01	; 1
     980:	ef 16       	cp	r14, r31
     982:	f1 04       	cpc	r15, r1
     984:	09 f4       	brne	.+2      	; 0x988 <__stack+0x89>
     986:	61 cf       	rjmp	.-318    	; 0x84a <turnRobot+0x16>
				{
					changing = 0;
				}
		
    }
}
     988:	cf 91       	pop	r28
     98a:	1f 91       	pop	r17
     98c:	0f 91       	pop	r16
     98e:	ff 90       	pop	r15
     990:	ef 90       	pop	r14
     992:	08 95       	ret

00000994 <moveX>:


void moveX(int orderPos, piRobot *robot)
{
     994:	0f 93       	push	r16
     996:	1f 93       	push	r17
     998:	cf 93       	push	r28
     99a:	df 93       	push	r29
	
    int junctions;
	
	
    if(robot->posX != orderPos)
     99c:	fb 01       	movw	r30, r22
     99e:	20 81       	ld	r18, Z
     9a0:	31 81       	ldd	r19, Z+1	; 0x01
     9a2:	28 17       	cp	r18, r24
     9a4:	39 07       	cpc	r19, r25
     9a6:	d1 f0       	breq	.+52     	; 0x9dc <moveX+0x48>
     9a8:	8b 01       	movw	r16, r22
     9aa:	ec 01       	movw	r28, r24
    {
		
        if(robot->posX < orderPos)
     9ac:	28 17       	cp	r18, r24
     9ae:	39 07       	cpc	r19, r25
     9b0:	5c f4       	brge	.+22     	; 0x9c8 <moveX+0x34>
        {
            turnRobot('W', robot);
     9b2:	87 e5       	ldi	r24, 0x57	; 87
     9b4:	0e 94 1a 04 	call	0x834	; 0x834 <turnRobot>
            junctions = orderPos-robot->posX;
     9b8:	f8 01       	movw	r30, r16
     9ba:	80 81       	ld	r24, Z
     9bc:	91 81       	ldd	r25, Z+1	; 0x01
     9be:	9e 01       	movw	r18, r28
     9c0:	28 1b       	sub	r18, r24
     9c2:	39 0b       	sbc	r19, r25
     9c4:	c9 01       	movw	r24, r18
     9c6:	08 c0       	rjmp	.+16     	; 0x9d8 <moveX+0x44>
        }
        else{
            turnRobot('E', robot);
     9c8:	85 e4       	ldi	r24, 0x45	; 69
     9ca:	0e 94 1a 04 	call	0x834	; 0x834 <turnRobot>
            junctions = robot->posX - orderPos;
     9ce:	f8 01       	movw	r30, r16
     9d0:	80 81       	ld	r24, Z
     9d2:	91 81       	ldd	r25, Z+1	; 0x01
     9d4:	8c 1b       	sub	r24, r28
     9d6:	9d 0b       	sbc	r25, r29
        }

        
		drive(junctions);
     9d8:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <drive>
        

    }
}
     9dc:	df 91       	pop	r29
     9de:	cf 91       	pop	r28
     9e0:	1f 91       	pop	r17
     9e2:	0f 91       	pop	r16
     9e4:	08 95       	ret

000009e6 <moveY>:

void moveY(int orderPos, piRobot *robot)
{
     9e6:	0f 93       	push	r16
     9e8:	1f 93       	push	r17
     9ea:	cf 93       	push	r28
     9ec:	df 93       	push	r29

    int junctions;
    if(robot->posY != orderPos)
     9ee:	fb 01       	movw	r30, r22
     9f0:	22 81       	ldd	r18, Z+2	; 0x02
     9f2:	33 81       	ldd	r19, Z+3	; 0x03
     9f4:	28 17       	cp	r18, r24
     9f6:	39 07       	cpc	r19, r25
     9f8:	d1 f0       	breq	.+52     	; 0xa2e <moveY+0x48>
     9fa:	8b 01       	movw	r16, r22
     9fc:	ec 01       	movw	r28, r24
    {
        if(robot->posY < orderPos)
     9fe:	28 17       	cp	r18, r24
     a00:	39 07       	cpc	r19, r25
     a02:	5c f4       	brge	.+22     	; 0xa1a <moveY+0x34>
        {
            turnRobot('N', robot);
     a04:	8e e4       	ldi	r24, 0x4E	; 78
     a06:	0e 94 1a 04 	call	0x834	; 0x834 <turnRobot>
            junctions = orderPos-robot->posY;
     a0a:	f8 01       	movw	r30, r16
     a0c:	82 81       	ldd	r24, Z+2	; 0x02
     a0e:	93 81       	ldd	r25, Z+3	; 0x03
     a10:	9e 01       	movw	r18, r28
     a12:	28 1b       	sub	r18, r24
     a14:	39 0b       	sbc	r19, r25
     a16:	c9 01       	movw	r24, r18
     a18:	08 c0       	rjmp	.+16     	; 0xa2a <moveY+0x44>
        }
        else{
            turnRobot('S', robot);
     a1a:	83 e5       	ldi	r24, 0x53	; 83
     a1c:	0e 94 1a 04 	call	0x834	; 0x834 <turnRobot>
            junctions = robot->posY - orderPos;
     a20:	f8 01       	movw	r30, r16
     a22:	82 81       	ldd	r24, Z+2	; 0x02
     a24:	93 81       	ldd	r25, Z+3	; 0x03
     a26:	8c 1b       	sub	r24, r28
     a28:	9d 0b       	sbc	r25, r29
        }

            drive(junctions);
     a2a:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <drive>
        

    }
}
     a2e:	df 91       	pop	r29
     a30:	cf 91       	pop	r28
     a32:	1f 91       	pop	r17
     a34:	0f 91       	pop	r16
     a36:	08 95       	ret

00000a38 <warehouse>:


void warehouse(void)
{
     a38:	4f 92       	push	r4
     a3a:	5f 92       	push	r5
     a3c:	6f 92       	push	r6
     a3e:	7f 92       	push	r7
     a40:	8f 92       	push	r8
     a42:	9f 92       	push	r9
     a44:	af 92       	push	r10
     a46:	bf 92       	push	r11
     a48:	ef 92       	push	r14
     a4a:	ff 92       	push	r15
     a4c:	0f 93       	push	r16
     a4e:	1f 93       	push	r17
     a50:	cf 93       	push	r28
     a52:	df 93       	push	r29
     a54:	cd b7       	in	r28, 0x3d	; 61
     a56:	de b7       	in	r29, 0x3e	; 62
     a58:	69 97       	sbiw	r28, 0x19	; 25
     a5a:	0f b6       	in	r0, 0x3f	; 63
     a5c:	f8 94       	cli
     a5e:	de bf       	out	0x3e, r29	; 62
     a60:	0f be       	out	0x3f, r0	; 63
     a62:	cd bf       	out	0x3d, r28	; 61
 piRobot robot;
 robot.direction = 'W';
     a64:	87 e5       	ldi	r24, 0x57	; 87
     a66:	8d 83       	std	Y+5, r24	; 0x05
 robot.posX = -1;
     a68:	8f ef       	ldi	r24, 0xFF	; 255
     a6a:	9f ef       	ldi	r25, 0xFF	; 255
     a6c:	9a 83       	std	Y+2, r25	; 0x02
     a6e:	89 83       	std	Y+1, r24	; 0x01
 robot.posY = 0;
     a70:	1c 82       	std	Y+4, r1	; 0x04
     a72:	1b 82       	std	Y+3, r1	; 0x03
//int orderX[] = getWixel("posX");
//int orderY[] = getWixel("posY");

    int orderX[] = {0,3,1,2,4};
     a74:	8a e0       	ldi	r24, 0x0A	; 10
     a76:	ea e0       	ldi	r30, 0x0A	; 10
     a78:	f1 e0       	ldi	r31, 0x01	; 1
     a7a:	de 01       	movw	r26, r28
     a7c:	16 96       	adiw	r26, 0x06	; 6
     a7e:	01 90       	ld	r0, Z+
     a80:	0d 92       	st	X+, r0
     a82:	8a 95       	dec	r24
     a84:	e1 f7       	brne	.-8      	; 0xa7e <warehouse+0x46>
    int orderY[] = {1,2,3,3,4};
     a86:	8a e0       	ldi	r24, 0x0A	; 10
     a88:	e4 e1       	ldi	r30, 0x14	; 20
     a8a:	f1 e0       	ldi	r31, 0x01	; 1
     a8c:	de 01       	movw	r26, r28
     a8e:	50 96       	adiw	r26, 0x10	; 16
     a90:	01 90       	ld	r0, Z+
     a92:	0d 92       	st	X+, r0
     a94:	8a 95       	dec	r24
     a96:	e1 f7       	brne	.-8      	; 0xa90 <warehouse+0x58>

    int arrayGrootte = sizeof(orderX) / sizeof(orderX[0]);
    bubbleSort(orderX, orderY, arrayGrootte);
     a98:	45 e0       	ldi	r20, 0x05	; 5
     a9a:	50 e0       	ldi	r21, 0x00	; 0
     a9c:	be 01       	movw	r22, r28
     a9e:	60 5f       	subi	r22, 0xF0	; 240
     aa0:	7f 4f       	sbci	r23, 0xFF	; 255
     aa2:	ce 01       	movw	r24, r28
     aa4:	06 96       	adiw	r24, 0x06	; 6
     aa6:	0e 94 80 03 	call	0x700	; 0x700 <bubbleSort>
	
	
	 //motorControl('S');
	//drive();
	
    for(int locaties = 0; locaties<arrayGrootte;locaties++)
     aaa:	e1 2c       	mov	r14, r1
     aac:	f1 2c       	mov	r15, r1
     aae:	5a c0       	rjmp	.+180    	; 0xb64 <warehouse+0x12c>
    {
		float completed = locaties;
     ab0:	b7 01       	movw	r22, r14
     ab2:	0f 2c       	mov	r0, r15
     ab4:	00 0c       	add	r0, r0
     ab6:	88 0b       	sbc	r24, r24
     ab8:	99 0b       	sbc	r25, r25
     aba:	0e 94 f1 06 	call	0xde2	; 0xde2 <__floatsisf>
     abe:	2b 01       	movw	r4, r22
     ac0:	3c 01       	movw	r6, r24
		float total = arrayGrootte;
		
		
        moveX(orderX[locaties], &robot);
     ac2:	87 01       	movw	r16, r14
     ac4:	00 0f       	add	r16, r16
     ac6:	11 1f       	adc	r17, r17
     ac8:	81 e0       	ldi	r24, 0x01	; 1
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	8c 0f       	add	r24, r28
     ace:	9d 1f       	adc	r25, r29
     ad0:	08 0f       	add	r16, r24
     ad2:	19 1f       	adc	r17, r25
     ad4:	bc 01       	movw	r22, r24
     ad6:	f8 01       	movw	r30, r16
     ad8:	85 81       	ldd	r24, Z+5	; 0x05
     ada:	96 81       	ldd	r25, Z+6	; 0x06
     adc:	0e 94 ca 04 	call	0x994	; 0x994 <moveX>
		robot.posX = orderX[locaties];
     ae0:	f8 01       	movw	r30, r16
     ae2:	85 81       	ldd	r24, Z+5	; 0x05
     ae4:	96 81       	ldd	r25, Z+6	; 0x06
     ae6:	9a 83       	std	Y+2, r25	; 0x02
     ae8:	89 83       	std	Y+1, r24	; 0x01
        moveY(orderY[locaties], &robot);
     aea:	be 01       	movw	r22, r28
     aec:	6f 5f       	subi	r22, 0xFF	; 255
     aee:	7f 4f       	sbci	r23, 0xFF	; 255
     af0:	87 85       	ldd	r24, Z+15	; 0x0f
     af2:	90 89       	ldd	r25, Z+16	; 0x10
     af4:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <moveY>
		robot.posY = orderY[locaties];
     af8:	f8 01       	movw	r30, r16
     afa:	87 85       	ldd	r24, Z+15	; 0x0f
     afc:	90 89       	ldd	r25, Z+16	; 0x10
     afe:	9c 83       	std	Y+4, r25	; 0x04
     b00:	8b 83       	std	Y+3, r24	; 0x03
     b02:	88 ee       	ldi	r24, 0xE8	; 232
     b04:	93 e0       	ldi	r25, 0x03	; 3
     b06:	0e 94 8f 0b 	call	0x171e	; 0x171e <delay_ms>
        delay(1000);//wait 1 second
		
        updateDisplay((((completed+1)/total)*100),batteryPercentage(),logicsBot);
     b0a:	0e 94 5d 00 	call	0xba	; 0xba <batteryPercentage>
     b0e:	4b 01       	movw	r8, r22
     b10:	5c 01       	movw	r10, r24
     b12:	20 e0       	ldi	r18, 0x00	; 0
     b14:	30 e0       	ldi	r19, 0x00	; 0
     b16:	40 e8       	ldi	r20, 0x80	; 128
     b18:	5f e3       	ldi	r21, 0x3F	; 63
     b1a:	c3 01       	movw	r24, r6
     b1c:	b2 01       	movw	r22, r4
     b1e:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__addsf3>
     b22:	20 e0       	ldi	r18, 0x00	; 0
     b24:	30 e0       	ldi	r19, 0x00	; 0
     b26:	40 ea       	ldi	r20, 0xA0	; 160
     b28:	50 e4       	ldi	r21, 0x40	; 64
     b2a:	0e 94 47 06 	call	0xc8e	; 0xc8e <__divsf3>
     b2e:	20 e0       	ldi	r18, 0x00	; 0
     b30:	30 e0       	ldi	r19, 0x00	; 0
     b32:	48 ec       	ldi	r20, 0xC8	; 200
     b34:	52 e4       	ldi	r21, 0x42	; 66
     b36:	0e 94 7d 07 	call	0xefa	; 0xefa <__mulsf3>
     b3a:	2b 01       	movw	r4, r22
     b3c:	3c 01       	movw	r6, r24
     b3e:	c5 01       	movw	r24, r10
     b40:	b4 01       	movw	r22, r8
     b42:	0e 94 b9 06 	call	0xd72	; 0xd72 <__fixsfsi>
     b46:	4b 01       	movw	r8, r22
     b48:	5c 01       	movw	r10, r24
     b4a:	c3 01       	movw	r24, r6
     b4c:	b2 01       	movw	r22, r4
     b4e:	0e 94 b9 06 	call	0xd72	; 0xd72 <__fixsfsi>
     b52:	dc 01       	movw	r26, r24
     b54:	cb 01       	movw	r24, r22
     b56:	42 e0       	ldi	r20, 0x02	; 2
     b58:	b4 01       	movw	r22, r8
     b5a:	0e 94 7f 00 	call	0xfe	; 0xfe <updateDisplay>
	
	
	 //motorControl('S');
	//drive();
	
    for(int locaties = 0; locaties<arrayGrootte;locaties++)
     b5e:	ff ef       	ldi	r31, 0xFF	; 255
     b60:	ef 1a       	sub	r14, r31
     b62:	ff 0a       	sbc	r15, r31
     b64:	85 e0       	ldi	r24, 0x05	; 5
     b66:	e8 16       	cp	r14, r24
     b68:	f1 04       	cpc	r15, r1
     b6a:	0c f4       	brge	.+2      	; 0xb6e <warehouse+0x136>
     b6c:	a1 cf       	rjmp	.-190    	; 0xab0 <warehouse+0x78>
		robot.posY = orderY[locaties];
        delay(1000);//wait 1 second
		
        updateDisplay((((completed+1)/total)*100),batteryPercentage(),logicsBot);
    }
    moveY(0, &robot);
     b6e:	be 01       	movw	r22, r28
     b70:	6f 5f       	subi	r22, 0xFF	; 255
     b72:	7f 4f       	sbci	r23, 0xFF	; 255
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <moveY>
    moveX(0, &robot);
     b7c:	be 01       	movw	r22, r28
     b7e:	6f 5f       	subi	r22, 0xFF	; 255
     b80:	7f 4f       	sbci	r23, 0xFF	; 255
     b82:	80 e0       	ldi	r24, 0x00	; 0
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	0e 94 ca 04 	call	0x994	; 0x994 <moveX>
    //goHome();
}
     b8a:	69 96       	adiw	r28, 0x19	; 25
     b8c:	0f b6       	in	r0, 0x3f	; 63
     b8e:	f8 94       	cli
     b90:	de bf       	out	0x3e, r29	; 62
     b92:	0f be       	out	0x3f, r0	; 63
     b94:	cd bf       	out	0x3d, r28	; 61
     b96:	df 91       	pop	r29
     b98:	cf 91       	pop	r28
     b9a:	1f 91       	pop	r17
     b9c:	0f 91       	pop	r16
     b9e:	ff 90       	pop	r15
     ba0:	ef 90       	pop	r14
     ba2:	bf 90       	pop	r11
     ba4:	af 90       	pop	r10
     ba6:	9f 90       	pop	r9
     ba8:	8f 90       	pop	r8
     baa:	7f 90       	pop	r7
     bac:	6f 90       	pop	r6
     bae:	5f 90       	pop	r5
     bb0:	4f 90       	pop	r4
     bb2:	08 95       	ret

00000bb4 <__subsf3>:
     bb4:	50 58       	subi	r21, 0x80	; 128

00000bb6 <__addsf3>:
     bb6:	bb 27       	eor	r27, r27
     bb8:	aa 27       	eor	r26, r26
     bba:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <__addsf3x>
     bbe:	0c 94 43 07 	jmp	0xe86	; 0xe86 <__fp_round>
     bc2:	0e 94 35 07 	call	0xe6a	; 0xe6a <__fp_pscA>
     bc6:	38 f0       	brcs	.+14     	; 0xbd6 <__addsf3+0x20>
     bc8:	0e 94 3c 07 	call	0xe78	; 0xe78 <__fp_pscB>
     bcc:	20 f0       	brcs	.+8      	; 0xbd6 <__addsf3+0x20>
     bce:	39 f4       	brne	.+14     	; 0xbde <__addsf3+0x28>
     bd0:	9f 3f       	cpi	r25, 0xFF	; 255
     bd2:	19 f4       	brne	.+6      	; 0xbda <__addsf3+0x24>
     bd4:	26 f4       	brtc	.+8      	; 0xbde <__addsf3+0x28>
     bd6:	0c 94 32 07 	jmp	0xe64	; 0xe64 <__fp_nan>
     bda:	0e f4       	brtc	.+2      	; 0xbde <__addsf3+0x28>
     bdc:	e0 95       	com	r30
     bde:	e7 fb       	bst	r30, 7
     be0:	0c 94 2c 07 	jmp	0xe58	; 0xe58 <__fp_inf>

00000be4 <__addsf3x>:
     be4:	e9 2f       	mov	r30, r25
     be6:	0e 94 54 07 	call	0xea8	; 0xea8 <__fp_split3>
     bea:	58 f3       	brcs	.-42     	; 0xbc2 <__addsf3+0xc>
     bec:	ba 17       	cp	r27, r26
     bee:	62 07       	cpc	r22, r18
     bf0:	73 07       	cpc	r23, r19
     bf2:	84 07       	cpc	r24, r20
     bf4:	95 07       	cpc	r25, r21
     bf6:	20 f0       	brcs	.+8      	; 0xc00 <__addsf3x+0x1c>
     bf8:	79 f4       	brne	.+30     	; 0xc18 <__addsf3x+0x34>
     bfa:	a6 f5       	brtc	.+104    	; 0xc64 <__addsf3x+0x80>
     bfc:	0c 94 76 07 	jmp	0xeec	; 0xeec <__fp_zero>
     c00:	0e f4       	brtc	.+2      	; 0xc04 <__addsf3x+0x20>
     c02:	e0 95       	com	r30
     c04:	0b 2e       	mov	r0, r27
     c06:	ba 2f       	mov	r27, r26
     c08:	a0 2d       	mov	r26, r0
     c0a:	0b 01       	movw	r0, r22
     c0c:	b9 01       	movw	r22, r18
     c0e:	90 01       	movw	r18, r0
     c10:	0c 01       	movw	r0, r24
     c12:	ca 01       	movw	r24, r20
     c14:	a0 01       	movw	r20, r0
     c16:	11 24       	eor	r1, r1
     c18:	ff 27       	eor	r31, r31
     c1a:	59 1b       	sub	r21, r25
     c1c:	99 f0       	breq	.+38     	; 0xc44 <__addsf3x+0x60>
     c1e:	59 3f       	cpi	r21, 0xF9	; 249
     c20:	50 f4       	brcc	.+20     	; 0xc36 <__addsf3x+0x52>
     c22:	50 3e       	cpi	r21, 0xE0	; 224
     c24:	68 f1       	brcs	.+90     	; 0xc80 <__addsf3x+0x9c>
     c26:	1a 16       	cp	r1, r26
     c28:	f0 40       	sbci	r31, 0x00	; 0
     c2a:	a2 2f       	mov	r26, r18
     c2c:	23 2f       	mov	r18, r19
     c2e:	34 2f       	mov	r19, r20
     c30:	44 27       	eor	r20, r20
     c32:	58 5f       	subi	r21, 0xF8	; 248
     c34:	f3 cf       	rjmp	.-26     	; 0xc1c <__addsf3x+0x38>
     c36:	46 95       	lsr	r20
     c38:	37 95       	ror	r19
     c3a:	27 95       	ror	r18
     c3c:	a7 95       	ror	r26
     c3e:	f0 40       	sbci	r31, 0x00	; 0
     c40:	53 95       	inc	r21
     c42:	c9 f7       	brne	.-14     	; 0xc36 <__addsf3x+0x52>
     c44:	7e f4       	brtc	.+30     	; 0xc64 <__addsf3x+0x80>
     c46:	1f 16       	cp	r1, r31
     c48:	ba 0b       	sbc	r27, r26
     c4a:	62 0b       	sbc	r22, r18
     c4c:	73 0b       	sbc	r23, r19
     c4e:	84 0b       	sbc	r24, r20
     c50:	ba f0       	brmi	.+46     	; 0xc80 <__addsf3x+0x9c>
     c52:	91 50       	subi	r25, 0x01	; 1
     c54:	a1 f0       	breq	.+40     	; 0xc7e <__addsf3x+0x9a>
     c56:	ff 0f       	add	r31, r31
     c58:	bb 1f       	adc	r27, r27
     c5a:	66 1f       	adc	r22, r22
     c5c:	77 1f       	adc	r23, r23
     c5e:	88 1f       	adc	r24, r24
     c60:	c2 f7       	brpl	.-16     	; 0xc52 <__addsf3x+0x6e>
     c62:	0e c0       	rjmp	.+28     	; 0xc80 <__addsf3x+0x9c>
     c64:	ba 0f       	add	r27, r26
     c66:	62 1f       	adc	r22, r18
     c68:	73 1f       	adc	r23, r19
     c6a:	84 1f       	adc	r24, r20
     c6c:	48 f4       	brcc	.+18     	; 0xc80 <__addsf3x+0x9c>
     c6e:	87 95       	ror	r24
     c70:	77 95       	ror	r23
     c72:	67 95       	ror	r22
     c74:	b7 95       	ror	r27
     c76:	f7 95       	ror	r31
     c78:	9e 3f       	cpi	r25, 0xFE	; 254
     c7a:	08 f0       	brcs	.+2      	; 0xc7e <__addsf3x+0x9a>
     c7c:	b0 cf       	rjmp	.-160    	; 0xbde <__addsf3+0x28>
     c7e:	93 95       	inc	r25
     c80:	88 0f       	add	r24, r24
     c82:	08 f0       	brcs	.+2      	; 0xc86 <__addsf3x+0xa2>
     c84:	99 27       	eor	r25, r25
     c86:	ee 0f       	add	r30, r30
     c88:	97 95       	ror	r25
     c8a:	87 95       	ror	r24
     c8c:	08 95       	ret

00000c8e <__divsf3>:
     c8e:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <__divsf3x>
     c92:	0c 94 43 07 	jmp	0xe86	; 0xe86 <__fp_round>
     c96:	0e 94 3c 07 	call	0xe78	; 0xe78 <__fp_pscB>
     c9a:	58 f0       	brcs	.+22     	; 0xcb2 <__divsf3+0x24>
     c9c:	0e 94 35 07 	call	0xe6a	; 0xe6a <__fp_pscA>
     ca0:	40 f0       	brcs	.+16     	; 0xcb2 <__divsf3+0x24>
     ca2:	29 f4       	brne	.+10     	; 0xcae <__divsf3+0x20>
     ca4:	5f 3f       	cpi	r21, 0xFF	; 255
     ca6:	29 f0       	breq	.+10     	; 0xcb2 <__divsf3+0x24>
     ca8:	0c 94 2c 07 	jmp	0xe58	; 0xe58 <__fp_inf>
     cac:	51 11       	cpse	r21, r1
     cae:	0c 94 77 07 	jmp	0xeee	; 0xeee <__fp_szero>
     cb2:	0c 94 32 07 	jmp	0xe64	; 0xe64 <__fp_nan>

00000cb6 <__divsf3x>:
     cb6:	0e 94 54 07 	call	0xea8	; 0xea8 <__fp_split3>
     cba:	68 f3       	brcs	.-38     	; 0xc96 <__divsf3+0x8>

00000cbc <__divsf3_pse>:
     cbc:	99 23       	and	r25, r25
     cbe:	b1 f3       	breq	.-20     	; 0xcac <__divsf3+0x1e>
     cc0:	55 23       	and	r21, r21
     cc2:	91 f3       	breq	.-28     	; 0xca8 <__divsf3+0x1a>
     cc4:	95 1b       	sub	r25, r21
     cc6:	55 0b       	sbc	r21, r21
     cc8:	bb 27       	eor	r27, r27
     cca:	aa 27       	eor	r26, r26
     ccc:	62 17       	cp	r22, r18
     cce:	73 07       	cpc	r23, r19
     cd0:	84 07       	cpc	r24, r20
     cd2:	38 f0       	brcs	.+14     	; 0xce2 <__divsf3_pse+0x26>
     cd4:	9f 5f       	subi	r25, 0xFF	; 255
     cd6:	5f 4f       	sbci	r21, 0xFF	; 255
     cd8:	22 0f       	add	r18, r18
     cda:	33 1f       	adc	r19, r19
     cdc:	44 1f       	adc	r20, r20
     cde:	aa 1f       	adc	r26, r26
     ce0:	a9 f3       	breq	.-22     	; 0xccc <__divsf3_pse+0x10>
     ce2:	35 d0       	rcall	.+106    	; 0xd4e <__divsf3_pse+0x92>
     ce4:	0e 2e       	mov	r0, r30
     ce6:	3a f0       	brmi	.+14     	; 0xcf6 <__divsf3_pse+0x3a>
     ce8:	e0 e8       	ldi	r30, 0x80	; 128
     cea:	32 d0       	rcall	.+100    	; 0xd50 <__divsf3_pse+0x94>
     cec:	91 50       	subi	r25, 0x01	; 1
     cee:	50 40       	sbci	r21, 0x00	; 0
     cf0:	e6 95       	lsr	r30
     cf2:	00 1c       	adc	r0, r0
     cf4:	ca f7       	brpl	.-14     	; 0xce8 <__divsf3_pse+0x2c>
     cf6:	2b d0       	rcall	.+86     	; 0xd4e <__divsf3_pse+0x92>
     cf8:	fe 2f       	mov	r31, r30
     cfa:	29 d0       	rcall	.+82     	; 0xd4e <__divsf3_pse+0x92>
     cfc:	66 0f       	add	r22, r22
     cfe:	77 1f       	adc	r23, r23
     d00:	88 1f       	adc	r24, r24
     d02:	bb 1f       	adc	r27, r27
     d04:	26 17       	cp	r18, r22
     d06:	37 07       	cpc	r19, r23
     d08:	48 07       	cpc	r20, r24
     d0a:	ab 07       	cpc	r26, r27
     d0c:	b0 e8       	ldi	r27, 0x80	; 128
     d0e:	09 f0       	breq	.+2      	; 0xd12 <__divsf3_pse+0x56>
     d10:	bb 0b       	sbc	r27, r27
     d12:	80 2d       	mov	r24, r0
     d14:	bf 01       	movw	r22, r30
     d16:	ff 27       	eor	r31, r31
     d18:	93 58       	subi	r25, 0x83	; 131
     d1a:	5f 4f       	sbci	r21, 0xFF	; 255
     d1c:	3a f0       	brmi	.+14     	; 0xd2c <__divsf3_pse+0x70>
     d1e:	9e 3f       	cpi	r25, 0xFE	; 254
     d20:	51 05       	cpc	r21, r1
     d22:	78 f0       	brcs	.+30     	; 0xd42 <__divsf3_pse+0x86>
     d24:	0c 94 2c 07 	jmp	0xe58	; 0xe58 <__fp_inf>
     d28:	0c 94 77 07 	jmp	0xeee	; 0xeee <__fp_szero>
     d2c:	5f 3f       	cpi	r21, 0xFF	; 255
     d2e:	e4 f3       	brlt	.-8      	; 0xd28 <__divsf3_pse+0x6c>
     d30:	98 3e       	cpi	r25, 0xE8	; 232
     d32:	d4 f3       	brlt	.-12     	; 0xd28 <__divsf3_pse+0x6c>
     d34:	86 95       	lsr	r24
     d36:	77 95       	ror	r23
     d38:	67 95       	ror	r22
     d3a:	b7 95       	ror	r27
     d3c:	f7 95       	ror	r31
     d3e:	9f 5f       	subi	r25, 0xFF	; 255
     d40:	c9 f7       	brne	.-14     	; 0xd34 <__divsf3_pse+0x78>
     d42:	88 0f       	add	r24, r24
     d44:	91 1d       	adc	r25, r1
     d46:	96 95       	lsr	r25
     d48:	87 95       	ror	r24
     d4a:	97 f9       	bld	r25, 7
     d4c:	08 95       	ret
     d4e:	e1 e0       	ldi	r30, 0x01	; 1
     d50:	66 0f       	add	r22, r22
     d52:	77 1f       	adc	r23, r23
     d54:	88 1f       	adc	r24, r24
     d56:	bb 1f       	adc	r27, r27
     d58:	62 17       	cp	r22, r18
     d5a:	73 07       	cpc	r23, r19
     d5c:	84 07       	cpc	r24, r20
     d5e:	ba 07       	cpc	r27, r26
     d60:	20 f0       	brcs	.+8      	; 0xd6a <__divsf3_pse+0xae>
     d62:	62 1b       	sub	r22, r18
     d64:	73 0b       	sbc	r23, r19
     d66:	84 0b       	sbc	r24, r20
     d68:	ba 0b       	sbc	r27, r26
     d6a:	ee 1f       	adc	r30, r30
     d6c:	88 f7       	brcc	.-30     	; 0xd50 <__divsf3_pse+0x94>
     d6e:	e0 95       	com	r30
     d70:	08 95       	ret

00000d72 <__fixsfsi>:
     d72:	0e 94 c0 06 	call	0xd80	; 0xd80 <__fixunssfsi>
     d76:	68 94       	set
     d78:	b1 11       	cpse	r27, r1
     d7a:	0c 94 77 07 	jmp	0xeee	; 0xeee <__fp_szero>
     d7e:	08 95       	ret

00000d80 <__fixunssfsi>:
     d80:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__fp_splitA>
     d84:	88 f0       	brcs	.+34     	; 0xda8 <__fixunssfsi+0x28>
     d86:	9f 57       	subi	r25, 0x7F	; 127
     d88:	98 f0       	brcs	.+38     	; 0xdb0 <__fixunssfsi+0x30>
     d8a:	b9 2f       	mov	r27, r25
     d8c:	99 27       	eor	r25, r25
     d8e:	b7 51       	subi	r27, 0x17	; 23
     d90:	b0 f0       	brcs	.+44     	; 0xdbe <__fixunssfsi+0x3e>
     d92:	e1 f0       	breq	.+56     	; 0xdcc <__fixunssfsi+0x4c>
     d94:	66 0f       	add	r22, r22
     d96:	77 1f       	adc	r23, r23
     d98:	88 1f       	adc	r24, r24
     d9a:	99 1f       	adc	r25, r25
     d9c:	1a f0       	brmi	.+6      	; 0xda4 <__fixunssfsi+0x24>
     d9e:	ba 95       	dec	r27
     da0:	c9 f7       	brne	.-14     	; 0xd94 <__fixunssfsi+0x14>
     da2:	14 c0       	rjmp	.+40     	; 0xdcc <__fixunssfsi+0x4c>
     da4:	b1 30       	cpi	r27, 0x01	; 1
     da6:	91 f0       	breq	.+36     	; 0xdcc <__fixunssfsi+0x4c>
     da8:	0e 94 76 07 	call	0xeec	; 0xeec <__fp_zero>
     dac:	b1 e0       	ldi	r27, 0x01	; 1
     dae:	08 95       	ret
     db0:	0c 94 76 07 	jmp	0xeec	; 0xeec <__fp_zero>
     db4:	67 2f       	mov	r22, r23
     db6:	78 2f       	mov	r23, r24
     db8:	88 27       	eor	r24, r24
     dba:	b8 5f       	subi	r27, 0xF8	; 248
     dbc:	39 f0       	breq	.+14     	; 0xdcc <__fixunssfsi+0x4c>
     dbe:	b9 3f       	cpi	r27, 0xF9	; 249
     dc0:	cc f3       	brlt	.-14     	; 0xdb4 <__fixunssfsi+0x34>
     dc2:	86 95       	lsr	r24
     dc4:	77 95       	ror	r23
     dc6:	67 95       	ror	r22
     dc8:	b3 95       	inc	r27
     dca:	d9 f7       	brne	.-10     	; 0xdc2 <__fixunssfsi+0x42>
     dcc:	3e f4       	brtc	.+14     	; 0xddc <__fixunssfsi+0x5c>
     dce:	90 95       	com	r25
     dd0:	80 95       	com	r24
     dd2:	70 95       	com	r23
     dd4:	61 95       	neg	r22
     dd6:	7f 4f       	sbci	r23, 0xFF	; 255
     dd8:	8f 4f       	sbci	r24, 0xFF	; 255
     dda:	9f 4f       	sbci	r25, 0xFF	; 255
     ddc:	08 95       	ret

00000dde <__floatunsisf>:
     dde:	e8 94       	clt
     de0:	09 c0       	rjmp	.+18     	; 0xdf4 <__floatsisf+0x12>

00000de2 <__floatsisf>:
     de2:	97 fb       	bst	r25, 7
     de4:	3e f4       	brtc	.+14     	; 0xdf4 <__floatsisf+0x12>
     de6:	90 95       	com	r25
     de8:	80 95       	com	r24
     dea:	70 95       	com	r23
     dec:	61 95       	neg	r22
     dee:	7f 4f       	sbci	r23, 0xFF	; 255
     df0:	8f 4f       	sbci	r24, 0xFF	; 255
     df2:	9f 4f       	sbci	r25, 0xFF	; 255
     df4:	99 23       	and	r25, r25
     df6:	a9 f0       	breq	.+42     	; 0xe22 <__floatsisf+0x40>
     df8:	f9 2f       	mov	r31, r25
     dfa:	96 e9       	ldi	r25, 0x96	; 150
     dfc:	bb 27       	eor	r27, r27
     dfe:	93 95       	inc	r25
     e00:	f6 95       	lsr	r31
     e02:	87 95       	ror	r24
     e04:	77 95       	ror	r23
     e06:	67 95       	ror	r22
     e08:	b7 95       	ror	r27
     e0a:	f1 11       	cpse	r31, r1
     e0c:	f8 cf       	rjmp	.-16     	; 0xdfe <__floatsisf+0x1c>
     e0e:	fa f4       	brpl	.+62     	; 0xe4e <__floatsisf+0x6c>
     e10:	bb 0f       	add	r27, r27
     e12:	11 f4       	brne	.+4      	; 0xe18 <__floatsisf+0x36>
     e14:	60 ff       	sbrs	r22, 0
     e16:	1b c0       	rjmp	.+54     	; 0xe4e <__floatsisf+0x6c>
     e18:	6f 5f       	subi	r22, 0xFF	; 255
     e1a:	7f 4f       	sbci	r23, 0xFF	; 255
     e1c:	8f 4f       	sbci	r24, 0xFF	; 255
     e1e:	9f 4f       	sbci	r25, 0xFF	; 255
     e20:	16 c0       	rjmp	.+44     	; 0xe4e <__floatsisf+0x6c>
     e22:	88 23       	and	r24, r24
     e24:	11 f0       	breq	.+4      	; 0xe2a <__floatsisf+0x48>
     e26:	96 e9       	ldi	r25, 0x96	; 150
     e28:	11 c0       	rjmp	.+34     	; 0xe4c <__floatsisf+0x6a>
     e2a:	77 23       	and	r23, r23
     e2c:	21 f0       	breq	.+8      	; 0xe36 <__floatsisf+0x54>
     e2e:	9e e8       	ldi	r25, 0x8E	; 142
     e30:	87 2f       	mov	r24, r23
     e32:	76 2f       	mov	r23, r22
     e34:	05 c0       	rjmp	.+10     	; 0xe40 <__floatsisf+0x5e>
     e36:	66 23       	and	r22, r22
     e38:	71 f0       	breq	.+28     	; 0xe56 <__floatsisf+0x74>
     e3a:	96 e8       	ldi	r25, 0x86	; 134
     e3c:	86 2f       	mov	r24, r22
     e3e:	70 e0       	ldi	r23, 0x00	; 0
     e40:	60 e0       	ldi	r22, 0x00	; 0
     e42:	2a f0       	brmi	.+10     	; 0xe4e <__floatsisf+0x6c>
     e44:	9a 95       	dec	r25
     e46:	66 0f       	add	r22, r22
     e48:	77 1f       	adc	r23, r23
     e4a:	88 1f       	adc	r24, r24
     e4c:	da f7       	brpl	.-10     	; 0xe44 <__floatsisf+0x62>
     e4e:	88 0f       	add	r24, r24
     e50:	96 95       	lsr	r25
     e52:	87 95       	ror	r24
     e54:	97 f9       	bld	r25, 7
     e56:	08 95       	ret

00000e58 <__fp_inf>:
     e58:	97 f9       	bld	r25, 7
     e5a:	9f 67       	ori	r25, 0x7F	; 127
     e5c:	80 e8       	ldi	r24, 0x80	; 128
     e5e:	70 e0       	ldi	r23, 0x00	; 0
     e60:	60 e0       	ldi	r22, 0x00	; 0
     e62:	08 95       	ret

00000e64 <__fp_nan>:
     e64:	9f ef       	ldi	r25, 0xFF	; 255
     e66:	80 ec       	ldi	r24, 0xC0	; 192
     e68:	08 95       	ret

00000e6a <__fp_pscA>:
     e6a:	00 24       	eor	r0, r0
     e6c:	0a 94       	dec	r0
     e6e:	16 16       	cp	r1, r22
     e70:	17 06       	cpc	r1, r23
     e72:	18 06       	cpc	r1, r24
     e74:	09 06       	cpc	r0, r25
     e76:	08 95       	ret

00000e78 <__fp_pscB>:
     e78:	00 24       	eor	r0, r0
     e7a:	0a 94       	dec	r0
     e7c:	12 16       	cp	r1, r18
     e7e:	13 06       	cpc	r1, r19
     e80:	14 06       	cpc	r1, r20
     e82:	05 06       	cpc	r0, r21
     e84:	08 95       	ret

00000e86 <__fp_round>:
     e86:	09 2e       	mov	r0, r25
     e88:	03 94       	inc	r0
     e8a:	00 0c       	add	r0, r0
     e8c:	11 f4       	brne	.+4      	; 0xe92 <__fp_round+0xc>
     e8e:	88 23       	and	r24, r24
     e90:	52 f0       	brmi	.+20     	; 0xea6 <__fp_round+0x20>
     e92:	bb 0f       	add	r27, r27
     e94:	40 f4       	brcc	.+16     	; 0xea6 <__fp_round+0x20>
     e96:	bf 2b       	or	r27, r31
     e98:	11 f4       	brne	.+4      	; 0xe9e <__fp_round+0x18>
     e9a:	60 ff       	sbrs	r22, 0
     e9c:	04 c0       	rjmp	.+8      	; 0xea6 <__fp_round+0x20>
     e9e:	6f 5f       	subi	r22, 0xFF	; 255
     ea0:	7f 4f       	sbci	r23, 0xFF	; 255
     ea2:	8f 4f       	sbci	r24, 0xFF	; 255
     ea4:	9f 4f       	sbci	r25, 0xFF	; 255
     ea6:	08 95       	ret

00000ea8 <__fp_split3>:
     ea8:	57 fd       	sbrc	r21, 7
     eaa:	90 58       	subi	r25, 0x80	; 128
     eac:	44 0f       	add	r20, r20
     eae:	55 1f       	adc	r21, r21
     eb0:	59 f0       	breq	.+22     	; 0xec8 <__fp_splitA+0x10>
     eb2:	5f 3f       	cpi	r21, 0xFF	; 255
     eb4:	71 f0       	breq	.+28     	; 0xed2 <__fp_splitA+0x1a>
     eb6:	47 95       	ror	r20

00000eb8 <__fp_splitA>:
     eb8:	88 0f       	add	r24, r24
     eba:	97 fb       	bst	r25, 7
     ebc:	99 1f       	adc	r25, r25
     ebe:	61 f0       	breq	.+24     	; 0xed8 <__fp_splitA+0x20>
     ec0:	9f 3f       	cpi	r25, 0xFF	; 255
     ec2:	79 f0       	breq	.+30     	; 0xee2 <__fp_splitA+0x2a>
     ec4:	87 95       	ror	r24
     ec6:	08 95       	ret
     ec8:	12 16       	cp	r1, r18
     eca:	13 06       	cpc	r1, r19
     ecc:	14 06       	cpc	r1, r20
     ece:	55 1f       	adc	r21, r21
     ed0:	f2 cf       	rjmp	.-28     	; 0xeb6 <__fp_split3+0xe>
     ed2:	46 95       	lsr	r20
     ed4:	f1 df       	rcall	.-30     	; 0xeb8 <__fp_splitA>
     ed6:	08 c0       	rjmp	.+16     	; 0xee8 <__fp_splitA+0x30>
     ed8:	16 16       	cp	r1, r22
     eda:	17 06       	cpc	r1, r23
     edc:	18 06       	cpc	r1, r24
     ede:	99 1f       	adc	r25, r25
     ee0:	f1 cf       	rjmp	.-30     	; 0xec4 <__fp_splitA+0xc>
     ee2:	86 95       	lsr	r24
     ee4:	71 05       	cpc	r23, r1
     ee6:	61 05       	cpc	r22, r1
     ee8:	08 94       	sec
     eea:	08 95       	ret

00000eec <__fp_zero>:
     eec:	e8 94       	clt

00000eee <__fp_szero>:
     eee:	bb 27       	eor	r27, r27
     ef0:	66 27       	eor	r22, r22
     ef2:	77 27       	eor	r23, r23
     ef4:	cb 01       	movw	r24, r22
     ef6:	97 f9       	bld	r25, 7
     ef8:	08 95       	ret

00000efa <__mulsf3>:
     efa:	0e 94 90 07 	call	0xf20	; 0xf20 <__mulsf3x>
     efe:	0c 94 43 07 	jmp	0xe86	; 0xe86 <__fp_round>
     f02:	0e 94 35 07 	call	0xe6a	; 0xe6a <__fp_pscA>
     f06:	38 f0       	brcs	.+14     	; 0xf16 <__mulsf3+0x1c>
     f08:	0e 94 3c 07 	call	0xe78	; 0xe78 <__fp_pscB>
     f0c:	20 f0       	brcs	.+8      	; 0xf16 <__mulsf3+0x1c>
     f0e:	95 23       	and	r25, r21
     f10:	11 f0       	breq	.+4      	; 0xf16 <__mulsf3+0x1c>
     f12:	0c 94 2c 07 	jmp	0xe58	; 0xe58 <__fp_inf>
     f16:	0c 94 32 07 	jmp	0xe64	; 0xe64 <__fp_nan>
     f1a:	11 24       	eor	r1, r1
     f1c:	0c 94 77 07 	jmp	0xeee	; 0xeee <__fp_szero>

00000f20 <__mulsf3x>:
     f20:	0e 94 54 07 	call	0xea8	; 0xea8 <__fp_split3>
     f24:	70 f3       	brcs	.-36     	; 0xf02 <__mulsf3+0x8>

00000f26 <__mulsf3_pse>:
     f26:	95 9f       	mul	r25, r21
     f28:	c1 f3       	breq	.-16     	; 0xf1a <__mulsf3+0x20>
     f2a:	95 0f       	add	r25, r21
     f2c:	50 e0       	ldi	r21, 0x00	; 0
     f2e:	55 1f       	adc	r21, r21
     f30:	62 9f       	mul	r22, r18
     f32:	f0 01       	movw	r30, r0
     f34:	72 9f       	mul	r23, r18
     f36:	bb 27       	eor	r27, r27
     f38:	f0 0d       	add	r31, r0
     f3a:	b1 1d       	adc	r27, r1
     f3c:	63 9f       	mul	r22, r19
     f3e:	aa 27       	eor	r26, r26
     f40:	f0 0d       	add	r31, r0
     f42:	b1 1d       	adc	r27, r1
     f44:	aa 1f       	adc	r26, r26
     f46:	64 9f       	mul	r22, r20
     f48:	66 27       	eor	r22, r22
     f4a:	b0 0d       	add	r27, r0
     f4c:	a1 1d       	adc	r26, r1
     f4e:	66 1f       	adc	r22, r22
     f50:	82 9f       	mul	r24, r18
     f52:	22 27       	eor	r18, r18
     f54:	b0 0d       	add	r27, r0
     f56:	a1 1d       	adc	r26, r1
     f58:	62 1f       	adc	r22, r18
     f5a:	73 9f       	mul	r23, r19
     f5c:	b0 0d       	add	r27, r0
     f5e:	a1 1d       	adc	r26, r1
     f60:	62 1f       	adc	r22, r18
     f62:	83 9f       	mul	r24, r19
     f64:	a0 0d       	add	r26, r0
     f66:	61 1d       	adc	r22, r1
     f68:	22 1f       	adc	r18, r18
     f6a:	74 9f       	mul	r23, r20
     f6c:	33 27       	eor	r19, r19
     f6e:	a0 0d       	add	r26, r0
     f70:	61 1d       	adc	r22, r1
     f72:	23 1f       	adc	r18, r19
     f74:	84 9f       	mul	r24, r20
     f76:	60 0d       	add	r22, r0
     f78:	21 1d       	adc	r18, r1
     f7a:	82 2f       	mov	r24, r18
     f7c:	76 2f       	mov	r23, r22
     f7e:	6a 2f       	mov	r22, r26
     f80:	11 24       	eor	r1, r1
     f82:	9f 57       	subi	r25, 0x7F	; 127
     f84:	50 40       	sbci	r21, 0x00	; 0
     f86:	9a f0       	brmi	.+38     	; 0xfae <__mulsf3_pse+0x88>
     f88:	f1 f0       	breq	.+60     	; 0xfc6 <__mulsf3_pse+0xa0>
     f8a:	88 23       	and	r24, r24
     f8c:	4a f0       	brmi	.+18     	; 0xfa0 <__mulsf3_pse+0x7a>
     f8e:	ee 0f       	add	r30, r30
     f90:	ff 1f       	adc	r31, r31
     f92:	bb 1f       	adc	r27, r27
     f94:	66 1f       	adc	r22, r22
     f96:	77 1f       	adc	r23, r23
     f98:	88 1f       	adc	r24, r24
     f9a:	91 50       	subi	r25, 0x01	; 1
     f9c:	50 40       	sbci	r21, 0x00	; 0
     f9e:	a9 f7       	brne	.-22     	; 0xf8a <__mulsf3_pse+0x64>
     fa0:	9e 3f       	cpi	r25, 0xFE	; 254
     fa2:	51 05       	cpc	r21, r1
     fa4:	80 f0       	brcs	.+32     	; 0xfc6 <__mulsf3_pse+0xa0>
     fa6:	0c 94 2c 07 	jmp	0xe58	; 0xe58 <__fp_inf>
     faa:	0c 94 77 07 	jmp	0xeee	; 0xeee <__fp_szero>
     fae:	5f 3f       	cpi	r21, 0xFF	; 255
     fb0:	e4 f3       	brlt	.-8      	; 0xfaa <__mulsf3_pse+0x84>
     fb2:	98 3e       	cpi	r25, 0xE8	; 232
     fb4:	d4 f3       	brlt	.-12     	; 0xfaa <__mulsf3_pse+0x84>
     fb6:	86 95       	lsr	r24
     fb8:	77 95       	ror	r23
     fba:	67 95       	ror	r22
     fbc:	b7 95       	ror	r27
     fbe:	f7 95       	ror	r31
     fc0:	e7 95       	ror	r30
     fc2:	9f 5f       	subi	r25, 0xFF	; 255
     fc4:	c1 f7       	brne	.-16     	; 0xfb6 <__mulsf3_pse+0x90>
     fc6:	fe 2b       	or	r31, r30
     fc8:	88 0f       	add	r24, r24
     fca:	91 1d       	adc	r25, r1
     fcc:	96 95       	lsr	r25
     fce:	87 95       	ror	r24
     fd0:	97 f9       	bld	r25, 7
     fd2:	08 95       	ret

00000fd4 <_ZN15OrangutanAnalog7setModeEh.part.0>:
     fd4:	ec e7       	ldi	r30, 0x7C	; 124
     fd6:	f0 e0       	ldi	r31, 0x00	; 0
     fd8:	80 81       	ld	r24, Z
     fda:	8f 7d       	andi	r24, 0xDF	; 223
     fdc:	80 83       	st	Z, r24
     fde:	08 95       	ret

00000fe0 <_ZN15OrangutanAnalog7setModeEh>:
     fe0:	81 11       	cpse	r24, r1
     fe2:	03 c0       	rjmp	.+6      	; 0xfea <_ZN15OrangutanAnalog7setModeEh+0xa>
     fe4:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <_ZN15OrangutanAnalog7setModeEh.part.0>
     fe8:	08 95       	ret
     fea:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     fee:	80 62       	ori	r24, 0x20	; 32
     ff0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     ff4:	08 95       	ret

00000ff6 <_ZN15OrangutanAnalog7getModeEv>:
     ff6:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     ffa:	85 fb       	bst	r24, 5
     ffc:	88 27       	eor	r24, r24
     ffe:	80 f9       	bld	r24, 0
    1000:	08 95       	ret

00001002 <_ZN15OrangutanAnalog16conversionResultEv>:
    1002:	0e 94 fb 07 	call	0xff6	; 0xff6 <_ZN15OrangutanAnalog7getModeEv>
    1006:	88 23       	and	r24, r24
    1008:	21 f0       	breq	.+8      	; 0x1012 <_ZN15OrangutanAnalog16conversionResultEv+0x10>
    100a:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	08 95       	ret
    1012:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    1016:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    101a:	08 95       	ret

0000101c <_ZN15OrangutanAnalog15startConversionEhh>:
    101c:	80 32       	cpi	r24, 0x20	; 32
    101e:	a0 f4       	brcc	.+40     	; 0x1048 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
    1020:	97 e8       	ldi	r25, 0x87	; 135
    1022:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1026:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    102a:	66 23       	and	r22, r22
    102c:	11 f0       	breq	.+4      	; 0x1032 <_ZN15OrangutanAnalog15startConversionEhh+0x16>
    102e:	90 6c       	ori	r25, 0xC0	; 192
    1030:	02 c0       	rjmp	.+4      	; 0x1036 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
    1032:	9f 77       	andi	r25, 0x7F	; 127
    1034:	90 64       	ori	r25, 0x40	; 64
    1036:	90 7e       	andi	r25, 0xE0	; 224
    1038:	98 2b       	or	r25, r24
    103a:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    103e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1042:	80 64       	ori	r24, 0x40	; 64
    1044:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1048:	08 95       	ret

0000104a <_ZN15OrangutanAnalog11readAverageEhj>:
    104a:	a0 e0       	ldi	r26, 0x00	; 0
    104c:	b0 e0       	ldi	r27, 0x00	; 0
    104e:	eb e2       	ldi	r30, 0x2B	; 43
    1050:	f8 e0       	ldi	r31, 0x08	; 8
    1052:	0c 94 9e 11 	jmp	0x233c	; 0x233c <__prologue_saves__+0x14>
    1056:	eb 01       	movw	r28, r22
    1058:	60 e0       	ldi	r22, 0x00	; 0
    105a:	0e 94 0e 08 	call	0x101c	; 0x101c <_ZN15OrangutanAnalog15startConversionEhh>
    105e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1062:	86 fd       	sbrc	r24, 6
    1064:	fc cf       	rjmp	.-8      	; 0x105e <_ZN15OrangutanAnalog11readAverageEhj+0x14>
    1066:	8e 01       	movw	r16, r28
    1068:	c1 2c       	mov	r12, r1
    106a:	d1 2c       	mov	r13, r1
    106c:	76 01       	movw	r14, r12
    106e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1072:	80 64       	ori	r24, 0x40	; 64
    1074:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1078:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    107c:	86 fd       	sbrc	r24, 6
    107e:	fc cf       	rjmp	.-8      	; 0x1078 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
    1080:	0e 94 01 08 	call	0x1002	; 0x1002 <_ZN15OrangutanAnalog16conversionResultEv>
    1084:	c8 0e       	add	r12, r24
    1086:	d9 1e       	adc	r13, r25
    1088:	e1 1c       	adc	r14, r1
    108a:	f1 1c       	adc	r15, r1
    108c:	01 50       	subi	r16, 0x01	; 1
    108e:	11 09       	sbc	r17, r1
    1090:	01 15       	cp	r16, r1
    1092:	11 05       	cpc	r17, r1
    1094:	61 f7       	brne	.-40     	; 0x106e <_ZN15OrangutanAnalog11readAverageEhj+0x24>
    1096:	ce 01       	movw	r24, r28
    1098:	96 95       	lsr	r25
    109a:	87 95       	ror	r24
    109c:	c0 34       	cpi	r28, 0x40	; 64
    109e:	d1 05       	cpc	r29, r1
    10a0:	38 f4       	brcc	.+14     	; 0x10b0 <_ZN15OrangutanAnalog11readAverageEhj+0x66>
    10a2:	8c 0d       	add	r24, r12
    10a4:	9d 1d       	adc	r25, r13
    10a6:	be 01       	movw	r22, r28
    10a8:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodhi4>
    10ac:	cb 01       	movw	r24, r22
    10ae:	0e c0       	rjmp	.+28     	; 0x10cc <_ZN15OrangutanAnalog11readAverageEhj+0x82>
    10b0:	a7 01       	movw	r20, r14
    10b2:	96 01       	movw	r18, r12
    10b4:	28 0f       	add	r18, r24
    10b6:	39 1f       	adc	r19, r25
    10b8:	41 1d       	adc	r20, r1
    10ba:	51 1d       	adc	r21, r1
    10bc:	ca 01       	movw	r24, r20
    10be:	b9 01       	movw	r22, r18
    10c0:	9e 01       	movw	r18, r28
    10c2:	40 e0       	ldi	r20, 0x00	; 0
    10c4:	50 e0       	ldi	r21, 0x00	; 0
    10c6:	0e 94 2b 11 	call	0x2256	; 0x2256 <__udivmodsi4>
    10ca:	c9 01       	movw	r24, r18
    10cc:	cd b7       	in	r28, 0x3d	; 61
    10ce:	de b7       	in	r29, 0x3e	; 62
    10d0:	e8 e0       	ldi	r30, 0x08	; 8
    10d2:	0c 94 ba 11 	jmp	0x2374	; 0x2374 <__epilogue_restores__+0x14>

000010d6 <_ZN15OrangutanAnalog12toMillivoltsEj>:
    10d6:	cf 92       	push	r12
    10d8:	df 92       	push	r13
    10da:	ef 92       	push	r14
    10dc:	ff 92       	push	r15
    10de:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    10e2:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    10e6:	9c 01       	movw	r18, r24
    10e8:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__umulhisi3>
    10ec:	6b 01       	movw	r12, r22
    10ee:	7c 01       	movw	r14, r24
    10f0:	0e 94 fb 07 	call	0xff6	; 0xff6 <_ZN15OrangutanAnalog7getModeEv>
    10f4:	88 23       	and	r24, r24
    10f6:	59 f0       	breq	.+22     	; 0x110e <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
    10f8:	c7 01       	movw	r24, r14
    10fa:	b6 01       	movw	r22, r12
    10fc:	61 58       	subi	r22, 0x81	; 129
    10fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1100:	8f 4f       	sbci	r24, 0xFF	; 255
    1102:	9f 4f       	sbci	r25, 0xFF	; 255
    1104:	2f ef       	ldi	r18, 0xFF	; 255
    1106:	30 e0       	ldi	r19, 0x00	; 0
    1108:	40 e0       	ldi	r20, 0x00	; 0
    110a:	50 e0       	ldi	r21, 0x00	; 0
    110c:	0a c0       	rjmp	.+20     	; 0x1122 <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
    110e:	c7 01       	movw	r24, r14
    1110:	b6 01       	movw	r22, r12
    1112:	61 50       	subi	r22, 0x01	; 1
    1114:	7e 4f       	sbci	r23, 0xFE	; 254
    1116:	8f 4f       	sbci	r24, 0xFF	; 255
    1118:	9f 4f       	sbci	r25, 0xFF	; 255
    111a:	2f ef       	ldi	r18, 0xFF	; 255
    111c:	33 e0       	ldi	r19, 0x03	; 3
    111e:	40 e0       	ldi	r20, 0x00	; 0
    1120:	50 e0       	ldi	r21, 0x00	; 0
    1122:	0e 94 2b 11 	call	0x2256	; 0x2256 <__udivmodsi4>
    1126:	c9 01       	movw	r24, r18
    1128:	ff 90       	pop	r15
    112a:	ef 90       	pop	r14
    112c:	df 90       	pop	r13
    112e:	cf 90       	pop	r12
    1130:	08 95       	ret

00001132 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
    1132:	0e 94 25 08 	call	0x104a	; 0x104a <_ZN15OrangutanAnalog11readAverageEhj>
    1136:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <_ZN15OrangutanAnalog12toMillivoltsEj>
    113a:	08 95       	ret

0000113c <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
    113c:	1f 93       	push	r17
    113e:	cf 93       	push	r28
    1140:	df 93       	push	r29
    1142:	0e 94 fb 07 	call	0xff6	; 0xff6 <_ZN15OrangutanAnalog7getModeEv>
    1146:	18 2f       	mov	r17, r24
    1148:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <_ZN15OrangutanAnalog7setModeEh.part.0>
    114c:	6a e0       	ldi	r22, 0x0A	; 10
    114e:	70 e0       	ldi	r23, 0x00	; 0
    1150:	86 e0       	ldi	r24, 0x06	; 6
    1152:	0e 94 99 08 	call	0x1132	; 0x1132 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
    1156:	ec 01       	movw	r28, r24
    1158:	81 2f       	mov	r24, r17
    115a:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <_ZN15OrangutanAnalog7setModeEh>
    115e:	ce 01       	movw	r24, r28
    1160:	88 0f       	add	r24, r24
    1162:	99 1f       	adc	r25, r25
    1164:	8c 0f       	add	r24, r28
    1166:	9d 1f       	adc	r25, r29
    1168:	01 96       	adiw	r24, 0x01	; 1
    116a:	96 95       	lsr	r25
    116c:	87 95       	ror	r24
    116e:	df 91       	pop	r29
    1170:	cf 91       	pop	r28
    1172:	1f 91       	pop	r17
    1174:	08 95       	ret

00001176 <read_battery_millivolts_3pi>:
    1176:	0e 94 9e 08 	call	0x113c	; 0x113c <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
    117a:	08 95       	ret

0000117c <delay_us.constprop.0>:
    117c:	81 e0       	ldi	r24, 0x01	; 1
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	6f 93       	push	r22
    1182:	64 e0       	ldi	r22, 0x04	; 4
    1184:	6a 95       	dec	r22
    1186:	f1 f7       	brne	.-4      	; 0x1184 <delay_us.constprop.0+0x8>
    1188:	6f 91       	pop	r22
    118a:	01 97       	sbiw	r24, 0x01	; 1
    118c:	c9 f7       	brne	.-14     	; 0x1180 <delay_us.constprop.0+0x4>
    118e:	08 95       	ret

00001190 <_ZN12OrangutanLCD8busyWaitEv>:
    1190:	0f 93       	push	r16
    1192:	1f 93       	push	r17
    1194:	cf 93       	push	r28
    1196:	df 93       	push	r29
    1198:	1a b1       	in	r17, 0x0a	; 10
    119a:	57 98       	cbi	0x0a, 7	; 10
    119c:	5a 98       	cbi	0x0b, 2	; 11
    119e:	28 9a       	sbi	0x05, 0	; 5
    11a0:	c0 e0       	ldi	r28, 0x00	; 0
    11a2:	d0 e0       	ldi	r29, 0x00	; 0
    11a4:	0e 94 be 08 	call	0x117c	; 0x117c <delay_us.constprop.0>
    11a8:	5c 9a       	sbi	0x0b, 4	; 11
    11aa:	0e 94 be 08 	call	0x117c	; 0x117c <delay_us.constprop.0>
    11ae:	09 b1       	in	r16, 0x09	; 9
    11b0:	5c 98       	cbi	0x0b, 4	; 11
    11b2:	0e 94 be 08 	call	0x117c	; 0x117c <delay_us.constprop.0>
    11b6:	5c 9a       	sbi	0x0b, 4	; 11
    11b8:	0e 94 be 08 	call	0x117c	; 0x117c <delay_us.constprop.0>
    11bc:	5c 98       	cbi	0x0b, 4	; 11
    11be:	24 96       	adiw	r28, 0x04	; 4
    11c0:	07 ff       	sbrs	r16, 7
    11c2:	10 c0       	rjmp	.+32     	; 0x11e4 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    11c4:	ae 01       	movw	r20, r28
    11c6:	60 e0       	ldi	r22, 0x00	; 0
    11c8:	70 e0       	ldi	r23, 0x00	; 0
    11ca:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <__data_end>
    11ce:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <__data_end+0x1>
    11d2:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <__data_end+0x2>
    11d6:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <__data_end+0x3>
    11da:	48 17       	cp	r20, r24
    11dc:	59 07       	cpc	r21, r25
    11de:	6a 07       	cpc	r22, r26
    11e0:	7b 07       	cpc	r23, r27
    11e2:	00 f3       	brcs	.-64     	; 0x11a4 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    11e4:	1a b9       	out	0x0a, r17	; 10
    11e6:	df 91       	pop	r29
    11e8:	cf 91       	pop	r28
    11ea:	1f 91       	pop	r17
    11ec:	0f 91       	pop	r16
    11ee:	08 95       	ret

000011f0 <_ZN12OrangutanLCD8sendDataEh>:
    11f0:	95 b1       	in	r25, 0x05	; 5
    11f2:	28 2f       	mov	r18, r24
    11f4:	21 70       	andi	r18, 0x01	; 1
    11f6:	30 e0       	ldi	r19, 0x00	; 0
    11f8:	22 0f       	add	r18, r18
    11fa:	33 1f       	adc	r19, r19
    11fc:	48 2f       	mov	r20, r24
    11fe:	46 70       	andi	r20, 0x06	; 6
    1200:	68 e0       	ldi	r22, 0x08	; 8
    1202:	46 9f       	mul	r20, r22
    1204:	a0 01       	movw	r20, r0
    1206:	11 24       	eor	r1, r1
    1208:	24 2b       	or	r18, r20
    120a:	9d 7c       	andi	r25, 0xCD	; 205
    120c:	29 2b       	or	r18, r25
    120e:	25 b9       	out	0x05, r18	; 5
    1210:	9b b1       	in	r25, 0x0b	; 11
    1212:	88 70       	andi	r24, 0x08	; 8
    1214:	82 95       	swap	r24
    1216:	80 7f       	andi	r24, 0xF0	; 240
    1218:	9f 77       	andi	r25, 0x7F	; 127
    121a:	89 2b       	or	r24, r25
    121c:	8b b9       	out	0x0b, r24	; 11
    121e:	5c 9a       	sbi	0x0b, 4	; 11
    1220:	0e 94 be 08 	call	0x117c	; 0x117c <delay_us.constprop.0>
    1224:	5c 98       	cbi	0x0b, 4	; 11
    1226:	0e 94 be 08 	call	0x117c	; 0x117c <delay_us.constprop.0>
    122a:	08 95       	ret

0000122c <_ZN12OrangutanLCD4sendEhhh>:
    122c:	a0 e0       	ldi	r26, 0x00	; 0
    122e:	b0 e0       	ldi	r27, 0x00	; 0
    1230:	ec e1       	ldi	r30, 0x1C	; 28
    1232:	f9 e0       	ldi	r31, 0x09	; 9
    1234:	0c 94 9f 11 	jmp	0x233e	; 0x233e <__prologue_saves__+0x16>
    1238:	c8 2f       	mov	r28, r24
    123a:	d6 2e       	mov	r13, r22
    123c:	e4 2e       	mov	r14, r20
    123e:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <_ZZN12OrangutanLCD4initEvE11initialized>
    1242:	81 11       	cpse	r24, r1
    1244:	05 c0       	rjmp	.+10     	; 0x1250 <_ZN12OrangutanLCD4sendEhhh+0x24>
    1246:	81 e0       	ldi	r24, 0x01	; 1
    1248:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <_ZZN12OrangutanLCD4initEvE11initialized>
    124c:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <_ZN12OrangutanLCD5init2Ev>
    1250:	0e 94 c8 08 	call	0x1190	; 0x1190 <_ZN12OrangutanLCD8busyWaitEv>
    1254:	14 b1       	in	r17, 0x04	; 4
    1256:	d5 b1       	in	r29, 0x05	; 5
    1258:	fa b0       	in	r15, 0x0a	; 10
    125a:	0b b1       	in	r16, 0x0b	; 11
    125c:	28 98       	cbi	0x05, 0	; 5
    125e:	dd 20       	and	r13, r13
    1260:	11 f0       	breq	.+4      	; 0x1266 <_ZN12OrangutanLCD4sendEhhh+0x3a>
    1262:	5a 9a       	sbi	0x0b, 2	; 11
    1264:	01 c0       	rjmp	.+2      	; 0x1268 <_ZN12OrangutanLCD4sendEhhh+0x3c>
    1266:	5a 98       	cbi	0x0b, 2	; 11
    1268:	94 b1       	in	r25, 0x04	; 4
    126a:	92 63       	ori	r25, 0x32	; 50
    126c:	94 b9       	out	0x04, r25	; 4
    126e:	57 9a       	sbi	0x0a, 7	; 10
    1270:	81 e0       	ldi	r24, 0x01	; 1
    1272:	e8 16       	cp	r14, r24
    1274:	29 f0       	breq	.+10     	; 0x1280 <_ZN12OrangutanLCD4sendEhhh+0x54>
    1276:	8c 2f       	mov	r24, r28
    1278:	82 95       	swap	r24
    127a:	8f 70       	andi	r24, 0x0F	; 15
    127c:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <_ZN12OrangutanLCD8sendDataEh>
    1280:	8c 2f       	mov	r24, r28
    1282:	8f 70       	andi	r24, 0x0F	; 15
    1284:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <_ZN12OrangutanLCD8sendDataEh>
    1288:	fa b8       	out	0x0a, r15	; 10
    128a:	0b b9       	out	0x0b, r16	; 11
    128c:	14 b9       	out	0x04, r17	; 4
    128e:	d5 b9       	out	0x05, r29	; 5
    1290:	cd b7       	in	r28, 0x3d	; 61
    1292:	de b7       	in	r29, 0x3e	; 62
    1294:	e7 e0       	ldi	r30, 0x07	; 7
    1296:	0c 94 bb 11 	jmp	0x2376	; 0x2376 <__epilogue_restores__+0x16>

0000129a <_ZN12OrangutanLCD8send_cmdEh>:
    129a:	42 e0       	ldi	r20, 0x02	; 2
    129c:	60 e0       	ldi	r22, 0x00	; 0
    129e:	0e 94 16 09 	call	0x122c	; 0x122c <_ZN12OrangutanLCD4sendEhhh>
    12a2:	08 95       	ret

000012a4 <_ZN12OrangutanLCD9send_dataEh>:
    12a4:	42 e0       	ldi	r20, 0x02	; 2
    12a6:	61 e0       	ldi	r22, 0x01	; 1
    12a8:	0e 94 16 09 	call	0x122c	; 0x122c <_ZN12OrangutanLCD4sendEhhh>
    12ac:	08 95       	ret

000012ae <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    12ae:	41 e0       	ldi	r20, 0x01	; 1
    12b0:	60 e0       	ldi	r22, 0x00	; 0
    12b2:	0e 94 16 09 	call	0x122c	; 0x122c <_ZN12OrangutanLCD4sendEhhh>
    12b6:	08 95       	ret

000012b8 <_ZN12OrangutanLCD5init2Ev>:
    12b8:	80 e1       	ldi	r24, 0x10	; 16
    12ba:	97 e2       	ldi	r25, 0x27	; 39
    12bc:	a0 e0       	ldi	r26, 0x00	; 0
    12be:	b0 e0       	ldi	r27, 0x00	; 0
    12c0:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
    12c4:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <__data_end+0x1>
    12c8:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <__data_end+0x2>
    12cc:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <__data_end+0x3>
    12d0:	52 9a       	sbi	0x0a, 2	; 10
    12d2:	20 9a       	sbi	0x04, 0	; 4
    12d4:	54 9a       	sbi	0x0a, 4	; 10
    12d6:	8e e1       	ldi	r24, 0x1E	; 30
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	0e 94 8f 0b 	call	0x171e	; 0x171e <delay_ms>
    12de:	83 e0       	ldi	r24, 0x03	; 3
    12e0:	0e 94 57 09 	call	0x12ae	; 0x12ae <_ZN12OrangutanLCD13send_4bit_cmdEh>
    12e4:	86 e0       	ldi	r24, 0x06	; 6
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	0e 94 8f 0b 	call	0x171e	; 0x171e <delay_ms>
    12ec:	83 e0       	ldi	r24, 0x03	; 3
    12ee:	0e 94 57 09 	call	0x12ae	; 0x12ae <_ZN12OrangutanLCD13send_4bit_cmdEh>
    12f2:	82 e0       	ldi	r24, 0x02	; 2
    12f4:	90 e0       	ldi	r25, 0x00	; 0
    12f6:	0e 94 8f 0b 	call	0x171e	; 0x171e <delay_ms>
    12fa:	83 e0       	ldi	r24, 0x03	; 3
    12fc:	0e 94 57 09 	call	0x12ae	; 0x12ae <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1300:	82 e0       	ldi	r24, 0x02	; 2
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	0e 94 8f 0b 	call	0x171e	; 0x171e <delay_ms>
    1308:	82 e0       	ldi	r24, 0x02	; 2
    130a:	0e 94 57 09 	call	0x12ae	; 0x12ae <_ZN12OrangutanLCD13send_4bit_cmdEh>
    130e:	82 e0       	ldi	r24, 0x02	; 2
    1310:	90 e0       	ldi	r25, 0x00	; 0
    1312:	0e 94 8f 0b 	call	0x171e	; 0x171e <delay_ms>
    1316:	88 e2       	ldi	r24, 0x28	; 40
    1318:	0e 94 4d 09 	call	0x129a	; 0x129a <_ZN12OrangutanLCD8send_cmdEh>
    131c:	88 e0       	ldi	r24, 0x08	; 8
    131e:	0e 94 4d 09 	call	0x129a	; 0x129a <_ZN12OrangutanLCD8send_cmdEh>
    1322:	81 e0       	ldi	r24, 0x01	; 1
    1324:	0e 94 4d 09 	call	0x129a	; 0x129a <_ZN12OrangutanLCD8send_cmdEh>
    1328:	86 e0       	ldi	r24, 0x06	; 6
    132a:	0e 94 4d 09 	call	0x129a	; 0x129a <_ZN12OrangutanLCD8send_cmdEh>
    132e:	8c e0       	ldi	r24, 0x0C	; 12
    1330:	0e 94 4d 09 	call	0x129a	; 0x129a <_ZN12OrangutanLCD8send_cmdEh>
    1334:	08 95       	ret

00001336 <_ZN12OrangutanLCD5clearEv>:
    1336:	81 e0       	ldi	r24, 0x01	; 1
    1338:	0e 94 4d 09 	call	0x129a	; 0x129a <_ZN12OrangutanLCD8send_cmdEh>
    133c:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <printf_chars>
    1340:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <printf_chars+0x1>
    1344:	89 2b       	or	r24, r25
    1346:	f9 f0       	breq	.+62     	; 0x1386 <_ZN12OrangutanLCD5clearEv+0x50>
    1348:	60 e0       	ldi	r22, 0x00	; 0
    134a:	a0 e2       	ldi	r26, 0x20	; 32
    134c:	26 2f       	mov	r18, r22
    134e:	30 e0       	ldi	r19, 0x00	; 0
    1350:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <numLCDCols>
    1354:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <numLCDRows>
    1358:	90 e0       	ldi	r25, 0x00	; 0
    135a:	01 97       	sbiw	r24, 0x01	; 1
    135c:	78 9f       	mul	r23, r24
    135e:	a0 01       	movw	r20, r0
    1360:	79 9f       	mul	r23, r25
    1362:	50 0d       	add	r21, r0
    1364:	11 24       	eor	r1, r1
    1366:	24 17       	cp	r18, r20
    1368:	35 07       	cpc	r19, r21
    136a:	4c f4       	brge	.+18     	; 0x137e <_ZN12OrangutanLCD5clearEv+0x48>
    136c:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <printf_chars>
    1370:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <printf_chars+0x1>
    1374:	e2 0f       	add	r30, r18
    1376:	f3 1f       	adc	r31, r19
    1378:	a0 83       	st	Z, r26
    137a:	6f 5f       	subi	r22, 0xFF	; 255
    137c:	e7 cf       	rjmp	.-50     	; 0x134c <_ZN12OrangutanLCD5clearEv+0x16>
    137e:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <col>
    1382:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <row>
    1386:	08 95       	ret

00001388 <clear>:
    1388:	0e 94 9b 09 	call	0x1336	; 0x1336 <_ZN12OrangutanLCD5clearEv>
    138c:	08 95       	ret

0000138e <_ZN12OrangutanLCD5printEPKc>:
    138e:	cf 93       	push	r28
    1390:	df 93       	push	r29
    1392:	ec 01       	movw	r28, r24
    1394:	89 91       	ld	r24, Y+
    1396:	88 23       	and	r24, r24
    1398:	19 f0       	breq	.+6      	; 0x13a0 <_ZN12OrangutanLCD5printEPKc+0x12>
    139a:	0e 94 52 09 	call	0x12a4	; 0x12a4 <_ZN12OrangutanLCD9send_dataEh>
    139e:	fa cf       	rjmp	.-12     	; 0x1394 <_ZN12OrangutanLCD5printEPKc+0x6>
    13a0:	df 91       	pop	r29
    13a2:	cf 91       	pop	r28
    13a4:	08 95       	ret

000013a6 <print>:
    13a6:	0e 94 c7 09 	call	0x138e	; 0x138e <_ZN12OrangutanLCD5printEPKc>
    13aa:	08 95       	ret

000013ac <_ZN12OrangutanLCD5printEm>:
    13ac:	aa e0       	ldi	r26, 0x0A	; 10
    13ae:	b0 e0       	ldi	r27, 0x00	; 0
    13b0:	ec ed       	ldi	r30, 0xDC	; 220
    13b2:	f9 e0       	ldi	r31, 0x09	; 9
    13b4:	0c 94 9e 11 	jmp	0x233c	; 0x233c <__prologue_saves__+0x14>
    13b8:	1a e0       	ldi	r17, 0x0A	; 10
    13ba:	5a e0       	ldi	r21, 0x0A	; 10
    13bc:	c5 2e       	mov	r12, r21
    13be:	d1 2c       	mov	r13, r1
    13c0:	e1 2c       	mov	r14, r1
    13c2:	f1 2c       	mov	r15, r1
    13c4:	06 2f       	mov	r16, r22
    13c6:	a7 01       	movw	r20, r14
    13c8:	96 01       	movw	r18, r12
    13ca:	0e 94 2b 11 	call	0x2256	; 0x2256 <__udivmodsi4>
    13ce:	ca 01       	movw	r24, r20
    13d0:	b9 01       	movw	r22, r18
    13d2:	11 50       	subi	r17, 0x01	; 1
    13d4:	e1 e0       	ldi	r30, 0x01	; 1
    13d6:	f0 e0       	ldi	r31, 0x00	; 0
    13d8:	ec 0f       	add	r30, r28
    13da:	fd 1f       	adc	r31, r29
    13dc:	e1 0f       	add	r30, r17
    13de:	f1 1d       	adc	r31, r1
    13e0:	00 5d       	subi	r16, 0xD0	; 208
    13e2:	2a e0       	ldi	r18, 0x0A	; 10
    13e4:	62 9f       	mul	r22, r18
    13e6:	00 19       	sub	r16, r0
    13e8:	11 24       	eor	r1, r1
    13ea:	00 83       	st	Z, r16
    13ec:	61 15       	cp	r22, r1
    13ee:	71 05       	cpc	r23, r1
    13f0:	81 05       	cpc	r24, r1
    13f2:	91 05       	cpc	r25, r1
    13f4:	39 f7       	brne	.-50     	; 0x13c4 <_ZN12OrangutanLCD5printEm+0x18>
    13f6:	1a 30       	cpi	r17, 0x0A	; 10
    13f8:	58 f4       	brcc	.+22     	; 0x1410 <_ZN12OrangutanLCD5printEm+0x64>
    13fa:	e1 e0       	ldi	r30, 0x01	; 1
    13fc:	f0 e0       	ldi	r31, 0x00	; 0
    13fe:	ec 0f       	add	r30, r28
    1400:	fd 1f       	adc	r31, r29
    1402:	e1 0f       	add	r30, r17
    1404:	f1 1d       	adc	r31, r1
    1406:	80 81       	ld	r24, Z
    1408:	0e 94 52 09 	call	0x12a4	; 0x12a4 <_ZN12OrangutanLCD9send_dataEh>
    140c:	1f 5f       	subi	r17, 0xFF	; 255
    140e:	f3 cf       	rjmp	.-26     	; 0x13f6 <_ZN12OrangutanLCD5printEm+0x4a>
    1410:	2a 96       	adiw	r28, 0x0a	; 10
    1412:	e8 e0       	ldi	r30, 0x08	; 8
    1414:	0c 94 ba 11 	jmp	0x2374	; 0x2374 <__epilogue_restores__+0x14>

00001418 <_ZN12OrangutanLCD5printEl>:
    1418:	cf 92       	push	r12
    141a:	df 92       	push	r13
    141c:	ef 92       	push	r14
    141e:	ff 92       	push	r15
    1420:	6b 01       	movw	r12, r22
    1422:	7c 01       	movw	r14, r24
    1424:	97 ff       	sbrs	r25, 7
    1426:	0b c0       	rjmp	.+22     	; 0x143e <_ZN12OrangutanLCD5printEl+0x26>
    1428:	f0 94       	com	r15
    142a:	e0 94       	com	r14
    142c:	d0 94       	com	r13
    142e:	c0 94       	com	r12
    1430:	c1 1c       	adc	r12, r1
    1432:	d1 1c       	adc	r13, r1
    1434:	e1 1c       	adc	r14, r1
    1436:	f1 1c       	adc	r15, r1
    1438:	8d e2       	ldi	r24, 0x2D	; 45
    143a:	0e 94 52 09 	call	0x12a4	; 0x12a4 <_ZN12OrangutanLCD9send_dataEh>
    143e:	c7 01       	movw	r24, r14
    1440:	b6 01       	movw	r22, r12
    1442:	0e 94 d6 09 	call	0x13ac	; 0x13ac <_ZN12OrangutanLCD5printEm>
    1446:	ff 90       	pop	r15
    1448:	ef 90       	pop	r14
    144a:	df 90       	pop	r13
    144c:	cf 90       	pop	r12
    144e:	08 95       	ret

00001450 <print_long>:
    1450:	0e 94 0c 0a 	call	0x1418	; 0x1418 <_ZN12OrangutanLCD5printEl>
    1454:	08 95       	ret

00001456 <_ZN12OrangutanLCD6gotoXYEhh>:
    1456:	a5 e0       	ldi	r26, 0x05	; 5
    1458:	b0 e0       	ldi	r27, 0x00	; 0
    145a:	e1 e3       	ldi	r30, 0x31	; 49
    145c:	fa e0       	ldi	r31, 0x0A	; 10
    145e:	0c 94 a3 11 	jmp	0x2346	; 0x2346 <__prologue_saves__+0x1e>
    1462:	18 2f       	mov	r17, r24
    1464:	80 e8       	ldi	r24, 0x80	; 128
    1466:	89 83       	std	Y+1, r24	; 0x01
    1468:	80 ec       	ldi	r24, 0xC0	; 192
    146a:	8a 83       	std	Y+2, r24	; 0x02
    146c:	84 e9       	ldi	r24, 0x94	; 148
    146e:	8b 83       	std	Y+3, r24	; 0x03
    1470:	84 ed       	ldi	r24, 0xD4	; 212
    1472:	8c 83       	std	Y+4, r24	; 0x04
    1474:	fe 01       	movw	r30, r28
    1476:	e6 0f       	add	r30, r22
    1478:	f1 1d       	adc	r31, r1
    147a:	81 81       	ldd	r24, Z+1	; 0x01
    147c:	81 0f       	add	r24, r17
    147e:	6d 83       	std	Y+5, r22	; 0x05
    1480:	0e 94 4d 09 	call	0x129a	; 0x129a <_ZN12OrangutanLCD8send_cmdEh>
    1484:	10 93 3e 01 	sts	0x013E, r17	; 0x80013e <col>
    1488:	6d 81       	ldd	r22, Y+5	; 0x05
    148a:	60 93 3f 01 	sts	0x013F, r22	; 0x80013f <row>
    148e:	25 96       	adiw	r28, 0x05	; 5
    1490:	e3 e0       	ldi	r30, 0x03	; 3
    1492:	0c 94 bf 11 	jmp	0x237e	; 0x237e <__epilogue_restores__+0x1e>

00001496 <lcd_goto_xy>:
    1496:	0e 94 2b 0a 	call	0x1456	; 0x1456 <_ZN12OrangutanLCD6gotoXYEhh>
    149a:	08 95       	ret

0000149c <_ZN16OrangutanDigital9setOutputEhh>:
    149c:	88 30       	cpi	r24, 0x08	; 8
    149e:	58 f4       	brcc	.+22     	; 0x14b6 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    14a0:	91 e0       	ldi	r25, 0x01	; 1
    14a2:	01 c0       	rjmp	.+2      	; 0x14a6 <_ZN16OrangutanDigital9setOutputEhh+0xa>
    14a4:	99 0f       	add	r25, r25
    14a6:	8a 95       	dec	r24
    14a8:	ea f7       	brpl	.-6      	; 0x14a4 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    14aa:	89 2f       	mov	r24, r25
    14ac:	aa e2       	ldi	r26, 0x2A	; 42
    14ae:	b0 e0       	ldi	r27, 0x00	; 0
    14b0:	eb e2       	ldi	r30, 0x2B	; 43
    14b2:	f0 e0       	ldi	r31, 0x00	; 0
    14b4:	21 c0       	rjmp	.+66     	; 0x14f8 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    14b6:	8e 30       	cpi	r24, 0x0E	; 14
    14b8:	60 f4       	brcc	.+24     	; 0x14d2 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    14ba:	98 ef       	ldi	r25, 0xF8	; 248
    14bc:	98 0f       	add	r25, r24
    14be:	81 e0       	ldi	r24, 0x01	; 1
    14c0:	01 c0       	rjmp	.+2      	; 0x14c4 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    14c2:	88 0f       	add	r24, r24
    14c4:	9a 95       	dec	r25
    14c6:	ea f7       	brpl	.-6      	; 0x14c2 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    14c8:	a4 e2       	ldi	r26, 0x24	; 36
    14ca:	b0 e0       	ldi	r27, 0x00	; 0
    14cc:	e5 e2       	ldi	r30, 0x25	; 37
    14ce:	f0 e0       	ldi	r31, 0x00	; 0
    14d0:	13 c0       	rjmp	.+38     	; 0x14f8 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    14d2:	85 31       	cpi	r24, 0x15	; 21
    14d4:	60 f4       	brcc	.+24     	; 0x14ee <_ZN16OrangutanDigital9setOutputEhh+0x52>
    14d6:	92 ef       	ldi	r25, 0xF2	; 242
    14d8:	98 0f       	add	r25, r24
    14da:	81 e0       	ldi	r24, 0x01	; 1
    14dc:	01 c0       	rjmp	.+2      	; 0x14e0 <_ZN16OrangutanDigital9setOutputEhh+0x44>
    14de:	88 0f       	add	r24, r24
    14e0:	9a 95       	dec	r25
    14e2:	ea f7       	brpl	.-6      	; 0x14de <_ZN16OrangutanDigital9setOutputEhh+0x42>
    14e4:	a7 e2       	ldi	r26, 0x27	; 39
    14e6:	b0 e0       	ldi	r27, 0x00	; 0
    14e8:	e8 e2       	ldi	r30, 0x28	; 40
    14ea:	f0 e0       	ldi	r31, 0x00	; 0
    14ec:	05 c0       	rjmp	.+10     	; 0x14f8 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    14ee:	80 e0       	ldi	r24, 0x00	; 0
    14f0:	a0 e0       	ldi	r26, 0x00	; 0
    14f2:	b0 e0       	ldi	r27, 0x00	; 0
    14f4:	e0 e0       	ldi	r30, 0x00	; 0
    14f6:	f0 e0       	ldi	r31, 0x00	; 0
    14f8:	6f 3f       	cpi	r22, 0xFF	; 255
    14fa:	19 f4       	brne	.+6      	; 0x1502 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    14fc:	90 81       	ld	r25, Z
    14fe:	98 27       	eor	r25, r24
    1500:	09 c0       	rjmp	.+18     	; 0x1514 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    1502:	66 23       	and	r22, r22
    1504:	19 f0       	breq	.+6      	; 0x150c <_ZN16OrangutanDigital9setOutputEhh+0x70>
    1506:	90 81       	ld	r25, Z
    1508:	98 2b       	or	r25, r24
    150a:	04 c0       	rjmp	.+8      	; 0x1514 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    150c:	20 81       	ld	r18, Z
    150e:	98 2f       	mov	r25, r24
    1510:	90 95       	com	r25
    1512:	92 23       	and	r25, r18
    1514:	90 83       	st	Z, r25
    1516:	9c 91       	ld	r25, X
    1518:	98 2b       	or	r25, r24
    151a:	9c 93       	st	X, r25
    151c:	08 95       	ret

0000151e <_ZN15OrangutanMotors5init2Ev>:
    151e:	83 ef       	ldi	r24, 0xF3	; 243
    1520:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1524:	84 bd       	out	0x24, r24	; 36
    1526:	82 e0       	ldi	r24, 0x02	; 2
    1528:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    152c:	85 bd       	out	0x25, r24	; 37
    152e:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    1532:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    1536:	18 bc       	out	0x28, r1	; 40
    1538:	17 bc       	out	0x27, r1	; 39
    153a:	60 e0       	ldi	r22, 0x00	; 0
    153c:	86 e0       	ldi	r24, 0x06	; 6
    153e:	0e 94 4e 0a 	call	0x149c	; 0x149c <_ZN16OrangutanDigital9setOutputEhh>
    1542:	60 e0       	ldi	r22, 0x00	; 0
    1544:	85 e0       	ldi	r24, 0x05	; 5
    1546:	0e 94 4e 0a 	call	0x149c	; 0x149c <_ZN16OrangutanDigital9setOutputEhh>
    154a:	60 e0       	ldi	r22, 0x00	; 0
    154c:	8b e0       	ldi	r24, 0x0B	; 11
    154e:	0e 94 4e 0a 	call	0x149c	; 0x149c <_ZN16OrangutanDigital9setOutputEhh>
    1552:	60 e0       	ldi	r22, 0x00	; 0
    1554:	83 e0       	ldi	r24, 0x03	; 3
    1556:	0e 94 4e 0a 	call	0x149c	; 0x149c <_ZN16OrangutanDigital9setOutputEhh>
    155a:	08 95       	ret

0000155c <_ZN15OrangutanMotors4initEv>:
    155c:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <_ZZN15OrangutanMotors4initEvE11initialized>
    1560:	81 11       	cpse	r24, r1
    1562:	05 c0       	rjmp	.+10     	; 0x156e <_ZN15OrangutanMotors4initEv+0x12>
    1564:	81 e0       	ldi	r24, 0x01	; 1
    1566:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <_ZZN15OrangutanMotors4initEvE11initialized>
    156a:	0e 94 8f 0a 	call	0x151e	; 0x151e <_ZN15OrangutanMotors5init2Ev>
    156e:	08 95       	ret

00001570 <_ZN15OrangutanMotors10setM1SpeedEi>:
    1570:	cf 93       	push	r28
    1572:	df 93       	push	r29
    1574:	ec 01       	movw	r28, r24
    1576:	0e 94 ae 0a 	call	0x155c	; 0x155c <_ZN15OrangutanMotors4initEv>
    157a:	d7 ff       	sbrs	r29, 7
    157c:	05 c0       	rjmp	.+10     	; 0x1588 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    157e:	d1 95       	neg	r29
    1580:	c1 95       	neg	r28
    1582:	d1 09       	sbc	r29, r1
    1584:	81 e0       	ldi	r24, 0x01	; 1
    1586:	01 c0       	rjmp	.+2      	; 0x158a <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    1588:	80 e0       	ldi	r24, 0x00	; 0
    158a:	cf 3f       	cpi	r28, 0xFF	; 255
    158c:	d1 05       	cpc	r29, r1
    158e:	19 f0       	breq	.+6      	; 0x1596 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    1590:	14 f0       	brlt	.+4      	; 0x1596 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    1592:	cf ef       	ldi	r28, 0xFF	; 255
    1594:	d0 e0       	ldi	r29, 0x00	; 0
    1596:	88 23       	and	r24, r24
    1598:	19 f0       	breq	.+6      	; 0x15a0 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    159a:	18 bc       	out	0x28, r1	; 40
    159c:	c7 bd       	out	0x27, r28	; 39
    159e:	02 c0       	rjmp	.+4      	; 0x15a4 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    15a0:	c8 bd       	out	0x28, r28	; 40
    15a2:	17 bc       	out	0x27, r1	; 39
    15a4:	df 91       	pop	r29
    15a6:	cf 91       	pop	r28
    15a8:	08 95       	ret

000015aa <_ZN15OrangutanMotors10setM2SpeedEi>:
    15aa:	cf 93       	push	r28
    15ac:	df 93       	push	r29
    15ae:	ec 01       	movw	r28, r24
    15b0:	0e 94 ae 0a 	call	0x155c	; 0x155c <_ZN15OrangutanMotors4initEv>
    15b4:	d7 ff       	sbrs	r29, 7
    15b6:	05 c0       	rjmp	.+10     	; 0x15c2 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    15b8:	d1 95       	neg	r29
    15ba:	c1 95       	neg	r28
    15bc:	d1 09       	sbc	r29, r1
    15be:	81 e0       	ldi	r24, 0x01	; 1
    15c0:	01 c0       	rjmp	.+2      	; 0x15c4 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    15c2:	80 e0       	ldi	r24, 0x00	; 0
    15c4:	cf 3f       	cpi	r28, 0xFF	; 255
    15c6:	d1 05       	cpc	r29, r1
    15c8:	19 f0       	breq	.+6      	; 0x15d0 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    15ca:	14 f0       	brlt	.+4      	; 0x15d0 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    15cc:	cf ef       	ldi	r28, 0xFF	; 255
    15ce:	d0 e0       	ldi	r29, 0x00	; 0
    15d0:	88 23       	and	r24, r24
    15d2:	29 f0       	breq	.+10     	; 0x15de <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    15d4:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    15d8:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    15dc:	04 c0       	rjmp	.+8      	; 0x15e6 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    15de:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    15e2:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    15e6:	df 91       	pop	r29
    15e8:	cf 91       	pop	r28
    15ea:	08 95       	ret

000015ec <_ZN15OrangutanMotors9setSpeedsEii>:
    15ec:	cf 93       	push	r28
    15ee:	df 93       	push	r29
    15f0:	eb 01       	movw	r28, r22
    15f2:	0e 94 b8 0a 	call	0x1570	; 0x1570 <_ZN15OrangutanMotors10setM1SpeedEi>
    15f6:	ce 01       	movw	r24, r28
    15f8:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <_ZN15OrangutanMotors10setM2SpeedEi>
    15fc:	df 91       	pop	r29
    15fe:	cf 91       	pop	r28
    1600:	08 95       	ret

00001602 <set_motors>:
    1602:	0e 94 f6 0a 	call	0x15ec	; 0x15ec <_ZN15OrangutanMotors9setSpeedsEii>
    1606:	08 95       	ret

00001608 <_ZN20OrangutanPushbuttons5init2Ev>:
    1608:	84 b1       	in	r24, 0x04	; 4
    160a:	8d 7c       	andi	r24, 0xCD	; 205
    160c:	84 b9       	out	0x04, r24	; 4
    160e:	85 b1       	in	r24, 0x05	; 5
    1610:	82 63       	ori	r24, 0x32	; 50
    1612:	85 b9       	out	0x05, r24	; 5
    1614:	85 e0       	ldi	r24, 0x05	; 5
    1616:	90 e0       	ldi	r25, 0x00	; 0
    1618:	6f 93       	push	r22
    161a:	64 e0       	ldi	r22, 0x04	; 4
    161c:	6a 95       	dec	r22
    161e:	f1 f7       	brne	.-4      	; 0x161c <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    1620:	6f 91       	pop	r22
    1622:	01 97       	sbiw	r24, 0x01	; 1
    1624:	c9 f7       	brne	.-14     	; 0x1618 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    1626:	08 95       	ret

00001628 <_ZN20OrangutanPushbuttons4initEv>:
    1628:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    162c:	81 11       	cpse	r24, r1
    162e:	05 c0       	rjmp	.+10     	; 0x163a <_ZN20OrangutanPushbuttons4initEv+0x12>
    1630:	81 e0       	ldi	r24, 0x01	; 1
    1632:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    1636:	0e 94 04 0b 	call	0x1608	; 0x1608 <_ZN20OrangutanPushbuttons5init2Ev>
    163a:	08 95       	ret

0000163c <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    163c:	cf 93       	push	r28
    163e:	c8 2f       	mov	r28, r24
    1640:	0e 94 14 0b 	call	0x1628	; 0x1628 <_ZN20OrangutanPushbuttons4initEv>
    1644:	83 b1       	in	r24, 0x03	; 3
    1646:	8c 23       	and	r24, r28
    1648:	e9 f3       	breq	.-6      	; 0x1644 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    164a:	8a e0       	ldi	r24, 0x0A	; 10
    164c:	90 e0       	ldi	r25, 0x00	; 0
    164e:	0e 94 8f 0b 	call	0x171e	; 0x171e <delay_ms>
    1652:	83 b1       	in	r24, 0x03	; 3
    1654:	8c 23       	and	r24, r28
    1656:	b1 f3       	breq	.-20     	; 0x1644 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1658:	83 b1       	in	r24, 0x03	; 3
    165a:	8c 23       	and	r24, r28
    165c:	cf 91       	pop	r28
    165e:	08 95       	ret

00001660 <wait_for_button_release>:
    1660:	0e 94 1e 0b 	call	0x163c	; 0x163c <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    1664:	08 95       	ret

00001666 <_ZN20OrangutanPushbuttons9isPressedEh>:
    1666:	a1 e0       	ldi	r26, 0x01	; 1
    1668:	b0 e0       	ldi	r27, 0x00	; 0
    166a:	e9 e3       	ldi	r30, 0x39	; 57
    166c:	fb e0       	ldi	r31, 0x0B	; 11
    166e:	0c 94 a4 11 	jmp	0x2348	; 0x2348 <__prologue_saves__+0x20>
    1672:	89 83       	std	Y+1, r24	; 0x01
    1674:	0e 94 14 0b 	call	0x1628	; 0x1628 <_ZN20OrangutanPushbuttons4initEv>
    1678:	93 b1       	in	r25, 0x03	; 3
    167a:	90 95       	com	r25
    167c:	89 81       	ldd	r24, Y+1	; 0x01
    167e:	89 23       	and	r24, r25
    1680:	21 96       	adiw	r28, 0x01	; 1
    1682:	e2 e0       	ldi	r30, 0x02	; 2
    1684:	0c 94 c0 11 	jmp	0x2380	; 0x2380 <__epilogue_restores__+0x20>

00001688 <button_is_pressed>:
    1688:	0e 94 33 0b 	call	0x1666	; 0x1666 <_ZN20OrangutanPushbuttons9isPressedEh>
    168c:	08 95       	ret

0000168e <__vector_9>:
    168e:	2f 92       	push	r2
    1690:	8f 93       	push	r24
    1692:	9f 93       	push	r25
    1694:	2f b6       	in	r2, 0x3f	; 63
    1696:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <tickCount+0x1>
    169a:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <tickCount+0x2>
    169e:	01 96       	adiw	r24, 0x01	; 1
    16a0:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <tickCount+0x1>
    16a4:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <tickCount+0x2>
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    16aa:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <tickCount+0x3>
    16ae:	89 1f       	adc	r24, r25
    16b0:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <tickCount+0x3>
    16b4:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <us_over_10+0x1>
    16b8:	9c 5f       	subi	r25, 0xFC	; 252
    16ba:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <us_over_10+0x1>
    16be:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <us_over_10>
    16c2:	80 51       	subi	r24, 0x10	; 16
    16c4:	97 42       	sbci	r25, 0x27	; 39
    16c6:	c0 f0       	brcs	.+48     	; 0x16f8 <end>
    16c8:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <us_over_10+0x1>
    16cc:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <us_over_10>
    16d0:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <msCounter>
    16d4:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <msCounter+0x1>
    16d8:	01 96       	adiw	r24, 0x01	; 1
    16da:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <msCounter>
    16de:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <msCounter+0x1>
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <msCounter+0x2>
    16e8:	89 1f       	adc	r24, r25
    16ea:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <msCounter+0x2>
    16ee:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <msCounter+0x3>
    16f2:	89 1f       	adc	r24, r25
    16f4:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <msCounter+0x3>

000016f8 <end>:
    16f8:	2f be       	out	0x3f, r2	; 63
    16fa:	9f 91       	pop	r25
    16fc:	8f 91       	pop	r24
    16fe:	2f 90       	pop	r2
    1700:	18 95       	reti

00001702 <_ZN13OrangutanTime17delayMillisecondsEj>:
    1702:	28 ee       	ldi	r18, 0xE8	; 232
    1704:	33 e0       	ldi	r19, 0x03	; 3
    1706:	01 97       	sbiw	r24, 0x01	; 1
    1708:	48 f0       	brcs	.+18     	; 0x171c <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    170a:	f9 01       	movw	r30, r18
    170c:	6f 93       	push	r22
    170e:	64 e0       	ldi	r22, 0x04	; 4
    1710:	6a 95       	dec	r22
    1712:	f1 f7       	brne	.-4      	; 0x1710 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    1714:	6f 91       	pop	r22
    1716:	31 97       	sbiw	r30, 0x01	; 1
    1718:	c9 f7       	brne	.-14     	; 0x170c <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    171a:	f5 cf       	rjmp	.-22     	; 0x1706 <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    171c:	08 95       	ret

0000171e <delay_ms>:
    171e:	0e 94 81 0b 	call	0x1702	; 0x1702 <_ZN13OrangutanTime17delayMillisecondsEj>
    1722:	08 95       	ret

00001724 <_ZN13OrangutanTime5init2Ev>:
    1724:	e0 e7       	ldi	r30, 0x70	; 112
    1726:	f0 e0       	ldi	r31, 0x00	; 0
    1728:	80 81       	ld	r24, Z
    172a:	8e 7f       	andi	r24, 0xFE	; 254
    172c:	80 83       	st	Z, r24
    172e:	a0 eb       	ldi	r26, 0xB0	; 176
    1730:	b0 e0       	ldi	r27, 0x00	; 0
    1732:	8c 91       	ld	r24, X
    1734:	83 60       	ori	r24, 0x03	; 3
    1736:	8c 93       	st	X, r24
    1738:	a1 eb       	ldi	r26, 0xB1	; 177
    173a:	b0 e0       	ldi	r27, 0x00	; 0
    173c:	8c 91       	ld	r24, X
    173e:	80 7f       	andi	r24, 0xF0	; 240
    1740:	8c 93       	st	X, r24
    1742:	8c 91       	ld	r24, X
    1744:	82 60       	ori	r24, 0x02	; 2
    1746:	8c 93       	st	X, r24
    1748:	b8 9a       	sbi	0x17, 0	; 23
    174a:	80 81       	ld	r24, Z
    174c:	81 60       	ori	r24, 0x01	; 1
    174e:	80 83       	st	Z, r24
    1750:	78 94       	sei
    1752:	08 95       	ret

00001754 <_ZN13OrangutanTime4initEv>:
    1754:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <_ZZN13OrangutanTime4initEvE11initialized>
    1758:	81 11       	cpse	r24, r1
    175a:	05 c0       	rjmp	.+10     	; 0x1766 <_ZN13OrangutanTime4initEv+0x12>
    175c:	81 e0       	ldi	r24, 0x01	; 1
    175e:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <_ZZN13OrangutanTime4initEvE11initialized>
    1762:	0e 94 92 0b 	call	0x1724	; 0x1724 <_ZN13OrangutanTime5init2Ev>
    1766:	08 95       	ret

00001768 <_ZN13OrangutanTime5resetEv>:
    1768:	0e 94 aa 0b 	call	0x1754	; 0x1754 <_ZN13OrangutanTime4initEv>
    176c:	e0 e7       	ldi	r30, 0x70	; 112
    176e:	f0 e0       	ldi	r31, 0x00	; 0
    1770:	80 81       	ld	r24, Z
    1772:	8e 7f       	andi	r24, 0xFE	; 254
    1774:	80 83       	st	Z, r24
    1776:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <msCounter>
    177a:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <msCounter+0x1>
    177e:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <msCounter+0x2>
    1782:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <msCounter+0x3>
    1786:	10 92 43 01 	sts	0x0143, r1	; 0x800143 <us_over_10+0x1>
    178a:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <us_over_10>
    178e:	80 81       	ld	r24, Z
    1790:	81 60       	ori	r24, 0x01	; 1
    1792:	80 83       	st	Z, r24
    1794:	08 95       	ret

00001796 <calibrate_line_sensors>:
    1796:	68 2f       	mov	r22, r24
    1798:	8c e4       	ldi	r24, 0x4C	; 76
    179a:	91 e0       	ldi	r25, 0x01	; 1
    179c:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <_ZN16PololuQTRSensors9calibrateEh>
    17a0:	08 95       	ret

000017a2 <read_line>:
    17a2:	46 2f       	mov	r20, r22
    17a4:	20 e0       	ldi	r18, 0x00	; 0
    17a6:	bc 01       	movw	r22, r24
    17a8:	8c e4       	ldi	r24, 0x4C	; 76
    17aa:	91 e0       	ldi	r25, 0x01	; 1
    17ac:	0e 94 84 10 	call	0x2108	; 0x2108 <_ZN16PololuQTRSensors8readLineEPjhh>
    17b0:	08 95       	ret

000017b2 <_ZN9Pololu3pi4initEjh>:
    17b2:	0f 93       	push	r16
    17b4:	cf 93       	push	r28
    17b6:	df 93       	push	r29
    17b8:	00 d0       	rcall	.+0      	; 0x17ba <_ZN9Pololu3pi4initEjh+0x8>
    17ba:	00 d0       	rcall	.+0      	; 0x17bc <_ZN9Pololu3pi4initEjh+0xa>
    17bc:	1f 92       	push	r1
    17be:	cd b7       	in	r28, 0x3d	; 61
    17c0:	de b7       	in	r29, 0x3e	; 62
    17c2:	9c 01       	movw	r18, r24
    17c4:	85 e0       	ldi	r24, 0x05	; 5
    17c6:	ee e1       	ldi	r30, 0x1E	; 30
    17c8:	f1 e0       	ldi	r31, 0x01	; 1
    17ca:	de 01       	movw	r26, r28
    17cc:	11 96       	adiw	r26, 0x01	; 1
    17ce:	01 90       	ld	r0, Z+
    17d0:	0d 92       	st	X+, r0
    17d2:	8a 95       	dec	r24
    17d4:	e1 f7       	brne	.-8      	; 0x17ce <_ZN9Pololu3pi4initEjh+0x1c>
    17d6:	66 23       	and	r22, r22
    17d8:	11 f0       	breq	.+4      	; 0x17de <_ZN9Pololu3pi4initEjh+0x2c>
    17da:	0f ef       	ldi	r16, 0xFF	; 255
    17dc:	01 c0       	rjmp	.+2      	; 0x17e0 <_ZN9Pololu3pi4initEjh+0x2e>
    17de:	03 e1       	ldi	r16, 0x13	; 19
    17e0:	45 e0       	ldi	r20, 0x05	; 5
    17e2:	be 01       	movw	r22, r28
    17e4:	6f 5f       	subi	r22, 0xFF	; 255
    17e6:	7f 4f       	sbci	r23, 0xFF	; 255
    17e8:	8c e4       	ldi	r24, 0x4C	; 76
    17ea:	91 e0       	ldi	r25, 0x01	; 1
    17ec:	0e 94 ab 0c 	call	0x1956	; 0x1956 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    17f0:	8c e4       	ldi	r24, 0x4C	; 76
    17f2:	91 e0       	ldi	r25, 0x01	; 1
    17f4:	0e 94 82 0c 	call	0x1904	; 0x1904 <_ZN16PololuQTRSensors11emittersOffEv>
    17f8:	0e 94 b4 0b 	call	0x1768	; 0x1768 <_ZN13OrangutanTime5resetEv>
    17fc:	0f 90       	pop	r0
    17fe:	0f 90       	pop	r0
    1800:	0f 90       	pop	r0
    1802:	0f 90       	pop	r0
    1804:	0f 90       	pop	r0
    1806:	df 91       	pop	r29
    1808:	cf 91       	pop	r28
    180a:	0f 91       	pop	r16
    180c:	08 95       	ret

0000180e <pololu_3pi_init>:
    180e:	60 e0       	ldi	r22, 0x00	; 0
    1810:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <_ZN9Pololu3pi4initEjh>
    1814:	08 95       	ret

00001816 <_GLOBAL__sub_D_pololu_3pi_init>:
    1816:	8c e4       	ldi	r24, 0x4C	; 76
    1818:	91 e0       	ldi	r25, 0x01	; 1
    181a:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <_ZN16PololuQTRSensorsD1Ev>
    181e:	08 95       	ret

00001820 <delay_us>:
    1820:	6f 93       	push	r22
    1822:	64 e0       	ldi	r22, 0x04	; 4
    1824:	6a 95       	dec	r22
    1826:	f1 f7       	brne	.-4      	; 0x1824 <delay_us+0x4>
    1828:	6f 91       	pop	r22
    182a:	01 97       	sbiw	r24, 0x01	; 1
    182c:	c9 f7       	brne	.-14     	; 0x1820 <delay_us>
    182e:	08 95       	ret

00001830 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    1830:	fc 01       	movw	r30, r24
    1832:	11 82       	std	Z+1, r1	; 0x01
    1834:	10 82       	st	Z, r1
    1836:	13 82       	std	Z+3, r1	; 0x03
    1838:	12 82       	std	Z+2, r1	; 0x02
    183a:	15 82       	std	Z+5, r1	; 0x05
    183c:	14 82       	std	Z+4, r1	; 0x04
    183e:	16 82       	std	Z+6, r1	; 0x06
    1840:	68 30       	cpi	r22, 0x08	; 8
    1842:	68 f4       	brcc	.+26     	; 0x185e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    1844:	89 e2       	ldi	r24, 0x29	; 41
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	91 83       	std	Z+1, r25	; 0x01
    184a:	80 83       	st	Z, r24
    184c:	8b e2       	ldi	r24, 0x2B	; 43
    184e:	90 e0       	ldi	r25, 0x00	; 0
    1850:	93 83       	std	Z+3, r25	; 0x03
    1852:	82 83       	std	Z+2, r24	; 0x02
    1854:	8a e2       	ldi	r24, 0x2A	; 42
    1856:	90 e0       	ldi	r25, 0x00	; 0
    1858:	95 83       	std	Z+5, r25	; 0x05
    185a:	84 83       	std	Z+4, r24	; 0x04
    185c:	1f c0       	rjmp	.+62     	; 0x189c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    185e:	6e 30       	cpi	r22, 0x0E	; 14
    1860:	70 f4       	brcc	.+28     	; 0x187e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    1862:	83 e2       	ldi	r24, 0x23	; 35
    1864:	90 e0       	ldi	r25, 0x00	; 0
    1866:	91 83       	std	Z+1, r25	; 0x01
    1868:	80 83       	st	Z, r24
    186a:	85 e2       	ldi	r24, 0x25	; 37
    186c:	90 e0       	ldi	r25, 0x00	; 0
    186e:	93 83       	std	Z+3, r25	; 0x03
    1870:	82 83       	std	Z+2, r24	; 0x02
    1872:	84 e2       	ldi	r24, 0x24	; 36
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	95 83       	std	Z+5, r25	; 0x05
    1878:	84 83       	std	Z+4, r24	; 0x04
    187a:	68 50       	subi	r22, 0x08	; 8
    187c:	0f c0       	rjmp	.+30     	; 0x189c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    187e:	65 31       	cpi	r22, 0x15	; 21
    1880:	98 f4       	brcc	.+38     	; 0x18a8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    1882:	86 e2       	ldi	r24, 0x26	; 38
    1884:	90 e0       	ldi	r25, 0x00	; 0
    1886:	91 83       	std	Z+1, r25	; 0x01
    1888:	80 83       	st	Z, r24
    188a:	88 e2       	ldi	r24, 0x28	; 40
    188c:	90 e0       	ldi	r25, 0x00	; 0
    188e:	93 83       	std	Z+3, r25	; 0x03
    1890:	82 83       	std	Z+2, r24	; 0x02
    1892:	87 e2       	ldi	r24, 0x27	; 39
    1894:	90 e0       	ldi	r25, 0x00	; 0
    1896:	95 83       	std	Z+5, r25	; 0x05
    1898:	84 83       	std	Z+4, r24	; 0x04
    189a:	6e 50       	subi	r22, 0x0E	; 14
    189c:	81 e0       	ldi	r24, 0x01	; 1
    189e:	01 c0       	rjmp	.+2      	; 0x18a2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    18a0:	88 0f       	add	r24, r24
    18a2:	6a 95       	dec	r22
    18a4:	ea f7       	brpl	.-6      	; 0x18a0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    18a6:	86 83       	std	Z+6, r24	; 0x06
    18a8:	08 95       	ret

000018aa <_ZN16PololuQTRSensors4initEhhh>:
    18aa:	a7 e0       	ldi	r26, 0x07	; 7
    18ac:	b0 e0       	ldi	r27, 0x00	; 0
    18ae:	eb e5       	ldi	r30, 0x5B	; 91
    18b0:	fc e0       	ldi	r31, 0x0C	; 12
    18b2:	0c 94 a2 11 	jmp	0x2344	; 0x2344 <__prologue_saves__+0x1c>
    18b6:	8c 01       	movw	r16, r24
    18b8:	fc 01       	movw	r30, r24
    18ba:	11 82       	std	Z+1, r1	; 0x01
    18bc:	10 82       	st	Z, r1
    18be:	13 82       	std	Z+3, r1	; 0x03
    18c0:	12 82       	std	Z+2, r1	; 0x02
    18c2:	15 82       	std	Z+5, r1	; 0x05
    18c4:	14 82       	std	Z+4, r1	; 0x04
    18c6:	17 82       	std	Z+7, r1	; 0x07
    18c8:	16 82       	std	Z+6, r1	; 0x06
    18ca:	61 31       	cpi	r22, 0x11	; 17
    18cc:	18 f0       	brcs	.+6      	; 0x18d4 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    18ce:	80 e1       	ldi	r24, 0x10	; 16
    18d0:	80 87       	std	Z+8, r24	; 0x08
    18d2:	02 c0       	rjmp	.+4      	; 0x18d8 <_ZN16PololuQTRSensors4initEhhh+0x2e>
    18d4:	fc 01       	movw	r30, r24
    18d6:	60 87       	std	Z+8, r22	; 0x08
    18d8:	f8 01       	movw	r30, r16
    18da:	20 8b       	std	Z+16, r18	; 0x10
    18dc:	64 2f       	mov	r22, r20
    18de:	ce 01       	movw	r24, r28
    18e0:	01 96       	adiw	r24, 0x01	; 1
    18e2:	0e 94 18 0c 	call	0x1830	; 0x1830 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    18e6:	8f 81       	ldd	r24, Y+7	; 0x07
    18e8:	f8 01       	movw	r30, r16
    18ea:	81 87       	std	Z+9, r24	; 0x09
    18ec:	8b 81       	ldd	r24, Y+3	; 0x03
    18ee:	9c 81       	ldd	r25, Y+4	; 0x04
    18f0:	93 87       	std	Z+11, r25	; 0x0b
    18f2:	82 87       	std	Z+10, r24	; 0x0a
    18f4:	8d 81       	ldd	r24, Y+5	; 0x05
    18f6:	9e 81       	ldd	r25, Y+6	; 0x06
    18f8:	95 87       	std	Z+13, r25	; 0x0d
    18fa:	84 87       	std	Z+12, r24	; 0x0c
    18fc:	27 96       	adiw	r28, 0x07	; 7
    18fe:	e4 e0       	ldi	r30, 0x04	; 4
    1900:	0c 94 be 11 	jmp	0x237c	; 0x237c <__epilogue_restores__+0x1c>

00001904 <_ZN16PololuQTRSensors11emittersOffEv>:
    1904:	fc 01       	movw	r30, r24
    1906:	a4 85       	ldd	r26, Z+12	; 0x0c
    1908:	b5 85       	ldd	r27, Z+13	; 0x0d
    190a:	10 97       	sbiw	r26, 0x00	; 0
    190c:	79 f0       	breq	.+30     	; 0x192c <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    190e:	8c 91       	ld	r24, X
    1910:	91 85       	ldd	r25, Z+9	; 0x09
    1912:	89 2b       	or	r24, r25
    1914:	8c 93       	st	X, r24
    1916:	a2 85       	ldd	r26, Z+10	; 0x0a
    1918:	b3 85       	ldd	r27, Z+11	; 0x0b
    191a:	9c 91       	ld	r25, X
    191c:	81 85       	ldd	r24, Z+9	; 0x09
    191e:	80 95       	com	r24
    1920:	89 23       	and	r24, r25
    1922:	8c 93       	st	X, r24
    1924:	88 ec       	ldi	r24, 0xC8	; 200
    1926:	90 e0       	ldi	r25, 0x00	; 0
    1928:	0e 94 10 0c 	call	0x1820	; 0x1820 <delay_us>
    192c:	08 95       	ret

0000192e <_ZN16PololuQTRSensors10emittersOnEv>:
    192e:	fc 01       	movw	r30, r24
    1930:	a4 85       	ldd	r26, Z+12	; 0x0c
    1932:	b5 85       	ldd	r27, Z+13	; 0x0d
    1934:	10 97       	sbiw	r26, 0x00	; 0
    1936:	71 f0       	breq	.+28     	; 0x1954 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    1938:	8c 91       	ld	r24, X
    193a:	91 85       	ldd	r25, Z+9	; 0x09
    193c:	89 2b       	or	r24, r25
    193e:	8c 93       	st	X, r24
    1940:	a2 85       	ldd	r26, Z+10	; 0x0a
    1942:	b3 85       	ldd	r27, Z+11	; 0x0b
    1944:	8c 91       	ld	r24, X
    1946:	91 85       	ldd	r25, Z+9	; 0x09
    1948:	89 2b       	or	r24, r25
    194a:	8c 93       	st	X, r24
    194c:	88 ec       	ldi	r24, 0xC8	; 200
    194e:	90 e0       	ldi	r25, 0x00	; 0
    1950:	0e 94 10 0c 	call	0x1820	; 0x1820 <delay_us>
    1954:	08 95       	ret

00001956 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    1956:	a7 e0       	ldi	r26, 0x07	; 7
    1958:	b0 e0       	ldi	r27, 0x00	; 0
    195a:	e1 eb       	ldi	r30, 0xB1	; 177
    195c:	fc e0       	ldi	r31, 0x0C	; 12
    195e:	0c 94 97 11 	jmp	0x232e	; 0x232e <__prologue_saves__+0x6>
    1962:	7c 01       	movw	r14, r24
    1964:	4b 01       	movw	r8, r22
    1966:	64 2f       	mov	r22, r20
    1968:	39 01       	movw	r6, r18
    196a:	40 2f       	mov	r20, r16
    196c:	20 e0       	ldi	r18, 0x00	; 0
    196e:	0e 94 55 0c 	call	0x18aa	; 0x18aa <_ZN16PololuQTRSensors4initEhhh>
    1972:	87 01       	movw	r16, r14
    1974:	0f 5b       	subi	r16, 0xBF	; 191
    1976:	1f 4f       	sbci	r17, 0xFF	; 255
    1978:	f8 01       	movw	r30, r16
    197a:	10 82       	st	Z, r1
    197c:	67 01       	movw	r12, r14
    197e:	f2 e4       	ldi	r31, 0x42	; 66
    1980:	cf 0e       	add	r12, r31
    1982:	d1 1c       	adc	r13, r1
    1984:	f6 01       	movw	r30, r12
    1986:	10 82       	st	Z, r1
    1988:	57 01       	movw	r10, r14
    198a:	f3 e4       	ldi	r31, 0x43	; 67
    198c:	af 0e       	add	r10, r31
    198e:	b1 1c       	adc	r11, r1
    1990:	f5 01       	movw	r30, r10
    1992:	10 82       	st	Z, r1
    1994:	f7 01       	movw	r30, r14
    1996:	77 86       	std	Z+15, r7	; 0x0f
    1998:	66 86       	std	Z+14, r6	; 0x0e
    199a:	51 2c       	mov	r5, r1
    199c:	f7 01       	movw	r30, r14
    199e:	80 85       	ldd	r24, Z+8	; 0x08
    19a0:	58 16       	cp	r5, r24
    19a2:	50 f5       	brcc	.+84     	; 0x19f8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    19a4:	65 2c       	mov	r6, r5
    19a6:	71 2c       	mov	r7, r1
    19a8:	f4 01       	movw	r30, r8
    19aa:	e6 0d       	add	r30, r6
    19ac:	f7 1d       	adc	r31, r7
    19ae:	60 81       	ld	r22, Z
    19b0:	ce 01       	movw	r24, r28
    19b2:	01 96       	adiw	r24, 0x01	; 1
    19b4:	0e 94 18 0c 	call	0x1830	; 0x1830 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    19b8:	2f 81       	ldd	r18, Y+7	; 0x07
    19ba:	f7 01       	movw	r30, r14
    19bc:	e6 0d       	add	r30, r6
    19be:	f7 1d       	adc	r31, r7
    19c0:	21 8b       	std	Z+17, r18	; 0x11
    19c2:	89 81       	ldd	r24, Y+1	; 0x01
    19c4:	9a 81       	ldd	r25, Y+2	; 0x02
    19c6:	f3 01       	movw	r30, r6
    19c8:	ee 0f       	add	r30, r30
    19ca:	ff 1f       	adc	r31, r31
    19cc:	ee 0d       	add	r30, r14
    19ce:	ff 1d       	adc	r31, r15
    19d0:	92 a3       	std	Z+34, r25	; 0x22
    19d2:	81 a3       	std	Z+33, r24	; 0x21
    19d4:	83 32       	cpi	r24, 0x23	; 35
    19d6:	91 05       	cpc	r25, r1
    19d8:	11 f4       	brne	.+4      	; 0x19de <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    19da:	f8 01       	movw	r30, r16
    19dc:	08 c0       	rjmp	.+16     	; 0x19ee <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    19de:	86 32       	cpi	r24, 0x26	; 38
    19e0:	91 05       	cpc	r25, r1
    19e2:	11 f4       	brne	.+4      	; 0x19e8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    19e4:	f6 01       	movw	r30, r12
    19e6:	03 c0       	rjmp	.+6      	; 0x19ee <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    19e8:	89 97       	sbiw	r24, 0x29	; 41
    19ea:	21 f4       	brne	.+8      	; 0x19f4 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    19ec:	f5 01       	movw	r30, r10
    19ee:	80 81       	ld	r24, Z
    19f0:	82 2b       	or	r24, r18
    19f2:	80 83       	st	Z, r24
    19f4:	53 94       	inc	r5
    19f6:	d2 cf       	rjmp	.-92     	; 0x199c <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    19f8:	27 96       	adiw	r28, 0x07	; 7
    19fa:	ef e0       	ldi	r30, 0x0F	; 15
    19fc:	0c 94 b3 11 	jmp	0x2366	; 0x2366 <__epilogue_restores__+0x6>

00001a00 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1a00:	a0 e0       	ldi	r26, 0x00	; 0
    1a02:	b0 e0       	ldi	r27, 0x00	; 0
    1a04:	e6 e0       	ldi	r30, 0x06	; 6
    1a06:	fd e0       	ldi	r31, 0x0D	; 13
    1a08:	0c 94 99 11 	jmp	0x2332	; 0x2332 <__prologue_saves__+0xa>
    1a0c:	ec 01       	movw	r28, r24
    1a0e:	5b 01       	movw	r10, r22
    1a10:	6c 01       	movw	r12, r24
    1a12:	81 e4       	ldi	r24, 0x41	; 65
    1a14:	c8 0e       	add	r12, r24
    1a16:	d1 1c       	adc	r13, r1
    1a18:	f6 01       	movw	r30, r12
    1a1a:	80 80       	ld	r8, Z
    1a1c:	7e 01       	movw	r14, r28
    1a1e:	f2 e4       	ldi	r31, 0x42	; 66
    1a20:	ef 0e       	add	r14, r31
    1a22:	f1 1c       	adc	r15, r1
    1a24:	f7 01       	movw	r30, r14
    1a26:	70 80       	ld	r7, Z
    1a28:	8e 01       	movw	r16, r28
    1a2a:	0d 5b       	subi	r16, 0xBD	; 189
    1a2c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a2e:	f8 01       	movw	r30, r16
    1a30:	90 80       	ld	r9, Z
    1a32:	80 e0       	ldi	r24, 0x00	; 0
    1a34:	98 85       	ldd	r25, Y+8	; 0x08
    1a36:	89 17       	cp	r24, r25
    1a38:	48 f4       	brcc	.+18     	; 0x1a4c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    1a3a:	f5 01       	movw	r30, r10
    1a3c:	e8 0f       	add	r30, r24
    1a3e:	f1 1d       	adc	r31, r1
    1a40:	e8 0f       	add	r30, r24
    1a42:	f1 1d       	adc	r31, r1
    1a44:	11 82       	std	Z+1, r1	; 0x01
    1a46:	10 82       	st	Z, r1
    1a48:	8f 5f       	subi	r24, 0xFF	; 255
    1a4a:	f4 cf       	rjmp	.-24     	; 0x1a34 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    1a4c:	84 b1       	in	r24, 0x04	; 4
    1a4e:	f6 01       	movw	r30, r12
    1a50:	90 81       	ld	r25, Z
    1a52:	89 2b       	or	r24, r25
    1a54:	84 b9       	out	0x04, r24	; 4
    1a56:	87 b1       	in	r24, 0x07	; 7
    1a58:	f7 01       	movw	r30, r14
    1a5a:	90 81       	ld	r25, Z
    1a5c:	89 2b       	or	r24, r25
    1a5e:	87 b9       	out	0x07, r24	; 7
    1a60:	8a b1       	in	r24, 0x0a	; 10
    1a62:	f8 01       	movw	r30, r16
    1a64:	90 81       	ld	r25, Z
    1a66:	89 2b       	or	r24, r25
    1a68:	8a b9       	out	0x0a, r24	; 10
    1a6a:	85 b1       	in	r24, 0x05	; 5
    1a6c:	f6 01       	movw	r30, r12
    1a6e:	90 81       	ld	r25, Z
    1a70:	89 2b       	or	r24, r25
    1a72:	85 b9       	out	0x05, r24	; 5
    1a74:	88 b1       	in	r24, 0x08	; 8
    1a76:	f7 01       	movw	r30, r14
    1a78:	90 81       	ld	r25, Z
    1a7a:	89 2b       	or	r24, r25
    1a7c:	88 b9       	out	0x08, r24	; 8
    1a7e:	8b b1       	in	r24, 0x0b	; 11
    1a80:	f8 01       	movw	r30, r16
    1a82:	90 81       	ld	r25, Z
    1a84:	89 2b       	or	r24, r25
    1a86:	8b b9       	out	0x0b, r24	; 11
    1a88:	8a e0       	ldi	r24, 0x0A	; 10
    1a8a:	90 e0       	ldi	r25, 0x00	; 0
    1a8c:	0e 94 10 0c 	call	0x1820	; 0x1820 <delay_us>
    1a90:	94 b1       	in	r25, 0x04	; 4
    1a92:	f6 01       	movw	r30, r12
    1a94:	80 81       	ld	r24, Z
    1a96:	80 95       	com	r24
    1a98:	89 23       	and	r24, r25
    1a9a:	84 b9       	out	0x04, r24	; 4
    1a9c:	97 b1       	in	r25, 0x07	; 7
    1a9e:	f7 01       	movw	r30, r14
    1aa0:	80 81       	ld	r24, Z
    1aa2:	80 95       	com	r24
    1aa4:	89 23       	and	r24, r25
    1aa6:	87 b9       	out	0x07, r24	; 7
    1aa8:	9a b1       	in	r25, 0x0a	; 10
    1aaa:	f8 01       	movw	r30, r16
    1aac:	80 81       	ld	r24, Z
    1aae:	80 95       	com	r24
    1ab0:	89 23       	and	r24, r25
    1ab2:	8a b9       	out	0x0a, r24	; 10
    1ab4:	95 b1       	in	r25, 0x05	; 5
    1ab6:	f6 01       	movw	r30, r12
    1ab8:	80 81       	ld	r24, Z
    1aba:	80 95       	com	r24
    1abc:	89 23       	and	r24, r25
    1abe:	85 b9       	out	0x05, r24	; 5
    1ac0:	98 b1       	in	r25, 0x08	; 8
    1ac2:	f7 01       	movw	r30, r14
    1ac4:	80 81       	ld	r24, Z
    1ac6:	80 95       	com	r24
    1ac8:	89 23       	and	r24, r25
    1aca:	88 b9       	out	0x08, r24	; 8
    1acc:	9b b1       	in	r25, 0x0b	; 11
    1ace:	f8 01       	movw	r30, r16
    1ad0:	80 81       	ld	r24, Z
    1ad2:	80 95       	com	r24
    1ad4:	89 23       	and	r24, r25
    1ad6:	8b b9       	out	0x0b, r24	; 11
    1ad8:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1adc:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1ae0:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1ae4:	83 60       	ori	r24, 0x03	; 3
    1ae6:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1aea:	82 e0       	ldi	r24, 0x02	; 2
    1aec:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1af0:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1af4:	80 e0       	ldi	r24, 0x00	; 0
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	2e 85       	ldd	r18, Y+14	; 0x0e
    1afa:	3f 85       	ldd	r19, Y+15	; 0x0f
    1afc:	82 17       	cp	r24, r18
    1afe:	93 07       	cpc	r25, r19
    1b00:	20 f5       	brcc	.+72     	; 0x1b4a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    1b02:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1b06:	2c 2d       	mov	r18, r12
    1b08:	24 1b       	sub	r18, r20
    1b0a:	82 0f       	add	r24, r18
    1b0c:	91 1d       	adc	r25, r1
    1b0e:	03 b1       	in	r16, 0x03	; 3
    1b10:	08 11       	cpse	r16, r8
    1b12:	32 c0       	rjmp	.+100    	; 0x1b78 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1b14:	f6 b0       	in	r15, 0x06	; 6
    1b16:	f7 10       	cpse	r15, r7
    1b18:	2f c0       	rjmp	.+94     	; 0x1b78 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1b1a:	29 b1       	in	r18, 0x09	; 9
    1b1c:	29 11       	cpse	r18, r9
    1b1e:	2c c0       	rjmp	.+88     	; 0x1b78 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1b20:	10 c0       	rjmp	.+32     	; 0x1b42 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    1b22:	21 2f       	mov	r18, r17
    1b24:	30 e0       	ldi	r19, 0x00	; 0
    1b26:	a9 01       	movw	r20, r18
    1b28:	44 0f       	add	r20, r20
    1b2a:	55 1f       	adc	r21, r21
    1b2c:	f5 01       	movw	r30, r10
    1b2e:	e4 0f       	add	r30, r20
    1b30:	f5 1f       	adc	r31, r21
    1b32:	60 81       	ld	r22, Z
    1b34:	71 81       	ldd	r23, Z+1	; 0x01
    1b36:	67 2b       	or	r22, r23
    1b38:	21 f1       	breq	.+72     	; 0x1b82 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    1b3a:	1f 5f       	subi	r17, 0xFF	; 255
    1b3c:	28 85       	ldd	r18, Y+8	; 0x08
    1b3e:	12 17       	cp	r17, r18
    1b40:	80 f3       	brcs	.-32     	; 0x1b22 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    1b42:	7f 2c       	mov	r7, r15
    1b44:	80 2e       	mov	r8, r16
    1b46:	4c 2d       	mov	r20, r12
    1b48:	d7 cf       	rjmp	.-82     	; 0x1af8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    1b4a:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    1b4e:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    1b52:	20 e0       	ldi	r18, 0x00	; 0
    1b54:	88 85       	ldd	r24, Y+8	; 0x08
    1b56:	28 17       	cp	r18, r24
    1b58:	30 f5       	brcc	.+76     	; 0x1ba6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    1b5a:	f5 01       	movw	r30, r10
    1b5c:	e2 0f       	add	r30, r18
    1b5e:	f1 1d       	adc	r31, r1
    1b60:	e2 0f       	add	r30, r18
    1b62:	f1 1d       	adc	r31, r1
    1b64:	80 81       	ld	r24, Z
    1b66:	91 81       	ldd	r25, Z+1	; 0x01
    1b68:	89 2b       	or	r24, r25
    1b6a:	21 f4       	brne	.+8      	; 0x1b74 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    1b6c:	8e 85       	ldd	r24, Y+14	; 0x0e
    1b6e:	9f 85       	ldd	r25, Y+15	; 0x0f
    1b70:	91 83       	std	Z+1, r25	; 0x01
    1b72:	80 83       	st	Z, r24
    1b74:	2f 5f       	subi	r18, 0xFF	; 255
    1b76:	ee cf       	rjmp	.-36     	; 0x1b54 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    1b78:	03 b1       	in	r16, 0x03	; 3
    1b7a:	f6 b0       	in	r15, 0x06	; 6
    1b7c:	99 b0       	in	r9, 0x09	; 9
    1b7e:	10 e0       	ldi	r17, 0x00	; 0
    1b80:	dd cf       	rjmp	.-70     	; 0x1b3c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    1b82:	de 01       	movw	r26, r28
    1b84:	a4 0f       	add	r26, r20
    1b86:	b5 1f       	adc	r27, r21
    1b88:	91 96       	adiw	r26, 0x21	; 33
    1b8a:	0d 90       	ld	r0, X+
    1b8c:	bc 91       	ld	r27, X
    1b8e:	a0 2d       	mov	r26, r0
    1b90:	4c 91       	ld	r20, X
    1b92:	de 01       	movw	r26, r28
    1b94:	a2 0f       	add	r26, r18
    1b96:	b3 1f       	adc	r27, r19
    1b98:	51 96       	adiw	r26, 0x11	; 17
    1b9a:	2c 91       	ld	r18, X
    1b9c:	42 23       	and	r20, r18
    1b9e:	69 f6       	brne	.-102    	; 0x1b3a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    1ba0:	91 83       	std	Z+1, r25	; 0x01
    1ba2:	80 83       	st	Z, r24
    1ba4:	ca cf       	rjmp	.-108    	; 0x1b3a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    1ba6:	cd b7       	in	r28, 0x3d	; 61
    1ba8:	de b7       	in	r29, 0x3e	; 62
    1baa:	ed e0       	ldi	r30, 0x0D	; 13
    1bac:	0c 94 b5 11 	jmp	0x236a	; 0x236a <__epilogue_restores__+0xa>

00001bb0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    1bb0:	ef 92       	push	r14
    1bb2:	ff 92       	push	r15
    1bb4:	0f 93       	push	r16
    1bb6:	1f 93       	push	r17
    1bb8:	cf 93       	push	r28
    1bba:	df 93       	push	r29
    1bbc:	fc 01       	movw	r30, r24
    1bbe:	9b 01       	movw	r18, r22
    1bc0:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1bc4:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1bc8:	47 b1       	in	r20, 0x07	; 7
    1bca:	18 b1       	in	r17, 0x08	; 8
    1bcc:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1bd0:	86 fd       	sbrc	r24, 6
    1bd2:	fc cf       	rjmp	.-8      	; 0x1bcc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    1bd4:	80 e0       	ldi	r24, 0x00	; 0
    1bd6:	90 85       	ldd	r25, Z+8	; 0x08
    1bd8:	89 17       	cp	r24, r25
    1bda:	48 f4       	brcc	.+18     	; 0x1bee <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    1bdc:	d9 01       	movw	r26, r18
    1bde:	a8 0f       	add	r26, r24
    1be0:	b1 1d       	adc	r27, r1
    1be2:	a8 0f       	add	r26, r24
    1be4:	b1 1d       	adc	r27, r1
    1be6:	1d 92       	st	X+, r1
    1be8:	1c 92       	st	X, r1
    1bea:	8f 5f       	subi	r24, 0xFF	; 255
    1bec:	f4 cf       	rjmp	.-24     	; 0x1bd6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    1bee:	97 b1       	in	r25, 0x07	; 7
    1bf0:	82 a1       	ldd	r24, Z+34	; 0x22
    1bf2:	80 95       	com	r24
    1bf4:	89 23       	and	r24, r25
    1bf6:	87 b9       	out	0x07, r24	; 7
    1bf8:	98 b1       	in	r25, 0x08	; 8
    1bfa:	82 a1       	ldd	r24, Z+34	; 0x22
    1bfc:	80 95       	com	r24
    1bfe:	89 23       	and	r24, r25
    1c00:	88 b9       	out	0x08, r24	; 8
    1c02:	87 e8       	ldi	r24, 0x87	; 135
    1c04:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1c08:	e1 2c       	mov	r14, r1
    1c0a:	81 a1       	ldd	r24, Z+33	; 0x21
    1c0c:	e8 16       	cp	r14, r24
    1c0e:	10 f0       	brcs	.+4      	; 0x1c14 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    1c10:	e1 2c       	mov	r14, r1
    1c12:	29 c0       	rjmp	.+82     	; 0x1c66 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    1c14:	50 e0       	ldi	r21, 0x00	; 0
    1c16:	80 85       	ldd	r24, Z+8	; 0x08
    1c18:	58 17       	cp	r21, r24
    1c1a:	18 f5       	brcc	.+70     	; 0x1c62 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1c1c:	a5 2f       	mov	r26, r21
    1c1e:	b0 e0       	ldi	r27, 0x00	; 0
    1c20:	ef 01       	movw	r28, r30
    1c22:	ca 0f       	add	r28, r26
    1c24:	db 1f       	adc	r29, r27
    1c26:	89 89       	ldd	r24, Y+17	; 0x11
    1c28:	80 64       	ori	r24, 0x40	; 64
    1c2a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1c2e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1c32:	80 64       	ori	r24, 0x40	; 64
    1c34:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1c38:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1c3c:	86 fd       	sbrc	r24, 6
    1c3e:	fc cf       	rjmp	.-8      	; 0x1c38 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    1c40:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    1c44:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1c48:	aa 0f       	add	r26, r26
    1c4a:	bb 1f       	adc	r27, r27
    1c4c:	a2 0f       	add	r26, r18
    1c4e:	b3 1f       	adc	r27, r19
    1c50:	8d 91       	ld	r24, X+
    1c52:	9c 91       	ld	r25, X
    1c54:	11 97       	sbiw	r26, 0x01	; 1
    1c56:	86 0f       	add	r24, r22
    1c58:	97 1f       	adc	r25, r23
    1c5a:	8d 93       	st	X+, r24
    1c5c:	9c 93       	st	X, r25
    1c5e:	5f 5f       	subi	r21, 0xFF	; 255
    1c60:	da cf       	rjmp	.-76     	; 0x1c16 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    1c62:	e3 94       	inc	r14
    1c64:	d2 cf       	rjmp	.-92     	; 0x1c0a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    1c66:	80 85       	ldd	r24, Z+8	; 0x08
    1c68:	e8 16       	cp	r14, r24
    1c6a:	a0 f4       	brcc	.+40     	; 0x1c94 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    1c6c:	e9 01       	movw	r28, r18
    1c6e:	ce 0d       	add	r28, r14
    1c70:	d1 1d       	adc	r29, r1
    1c72:	ce 0d       	add	r28, r14
    1c74:	d1 1d       	adc	r29, r1
    1c76:	61 a1       	ldd	r22, Z+33	; 0x21
    1c78:	70 e0       	ldi	r23, 0x00	; 0
    1c7a:	cb 01       	movw	r24, r22
    1c7c:	95 95       	asr	r25
    1c7e:	87 95       	ror	r24
    1c80:	a8 81       	ld	r26, Y
    1c82:	b9 81       	ldd	r27, Y+1	; 0x01
    1c84:	8a 0f       	add	r24, r26
    1c86:	9b 1f       	adc	r25, r27
    1c88:	0e 94 17 11 	call	0x222e	; 0x222e <__udivmodhi4>
    1c8c:	79 83       	std	Y+1, r23	; 0x01
    1c8e:	68 83       	st	Y, r22
    1c90:	e3 94       	inc	r14
    1c92:	e9 cf       	rjmp	.-46     	; 0x1c66 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    1c94:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1c98:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1c9c:	18 b9       	out	0x08, r17	; 8
    1c9e:	47 b9       	out	0x07, r20	; 7
    1ca0:	cd b7       	in	r28, 0x3d	; 61
    1ca2:	de b7       	in	r29, 0x3e	; 62
    1ca4:	e6 e0       	ldi	r30, 0x06	; 6
    1ca6:	0c 94 bc 11 	jmp	0x2378	; 0x2378 <__epilogue_restores__+0x18>

00001caa <_ZN16PololuQTRSensors4readEPjh>:
    1caa:	a0 e2       	ldi	r26, 0x20	; 32
    1cac:	b0 e0       	ldi	r27, 0x00	; 0
    1cae:	eb e5       	ldi	r30, 0x5B	; 91
    1cb0:	fe e0       	ldi	r31, 0x0E	; 14
    1cb2:	0c 94 9f 11 	jmp	0x233e	; 0x233e <__prologue_saves__+0x16>
    1cb6:	8c 01       	movw	r16, r24
    1cb8:	7b 01       	movw	r14, r22
    1cba:	d4 2e       	mov	r13, r20
    1cbc:	8f ef       	ldi	r24, 0xFF	; 255
    1cbe:	84 0f       	add	r24, r20
    1cc0:	82 30       	cpi	r24, 0x02	; 2
    1cc2:	18 f4       	brcc	.+6      	; 0x1cca <_ZN16PololuQTRSensors4readEPjh+0x20>
    1cc4:	c8 01       	movw	r24, r16
    1cc6:	0e 94 97 0c 	call	0x192e	; 0x192e <_ZN16PololuQTRSensors10emittersOnEv>
    1cca:	d8 01       	movw	r26, r16
    1ccc:	50 96       	adiw	r26, 0x10	; 16
    1cce:	8c 91       	ld	r24, X
    1cd0:	b7 01       	movw	r22, r14
    1cd2:	81 11       	cpse	r24, r1
    1cd4:	10 c0       	rjmp	.+32     	; 0x1cf6 <_ZN16PololuQTRSensors4readEPjh+0x4c>
    1cd6:	c8 01       	movw	r24, r16
    1cd8:	0e 94 00 0d 	call	0x1a00	; 0x1a00 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1cdc:	c8 01       	movw	r24, r16
    1cde:	0e 94 82 0c 	call	0x1904	; 0x1904 <_ZN16PololuQTRSensors11emittersOffEv>
    1ce2:	b2 e0       	ldi	r27, 0x02	; 2
    1ce4:	db 12       	cpse	r13, r27
    1ce6:	3a c0       	rjmp	.+116    	; 0x1d5c <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1ce8:	be 01       	movw	r22, r28
    1cea:	6f 5f       	subi	r22, 0xFF	; 255
    1cec:	7f 4f       	sbci	r23, 0xFF	; 255
    1cee:	c8 01       	movw	r24, r16
    1cf0:	0e 94 00 0d 	call	0x1a00	; 0x1a00 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1cf4:	0f c0       	rjmp	.+30     	; 0x1d14 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    1cf6:	c8 01       	movw	r24, r16
    1cf8:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1cfc:	c8 01       	movw	r24, r16
    1cfe:	0e 94 82 0c 	call	0x1904	; 0x1904 <_ZN16PololuQTRSensors11emittersOffEv>
    1d02:	e2 e0       	ldi	r30, 0x02	; 2
    1d04:	de 12       	cpse	r13, r30
    1d06:	2a c0       	rjmp	.+84     	; 0x1d5c <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1d08:	be 01       	movw	r22, r28
    1d0a:	6f 5f       	subi	r22, 0xFF	; 255
    1d0c:	7f 4f       	sbci	r23, 0xFF	; 255
    1d0e:	c8 01       	movw	r24, r16
    1d10:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1d14:	40 e0       	ldi	r20, 0x00	; 0
    1d16:	f8 01       	movw	r30, r16
    1d18:	80 85       	ldd	r24, Z+8	; 0x08
    1d1a:	48 17       	cp	r20, r24
    1d1c:	f8 f4       	brcc	.+62     	; 0x1d5c <_ZN16PololuQTRSensors4readEPjh+0xb2>
    1d1e:	84 2f       	mov	r24, r20
    1d20:	90 e0       	ldi	r25, 0x00	; 0
    1d22:	88 0f       	add	r24, r24
    1d24:	99 1f       	adc	r25, r25
    1d26:	f7 01       	movw	r30, r14
    1d28:	e8 0f       	add	r30, r24
    1d2a:	f9 1f       	adc	r31, r25
    1d2c:	21 e0       	ldi	r18, 0x01	; 1
    1d2e:	30 e0       	ldi	r19, 0x00	; 0
    1d30:	2c 0f       	add	r18, r28
    1d32:	3d 1f       	adc	r19, r29
    1d34:	82 0f       	add	r24, r18
    1d36:	93 1f       	adc	r25, r19
    1d38:	d8 01       	movw	r26, r16
    1d3a:	1e 96       	adiw	r26, 0x0e	; 14
    1d3c:	2d 91       	ld	r18, X+
    1d3e:	3c 91       	ld	r19, X
    1d40:	1f 97       	sbiw	r26, 0x0f	; 15
    1d42:	dc 01       	movw	r26, r24
    1d44:	8d 91       	ld	r24, X+
    1d46:	9c 91       	ld	r25, X
    1d48:	28 1b       	sub	r18, r24
    1d4a:	39 0b       	sbc	r19, r25
    1d4c:	80 81       	ld	r24, Z
    1d4e:	91 81       	ldd	r25, Z+1	; 0x01
    1d50:	82 0f       	add	r24, r18
    1d52:	93 1f       	adc	r25, r19
    1d54:	91 83       	std	Z+1, r25	; 0x01
    1d56:	80 83       	st	Z, r24
    1d58:	4f 5f       	subi	r20, 0xFF	; 255
    1d5a:	dd cf       	rjmp	.-70     	; 0x1d16 <_ZN16PololuQTRSensors4readEPjh+0x6c>
    1d5c:	a0 96       	adiw	r28, 0x20	; 32
    1d5e:	e7 e0       	ldi	r30, 0x07	; 7
    1d60:	0c 94 bb 11 	jmp	0x2376	; 0x2376 <__epilogue_restores__+0x16>

00001d64 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    1d64:	2f 92       	push	r2
    1d66:	3f 92       	push	r3
    1d68:	5f 92       	push	r5
    1d6a:	6f 92       	push	r6
    1d6c:	7f 92       	push	r7
    1d6e:	8f 92       	push	r8
    1d70:	9f 92       	push	r9
    1d72:	af 92       	push	r10
    1d74:	bf 92       	push	r11
    1d76:	cf 92       	push	r12
    1d78:	df 92       	push	r13
    1d7a:	ef 92       	push	r14
    1d7c:	ff 92       	push	r15
    1d7e:	0f 93       	push	r16
    1d80:	1f 93       	push	r17
    1d82:	cf 93       	push	r28
    1d84:	df 93       	push	r29
    1d86:	cd b7       	in	r28, 0x3d	; 61
    1d88:	de b7       	in	r29, 0x3e	; 62
    1d8a:	c0 56       	subi	r28, 0x60	; 96
    1d8c:	d1 09       	sbc	r29, r1
    1d8e:	0f b6       	in	r0, 0x3f	; 63
    1d90:	f8 94       	cli
    1d92:	de bf       	out	0x3e, r29	; 62
    1d94:	0f be       	out	0x3f, r0	; 63
    1d96:	cd bf       	out	0x3d, r28	; 61
    1d98:	8c 01       	movw	r16, r24
    1d9a:	4b 01       	movw	r8, r22
    1d9c:	5a 01       	movw	r10, r20
    1d9e:	52 2e       	mov	r5, r18
    1da0:	da 01       	movw	r26, r20
    1da2:	8d 91       	ld	r24, X+
    1da4:	9c 91       	ld	r25, X
    1da6:	89 2b       	or	r24, r25
    1da8:	31 f0       	breq	.+12     	; 0x1db6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    1daa:	f4 01       	movw	r30, r8
    1dac:	80 81       	ld	r24, Z
    1dae:	91 81       	ldd	r25, Z+1	; 0x01
    1db0:	89 2b       	or	r24, r25
    1db2:	f1 f4       	brne	.+60     	; 0x1df0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1db4:	24 c0       	rjmp	.+72     	; 0x1dfe <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    1db6:	d8 01       	movw	r26, r16
    1db8:	18 96       	adiw	r26, 0x08	; 8
    1dba:	8c 91       	ld	r24, X
    1dbc:	90 e0       	ldi	r25, 0x00	; 0
    1dbe:	88 0f       	add	r24, r24
    1dc0:	99 1f       	adc	r25, r25
    1dc2:	0e 94 cb 11 	call	0x2396	; 0x2396 <malloc>
    1dc6:	f5 01       	movw	r30, r10
    1dc8:	91 83       	std	Z+1, r25	; 0x01
    1dca:	80 83       	st	Z, r24
    1dcc:	00 97       	sbiw	r24, 0x00	; 0
    1dce:	09 f4       	brne	.+2      	; 0x1dd2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    1dd0:	b1 c0       	rjmp	.+354    	; 0x1f34 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1dd2:	fc 01       	movw	r30, r24
    1dd4:	20 e0       	ldi	r18, 0x00	; 0
    1dd6:	30 e0       	ldi	r19, 0x00	; 0
    1dd8:	d8 01       	movw	r26, r16
    1dda:	18 96       	adiw	r26, 0x08	; 8
    1ddc:	8c 91       	ld	r24, X
    1dde:	90 e0       	ldi	r25, 0x00	; 0
    1de0:	28 17       	cp	r18, r24
    1de2:	39 07       	cpc	r19, r25
    1de4:	14 f7       	brge	.-60     	; 0x1daa <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    1de6:	11 92       	st	Z+, r1
    1de8:	11 92       	st	Z+, r1
    1dea:	2f 5f       	subi	r18, 0xFF	; 255
    1dec:	3f 4f       	sbci	r19, 0xFF	; 255
    1dee:	f4 cf       	rjmp	.-24     	; 0x1dd8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    1df0:	e1 2c       	mov	r14, r1
    1df2:	f1 2c       	mov	r15, r1
    1df4:	6e 01       	movw	r12, r28
    1df6:	b1 e2       	ldi	r27, 0x21	; 33
    1df8:	cb 0e       	add	r12, r27
    1dfa:	d1 1c       	adc	r13, r1
    1dfc:	21 c0       	rjmp	.+66     	; 0x1e40 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    1dfe:	f8 01       	movw	r30, r16
    1e00:	80 85       	ldd	r24, Z+8	; 0x08
    1e02:	90 e0       	ldi	r25, 0x00	; 0
    1e04:	88 0f       	add	r24, r24
    1e06:	99 1f       	adc	r25, r25
    1e08:	0e 94 cb 11 	call	0x2396	; 0x2396 <malloc>
    1e0c:	d4 01       	movw	r26, r8
    1e0e:	8d 93       	st	X+, r24
    1e10:	9c 93       	st	X, r25
    1e12:	00 97       	sbiw	r24, 0x00	; 0
    1e14:	09 f4       	brne	.+2      	; 0x1e18 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    1e16:	8e c0       	rjmp	.+284    	; 0x1f34 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1e18:	fc 01       	movw	r30, r24
    1e1a:	20 e0       	ldi	r18, 0x00	; 0
    1e1c:	30 e0       	ldi	r19, 0x00	; 0
    1e1e:	d8 01       	movw	r26, r16
    1e20:	18 96       	adiw	r26, 0x08	; 8
    1e22:	8c 91       	ld	r24, X
    1e24:	90 e0       	ldi	r25, 0x00	; 0
    1e26:	28 17       	cp	r18, r24
    1e28:	39 07       	cpc	r19, r25
    1e2a:	14 f7       	brge	.-60     	; 0x1df0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    1e2c:	d8 01       	movw	r26, r16
    1e2e:	1e 96       	adiw	r26, 0x0e	; 14
    1e30:	8d 91       	ld	r24, X+
    1e32:	9c 91       	ld	r25, X
    1e34:	1f 97       	sbiw	r26, 0x0f	; 15
    1e36:	81 93       	st	Z+, r24
    1e38:	91 93       	st	Z+, r25
    1e3a:	2f 5f       	subi	r18, 0xFF	; 255
    1e3c:	3f 4f       	sbci	r19, 0xFF	; 255
    1e3e:	ef cf       	rjmp	.-34     	; 0x1e1e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    1e40:	45 2d       	mov	r20, r5
    1e42:	be 01       	movw	r22, r28
    1e44:	6f 5b       	subi	r22, 0xBF	; 191
    1e46:	7f 4f       	sbci	r23, 0xFF	; 255
    1e48:	c8 01       	movw	r24, r16
    1e4a:	0e 94 55 0e 	call	0x1caa	; 0x1caa <_ZN16PololuQTRSensors4readEPjh>
    1e4e:	f8 01       	movw	r30, r16
    1e50:	60 84       	ldd	r6, Z+8	; 0x08
    1e52:	71 2c       	mov	r7, r1
    1e54:	fe 01       	movw	r30, r28
    1e56:	ef 5b       	subi	r30, 0xBF	; 191
    1e58:	ff 4f       	sbci	r31, 0xFF	; 255
    1e5a:	c6 01       	movw	r24, r12
    1e5c:	9e 01       	movw	r18, r28
    1e5e:	2f 5f       	subi	r18, 0xFF	; 255
    1e60:	3f 4f       	sbci	r19, 0xFF	; 255
    1e62:	19 01       	movw	r2, r18
    1e64:	20 e0       	ldi	r18, 0x00	; 0
    1e66:	30 e0       	ldi	r19, 0x00	; 0
    1e68:	26 15       	cp	r18, r6
    1e6a:	37 05       	cpc	r19, r7
    1e6c:	4c f5       	brge	.+82     	; 0x1ec0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    1e6e:	e1 14       	cp	r14, r1
    1e70:	f1 04       	cpc	r15, r1
    1e72:	89 f0       	breq	.+34     	; 0x1e96 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1e74:	dc 01       	movw	r26, r24
    1e76:	6d 91       	ld	r22, X+
    1e78:	7c 91       	ld	r23, X
    1e7a:	40 81       	ld	r20, Z
    1e7c:	51 81       	ldd	r21, Z+1	; 0x01
    1e7e:	64 17       	cp	r22, r20
    1e80:	75 07       	cpc	r23, r21
    1e82:	48 f0       	brcs	.+18     	; 0x1e96 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    1e84:	d1 01       	movw	r26, r2
    1e86:	6d 91       	ld	r22, X+
    1e88:	7c 91       	ld	r23, X
    1e8a:	40 81       	ld	r20, Z
    1e8c:	51 81       	ldd	r21, Z+1	; 0x01
    1e8e:	46 17       	cp	r20, r22
    1e90:	57 07       	cpc	r21, r23
    1e92:	48 f0       	brcs	.+18     	; 0x1ea6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    1e94:	0d c0       	rjmp	.+26     	; 0x1eb0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    1e96:	40 81       	ld	r20, Z
    1e98:	51 81       	ldd	r21, Z+1	; 0x01
    1e9a:	dc 01       	movw	r26, r24
    1e9c:	4d 93       	st	X+, r20
    1e9e:	5c 93       	st	X, r21
    1ea0:	e1 14       	cp	r14, r1
    1ea2:	f1 04       	cpc	r15, r1
    1ea4:	79 f7       	brne	.-34     	; 0x1e84 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    1ea6:	40 81       	ld	r20, Z
    1ea8:	51 81       	ldd	r21, Z+1	; 0x01
    1eaa:	d1 01       	movw	r26, r2
    1eac:	4d 93       	st	X+, r20
    1eae:	5c 93       	st	X, r21
    1eb0:	2f 5f       	subi	r18, 0xFF	; 255
    1eb2:	3f 4f       	sbci	r19, 0xFF	; 255
    1eb4:	b2 e0       	ldi	r27, 0x02	; 2
    1eb6:	2b 0e       	add	r2, r27
    1eb8:	31 1c       	adc	r3, r1
    1eba:	32 96       	adiw	r30, 0x02	; 2
    1ebc:	02 96       	adiw	r24, 0x02	; 2
    1ebe:	d4 cf       	rjmp	.-88     	; 0x1e68 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    1ec0:	ef ef       	ldi	r30, 0xFF	; 255
    1ec2:	ee 1a       	sub	r14, r30
    1ec4:	fe 0a       	sbc	r15, r30
    1ec6:	fa e0       	ldi	r31, 0x0A	; 10
    1ec8:	ef 16       	cp	r14, r31
    1eca:	f1 04       	cpc	r15, r1
    1ecc:	09 f0       	breq	.+2      	; 0x1ed0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    1ece:	b8 cf       	rjmp	.-144    	; 0x1e40 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    1ed0:	9e 01       	movw	r18, r28
    1ed2:	2f 5f       	subi	r18, 0xFF	; 255
    1ed4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ed6:	79 01       	movw	r14, r18
    1ed8:	36 01       	movw	r6, r12
    1eda:	80 e0       	ldi	r24, 0x00	; 0
    1edc:	90 e0       	ldi	r25, 0x00	; 0
    1ede:	f8 01       	movw	r30, r16
    1ee0:	20 85       	ldd	r18, Z+8	; 0x08
    1ee2:	30 e0       	ldi	r19, 0x00	; 0
    1ee4:	82 17       	cp	r24, r18
    1ee6:	93 07       	cpc	r25, r19
    1ee8:	2c f5       	brge	.+74     	; 0x1f34 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    1eea:	d7 01       	movw	r26, r14
    1eec:	2d 91       	ld	r18, X+
    1eee:	3d 91       	ld	r19, X+
    1ef0:	7d 01       	movw	r14, r26
    1ef2:	b3 01       	movw	r22, r6
    1ef4:	6c 19       	sub	r22, r12
    1ef6:	7d 09       	sbc	r23, r13
    1ef8:	d5 01       	movw	r26, r10
    1efa:	ed 91       	ld	r30, X+
    1efc:	fc 91       	ld	r31, X
    1efe:	e6 0f       	add	r30, r22
    1f00:	f7 1f       	adc	r31, r23
    1f02:	40 81       	ld	r20, Z
    1f04:	51 81       	ldd	r21, Z+1	; 0x01
    1f06:	42 17       	cp	r20, r18
    1f08:	53 07       	cpc	r21, r19
    1f0a:	10 f4       	brcc	.+4      	; 0x1f10 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    1f0c:	31 83       	std	Z+1, r19	; 0x01
    1f0e:	20 83       	st	Z, r18
    1f10:	f3 01       	movw	r30, r6
    1f12:	21 91       	ld	r18, Z+
    1f14:	31 91       	ld	r19, Z+
    1f16:	3f 01       	movw	r6, r30
    1f18:	d4 01       	movw	r26, r8
    1f1a:	ed 91       	ld	r30, X+
    1f1c:	fc 91       	ld	r31, X
    1f1e:	e6 0f       	add	r30, r22
    1f20:	f7 1f       	adc	r31, r23
    1f22:	40 81       	ld	r20, Z
    1f24:	51 81       	ldd	r21, Z+1	; 0x01
    1f26:	24 17       	cp	r18, r20
    1f28:	35 07       	cpc	r19, r21
    1f2a:	10 f4       	brcc	.+4      	; 0x1f30 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    1f2c:	31 83       	std	Z+1, r19	; 0x01
    1f2e:	20 83       	st	Z, r18
    1f30:	01 96       	adiw	r24, 0x01	; 1
    1f32:	d5 cf       	rjmp	.-86     	; 0x1ede <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    1f34:	c0 5a       	subi	r28, 0xA0	; 160
    1f36:	df 4f       	sbci	r29, 0xFF	; 255
    1f38:	0f b6       	in	r0, 0x3f	; 63
    1f3a:	f8 94       	cli
    1f3c:	de bf       	out	0x3e, r29	; 62
    1f3e:	0f be       	out	0x3f, r0	; 63
    1f40:	cd bf       	out	0x3d, r28	; 61
    1f42:	df 91       	pop	r29
    1f44:	cf 91       	pop	r28
    1f46:	1f 91       	pop	r17
    1f48:	0f 91       	pop	r16
    1f4a:	ff 90       	pop	r15
    1f4c:	ef 90       	pop	r14
    1f4e:	df 90       	pop	r13
    1f50:	cf 90       	pop	r12
    1f52:	bf 90       	pop	r11
    1f54:	af 90       	pop	r10
    1f56:	9f 90       	pop	r9
    1f58:	8f 90       	pop	r8
    1f5a:	7f 90       	pop	r7
    1f5c:	6f 90       	pop	r6
    1f5e:	5f 90       	pop	r5
    1f60:	3f 90       	pop	r3
    1f62:	2f 90       	pop	r2
    1f64:	08 95       	ret

00001f66 <_ZN16PololuQTRSensors9calibrateEh>:
    1f66:	1f 93       	push	r17
    1f68:	cf 93       	push	r28
    1f6a:	df 93       	push	r29
    1f6c:	ec 01       	movw	r28, r24
    1f6e:	16 2f       	mov	r17, r22
    1f70:	8f ef       	ldi	r24, 0xFF	; 255
    1f72:	86 0f       	add	r24, r22
    1f74:	82 30       	cpi	r24, 0x02	; 2
    1f76:	18 f0       	brcs	.+6      	; 0x1f7e <_ZN16PololuQTRSensors9calibrateEh+0x18>
    1f78:	66 23       	and	r22, r22
    1f7a:	59 f0       	breq	.+22     	; 0x1f92 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    1f7c:	14 c0       	rjmp	.+40     	; 0x1fa6 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1f7e:	21 e0       	ldi	r18, 0x01	; 1
    1f80:	ae 01       	movw	r20, r28
    1f82:	4e 5f       	subi	r20, 0xFE	; 254
    1f84:	5f 4f       	sbci	r21, 0xFF	; 255
    1f86:	be 01       	movw	r22, r28
    1f88:	ce 01       	movw	r24, r28
    1f8a:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1f8e:	12 30       	cpi	r17, 0x02	; 2
    1f90:	51 f4       	brne	.+20     	; 0x1fa6 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    1f92:	ae 01       	movw	r20, r28
    1f94:	4a 5f       	subi	r20, 0xFA	; 250
    1f96:	5f 4f       	sbci	r21, 0xFF	; 255
    1f98:	be 01       	movw	r22, r28
    1f9a:	6c 5f       	subi	r22, 0xFC	; 252
    1f9c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f9e:	20 e0       	ldi	r18, 0x00	; 0
    1fa0:	ce 01       	movw	r24, r28
    1fa2:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    1fa6:	df 91       	pop	r29
    1fa8:	cf 91       	pop	r28
    1faa:	1f 91       	pop	r17
    1fac:	08 95       	ret

00001fae <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    1fae:	a0 e0       	ldi	r26, 0x00	; 0
    1fb0:	b0 e0       	ldi	r27, 0x00	; 0
    1fb2:	ed ed       	ldi	r30, 0xDD	; 221
    1fb4:	ff e0       	ldi	r31, 0x0F	; 15
    1fb6:	0c 94 9d 11 	jmp	0x233a	; 0x233a <__prologue_saves__+0x12>
    1fba:	ec 01       	movw	r28, r24
    1fbc:	8b 01       	movw	r16, r22
    1fbe:	b4 2e       	mov	r11, r20
    1fc0:	84 2f       	mov	r24, r20
    1fc2:	8d 7f       	andi	r24, 0xFD	; 253
    1fc4:	51 f4       	brne	.+20     	; 0x1fda <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    1fc6:	8c 81       	ldd	r24, Y+4	; 0x04
    1fc8:	9d 81       	ldd	r25, Y+5	; 0x05
    1fca:	89 2b       	or	r24, r25
    1fcc:	09 f4       	brne	.+2      	; 0x1fd0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    1fce:	97 c0       	rjmp	.+302    	; 0x20fe <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1fd0:	8e 81       	ldd	r24, Y+6	; 0x06
    1fd2:	9f 81       	ldd	r25, Y+7	; 0x07
    1fd4:	89 2b       	or	r24, r25
    1fd6:	09 f4       	brne	.+2      	; 0x1fda <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    1fd8:	92 c0       	rjmp	.+292    	; 0x20fe <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1fda:	8f ef       	ldi	r24, 0xFF	; 255
    1fdc:	8b 0d       	add	r24, r11
    1fde:	82 30       	cpi	r24, 0x02	; 2
    1fe0:	50 f4       	brcc	.+20     	; 0x1ff6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    1fe2:	88 81       	ld	r24, Y
    1fe4:	99 81       	ldd	r25, Y+1	; 0x01
    1fe6:	89 2b       	or	r24, r25
    1fe8:	09 f4       	brne	.+2      	; 0x1fec <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    1fea:	89 c0       	rjmp	.+274    	; 0x20fe <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1fec:	8a 81       	ldd	r24, Y+2	; 0x02
    1fee:	9b 81       	ldd	r25, Y+3	; 0x03
    1ff0:	89 2b       	or	r24, r25
    1ff2:	09 f4       	brne	.+2      	; 0x1ff6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    1ff4:	84 c0       	rjmp	.+264    	; 0x20fe <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    1ff6:	4b 2d       	mov	r20, r11
    1ff8:	b8 01       	movw	r22, r16
    1ffa:	ce 01       	movw	r24, r28
    1ffc:	0e 94 55 0e 	call	0x1caa	; 0x1caa <_ZN16PololuQTRSensors4readEPjh>
    2000:	78 01       	movw	r14, r16
    2002:	00 e0       	ldi	r16, 0x00	; 0
    2004:	10 e0       	ldi	r17, 0x00	; 0
    2006:	c1 2c       	mov	r12, r1
    2008:	d1 2c       	mov	r13, r1
    200a:	88 85       	ldd	r24, Y+8	; 0x08
    200c:	90 e0       	ldi	r25, 0x00	; 0
    200e:	c8 16       	cp	r12, r24
    2010:	d9 06       	cpc	r13, r25
    2012:	0c f0       	brlt	.+2      	; 0x2016 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    2014:	74 c0       	rjmp	.+232    	; 0x20fe <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    2016:	81 e0       	ldi	r24, 0x01	; 1
    2018:	b8 12       	cpse	r11, r24
    201a:	0a c0       	rjmp	.+20     	; 0x2030 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    201c:	ea 81       	ldd	r30, Y+2	; 0x02
    201e:	fb 81       	ldd	r31, Y+3	; 0x03
    2020:	e0 0f       	add	r30, r16
    2022:	f1 1f       	adc	r31, r17
    2024:	01 90       	ld	r0, Z+
    2026:	f0 81       	ld	r31, Z
    2028:	e0 2d       	mov	r30, r0
    202a:	a8 81       	ld	r26, Y
    202c:	b9 81       	ldd	r27, Y+1	; 0x01
    202e:	0d c0       	rjmp	.+26     	; 0x204a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    2030:	8c 81       	ldd	r24, Y+4	; 0x04
    2032:	9d 81       	ldd	r25, Y+5	; 0x05
    2034:	2e 81       	ldd	r18, Y+6	; 0x06
    2036:	3f 81       	ldd	r19, Y+7	; 0x07
    2038:	b1 10       	cpse	r11, r1
    203a:	0c c0       	rjmp	.+24     	; 0x2054 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    203c:	f9 01       	movw	r30, r18
    203e:	e0 0f       	add	r30, r16
    2040:	f1 1f       	adc	r31, r17
    2042:	01 90       	ld	r0, Z+
    2044:	f0 81       	ld	r31, Z
    2046:	e0 2d       	mov	r30, r0
    2048:	dc 01       	movw	r26, r24
    204a:	a0 0f       	add	r26, r16
    204c:	b1 1f       	adc	r27, r17
    204e:	8d 91       	ld	r24, X+
    2050:	9c 91       	ld	r25, X
    2052:	28 c0       	rjmp	.+80     	; 0x20a4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    2054:	fc 01       	movw	r30, r24
    2056:	e0 0f       	add	r30, r16
    2058:	f1 1f       	adc	r31, r17
    205a:	40 81       	ld	r20, Z
    205c:	51 81       	ldd	r21, Z+1	; 0x01
    205e:	e8 81       	ld	r30, Y
    2060:	f9 81       	ldd	r31, Y+1	; 0x01
    2062:	e0 0f       	add	r30, r16
    2064:	f1 1f       	adc	r31, r17
    2066:	80 81       	ld	r24, Z
    2068:	91 81       	ldd	r25, Z+1	; 0x01
    206a:	ee 85       	ldd	r30, Y+14	; 0x0e
    206c:	ff 85       	ldd	r31, Y+15	; 0x0f
    206e:	48 17       	cp	r20, r24
    2070:	59 07       	cpc	r21, r25
    2072:	10 f4       	brcc	.+4      	; 0x2078 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    2074:	cf 01       	movw	r24, r30
    2076:	04 c0       	rjmp	.+8      	; 0x2080 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    2078:	8e 0f       	add	r24, r30
    207a:	9f 1f       	adc	r25, r31
    207c:	84 1b       	sub	r24, r20
    207e:	95 0b       	sbc	r25, r21
    2080:	d9 01       	movw	r26, r18
    2082:	a0 0f       	add	r26, r16
    2084:	b1 1f       	adc	r27, r17
    2086:	2d 91       	ld	r18, X+
    2088:	3c 91       	ld	r19, X
    208a:	aa 81       	ldd	r26, Y+2	; 0x02
    208c:	bb 81       	ldd	r27, Y+3	; 0x03
    208e:	a0 0f       	add	r26, r16
    2090:	b1 1f       	adc	r27, r17
    2092:	4d 91       	ld	r20, X+
    2094:	5c 91       	ld	r21, X
    2096:	24 17       	cp	r18, r20
    2098:	35 07       	cpc	r19, r21
    209a:	20 f0       	brcs	.+8      	; 0x20a4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    209c:	e4 0f       	add	r30, r20
    209e:	f5 1f       	adc	r31, r21
    20a0:	e2 1b       	sub	r30, r18
    20a2:	f3 0b       	sbc	r31, r19
    20a4:	e8 1b       	sub	r30, r24
    20a6:	f9 0b       	sbc	r31, r25
    20a8:	a9 f0       	breq	.+42     	; 0x20d4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    20aa:	d7 01       	movw	r26, r14
    20ac:	2d 91       	ld	r18, X+
    20ae:	3c 91       	ld	r19, X
    20b0:	40 e0       	ldi	r20, 0x00	; 0
    20b2:	50 e0       	ldi	r21, 0x00	; 0
    20b4:	28 1b       	sub	r18, r24
    20b6:	39 0b       	sbc	r19, r25
    20b8:	41 09       	sbc	r20, r1
    20ba:	51 09       	sbc	r21, r1
    20bc:	a8 ee       	ldi	r26, 0xE8	; 232
    20be:	b3 e0       	ldi	r27, 0x03	; 3
    20c0:	0e 94 81 11 	call	0x2302	; 0x2302 <__muluhisi3>
    20c4:	9f 01       	movw	r18, r30
    20c6:	40 e0       	ldi	r20, 0x00	; 0
    20c8:	50 e0       	ldi	r21, 0x00	; 0
    20ca:	0e 94 4d 11 	call	0x229a	; 0x229a <__divmodsi4>
    20ce:	37 fd       	sbrc	r19, 7
    20d0:	0a c0       	rjmp	.+20     	; 0x20e6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    20d2:	02 c0       	rjmp	.+4      	; 0x20d8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    20d4:	20 e0       	ldi	r18, 0x00	; 0
    20d6:	30 e0       	ldi	r19, 0x00	; 0
    20d8:	29 3e       	cpi	r18, 0xE9	; 233
    20da:	b3 e0       	ldi	r27, 0x03	; 3
    20dc:	3b 07       	cpc	r19, r27
    20de:	2c f0       	brlt	.+10     	; 0x20ea <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    20e0:	28 ee       	ldi	r18, 0xE8	; 232
    20e2:	33 e0       	ldi	r19, 0x03	; 3
    20e4:	02 c0       	rjmp	.+4      	; 0x20ea <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    20e6:	20 e0       	ldi	r18, 0x00	; 0
    20e8:	30 e0       	ldi	r19, 0x00	; 0
    20ea:	f7 01       	movw	r30, r14
    20ec:	21 93       	st	Z+, r18
    20ee:	31 93       	st	Z+, r19
    20f0:	7f 01       	movw	r14, r30
    20f2:	ff ef       	ldi	r31, 0xFF	; 255
    20f4:	cf 1a       	sub	r12, r31
    20f6:	df 0a       	sbc	r13, r31
    20f8:	0e 5f       	subi	r16, 0xFE	; 254
    20fa:	1f 4f       	sbci	r17, 0xFF	; 255
    20fc:	86 cf       	rjmp	.-244    	; 0x200a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    20fe:	cd b7       	in	r28, 0x3d	; 61
    2100:	de b7       	in	r29, 0x3e	; 62
    2102:	e9 e0       	ldi	r30, 0x09	; 9
    2104:	0c 94 b9 11 	jmp	0x2372	; 0x2372 <__epilogue_restores__+0x12>

00002108 <_ZN16PololuQTRSensors8readLineEPjhh>:
    2108:	a0 e0       	ldi	r26, 0x00	; 0
    210a:	b0 e0       	ldi	r27, 0x00	; 0
    210c:	ea e8       	ldi	r30, 0x8A	; 138
    210e:	f0 e1       	ldi	r31, 0x10	; 16
    2110:	0c 94 94 11 	jmp	0x2328	; 0x2328 <__prologue_saves__>
    2114:	ec 01       	movw	r28, r24
    2116:	8b 01       	movw	r16, r22
    2118:	82 2e       	mov	r8, r18
    211a:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <_ZN16PololuQTRSensors14readCalibratedEPjh>
    211e:	28 84       	ldd	r2, Y+8	; 0x08
    2120:	e8 01       	movw	r28, r16
    2122:	41 2c       	mov	r4, r1
    2124:	51 2c       	mov	r5, r1
    2126:	32 01       	movw	r6, r4
    2128:	00 e0       	ldi	r16, 0x00	; 0
    212a:	10 e0       	ldi	r17, 0x00	; 0
    212c:	c1 2c       	mov	r12, r1
    212e:	d1 2c       	mov	r13, r1
    2130:	76 01       	movw	r14, r12
    2132:	31 2c       	mov	r3, r1
    2134:	91 2c       	mov	r9, r1
    2136:	58 ee       	ldi	r21, 0xE8	; 232
    2138:	a5 2e       	mov	r10, r21
    213a:	53 e0       	ldi	r21, 0x03	; 3
    213c:	b5 2e       	mov	r11, r21
    213e:	92 14       	cp	r9, r2
    2140:	21 f1       	breq	.+72     	; 0x218a <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    2142:	e9 91       	ld	r30, Y+
    2144:	f9 91       	ld	r31, Y+
    2146:	88 20       	and	r8, r8
    2148:	21 f0       	breq	.+8      	; 0x2152 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    214a:	c5 01       	movw	r24, r10
    214c:	8e 1b       	sub	r24, r30
    214e:	9f 0b       	sbc	r25, r31
    2150:	fc 01       	movw	r30, r24
    2152:	e9 3c       	cpi	r30, 0xC9	; 201
    2154:	f1 05       	cpc	r31, r1
    2156:	24 f4       	brge	.+8      	; 0x2160 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    2158:	e3 33       	cpi	r30, 0x33	; 51
    215a:	f1 05       	cpc	r31, r1
    215c:	74 f0       	brlt	.+28     	; 0x217a <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    215e:	02 c0       	rjmp	.+4      	; 0x2164 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    2160:	33 24       	eor	r3, r3
    2162:	33 94       	inc	r3
    2164:	df 01       	movw	r26, r30
    2166:	a3 01       	movw	r20, r6
    2168:	92 01       	movw	r18, r4
    216a:	0e 94 8c 11 	call	0x2318	; 0x2318 <__mulshisi3>
    216e:	c6 0e       	add	r12, r22
    2170:	d7 1e       	adc	r13, r23
    2172:	e8 1e       	adc	r14, r24
    2174:	f9 1e       	adc	r15, r25
    2176:	0e 0f       	add	r16, r30
    2178:	1f 1f       	adc	r17, r31
    217a:	93 94       	inc	r9
    217c:	98 ee       	ldi	r25, 0xE8	; 232
    217e:	49 0e       	add	r4, r25
    2180:	93 e0       	ldi	r25, 0x03	; 3
    2182:	59 1e       	adc	r5, r25
    2184:	61 1c       	adc	r6, r1
    2186:	71 1c       	adc	r7, r1
    2188:	da cf       	rjmp	.-76     	; 0x213e <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    218a:	31 10       	cpse	r3, r1
    218c:	1e c0       	rjmp	.+60     	; 0x21ca <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    218e:	49 2d       	mov	r20, r9
    2190:	50 e0       	ldi	r21, 0x00	; 0
    2192:	41 50       	subi	r20, 0x01	; 1
    2194:	51 09       	sbc	r21, r1
    2196:	24 ef       	ldi	r18, 0xF4	; 244
    2198:	31 e0       	ldi	r19, 0x01	; 1
    219a:	42 9f       	mul	r20, r18
    219c:	c0 01       	movw	r24, r0
    219e:	43 9f       	mul	r20, r19
    21a0:	90 0d       	add	r25, r0
    21a2:	52 9f       	mul	r21, r18
    21a4:	90 0d       	add	r25, r0
    21a6:	11 24       	eor	r1, r1
    21a8:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    21ac:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    21b0:	28 17       	cp	r18, r24
    21b2:	39 07       	cpc	r19, r25
    21b4:	b4 f0       	brlt	.+44     	; 0x21e2 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    21b6:	88 ee       	ldi	r24, 0xE8	; 232
    21b8:	93 e0       	ldi	r25, 0x03	; 3
    21ba:	48 9f       	mul	r20, r24
    21bc:	90 01       	movw	r18, r0
    21be:	49 9f       	mul	r20, r25
    21c0:	30 0d       	add	r19, r0
    21c2:	58 9f       	mul	r21, r24
    21c4:	30 0d       	add	r19, r0
    21c6:	11 24       	eor	r1, r1
    21c8:	0e c0       	rjmp	.+28     	; 0x21e6 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    21ca:	98 01       	movw	r18, r16
    21cc:	40 e0       	ldi	r20, 0x00	; 0
    21ce:	50 e0       	ldi	r21, 0x00	; 0
    21d0:	c7 01       	movw	r24, r14
    21d2:	b6 01       	movw	r22, r12
    21d4:	0e 94 2b 11 	call	0x2256	; 0x2256 <__udivmodsi4>
    21d8:	30 93 91 01 	sts	0x0191, r19	; 0x800191 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    21dc:	20 93 90 01 	sts	0x0190, r18	; 0x800190 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    21e0:	02 c0       	rjmp	.+4      	; 0x21e6 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    21e2:	20 e0       	ldi	r18, 0x00	; 0
    21e4:	30 e0       	ldi	r19, 0x00	; 0
    21e6:	c9 01       	movw	r24, r18
    21e8:	cd b7       	in	r28, 0x3d	; 61
    21ea:	de b7       	in	r29, 0x3e	; 62
    21ec:	e2 e1       	ldi	r30, 0x12	; 18
    21ee:	0c 94 b0 11 	jmp	0x2360	; 0x2360 <__epilogue_restores__>

000021f2 <_ZN16PololuQTRSensorsD1Ev>:
    21f2:	cf 93       	push	r28
    21f4:	df 93       	push	r29
    21f6:	ec 01       	movw	r28, r24
    21f8:	8a 81       	ldd	r24, Y+2	; 0x02
    21fa:	9b 81       	ldd	r25, Y+3	; 0x03
    21fc:	00 97       	sbiw	r24, 0x00	; 0
    21fe:	11 f0       	breq	.+4      	; 0x2204 <_ZN16PololuQTRSensorsD1Ev+0x12>
    2200:	0e 94 63 12 	call	0x24c6	; 0x24c6 <free>
    2204:	8e 81       	ldd	r24, Y+6	; 0x06
    2206:	9f 81       	ldd	r25, Y+7	; 0x07
    2208:	00 97       	sbiw	r24, 0x00	; 0
    220a:	11 f0       	breq	.+4      	; 0x2210 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    220c:	0e 94 63 12 	call	0x24c6	; 0x24c6 <free>
    2210:	88 81       	ld	r24, Y
    2212:	99 81       	ldd	r25, Y+1	; 0x01
    2214:	00 97       	sbiw	r24, 0x00	; 0
    2216:	11 f0       	breq	.+4      	; 0x221c <_ZN16PololuQTRSensorsD1Ev+0x2a>
    2218:	0e 94 63 12 	call	0x24c6	; 0x24c6 <free>
    221c:	8c 81       	ldd	r24, Y+4	; 0x04
    221e:	9d 81       	ldd	r25, Y+5	; 0x05
    2220:	00 97       	sbiw	r24, 0x00	; 0
    2222:	11 f0       	breq	.+4      	; 0x2228 <_ZN16PololuQTRSensorsD1Ev+0x36>
    2224:	0e 94 63 12 	call	0x24c6	; 0x24c6 <free>
    2228:	df 91       	pop	r29
    222a:	cf 91       	pop	r28
    222c:	08 95       	ret

0000222e <__udivmodhi4>:
    222e:	aa 1b       	sub	r26, r26
    2230:	bb 1b       	sub	r27, r27
    2232:	51 e1       	ldi	r21, 0x11	; 17
    2234:	07 c0       	rjmp	.+14     	; 0x2244 <__udivmodhi4_ep>

00002236 <__udivmodhi4_loop>:
    2236:	aa 1f       	adc	r26, r26
    2238:	bb 1f       	adc	r27, r27
    223a:	a6 17       	cp	r26, r22
    223c:	b7 07       	cpc	r27, r23
    223e:	10 f0       	brcs	.+4      	; 0x2244 <__udivmodhi4_ep>
    2240:	a6 1b       	sub	r26, r22
    2242:	b7 0b       	sbc	r27, r23

00002244 <__udivmodhi4_ep>:
    2244:	88 1f       	adc	r24, r24
    2246:	99 1f       	adc	r25, r25
    2248:	5a 95       	dec	r21
    224a:	a9 f7       	brne	.-22     	; 0x2236 <__udivmodhi4_loop>
    224c:	80 95       	com	r24
    224e:	90 95       	com	r25
    2250:	bc 01       	movw	r22, r24
    2252:	cd 01       	movw	r24, r26
    2254:	08 95       	ret

00002256 <__udivmodsi4>:
    2256:	a1 e2       	ldi	r26, 0x21	; 33
    2258:	1a 2e       	mov	r1, r26
    225a:	aa 1b       	sub	r26, r26
    225c:	bb 1b       	sub	r27, r27
    225e:	fd 01       	movw	r30, r26
    2260:	0d c0       	rjmp	.+26     	; 0x227c <__udivmodsi4_ep>

00002262 <__udivmodsi4_loop>:
    2262:	aa 1f       	adc	r26, r26
    2264:	bb 1f       	adc	r27, r27
    2266:	ee 1f       	adc	r30, r30
    2268:	ff 1f       	adc	r31, r31
    226a:	a2 17       	cp	r26, r18
    226c:	b3 07       	cpc	r27, r19
    226e:	e4 07       	cpc	r30, r20
    2270:	f5 07       	cpc	r31, r21
    2272:	20 f0       	brcs	.+8      	; 0x227c <__udivmodsi4_ep>
    2274:	a2 1b       	sub	r26, r18
    2276:	b3 0b       	sbc	r27, r19
    2278:	e4 0b       	sbc	r30, r20
    227a:	f5 0b       	sbc	r31, r21

0000227c <__udivmodsi4_ep>:
    227c:	66 1f       	adc	r22, r22
    227e:	77 1f       	adc	r23, r23
    2280:	88 1f       	adc	r24, r24
    2282:	99 1f       	adc	r25, r25
    2284:	1a 94       	dec	r1
    2286:	69 f7       	brne	.-38     	; 0x2262 <__udivmodsi4_loop>
    2288:	60 95       	com	r22
    228a:	70 95       	com	r23
    228c:	80 95       	com	r24
    228e:	90 95       	com	r25
    2290:	9b 01       	movw	r18, r22
    2292:	ac 01       	movw	r20, r24
    2294:	bd 01       	movw	r22, r26
    2296:	cf 01       	movw	r24, r30
    2298:	08 95       	ret

0000229a <__divmodsi4>:
    229a:	05 2e       	mov	r0, r21
    229c:	97 fb       	bst	r25, 7
    229e:	1e f4       	brtc	.+6      	; 0x22a6 <__divmodsi4+0xc>
    22a0:	00 94       	com	r0
    22a2:	0e 94 64 11 	call	0x22c8	; 0x22c8 <__negsi2>
    22a6:	57 fd       	sbrc	r21, 7
    22a8:	07 d0       	rcall	.+14     	; 0x22b8 <__divmodsi4_neg2>
    22aa:	0e 94 2b 11 	call	0x2256	; 0x2256 <__udivmodsi4>
    22ae:	07 fc       	sbrc	r0, 7
    22b0:	03 d0       	rcall	.+6      	; 0x22b8 <__divmodsi4_neg2>
    22b2:	4e f4       	brtc	.+18     	; 0x22c6 <__divmodsi4_exit>
    22b4:	0c 94 64 11 	jmp	0x22c8	; 0x22c8 <__negsi2>

000022b8 <__divmodsi4_neg2>:
    22b8:	50 95       	com	r21
    22ba:	40 95       	com	r20
    22bc:	30 95       	com	r19
    22be:	21 95       	neg	r18
    22c0:	3f 4f       	sbci	r19, 0xFF	; 255
    22c2:	4f 4f       	sbci	r20, 0xFF	; 255
    22c4:	5f 4f       	sbci	r21, 0xFF	; 255

000022c6 <__divmodsi4_exit>:
    22c6:	08 95       	ret

000022c8 <__negsi2>:
    22c8:	90 95       	com	r25
    22ca:	80 95       	com	r24
    22cc:	70 95       	com	r23
    22ce:	61 95       	neg	r22
    22d0:	7f 4f       	sbci	r23, 0xFF	; 255
    22d2:	8f 4f       	sbci	r24, 0xFF	; 255
    22d4:	9f 4f       	sbci	r25, 0xFF	; 255
    22d6:	08 95       	ret

000022d8 <__tablejump2__>:
    22d8:	ee 0f       	add	r30, r30
    22da:	ff 1f       	adc	r31, r31
    22dc:	05 90       	lpm	r0, Z+
    22de:	f4 91       	lpm	r31, Z
    22e0:	e0 2d       	mov	r30, r0
    22e2:	09 94       	ijmp

000022e4 <__umulhisi3>:
    22e4:	a2 9f       	mul	r26, r18
    22e6:	b0 01       	movw	r22, r0
    22e8:	b3 9f       	mul	r27, r19
    22ea:	c0 01       	movw	r24, r0
    22ec:	a3 9f       	mul	r26, r19
    22ee:	70 0d       	add	r23, r0
    22f0:	81 1d       	adc	r24, r1
    22f2:	11 24       	eor	r1, r1
    22f4:	91 1d       	adc	r25, r1
    22f6:	b2 9f       	mul	r27, r18
    22f8:	70 0d       	add	r23, r0
    22fa:	81 1d       	adc	r24, r1
    22fc:	11 24       	eor	r1, r1
    22fe:	91 1d       	adc	r25, r1
    2300:	08 95       	ret

00002302 <__muluhisi3>:
    2302:	0e 94 72 11 	call	0x22e4	; 0x22e4 <__umulhisi3>
    2306:	a5 9f       	mul	r26, r21
    2308:	90 0d       	add	r25, r0
    230a:	b4 9f       	mul	r27, r20
    230c:	90 0d       	add	r25, r0
    230e:	a4 9f       	mul	r26, r20
    2310:	80 0d       	add	r24, r0
    2312:	91 1d       	adc	r25, r1
    2314:	11 24       	eor	r1, r1
    2316:	08 95       	ret

00002318 <__mulshisi3>:
    2318:	b7 ff       	sbrs	r27, 7
    231a:	0c 94 81 11 	jmp	0x2302	; 0x2302 <__muluhisi3>

0000231e <__mulohisi3>:
    231e:	0e 94 81 11 	call	0x2302	; 0x2302 <__muluhisi3>
    2322:	82 1b       	sub	r24, r18
    2324:	93 0b       	sbc	r25, r19
    2326:	08 95       	ret

00002328 <__prologue_saves__>:
    2328:	2f 92       	push	r2
    232a:	3f 92       	push	r3
    232c:	4f 92       	push	r4
    232e:	5f 92       	push	r5
    2330:	6f 92       	push	r6
    2332:	7f 92       	push	r7
    2334:	8f 92       	push	r8
    2336:	9f 92       	push	r9
    2338:	af 92       	push	r10
    233a:	bf 92       	push	r11
    233c:	cf 92       	push	r12
    233e:	df 92       	push	r13
    2340:	ef 92       	push	r14
    2342:	ff 92       	push	r15
    2344:	0f 93       	push	r16
    2346:	1f 93       	push	r17
    2348:	cf 93       	push	r28
    234a:	df 93       	push	r29
    234c:	cd b7       	in	r28, 0x3d	; 61
    234e:	de b7       	in	r29, 0x3e	; 62
    2350:	ca 1b       	sub	r28, r26
    2352:	db 0b       	sbc	r29, r27
    2354:	0f b6       	in	r0, 0x3f	; 63
    2356:	f8 94       	cli
    2358:	de bf       	out	0x3e, r29	; 62
    235a:	0f be       	out	0x3f, r0	; 63
    235c:	cd bf       	out	0x3d, r28	; 61
    235e:	09 94       	ijmp

00002360 <__epilogue_restores__>:
    2360:	2a 88       	ldd	r2, Y+18	; 0x12
    2362:	39 88       	ldd	r3, Y+17	; 0x11
    2364:	48 88       	ldd	r4, Y+16	; 0x10
    2366:	5f 84       	ldd	r5, Y+15	; 0x0f
    2368:	6e 84       	ldd	r6, Y+14	; 0x0e
    236a:	7d 84       	ldd	r7, Y+13	; 0x0d
    236c:	8c 84       	ldd	r8, Y+12	; 0x0c
    236e:	9b 84       	ldd	r9, Y+11	; 0x0b
    2370:	aa 84       	ldd	r10, Y+10	; 0x0a
    2372:	b9 84       	ldd	r11, Y+9	; 0x09
    2374:	c8 84       	ldd	r12, Y+8	; 0x08
    2376:	df 80       	ldd	r13, Y+7	; 0x07
    2378:	ee 80       	ldd	r14, Y+6	; 0x06
    237a:	fd 80       	ldd	r15, Y+5	; 0x05
    237c:	0c 81       	ldd	r16, Y+4	; 0x04
    237e:	1b 81       	ldd	r17, Y+3	; 0x03
    2380:	aa 81       	ldd	r26, Y+2	; 0x02
    2382:	b9 81       	ldd	r27, Y+1	; 0x01
    2384:	ce 0f       	add	r28, r30
    2386:	d1 1d       	adc	r29, r1
    2388:	0f b6       	in	r0, 0x3f	; 63
    238a:	f8 94       	cli
    238c:	de bf       	out	0x3e, r29	; 62
    238e:	0f be       	out	0x3f, r0	; 63
    2390:	cd bf       	out	0x3d, r28	; 61
    2392:	ed 01       	movw	r28, r26
    2394:	08 95       	ret

00002396 <malloc>:
    2396:	0f 93       	push	r16
    2398:	1f 93       	push	r17
    239a:	cf 93       	push	r28
    239c:	df 93       	push	r29
    239e:	82 30       	cpi	r24, 0x02	; 2
    23a0:	91 05       	cpc	r25, r1
    23a2:	10 f4       	brcc	.+4      	; 0x23a8 <malloc+0x12>
    23a4:	82 e0       	ldi	r24, 0x02	; 2
    23a6:	90 e0       	ldi	r25, 0x00	; 0
    23a8:	e0 91 a9 01 	lds	r30, 0x01A9	; 0x8001a9 <__flp>
    23ac:	f0 91 aa 01 	lds	r31, 0x01AA	; 0x8001aa <__flp+0x1>
    23b0:	20 e0       	ldi	r18, 0x00	; 0
    23b2:	30 e0       	ldi	r19, 0x00	; 0
    23b4:	a0 e0       	ldi	r26, 0x00	; 0
    23b6:	b0 e0       	ldi	r27, 0x00	; 0
    23b8:	30 97       	sbiw	r30, 0x00	; 0
    23ba:	19 f1       	breq	.+70     	; 0x2402 <malloc+0x6c>
    23bc:	40 81       	ld	r20, Z
    23be:	51 81       	ldd	r21, Z+1	; 0x01
    23c0:	02 81       	ldd	r16, Z+2	; 0x02
    23c2:	13 81       	ldd	r17, Z+3	; 0x03
    23c4:	48 17       	cp	r20, r24
    23c6:	59 07       	cpc	r21, r25
    23c8:	c8 f0       	brcs	.+50     	; 0x23fc <malloc+0x66>
    23ca:	84 17       	cp	r24, r20
    23cc:	95 07       	cpc	r25, r21
    23ce:	69 f4       	brne	.+26     	; 0x23ea <malloc+0x54>
    23d0:	10 97       	sbiw	r26, 0x00	; 0
    23d2:	31 f0       	breq	.+12     	; 0x23e0 <malloc+0x4a>
    23d4:	12 96       	adiw	r26, 0x02	; 2
    23d6:	0c 93       	st	X, r16
    23d8:	12 97       	sbiw	r26, 0x02	; 2
    23da:	13 96       	adiw	r26, 0x03	; 3
    23dc:	1c 93       	st	X, r17
    23de:	27 c0       	rjmp	.+78     	; 0x242e <malloc+0x98>
    23e0:	00 93 a9 01 	sts	0x01A9, r16	; 0x8001a9 <__flp>
    23e4:	10 93 aa 01 	sts	0x01AA, r17	; 0x8001aa <__flp+0x1>
    23e8:	22 c0       	rjmp	.+68     	; 0x242e <malloc+0x98>
    23ea:	21 15       	cp	r18, r1
    23ec:	31 05       	cpc	r19, r1
    23ee:	19 f0       	breq	.+6      	; 0x23f6 <malloc+0x60>
    23f0:	42 17       	cp	r20, r18
    23f2:	53 07       	cpc	r21, r19
    23f4:	18 f4       	brcc	.+6      	; 0x23fc <malloc+0x66>
    23f6:	9a 01       	movw	r18, r20
    23f8:	bd 01       	movw	r22, r26
    23fa:	ef 01       	movw	r28, r30
    23fc:	df 01       	movw	r26, r30
    23fe:	f8 01       	movw	r30, r16
    2400:	db cf       	rjmp	.-74     	; 0x23b8 <malloc+0x22>
    2402:	21 15       	cp	r18, r1
    2404:	31 05       	cpc	r19, r1
    2406:	f9 f0       	breq	.+62     	; 0x2446 <malloc+0xb0>
    2408:	28 1b       	sub	r18, r24
    240a:	39 0b       	sbc	r19, r25
    240c:	24 30       	cpi	r18, 0x04	; 4
    240e:	31 05       	cpc	r19, r1
    2410:	80 f4       	brcc	.+32     	; 0x2432 <malloc+0x9c>
    2412:	8a 81       	ldd	r24, Y+2	; 0x02
    2414:	9b 81       	ldd	r25, Y+3	; 0x03
    2416:	61 15       	cp	r22, r1
    2418:	71 05       	cpc	r23, r1
    241a:	21 f0       	breq	.+8      	; 0x2424 <malloc+0x8e>
    241c:	fb 01       	movw	r30, r22
    241e:	93 83       	std	Z+3, r25	; 0x03
    2420:	82 83       	std	Z+2, r24	; 0x02
    2422:	04 c0       	rjmp	.+8      	; 0x242c <malloc+0x96>
    2424:	90 93 aa 01 	sts	0x01AA, r25	; 0x8001aa <__flp+0x1>
    2428:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <__flp>
    242c:	fe 01       	movw	r30, r28
    242e:	32 96       	adiw	r30, 0x02	; 2
    2430:	44 c0       	rjmp	.+136    	; 0x24ba <malloc+0x124>
    2432:	fe 01       	movw	r30, r28
    2434:	e2 0f       	add	r30, r18
    2436:	f3 1f       	adc	r31, r19
    2438:	81 93       	st	Z+, r24
    243a:	91 93       	st	Z+, r25
    243c:	22 50       	subi	r18, 0x02	; 2
    243e:	31 09       	sbc	r19, r1
    2440:	39 83       	std	Y+1, r19	; 0x01
    2442:	28 83       	st	Y, r18
    2444:	3a c0       	rjmp	.+116    	; 0x24ba <malloc+0x124>
    2446:	20 91 a7 01 	lds	r18, 0x01A7	; 0x8001a7 <__brkval>
    244a:	30 91 a8 01 	lds	r19, 0x01A8	; 0x8001a8 <__brkval+0x1>
    244e:	23 2b       	or	r18, r19
    2450:	41 f4       	brne	.+16     	; 0x2462 <malloc+0xcc>
    2452:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    2456:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    245a:	30 93 a8 01 	sts	0x01A8, r19	; 0x8001a8 <__brkval+0x1>
    245e:	20 93 a7 01 	sts	0x01A7, r18	; 0x8001a7 <__brkval>
    2462:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    2466:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    246a:	21 15       	cp	r18, r1
    246c:	31 05       	cpc	r19, r1
    246e:	41 f4       	brne	.+16     	; 0x2480 <malloc+0xea>
    2470:	2d b7       	in	r18, 0x3d	; 61
    2472:	3e b7       	in	r19, 0x3e	; 62
    2474:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    2478:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    247c:	24 1b       	sub	r18, r20
    247e:	35 0b       	sbc	r19, r21
    2480:	e0 91 a7 01 	lds	r30, 0x01A7	; 0x8001a7 <__brkval>
    2484:	f0 91 a8 01 	lds	r31, 0x01A8	; 0x8001a8 <__brkval+0x1>
    2488:	e2 17       	cp	r30, r18
    248a:	f3 07       	cpc	r31, r19
    248c:	a0 f4       	brcc	.+40     	; 0x24b6 <malloc+0x120>
    248e:	2e 1b       	sub	r18, r30
    2490:	3f 0b       	sbc	r19, r31
    2492:	28 17       	cp	r18, r24
    2494:	39 07       	cpc	r19, r25
    2496:	78 f0       	brcs	.+30     	; 0x24b6 <malloc+0x120>
    2498:	ac 01       	movw	r20, r24
    249a:	4e 5f       	subi	r20, 0xFE	; 254
    249c:	5f 4f       	sbci	r21, 0xFF	; 255
    249e:	24 17       	cp	r18, r20
    24a0:	35 07       	cpc	r19, r21
    24a2:	48 f0       	brcs	.+18     	; 0x24b6 <malloc+0x120>
    24a4:	4e 0f       	add	r20, r30
    24a6:	5f 1f       	adc	r21, r31
    24a8:	50 93 a8 01 	sts	0x01A8, r21	; 0x8001a8 <__brkval+0x1>
    24ac:	40 93 a7 01 	sts	0x01A7, r20	; 0x8001a7 <__brkval>
    24b0:	81 93       	st	Z+, r24
    24b2:	91 93       	st	Z+, r25
    24b4:	02 c0       	rjmp	.+4      	; 0x24ba <malloc+0x124>
    24b6:	e0 e0       	ldi	r30, 0x00	; 0
    24b8:	f0 e0       	ldi	r31, 0x00	; 0
    24ba:	cf 01       	movw	r24, r30
    24bc:	df 91       	pop	r29
    24be:	cf 91       	pop	r28
    24c0:	1f 91       	pop	r17
    24c2:	0f 91       	pop	r16
    24c4:	08 95       	ret

000024c6 <free>:
    24c6:	cf 93       	push	r28
    24c8:	df 93       	push	r29
    24ca:	00 97       	sbiw	r24, 0x00	; 0
    24cc:	09 f4       	brne	.+2      	; 0x24d0 <free+0xa>
    24ce:	81 c0       	rjmp	.+258    	; 0x25d2 <free+0x10c>
    24d0:	fc 01       	movw	r30, r24
    24d2:	32 97       	sbiw	r30, 0x02	; 2
    24d4:	13 82       	std	Z+3, r1	; 0x03
    24d6:	12 82       	std	Z+2, r1	; 0x02
    24d8:	a0 91 a9 01 	lds	r26, 0x01A9	; 0x8001a9 <__flp>
    24dc:	b0 91 aa 01 	lds	r27, 0x01AA	; 0x8001aa <__flp+0x1>
    24e0:	10 97       	sbiw	r26, 0x00	; 0
    24e2:	81 f4       	brne	.+32     	; 0x2504 <free+0x3e>
    24e4:	20 81       	ld	r18, Z
    24e6:	31 81       	ldd	r19, Z+1	; 0x01
    24e8:	82 0f       	add	r24, r18
    24ea:	93 1f       	adc	r25, r19
    24ec:	20 91 a7 01 	lds	r18, 0x01A7	; 0x8001a7 <__brkval>
    24f0:	30 91 a8 01 	lds	r19, 0x01A8	; 0x8001a8 <__brkval+0x1>
    24f4:	28 17       	cp	r18, r24
    24f6:	39 07       	cpc	r19, r25
    24f8:	51 f5       	brne	.+84     	; 0x254e <free+0x88>
    24fa:	f0 93 a8 01 	sts	0x01A8, r31	; 0x8001a8 <__brkval+0x1>
    24fe:	e0 93 a7 01 	sts	0x01A7, r30	; 0x8001a7 <__brkval>
    2502:	67 c0       	rjmp	.+206    	; 0x25d2 <free+0x10c>
    2504:	ed 01       	movw	r28, r26
    2506:	20 e0       	ldi	r18, 0x00	; 0
    2508:	30 e0       	ldi	r19, 0x00	; 0
    250a:	ce 17       	cp	r28, r30
    250c:	df 07       	cpc	r29, r31
    250e:	40 f4       	brcc	.+16     	; 0x2520 <free+0x5a>
    2510:	4a 81       	ldd	r20, Y+2	; 0x02
    2512:	5b 81       	ldd	r21, Y+3	; 0x03
    2514:	9e 01       	movw	r18, r28
    2516:	41 15       	cp	r20, r1
    2518:	51 05       	cpc	r21, r1
    251a:	f1 f0       	breq	.+60     	; 0x2558 <free+0x92>
    251c:	ea 01       	movw	r28, r20
    251e:	f5 cf       	rjmp	.-22     	; 0x250a <free+0x44>
    2520:	d3 83       	std	Z+3, r29	; 0x03
    2522:	c2 83       	std	Z+2, r28	; 0x02
    2524:	40 81       	ld	r20, Z
    2526:	51 81       	ldd	r21, Z+1	; 0x01
    2528:	84 0f       	add	r24, r20
    252a:	95 1f       	adc	r25, r21
    252c:	c8 17       	cp	r28, r24
    252e:	d9 07       	cpc	r29, r25
    2530:	59 f4       	brne	.+22     	; 0x2548 <free+0x82>
    2532:	88 81       	ld	r24, Y
    2534:	99 81       	ldd	r25, Y+1	; 0x01
    2536:	84 0f       	add	r24, r20
    2538:	95 1f       	adc	r25, r21
    253a:	02 96       	adiw	r24, 0x02	; 2
    253c:	91 83       	std	Z+1, r25	; 0x01
    253e:	80 83       	st	Z, r24
    2540:	8a 81       	ldd	r24, Y+2	; 0x02
    2542:	9b 81       	ldd	r25, Y+3	; 0x03
    2544:	93 83       	std	Z+3, r25	; 0x03
    2546:	82 83       	std	Z+2, r24	; 0x02
    2548:	21 15       	cp	r18, r1
    254a:	31 05       	cpc	r19, r1
    254c:	29 f4       	brne	.+10     	; 0x2558 <free+0x92>
    254e:	f0 93 aa 01 	sts	0x01AA, r31	; 0x8001aa <__flp+0x1>
    2552:	e0 93 a9 01 	sts	0x01A9, r30	; 0x8001a9 <__flp>
    2556:	3d c0       	rjmp	.+122    	; 0x25d2 <free+0x10c>
    2558:	e9 01       	movw	r28, r18
    255a:	fb 83       	std	Y+3, r31	; 0x03
    255c:	ea 83       	std	Y+2, r30	; 0x02
    255e:	49 91       	ld	r20, Y+
    2560:	59 91       	ld	r21, Y+
    2562:	c4 0f       	add	r28, r20
    2564:	d5 1f       	adc	r29, r21
    2566:	ec 17       	cp	r30, r28
    2568:	fd 07       	cpc	r31, r29
    256a:	61 f4       	brne	.+24     	; 0x2584 <free+0xbe>
    256c:	80 81       	ld	r24, Z
    256e:	91 81       	ldd	r25, Z+1	; 0x01
    2570:	84 0f       	add	r24, r20
    2572:	95 1f       	adc	r25, r21
    2574:	02 96       	adiw	r24, 0x02	; 2
    2576:	e9 01       	movw	r28, r18
    2578:	99 83       	std	Y+1, r25	; 0x01
    257a:	88 83       	st	Y, r24
    257c:	82 81       	ldd	r24, Z+2	; 0x02
    257e:	93 81       	ldd	r25, Z+3	; 0x03
    2580:	9b 83       	std	Y+3, r25	; 0x03
    2582:	8a 83       	std	Y+2, r24	; 0x02
    2584:	e0 e0       	ldi	r30, 0x00	; 0
    2586:	f0 e0       	ldi	r31, 0x00	; 0
    2588:	12 96       	adiw	r26, 0x02	; 2
    258a:	8d 91       	ld	r24, X+
    258c:	9c 91       	ld	r25, X
    258e:	13 97       	sbiw	r26, 0x03	; 3
    2590:	00 97       	sbiw	r24, 0x00	; 0
    2592:	19 f0       	breq	.+6      	; 0x259a <free+0xd4>
    2594:	fd 01       	movw	r30, r26
    2596:	dc 01       	movw	r26, r24
    2598:	f7 cf       	rjmp	.-18     	; 0x2588 <free+0xc2>
    259a:	8d 91       	ld	r24, X+
    259c:	9c 91       	ld	r25, X
    259e:	11 97       	sbiw	r26, 0x01	; 1
    25a0:	9d 01       	movw	r18, r26
    25a2:	2e 5f       	subi	r18, 0xFE	; 254
    25a4:	3f 4f       	sbci	r19, 0xFF	; 255
    25a6:	82 0f       	add	r24, r18
    25a8:	93 1f       	adc	r25, r19
    25aa:	20 91 a7 01 	lds	r18, 0x01A7	; 0x8001a7 <__brkval>
    25ae:	30 91 a8 01 	lds	r19, 0x01A8	; 0x8001a8 <__brkval+0x1>
    25b2:	28 17       	cp	r18, r24
    25b4:	39 07       	cpc	r19, r25
    25b6:	69 f4       	brne	.+26     	; 0x25d2 <free+0x10c>
    25b8:	30 97       	sbiw	r30, 0x00	; 0
    25ba:	29 f4       	brne	.+10     	; 0x25c6 <free+0x100>
    25bc:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <__flp+0x1>
    25c0:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <__flp>
    25c4:	02 c0       	rjmp	.+4      	; 0x25ca <free+0x104>
    25c6:	13 82       	std	Z+3, r1	; 0x03
    25c8:	12 82       	std	Z+2, r1	; 0x02
    25ca:	b0 93 a8 01 	sts	0x01A8, r27	; 0x8001a8 <__brkval+0x1>
    25ce:	a0 93 a7 01 	sts	0x01A7, r26	; 0x8001a7 <__brkval>
    25d2:	df 91       	pop	r29
    25d4:	cf 91       	pop	r28
    25d6:	08 95       	ret

000025d8 <strncat>:
    25d8:	fb 01       	movw	r30, r22
    25da:	dc 01       	movw	r26, r24
    25dc:	0d 90       	ld	r0, X+
    25de:	00 20       	and	r0, r0
    25e0:	e9 f7       	brne	.-6      	; 0x25dc <strncat+0x4>
    25e2:	11 97       	sbiw	r26, 0x01	; 1
    25e4:	41 50       	subi	r20, 0x01	; 1
    25e6:	50 40       	sbci	r21, 0x00	; 0
    25e8:	28 f0       	brcs	.+10     	; 0x25f4 <strncat+0x1c>
    25ea:	01 90       	ld	r0, Z+
    25ec:	00 20       	and	r0, r0
    25ee:	0d 92       	st	X+, r0
    25f0:	c9 f7       	brne	.-14     	; 0x25e4 <strncat+0xc>
    25f2:	08 95       	ret
    25f4:	1c 92       	st	X, r1
    25f6:	08 95       	ret

000025f8 <__do_global_dtors>:
    25f8:	10 e0       	ldi	r17, 0x00	; 0
    25fa:	cd e3       	ldi	r28, 0x3D	; 61
    25fc:	d0 e0       	ldi	r29, 0x00	; 0
    25fe:	04 c0       	rjmp	.+8      	; 0x2608 <__do_global_dtors+0x10>
    2600:	fe 01       	movw	r30, r28
    2602:	0e 94 6c 11 	call	0x22d8	; 0x22d8 <__tablejump2__>
    2606:	21 96       	adiw	r28, 0x01	; 1
    2608:	ce 33       	cpi	r28, 0x3E	; 62
    260a:	d1 07       	cpc	r29, r17
    260c:	c9 f7       	brne	.-14     	; 0x2600 <__do_global_dtors+0x8>
    260e:	f8 94       	cli

00002610 <__stop_program>:
    2610:	ff cf       	rjmp	.-2      	; 0x2610 <__stop_program>
