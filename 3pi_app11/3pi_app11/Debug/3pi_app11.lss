
3pi_app11.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000094  00800100  00003c5e  00003cf2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003c5e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000093  00800194  00800194  00003d86  2**0
                  ALLOC
  3 .stab         00007b48  00000000  00000000  00003d88  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000a086  00000000  00000000  0000b8d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  00015956  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00015998  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 000001c0  00000000  00000000  000159d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   000035f8  00000000  00000000  00015b98  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00001234  00000000  00000000  00019190  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   000021e8  00000000  00000000  0001a3c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  0000056c  00000000  00000000  0001c5ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000a8d  00000000  00000000  0001cb18  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00001699  00000000  00000000  0001d5a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000001d8  00000000  00000000  0001ec3e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 43 00 	jmp	0x86	; 0x86 <__dtors_end>
       4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
       8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
       c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      24:	0c 94 30 16 	jmp	0x2c60	; 0x2c60 <__vector_9>
      28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      34:	0c 94 c7 11 	jmp	0x238e	; 0x238e <__vector_13>
      38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      48:	0c 94 3f 15 	jmp	0x2a7e	; 0x2a7e <__vector_18>
      4c:	0c 94 0b 16 	jmp	0x2c16	; 0x2c16 <__vector_19>
      50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
      68:	34 08       	sbc	r3, r4
      6a:	62 08       	sbc	r6, r2
      6c:	cd 08       	sbc	r12, r13
      6e:	38 08       	sbc	r3, r8
      70:	47 08       	sbc	r4, r7
      72:	56 08       	sbc	r5, r6
      74:	38 08       	sbc	r3, r8
      76:	38 08       	sbc	r3, r8
      78:	38 08       	sbc	r3, r8

0000007a <__trampolines_end>:
      7a:	3e 67       	ori	r19, 0x7E	; 126
      7c:	33 32       	cpi	r19, 0x23	; 35
      7e:	3e 3e       	cpi	r19, 0xEE	; 238
      80:	63 33       	cpi	r22, 0x33	; 51
      82:	32 00       	.word	0x0032	; ????

00000084 <__ctors_end>:
      84:	11 17       	cp	r17, r17

00000086 <__dtors_end>:
      86:	11 24       	eor	r1, r1
      88:	1f be       	out	0x3f, r1	; 63
      8a:	cf ef       	ldi	r28, 0xFF	; 255
      8c:	d8 e0       	ldi	r29, 0x08	; 8
      8e:	de bf       	out	0x3e, r29	; 62
      90:	cd bf       	out	0x3d, r28	; 61

00000092 <__do_copy_data>:
      92:	11 e0       	ldi	r17, 0x01	; 1
      94:	a0 e0       	ldi	r26, 0x00	; 0
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	ee e5       	ldi	r30, 0x5E	; 94
      9a:	fc e3       	ldi	r31, 0x3C	; 60
      9c:	02 c0       	rjmp	.+4      	; 0xa2 <__do_copy_data+0x10>
      9e:	05 90       	lpm	r0, Z+
      a0:	0d 92       	st	X+, r0
      a2:	a4 39       	cpi	r26, 0x94	; 148
      a4:	b1 07       	cpc	r27, r17
      a6:	d9 f7       	brne	.-10     	; 0x9e <__do_copy_data+0xc>

000000a8 <__do_clear_bss>:
      a8:	22 e0       	ldi	r18, 0x02	; 2
      aa:	a4 e9       	ldi	r26, 0x94	; 148
      ac:	b1 e0       	ldi	r27, 0x01	; 1
      ae:	01 c0       	rjmp	.+2      	; 0xb2 <.do_clear_bss_start>

000000b0 <.do_clear_bss_loop>:
      b0:	1d 92       	st	X+, r1

000000b2 <.do_clear_bss_start>:
      b2:	a7 32       	cpi	r26, 0x27	; 39
      b4:	b2 07       	cpc	r27, r18
      b6:	e1 f7       	brne	.-8      	; 0xb0 <.do_clear_bss_loop>
      b8:	0e 94 9b 03 	call	0x736	; 0x736 <main>
      bc:	0c 94 22 1e 	jmp	0x3c44	; 0x3c44 <__do_global_dtors>

000000c0 <__bad_interrupt>:
      c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <filllocationarrays>:


#define START 010
#define STOP 101

void filllocationarrays(Communications *self){
      c4:	cf 93       	push	r28
      c6:	df 93       	push	r29
      c8:	cd b7       	in	r28, 0x3d	; 61
      ca:	de b7       	in	r29, 0x3e	; 62
      cc:	e2 97       	sbiw	r28, 0x32	; 50
      ce:	0f b6       	in	r0, 0x3f	; 63
      d0:	f8 94       	cli
      d2:	de bf       	out	0x3e, r29	; 62
      d4:	0f be       	out	0x3f, r0	; 63
      d6:	cd bf       	out	0x3d, r28	; 61
      d8:	dc 01       	movw	r26, r24
	char arrx[25];
	char arry[25];
	char set;
	int placement=0;

	for (int i=0;i<25;i++){
      da:	20 e0       	ldi	r18, 0x00	; 0
      dc:	30 e0       	ldi	r19, 0x00	; 0
      de:	1a c0       	rjmp	.+52     	; 0x114 <filllocationarrays+0x50>
	arrx[i]=arry[i]=self->Orderary[i]=self->Orderarx[i]=0;
      e0:	ad 01       	movw	r20, r26
      e2:	42 0f       	add	r20, r18
      e4:	53 1f       	adc	r21, r19
      e6:	ca 01       	movw	r24, r20
      e8:	8e 5a       	subi	r24, 0xAE	; 174
      ea:	9f 4f       	sbci	r25, 0xFF	; 255
      ec:	fc 01       	movw	r30, r24
      ee:	10 82       	st	Z, r1
      f0:	fa 01       	movw	r30, r20
      f2:	11 ae       	std	Z+57, r1	; 0x39
      f4:	ea e1       	ldi	r30, 0x1A	; 26
      f6:	f0 e0       	ldi	r31, 0x00	; 0
      f8:	ec 0f       	add	r30, r28
      fa:	fd 1f       	adc	r31, r29
      fc:	e2 0f       	add	r30, r18
      fe:	f3 1f       	adc	r31, r19
     100:	10 82       	st	Z, r1
     102:	e1 e0       	ldi	r30, 0x01	; 1
     104:	f0 e0       	ldi	r31, 0x00	; 0
     106:	ec 0f       	add	r30, r28
     108:	fd 1f       	adc	r31, r29
     10a:	e2 0f       	add	r30, r18
     10c:	f3 1f       	adc	r31, r19
     10e:	10 82       	st	Z, r1
	char arrx[25];
	char arry[25];
	char set;
	int placement=0;

	for (int i=0;i<25;i++){
     110:	2f 5f       	subi	r18, 0xFF	; 255
     112:	3f 4f       	sbci	r19, 0xFF	; 255
     114:	29 31       	cpi	r18, 0x19	; 25
     116:	31 05       	cpc	r19, r1
     118:	1c f3       	brlt	.-58     	; 0xe0 <filllocationarrays+0x1c>
	arrx[i]=arry[i]=self->Orderary[i]=self->Orderarx[i]=0;
}

	if (self->Recieved[1]==1){
     11a:	5c 96       	adiw	r26, 0x1c	; 28
     11c:	8c 91       	ld	r24, X
     11e:	5c 97       	sbiw	r26, 0x1c	; 28
     120:	81 30       	cpi	r24, 0x01	; 1
     122:	29 f4       	brne	.+10     	; 0x12e <filllocationarrays+0x6a>
		arrx[placement]=1;
     124:	89 83       	std	Y+1, r24	; 0x01
		arry[placement]=1;
     126:	8a 8f       	std	Y+26, r24	; 0x1a
		placement++;
     128:	21 e0       	ldi	r18, 0x01	; 1
     12a:	30 e0       	ldi	r19, 0x00	; 0
     12c:	02 c0       	rjmp	.+4      	; 0x132 <filllocationarrays+0x6e>

void filllocationarrays(Communications *self){
	char arrx[25];
	char arry[25];
	char set;
	int placement=0;
     12e:	20 e0       	ldi	r18, 0x00	; 0
     130:	30 e0       	ldi	r19, 0x00	; 0
     132:	40 e0       	ldi	r20, 0x00	; 0
     134:	50 e0       	ldi	r21, 0x00	; 0
     136:	3b c0       	rjmp	.+118    	; 0x1ae <filllocationarrays+0xea>
		arrx[placement]=1;
		arry[placement]=1;
		placement++;
	}
	for (int i=0;i<8;i++){
		set = ((self->Recieved[2] >> i)  & 0x01);
     138:	5d 96       	adiw	r26, 0x1d	; 29
     13a:	8c 91       	ld	r24, X
     13c:	5d 97       	sbiw	r26, 0x1d	; 29
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	04 2e       	mov	r0, r20
     142:	02 c0       	rjmp	.+4      	; 0x148 <filllocationarrays+0x84>
     144:	95 95       	asr	r25
     146:	87 95       	ror	r24
     148:	0a 94       	dec	r0
     14a:	e2 f7       	brpl	.-8      	; 0x144 <filllocationarrays+0x80>
     14c:	81 70       	andi	r24, 0x01	; 1
		if (i<4){
     14e:	44 30       	cpi	r20, 0x04	; 4
     150:	51 05       	cpc	r21, r1
     152:	b4 f4       	brge	.+44     	; 0x180 <filllocationarrays+0xbc>
			if (set == 1){
     154:	81 30       	cpi	r24, 0x01	; 1
     156:	49 f5       	brne	.+82     	; 0x1aa <filllocationarrays+0xe6>
			arrx[placement]=i+1+1;
     158:	e1 e0       	ldi	r30, 0x01	; 1
     15a:	f0 e0       	ldi	r31, 0x00	; 0
     15c:	ec 0f       	add	r30, r28
     15e:	fd 1f       	adc	r31, r29
     160:	e2 0f       	add	r30, r18
     162:	f3 1f       	adc	r31, r19
     164:	82 e0       	ldi	r24, 0x02	; 2
     166:	84 0f       	add	r24, r20
     168:	80 83       	st	Z, r24
			arry[placement]=0+1;
     16a:	ea e1       	ldi	r30, 0x1A	; 26
     16c:	f0 e0       	ldi	r31, 0x00	; 0
     16e:	ec 0f       	add	r30, r28
     170:	fd 1f       	adc	r31, r29
     172:	e2 0f       	add	r30, r18
     174:	f3 1f       	adc	r31, r19
     176:	81 e0       	ldi	r24, 0x01	; 1
     178:	80 83       	st	Z, r24
			placement++;}
     17a:	2f 5f       	subi	r18, 0xFF	; 255
     17c:	3f 4f       	sbci	r19, 0xFF	; 255
     17e:	15 c0       	rjmp	.+42     	; 0x1aa <filllocationarrays+0xe6>
		}else{
			if (set == 1){
     180:	81 30       	cpi	r24, 0x01	; 1
     182:	99 f4       	brne	.+38     	; 0x1aa <filllocationarrays+0xe6>
			arrx[placement]=i-4+1;
     184:	e1 e0       	ldi	r30, 0x01	; 1
     186:	f0 e0       	ldi	r31, 0x00	; 0
     188:	ec 0f       	add	r30, r28
     18a:	fd 1f       	adc	r31, r29
     18c:	e2 0f       	add	r30, r18
     18e:	f3 1f       	adc	r31, r19
     190:	8d ef       	ldi	r24, 0xFD	; 253
     192:	84 0f       	add	r24, r20
     194:	80 83       	st	Z, r24
			arry[placement]=1+1;
     196:	ea e1       	ldi	r30, 0x1A	; 26
     198:	f0 e0       	ldi	r31, 0x00	; 0
     19a:	ec 0f       	add	r30, r28
     19c:	fd 1f       	adc	r31, r29
     19e:	e2 0f       	add	r30, r18
     1a0:	f3 1f       	adc	r31, r19
     1a2:	82 e0       	ldi	r24, 0x02	; 2
     1a4:	80 83       	st	Z, r24
			placement++;}
     1a6:	2f 5f       	subi	r18, 0xFF	; 255
     1a8:	3f 4f       	sbci	r19, 0xFF	; 255
	if (self->Recieved[1]==1){
		arrx[placement]=1;
		arry[placement]=1;
		placement++;
	}
	for (int i=0;i<8;i++){
     1aa:	4f 5f       	subi	r20, 0xFF	; 255
     1ac:	5f 4f       	sbci	r21, 0xFF	; 255
     1ae:	48 30       	cpi	r20, 0x08	; 8
     1b0:	51 05       	cpc	r21, r1
     1b2:	14 f2       	brlt	.-124    	; 0x138 <filllocationarrays+0x74>
     1b4:	40 e0       	ldi	r20, 0x00	; 0
     1b6:	50 e0       	ldi	r21, 0x00	; 0
     1b8:	53 c0       	rjmp	.+166    	; 0x260 <filllocationarrays+0x19c>
			arry[placement]=1+1;
			placement++;}
		}
	}
		for (int i=0;i<8;i++){
			set = ((self->Recieved[3] >> i)  & 0x01);
     1ba:	5e 96       	adiw	r26, 0x1e	; 30
     1bc:	8c 91       	ld	r24, X
     1be:	5e 97       	sbiw	r26, 0x1e	; 30
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	04 2e       	mov	r0, r20
     1c4:	02 c0       	rjmp	.+4      	; 0x1ca <filllocationarrays+0x106>
     1c6:	95 95       	asr	r25
     1c8:	87 95       	ror	r24
     1ca:	0a 94       	dec	r0
     1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <filllocationarrays+0x102>
     1ce:	81 70       	andi	r24, 0x01	; 1
			if (i==0){
     1d0:	41 15       	cp	r20, r1
     1d2:	51 05       	cpc	r21, r1
     1d4:	b9 f4       	brne	.+46     	; 0x204 <filllocationarrays+0x140>
				if (set == 1){
     1d6:	81 30       	cpi	r24, 0x01	; 1
     1d8:	09 f0       	breq	.+2      	; 0x1dc <filllocationarrays+0x118>
     1da:	40 c0       	rjmp	.+128    	; 0x25c <filllocationarrays+0x198>
				arrx[placement]=i+4+1;
     1dc:	e1 e0       	ldi	r30, 0x01	; 1
     1de:	f0 e0       	ldi	r31, 0x00	; 0
     1e0:	ec 0f       	add	r30, r28
     1e2:	fd 1f       	adc	r31, r29
     1e4:	e2 0f       	add	r30, r18
     1e6:	f3 1f       	adc	r31, r19
     1e8:	85 e0       	ldi	r24, 0x05	; 5
     1ea:	84 0f       	add	r24, r20
     1ec:	80 83       	st	Z, r24
				arry[placement]=1+1;
     1ee:	ea e1       	ldi	r30, 0x1A	; 26
     1f0:	f0 e0       	ldi	r31, 0x00	; 0
     1f2:	ec 0f       	add	r30, r28
     1f4:	fd 1f       	adc	r31, r29
     1f6:	e2 0f       	add	r30, r18
     1f8:	f3 1f       	adc	r31, r19
     1fa:	82 e0       	ldi	r24, 0x02	; 2
     1fc:	80 83       	st	Z, r24
				placement++;}
     1fe:	2f 5f       	subi	r18, 0xFF	; 255
     200:	3f 4f       	sbci	r19, 0xFF	; 255
     202:	2c c0       	rjmp	.+88     	; 0x25c <filllocationarrays+0x198>
			}else if(i<6){
     204:	46 30       	cpi	r20, 0x06	; 6
     206:	51 05       	cpc	r21, r1
     208:	a4 f4       	brge	.+40     	; 0x232 <filllocationarrays+0x16e>
				if (set == 1){
     20a:	81 30       	cpi	r24, 0x01	; 1
     20c:	39 f5       	brne	.+78     	; 0x25c <filllocationarrays+0x198>
				arrx[placement]=i-1+1;
     20e:	e1 e0       	ldi	r30, 0x01	; 1
     210:	f0 e0       	ldi	r31, 0x00	; 0
     212:	ec 0f       	add	r30, r28
     214:	fd 1f       	adc	r31, r29
     216:	e2 0f       	add	r30, r18
     218:	f3 1f       	adc	r31, r19
     21a:	40 83       	st	Z, r20
				arry[placement]=2+1;
     21c:	ea e1       	ldi	r30, 0x1A	; 26
     21e:	f0 e0       	ldi	r31, 0x00	; 0
     220:	ec 0f       	add	r30, r28
     222:	fd 1f       	adc	r31, r29
     224:	e2 0f       	add	r30, r18
     226:	f3 1f       	adc	r31, r19
     228:	83 e0       	ldi	r24, 0x03	; 3
     22a:	80 83       	st	Z, r24
				placement++;}
     22c:	2f 5f       	subi	r18, 0xFF	; 255
     22e:	3f 4f       	sbci	r19, 0xFF	; 255
     230:	15 c0       	rjmp	.+42     	; 0x25c <filllocationarrays+0x198>
			}else{
				if (set == 1){
     232:	81 30       	cpi	r24, 0x01	; 1
     234:	99 f4       	brne	.+38     	; 0x25c <filllocationarrays+0x198>
				arrx[placement]=i-6+1;
     236:	e1 e0       	ldi	r30, 0x01	; 1
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	ec 0f       	add	r30, r28
     23c:	fd 1f       	adc	r31, r29
     23e:	e2 0f       	add	r30, r18
     240:	f3 1f       	adc	r31, r19
     242:	8b ef       	ldi	r24, 0xFB	; 251
     244:	84 0f       	add	r24, r20
     246:	80 83       	st	Z, r24
				arry[placement]=3+1;
     248:	ea e1       	ldi	r30, 0x1A	; 26
     24a:	f0 e0       	ldi	r31, 0x00	; 0
     24c:	ec 0f       	add	r30, r28
     24e:	fd 1f       	adc	r31, r29
     250:	e2 0f       	add	r30, r18
     252:	f3 1f       	adc	r31, r19
     254:	84 e0       	ldi	r24, 0x04	; 4
     256:	80 83       	st	Z, r24
				placement++;}
     258:	2f 5f       	subi	r18, 0xFF	; 255
     25a:	3f 4f       	sbci	r19, 0xFF	; 255
			arrx[placement]=i-4+1;
			arry[placement]=1+1;
			placement++;}
		}
	}
		for (int i=0;i<8;i++){
     25c:	4f 5f       	subi	r20, 0xFF	; 255
     25e:	5f 4f       	sbci	r21, 0xFF	; 255
     260:	48 30       	cpi	r20, 0x08	; 8
     262:	51 05       	cpc	r21, r1
     264:	0c f4       	brge	.+2      	; 0x268 <filllocationarrays+0x1a4>
     266:	a9 cf       	rjmp	.-174    	; 0x1ba <filllocationarrays+0xf6>
     268:	40 e0       	ldi	r20, 0x00	; 0
     26a:	50 e0       	ldi	r21, 0x00	; 0
     26c:	3b c0       	rjmp	.+118    	; 0x2e4 <filllocationarrays+0x220>
				arry[placement]=3+1;
				placement++;}
			}
		}
		for (int i=0;i<8;i++){
			set = ((self->Recieved[4] >> i)  & 0x01);
     26e:	5f 96       	adiw	r26, 0x1f	; 31
     270:	8c 91       	ld	r24, X
     272:	5f 97       	sbiw	r26, 0x1f	; 31
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	04 2e       	mov	r0, r20
     278:	02 c0       	rjmp	.+4      	; 0x27e <filllocationarrays+0x1ba>
     27a:	95 95       	asr	r25
     27c:	87 95       	ror	r24
     27e:	0a 94       	dec	r0
     280:	e2 f7       	brpl	.-8      	; 0x27a <filllocationarrays+0x1b6>
     282:	81 70       	andi	r24, 0x01	; 1
			if (i<3){
     284:	43 30       	cpi	r20, 0x03	; 3
     286:	51 05       	cpc	r21, r1
     288:	b4 f4       	brge	.+44     	; 0x2b6 <filllocationarrays+0x1f2>
				if (set == 1){
     28a:	81 30       	cpi	r24, 0x01	; 1
     28c:	49 f5       	brne	.+82     	; 0x2e0 <filllocationarrays+0x21c>
				arrx[placement]=i+2+1;
     28e:	e1 e0       	ldi	r30, 0x01	; 1
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	ec 0f       	add	r30, r28
     294:	fd 1f       	adc	r31, r29
     296:	e2 0f       	add	r30, r18
     298:	f3 1f       	adc	r31, r19
     29a:	83 e0       	ldi	r24, 0x03	; 3
     29c:	84 0f       	add	r24, r20
     29e:	80 83       	st	Z, r24
				arry[placement]=3+1;
     2a0:	ea e1       	ldi	r30, 0x1A	; 26
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	ec 0f       	add	r30, r28
     2a6:	fd 1f       	adc	r31, r29
     2a8:	e2 0f       	add	r30, r18
     2aa:	f3 1f       	adc	r31, r19
     2ac:	84 e0       	ldi	r24, 0x04	; 4
     2ae:	80 83       	st	Z, r24
				placement++;}
     2b0:	2f 5f       	subi	r18, 0xFF	; 255
     2b2:	3f 4f       	sbci	r19, 0xFF	; 255
     2b4:	15 c0       	rjmp	.+42     	; 0x2e0 <filllocationarrays+0x21c>
			}else{
				if (set == 1){
     2b6:	81 30       	cpi	r24, 0x01	; 1
     2b8:	99 f4       	brne	.+38     	; 0x2e0 <filllocationarrays+0x21c>
				arrx[placement]=i-3+1;
     2ba:	e1 e0       	ldi	r30, 0x01	; 1
     2bc:	f0 e0       	ldi	r31, 0x00	; 0
     2be:	ec 0f       	add	r30, r28
     2c0:	fd 1f       	adc	r31, r29
     2c2:	e2 0f       	add	r30, r18
     2c4:	f3 1f       	adc	r31, r19
     2c6:	8e ef       	ldi	r24, 0xFE	; 254
     2c8:	84 0f       	add	r24, r20
     2ca:	80 83       	st	Z, r24
				arry[placement]=4+1;
     2cc:	ea e1       	ldi	r30, 0x1A	; 26
     2ce:	f0 e0       	ldi	r31, 0x00	; 0
     2d0:	ec 0f       	add	r30, r28
     2d2:	fd 1f       	adc	r31, r29
     2d4:	e2 0f       	add	r30, r18
     2d6:	f3 1f       	adc	r31, r19
     2d8:	85 e0       	ldi	r24, 0x05	; 5
     2da:	80 83       	st	Z, r24
				placement++;}
     2dc:	2f 5f       	subi	r18, 0xFF	; 255
     2de:	3f 4f       	sbci	r19, 0xFF	; 255
				arrx[placement]=i-6+1;
				arry[placement]=3+1;
				placement++;}
			}
		}
		for (int i=0;i<8;i++){
     2e0:	4f 5f       	subi	r20, 0xFF	; 255
     2e2:	5f 4f       	sbci	r21, 0xFF	; 255
     2e4:	48 30       	cpi	r20, 0x08	; 8
     2e6:	51 05       	cpc	r21, r1
     2e8:	14 f2       	brlt	.-124    	; 0x26e <filllocationarrays+0x1aa>
     2ea:	20 e0       	ldi	r18, 0x00	; 0
     2ec:	30 e0       	ldi	r19, 0x00	; 0
     2ee:	19 c0       	rjmp	.+50     	; 0x322 <filllocationarrays+0x25e>
				arry[placement]=4+1;
				placement++;}
			}
		}
	for (int i=0;i<25;i++){
		self->Orderarx[i]=arrx[i];
     2f0:	e1 e0       	ldi	r30, 0x01	; 1
     2f2:	f0 e0       	ldi	r31, 0x00	; 0
     2f4:	ec 0f       	add	r30, r28
     2f6:	fd 1f       	adc	r31, r29
     2f8:	e2 0f       	add	r30, r18
     2fa:	f3 1f       	adc	r31, r19
     2fc:	40 81       	ld	r20, Z
     2fe:	cd 01       	movw	r24, r26
     300:	82 0f       	add	r24, r18
     302:	93 1f       	adc	r25, r19
     304:	fc 01       	movw	r30, r24
     306:	ee 5a       	subi	r30, 0xAE	; 174
     308:	ff 4f       	sbci	r31, 0xFF	; 255
     30a:	40 83       	st	Z, r20
		self->Orderary[i]=arry[i];
     30c:	ea e1       	ldi	r30, 0x1A	; 26
     30e:	f0 e0       	ldi	r31, 0x00	; 0
     310:	ec 0f       	add	r30, r28
     312:	fd 1f       	adc	r31, r29
     314:	e2 0f       	add	r30, r18
     316:	f3 1f       	adc	r31, r19
     318:	40 81       	ld	r20, Z
     31a:	fc 01       	movw	r30, r24
     31c:	41 af       	std	Z+57, r20	; 0x39
				arrx[placement]=i-3+1;
				arry[placement]=4+1;
				placement++;}
			}
		}
	for (int i=0;i<25;i++){
     31e:	2f 5f       	subi	r18, 0xFF	; 255
     320:	3f 4f       	sbci	r19, 0xFF	; 255
     322:	29 31       	cpi	r18, 0x19	; 25
     324:	31 05       	cpc	r19, r1
     326:	24 f3       	brlt	.-56     	; 0x2f0 <filllocationarrays+0x22c>
		self->Orderarx[i]=arrx[i];
		self->Orderary[i]=arry[i];
	}
}
     328:	e2 96       	adiw	r28, 0x32	; 50
     32a:	0f b6       	in	r0, 0x3f	; 63
     32c:	f8 94       	cli
     32e:	de bf       	out	0x3e, r29	; 62
     330:	0f be       	out	0x3f, r0	; 63
     332:	cd bf       	out	0x3d, r28	; 61
     334:	df 91       	pop	r29
     336:	cf 91       	pop	r28
     338:	08 95       	ret

0000033a <sendACK>:
			


void sendACK(Communications *self ){
     33a:	cf 93       	push	r28
     33c:	df 93       	push	r29
     33e:	00 d0       	rcall	.+0      	; 0x340 <sendACK+0x6>
     340:	1f 92       	push	r1
     342:	cd b7       	in	r28, 0x3d	; 61
     344:	de b7       	in	r29, 0x3e	; 62
						char tmp[3];
						tmp[0]=START;
     346:	88 e0       	ldi	r24, 0x08	; 8
     348:	89 83       	std	Y+1, r24	; 0x01
						tmp[1]=255;
     34a:	8f ef       	ldi	r24, 0xFF	; 255
     34c:	8a 83       	std	Y+2, r24	; 0x02
						tmp[2]=STOP;
     34e:	85 e6       	ldi	r24, 0x65	; 101
     350:	8b 83       	std	Y+3, r24	; 0x03
						serial_send_blocking(tmp,4);
     352:	64 e0       	ldi	r22, 0x04	; 4
     354:	ce 01       	movw	r24, r28
     356:	01 96       	adiw	r24, 0x01	; 1
     358:	0e 94 08 16 	call	0x2c10	; 0x2c10 <serial_send_blocking>
}
     35c:	0f 90       	pop	r0
     35e:	0f 90       	pop	r0
     360:	0f 90       	pop	r0
     362:	df 91       	pop	r29
     364:	cf 91       	pop	r28
     366:	08 95       	ret

00000368 <Update>:

void Update(Communications *self){
     368:	cf 92       	push	r12
     36a:	df 92       	push	r13
     36c:	ef 92       	push	r14
     36e:	ff 92       	push	r15
     370:	1f 93       	push	r17
     372:	cf 93       	push	r28
     374:	df 93       	push	r29
     376:	ec 01       	movw	r28, r24
	
	char Flag =0;
	unsigned long timebetweensends = 750;
	static unsigned long timesincelastsend = 0;
	
	if (serial_receive_buffer_full()==1){
     378:	0e 94 b5 14 	call	0x296a	; 0x296a <serial_receive_buffer_full>
     37c:	81 30       	cpi	r24, 0x01	; 1
     37e:	09 f0       	breq	.+2      	; 0x382 <Update+0x1a>
     380:	5c c0       	rjmp	.+184    	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
		if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
     382:	8b 8d       	ldd	r24, Y+27	; 0x1b
     384:	88 30       	cpi	r24, 0x08	; 8
     386:	09 f0       	breq	.+2      	; 0x38a <Update+0x22>
     388:	5a c0       	rjmp	.+180    	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
     38a:	e8 81       	ld	r30, Y
     38c:	f0 e0       	ldi	r31, 0x00	; 0
     38e:	31 97       	sbiw	r30, 0x01	; 1
     390:	ec 0f       	add	r30, r28
     392:	fd 1f       	adc	r31, r29
     394:	83 8d       	ldd	r24, Z+27	; 0x1b
     396:	85 36       	cpi	r24, 0x65	; 101
     398:	09 f0       	breq	.+2      	; 0x39c <Update+0x34>
     39a:	53 c0       	rjmp	.+166    	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
			Flag = 1;
			//play_from_program_space(fugue);
			
			sendACK(self); // stops here to send acknowledge
     39c:	ce 01       	movw	r24, r28
     39e:	0e 94 9d 01 	call	0x33a	; 0x33a <sendACK>
			clear();
     3a2:	0e 94 32 13 	call	0x2664	; 0x2664 <clear>
			print_long(self->Recieved[5]);
     3a6:	68 a1       	ldd	r22, Y+32	; 0x20
     3a8:	70 e0       	ldi	r23, 0x00	; 0
     3aa:	80 e0       	ldi	r24, 0x00	; 0
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	0e 94 96 13 	call	0x272c	; 0x272c <print_long>
			if (self->Recieved[5]==254 || self->Recieved[8]==254){    //enter emergency stop
     3b2:	88 a1       	ldd	r24, Y+32	; 0x20
     3b4:	8e 3f       	cpi	r24, 0xFE	; 254
     3b6:	19 f0       	breq	.+6      	; 0x3be <Update+0x56>
     3b8:	8b a1       	ldd	r24, Y+35	; 0x23
     3ba:	8e 3f       	cpi	r24, 0xFE	; 254
     3bc:	29 f4       	brne	.+10     	; 0x3c8 <Update+0x60>
				//play_from_program_space(fugue);
				self->EmergencyStop=1;
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	fe 01       	movw	r30, r28
     3c2:	e5 59       	subi	r30, 0x95	; 149
     3c4:	ff 4f       	sbci	r31, 0xFF	; 255
     3c6:	80 83       	st	Z, r24
			}
			
			if (self->Recieved[8]==250){    // Leave emergency stop
     3c8:	8b a1       	ldd	r24, Y+35	; 0x23
     3ca:	8a 3f       	cpi	r24, 0xFA	; 250
     3cc:	21 f4       	brne	.+8      	; 0x3d6 <Update+0x6e>
				self->EmergencyStop=0;
     3ce:	fe 01       	movw	r30, r28
     3d0:	e5 59       	subi	r30, 0x95	; 149
     3d2:	ff 4f       	sbci	r31, 0xFF	; 255
     3d4:	10 82       	st	Z, r1
			}
			
			if (self->Recieved[8]==245){                            // Enter Spin Mode
     3d6:	85 3f       	cpi	r24, 0xF5	; 245
     3d8:	29 f4       	brne	.+10     	; 0x3e4 <Update+0x7c>
				self->EmergencyStop=2;
     3da:	92 e0       	ldi	r25, 0x02	; 2
     3dc:	fe 01       	movw	r30, r28
     3de:	e5 59       	subi	r30, 0x95	; 149
     3e0:	ff 4f       	sbci	r31, 0xFF	; 255
     3e2:	90 83       	st	Z, r25
			}
			if (self->Recieved[8]==240){                            // Enter Manual Mode
     3e4:	80 3f       	cpi	r24, 0xF0	; 240
     3e6:	a9 f4       	brne	.+42     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
				self->EmergencyStop=3;
     3e8:	83 e0       	ldi	r24, 0x03	; 3
     3ea:	fe 01       	movw	r30, r28
     3ec:	e5 59       	subi	r30, 0x95	; 149
     3ee:	ff 4f       	sbci	r31, 0xFF	; 255
     3f0:	80 83       	st	Z, r24
				for (int i = 0; i < 4; i++){
     3f2:	80 e0       	ldi	r24, 0x00	; 0
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	0a c0       	rjmp	.+20     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
					self->Direction[i]=self->Recieved[i+9];
     3f8:	fc 01       	movw	r30, r24
     3fa:	39 96       	adiw	r30, 0x09	; 9
     3fc:	ec 0f       	add	r30, r28
     3fe:	fd 1f       	adc	r31, r29
     400:	23 8d       	ldd	r18, Z+27	; 0x1b
     402:	fe 01       	movw	r30, r28
     404:	e8 0f       	add	r30, r24
     406:	f9 1f       	adc	r31, r25
     408:	25 ab       	std	Z+53, r18	; 0x35
			if (self->Recieved[8]==245){                            // Enter Spin Mode
				self->EmergencyStop=2;
			}
			if (self->Recieved[8]==240){                            // Enter Manual Mode
				self->EmergencyStop=3;
				for (int i = 0; i < 4; i++){
     40a:	01 96       	adiw	r24, 0x01	; 1
     40c:	84 30       	cpi	r24, 0x04	; 4
     40e:	91 05       	cpc	r25, r1
     410:	9c f3       	brlt	.-26     	; 0x3f8 <Update+0x90>
					self->Direction[i]=self->Recieved[i+9];
				}
			}
			
			if (self->locationx==255 && self->locationy==255){
     412:	fe 01       	movw	r30, r28
     414:	e2 59       	subi	r30, 0x92	; 146
     416:	ff 4f       	sbci	r31, 0xFF	; 255
     418:	80 81       	ld	r24, Z
     41a:	8f 3f       	cpi	r24, 0xFF	; 255
     41c:	a1 f4       	brne	.+40     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     41e:	31 96       	adiw	r30, 0x01	; 1
     420:	80 81       	ld	r24, Z
     422:	8f 3f       	cpi	r24, 0xFF	; 255
     424:	91 f4       	brne	.+36     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
				filllocationarrays(self);
     426:	ce 01       	movw	r24, r28
     428:	0e 94 62 00 	call	0xc4	; 0xc4 <filllocationarrays>
				self->flag =1;
     42c:	81 e0       	ldi	r24, 0x01	; 1
     42e:	fe 01       	movw	r30, r28
     430:	e0 59       	subi	r30, 0x90	; 144
     432:	ff 4f       	sbci	r31, 0xFF	; 255
     434:	80 83       	st	Z, r24
	unsigned long timebetweensends = 750;
	static unsigned long timesincelastsend = 0;
	
	if (serial_receive_buffer_full()==1){
		if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
			Flag = 1;
     436:	11 e0       	ldi	r17, 0x01	; 1
     438:	09 c0       	rjmp	.+18     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
}

void Update(Communications *self){
	
	
	char Flag =0;
     43a:	10 e0       	ldi	r17, 0x00	; 0
     43c:	07 c0       	rjmp	.+14     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     43e:	10 e0       	ldi	r17, 0x00	; 0
     440:	05 c0       	rjmp	.+10     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     442:	10 e0       	ldi	r17, 0x00	; 0
     444:	03 c0       	rjmp	.+6      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
	unsigned long timebetweensends = 750;
	static unsigned long timesincelastsend = 0;
	
	if (serial_receive_buffer_full()==1){
		if (self->Recieved[0]==8 && self->Recieved[self->val-1]==101){
			Flag = 1;
     446:	11 e0       	ldi	r17, 0x01	; 1
     448:	01 c0       	rjmp	.+2      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     44a:	11 e0       	ldi	r17, 0x01	; 1
				filllocationarrays(self);
				self->flag =1;
			}
		}
	}
 if (timesincelastsend+timebetweensends<=get_ms()){
     44c:	c0 90 01 02 	lds	r12, 0x0201	; 0x800201 <timesincelastsend.2233>
     450:	d0 90 02 02 	lds	r13, 0x0202	; 0x800202 <timesincelastsend.2233+0x1>
     454:	e0 90 03 02 	lds	r14, 0x0203	; 0x800203 <timesincelastsend.2233+0x2>
     458:	f0 90 04 02 	lds	r15, 0x0204	; 0x800204 <timesincelastsend.2233+0x3>
     45c:	8e ee       	ldi	r24, 0xEE	; 238
     45e:	c8 0e       	add	r12, r24
     460:	82 e0       	ldi	r24, 0x02	; 2
     462:	d8 1e       	adc	r13, r24
     464:	e1 1c       	adc	r14, r1
     466:	f1 1c       	adc	r15, r1
     468:	0e 94 b0 16 	call	0x2d60	; 0x2d60 <get_ms>
     46c:	6c 15       	cp	r22, r12
     46e:	7d 05       	cpc	r23, r13
     470:	8e 05       	cpc	r24, r14
     472:	9f 05       	cpc	r25, r15
     474:	c8 f1       	brcs	.+114    	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
	 timesincelastsend=get_ms();
     476:	0e 94 b0 16 	call	0x2d60	; 0x2d60 <get_ms>
     47a:	60 93 01 02 	sts	0x0201, r22	; 0x800201 <timesincelastsend.2233>
     47e:	70 93 02 02 	sts	0x0202, r23	; 0x800202 <timesincelastsend.2233+0x1>
     482:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <timesincelastsend.2233+0x2>
     486:	90 93 04 02 	sts	0x0204, r25	; 0x800204 <timesincelastsend.2233+0x3>
	 for (char i=0;i<self->val;i++){
     48a:	80 e0       	ldi	r24, 0x00	; 0
     48c:	05 c0       	rjmp	.+10     	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
		 self->msgBuffer[i]=i;
     48e:	fe 01       	movw	r30, r28
     490:	e8 0f       	add	r30, r24
     492:	f1 1d       	adc	r31, r1
     494:	81 83       	std	Z+1, r24	; 0x01
			}
		}
	}
 if (timesincelastsend+timebetweensends<=get_ms()){
	 timesincelastsend=get_ms();
	 for (char i=0;i<self->val;i++){
     496:	8f 5f       	subi	r24, 0xFF	; 255
     498:	68 81       	ld	r22, Y
     49a:	86 17       	cp	r24, r22
     49c:	c0 f3       	brcs	.-16     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
		 self->msgBuffer[i]=i;
	 }
	 self->msgBuffer[0]=START;
     49e:	88 e0       	ldi	r24, 0x08	; 8
     4a0:	89 83       	std	Y+1, r24	; 0x01
	 self->msgBuffer[1]=self->batterylvl;
     4a2:	fe 01       	movw	r30, r28
     4a4:	e4 59       	subi	r30, 0x94	; 148
     4a6:	ff 4f       	sbci	r31, 0xFF	; 255
     4a8:	80 81       	ld	r24, Z
     4aa:	8a 83       	std	Y+2, r24	; 0x02
	 self->msgBuffer[2]=self->magprocess;
     4ac:	31 96       	adiw	r30, 0x01	; 1
     4ae:	80 81       	ld	r24, Z
     4b0:	8b 83       	std	Y+3, r24	; 0x03
	 self->msgBuffer[3]=self->locationx;
     4b2:	31 96       	adiw	r30, 0x01	; 1
     4b4:	80 81       	ld	r24, Z
     4b6:	8c 83       	std	Y+4, r24	; 0x04
	 self->msgBuffer[4]=self->locationy;
     4b8:	31 96       	adiw	r30, 0x01	; 1
     4ba:	80 81       	ld	r24, Z
     4bc:	8d 83       	std	Y+5, r24	; 0x05
	 self->msgBuffer[5]=self->EmergencyStop;
     4be:	34 97       	sbiw	r30, 0x04	; 4
     4c0:	80 81       	ld	r24, Z
     4c2:	8e 83       	std	Y+6, r24	; 0x06
	 self->msgBuffer[self->val-1]=STOP;
     4c4:	e6 2f       	mov	r30, r22
     4c6:	f0 e0       	ldi	r31, 0x00	; 0
     4c8:	31 97       	sbiw	r30, 0x01	; 1
     4ca:	ec 0f       	add	r30, r28
     4cc:	fd 1f       	adc	r31, r29
     4ce:	85 e6       	ldi	r24, 0x65	; 101
     4d0:	81 83       	std	Z+1, r24	; 0x01
	 serial_send(self->msgBuffer, self->val);
     4d2:	ce 01       	movw	r24, r28
     4d4:	01 96       	adiw	r24, 0x01	; 1
     4d6:	0e 94 c3 15 	call	0x2b86	; 0x2b86 <serial_send>

	 //delay_ms(10000); // test
	 if (Flag == 1){
     4da:	11 30       	cpi	r17, 0x01	; 1
     4dc:	29 f4       	brne	.+10     	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
		 serial_receive(self->Recieved,self->val);
     4de:	68 81       	ld	r22, Y
     4e0:	ce 01       	movw	r24, r28
     4e2:	4b 96       	adiw	r24, 0x1b	; 27
     4e4:	0e 94 3c 15 	call	0x2a78	; 0x2a78 <serial_receive>
	 }
 }
}
     4e8:	df 91       	pop	r29
     4ea:	cf 91       	pop	r28
     4ec:	1f 91       	pop	r17
     4ee:	ff 90       	pop	r15
     4f0:	ef 90       	pop	r14
     4f2:	df 90       	pop	r13
     4f4:	cf 90       	pop	r12
     4f6:	08 95       	ret

000004f8 <fillarrays>:

void fillarrays(Communications *self){
     4f8:	cf 93       	push	r28
     4fa:	df 93       	push	r29
     4fc:	cd b7       	in	r28, 0x3d	; 61
     4fe:	de b7       	in	r29, 0x3e	; 62
     500:	60 97       	sbiw	r28, 0x10	; 16
     502:	0f b6       	in	r0, 0x3f	; 63
     504:	f8 94       	cli
     506:	de bf       	out	0x3e, r29	; 62
     508:	0f be       	out	0x3f, r0	; 63
     50a:	cd bf       	out	0x3d, r28	; 61
     50c:	ac 01       	movw	r20, r24
	//temp
		char arrx[]={2,5,4,2,1,6,1,5};
     50e:	88 e0       	ldi	r24, 0x08	; 8
     510:	e8 e2       	ldi	r30, 0x28	; 40
     512:	f1 e0       	ldi	r31, 0x01	; 1
     514:	de 01       	movw	r26, r28
     516:	11 96       	adiw	r26, 0x01	; 1
     518:	01 90       	ld	r0, Z+
     51a:	0d 92       	st	X+, r0
     51c:	8a 95       	dec	r24
     51e:	e1 f7       	brne	.-8      	; 0x518 <fillarrays+0x20>
		char arry[]={0,1,3,5,2,4,1,2};
     520:	88 e0       	ldi	r24, 0x08	; 8
     522:	e0 e3       	ldi	r30, 0x30	; 48
     524:	f1 e0       	ldi	r31, 0x01	; 1
     526:	de 01       	movw	r26, r28
     528:	19 96       	adiw	r26, 0x09	; 9
     52a:	01 90       	ld	r0, Z+
     52c:	0d 92       	st	X+, r0
     52e:	8a 95       	dec	r24
     530:	e1 f7       	brne	.-8      	; 0x52a <fillarrays+0x32>
		for (int i=0;i<8;i++){
     532:	20 e0       	ldi	r18, 0x00	; 0
     534:	30 e0       	ldi	r19, 0x00	; 0
     536:	19 c0       	rjmp	.+50     	; 0x56a <fillarrays+0x72>
			self->Orderarx[i]=arrx[i];
     538:	e1 e0       	ldi	r30, 0x01	; 1
     53a:	f0 e0       	ldi	r31, 0x00	; 0
     53c:	ec 0f       	add	r30, r28
     53e:	fd 1f       	adc	r31, r29
     540:	e2 0f       	add	r30, r18
     542:	f3 1f       	adc	r31, r19
     544:	90 81       	ld	r25, Z
     546:	da 01       	movw	r26, r20
     548:	a2 0f       	add	r26, r18
     54a:	b3 1f       	adc	r27, r19
     54c:	fd 01       	movw	r30, r26
     54e:	ee 5a       	subi	r30, 0xAE	; 174
     550:	ff 4f       	sbci	r31, 0xFF	; 255
     552:	90 83       	st	Z, r25
			self->Orderary[i]=arry[i];
     554:	e9 e0       	ldi	r30, 0x09	; 9
     556:	f0 e0       	ldi	r31, 0x00	; 0
     558:	ec 0f       	add	r30, r28
     55a:	fd 1f       	adc	r31, r29
     55c:	e2 0f       	add	r30, r18
     55e:	f3 1f       	adc	r31, r19
     560:	90 81       	ld	r25, Z
     562:	d9 96       	adiw	r26, 0x39	; 57
     564:	9c 93       	st	X, r25

void fillarrays(Communications *self){
	//temp
		char arrx[]={2,5,4,2,1,6,1,5};
		char arry[]={0,1,3,5,2,4,1,2};
		for (int i=0;i<8;i++){
     566:	2f 5f       	subi	r18, 0xFF	; 255
     568:	3f 4f       	sbci	r19, 0xFF	; 255
     56a:	28 30       	cpi	r18, 0x08	; 8
     56c:	31 05       	cpc	r19, r1
     56e:	24 f3       	brlt	.-56     	; 0x538 <fillarrays+0x40>
			self->Orderarx[i]=arrx[i];
			self->Orderary[i]=arry[i];
		}
}
     570:	60 96       	adiw	r28, 0x10	; 16
     572:	0f b6       	in	r0, 0x3f	; 63
     574:	f8 94       	cli
     576:	de bf       	out	0x3e, r29	; 62
     578:	0f be       	out	0x3f, r0	; 63
     57a:	cd bf       	out	0x3d, r28	; 61
     57c:	df 91       	pop	r29
     57e:	cf 91       	pop	r28
     580:	08 95       	ret

00000582 <Communications_INIT>:

void Communications_INIT(Communications * myCom){
     582:	0f 93       	push	r16
     584:	1f 93       	push	r17
     586:	cf 93       	push	r28
     588:	df 93       	push	r29
     58a:	ec 01       	movw	r28, r24
	myCom->val = Max_Bytes;	
     58c:	8a e1       	ldi	r24, 0x1A	; 26
     58e:	88 83       	st	Y, r24


	//Setup Communications
	serial_set_baud_rate(9600);
     590:	60 e8       	ldi	r22, 0x80	; 128
     592:	75 e2       	ldi	r23, 0x25	; 37
     594:	80 e0       	ldi	r24, 0x00	; 0
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	0e 94 93 15 	call	0x2b26	; 0x2b26 <serial_set_baud_rate>
	serial_receive(myCom->Recieved,myCom->val);
     59c:	68 81       	ld	r22, Y
     59e:	ce 01       	movw	r24, r28
     5a0:	4b 96       	adiw	r24, 0x1b	; 27
     5a2:	0e 94 3c 15 	call	0x2a78	; 0x2a78 <serial_receive>

	//filling in functions
	myCom->Update		 = Update;
     5a6:	fe 01       	movw	r30, r28
     5a8:	ef 58       	subi	r30, 0x8F	; 143
     5aa:	ff 4f       	sbci	r31, 0xFF	; 255
     5ac:	84 eb       	ldi	r24, 0xB4	; 180
     5ae:	91 e0       	ldi	r25, 0x01	; 1
     5b0:	91 83       	std	Z+1, r25	; 0x01
     5b2:	80 83       	st	Z, r24
		
	//filling in default values
	myCom->EmergencyStop = 0;
     5b4:	36 97       	sbiw	r30, 0x06	; 6
     5b6:	10 82       	st	Z, r1
	myCom->batterylvl	 = batteryPercentage();
     5b8:	0e 94 f5 02 	call	0x5ea	; 0x5ea <batteryPercentage>
     5bc:	8e 01       	movw	r16, r28
     5be:	04 59       	subi	r16, 0x94	; 148
     5c0:	1f 4f       	sbci	r17, 0xFF	; 255
     5c2:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <__fixunssfsi>
     5c6:	f8 01       	movw	r30, r16
     5c8:	60 83       	st	Z, r22
	myCom->magprocess	 = 0;
     5ca:	31 96       	adiw	r30, 0x01	; 1
     5cc:	10 82       	st	Z, r1
	myCom->locationx	 = 4;
     5ce:	31 96       	adiw	r30, 0x01	; 1
     5d0:	84 e0       	ldi	r24, 0x04	; 4
     5d2:	80 83       	st	Z, r24
	myCom->locationy	 = 5;
     5d4:	31 96       	adiw	r30, 0x01	; 1
     5d6:	85 e0       	ldi	r24, 0x05	; 5
     5d8:	80 83       	st	Z, r24
	
	
	fillarrays(myCom);
     5da:	ce 01       	movw	r24, r28
     5dc:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <fillarrays>
}
     5e0:	df 91       	pop	r29
     5e2:	cf 91       	pop	r28
     5e4:	1f 91       	pop	r17
     5e6:	0f 91       	pop	r16
     5e8:	08 95       	ret

000005ea <batteryPercentage>:

#include "display.h"
#include <pololu/3pi.h>

float batteryPercentage()//Should this function be in main or in display.c or something else?
{
     5ea:	cf 92       	push	r12
     5ec:	df 92       	push	r13
     5ee:	ef 92       	push	r14
     5f0:	ff 92       	push	r15
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     5f2:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <read_battery_millivolts_3pi>
	
	float milliVolts = read_battery_millivolts();
     5f6:	bc 01       	movw	r22, r24
     5f8:	80 e0       	ldi	r24, 0x00	; 0
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	0e 94 34 0d 	call	0x1a68	; 0x1a68 <__floatunsisf>
     600:	6b 01       	movw	r12, r22
     602:	7c 01       	movw	r14, r24
	float batteryPercent = 0.000000000632*((milliVolts)*(milliVolts)*(milliVolts));
     604:	9b 01       	movw	r18, r22
     606:	ac 01       	movw	r20, r24
     608:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <__mulsf3>
     60c:	9b 01       	movw	r18, r22
     60e:	ac 01       	movw	r20, r24
     610:	c7 01       	movw	r24, r14
     612:	b6 01       	movw	r22, r12
     614:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <__mulsf3>
     618:	2c e0       	ldi	r18, 0x0C	; 12
     61a:	39 eb       	ldi	r19, 0xB9	; 185
     61c:	4d e2       	ldi	r20, 0x2D	; 45
     61e:	50 e3       	ldi	r21, 0x30	; 48
     620:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <__mulsf3>
	return batteryPercent;
}
     624:	ff 90       	pop	r15
     626:	ef 90       	pop	r14
     628:	df 90       	pop	r13
     62a:	cf 90       	pop	r12
     62c:	08 95       	ret

0000062e <updateDisplay>:

void updateDisplay(int orderPercent, int batteryPercent, robotStates currentState)
{
     62e:	ef 92       	push	r14
     630:	ff 92       	push	r15
     632:	0f 93       	push	r16
     634:	1f 93       	push	r17
     636:	cf 93       	push	r28
     638:	7c 01       	movw	r14, r24
     63a:	8b 01       	movw	r16, r22
     63c:	c4 2f       	mov	r28, r20
	clear();
     63e:	0e 94 32 13 	call	0x2664	; 0x2664 <clear>
	lcd_goto_xy(0,0);
     642:	60 e0       	ldi	r22, 0x00	; 0
     644:	80 e0       	ldi	r24, 0x00	; 0
     646:	0e 94 b9 13 	call	0x2772	; 0x2772 <lcd_goto_xy>
	print("Job:");
     64a:	85 e5       	ldi	r24, 0x55	; 85
     64c:	91 e0       	ldi	r25, 0x01	; 1
     64e:	0e 94 41 13 	call	0x2682	; 0x2682 <print>
	print_long(orderPercent);
     652:	b7 01       	movw	r22, r14
     654:	ff 0c       	add	r15, r15
     656:	88 0b       	sbc	r24, r24
     658:	99 0b       	sbc	r25, r25
     65a:	0e 94 96 13 	call	0x272c	; 0x272c <print_long>
	print("%");
     65e:	8a e5       	ldi	r24, 0x5A	; 90
     660:	91 e0       	ldi	r25, 0x01	; 1
     662:	0e 94 41 13 	call	0x2682	; 0x2682 <print>
	
	lcd_goto_xy(0,1);
     666:	61 e0       	ldi	r22, 0x01	; 1
     668:	80 e0       	ldi	r24, 0x00	; 0
     66a:	0e 94 b9 13 	call	0x2772	; 0x2772 <lcd_goto_xy>
	print("Bat:");
     66e:	8c e5       	ldi	r24, 0x5C	; 92
     670:	91 e0       	ldi	r25, 0x01	; 1
     672:	0e 94 41 13 	call	0x2682	; 0x2682 <print>
	print_long(batteryPercent);
     676:	b8 01       	movw	r22, r16
     678:	11 0f       	add	r17, r17
     67a:	88 0b       	sbc	r24, r24
     67c:	99 0b       	sbc	r25, r25
     67e:	0e 94 96 13 	call	0x272c	; 0x272c <print_long>
	print("%");
     682:	8a e5       	ldi	r24, 0x5A	; 90
     684:	91 e0       	ldi	r25, 0x01	; 1
     686:	0e 94 41 13 	call	0x2682	; 0x2682 <print>
	switch(currentState)
     68a:	c2 30       	cpi	r28, 0x02	; 2
     68c:	a9 f0       	breq	.+42     	; 0x6b8 <updateDisplay+0x8a>
     68e:	28 f4       	brcc	.+10     	; 0x69a <updateDisplay+0x6c>
     690:	cc 23       	and	r28, r28
     692:	41 f0       	breq	.+16     	; 0x6a4 <updateDisplay+0x76>
     694:	c1 30       	cpi	r28, 0x01	; 1
     696:	59 f0       	breq	.+22     	; 0x6ae <updateDisplay+0x80>
     698:	1d c0       	rjmp	.+58     	; 0x6d4 <updateDisplay+0xa6>
     69a:	c3 30       	cpi	r28, 0x03	; 3
     69c:	91 f0       	breq	.+36     	; 0x6c2 <updateDisplay+0x94>
     69e:	c4 30       	cpi	r28, 0x04	; 4
     6a0:	a9 f0       	breq	.+42     	; 0x6cc <updateDisplay+0x9e>
     6a2:	18 c0       	rjmp	.+48     	; 0x6d4 <updateDisplay+0xa6>
	{
		case manual:
		print("M");//M for Manual
     6a4:	81 e6       	ldi	r24, 0x61	; 97
     6a6:	91 e0       	ldi	r25, 0x01	; 1
     6a8:	0e 94 41 13 	call	0x2682	; 0x2682 <print>
		break;
     6ac:	13 c0       	rjmp	.+38     	; 0x6d4 <updateDisplay+0xa6>
		case mazeSolver:
		print("P");//P for Parcour
     6ae:	83 e6       	ldi	r24, 0x63	; 99
     6b0:	91 e0       	ldi	r25, 0x01	; 1
     6b2:	0e 94 41 13 	call	0x2682	; 0x2682 <print>
		break;
     6b6:	0e c0       	rjmp	.+28     	; 0x6d4 <updateDisplay+0xa6>
		case logicsBot:
		print("O");//O for Order
     6b8:	85 e6       	ldi	r24, 0x65	; 101
     6ba:	91 e0       	ldi	r25, 0x01	; 1
     6bc:	0e 94 41 13 	call	0x2682	; 0x2682 <print>
		break;
     6c0:	09 c0       	rjmp	.+18     	; 0x6d4 <updateDisplay+0xa6>
		case chargeMode:
		print("C");//C for Charge
     6c2:	87 e6       	ldi	r24, 0x67	; 103
     6c4:	91 e0       	ldi	r25, 0x01	; 1
     6c6:	0e 94 41 13 	call	0x2682	; 0x2682 <print>
		break;
     6ca:	04 c0       	rjmp	.+8      	; 0x6d4 <updateDisplay+0xa6>
		case homingMode:
		print("H");//H for Homing
     6cc:	89 e6       	ldi	r24, 0x69	; 105
     6ce:	91 e0       	ldi	r25, 0x01	; 1
     6d0:	0e 94 41 13 	call	0x2682	; 0x2682 <print>
		break;
	}
}
     6d4:	cf 91       	pop	r28
     6d6:	1f 91       	pop	r17
     6d8:	0f 91       	pop	r16
     6da:	ff 90       	pop	r15
     6dc:	ef 90       	pop	r14
     6de:	08 95       	ret

000006e0 <whileBarcode>:
     6e0:	03 c0       	rjmp	.+6      	; 0x6e8 <whileBarcode+0x8>
     6e2:	83 e5       	ldi	r24, 0x53	; 83
     6e4:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
     6e8:	0e 94 6f 04 	call	0x8de	; 0x8de <lineType>
     6ec:	82 30       	cpi	r24, 0x02	; 2
     6ee:	c9 f7       	brne	.-14     	; 0x6e2 <whileBarcode+0x2>
     6f0:	08 95       	ret

000006f2 <whileLineEnd>:
     6f2:	03 c0       	rjmp	.+6      	; 0x6fa <whileLineEnd+0x8>
     6f4:	83 e5       	ldi	r24, 0x53	; 83
     6f6:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
     6fa:	0e 94 6f 04 	call	0x8de	; 0x8de <lineType>
     6fe:	81 30       	cpi	r24, 0x01	; 1
     700:	c9 f7       	brne	.-14     	; 0x6f4 <whileLineEnd+0x2>
     702:	08 95       	ret

00000704 <pickOrder>:
     704:	cf 93       	push	r28
     706:	df 93       	push	r29
     708:	ec 01       	movw	r28, r24
     70a:	0e 94 70 03 	call	0x6e0	; 0x6e0 <whileBarcode>
     70e:	be 01       	movw	r22, r28
     710:	84 e5       	ldi	r24, 0x54	; 84
     712:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <parcours>
     716:	be 01       	movw	r22, r28
     718:	80 e0       	ldi	r24, 0x00	; 0
     71a:	0e 94 c3 0a 	call	0x1586	; 0x1586 <warehouse>
     71e:	be 01       	movw	r22, r28
     720:	82 e4       	ldi	r24, 0x42	; 66
     722:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <parcours>
     726:	0e 94 79 03 	call	0x6f2	; 0x6f2 <whileLineEnd>
     72a:	8c e4       	ldi	r24, 0x4C	; 76
     72c:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
     730:	df 91       	pop	r29
     732:	cf 91       	pop	r28
     734:	08 95       	ret

00000736 <main>:
     736:	cf 93       	push	r28
     738:	df 93       	push	r29
     73a:	cd b7       	in	r28, 0x3d	; 61
     73c:	de b7       	in	r29, 0x3e	; 62
     73e:	c3 57       	subi	r28, 0x73	; 115
     740:	d1 09       	sbc	r29, r1
     742:	0f b6       	in	r0, 0x3f	; 63
     744:	f8 94       	cli
     746:	de bf       	out	0x3e, r29	; 62
     748:	0f be       	out	0x3f, r0	; 63
     74a:	cd bf       	out	0x3d, r28	; 61
     74c:	8a e7       	ldi	r24, 0x7A	; 122
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	0e 94 26 12 	call	0x244c	; 0x244c <play_from_program_space>
     754:	ce 01       	movw	r24, r28
     756:	01 96       	adiw	r24, 0x01	; 1
     758:	0e 94 c1 02 	call	0x582	; 0x582 <Communications_INIT>
     75c:	ce 01       	movw	r24, r28
     75e:	01 96       	adiw	r24, 0x01	; 1
     760:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <initialize>
     764:	e4 96       	adiw	r28, 0x34	; 52
     766:	ee ad       	ldd	r30, Y+62	; 0x3e
     768:	ff ad       	ldd	r31, Y+63	; 0x3f
     76a:	e4 97       	sbiw	r28, 0x34	; 52
     76c:	ce 01       	movw	r24, r28
     76e:	01 96       	adiw	r24, 0x01	; 1
     770:	09 95       	icall
     772:	8f ef       	ldi	r24, 0xFF	; 255
     774:	e0 96       	adiw	r28, 0x30	; 48
     776:	8f af       	std	Y+63, r24	; 0x3f
     778:	e0 97       	sbiw	r28, 0x30	; 48
     77a:	e1 96       	adiw	r28, 0x31	; 49
     77c:	8f af       	std	Y+63, r24	; 0x3f
     77e:	e1 97       	sbiw	r28, 0x31	; 49
     780:	60 e0       	ldi	r22, 0x00	; 0
     782:	80 e0       	ldi	r24, 0x00	; 0
     784:	0e 94 b9 13 	call	0x2772	; 0x2772 <lcd_goto_xy>
     788:	ad 96       	adiw	r28, 0x2d	; 45
     78a:	6f ad       	ldd	r22, Y+63	; 0x3f
     78c:	ad 97       	sbiw	r28, 0x2d	; 45
     78e:	70 e0       	ldi	r23, 0x00	; 0
     790:	80 e0       	ldi	r24, 0x00	; 0
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	0e 94 96 13 	call	0x272c	; 0x272c <print_long>
     798:	ad 96       	adiw	r28, 0x2d	; 45
     79a:	8f ad       	ldd	r24, Y+63	; 0x3f
     79c:	ad 97       	sbiw	r28, 0x2d	; 45
     79e:	82 30       	cpi	r24, 0x02	; 2
     7a0:	11 f1       	breq	.+68     	; 0x7e6 <main+0xb0>
     7a2:	18 f0       	brcs	.+6      	; 0x7aa <main+0x74>
     7a4:	83 30       	cpi	r24, 0x03	; 3
     7a6:	11 f1       	breq	.+68     	; 0x7ec <main+0xb6>
     7a8:	dd cf       	rjmp	.-70     	; 0x764 <main+0x2e>
     7aa:	e2 96       	adiw	r28, 0x32	; 50
     7ac:	8f ad       	ldd	r24, Y+63	; 0x3f
     7ae:	e2 97       	sbiw	r28, 0x32	; 50
     7b0:	81 30       	cpi	r24, 0x01	; 1
     7b2:	c1 f6       	brne	.-80     	; 0x764 <main+0x2e>
     7b4:	e2 96       	adiw	r28, 0x32	; 50
     7b6:	1f ae       	std	Y+63, r1	; 0x3f
     7b8:	e2 97       	sbiw	r28, 0x32	; 50
     7ba:	8a e7       	ldi	r24, 0x7A	; 122
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	0e 94 26 12 	call	0x244c	; 0x244c <play_from_program_space>
     7c2:	e0 96       	adiw	r28, 0x30	; 48
     7c4:	1f ae       	std	Y+63, r1	; 0x3f
     7c6:	e0 97       	sbiw	r28, 0x30	; 48
     7c8:	e1 96       	adiw	r28, 0x31	; 49
     7ca:	1f ae       	std	Y+63, r1	; 0x3f
     7cc:	e1 97       	sbiw	r28, 0x31	; 49
     7ce:	ce 01       	movw	r24, r28
     7d0:	01 96       	adiw	r24, 0x01	; 1
     7d2:	0e 94 82 03 	call	0x704	; 0x704 <pickOrder>
     7d6:	8f ef       	ldi	r24, 0xFF	; 255
     7d8:	e0 96       	adiw	r28, 0x30	; 48
     7da:	8f af       	std	Y+63, r24	; 0x3f
     7dc:	e0 97       	sbiw	r28, 0x30	; 48
     7de:	e1 96       	adiw	r28, 0x31	; 49
     7e0:	8f af       	std	Y+63, r24	; 0x3f
     7e2:	e1 97       	sbiw	r28, 0x31	; 49
     7e4:	bf cf       	rjmp	.-130    	; 0x764 <main+0x2e>
     7e6:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <Spin>
     7ea:	bc cf       	rjmp	.-136    	; 0x764 <main+0x2e>
     7ec:	0e 94 b1 06 	call	0xd62	; 0xd62 <manualControl>
     7f0:	b9 cf       	rjmp	.-142    	; 0x764 <main+0x2e>

000007f2 <initialize>:
void inch(){
	set_motors(50,50);
	delay(200);
	set_motors(0,0);
}
void println(int x){
     7f2:	cf 93       	push	r28
     7f4:	df 93       	push	r29
     7f6:	90 93 11 02 	sts	0x0211, r25	; 0x800211 <myComs+0x1>
     7fa:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <myComs>
     7fe:	80 ed       	ldi	r24, 0xD0	; 208
     800:	97 e0       	ldi	r25, 0x07	; 7
     802:	0e 94 0d 17 	call	0x2e1a	; 0x2e1a <pololu_3pi_init>
     806:	0d c0       	rjmp	.+26     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
     808:	0e 94 32 13 	call	0x2664	; 0x2664 <clear>
     80c:	60 e0       	ldi	r22, 0x00	; 0
     80e:	80 e0       	ldi	r24, 0x00	; 0
     810:	0e 94 b9 13 	call	0x2772	; 0x2772 <lcd_goto_xy>
     814:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <read_battery_millivolts_3pi>
     818:	bc 01       	movw	r22, r24
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	0e 94 96 13 	call	0x272c	; 0x272c <print_long>
     822:	80 e1       	ldi	r24, 0x10	; 16
     824:	0e 94 b2 14 	call	0x2964	; 0x2964 <button_is_pressed>
     828:	88 23       	and	r24, r24
     82a:	71 f3       	breq	.-36     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     82c:	80 e1       	ldi	r24, 0x10	; 16
     82e:	0e 94 9e 14 	call	0x293c	; 0x293c <wait_for_button_release>
     832:	88 ee       	ldi	r24, 0xE8	; 232
     834:	93 e0       	ldi	r25, 0x03	; 3
     836:	0e 94 78 16 	call	0x2cf0	; 0x2cf0 <delay_ms>
     83a:	c0 e0       	ldi	r28, 0x00	; 0
     83c:	d0 e0       	ldi	r29, 0x00	; 0
     83e:	19 c0       	rjmp	.+50     	; 0x872 <__DATA_REGION_LENGTH__+0x72>
     840:	ce 01       	movw	r24, r28
     842:	44 97       	sbiw	r24, 0x14	; 20
     844:	88 97       	sbiw	r24, 0x28	; 40
     846:	38 f0       	brcs	.+14     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
     848:	68 ed       	ldi	r22, 0xD8	; 216
     84a:	7f ef       	ldi	r23, 0xFF	; 255
     84c:	88 e2       	ldi	r24, 0x28	; 40
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
     854:	06 c0       	rjmp	.+12     	; 0x862 <__DATA_REGION_LENGTH__+0x62>
     856:	68 e2       	ldi	r22, 0x28	; 40
     858:	70 e0       	ldi	r23, 0x00	; 0
     85a:	88 ed       	ldi	r24, 0xD8	; 216
     85c:	9f ef       	ldi	r25, 0xFF	; 255
     85e:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
     862:	81 e0       	ldi	r24, 0x01	; 1
     864:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <calibrate_line_sensors>
     868:	84 e1       	ldi	r24, 0x14	; 20
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	0e 94 78 16 	call	0x2cf0	; 0x2cf0 <delay_ms>
     870:	21 96       	adiw	r28, 0x01	; 1
     872:	c0 35       	cpi	r28, 0x50	; 80
     874:	d1 05       	cpc	r29, r1
     876:	20 f3       	brcs	.-56     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
     878:	60 e0       	ldi	r22, 0x00	; 0
     87a:	70 e0       	ldi	r23, 0x00	; 0
     87c:	80 e0       	ldi	r24, 0x00	; 0
     87e:	90 e0       	ldi	r25, 0x00	; 0
     880:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
     884:	80 e1       	ldi	r24, 0x10	; 16
     886:	0e 94 b2 14 	call	0x2964	; 0x2964 <button_is_pressed>
     88a:	88 23       	and	r24, r24
     88c:	d9 f3       	breq	.-10     	; 0x884 <__DATA_REGION_LENGTH__+0x84>
     88e:	80 e1       	ldi	r24, 0x10	; 16
     890:	0e 94 9e 14 	call	0x293c	; 0x293c <wait_for_button_release>
     894:	0e 94 32 13 	call	0x2664	; 0x2664 <clear>
     898:	df 91       	pop	r29
     89a:	cf 91       	pop	r28
     89c:	08 95       	ret

0000089e <inch>:
     89e:	62 e3       	ldi	r22, 0x32	; 50
     8a0:	70 e0       	ldi	r23, 0x00	; 0
     8a2:	82 e3       	ldi	r24, 0x32	; 50
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
     8aa:	88 ec       	ldi	r24, 0xC8	; 200
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	0e 94 78 16 	call	0x2cf0	; 0x2cf0 <delay_ms>
     8b2:	60 e0       	ldi	r22, 0x00	; 0
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	80 e0       	ldi	r24, 0x00	; 0
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
     8be:	08 95       	ret

000008c0 <wait>:
	lcd_goto_xy(0,0);
	print_long(x);	*/
}

void wait(){
	set_motors(0,0);
     8c0:	60 e0       	ldi	r22, 0x00	; 0
     8c2:	70 e0       	ldi	r23, 0x00	; 0
     8c4:	80 e0       	ldi	r24, 0x00	; 0
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
						
	while(!button_is_pressed(BUTTON_B)){}
     8cc:	80 e1       	ldi	r24, 0x10	; 16
     8ce:	0e 94 b2 14 	call	0x2964	; 0x2964 <button_is_pressed>
     8d2:	88 23       	and	r24, r24
     8d4:	d9 f3       	breq	.-10     	; 0x8cc <wait+0xc>
	wait_for_button_release(BUTTON_B);
     8d6:	80 e1       	ldi	r24, 0x10	; 16
     8d8:	0e 94 9e 14 	call	0x293c	; 0x293c <wait_for_button_release>
     8dc:	08 95       	ret

000008de <lineType>:
}

char lineType(){																																	// function that returns the type of junction it detects
	while(1){																																		// >= 500 = black line		<=500 = white
		read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     8de:	61 e0       	ldi	r22, 0x01	; 1
     8e0:	89 e1       	ldi	r24, 0x19	; 25
     8e2:	92 e0       	ldi	r25, 0x02	; 2
     8e4:	0e 94 d0 16 	call	0x2da0	; 0x2da0 <read_line_sensors_calibrated>

			if (sensors[0] >= Refrence_value && sensors[4] >= Refrence_value){																									//Checks if its a X junction or a T junction
     8e8:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors>
     8ec:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x1>
     8f0:	80 39       	cpi	r24, 0x90	; 144
     8f2:	21 e0       	ldi	r18, 0x01	; 1
     8f4:	92 07       	cpc	r25, r18
     8f6:	08 f4       	brcc	.+2      	; 0x8fa <lineType+0x1c>
     8f8:	67 c0       	rjmp	.+206    	; 0x9c8 <__stack+0xc9>
     8fa:	20 91 21 02 	lds	r18, 0x0221	; 0x800221 <sensors+0x8>
     8fe:	30 91 22 02 	lds	r19, 0x0222	; 0x800222 <sensors+0x9>
     902:	20 39       	cpi	r18, 0x90	; 144
     904:	31 40       	sbci	r19, 0x01	; 1
     906:	08 f4       	brcc	.+2      	; 0x90a <__stack+0xb>
     908:	5f c0       	rjmp	.+190    	; 0x9c8 <__stack+0xc9>
					inch();
     90a:	0e 94 4f 04 	call	0x89e	; 0x89e <inch>
					read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     90e:	61 e0       	ldi	r22, 0x01	; 1
     910:	89 e1       	ldi	r24, 0x19	; 25
     912:	92 e0       	ldi	r25, 0x02	; 2
     914:	0e 94 d0 16 	call	0x2da0	; 0x2da0 <read_line_sensors_calibrated>
					if (sensors[0] >=Refrence_value && sensors[1] >=Refrence_value && sensors[3] >= Refrence_value && sensors[4] >=Refrence_value){
     918:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors>
     91c:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x1>
     920:	80 39       	cpi	r24, 0x90	; 144
     922:	91 40       	sbci	r25, 0x01	; 1
     924:	b8 f1       	brcs	.+110    	; 0x994 <__stack+0x95>
     926:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <sensors+0x2>
     92a:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <sensors+0x3>
     92e:	80 39       	cpi	r24, 0x90	; 144
     930:	91 40       	sbci	r25, 0x01	; 1
     932:	80 f1       	brcs	.+96     	; 0x994 <__stack+0x95>
     934:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <sensors+0x6>
     938:	90 91 20 02 	lds	r25, 0x0220	; 0x800220 <sensors+0x7>
     93c:	80 39       	cpi	r24, 0x90	; 144
     93e:	91 40       	sbci	r25, 0x01	; 1
     940:	48 f1       	brcs	.+82     	; 0x994 <__stack+0x95>
     942:	80 91 21 02 	lds	r24, 0x0221	; 0x800221 <sensors+0x8>
     946:	90 91 22 02 	lds	r25, 0x0222	; 0x800222 <sensors+0x9>
     94a:	80 39       	cpi	r24, 0x90	; 144
     94c:	91 40       	sbci	r25, 0x01	; 1
     94e:	10 f1       	brcs	.+68     	; 0x994 <__stack+0x95>
						clear();
     950:	0e 94 32 13 	call	0x2664	; 0x2664 <clear>
						while(sensors[0] >= 400 || sensors[4] >=400)
     954:	0b c0       	rjmp	.+22     	; 0x96c <__stack+0x6d>
						{
							read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     956:	61 e0       	ldi	r22, 0x01	; 1
     958:	89 e1       	ldi	r24, 0x19	; 25
     95a:	92 e0       	ldi	r25, 0x02	; 2
     95c:	0e 94 d0 16 	call	0x2da0	; 0x2da0 <read_line_sensors_calibrated>
							set_motors(75,75);
     960:	6b e4       	ldi	r22, 0x4B	; 75
     962:	70 e0       	ldi	r23, 0x00	; 0
     964:	8b e4       	ldi	r24, 0x4B	; 75
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
			if (sensors[0] >= Refrence_value && sensors[4] >= Refrence_value){																									//Checks if its a X junction or a T junction
					inch();
					read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
					if (sensors[0] >=Refrence_value && sensors[1] >=Refrence_value && sensors[3] >= Refrence_value && sensors[4] >=Refrence_value){
						clear();
						while(sensors[0] >= 400 || sensors[4] >=400)
     96c:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <sensors>
     970:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <sensors+0x1>
     974:	80 39       	cpi	r24, 0x90	; 144
     976:	91 40       	sbci	r25, 0x01	; 1
     978:	70 f7       	brcc	.-36     	; 0x956 <__stack+0x57>
     97a:	80 91 21 02 	lds	r24, 0x0221	; 0x800221 <sensors+0x8>
     97e:	90 91 22 02 	lds	r25, 0x0222	; 0x800222 <sensors+0x9>
     982:	80 39       	cpi	r24, 0x90	; 144
     984:	91 40       	sbci	r25, 0x01	; 1
     986:	38 f7       	brcc	.-50     	; 0x956 <__stack+0x57>
						{
							read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
							set_motors(75,75);
						}
						inch();
     988:	0e 94 4f 04 	call	0x89e	; 0x89e <inch>
						wait();
     98c:	0e 94 60 04 	call	0x8c0	; 0x8c0 <wait>
						return Barcode;
     990:	82 e0       	ldi	r24, 0x02	; 2
     992:	08 95       	ret
					}
					else if (sensors[2] >=Refrence_value || (sensors[1] >= Refrence_value || sensors[3] >= Refrence_value)){
     994:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sensors+0x4>
     998:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sensors+0x5>
     99c:	80 39       	cpi	r24, 0x90	; 144
     99e:	91 40       	sbci	r25, 0x01	; 1
     9a0:	08 f0       	brcs	.+2      	; 0x9a4 <__stack+0xa5>
     9a2:	79 c0       	rjmp	.+242    	; 0xa96 <__stack+0x197>
     9a4:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <sensors+0x2>
     9a8:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <sensors+0x3>
     9ac:	80 39       	cpi	r24, 0x90	; 144
     9ae:	91 40       	sbci	r25, 0x01	; 1
     9b0:	08 f0       	brcs	.+2      	; 0x9b4 <__stack+0xb5>
     9b2:	73 c0       	rjmp	.+230    	; 0xa9a <__stack+0x19b>
     9b4:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <sensors+0x6>
     9b8:	90 91 20 02 	lds	r25, 0x0220	; 0x800220 <sensors+0x7>
     9bc:	80 39       	cpi	r24, 0x90	; 144
     9be:	91 40       	sbci	r25, 0x01	; 1
     9c0:	08 f4       	brcc	.+2      	; 0x9c4 <__stack+0xc5>
     9c2:	6d c0       	rjmp	.+218    	; 0xa9e <__stack+0x19f>
						println(X_junction);
						return X_junction;
     9c4:	88 e0       	ldi	r24, 0x08	; 8
     9c6:	08 95       	ret
						println(T_junction);
						return T_junction;
					}
				}
							
		else if (sensors[0] >=Refrence_value && sensors[1] >= Refrence_value && sensors[4] <= Refrence_value ){																							//Checks if its a left corner or a straight with left corner
     9c8:	80 39       	cpi	r24, 0x90	; 144
     9ca:	61 e0       	ldi	r22, 0x01	; 1
     9cc:	96 07       	cpc	r25, r22
     9ce:	38 f1       	brcs	.+78     	; 0xa1e <__stack+0x11f>
     9d0:	20 91 1b 02 	lds	r18, 0x021B	; 0x80021b <sensors+0x2>
     9d4:	30 91 1c 02 	lds	r19, 0x021C	; 0x80021c <sensors+0x3>
     9d8:	20 39       	cpi	r18, 0x90	; 144
     9da:	31 40       	sbci	r19, 0x01	; 1
     9dc:	00 f1       	brcs	.+64     	; 0xa1e <__stack+0x11f>
     9de:	20 91 21 02 	lds	r18, 0x0221	; 0x800221 <sensors+0x8>
     9e2:	30 91 22 02 	lds	r19, 0x0222	; 0x800222 <sensors+0x9>
     9e6:	21 39       	cpi	r18, 0x91	; 145
     9e8:	31 40       	sbci	r19, 0x01	; 1
     9ea:	c8 f4       	brcc	.+50     	; 0xa1e <__stack+0x11f>
			inch();
     9ec:	0e 94 4f 04 	call	0x89e	; 0x89e <inch>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     9f0:	61 e0       	ldi	r22, 0x01	; 1
     9f2:	89 e1       	ldi	r24, 0x19	; 25
     9f4:	92 e0       	ldi	r25, 0x02	; 2
     9f6:	0e 94 d0 16 	call	0x2da0	; 0x2da0 <read_line_sensors_calibrated>
			
			if (sensors[2] >= Refrence_value || sensors[3] >=Refrence_value){
     9fa:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sensors+0x4>
     9fe:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sensors+0x5>
     a02:	80 39       	cpi	r24, 0x90	; 144
     a04:	91 40       	sbci	r25, 0x01	; 1
     a06:	08 f0       	brcs	.+2      	; 0xa0a <__stack+0x10b>
     a08:	4c c0       	rjmp	.+152    	; 0xaa2 <__stack+0x1a3>
     a0a:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <sensors+0x6>
     a0e:	90 91 20 02 	lds	r25, 0x0220	; 0x800220 <sensors+0x7>
     a12:	80 39       	cpi	r24, 0x90	; 144
     a14:	91 40       	sbci	r25, 0x01	; 1
     a16:	08 f4       	brcc	.+2      	; 0xa1a <__stack+0x11b>
     a18:	46 c0       	rjmp	.+140    	; 0xaa6 <__stack+0x1a7>
				println(Straight_left_junction);
				return Straight_left_junction;
     a1a:	86 e0       	ldi	r24, 0x06	; 6
     a1c:	08 95       	ret
				return Left_corner;
			}
		}
		
		
		else if (sensors[3] >=Refrence_value && sensors[4] >= Refrence_value && sensors[0] <= Refrence_value){																							//Checks if its a right corner or a straight with right corner
     a1e:	20 91 1f 02 	lds	r18, 0x021F	; 0x80021f <sensors+0x6>
     a22:	30 91 20 02 	lds	r19, 0x0220	; 0x800220 <sensors+0x7>
     a26:	20 39       	cpi	r18, 0x90	; 144
     a28:	61 e0       	ldi	r22, 0x01	; 1
     a2a:	36 07       	cpc	r19, r22
     a2c:	08 f1       	brcs	.+66     	; 0xa70 <__stack+0x171>
     a2e:	40 91 21 02 	lds	r20, 0x0221	; 0x800221 <sensors+0x8>
     a32:	50 91 22 02 	lds	r21, 0x0222	; 0x800222 <sensors+0x9>
     a36:	40 39       	cpi	r20, 0x90	; 144
     a38:	51 40       	sbci	r21, 0x01	; 1
     a3a:	d0 f0       	brcs	.+52     	; 0xa70 <__stack+0x171>
     a3c:	81 39       	cpi	r24, 0x91	; 145
     a3e:	91 40       	sbci	r25, 0x01	; 1
     a40:	b8 f4       	brcc	.+46     	; 0xa70 <__stack+0x171>
			inch();
     a42:	0e 94 4f 04 	call	0x89e	; 0x89e <inch>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     a46:	61 e0       	ldi	r22, 0x01	; 1
     a48:	89 e1       	ldi	r24, 0x19	; 25
     a4a:	92 e0       	ldi	r25, 0x02	; 2
     a4c:	0e 94 d0 16 	call	0x2da0	; 0x2da0 <read_line_sensors_calibrated>
			
			if (sensors[2] >= Refrence_value || sensors[1] >=Refrence_value){
     a50:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sensors+0x4>
     a54:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sensors+0x5>
     a58:	80 39       	cpi	r24, 0x90	; 144
     a5a:	91 40       	sbci	r25, 0x01	; 1
     a5c:	30 f5       	brcc	.+76     	; 0xaaa <__stack+0x1ab>
     a5e:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <sensors+0x2>
     a62:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <sensors+0x3>
     a66:	80 39       	cpi	r24, 0x90	; 144
     a68:	91 40       	sbci	r25, 0x01	; 1
     a6a:	08 f1       	brcs	.+66     	; 0xaae <__stack+0x1af>
				println(Straight_right_junction);
				return Straight_right_junction;
     a6c:	85 e0       	ldi	r24, 0x05	; 5
     a6e:	08 95       	ret
				println(Straight_left_junction);
				return Right_corner;
			}
		}
		
				else if(sensors[2] <= End_Line_Value && sensors[1] <=End_Line_Value && sensors[3] <=End_Line_Value){
     a70:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sensors+0x4>
     a74:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sensors+0x5>
     a78:	89 3c       	cpi	r24, 0xC9	; 201
     a7a:	91 05       	cpc	r25, r1
     a7c:	d0 f4       	brcc	.+52     	; 0xab2 <__stack+0x1b3>
     a7e:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <sensors+0x2>
     a82:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <sensors+0x3>
     a86:	89 3c       	cpi	r24, 0xC9	; 201
     a88:	91 05       	cpc	r25, r1
     a8a:	a8 f4       	brcc	.+42     	; 0xab6 <__stack+0x1b7>
     a8c:	29 3c       	cpi	r18, 0xC9	; 201
     a8e:	31 05       	cpc	r19, r1
     a90:	a0 f0       	brcs	.+40     	; 0xaba <__stack+0x1bb>
			}
			else{
				println(Straight);
				return Straight;
			}				*/																					// check if its straight without any corners
			return Straight;
     a92:	80 e0       	ldi	r24, 0x00	; 0
     a94:	08 95       	ret
						wait();
						return Barcode;
					}
					else if (sensors[2] >=Refrence_value || (sensors[1] >= Refrence_value || sensors[3] >= Refrence_value)){
						println(X_junction);
						return X_junction;
     a96:	88 e0       	ldi	r24, 0x08	; 8
     a98:	08 95       	ret
     a9a:	88 e0       	ldi	r24, 0x08	; 8
     a9c:	08 95       	ret
					}
					else {
						println(T_junction);
						return T_junction;
     a9e:	87 e0       	ldi	r24, 0x07	; 7
     aa0:	08 95       	ret
			inch();
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= Refrence_value || sensors[3] >=Refrence_value){
				println(Straight_left_junction);
				return Straight_left_junction;
     aa2:	86 e0       	ldi	r24, 0x06	; 6
     aa4:	08 95       	ret
			}
			else{
				println(Left_corner);
				return Left_corner;
     aa6:	83 e0       	ldi	r24, 0x03	; 3
     aa8:	08 95       	ret
			inch();
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
			
			if (sensors[2] >= Refrence_value || sensors[1] >=Refrence_value){
				println(Straight_right_junction);
				return Straight_right_junction;
     aaa:	85 e0       	ldi	r24, 0x05	; 5
     aac:	08 95       	ret
			}
			else{
				println(Straight_left_junction);
				return Right_corner;
     aae:	84 e0       	ldi	r24, 0x04	; 4
     ab0:	08 95       	ret
			}
			else{
				println(Straight);
				return Straight;
			}				*/																					// check if its straight without any corners
			return Straight;
     ab2:	80 e0       	ldi	r24, 0x00	; 0
     ab4:	08 95       	ret
     ab6:	80 e0       	ldi	r24, 0x00	; 0
     ab8:	08 95       	ret
			}
		}
		
				else if(sensors[2] <= End_Line_Value && sensors[1] <=End_Line_Value && sensors[3] <=End_Line_Value){
					println(Line_end);																													// check if the line ends
					return Line_end;
     aba:	81 e0       	ldi	r24, 0x01	; 1
			return Straight;
		}
		
	
	}
}
     abc:	08 95       	ret

00000abe <motorControl>:

void motorControl(char x){													// function that controlls the motor movement and the turns
     abe:	8f 92       	push	r8
     ac0:	9f 92       	push	r9
     ac2:	af 92       	push	r10
     ac4:	bf 92       	push	r11
     ac6:	cf 92       	push	r12
     ac8:	df 92       	push	r13
     aca:	ef 92       	push	r14
     acc:	ff 92       	push	r15
     ace:	0f 93       	push	r16
     ad0:	1f 93       	push	r17
     ad2:	cf 93       	push	r28
     ad4:	df 93       	push	r29
     ad6:	c8 2f       	mov	r28, r24

		


	myComs->Update(myComs);
     ad8:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <myComs>
     adc:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <myComs+0x1>
     ae0:	fc 01       	movw	r30, r24
     ae2:	ef 58       	subi	r30, 0x8F	; 143
     ae4:	ff 4f       	sbci	r31, 0xFF	; 255
     ae6:	01 90       	ld	r0, Z+
     ae8:	f0 81       	ld	r31, Z
     aea:	e0 2d       	mov	r30, r0
     aec:	09 95       	icall
	unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     aee:	61 e0       	ldi	r22, 0x01	; 1
     af0:	89 e1       	ldi	r24, 0x19	; 25
     af2:	92 e0       	ldi	r25, 0x02	; 2
     af4:	0e 94 d7 16 	call	0x2dae	; 0x2dae <read_line>
     af8:	8c 01       	movw	r16, r24
	read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     afa:	61 e0       	ldi	r22, 0x01	; 1
     afc:	89 e1       	ldi	r24, 0x19	; 25
     afe:	92 e0       	ldi	r25, 0x02	; 2
     b00:	0e 94 d0 16 	call	0x2da0	; 0x2da0 <read_line_sensors_calibrated>

	while (analog_read(5) <= 200) {
     b04:	06 c0       	rjmp	.+12     	; 0xb12 <motorControl+0x54>
		set_motors(0, 0);
     b06:	60 e0       	ldi	r22, 0x00	; 0
     b08:	70 e0       	ldi	r23, 0x00	; 0
     b0a:	80 e0       	ldi	r24, 0x00	; 0
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>

	myComs->Update(myComs);
	unsigned int position = read_line(sensors,IR_EMITTERS_ON);
	read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);

	while (analog_read(5) <= 200) {
     b12:	85 e0       	ldi	r24, 0x05	; 5
     b14:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <analog_read>
     b18:	89 3c       	cpi	r24, 0xC9	; 201
     b1a:	91 05       	cpc	r25, r1
     b1c:	a0 f3       	brcs	.-24     	; 0xb06 <motorControl+0x48>
		set_motors(0, 0);
	}
	
	if(myComs->EmergencyStop == 1)		{													//Emergency Brake
     b1e:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <myComs>
     b22:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <myComs+0x1>
     b26:	e5 59       	subi	r30, 0x95	; 149
     b28:	ff 4f       	sbci	r31, 0xFF	; 255
     b2a:	80 81       	ld	r24, Z
     b2c:	81 30       	cpi	r24, 0x01	; 1
     b2e:	39 f4       	brne	.+14     	; 0xb3e <motorControl+0x80>
		set_motors(0,0);
     b30:	60 e0       	ldi	r22, 0x00	; 0
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	80 e0       	ldi	r24, 0x00	; 0
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
     b3c:	05 c1       	rjmp	.+522    	; 0xd48 <motorControl+0x28a>
	}else if(x == 'L'){														//Turn Left
     b3e:	cc 34       	cpi	r28, 0x4C	; 76
     b40:	39 f5       	brne	.+78     	; 0xb90 <motorControl+0xd2>
		set_motors(-turn_value,turn_value);
     b42:	6c e3       	ldi	r22, 0x3C	; 60
     b44:	70 e0       	ldi	r23, 0x00	; 0
     b46:	84 ec       	ldi	r24, 0xC4	; 196
     b48:	9f ef       	ldi	r25, 0xFF	; 255
     b4a:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
		
		while (sensors[2] >=Refrence_value)
     b4e:	05 c0       	rjmp	.+10     	; 0xb5a <motorControl+0x9c>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     b50:	61 e0       	ldi	r22, 0x01	; 1
     b52:	89 e1       	ldi	r24, 0x19	; 25
     b54:	92 e0       	ldi	r25, 0x02	; 2
     b56:	0e 94 d0 16 	call	0x2da0	; 0x2da0 <read_line_sensors_calibrated>
	if(myComs->EmergencyStop == 1)		{													//Emergency Brake
		set_motors(0,0);
	}else if(x == 'L'){														//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] >=Refrence_value)
     b5a:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sensors+0x4>
     b5e:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sensors+0x5>
     b62:	80 39       	cpi	r24, 0x90	; 144
     b64:	91 40       	sbci	r25, 0x01	; 1
     b66:	a0 f7       	brcc	.-24     	; 0xb50 <motorControl+0x92>
     b68:	05 c0       	rjmp	.+10     	; 0xb74 <motorControl+0xb6>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     b6a:	61 e0       	ldi	r22, 0x01	; 1
     b6c:	89 e1       	ldi	r24, 0x19	; 25
     b6e:	92 e0       	ldi	r25, 0x02	; 2
     b70:	0e 94 d0 16 	call	0x2da0	; 0x2da0 <read_line_sensors_calibrated>
	}else if(x == 'L'){														//Turn Left
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] >=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
     b74:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sensors+0x4>
     b78:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sensors+0x5>
     b7c:	81 39       	cpi	r24, 0x91	; 145
     b7e:	91 40       	sbci	r25, 0x01	; 1
     b80:	a0 f3       	brcs	.-24     	; 0xb6a <motorControl+0xac>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		set_motors(0,0);
     b82:	60 e0       	ldi	r22, 0x00	; 0
     b84:	70 e0       	ldi	r23, 0x00	; 0
     b86:	80 e0       	ldi	r24, 0x00	; 0
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
     b8e:	dc c0       	rjmp	.+440    	; 0xd48 <motorControl+0x28a>
	}
	
	
	else if(x == 'R'){														//Turn Right
     b90:	c2 35       	cpi	r28, 0x52	; 82
     b92:	39 f5       	brne	.+78     	; 0xbe2 <motorControl+0x124>
		set_motors(turn_value,-turn_value);
     b94:	64 ec       	ldi	r22, 0xC4	; 196
     b96:	7f ef       	ldi	r23, 0xFF	; 255
     b98:	8c e3       	ldi	r24, 0x3C	; 60
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
		
		while (sensors[2] >=Refrence_value)
     ba0:	05 c0       	rjmp	.+10     	; 0xbac <motorControl+0xee>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     ba2:	61 e0       	ldi	r22, 0x01	; 1
     ba4:	89 e1       	ldi	r24, 0x19	; 25
     ba6:	92 e0       	ldi	r25, 0x02	; 2
     ba8:	0e 94 d0 16 	call	0x2da0	; 0x2da0 <read_line_sensors_calibrated>
	
	
	else if(x == 'R'){														//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] >=Refrence_value)
     bac:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sensors+0x4>
     bb0:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sensors+0x5>
     bb4:	80 39       	cpi	r24, 0x90	; 144
     bb6:	91 40       	sbci	r25, 0x01	; 1
     bb8:	a0 f7       	brcc	.-24     	; 0xba2 <motorControl+0xe4>
     bba:	05 c0       	rjmp	.+10     	; 0xbc6 <motorControl+0x108>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     bbc:	61 e0       	ldi	r22, 0x01	; 1
     bbe:	89 e1       	ldi	r24, 0x19	; 25
     bc0:	92 e0       	ldi	r25, 0x02	; 2
     bc2:	0e 94 d0 16 	call	0x2da0	; 0x2da0 <read_line_sensors_calibrated>
	else if(x == 'R'){														//Turn Right
		set_motors(turn_value,-turn_value);
		
		while (sensors[2] >=Refrence_value)
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		while (sensors[2] <=Refrence_value)
     bc6:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sensors+0x4>
     bca:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sensors+0x5>
     bce:	81 39       	cpi	r24, 0x91	; 145
     bd0:	91 40       	sbci	r25, 0x01	; 1
     bd2:	a0 f3       	brcs	.-24     	; 0xbbc <motorControl+0xfe>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
		set_motors(0,0);
     bd4:	60 e0       	ldi	r22, 0x00	; 0
     bd6:	70 e0       	ldi	r23, 0x00	; 0
     bd8:	80 e0       	ldi	r24, 0x00	; 0
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
     be0:	b3 c0       	rjmp	.+358    	; 0xd48 <motorControl+0x28a>
	}
		
			
	else if(x == 'S'){												//drive straight and adjusts the robot so it follows the line
     be2:	c3 35       	cpi	r28, 0x53	; 83
     be4:	09 f0       	breq	.+2      	; 0xbe8 <motorControl+0x12a>
     be6:	66 c0       	rjmp	.+204    	; 0xcb4 <motorControl+0x1f6>
		// are not interested in the individual sensor readings.
		// The "proportional" term should be 0 when we are on the line.
		int proportional = ((int)position) - 2000;
     be8:	c8 01       	movw	r24, r16
     bea:	80 5d       	subi	r24, 0xD0	; 208
     bec:	97 40       	sbci	r25, 0x07	; 7

		// Compute the derivative (change) and integral (sum) of the
		// position.
		int derivative = proportional - last_proportional;
     bee:	20 91 15 02 	lds	r18, 0x0215	; 0x800215 <last_proportional>
     bf2:	30 91 16 02 	lds	r19, 0x0216	; 0x800216 <last_proportional+0x1>
     bf6:	ec 01       	movw	r28, r24
     bf8:	c2 1b       	sub	r28, r18
     bfa:	d3 0b       	sbc	r29, r19
		integral = integral + proportional;
     bfc:	60 91 17 02 	lds	r22, 0x0217	; 0x800217 <integral>
     c00:	70 91 18 02 	lds	r23, 0x0218	; 0x800218 <integral+0x1>
     c04:	fc 01       	movw	r30, r24
     c06:	e6 0f       	add	r30, r22
     c08:	f7 1f       	adc	r31, r23
     c0a:	f0 93 18 02 	sts	0x0218, r31	; 0x800218 <integral+0x1>
     c0e:	e0 93 17 02 	sts	0x0217, r30	; 0x800217 <integral>

		// Remember the last position.
		 last_proportional = proportional;
     c12:	90 93 16 02 	sts	0x0216, r25	; 0x800216 <last_proportional+0x1>
     c16:	80 93 15 02 	sts	0x0215, r24	; 0x800215 <last_proportional>
 
 
		int power_difference = proportional/10 + integral/40000 + derivative*0.50;						// derivative == stuur snelheid
     c1a:	6a e0       	ldi	r22, 0x0A	; 10
     c1c:	70 e0       	ldi	r23, 0x00	; 0
     c1e:	0e 94 3d 1c 	call	0x387a	; 0x387a <__divmodhi4>
     c22:	6b 01       	movw	r12, r22
     c24:	bf 01       	movw	r22, r30
     c26:	ff 0f       	add	r31, r31
     c28:	88 0b       	sbc	r24, r24
     c2a:	99 0b       	sbc	r25, r25
     c2c:	20 e4       	ldi	r18, 0x40	; 64
     c2e:	3c e9       	ldi	r19, 0x9C	; 156
     c30:	40 e0       	ldi	r20, 0x00	; 0
     c32:	50 e0       	ldi	r21, 0x00	; 0
     c34:	0e 94 73 1c 	call	0x38e6	; 0x38e6 <__divmodsi4>
     c38:	0d 2c       	mov	r0, r13
     c3a:	00 0c       	add	r0, r0
     c3c:	ee 08       	sbc	r14, r14
     c3e:	ff 08       	sbc	r15, r15
     c40:	c2 0e       	add	r12, r18
     c42:	d3 1e       	adc	r13, r19
     c44:	e4 1e       	adc	r14, r20
     c46:	f5 1e       	adc	r15, r21
     c48:	be 01       	movw	r22, r28
     c4a:	dd 0f       	add	r29, r29
     c4c:	88 0b       	sbc	r24, r24
     c4e:	99 0b       	sbc	r25, r25
     c50:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     c54:	20 e0       	ldi	r18, 0x00	; 0
     c56:	30 e0       	ldi	r19, 0x00	; 0
     c58:	40 e0       	ldi	r20, 0x00	; 0
     c5a:	5f e3       	ldi	r21, 0x3F	; 63
     c5c:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <__mulsf3>
     c60:	4b 01       	movw	r8, r22
     c62:	5c 01       	movw	r10, r24
     c64:	c7 01       	movw	r24, r14
     c66:	b6 01       	movw	r22, r12
     c68:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
     c6c:	a5 01       	movw	r20, r10
     c6e:	94 01       	movw	r18, r8
     c70:	0e 94 20 0c 	call	0x1840	; 0x1840 <__addsf3>
     c74:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <__fixsfsi>
     c78:	cb 01       	movw	r24, r22

		// Compute the actual motor settings.  We never set either motor
		// to a negative value.
		const int max = 70;
		if(power_difference > max)
     c7a:	67 34       	cpi	r22, 0x47	; 71
     c7c:	71 05       	cpc	r23, r1
     c7e:	14 f0       	brlt	.+4      	; 0xc84 <motorControl+0x1c6>
			power_difference = max;
     c80:	86 e4       	ldi	r24, 0x46	; 70
     c82:	90 e0       	ldi	r25, 0x00	; 0
		if(power_difference < -max)
     c84:	8a 3b       	cpi	r24, 0xBA	; 186
     c86:	2f ef       	ldi	r18, 0xFF	; 255
     c88:	92 07       	cpc	r25, r18
     c8a:	14 f4       	brge	.+4      	; 0xc90 <motorControl+0x1d2>
			power_difference = -max;
     c8c:	8a eb       	ldi	r24, 0xBA	; 186
     c8e:	9f ef       	ldi	r25, 0xFF	; 255

		if(power_difference < 0)
     c90:	99 23       	and	r25, r25
     c92:	3c f4       	brge	.+14     	; 0xca2 <motorControl+0x1e4>
			set_motors(max+power_difference, max);
     c94:	66 e4       	ldi	r22, 0x46	; 70
     c96:	70 e0       	ldi	r23, 0x00	; 0
     c98:	8a 5b       	subi	r24, 0xBA	; 186
     c9a:	9f 4f       	sbci	r25, 0xFF	; 255
     c9c:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
     ca0:	53 c0       	rjmp	.+166    	; 0xd48 <motorControl+0x28a>
		else
			set_motors(max, max-power_difference);
     ca2:	66 e4       	ldi	r22, 0x46	; 70
     ca4:	70 e0       	ldi	r23, 0x00	; 0
     ca6:	68 1b       	sub	r22, r24
     ca8:	79 0b       	sbc	r23, r25
     caa:	86 e4       	ldi	r24, 0x46	; 70
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
     cb2:	4a c0       	rjmp	.+148    	; 0xd48 <motorControl+0x28a>
		
	}
	
	
	else if(x == 'B'){														//Reverse while following the line
     cb4:	c2 34       	cpi	r28, 0x42	; 66
     cb6:	09 f5       	brne	.+66     	; 0xcfa <motorControl+0x23c>
		set_motors(-50,-50);
     cb8:	6e ec       	ldi	r22, 0xCE	; 206
     cba:	7f ef       	ldi	r23, 0xFF	; 255
     cbc:	8e ec       	ldi	r24, 0xCE	; 206
     cbe:	9f ef       	ldi	r25, 0xFF	; 255
     cc0:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
		
		if (sensors[3] >=Refrence_value)
     cc4:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <sensors+0x6>
     cc8:	90 91 20 02 	lds	r25, 0x0220	; 0x800220 <sensors+0x7>
     ccc:	80 39       	cpi	r24, 0x90	; 144
     cce:	91 40       	sbci	r25, 0x01	; 1
     cd0:	30 f0       	brcs	.+12     	; 0xcde <motorControl+0x220>
			set_motors(-50,-55);
     cd2:	69 ec       	ldi	r22, 0xC9	; 201
     cd4:	7f ef       	ldi	r23, 0xFF	; 255
     cd6:	8e ec       	ldi	r24, 0xCE	; 206
     cd8:	9f ef       	ldi	r25, 0xFF	; 255
     cda:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
		if (sensors[1] >=Refrence_value)
     cde:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <sensors+0x2>
     ce2:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <sensors+0x3>
     ce6:	80 39       	cpi	r24, 0x90	; 144
     ce8:	91 40       	sbci	r25, 0x01	; 1
     cea:	70 f1       	brcs	.+92     	; 0xd48 <motorControl+0x28a>
			set_motors(-55,-50);
     cec:	6e ec       	ldi	r22, 0xCE	; 206
     cee:	7f ef       	ldi	r23, 0xFF	; 255
     cf0:	89 ec       	ldi	r24, 0xC9	; 201
     cf2:	9f ef       	ldi	r25, 0xFF	; 255
     cf4:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
     cf8:	27 c0       	rjmp	.+78     	; 0xd48 <motorControl+0x28a>
	}
	
	
	else if(x == 'T'){														// Turn around
     cfa:	c4 35       	cpi	r28, 0x54	; 84
     cfc:	a1 f4       	brne	.+40     	; 0xd26 <motorControl+0x268>
		set_motors(-turn_value,turn_value);
     cfe:	6c e3       	ldi	r22, 0x3C	; 60
     d00:	70 e0       	ldi	r23, 0x00	; 0
     d02:	84 ec       	ldi	r24, 0xC4	; 196
     d04:	9f ef       	ldi	r25, 0xFF	; 255
     d06:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
		
		while (sensors[2] <=Refrence_value)
     d0a:	05 c0       	rjmp	.+10     	; 0xd16 <motorControl+0x258>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
     d0c:	61 e0       	ldi	r22, 0x01	; 1
     d0e:	89 e1       	ldi	r24, 0x19	; 25
     d10:	92 e0       	ldi	r25, 0x02	; 2
     d12:	0e 94 d0 16 	call	0x2da0	; 0x2da0 <read_line_sensors_calibrated>
	
	
	else if(x == 'T'){														// Turn around
		set_motors(-turn_value,turn_value);
		
		while (sensors[2] <=Refrence_value)
     d16:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <sensors+0x4>
     d1a:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <sensors+0x5>
     d1e:	81 39       	cpi	r24, 0x91	; 145
     d20:	91 40       	sbci	r25, 0x01	; 1
     d22:	a0 f3       	brcs	.-24     	; 0xd0c <motorControl+0x24e>
     d24:	11 c0       	rjmp	.+34     	; 0xd48 <motorControl+0x28a>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'P')														//Robot stops on a slow pace
     d26:	c0 35       	cpi	r28, 0x50	; 80
     d28:	79 f4       	brne	.+30     	; 0xd48 <motorControl+0x28a>
     d2a:	0a c0       	rjmp	.+20     	; 0xd40 <motorControl+0x282>
		for( int i=50;i>=0;i-=3)
		{
			set_motors(i,i);
     d2c:	be 01       	movw	r22, r28
     d2e:	ce 01       	movw	r24, r28
     d30:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     d34:	84 e0       	ldi	r24, 0x04	; 4
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	0e 94 78 16 	call	0x2cf0	; 0x2cf0 <delay_ms>
			read_line_sensors_calibrated(sensors,IR_EMITTERS_ON);
	}
	
	
	else if(x == 'P')														//Robot stops on a slow pace
		for( int i=50;i>=0;i-=3)
     d3c:	23 97       	sbiw	r28, 0x03	; 3
     d3e:	02 c0       	rjmp	.+4      	; 0xd44 <motorControl+0x286>
     d40:	c2 e3       	ldi	r28, 0x32	; 50
     d42:	d0 e0       	ldi	r29, 0x00	; 0
     d44:	dd 23       	and	r29, r29
     d46:	94 f7       	brge	.-28     	; 0xd2c <motorControl+0x26e>
			set_motors(i,i);
			delay(4);
		}
		
		
}
     d48:	df 91       	pop	r29
     d4a:	cf 91       	pop	r28
     d4c:	1f 91       	pop	r17
     d4e:	0f 91       	pop	r16
     d50:	ff 90       	pop	r15
     d52:	ef 90       	pop	r14
     d54:	df 90       	pop	r13
     d56:	cf 90       	pop	r12
     d58:	bf 90       	pop	r11
     d5a:	af 90       	pop	r10
     d5c:	9f 90       	pop	r9
     d5e:	8f 90       	pop	r8
     d60:	08 95       	ret

00000d62 <manualControl>:
const char welcomet[] PROGMEM = ">g32>>c32";
void manualControl(){
static int speed = 0;
static unsigned int counter = 0;
	//play_from_program_space(welcomet);
	myComs->Update(myComs);
     d62:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <myComs>
     d66:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <myComs+0x1>
     d6a:	fc 01       	movw	r30, r24
     d6c:	ef 58       	subi	r30, 0x8F	; 143
     d6e:	ff 4f       	sbci	r31, 0xFF	; 255
     d70:	01 90       	ld	r0, Z+
     d72:	f0 81       	ld	r31, Z
     d74:	e0 2d       	mov	r30, r0
     d76:	09 95       	icall
	if(myComs->Direction[0] == 1){
     d78:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <myComs>
     d7c:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <myComs+0x1>
     d80:	85 a9       	ldd	r24, Z+53	; 0x35
     d82:	81 30       	cpi	r24, 0x01	; 1
     d84:	d9 f5       	brne	.+118    	; 0xdfc <manualControl+0x9a>
		set_motors(speed,speed);
     d86:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <speed.2263>
     d8a:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <speed.2263+0x1>
     d8e:	bc 01       	movw	r22, r24
     d90:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
		if(counter % 20 == 0)
     d94:	40 91 05 02 	lds	r20, 0x0205	; 0x800205 <counter.2264>
     d98:	50 91 06 02 	lds	r21, 0x0206	; 0x800206 <counter.2264+0x1>
     d9c:	9a 01       	movw	r18, r20
     d9e:	ad ec       	ldi	r26, 0xCD	; 205
     da0:	bc ec       	ldi	r27, 0xCC	; 204
     da2:	0e 94 98 1c 	call	0x3930	; 0x3930 <__umulhisi3>
     da6:	92 95       	swap	r25
     da8:	82 95       	swap	r24
     daa:	8f 70       	andi	r24, 0x0F	; 15
     dac:	89 27       	eor	r24, r25
     dae:	9f 70       	andi	r25, 0x0F	; 15
     db0:	89 27       	eor	r24, r25
     db2:	64 e1       	ldi	r22, 0x14	; 20
     db4:	68 9f       	mul	r22, r24
     db6:	90 01       	movw	r18, r0
     db8:	69 9f       	mul	r22, r25
     dba:	30 0d       	add	r19, r0
     dbc:	11 24       	eor	r1, r1
     dbe:	42 17       	cp	r20, r18
     dc0:	53 07       	cpc	r21, r19
     dc2:	49 f4       	brne	.+18     	; 0xdd6 <manualControl+0x74>
		{
			speed++;
     dc4:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <speed.2263>
     dc8:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <speed.2263+0x1>
     dcc:	01 96       	adiw	r24, 0x01	; 1
     dce:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <speed.2263+0x1>
     dd2:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <speed.2263>
		}
		if(speed > 25)
     dd6:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <speed.2263>
     dda:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <speed.2263+0x1>
     dde:	4a 97       	sbiw	r24, 0x1a	; 26
     de0:	34 f0       	brlt	.+12     	; 0xdee <manualControl+0x8c>
		{
			speed = 25;
     de2:	89 e1       	ldi	r24, 0x19	; 25
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <speed.2263+0x1>
     dea:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <speed.2263>
		}
		counter++;
     dee:	4f 5f       	subi	r20, 0xFF	; 255
     df0:	5f 4f       	sbci	r21, 0xFF	; 255
     df2:	50 93 06 02 	sts	0x0206, r21	; 0x800206 <counter.2264+0x1>
     df6:	40 93 05 02 	sts	0x0205, r20	; 0x800205 <counter.2264>
     dfa:	ba c0       	rjmp	.+372    	; 0xf70 <manualControl+0x20e>
	}
	else if(myComs->Direction[0] == 0 && myComs->Direction[2] == 0)
     dfc:	81 11       	cpse	r24, r1
     dfe:	3d c0       	rjmp	.+122    	; 0xe7a <manualControl+0x118>
     e00:	97 a9       	ldd	r25, Z+55	; 0x37
     e02:	91 11       	cpse	r25, r1
     e04:	3a c0       	rjmp	.+116    	; 0xe7a <manualControl+0x118>
	{
		set_motors(speed,speed);
     e06:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <speed.2263>
     e0a:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <speed.2263+0x1>
     e0e:	bc 01       	movw	r22, r24
     e10:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
		if(counter % 20 == 0)
     e14:	40 91 05 02 	lds	r20, 0x0205	; 0x800205 <counter.2264>
     e18:	50 91 06 02 	lds	r21, 0x0206	; 0x800206 <counter.2264+0x1>
     e1c:	9a 01       	movw	r18, r20
     e1e:	ad ec       	ldi	r26, 0xCD	; 205
     e20:	bc ec       	ldi	r27, 0xCC	; 204
     e22:	0e 94 98 1c 	call	0x3930	; 0x3930 <__umulhisi3>
     e26:	92 95       	swap	r25
     e28:	82 95       	swap	r24
     e2a:	8f 70       	andi	r24, 0x0F	; 15
     e2c:	89 27       	eor	r24, r25
     e2e:	9f 70       	andi	r25, 0x0F	; 15
     e30:	89 27       	eor	r24, r25
     e32:	64 e1       	ldi	r22, 0x14	; 20
     e34:	68 9f       	mul	r22, r24
     e36:	90 01       	movw	r18, r0
     e38:	69 9f       	mul	r22, r25
     e3a:	30 0d       	add	r19, r0
     e3c:	11 24       	eor	r1, r1
     e3e:	42 17       	cp	r20, r18
     e40:	53 07       	cpc	r21, r19
     e42:	49 f4       	brne	.+18     	; 0xe56 <manualControl+0xf4>
		{
			speed--;
     e44:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <speed.2263>
     e48:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <speed.2263+0x1>
     e4c:	01 97       	sbiw	r24, 0x01	; 1
     e4e:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <speed.2263+0x1>
     e52:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <speed.2263>
		}
		if(speed < 1)
     e56:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <speed.2263>
     e5a:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <speed.2263+0x1>
     e5e:	18 16       	cp	r1, r24
     e60:	19 06       	cpc	r1, r25
     e62:	24 f0       	brlt	.+8      	; 0xe6c <manualControl+0x10a>
		{
			speed = 0;
     e64:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <speed.2263+0x1>
     e68:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <speed.2263>
		}
		counter++;
     e6c:	4f 5f       	subi	r20, 0xFF	; 255
     e6e:	5f 4f       	sbci	r21, 0xFF	; 255
     e70:	50 93 06 02 	sts	0x0206, r21	; 0x800206 <counter.2264+0x1>
     e74:	40 93 05 02 	sts	0x0205, r20	; 0x800205 <counter.2264>
     e78:	7b c0       	rjmp	.+246    	; 0xf70 <manualControl+0x20e>
	}
	
	else if(myComs->Direction[2] == 1){
     e7a:	97 a9       	ldd	r25, Z+55	; 0x37
     e7c:	91 30       	cpi	r25, 0x01	; 1
     e7e:	e1 f5       	brne	.+120    	; 0xef8 <manualControl+0x196>
		set_motors(speed,speed);
     e80:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <speed.2263>
     e84:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <speed.2263+0x1>
     e88:	bc 01       	movw	r22, r24
     e8a:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
		if(counter % 20 == 0)
     e8e:	40 91 05 02 	lds	r20, 0x0205	; 0x800205 <counter.2264>
     e92:	50 91 06 02 	lds	r21, 0x0206	; 0x800206 <counter.2264+0x1>
     e96:	9a 01       	movw	r18, r20
     e98:	ad ec       	ldi	r26, 0xCD	; 205
     e9a:	bc ec       	ldi	r27, 0xCC	; 204
     e9c:	0e 94 98 1c 	call	0x3930	; 0x3930 <__umulhisi3>
     ea0:	92 95       	swap	r25
     ea2:	82 95       	swap	r24
     ea4:	8f 70       	andi	r24, 0x0F	; 15
     ea6:	89 27       	eor	r24, r25
     ea8:	9f 70       	andi	r25, 0x0F	; 15
     eaa:	89 27       	eor	r24, r25
     eac:	64 e1       	ldi	r22, 0x14	; 20
     eae:	68 9f       	mul	r22, r24
     eb0:	90 01       	movw	r18, r0
     eb2:	69 9f       	mul	r22, r25
     eb4:	30 0d       	add	r19, r0
     eb6:	11 24       	eor	r1, r1
     eb8:	42 17       	cp	r20, r18
     eba:	53 07       	cpc	r21, r19
     ebc:	49 f4       	brne	.+18     	; 0xed0 <manualControl+0x16e>
		{
			speed--;
     ebe:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <speed.2263>
     ec2:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <speed.2263+0x1>
     ec6:	01 97       	sbiw	r24, 0x01	; 1
     ec8:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <speed.2263+0x1>
     ecc:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <speed.2263>
		}
		if(speed < -25)
     ed0:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <speed.2263>
     ed4:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <speed.2263+0x1>
     ed8:	87 3e       	cpi	r24, 0xE7	; 231
     eda:	9f 4f       	sbci	r25, 0xFF	; 255
     edc:	34 f4       	brge	.+12     	; 0xeea <manualControl+0x188>
		{
			speed = -25;
     ede:	87 ee       	ldi	r24, 0xE7	; 231
     ee0:	9f ef       	ldi	r25, 0xFF	; 255
     ee2:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <speed.2263+0x1>
     ee6:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <speed.2263>
		}
		counter++;
     eea:	4f 5f       	subi	r20, 0xFF	; 255
     eec:	5f 4f       	sbci	r21, 0xFF	; 255
     eee:	50 93 06 02 	sts	0x0206, r21	; 0x800206 <counter.2264+0x1>
     ef2:	40 93 05 02 	sts	0x0205, r20	; 0x800205 <counter.2264>
     ef6:	3c c0       	rjmp	.+120    	; 0xf70 <manualControl+0x20e>
	}
	else if(myComs->Direction[0] == 1 && myComs->Direction[2] == 0)
     ef8:	81 30       	cpi	r24, 0x01	; 1
     efa:	d1 f5       	brne	.+116    	; 0xf70 <manualControl+0x20e>
     efc:	91 11       	cpse	r25, r1
     efe:	38 c0       	rjmp	.+112    	; 0xf70 <manualControl+0x20e>
	{
		set_motors(speed,speed);
     f00:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <speed.2263>
     f04:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <speed.2263+0x1>
     f08:	bc 01       	movw	r22, r24
     f0a:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
		if(counter % 20 == 0)
     f0e:	40 91 05 02 	lds	r20, 0x0205	; 0x800205 <counter.2264>
     f12:	50 91 06 02 	lds	r21, 0x0206	; 0x800206 <counter.2264+0x1>
     f16:	9a 01       	movw	r18, r20
     f18:	ad ec       	ldi	r26, 0xCD	; 205
     f1a:	bc ec       	ldi	r27, 0xCC	; 204
     f1c:	0e 94 98 1c 	call	0x3930	; 0x3930 <__umulhisi3>
     f20:	92 95       	swap	r25
     f22:	82 95       	swap	r24
     f24:	8f 70       	andi	r24, 0x0F	; 15
     f26:	89 27       	eor	r24, r25
     f28:	9f 70       	andi	r25, 0x0F	; 15
     f2a:	89 27       	eor	r24, r25
     f2c:	64 e1       	ldi	r22, 0x14	; 20
     f2e:	68 9f       	mul	r22, r24
     f30:	90 01       	movw	r18, r0
     f32:	69 9f       	mul	r22, r25
     f34:	30 0d       	add	r19, r0
     f36:	11 24       	eor	r1, r1
     f38:	42 17       	cp	r20, r18
     f3a:	53 07       	cpc	r21, r19
     f3c:	49 f4       	brne	.+18     	; 0xf50 <manualControl+0x1ee>
		{
			speed++;
     f3e:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <speed.2263>
     f42:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <speed.2263+0x1>
     f46:	01 96       	adiw	r24, 0x01	; 1
     f48:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <speed.2263+0x1>
     f4c:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <speed.2263>
		}
		if(speed > -1)
     f50:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <speed.2263>
     f54:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <speed.2263+0x1>
     f58:	99 23       	and	r25, r25
     f5a:	24 f0       	brlt	.+8      	; 0xf64 <manualControl+0x202>
		{
			speed = 0;
     f5c:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <speed.2263+0x1>
     f60:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <speed.2263>
		}
		counter++;
     f64:	4f 5f       	subi	r20, 0xFF	; 255
     f66:	5f 4f       	sbci	r21, 0xFF	; 255
     f68:	50 93 06 02 	sts	0x0206, r21	; 0x800206 <counter.2264+0x1>
     f6c:	40 93 05 02 	sts	0x0205, r20	; 0x800205 <counter.2264>
	}
	
	if(myComs->Direction[1] == 1){
     f70:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <myComs>
     f74:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <myComs+0x1>
     f78:	86 a9       	ldd	r24, Z+54	; 0x36
     f7a:	81 30       	cpi	r24, 0x01	; 1
     f7c:	61 f4       	brne	.+24     	; 0xf96 <manualControl+0x234>
		set_motors(speed/2,speed);
     f7e:	60 91 07 02 	lds	r22, 0x0207	; 0x800207 <speed.2263>
     f82:	70 91 08 02 	lds	r23, 0x0208	; 0x800208 <speed.2263+0x1>
     f86:	cb 01       	movw	r24, r22
     f88:	77 23       	and	r23, r23
     f8a:	0c f4       	brge	.+2      	; 0xf8e <manualControl+0x22c>
     f8c:	01 96       	adiw	r24, 0x01	; 1
     f8e:	95 95       	asr	r25
     f90:	87 95       	ror	r24
     f92:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
	}
	
	if(myComs->Direction[3] == 1){
     f96:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <myComs>
     f9a:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <myComs+0x1>
     f9e:	80 ad       	ldd	r24, Z+56	; 0x38
     fa0:	81 30       	cpi	r24, 0x01	; 1
     fa2:	69 f4       	brne	.+26     	; 0xfbe <manualControl+0x25c>
		set_motors(speed,speed/2);
     fa4:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <speed.2263>
     fa8:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <speed.2263+0x1>
     fac:	bc 01       	movw	r22, r24
     fae:	99 23       	and	r25, r25
     fb0:	14 f4       	brge	.+4      	; 0xfb6 <manualControl+0x254>
     fb2:	6f 5f       	subi	r22, 0xFF	; 255
     fb4:	7f 4f       	sbci	r23, 0xFF	; 255
     fb6:	75 95       	asr	r23
     fb8:	67 95       	ror	r22
     fba:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
     fbe:	08 95       	ret

00000fc0 <Spin>:
	}
}

void Spin(){
     fc0:	cf 93       	push	r28
     fc2:	df 93       	push	r29
	
	for(int i = 0;i<=255;i++){
     fc4:	c0 e0       	ldi	r28, 0x00	; 0
     fc6:	d0 e0       	ldi	r29, 0x00	; 0
     fc8:	0c c0       	rjmp	.+24     	; 0xfe2 <Spin+0x22>
		set_motors(i,0-i);
     fca:	66 27       	eor	r22, r22
     fcc:	77 27       	eor	r23, r23
     fce:	6c 1b       	sub	r22, r28
     fd0:	7d 0b       	sbc	r23, r29
     fd2:	ce 01       	movw	r24, r28
     fd4:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>
     fd8:	82 e0       	ldi	r24, 0x02	; 2
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	0e 94 78 16 	call	0x2cf0	; 0x2cf0 <delay_ms>
	}
}

void Spin(){
	
	for(int i = 0;i<=255;i++){
     fe0:	21 96       	adiw	r28, 0x01	; 1
     fe2:	cf 3f       	cpi	r28, 0xFF	; 255
     fe4:	d1 05       	cpc	r29, r1
     fe6:	89 f3       	breq	.-30     	; 0xfca <Spin+0xa>
     fe8:	84 f3       	brlt	.-32     	; 0xfca <Spin+0xa>
     fea:	c0 e0       	ldi	r28, 0x00	; 0
     fec:	d0 e0       	ldi	r29, 0x00	; 0
     fee:	15 c0       	rjmp	.+42     	; 0x101a <Spin+0x5a>
		set_motors(i,0-i);
		delay(2);
	}
	int count = 0;
	while(myComs->EmergencyStop == 2){
		count++;
     ff0:	21 96       	adiw	r28, 0x01	; 1
		if(count % 10000 == 0)
     ff2:	ce 01       	movw	r24, r28
     ff4:	60 e1       	ldi	r22, 0x10	; 16
     ff6:	77 e2       	ldi	r23, 0x27	; 39
     ff8:	0e 94 3d 1c 	call	0x387a	; 0x387a <__divmodhi4>
     ffc:	89 2b       	or	r24, r25
     ffe:	69 f4       	brne	.+26     	; 0x101a <Spin+0x5a>
		{
			clear();
    1000:	0e 94 32 13 	call	0x2664	; 0x2664 <clear>
			myComs->Update(myComs);
    1004:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <myComs>
    1008:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <myComs+0x1>
    100c:	fc 01       	movw	r30, r24
    100e:	ef 58       	subi	r30, 0x8F	; 143
    1010:	ff 4f       	sbci	r31, 0xFF	; 255
    1012:	01 90       	ld	r0, Z+
    1014:	f0 81       	ld	r31, Z
    1016:	e0 2d       	mov	r30, r0
    1018:	09 95       	icall
	for(int i = 0;i<=255;i++){
		set_motors(i,0-i);
		delay(2);
	}
	int count = 0;
	while(myComs->EmergencyStop == 2){
    101a:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <myComs>
    101e:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <myComs+0x1>
    1022:	e5 59       	subi	r30, 0x95	; 149
    1024:	ff 4f       	sbci	r31, 0xFF	; 255
    1026:	80 81       	ld	r24, Z
    1028:	82 30       	cpi	r24, 0x02	; 2
    102a:	11 f3       	breq	.-60     	; 0xff0 <Spin+0x30>
		


	}
	
	set_motors(0,0);
    102c:	60 e0       	ldi	r22, 0x00	; 0
    102e:	70 e0       	ldi	r23, 0x00	; 0
    1030:	80 e0       	ldi	r24, 0x00	; 0
    1032:	90 e0       	ldi	r25, 0x00	; 0
    1034:	0e 94 6f 14 	call	0x28de	; 0x28de <set_motors>

	
    1038:	df 91       	pop	r29
    103a:	cf 91       	pop	r28
    103c:	08 95       	ret

0000103e <parcoursSearch>:
    103e:	0f 93       	push	r16
    1040:	1f 93       	push	r17
    1042:	cf 93       	push	r28
    1044:	df 93       	push	r29
    1046:	00 d0       	rcall	.+0      	; 0x1048 <parcoursSearch+0xa>
    1048:	cd b7       	in	r28, 0x3d	; 61
    104a:	de b7       	in	r29, 0x3e	; 62
    104c:	0e 94 6f 04 	call	0x8de	; 0x8de <lineType>
    1050:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <situatie>
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	89 30       	cpi	r24, 0x09	; 9
    1058:	91 05       	cpc	r25, r1
    105a:	08 f0       	brcs	.+2      	; 0x105e <parcoursSearch+0x20>
    105c:	41 c0       	rjmp	.+130    	; 0x10e0 <parcoursSearch+0xa2>
    105e:	fc 01       	movw	r30, r24
    1060:	ec 5c       	subi	r30, 0xCC	; 204
    1062:	ff 4f       	sbci	r31, 0xFF	; 255
    1064:	0c 94 92 1c 	jmp	0x3924	; 0x3924 <__tablejump2__>
    1068:	83 e5       	ldi	r24, 0x53	; 83
    106a:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    106e:	38 c0       	rjmp	.+112    	; 0x10e0 <parcoursSearch+0xa2>
    1070:	8c e4       	ldi	r24, 0x4C	; 76
    1072:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    1076:	8c e4       	ldi	r24, 0x4C	; 76
    1078:	89 83       	std	Y+1, r24	; 0x01
    107a:	41 e0       	ldi	r20, 0x01	; 1
    107c:	50 e0       	ldi	r21, 0x00	; 0
    107e:	be 01       	movw	r22, r28
    1080:	6f 5f       	subi	r22, 0xFF	; 255
    1082:	7f 4f       	sbci	r23, 0xFF	; 255
    1084:	84 e1       	ldi	r24, 0x14	; 20
    1086:	91 e0       	ldi	r25, 0x01	; 1
    1088:	0e 94 12 1e 	call	0x3c24	; 0x3c24 <strncat>
    108c:	29 c0       	rjmp	.+82     	; 0x10e0 <parcoursSearch+0xa2>
    108e:	82 e5       	ldi	r24, 0x52	; 82
    1090:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    1094:	82 e5       	ldi	r24, 0x52	; 82
    1096:	89 83       	std	Y+1, r24	; 0x01
    1098:	41 e0       	ldi	r20, 0x01	; 1
    109a:	50 e0       	ldi	r21, 0x00	; 0
    109c:	be 01       	movw	r22, r28
    109e:	6f 5f       	subi	r22, 0xFF	; 255
    10a0:	7f 4f       	sbci	r23, 0xFF	; 255
    10a2:	84 e1       	ldi	r24, 0x14	; 20
    10a4:	91 e0       	ldi	r25, 0x01	; 1
    10a6:	0e 94 12 1e 	call	0x3c24	; 0x3c24 <strncat>
    10aa:	1a c0       	rjmp	.+52     	; 0x10e0 <parcoursSearch+0xa2>
    10ac:	83 e5       	ldi	r24, 0x53	; 83
    10ae:	89 83       	std	Y+1, r24	; 0x01
    10b0:	41 e0       	ldi	r20, 0x01	; 1
    10b2:	50 e0       	ldi	r21, 0x00	; 0
    10b4:	be 01       	movw	r22, r28
    10b6:	6f 5f       	subi	r22, 0xFF	; 255
    10b8:	7f 4f       	sbci	r23, 0xFF	; 255
    10ba:	84 e1       	ldi	r24, 0x14	; 20
    10bc:	91 e0       	ldi	r25, 0x01	; 1
    10be:	0e 94 12 1e 	call	0x3c24	; 0x3c24 <strncat>
    10c2:	0e c0       	rjmp	.+28     	; 0x10e0 <parcoursSearch+0xa2>
    10c4:	84 e5       	ldi	r24, 0x54	; 84
    10c6:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    10ca:	84 e5       	ldi	r24, 0x54	; 84
    10cc:	89 83       	std	Y+1, r24	; 0x01
    10ce:	41 e0       	ldi	r20, 0x01	; 1
    10d0:	50 e0       	ldi	r21, 0x00	; 0
    10d2:	be 01       	movw	r22, r28
    10d4:	6f 5f       	subi	r22, 0xFF	; 255
    10d6:	7f 4f       	sbci	r23, 0xFF	; 255
    10d8:	84 e1       	ldi	r24, 0x14	; 20
    10da:	91 e0       	ldi	r25, 0x01	; 1
    10dc:	0e 94 12 1e 	call	0x3c24	; 0x3c24 <strncat>
    10e0:	0e 94 32 13 	call	0x2664	; 0x2664 <clear>
    10e4:	60 e0       	ldi	r22, 0x00	; 0
    10e6:	80 e0       	ldi	r24, 0x00	; 0
    10e8:	0e 94 b9 13 	call	0x2772	; 0x2772 <lcd_goto_xy>
    10ec:	00 e0       	ldi	r16, 0x00	; 0
    10ee:	10 e0       	ldi	r17, 0x00	; 0
    10f0:	08 c0       	rjmp	.+16     	; 0x1102 <parcoursSearch+0xc4>
    10f2:	f8 01       	movw	r30, r16
    10f4:	ec 5e       	subi	r30, 0xEC	; 236
    10f6:	fe 4f       	sbci	r31, 0xFE	; 254
    10f8:	80 81       	ld	r24, Z
    10fa:	0e 94 c2 12 	call	0x2584	; 0x2584 <print_character>
    10fe:	0f 5f       	subi	r16, 0xFF	; 255
    1100:	1f 4f       	sbci	r17, 0xFF	; 255
    1102:	e4 e1       	ldi	r30, 0x14	; 20
    1104:	f1 e0       	ldi	r31, 0x01	; 1
    1106:	01 90       	ld	r0, Z+
    1108:	00 20       	and	r0, r0
    110a:	e9 f7       	brne	.-6      	; 0x1106 <parcoursSearch+0xc8>
    110c:	31 97       	sbiw	r30, 0x01	; 1
    110e:	e4 51       	subi	r30, 0x14	; 20
    1110:	f1 40       	sbci	r31, 0x01	; 1
    1112:	e0 17       	cp	r30, r16
    1114:	f1 07       	cpc	r31, r17
    1116:	68 f7       	brcc	.-38     	; 0x10f2 <parcoursSearch+0xb4>
    1118:	df 01       	movw	r26, r30
    111a:	ae 5e       	subi	r26, 0xEE	; 238
    111c:	be 4f       	sbci	r27, 0xFE	; 254
    111e:	8c 91       	ld	r24, X
    1120:	84 35       	cpi	r24, 0x54	; 84
    1122:	09 f0       	breq	.+2      	; 0x1126 <parcoursSearch+0xe8>
    1124:	93 cf       	rjmp	.-218    	; 0x104c <parcoursSearch+0xe>
    1126:	df 01       	movw	r26, r30
    1128:	af 5e       	subi	r26, 0xEF	; 239
    112a:	be 4f       	sbci	r27, 0xFE	; 254
    112c:	8c 91       	ld	r24, X
    112e:	ed 5e       	subi	r30, 0xED	; 237
    1130:	fe 4f       	sbci	r31, 0xFE	; 254
    1132:	90 81       	ld	r25, Z
    1134:	8c 34       	cpi	r24, 0x4C	; 76
    1136:	29 f4       	brne	.+10     	; 0x1142 <parcoursSearch+0x104>
    1138:	9c 34       	cpi	r25, 0x4C	; 76
    113a:	19 f4       	brne	.+6      	; 0x1142 <parcoursSearch+0x104>
    113c:	83 e5       	ldi	r24, 0x53	; 83
    113e:	8a 83       	std	Y+2, r24	; 0x02
    1140:	1b c0       	rjmp	.+54     	; 0x1178 <parcoursSearch+0x13a>
    1142:	83 35       	cpi	r24, 0x53	; 83
    1144:	29 f4       	brne	.+10     	; 0x1150 <parcoursSearch+0x112>
    1146:	9c 34       	cpi	r25, 0x4C	; 76
    1148:	19 f4       	brne	.+6      	; 0x1150 <parcoursSearch+0x112>
    114a:	82 e5       	ldi	r24, 0x52	; 82
    114c:	8a 83       	std	Y+2, r24	; 0x02
    114e:	14 c0       	rjmp	.+40     	; 0x1178 <parcoursSearch+0x13a>
    1150:	82 35       	cpi	r24, 0x52	; 82
    1152:	29 f4       	brne	.+10     	; 0x115e <parcoursSearch+0x120>
    1154:	9c 34       	cpi	r25, 0x4C	; 76
    1156:	19 f4       	brne	.+6      	; 0x115e <parcoursSearch+0x120>
    1158:	84 e5       	ldi	r24, 0x54	; 84
    115a:	8a 83       	std	Y+2, r24	; 0x02
    115c:	0d c0       	rjmp	.+26     	; 0x1178 <parcoursSearch+0x13a>
    115e:	8c 34       	cpi	r24, 0x4C	; 76
    1160:	29 f4       	brne	.+10     	; 0x116c <parcoursSearch+0x12e>
    1162:	92 35       	cpi	r25, 0x52	; 82
    1164:	19 f4       	brne	.+6      	; 0x116c <parcoursSearch+0x12e>
    1166:	84 e5       	ldi	r24, 0x54	; 84
    1168:	8a 83       	std	Y+2, r24	; 0x02
    116a:	06 c0       	rjmp	.+12     	; 0x1178 <parcoursSearch+0x13a>
    116c:	8c 34       	cpi	r24, 0x4C	; 76
    116e:	21 f4       	brne	.+8      	; 0x1178 <parcoursSearch+0x13a>
    1170:	93 35       	cpi	r25, 0x53	; 83
    1172:	11 f4       	brne	.+4      	; 0x1178 <parcoursSearch+0x13a>
    1174:	82 e5       	ldi	r24, 0x52	; 82
    1176:	8a 83       	std	Y+2, r24	; 0x02
    1178:	e4 e1       	ldi	r30, 0x14	; 20
    117a:	f1 e0       	ldi	r31, 0x01	; 1
    117c:	01 90       	ld	r0, Z+
    117e:	00 20       	and	r0, r0
    1180:	e9 f7       	brne	.-6      	; 0x117c <parcoursSearch+0x13e>
    1182:	34 97       	sbiw	r30, 0x04	; 4
    1184:	10 82       	st	Z, r1
    1186:	41 e0       	ldi	r20, 0x01	; 1
    1188:	50 e0       	ldi	r21, 0x00	; 0
    118a:	be 01       	movw	r22, r28
    118c:	6e 5f       	subi	r22, 0xFE	; 254
    118e:	7f 4f       	sbci	r23, 0xFF	; 255
    1190:	84 e1       	ldi	r24, 0x14	; 20
    1192:	91 e0       	ldi	r25, 0x01	; 1
    1194:	0e 94 12 1e 	call	0x3c24	; 0x3c24 <strncat>
    1198:	59 cf       	rjmp	.-334    	; 0x104c <parcoursSearch+0xe>
    119a:	80 e5       	ldi	r24, 0x50	; 80
    119c:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    11a0:	80 e0       	ldi	r24, 0x00	; 0
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	0f 90       	pop	r0
    11a6:	0f 90       	pop	r0
    11a8:	df 91       	pop	r29
    11aa:	cf 91       	pop	r28
    11ac:	1f 91       	pop	r17
    11ae:	0f 91       	pop	r16
    11b0:	08 95       	ret

000011b2 <parcours>:
    11b2:	cf 93       	push	r28
    11b4:	df 93       	push	r29
    11b6:	00 d0       	rcall	.+0      	; 0x11b8 <parcours+0x6>
    11b8:	cd b7       	in	r28, 0x3d	; 61
    11ba:	de b7       	in	r29, 0x3e	; 62
    11bc:	7a 83       	std	Y+2, r23	; 0x02
    11be:	69 83       	std	Y+1, r22	; 0x01
    11c0:	0e 94 f5 02 	call	0x5ea	; 0x5ea <batteryPercentage>
    11c4:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <__fixsfsi>
    11c8:	41 e0       	ldi	r20, 0x01	; 1
    11ca:	80 e0       	ldi	r24, 0x00	; 0
    11cc:	90 e0       	ldi	r25, 0x00	; 0
    11ce:	0e 94 17 03 	call	0x62e	; 0x62e <updateDisplay>
    11d2:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <route>
    11d6:	8f 35       	cpi	r24, 0x5F	; 95
    11d8:	61 f4       	brne	.+24     	; 0x11f2 <parcours+0x40>
    11da:	84 e1       	ldi	r24, 0x14	; 20
    11dc:	e4 e1       	ldi	r30, 0x14	; 20
    11de:	f1 e0       	ldi	r31, 0x01	; 1
    11e0:	df 01       	movw	r26, r30
    11e2:	1d 92       	st	X+, r1
    11e4:	8a 95       	dec	r24
    11e6:	e9 f7       	brne	.-6      	; 0x11e2 <parcours+0x30>
    11e8:	ce 01       	movw	r24, r28
    11ea:	01 96       	adiw	r24, 0x01	; 1
    11ec:	0e 94 1f 08 	call	0x103e	; 0x103e <parcoursSearch>
    11f0:	04 c0       	rjmp	.+8      	; 0x11fa <parcours+0x48>
    11f2:	ce 01       	movw	r24, r28
    11f4:	01 96       	adiw	r24, 0x01	; 1
    11f6:	0e 94 1f 08 	call	0x103e	; 0x103e <parcoursSearch>
    11fa:	80 e0       	ldi	r24, 0x00	; 0
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	0f 90       	pop	r0
    1200:	0f 90       	pop	r0
    1202:	df 91       	pop	r29
    1204:	cf 91       	pop	r28
    1206:	08 95       	ret

00001208 <swap>:
    1208:	fc 01       	movw	r30, r24
    120a:	20 81       	ld	r18, Z
    120c:	fb 01       	movw	r30, r22
    120e:	30 81       	ld	r19, Z
    1210:	fc 01       	movw	r30, r24
    1212:	30 83       	st	Z, r19
    1214:	fb 01       	movw	r30, r22
    1216:	20 83       	st	Z, r18
    1218:	08 95       	ret

0000121a <bubbleSort>:
    121a:	8f 92       	push	r8
    121c:	9f 92       	push	r9
    121e:	af 92       	push	r10
    1220:	bf 92       	push	r11
    1222:	cf 92       	push	r12
    1224:	df 92       	push	r13
    1226:	ef 92       	push	r14
    1228:	ff 92       	push	r15
    122a:	0f 93       	push	r16
    122c:	1f 93       	push	r17
    122e:	cf 93       	push	r28
    1230:	df 93       	push	r29
    1232:	8c 01       	movw	r16, r24
    1234:	5b 01       	movw	r10, r22
    1236:	6a 01       	movw	r12, r20
    1238:	e1 2c       	mov	r14, r1
    123a:	f1 2c       	mov	r15, r1
    123c:	28 c0       	rjmp	.+80     	; 0x128e <bubbleSort+0x74>
    123e:	f8 01       	movw	r30, r16
    1240:	ec 0f       	add	r30, r28
    1242:	fd 1f       	adc	r31, r29
    1244:	90 81       	ld	r25, Z
    1246:	4e 01       	movw	r8, r28
    1248:	8f ef       	ldi	r24, 0xFF	; 255
    124a:	88 1a       	sub	r8, r24
    124c:	98 0a       	sbc	r9, r24
    124e:	d8 01       	movw	r26, r16
    1250:	a8 0d       	add	r26, r8
    1252:	b9 1d       	adc	r27, r9
    1254:	8c 91       	ld	r24, X
    1256:	89 17       	cp	r24, r25
    1258:	60 f4       	brcc	.+24     	; 0x1272 <bubbleSort+0x58>
    125a:	bd 01       	movw	r22, r26
    125c:	cf 01       	movw	r24, r30
    125e:	0e 94 04 09 	call	0x1208	; 0x1208 <swap>
    1262:	b5 01       	movw	r22, r10
    1264:	68 0d       	add	r22, r8
    1266:	79 1d       	adc	r23, r9
    1268:	c5 01       	movw	r24, r10
    126a:	8c 0f       	add	r24, r28
    126c:	9d 1f       	adc	r25, r29
    126e:	0e 94 04 09 	call	0x1208	; 0x1208 <swap>
    1272:	21 96       	adiw	r28, 0x01	; 1
    1274:	02 c0       	rjmp	.+4      	; 0x127a <bubbleSort+0x60>
    1276:	c0 e0       	ldi	r28, 0x00	; 0
    1278:	d0 e0       	ldi	r29, 0x00	; 0
    127a:	c6 01       	movw	r24, r12
    127c:	8e 19       	sub	r24, r14
    127e:	9f 09       	sbc	r25, r15
    1280:	01 97       	sbiw	r24, 0x01	; 1
    1282:	c8 17       	cp	r28, r24
    1284:	d9 07       	cpc	r29, r25
    1286:	dc f2       	brlt	.-74     	; 0x123e <bubbleSort+0x24>
    1288:	8f ef       	ldi	r24, 0xFF	; 255
    128a:	e8 1a       	sub	r14, r24
    128c:	f8 0a       	sbc	r15, r24
    128e:	c6 01       	movw	r24, r12
    1290:	01 97       	sbiw	r24, 0x01	; 1
    1292:	e8 16       	cp	r14, r24
    1294:	f9 06       	cpc	r15, r25
    1296:	7c f3       	brlt	.-34     	; 0x1276 <bubbleSort+0x5c>
    1298:	df 91       	pop	r29
    129a:	cf 91       	pop	r28
    129c:	1f 91       	pop	r17
    129e:	0f 91       	pop	r16
    12a0:	ff 90       	pop	r15
    12a2:	ef 90       	pop	r14
    12a4:	df 90       	pop	r13
    12a6:	cf 90       	pop	r12
    12a8:	bf 90       	pop	r11
    12aa:	af 90       	pop	r10
    12ac:	9f 90       	pop	r9
    12ae:	8f 90       	pop	r8
    12b0:	08 95       	ret

000012b2 <drive>:
    12b2:	cf 92       	push	r12
    12b4:	df 92       	push	r13
    12b6:	ef 92       	push	r14
    12b8:	ff 92       	push	r15
    12ba:	0f 93       	push	r16
    12bc:	1f 93       	push	r17
    12be:	cf 93       	push	r28
    12c0:	df 93       	push	r29
    12c2:	6c 01       	movw	r12, r24
    12c4:	7a 01       	movw	r14, r20
    12c6:	83 e5       	ldi	r24, 0x53	; 83
    12c8:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    12cc:	00 e0       	ldi	r16, 0x00	; 0
    12ce:	10 e0       	ldi	r17, 0x00	; 0
    12d0:	c1 e0       	ldi	r28, 0x01	; 1
    12d2:	d0 e0       	ldi	r29, 0x00	; 0
    12d4:	22 c0       	rjmp	.+68     	; 0x131a <drive+0x68>
    12d6:	0e 94 6f 04 	call	0x8de	; 0x8de <lineType>
    12da:	81 30       	cpi	r24, 0x01	; 1
    12dc:	49 f0       	breq	.+18     	; 0x12f0 <drive+0x3e>
    12de:	20 f0       	brcs	.+8      	; 0x12e8 <drive+0x36>
    12e0:	83 50       	subi	r24, 0x03	; 3
    12e2:	86 30       	cpi	r24, 0x06	; 6
    12e4:	d0 f4       	brcc	.+52     	; 0x131a <drive+0x68>
    12e6:	04 c0       	rjmp	.+8      	; 0x12f0 <drive+0x3e>
    12e8:	83 e5       	ldi	r24, 0x53	; 83
    12ea:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    12ee:	15 c0       	rjmp	.+42     	; 0x131a <drive+0x68>
    12f0:	0f 5f       	subi	r16, 0xFF	; 255
    12f2:	1f 4f       	sbci	r17, 0xFF	; 255
    12f4:	83 e5       	ldi	r24, 0x53	; 83
    12f6:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    12fa:	0c 15       	cp	r16, r12
    12fc:	1d 05       	cpc	r17, r13
    12fe:	29 f4       	brne	.+10     	; 0x130a <drive+0x58>
    1300:	80 e5       	ldi	r24, 0x50	; 80
    1302:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    1306:	c0 e0       	ldi	r28, 0x00	; 0
    1308:	d0 e0       	ldi	r29, 0x00	; 0
    130a:	f7 01       	movw	r30, r14
    130c:	ef 58       	subi	r30, 0x8F	; 143
    130e:	ff 4f       	sbci	r31, 0xFF	; 255
    1310:	01 90       	ld	r0, Z+
    1312:	f0 81       	ld	r31, Z
    1314:	e0 2d       	mov	r30, r0
    1316:	c7 01       	movw	r24, r14
    1318:	09 95       	icall
    131a:	20 97       	sbiw	r28, 0x00	; 0
    131c:	e1 f6       	brne	.-72     	; 0x12d6 <drive+0x24>
    131e:	df 91       	pop	r29
    1320:	cf 91       	pop	r28
    1322:	1f 91       	pop	r17
    1324:	0f 91       	pop	r16
    1326:	ff 90       	pop	r15
    1328:	ef 90       	pop	r14
    132a:	df 90       	pop	r13
    132c:	cf 90       	pop	r12
    132e:	08 95       	ret

00001330 <waitForTurn>:
    1330:	cf 93       	push	r28
    1332:	0e 94 6f 04 	call	0x8de	; 0x8de <lineType>
    1336:	c8 2f       	mov	r28, r24
    1338:	8f e0       	ldi	r24, 0x0F	; 15
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	0e 94 78 16 	call	0x2cf0	; 0x2cf0 <delay_ms>
    1340:	03 c0       	rjmp	.+6      	; 0x1348 <waitForTurn+0x18>
    1342:	0e 94 6f 04 	call	0x8de	; 0x8de <lineType>
    1346:	c8 2f       	mov	r28, r24
    1348:	c1 11       	cpse	r28, r1
    134a:	fb cf       	rjmp	.-10     	; 0x1342 <waitForTurn+0x12>
    134c:	8e e4       	ldi	r24, 0x4E	; 78
    134e:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    1352:	cf 91       	pop	r28
    1354:	08 95       	ret

00001356 <turnRobot>:
    1356:	ef 92       	push	r14
    1358:	ff 92       	push	r15
    135a:	0f 93       	push	r16
    135c:	1f 93       	push	r17
    135e:	cf 93       	push	r28
    1360:	c8 2f       	mov	r28, r24
    1362:	8b 01       	movw	r16, r22
    1364:	ee 24       	eor	r14, r14
    1366:	e3 94       	inc	r14
    1368:	f1 2c       	mov	r15, r1
    136a:	a6 c0       	rjmp	.+332    	; 0x14b8 <turnRobot+0x162>
    136c:	f8 01       	movw	r30, r16
    136e:	84 81       	ldd	r24, Z+4	; 0x04
    1370:	8e 34       	cpi	r24, 0x4E	; 78
    1372:	59 f0       	breq	.+22     	; 0x138a <turnRobot+0x34>
    1374:	18 f4       	brcc	.+6      	; 0x137c <turnRobot+0x26>
    1376:	85 34       	cpi	r24, 0x45	; 69
    1378:	69 f1       	breq	.+90     	; 0x13d4 <turnRobot+0x7e>
    137a:	98 c0       	rjmp	.+304    	; 0x14ac <turnRobot+0x156>
    137c:	83 35       	cpi	r24, 0x53	; 83
    137e:	09 f4       	brne	.+2      	; 0x1382 <turnRobot+0x2c>
    1380:	4e c0       	rjmp	.+156    	; 0x141e <turnRobot+0xc8>
    1382:	87 35       	cpi	r24, 0x57	; 87
    1384:	09 f4       	brne	.+2      	; 0x1388 <turnRobot+0x32>
    1386:	6f c0       	rjmp	.+222    	; 0x1466 <turnRobot+0x110>
    1388:	91 c0       	rjmp	.+290    	; 0x14ac <turnRobot+0x156>
    138a:	c5 34       	cpi	r28, 0x45	; 69
    138c:	49 f4       	brne	.+18     	; 0x13a0 <turnRobot+0x4a>
    138e:	82 e5       	ldi	r24, 0x52	; 82
    1390:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    1394:	0e 94 98 09 	call	0x1330	; 0x1330 <waitForTurn>
    1398:	85 e4       	ldi	r24, 0x45	; 69
    139a:	f8 01       	movw	r30, r16
    139c:	84 83       	std	Z+4, r24	; 0x04
    139e:	86 c0       	rjmp	.+268    	; 0x14ac <turnRobot+0x156>
    13a0:	c7 35       	cpi	r28, 0x57	; 87
    13a2:	49 f4       	brne	.+18     	; 0x13b6 <turnRobot+0x60>
    13a4:	8c e4       	ldi	r24, 0x4C	; 76
    13a6:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    13aa:	0e 94 98 09 	call	0x1330	; 0x1330 <waitForTurn>
    13ae:	87 e5       	ldi	r24, 0x57	; 87
    13b0:	f8 01       	movw	r30, r16
    13b2:	84 83       	std	Z+4, r24	; 0x04
    13b4:	7b c0       	rjmp	.+246    	; 0x14ac <turnRobot+0x156>
    13b6:	c3 35       	cpi	r28, 0x53	; 83
    13b8:	09 f0       	breq	.+2      	; 0x13bc <turnRobot+0x66>
    13ba:	78 c0       	rjmp	.+240    	; 0x14ac <turnRobot+0x156>
    13bc:	8c e4       	ldi	r24, 0x4C	; 76
    13be:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    13c2:	8c e4       	ldi	r24, 0x4C	; 76
    13c4:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    13c8:	0e 94 98 09 	call	0x1330	; 0x1330 <waitForTurn>
    13cc:	83 e5       	ldi	r24, 0x53	; 83
    13ce:	f8 01       	movw	r30, r16
    13d0:	84 83       	std	Z+4, r24	; 0x04
    13d2:	6c c0       	rjmp	.+216    	; 0x14ac <turnRobot+0x156>
    13d4:	c3 35       	cpi	r28, 0x53	; 83
    13d6:	49 f4       	brne	.+18     	; 0x13ea <turnRobot+0x94>
    13d8:	82 e5       	ldi	r24, 0x52	; 82
    13da:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    13de:	0e 94 98 09 	call	0x1330	; 0x1330 <waitForTurn>
    13e2:	83 e5       	ldi	r24, 0x53	; 83
    13e4:	f8 01       	movw	r30, r16
    13e6:	84 83       	std	Z+4, r24	; 0x04
    13e8:	61 c0       	rjmp	.+194    	; 0x14ac <turnRobot+0x156>
    13ea:	c7 35       	cpi	r28, 0x57	; 87
    13ec:	49 f4       	brne	.+18     	; 0x1400 <turnRobot+0xaa>
    13ee:	8c e4       	ldi	r24, 0x4C	; 76
    13f0:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    13f4:	0e 94 98 09 	call	0x1330	; 0x1330 <waitForTurn>
    13f8:	87 e5       	ldi	r24, 0x57	; 87
    13fa:	f8 01       	movw	r30, r16
    13fc:	84 83       	std	Z+4, r24	; 0x04
    13fe:	56 c0       	rjmp	.+172    	; 0x14ac <turnRobot+0x156>
    1400:	c3 35       	cpi	r28, 0x53	; 83
    1402:	09 f0       	breq	.+2      	; 0x1406 <turnRobot+0xb0>
    1404:	53 c0       	rjmp	.+166    	; 0x14ac <turnRobot+0x156>
    1406:	8c e4       	ldi	r24, 0x4C	; 76
    1408:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    140c:	8c e4       	ldi	r24, 0x4C	; 76
    140e:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    1412:	0e 94 98 09 	call	0x1330	; 0x1330 <waitForTurn>
    1416:	83 e5       	ldi	r24, 0x53	; 83
    1418:	f8 01       	movw	r30, r16
    141a:	84 83       	std	Z+4, r24	; 0x04
    141c:	47 c0       	rjmp	.+142    	; 0x14ac <turnRobot+0x156>
    141e:	c7 35       	cpi	r28, 0x57	; 87
    1420:	49 f4       	brne	.+18     	; 0x1434 <turnRobot+0xde>
    1422:	82 e5       	ldi	r24, 0x52	; 82
    1424:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    1428:	0e 94 98 09 	call	0x1330	; 0x1330 <waitForTurn>
    142c:	87 e5       	ldi	r24, 0x57	; 87
    142e:	f8 01       	movw	r30, r16
    1430:	84 83       	std	Z+4, r24	; 0x04
    1432:	3c c0       	rjmp	.+120    	; 0x14ac <turnRobot+0x156>
    1434:	c5 34       	cpi	r28, 0x45	; 69
    1436:	49 f4       	brne	.+18     	; 0x144a <turnRobot+0xf4>
    1438:	8c e4       	ldi	r24, 0x4C	; 76
    143a:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    143e:	0e 94 98 09 	call	0x1330	; 0x1330 <waitForTurn>
    1442:	85 e4       	ldi	r24, 0x45	; 69
    1444:	f8 01       	movw	r30, r16
    1446:	84 83       	std	Z+4, r24	; 0x04
    1448:	31 c0       	rjmp	.+98     	; 0x14ac <turnRobot+0x156>
    144a:	ce 34       	cpi	r28, 0x4E	; 78
    144c:	79 f5       	brne	.+94     	; 0x14ac <turnRobot+0x156>
    144e:	8c e4       	ldi	r24, 0x4C	; 76
    1450:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    1454:	8c e4       	ldi	r24, 0x4C	; 76
    1456:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    145a:	0e 94 98 09 	call	0x1330	; 0x1330 <waitForTurn>
    145e:	8e e4       	ldi	r24, 0x4E	; 78
    1460:	f8 01       	movw	r30, r16
    1462:	84 83       	std	Z+4, r24	; 0x04
    1464:	23 c0       	rjmp	.+70     	; 0x14ac <turnRobot+0x156>
    1466:	ce 34       	cpi	r28, 0x4E	; 78
    1468:	49 f4       	brne	.+18     	; 0x147c <turnRobot+0x126>
    146a:	82 e5       	ldi	r24, 0x52	; 82
    146c:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    1470:	0e 94 98 09 	call	0x1330	; 0x1330 <waitForTurn>
    1474:	8e e4       	ldi	r24, 0x4E	; 78
    1476:	f8 01       	movw	r30, r16
    1478:	84 83       	std	Z+4, r24	; 0x04
    147a:	18 c0       	rjmp	.+48     	; 0x14ac <turnRobot+0x156>
    147c:	c3 35       	cpi	r28, 0x53	; 83
    147e:	49 f4       	brne	.+18     	; 0x1492 <turnRobot+0x13c>
    1480:	8c e4       	ldi	r24, 0x4C	; 76
    1482:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    1486:	0e 94 98 09 	call	0x1330	; 0x1330 <waitForTurn>
    148a:	83 e5       	ldi	r24, 0x53	; 83
    148c:	f8 01       	movw	r30, r16
    148e:	84 83       	std	Z+4, r24	; 0x04
    1490:	0d c0       	rjmp	.+26     	; 0x14ac <turnRobot+0x156>
    1492:	c5 34       	cpi	r28, 0x45	; 69
    1494:	59 f4       	brne	.+22     	; 0x14ac <turnRobot+0x156>
    1496:	8c e4       	ldi	r24, 0x4C	; 76
    1498:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    149c:	8c e4       	ldi	r24, 0x4C	; 76
    149e:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    14a2:	0e 94 98 09 	call	0x1330	; 0x1330 <waitForTurn>
    14a6:	85 e4       	ldi	r24, 0x45	; 69
    14a8:	f8 01       	movw	r30, r16
    14aa:	84 83       	std	Z+4, r24	; 0x04
    14ac:	f8 01       	movw	r30, r16
    14ae:	84 81       	ldd	r24, Z+4	; 0x04
    14b0:	c8 13       	cpse	r28, r24
    14b2:	02 c0       	rjmp	.+4      	; 0x14b8 <turnRobot+0x162>
    14b4:	e1 2c       	mov	r14, r1
    14b6:	f1 2c       	mov	r15, r1
    14b8:	f1 e0       	ldi	r31, 0x01	; 1
    14ba:	ef 16       	cp	r14, r31
    14bc:	f1 04       	cpc	r15, r1
    14be:	09 f4       	brne	.+2      	; 0x14c2 <turnRobot+0x16c>
    14c0:	55 cf       	rjmp	.-342    	; 0x136c <turnRobot+0x16>
    14c2:	cf 91       	pop	r28
    14c4:	1f 91       	pop	r17
    14c6:	0f 91       	pop	r16
    14c8:	ff 90       	pop	r15
    14ca:	ef 90       	pop	r14
    14cc:	08 95       	ret

000014ce <moveX>:
    14ce:	ef 92       	push	r14
    14d0:	ff 92       	push	r15
    14d2:	0f 93       	push	r16
    14d4:	1f 93       	push	r17
    14d6:	cf 93       	push	r28
    14d8:	df 93       	push	r29
    14da:	fb 01       	movw	r30, r22
    14dc:	20 81       	ld	r18, Z
    14de:	31 81       	ldd	r19, Z+1	; 0x01
    14e0:	28 17       	cp	r18, r24
    14e2:	39 07       	cpc	r19, r25
    14e4:	d9 f0       	breq	.+54     	; 0x151c <moveX+0x4e>
    14e6:	7a 01       	movw	r14, r20
    14e8:	eb 01       	movw	r28, r22
    14ea:	8c 01       	movw	r16, r24
    14ec:	28 17       	cp	r18, r24
    14ee:	39 07       	cpc	r19, r25
    14f0:	54 f4       	brge	.+20     	; 0x1506 <moveX+0x38>
    14f2:	87 e5       	ldi	r24, 0x57	; 87
    14f4:	0e 94 ab 09 	call	0x1356	; 0x1356 <turnRobot>
    14f8:	88 81       	ld	r24, Y
    14fa:	99 81       	ldd	r25, Y+1	; 0x01
    14fc:	98 01       	movw	r18, r16
    14fe:	28 1b       	sub	r18, r24
    1500:	39 0b       	sbc	r19, r25
    1502:	c9 01       	movw	r24, r18
    1504:	07 c0       	rjmp	.+14     	; 0x1514 <moveX+0x46>
    1506:	85 e4       	ldi	r24, 0x45	; 69
    1508:	0e 94 ab 09 	call	0x1356	; 0x1356 <turnRobot>
    150c:	88 81       	ld	r24, Y
    150e:	99 81       	ldd	r25, Y+1	; 0x01
    1510:	80 1b       	sub	r24, r16
    1512:	91 0b       	sbc	r25, r17
    1514:	a7 01       	movw	r20, r14
    1516:	be 01       	movw	r22, r28
    1518:	0e 94 59 09 	call	0x12b2	; 0x12b2 <drive>
    151c:	df 91       	pop	r29
    151e:	cf 91       	pop	r28
    1520:	1f 91       	pop	r17
    1522:	0f 91       	pop	r16
    1524:	ff 90       	pop	r15
    1526:	ef 90       	pop	r14
    1528:	08 95       	ret

0000152a <moveY>:
    152a:	ef 92       	push	r14
    152c:	ff 92       	push	r15
    152e:	0f 93       	push	r16
    1530:	1f 93       	push	r17
    1532:	cf 93       	push	r28
    1534:	df 93       	push	r29
    1536:	fb 01       	movw	r30, r22
    1538:	22 81       	ldd	r18, Z+2	; 0x02
    153a:	33 81       	ldd	r19, Z+3	; 0x03
    153c:	28 17       	cp	r18, r24
    153e:	39 07       	cpc	r19, r25
    1540:	d9 f0       	breq	.+54     	; 0x1578 <moveY+0x4e>
    1542:	7a 01       	movw	r14, r20
    1544:	eb 01       	movw	r28, r22
    1546:	8c 01       	movw	r16, r24
    1548:	28 17       	cp	r18, r24
    154a:	39 07       	cpc	r19, r25
    154c:	54 f4       	brge	.+20     	; 0x1562 <moveY+0x38>
    154e:	8e e4       	ldi	r24, 0x4E	; 78
    1550:	0e 94 ab 09 	call	0x1356	; 0x1356 <turnRobot>
    1554:	8a 81       	ldd	r24, Y+2	; 0x02
    1556:	9b 81       	ldd	r25, Y+3	; 0x03
    1558:	98 01       	movw	r18, r16
    155a:	28 1b       	sub	r18, r24
    155c:	39 0b       	sbc	r19, r25
    155e:	c9 01       	movw	r24, r18
    1560:	07 c0       	rjmp	.+14     	; 0x1570 <moveY+0x46>
    1562:	83 e5       	ldi	r24, 0x53	; 83
    1564:	0e 94 ab 09 	call	0x1356	; 0x1356 <turnRobot>
    1568:	8a 81       	ldd	r24, Y+2	; 0x02
    156a:	9b 81       	ldd	r25, Y+3	; 0x03
    156c:	80 1b       	sub	r24, r16
    156e:	91 0b       	sbc	r25, r17
    1570:	a7 01       	movw	r20, r14
    1572:	be 01       	movw	r22, r28
    1574:	0e 94 59 09 	call	0x12b2	; 0x12b2 <drive>
    1578:	df 91       	pop	r29
    157a:	cf 91       	pop	r28
    157c:	1f 91       	pop	r17
    157e:	0f 91       	pop	r16
    1580:	ff 90       	pop	r15
    1582:	ef 90       	pop	r14
    1584:	08 95       	ret

00001586 <warehouse>:
    1586:	2f 92       	push	r2
    1588:	3f 92       	push	r3
    158a:	4f 92       	push	r4
    158c:	5f 92       	push	r5
    158e:	6f 92       	push	r6
    1590:	7f 92       	push	r7
    1592:	8f 92       	push	r8
    1594:	9f 92       	push	r9
    1596:	af 92       	push	r10
    1598:	bf 92       	push	r11
    159a:	cf 92       	push	r12
    159c:	df 92       	push	r13
    159e:	ef 92       	push	r14
    15a0:	ff 92       	push	r15
    15a2:	0f 93       	push	r16
    15a4:	1f 93       	push	r17
    15a6:	cf 93       	push	r28
    15a8:	df 93       	push	r29
    15aa:	cd b7       	in	r28, 0x3d	; 61
    15ac:	de b7       	in	r29, 0x3e	; 62
    15ae:	e7 97       	sbiw	r28, 0x37	; 55
    15b0:	0f b6       	in	r0, 0x3f	; 63
    15b2:	f8 94       	cli
    15b4:	de bf       	out	0x3e, r29	; 62
    15b6:	0f be       	out	0x3f, r0	; 63
    15b8:	cd bf       	out	0x3d, r28	; 61
    15ba:	f8 2e       	mov	r15, r24
    15bc:	8b 01       	movw	r16, r22
    15be:	87 e5       	ldi	r24, 0x57	; 87
    15c0:	8d 83       	std	Y+5, r24	; 0x05
    15c2:	1a 82       	std	Y+2, r1	; 0x02
    15c4:	19 82       	std	Y+1, r1	; 0x01
    15c6:	81 e0       	ldi	r24, 0x01	; 1
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	9c 83       	std	Y+4, r25	; 0x04
    15cc:	8b 83       	std	Y+3, r24	; 0x03
    15ce:	80 e0       	ldi	r24, 0x00	; 0
    15d0:	90 e0       	ldi	r25, 0x00	; 0
    15d2:	c1 2c       	mov	r12, r1
    15d4:	d1 2c       	mov	r13, r1
    15d6:	0c c0       	rjmp	.+24     	; 0x15f0 <warehouse+0x6a>
    15d8:	f8 01       	movw	r30, r16
    15da:	e8 0f       	add	r30, r24
    15dc:	f9 1f       	adc	r31, r25
    15de:	ee 5a       	subi	r30, 0xAE	; 174
    15e0:	ff 4f       	sbci	r31, 0xFF	; 255
    15e2:	20 81       	ld	r18, Z
    15e4:	22 23       	and	r18, r18
    15e6:	19 f0       	breq	.+6      	; 0x15ee <warehouse+0x68>
    15e8:	2f ef       	ldi	r18, 0xFF	; 255
    15ea:	c2 1a       	sub	r12, r18
    15ec:	d2 0a       	sbc	r13, r18
    15ee:	01 96       	adiw	r24, 0x01	; 1
    15f0:	89 31       	cpi	r24, 0x19	; 25
    15f2:	91 05       	cpc	r25, r1
    15f4:	8c f3       	brlt	.-30     	; 0x15d8 <warehouse+0x52>
    15f6:	80 e0       	ldi	r24, 0x00	; 0
    15f8:	90 e0       	ldi	r25, 0x00	; 0
    15fa:	18 c0       	rjmp	.+48     	; 0x162c <warehouse+0xa6>
    15fc:	d8 01       	movw	r26, r16
    15fe:	a8 0f       	add	r26, r24
    1600:	b9 1f       	adc	r27, r25
    1602:	fd 01       	movw	r30, r26
    1604:	ee 5a       	subi	r30, 0xAE	; 174
    1606:	ff 4f       	sbci	r31, 0xFF	; 255
    1608:	20 81       	ld	r18, Z
    160a:	e6 e0       	ldi	r30, 0x06	; 6
    160c:	f0 e0       	ldi	r31, 0x00	; 0
    160e:	ec 0f       	add	r30, r28
    1610:	fd 1f       	adc	r31, r29
    1612:	e8 0f       	add	r30, r24
    1614:	f9 1f       	adc	r31, r25
    1616:	20 83       	st	Z, r18
    1618:	d9 96       	adiw	r26, 0x39	; 57
    161a:	2c 91       	ld	r18, X
    161c:	ef e1       	ldi	r30, 0x1F	; 31
    161e:	f0 e0       	ldi	r31, 0x00	; 0
    1620:	ec 0f       	add	r30, r28
    1622:	fd 1f       	adc	r31, r29
    1624:	e8 0f       	add	r30, r24
    1626:	f9 1f       	adc	r31, r25
    1628:	20 83       	st	Z, r18
    162a:	01 96       	adiw	r24, 0x01	; 1
    162c:	8c 15       	cp	r24, r12
    162e:	9d 05       	cpc	r25, r13
    1630:	2c f3       	brlt	.-54     	; 0x15fc <warehouse+0x76>
    1632:	0e 94 32 13 	call	0x2664	; 0x2664 <clear>
    1636:	a6 01       	movw	r20, r12
    1638:	be 01       	movw	r22, r28
    163a:	61 5e       	subi	r22, 0xE1	; 225
    163c:	7f 4f       	sbci	r23, 0xFF	; 255
    163e:	ce 01       	movw	r24, r28
    1640:	06 96       	adiw	r24, 0x06	; 6
    1642:	0e 94 0d 09 	call	0x121a	; 0x121a <bubbleSort>
    1646:	ff 20       	and	r15, r15
    1648:	09 f4       	brne	.+2      	; 0x164c <warehouse+0xc6>
    164a:	85 c0       	rjmp	.+266    	; 0x1756 <warehouse+0x1d0>
    164c:	9b c0       	rjmp	.+310    	; 0x1784 <warehouse+0x1fe>
    164e:	b1 01       	movw	r22, r2
    1650:	03 2c       	mov	r0, r3
    1652:	00 0c       	add	r0, r0
    1654:	88 0b       	sbc	r24, r24
    1656:	99 0b       	sbc	r25, r25
    1658:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
    165c:	2b 01       	movw	r4, r22
    165e:	3c 01       	movw	r6, r24
    1660:	b6 01       	movw	r22, r12
    1662:	0d 2c       	mov	r0, r13
    1664:	00 0c       	add	r0, r0
    1666:	88 0b       	sbc	r24, r24
    1668:	99 0b       	sbc	r25, r25
    166a:	0e 94 36 0d 	call	0x1a6c	; 0x1a6c <__floatsisf>
    166e:	4b 01       	movw	r8, r22
    1670:	5c 01       	movw	r10, r24
    1672:	0f 2e       	mov	r0, r31
    1674:	f6 e0       	ldi	r31, 0x06	; 6
    1676:	ef 2e       	mov	r14, r31
    1678:	f1 2c       	mov	r15, r1
    167a:	f0 2d       	mov	r31, r0
    167c:	ec 0e       	add	r14, r28
    167e:	fd 1e       	adc	r15, r29
    1680:	e2 0c       	add	r14, r2
    1682:	f3 1c       	adc	r15, r3
    1684:	f7 01       	movw	r30, r14
    1686:	80 81       	ld	r24, Z
    1688:	a8 01       	movw	r20, r16
    168a:	be 01       	movw	r22, r28
    168c:	6f 5f       	subi	r22, 0xFF	; 255
    168e:	7f 4f       	sbci	r23, 0xFF	; 255
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	0e 94 67 0a 	call	0x14ce	; 0x14ce <moveX>
    1696:	f7 01       	movw	r30, r14
    1698:	80 81       	ld	r24, Z
    169a:	90 e0       	ldi	r25, 0x00	; 0
    169c:	9a 83       	std	Y+2, r25	; 0x02
    169e:	89 83       	std	Y+1, r24	; 0x01
    16a0:	0f 2e       	mov	r0, r31
    16a2:	ff e1       	ldi	r31, 0x1F	; 31
    16a4:	ef 2e       	mov	r14, r31
    16a6:	f1 2c       	mov	r15, r1
    16a8:	f0 2d       	mov	r31, r0
    16aa:	ec 0e       	add	r14, r28
    16ac:	fd 1e       	adc	r15, r29
    16ae:	e2 0c       	add	r14, r2
    16b0:	f3 1c       	adc	r15, r3
    16b2:	f7 01       	movw	r30, r14
    16b4:	80 81       	ld	r24, Z
    16b6:	a8 01       	movw	r20, r16
    16b8:	be 01       	movw	r22, r28
    16ba:	6f 5f       	subi	r22, 0xFF	; 255
    16bc:	7f 4f       	sbci	r23, 0xFF	; 255
    16be:	90 e0       	ldi	r25, 0x00	; 0
    16c0:	0e 94 95 0a 	call	0x152a	; 0x152a <moveY>
    16c4:	f7 01       	movw	r30, r14
    16c6:	80 81       	ld	r24, Z
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	9c 83       	std	Y+4, r25	; 0x04
    16cc:	8b 83       	std	Y+3, r24	; 0x03
    16ce:	88 ee       	ldi	r24, 0xE8	; 232
    16d0:	93 e0       	ldi	r25, 0x03	; 3
    16d2:	0e 94 78 16 	call	0x2cf0	; 0x2cf0 <delay_ms>
    16d6:	0e 94 f5 02 	call	0x5ea	; 0x5ea <batteryPercentage>
    16da:	78 01       	movw	r14, r16
    16dc:	fc e6       	ldi	r31, 0x6C	; 108
    16de:	ef 0e       	add	r14, r31
    16e0:	f1 1c       	adc	r15, r1
    16e2:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <__fixunssfsi>
    16e6:	f7 01       	movw	r30, r14
    16e8:	60 83       	st	Z, r22
    16ea:	20 e0       	ldi	r18, 0x00	; 0
    16ec:	30 e0       	ldi	r19, 0x00	; 0
    16ee:	40 e8       	ldi	r20, 0x80	; 128
    16f0:	5f e3       	ldi	r21, 0x3F	; 63
    16f2:	c3 01       	movw	r24, r6
    16f4:	b2 01       	movw	r22, r4
    16f6:	0e 94 20 0c 	call	0x1840	; 0x1840 <__addsf3>
    16fa:	a5 01       	movw	r20, r10
    16fc:	94 01       	movw	r18, r8
    16fe:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__divsf3>
    1702:	20 e0       	ldi	r18, 0x00	; 0
    1704:	30 e0       	ldi	r19, 0x00	; 0
    1706:	48 ec       	ldi	r20, 0xC8	; 200
    1708:	52 e4       	ldi	r21, 0x42	; 66
    170a:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <__mulsf3>
    170e:	4b 01       	movw	r8, r22
    1710:	5c 01       	movw	r10, r24
    1712:	78 01       	movw	r14, r16
    1714:	fd e6       	ldi	r31, 0x6D	; 109
    1716:	ef 0e       	add	r14, r31
    1718:	f1 1c       	adc	r15, r1
    171a:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <__fixunssfsi>
    171e:	f7 01       	movw	r30, r14
    1720:	60 83       	st	Z, r22
    1722:	34 96       	adiw	r30, 0x04	; 4
    1724:	01 90       	ld	r0, Z+
    1726:	f0 81       	ld	r31, Z
    1728:	e0 2d       	mov	r30, r0
    172a:	c8 01       	movw	r24, r16
    172c:	09 95       	icall
    172e:	0e 94 f5 02 	call	0x5ea	; 0x5ea <batteryPercentage>
    1732:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <__fixsfsi>
    1736:	2b 01       	movw	r4, r22
    1738:	3c 01       	movw	r6, r24
    173a:	c5 01       	movw	r24, r10
    173c:	b4 01       	movw	r22, r8
    173e:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <__fixsfsi>
    1742:	dc 01       	movw	r26, r24
    1744:	cb 01       	movw	r24, r22
    1746:	42 e0       	ldi	r20, 0x02	; 2
    1748:	b2 01       	movw	r22, r4
    174a:	0e 94 17 03 	call	0x62e	; 0x62e <updateDisplay>
    174e:	ff ef       	ldi	r31, 0xFF	; 255
    1750:	2f 1a       	sub	r2, r31
    1752:	3f 0a       	sbc	r3, r31
    1754:	02 c0       	rjmp	.+4      	; 0x175a <warehouse+0x1d4>
    1756:	21 2c       	mov	r2, r1
    1758:	31 2c       	mov	r3, r1
    175a:	2c 14       	cp	r2, r12
    175c:	3d 04       	cpc	r3, r13
    175e:	0c f4       	brge	.+2      	; 0x1762 <warehouse+0x1dc>
    1760:	76 cf       	rjmp	.-276    	; 0x164e <warehouse+0xc8>
    1762:	a8 01       	movw	r20, r16
    1764:	be 01       	movw	r22, r28
    1766:	6f 5f       	subi	r22, 0xFF	; 255
    1768:	7f 4f       	sbci	r23, 0xFF	; 255
    176a:	81 e0       	ldi	r24, 0x01	; 1
    176c:	90 e0       	ldi	r25, 0x00	; 0
    176e:	0e 94 95 0a 	call	0x152a	; 0x152a <moveY>
    1772:	a8 01       	movw	r20, r16
    1774:	be 01       	movw	r22, r28
    1776:	6f 5f       	subi	r22, 0xFF	; 255
    1778:	7f 4f       	sbci	r23, 0xFF	; 255
    177a:	81 e0       	ldi	r24, 0x01	; 1
    177c:	90 e0       	ldi	r25, 0x00	; 0
    177e:	0e 94 67 0a 	call	0x14ce	; 0x14ce <moveX>
    1782:	44 c0       	rjmp	.+136    	; 0x180c <warehouse+0x286>
    1784:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <charged.2339>
    1788:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <charged.2339+0x1>
    178c:	89 2b       	or	r24, r25
    178e:	29 f5       	brne	.+74     	; 0x17da <warehouse+0x254>
    1790:	a8 01       	movw	r20, r16
    1792:	be 01       	movw	r22, r28
    1794:	6f 5f       	subi	r22, 0xFF	; 255
    1796:	7f 4f       	sbci	r23, 0xFF	; 255
    1798:	81 e0       	ldi	r24, 0x01	; 1
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	0e 94 59 09 	call	0x12b2	; 0x12b2 <drive>
    17a0:	82 e5       	ldi	r24, 0x52	; 82
    17a2:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    17a6:	a8 01       	movw	r20, r16
    17a8:	be 01       	movw	r22, r28
    17aa:	6f 5f       	subi	r22, 0xFF	; 255
    17ac:	7f 4f       	sbci	r23, 0xFF	; 255
    17ae:	83 e0       	ldi	r24, 0x03	; 3
    17b0:	90 e0       	ldi	r25, 0x00	; 0
    17b2:	0e 94 59 09 	call	0x12b2	; 0x12b2 <drive>
    17b6:	82 e5       	ldi	r24, 0x52	; 82
    17b8:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    17bc:	a8 01       	movw	r20, r16
    17be:	be 01       	movw	r22, r28
    17c0:	6f 5f       	subi	r22, 0xFF	; 255
    17c2:	7f 4f       	sbci	r23, 0xFF	; 255
    17c4:	81 e0       	ldi	r24, 0x01	; 1
    17c6:	90 e0       	ldi	r25, 0x00	; 0
    17c8:	0e 94 59 09 	call	0x12b2	; 0x12b2 <drive>
    17cc:	81 e0       	ldi	r24, 0x01	; 1
    17ce:	90 e0       	ldi	r25, 0x00	; 0
    17d0:	90 93 0b 02 	sts	0x020B, r25	; 0x80020b <charged.2339+0x1>
    17d4:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <charged.2339>
    17d8:	19 c0       	rjmp	.+50     	; 0x180c <warehouse+0x286>
    17da:	84 e5       	ldi	r24, 0x54	; 84
    17dc:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    17e0:	a8 01       	movw	r20, r16
    17e2:	be 01       	movw	r22, r28
    17e4:	6f 5f       	subi	r22, 0xFF	; 255
    17e6:	7f 4f       	sbci	r23, 0xFF	; 255
    17e8:	81 e0       	ldi	r24, 0x01	; 1
    17ea:	90 e0       	ldi	r25, 0x00	; 0
    17ec:	0e 94 59 09 	call	0x12b2	; 0x12b2 <drive>
    17f0:	8c e4       	ldi	r24, 0x4C	; 76
    17f2:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    17f6:	a8 01       	movw	r20, r16
    17f8:	be 01       	movw	r22, r28
    17fa:	6f 5f       	subi	r22, 0xFF	; 255
    17fc:	7f 4f       	sbci	r23, 0xFF	; 255
    17fe:	83 e0       	ldi	r24, 0x03	; 3
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	0e 94 59 09 	call	0x12b2	; 0x12b2 <drive>
    1806:	8c e4       	ldi	r24, 0x4C	; 76
    1808:	0e 94 5f 05 	call	0xabe	; 0xabe <motorControl>
    180c:	e7 96       	adiw	r28, 0x37	; 55
    180e:	0f b6       	in	r0, 0x3f	; 63
    1810:	f8 94       	cli
    1812:	de bf       	out	0x3e, r29	; 62
    1814:	0f be       	out	0x3f, r0	; 63
    1816:	cd bf       	out	0x3d, r28	; 61
    1818:	df 91       	pop	r29
    181a:	cf 91       	pop	r28
    181c:	1f 91       	pop	r17
    181e:	0f 91       	pop	r16
    1820:	ff 90       	pop	r15
    1822:	ef 90       	pop	r14
    1824:	df 90       	pop	r13
    1826:	cf 90       	pop	r12
    1828:	bf 90       	pop	r11
    182a:	af 90       	pop	r10
    182c:	9f 90       	pop	r9
    182e:	8f 90       	pop	r8
    1830:	7f 90       	pop	r7
    1832:	6f 90       	pop	r6
    1834:	5f 90       	pop	r5
    1836:	4f 90       	pop	r4
    1838:	3f 90       	pop	r3
    183a:	2f 90       	pop	r2
    183c:	08 95       	ret

0000183e <__subsf3>:
    183e:	50 58       	subi	r21, 0x80	; 128

00001840 <__addsf3>:
    1840:	bb 27       	eor	r27, r27
    1842:	aa 27       	eor	r26, r26
    1844:	0e 94 37 0c 	call	0x186e	; 0x186e <__addsf3x>
    1848:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__fp_round>
    184c:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <__fp_pscA>
    1850:	38 f0       	brcs	.+14     	; 0x1860 <__addsf3+0x20>
    1852:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <__fp_pscB>
    1856:	20 f0       	brcs	.+8      	; 0x1860 <__addsf3+0x20>
    1858:	39 f4       	brne	.+14     	; 0x1868 <__addsf3+0x28>
    185a:	9f 3f       	cpi	r25, 0xFF	; 255
    185c:	19 f4       	brne	.+6      	; 0x1864 <__addsf3+0x24>
    185e:	26 f4       	brtc	.+8      	; 0x1868 <__addsf3+0x28>
    1860:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <__fp_nan>
    1864:	0e f4       	brtc	.+2      	; 0x1868 <__addsf3+0x28>
    1866:	e0 95       	com	r30
    1868:	e7 fb       	bst	r30, 7
    186a:	0c 94 71 0d 	jmp	0x1ae2	; 0x1ae2 <__fp_inf>

0000186e <__addsf3x>:
    186e:	e9 2f       	mov	r30, r25
    1870:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <__fp_split3>
    1874:	58 f3       	brcs	.-42     	; 0x184c <__addsf3+0xc>
    1876:	ba 17       	cp	r27, r26
    1878:	62 07       	cpc	r22, r18
    187a:	73 07       	cpc	r23, r19
    187c:	84 07       	cpc	r24, r20
    187e:	95 07       	cpc	r25, r21
    1880:	20 f0       	brcs	.+8      	; 0x188a <__addsf3x+0x1c>
    1882:	79 f4       	brne	.+30     	; 0x18a2 <__addsf3x+0x34>
    1884:	a6 f5       	brtc	.+104    	; 0x18ee <__addsf3x+0x80>
    1886:	0c 94 bb 0d 	jmp	0x1b76	; 0x1b76 <__fp_zero>
    188a:	0e f4       	brtc	.+2      	; 0x188e <__addsf3x+0x20>
    188c:	e0 95       	com	r30
    188e:	0b 2e       	mov	r0, r27
    1890:	ba 2f       	mov	r27, r26
    1892:	a0 2d       	mov	r26, r0
    1894:	0b 01       	movw	r0, r22
    1896:	b9 01       	movw	r22, r18
    1898:	90 01       	movw	r18, r0
    189a:	0c 01       	movw	r0, r24
    189c:	ca 01       	movw	r24, r20
    189e:	a0 01       	movw	r20, r0
    18a0:	11 24       	eor	r1, r1
    18a2:	ff 27       	eor	r31, r31
    18a4:	59 1b       	sub	r21, r25
    18a6:	99 f0       	breq	.+38     	; 0x18ce <__addsf3x+0x60>
    18a8:	59 3f       	cpi	r21, 0xF9	; 249
    18aa:	50 f4       	brcc	.+20     	; 0x18c0 <__addsf3x+0x52>
    18ac:	50 3e       	cpi	r21, 0xE0	; 224
    18ae:	68 f1       	brcs	.+90     	; 0x190a <__addsf3x+0x9c>
    18b0:	1a 16       	cp	r1, r26
    18b2:	f0 40       	sbci	r31, 0x00	; 0
    18b4:	a2 2f       	mov	r26, r18
    18b6:	23 2f       	mov	r18, r19
    18b8:	34 2f       	mov	r19, r20
    18ba:	44 27       	eor	r20, r20
    18bc:	58 5f       	subi	r21, 0xF8	; 248
    18be:	f3 cf       	rjmp	.-26     	; 0x18a6 <__addsf3x+0x38>
    18c0:	46 95       	lsr	r20
    18c2:	37 95       	ror	r19
    18c4:	27 95       	ror	r18
    18c6:	a7 95       	ror	r26
    18c8:	f0 40       	sbci	r31, 0x00	; 0
    18ca:	53 95       	inc	r21
    18cc:	c9 f7       	brne	.-14     	; 0x18c0 <__addsf3x+0x52>
    18ce:	7e f4       	brtc	.+30     	; 0x18ee <__addsf3x+0x80>
    18d0:	1f 16       	cp	r1, r31
    18d2:	ba 0b       	sbc	r27, r26
    18d4:	62 0b       	sbc	r22, r18
    18d6:	73 0b       	sbc	r23, r19
    18d8:	84 0b       	sbc	r24, r20
    18da:	ba f0       	brmi	.+46     	; 0x190a <__addsf3x+0x9c>
    18dc:	91 50       	subi	r25, 0x01	; 1
    18de:	a1 f0       	breq	.+40     	; 0x1908 <__addsf3x+0x9a>
    18e0:	ff 0f       	add	r31, r31
    18e2:	bb 1f       	adc	r27, r27
    18e4:	66 1f       	adc	r22, r22
    18e6:	77 1f       	adc	r23, r23
    18e8:	88 1f       	adc	r24, r24
    18ea:	c2 f7       	brpl	.-16     	; 0x18dc <__addsf3x+0x6e>
    18ec:	0e c0       	rjmp	.+28     	; 0x190a <__addsf3x+0x9c>
    18ee:	ba 0f       	add	r27, r26
    18f0:	62 1f       	adc	r22, r18
    18f2:	73 1f       	adc	r23, r19
    18f4:	84 1f       	adc	r24, r20
    18f6:	48 f4       	brcc	.+18     	; 0x190a <__addsf3x+0x9c>
    18f8:	87 95       	ror	r24
    18fa:	77 95       	ror	r23
    18fc:	67 95       	ror	r22
    18fe:	b7 95       	ror	r27
    1900:	f7 95       	ror	r31
    1902:	9e 3f       	cpi	r25, 0xFE	; 254
    1904:	08 f0       	brcs	.+2      	; 0x1908 <__addsf3x+0x9a>
    1906:	b0 cf       	rjmp	.-160    	; 0x1868 <__addsf3+0x28>
    1908:	93 95       	inc	r25
    190a:	88 0f       	add	r24, r24
    190c:	08 f0       	brcs	.+2      	; 0x1910 <__addsf3x+0xa2>
    190e:	99 27       	eor	r25, r25
    1910:	ee 0f       	add	r30, r30
    1912:	97 95       	ror	r25
    1914:	87 95       	ror	r24
    1916:	08 95       	ret

00001918 <__divsf3>:
    1918:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__divsf3x>
    191c:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__fp_round>
    1920:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <__fp_pscB>
    1924:	58 f0       	brcs	.+22     	; 0x193c <__divsf3+0x24>
    1926:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <__fp_pscA>
    192a:	40 f0       	brcs	.+16     	; 0x193c <__divsf3+0x24>
    192c:	29 f4       	brne	.+10     	; 0x1938 <__divsf3+0x20>
    192e:	5f 3f       	cpi	r21, 0xFF	; 255
    1930:	29 f0       	breq	.+10     	; 0x193c <__divsf3+0x24>
    1932:	0c 94 71 0d 	jmp	0x1ae2	; 0x1ae2 <__fp_inf>
    1936:	51 11       	cpse	r21, r1
    1938:	0c 94 bc 0d 	jmp	0x1b78	; 0x1b78 <__fp_szero>
    193c:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <__fp_nan>

00001940 <__divsf3x>:
    1940:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <__fp_split3>
    1944:	68 f3       	brcs	.-38     	; 0x1920 <__divsf3+0x8>

00001946 <__divsf3_pse>:
    1946:	99 23       	and	r25, r25
    1948:	b1 f3       	breq	.-20     	; 0x1936 <__divsf3+0x1e>
    194a:	55 23       	and	r21, r21
    194c:	91 f3       	breq	.-28     	; 0x1932 <__divsf3+0x1a>
    194e:	95 1b       	sub	r25, r21
    1950:	55 0b       	sbc	r21, r21
    1952:	bb 27       	eor	r27, r27
    1954:	aa 27       	eor	r26, r26
    1956:	62 17       	cp	r22, r18
    1958:	73 07       	cpc	r23, r19
    195a:	84 07       	cpc	r24, r20
    195c:	38 f0       	brcs	.+14     	; 0x196c <__divsf3_pse+0x26>
    195e:	9f 5f       	subi	r25, 0xFF	; 255
    1960:	5f 4f       	sbci	r21, 0xFF	; 255
    1962:	22 0f       	add	r18, r18
    1964:	33 1f       	adc	r19, r19
    1966:	44 1f       	adc	r20, r20
    1968:	aa 1f       	adc	r26, r26
    196a:	a9 f3       	breq	.-22     	; 0x1956 <__divsf3_pse+0x10>
    196c:	35 d0       	rcall	.+106    	; 0x19d8 <__divsf3_pse+0x92>
    196e:	0e 2e       	mov	r0, r30
    1970:	3a f0       	brmi	.+14     	; 0x1980 <__divsf3_pse+0x3a>
    1972:	e0 e8       	ldi	r30, 0x80	; 128
    1974:	32 d0       	rcall	.+100    	; 0x19da <__divsf3_pse+0x94>
    1976:	91 50       	subi	r25, 0x01	; 1
    1978:	50 40       	sbci	r21, 0x00	; 0
    197a:	e6 95       	lsr	r30
    197c:	00 1c       	adc	r0, r0
    197e:	ca f7       	brpl	.-14     	; 0x1972 <__divsf3_pse+0x2c>
    1980:	2b d0       	rcall	.+86     	; 0x19d8 <__divsf3_pse+0x92>
    1982:	fe 2f       	mov	r31, r30
    1984:	29 d0       	rcall	.+82     	; 0x19d8 <__divsf3_pse+0x92>
    1986:	66 0f       	add	r22, r22
    1988:	77 1f       	adc	r23, r23
    198a:	88 1f       	adc	r24, r24
    198c:	bb 1f       	adc	r27, r27
    198e:	26 17       	cp	r18, r22
    1990:	37 07       	cpc	r19, r23
    1992:	48 07       	cpc	r20, r24
    1994:	ab 07       	cpc	r26, r27
    1996:	b0 e8       	ldi	r27, 0x80	; 128
    1998:	09 f0       	breq	.+2      	; 0x199c <__divsf3_pse+0x56>
    199a:	bb 0b       	sbc	r27, r27
    199c:	80 2d       	mov	r24, r0
    199e:	bf 01       	movw	r22, r30
    19a0:	ff 27       	eor	r31, r31
    19a2:	93 58       	subi	r25, 0x83	; 131
    19a4:	5f 4f       	sbci	r21, 0xFF	; 255
    19a6:	3a f0       	brmi	.+14     	; 0x19b6 <__divsf3_pse+0x70>
    19a8:	9e 3f       	cpi	r25, 0xFE	; 254
    19aa:	51 05       	cpc	r21, r1
    19ac:	78 f0       	brcs	.+30     	; 0x19cc <__divsf3_pse+0x86>
    19ae:	0c 94 71 0d 	jmp	0x1ae2	; 0x1ae2 <__fp_inf>
    19b2:	0c 94 bc 0d 	jmp	0x1b78	; 0x1b78 <__fp_szero>
    19b6:	5f 3f       	cpi	r21, 0xFF	; 255
    19b8:	e4 f3       	brlt	.-8      	; 0x19b2 <__divsf3_pse+0x6c>
    19ba:	98 3e       	cpi	r25, 0xE8	; 232
    19bc:	d4 f3       	brlt	.-12     	; 0x19b2 <__divsf3_pse+0x6c>
    19be:	86 95       	lsr	r24
    19c0:	77 95       	ror	r23
    19c2:	67 95       	ror	r22
    19c4:	b7 95       	ror	r27
    19c6:	f7 95       	ror	r31
    19c8:	9f 5f       	subi	r25, 0xFF	; 255
    19ca:	c9 f7       	brne	.-14     	; 0x19be <__divsf3_pse+0x78>
    19cc:	88 0f       	add	r24, r24
    19ce:	91 1d       	adc	r25, r1
    19d0:	96 95       	lsr	r25
    19d2:	87 95       	ror	r24
    19d4:	97 f9       	bld	r25, 7
    19d6:	08 95       	ret
    19d8:	e1 e0       	ldi	r30, 0x01	; 1
    19da:	66 0f       	add	r22, r22
    19dc:	77 1f       	adc	r23, r23
    19de:	88 1f       	adc	r24, r24
    19e0:	bb 1f       	adc	r27, r27
    19e2:	62 17       	cp	r22, r18
    19e4:	73 07       	cpc	r23, r19
    19e6:	84 07       	cpc	r24, r20
    19e8:	ba 07       	cpc	r27, r26
    19ea:	20 f0       	brcs	.+8      	; 0x19f4 <__divsf3_pse+0xae>
    19ec:	62 1b       	sub	r22, r18
    19ee:	73 0b       	sbc	r23, r19
    19f0:	84 0b       	sbc	r24, r20
    19f2:	ba 0b       	sbc	r27, r26
    19f4:	ee 1f       	adc	r30, r30
    19f6:	88 f7       	brcc	.-30     	; 0x19da <__divsf3_pse+0x94>
    19f8:	e0 95       	com	r30
    19fa:	08 95       	ret

000019fc <__fixsfsi>:
    19fc:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <__fixunssfsi>
    1a00:	68 94       	set
    1a02:	b1 11       	cpse	r27, r1
    1a04:	0c 94 bc 0d 	jmp	0x1b78	; 0x1b78 <__fp_szero>
    1a08:	08 95       	ret

00001a0a <__fixunssfsi>:
    1a0a:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <__fp_splitA>
    1a0e:	88 f0       	brcs	.+34     	; 0x1a32 <__fixunssfsi+0x28>
    1a10:	9f 57       	subi	r25, 0x7F	; 127
    1a12:	98 f0       	brcs	.+38     	; 0x1a3a <__fixunssfsi+0x30>
    1a14:	b9 2f       	mov	r27, r25
    1a16:	99 27       	eor	r25, r25
    1a18:	b7 51       	subi	r27, 0x17	; 23
    1a1a:	b0 f0       	brcs	.+44     	; 0x1a48 <__fixunssfsi+0x3e>
    1a1c:	e1 f0       	breq	.+56     	; 0x1a56 <__fixunssfsi+0x4c>
    1a1e:	66 0f       	add	r22, r22
    1a20:	77 1f       	adc	r23, r23
    1a22:	88 1f       	adc	r24, r24
    1a24:	99 1f       	adc	r25, r25
    1a26:	1a f0       	brmi	.+6      	; 0x1a2e <__fixunssfsi+0x24>
    1a28:	ba 95       	dec	r27
    1a2a:	c9 f7       	brne	.-14     	; 0x1a1e <__fixunssfsi+0x14>
    1a2c:	14 c0       	rjmp	.+40     	; 0x1a56 <__fixunssfsi+0x4c>
    1a2e:	b1 30       	cpi	r27, 0x01	; 1
    1a30:	91 f0       	breq	.+36     	; 0x1a56 <__fixunssfsi+0x4c>
    1a32:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <__fp_zero>
    1a36:	b1 e0       	ldi	r27, 0x01	; 1
    1a38:	08 95       	ret
    1a3a:	0c 94 bb 0d 	jmp	0x1b76	; 0x1b76 <__fp_zero>
    1a3e:	67 2f       	mov	r22, r23
    1a40:	78 2f       	mov	r23, r24
    1a42:	88 27       	eor	r24, r24
    1a44:	b8 5f       	subi	r27, 0xF8	; 248
    1a46:	39 f0       	breq	.+14     	; 0x1a56 <__fixunssfsi+0x4c>
    1a48:	b9 3f       	cpi	r27, 0xF9	; 249
    1a4a:	cc f3       	brlt	.-14     	; 0x1a3e <__fixunssfsi+0x34>
    1a4c:	86 95       	lsr	r24
    1a4e:	77 95       	ror	r23
    1a50:	67 95       	ror	r22
    1a52:	b3 95       	inc	r27
    1a54:	d9 f7       	brne	.-10     	; 0x1a4c <__fixunssfsi+0x42>
    1a56:	3e f4       	brtc	.+14     	; 0x1a66 <__fixunssfsi+0x5c>
    1a58:	90 95       	com	r25
    1a5a:	80 95       	com	r24
    1a5c:	70 95       	com	r23
    1a5e:	61 95       	neg	r22
    1a60:	7f 4f       	sbci	r23, 0xFF	; 255
    1a62:	8f 4f       	sbci	r24, 0xFF	; 255
    1a64:	9f 4f       	sbci	r25, 0xFF	; 255
    1a66:	08 95       	ret

00001a68 <__floatunsisf>:
    1a68:	e8 94       	clt
    1a6a:	09 c0       	rjmp	.+18     	; 0x1a7e <__floatsisf+0x12>

00001a6c <__floatsisf>:
    1a6c:	97 fb       	bst	r25, 7
    1a6e:	3e f4       	brtc	.+14     	; 0x1a7e <__floatsisf+0x12>
    1a70:	90 95       	com	r25
    1a72:	80 95       	com	r24
    1a74:	70 95       	com	r23
    1a76:	61 95       	neg	r22
    1a78:	7f 4f       	sbci	r23, 0xFF	; 255
    1a7a:	8f 4f       	sbci	r24, 0xFF	; 255
    1a7c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a7e:	99 23       	and	r25, r25
    1a80:	a9 f0       	breq	.+42     	; 0x1aac <__floatsisf+0x40>
    1a82:	f9 2f       	mov	r31, r25
    1a84:	96 e9       	ldi	r25, 0x96	; 150
    1a86:	bb 27       	eor	r27, r27
    1a88:	93 95       	inc	r25
    1a8a:	f6 95       	lsr	r31
    1a8c:	87 95       	ror	r24
    1a8e:	77 95       	ror	r23
    1a90:	67 95       	ror	r22
    1a92:	b7 95       	ror	r27
    1a94:	f1 11       	cpse	r31, r1
    1a96:	f8 cf       	rjmp	.-16     	; 0x1a88 <__floatsisf+0x1c>
    1a98:	fa f4       	brpl	.+62     	; 0x1ad8 <__floatsisf+0x6c>
    1a9a:	bb 0f       	add	r27, r27
    1a9c:	11 f4       	brne	.+4      	; 0x1aa2 <__floatsisf+0x36>
    1a9e:	60 ff       	sbrs	r22, 0
    1aa0:	1b c0       	rjmp	.+54     	; 0x1ad8 <__floatsisf+0x6c>
    1aa2:	6f 5f       	subi	r22, 0xFF	; 255
    1aa4:	7f 4f       	sbci	r23, 0xFF	; 255
    1aa6:	8f 4f       	sbci	r24, 0xFF	; 255
    1aa8:	9f 4f       	sbci	r25, 0xFF	; 255
    1aaa:	16 c0       	rjmp	.+44     	; 0x1ad8 <__floatsisf+0x6c>
    1aac:	88 23       	and	r24, r24
    1aae:	11 f0       	breq	.+4      	; 0x1ab4 <__floatsisf+0x48>
    1ab0:	96 e9       	ldi	r25, 0x96	; 150
    1ab2:	11 c0       	rjmp	.+34     	; 0x1ad6 <__floatsisf+0x6a>
    1ab4:	77 23       	and	r23, r23
    1ab6:	21 f0       	breq	.+8      	; 0x1ac0 <__floatsisf+0x54>
    1ab8:	9e e8       	ldi	r25, 0x8E	; 142
    1aba:	87 2f       	mov	r24, r23
    1abc:	76 2f       	mov	r23, r22
    1abe:	05 c0       	rjmp	.+10     	; 0x1aca <__floatsisf+0x5e>
    1ac0:	66 23       	and	r22, r22
    1ac2:	71 f0       	breq	.+28     	; 0x1ae0 <__floatsisf+0x74>
    1ac4:	96 e8       	ldi	r25, 0x86	; 134
    1ac6:	86 2f       	mov	r24, r22
    1ac8:	70 e0       	ldi	r23, 0x00	; 0
    1aca:	60 e0       	ldi	r22, 0x00	; 0
    1acc:	2a f0       	brmi	.+10     	; 0x1ad8 <__floatsisf+0x6c>
    1ace:	9a 95       	dec	r25
    1ad0:	66 0f       	add	r22, r22
    1ad2:	77 1f       	adc	r23, r23
    1ad4:	88 1f       	adc	r24, r24
    1ad6:	da f7       	brpl	.-10     	; 0x1ace <__floatsisf+0x62>
    1ad8:	88 0f       	add	r24, r24
    1ada:	96 95       	lsr	r25
    1adc:	87 95       	ror	r24
    1ade:	97 f9       	bld	r25, 7
    1ae0:	08 95       	ret

00001ae2 <__fp_inf>:
    1ae2:	97 f9       	bld	r25, 7
    1ae4:	9f 67       	ori	r25, 0x7F	; 127
    1ae6:	80 e8       	ldi	r24, 0x80	; 128
    1ae8:	70 e0       	ldi	r23, 0x00	; 0
    1aea:	60 e0       	ldi	r22, 0x00	; 0
    1aec:	08 95       	ret

00001aee <__fp_nan>:
    1aee:	9f ef       	ldi	r25, 0xFF	; 255
    1af0:	80 ec       	ldi	r24, 0xC0	; 192
    1af2:	08 95       	ret

00001af4 <__fp_pscA>:
    1af4:	00 24       	eor	r0, r0
    1af6:	0a 94       	dec	r0
    1af8:	16 16       	cp	r1, r22
    1afa:	17 06       	cpc	r1, r23
    1afc:	18 06       	cpc	r1, r24
    1afe:	09 06       	cpc	r0, r25
    1b00:	08 95       	ret

00001b02 <__fp_pscB>:
    1b02:	00 24       	eor	r0, r0
    1b04:	0a 94       	dec	r0
    1b06:	12 16       	cp	r1, r18
    1b08:	13 06       	cpc	r1, r19
    1b0a:	14 06       	cpc	r1, r20
    1b0c:	05 06       	cpc	r0, r21
    1b0e:	08 95       	ret

00001b10 <__fp_round>:
    1b10:	09 2e       	mov	r0, r25
    1b12:	03 94       	inc	r0
    1b14:	00 0c       	add	r0, r0
    1b16:	11 f4       	brne	.+4      	; 0x1b1c <__fp_round+0xc>
    1b18:	88 23       	and	r24, r24
    1b1a:	52 f0       	brmi	.+20     	; 0x1b30 <__fp_round+0x20>
    1b1c:	bb 0f       	add	r27, r27
    1b1e:	40 f4       	brcc	.+16     	; 0x1b30 <__fp_round+0x20>
    1b20:	bf 2b       	or	r27, r31
    1b22:	11 f4       	brne	.+4      	; 0x1b28 <__fp_round+0x18>
    1b24:	60 ff       	sbrs	r22, 0
    1b26:	04 c0       	rjmp	.+8      	; 0x1b30 <__fp_round+0x20>
    1b28:	6f 5f       	subi	r22, 0xFF	; 255
    1b2a:	7f 4f       	sbci	r23, 0xFF	; 255
    1b2c:	8f 4f       	sbci	r24, 0xFF	; 255
    1b2e:	9f 4f       	sbci	r25, 0xFF	; 255
    1b30:	08 95       	ret

00001b32 <__fp_split3>:
    1b32:	57 fd       	sbrc	r21, 7
    1b34:	90 58       	subi	r25, 0x80	; 128
    1b36:	44 0f       	add	r20, r20
    1b38:	55 1f       	adc	r21, r21
    1b3a:	59 f0       	breq	.+22     	; 0x1b52 <__fp_splitA+0x10>
    1b3c:	5f 3f       	cpi	r21, 0xFF	; 255
    1b3e:	71 f0       	breq	.+28     	; 0x1b5c <__fp_splitA+0x1a>
    1b40:	47 95       	ror	r20

00001b42 <__fp_splitA>:
    1b42:	88 0f       	add	r24, r24
    1b44:	97 fb       	bst	r25, 7
    1b46:	99 1f       	adc	r25, r25
    1b48:	61 f0       	breq	.+24     	; 0x1b62 <__fp_splitA+0x20>
    1b4a:	9f 3f       	cpi	r25, 0xFF	; 255
    1b4c:	79 f0       	breq	.+30     	; 0x1b6c <__fp_splitA+0x2a>
    1b4e:	87 95       	ror	r24
    1b50:	08 95       	ret
    1b52:	12 16       	cp	r1, r18
    1b54:	13 06       	cpc	r1, r19
    1b56:	14 06       	cpc	r1, r20
    1b58:	55 1f       	adc	r21, r21
    1b5a:	f2 cf       	rjmp	.-28     	; 0x1b40 <__fp_split3+0xe>
    1b5c:	46 95       	lsr	r20
    1b5e:	f1 df       	rcall	.-30     	; 0x1b42 <__fp_splitA>
    1b60:	08 c0       	rjmp	.+16     	; 0x1b72 <__fp_splitA+0x30>
    1b62:	16 16       	cp	r1, r22
    1b64:	17 06       	cpc	r1, r23
    1b66:	18 06       	cpc	r1, r24
    1b68:	99 1f       	adc	r25, r25
    1b6a:	f1 cf       	rjmp	.-30     	; 0x1b4e <__fp_splitA+0xc>
    1b6c:	86 95       	lsr	r24
    1b6e:	71 05       	cpc	r23, r1
    1b70:	61 05       	cpc	r22, r1
    1b72:	08 94       	sec
    1b74:	08 95       	ret

00001b76 <__fp_zero>:
    1b76:	e8 94       	clt

00001b78 <__fp_szero>:
    1b78:	bb 27       	eor	r27, r27
    1b7a:	66 27       	eor	r22, r22
    1b7c:	77 27       	eor	r23, r23
    1b7e:	cb 01       	movw	r24, r22
    1b80:	97 f9       	bld	r25, 7
    1b82:	08 95       	ret

00001b84 <__mulsf3>:
    1b84:	0e 94 d5 0d 	call	0x1baa	; 0x1baa <__mulsf3x>
    1b88:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__fp_round>
    1b8c:	0e 94 7a 0d 	call	0x1af4	; 0x1af4 <__fp_pscA>
    1b90:	38 f0       	brcs	.+14     	; 0x1ba0 <__mulsf3+0x1c>
    1b92:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <__fp_pscB>
    1b96:	20 f0       	brcs	.+8      	; 0x1ba0 <__mulsf3+0x1c>
    1b98:	95 23       	and	r25, r21
    1b9a:	11 f0       	breq	.+4      	; 0x1ba0 <__mulsf3+0x1c>
    1b9c:	0c 94 71 0d 	jmp	0x1ae2	; 0x1ae2 <__fp_inf>
    1ba0:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <__fp_nan>
    1ba4:	11 24       	eor	r1, r1
    1ba6:	0c 94 bc 0d 	jmp	0x1b78	; 0x1b78 <__fp_szero>

00001baa <__mulsf3x>:
    1baa:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <__fp_split3>
    1bae:	70 f3       	brcs	.-36     	; 0x1b8c <__mulsf3+0x8>

00001bb0 <__mulsf3_pse>:
    1bb0:	95 9f       	mul	r25, r21
    1bb2:	c1 f3       	breq	.-16     	; 0x1ba4 <__mulsf3+0x20>
    1bb4:	95 0f       	add	r25, r21
    1bb6:	50 e0       	ldi	r21, 0x00	; 0
    1bb8:	55 1f       	adc	r21, r21
    1bba:	62 9f       	mul	r22, r18
    1bbc:	f0 01       	movw	r30, r0
    1bbe:	72 9f       	mul	r23, r18
    1bc0:	bb 27       	eor	r27, r27
    1bc2:	f0 0d       	add	r31, r0
    1bc4:	b1 1d       	adc	r27, r1
    1bc6:	63 9f       	mul	r22, r19
    1bc8:	aa 27       	eor	r26, r26
    1bca:	f0 0d       	add	r31, r0
    1bcc:	b1 1d       	adc	r27, r1
    1bce:	aa 1f       	adc	r26, r26
    1bd0:	64 9f       	mul	r22, r20
    1bd2:	66 27       	eor	r22, r22
    1bd4:	b0 0d       	add	r27, r0
    1bd6:	a1 1d       	adc	r26, r1
    1bd8:	66 1f       	adc	r22, r22
    1bda:	82 9f       	mul	r24, r18
    1bdc:	22 27       	eor	r18, r18
    1bde:	b0 0d       	add	r27, r0
    1be0:	a1 1d       	adc	r26, r1
    1be2:	62 1f       	adc	r22, r18
    1be4:	73 9f       	mul	r23, r19
    1be6:	b0 0d       	add	r27, r0
    1be8:	a1 1d       	adc	r26, r1
    1bea:	62 1f       	adc	r22, r18
    1bec:	83 9f       	mul	r24, r19
    1bee:	a0 0d       	add	r26, r0
    1bf0:	61 1d       	adc	r22, r1
    1bf2:	22 1f       	adc	r18, r18
    1bf4:	74 9f       	mul	r23, r20
    1bf6:	33 27       	eor	r19, r19
    1bf8:	a0 0d       	add	r26, r0
    1bfa:	61 1d       	adc	r22, r1
    1bfc:	23 1f       	adc	r18, r19
    1bfe:	84 9f       	mul	r24, r20
    1c00:	60 0d       	add	r22, r0
    1c02:	21 1d       	adc	r18, r1
    1c04:	82 2f       	mov	r24, r18
    1c06:	76 2f       	mov	r23, r22
    1c08:	6a 2f       	mov	r22, r26
    1c0a:	11 24       	eor	r1, r1
    1c0c:	9f 57       	subi	r25, 0x7F	; 127
    1c0e:	50 40       	sbci	r21, 0x00	; 0
    1c10:	9a f0       	brmi	.+38     	; 0x1c38 <__mulsf3_pse+0x88>
    1c12:	f1 f0       	breq	.+60     	; 0x1c50 <__mulsf3_pse+0xa0>
    1c14:	88 23       	and	r24, r24
    1c16:	4a f0       	brmi	.+18     	; 0x1c2a <__mulsf3_pse+0x7a>
    1c18:	ee 0f       	add	r30, r30
    1c1a:	ff 1f       	adc	r31, r31
    1c1c:	bb 1f       	adc	r27, r27
    1c1e:	66 1f       	adc	r22, r22
    1c20:	77 1f       	adc	r23, r23
    1c22:	88 1f       	adc	r24, r24
    1c24:	91 50       	subi	r25, 0x01	; 1
    1c26:	50 40       	sbci	r21, 0x00	; 0
    1c28:	a9 f7       	brne	.-22     	; 0x1c14 <__mulsf3_pse+0x64>
    1c2a:	9e 3f       	cpi	r25, 0xFE	; 254
    1c2c:	51 05       	cpc	r21, r1
    1c2e:	80 f0       	brcs	.+32     	; 0x1c50 <__mulsf3_pse+0xa0>
    1c30:	0c 94 71 0d 	jmp	0x1ae2	; 0x1ae2 <__fp_inf>
    1c34:	0c 94 bc 0d 	jmp	0x1b78	; 0x1b78 <__fp_szero>
    1c38:	5f 3f       	cpi	r21, 0xFF	; 255
    1c3a:	e4 f3       	brlt	.-8      	; 0x1c34 <__mulsf3_pse+0x84>
    1c3c:	98 3e       	cpi	r25, 0xE8	; 232
    1c3e:	d4 f3       	brlt	.-12     	; 0x1c34 <__mulsf3_pse+0x84>
    1c40:	86 95       	lsr	r24
    1c42:	77 95       	ror	r23
    1c44:	67 95       	ror	r22
    1c46:	b7 95       	ror	r27
    1c48:	f7 95       	ror	r31
    1c4a:	e7 95       	ror	r30
    1c4c:	9f 5f       	subi	r25, 0xFF	; 255
    1c4e:	c1 f7       	brne	.-16     	; 0x1c40 <__mulsf3_pse+0x90>
    1c50:	fe 2b       	or	r31, r30
    1c52:	88 0f       	add	r24, r24
    1c54:	91 1d       	adc	r25, r1
    1c56:	96 95       	lsr	r25
    1c58:	87 95       	ror	r24
    1c5a:	97 f9       	bld	r25, 7
    1c5c:	08 95       	ret

00001c5e <_ZN15OrangutanAnalog7setModeEh.part.0>:
    1c5e:	ec e7       	ldi	r30, 0x7C	; 124
    1c60:	f0 e0       	ldi	r31, 0x00	; 0
    1c62:	80 81       	ld	r24, Z
    1c64:	8f 7d       	andi	r24, 0xDF	; 223
    1c66:	80 83       	st	Z, r24
    1c68:	08 95       	ret

00001c6a <_ZN15OrangutanAnalog7setModeEh>:
    1c6a:	81 11       	cpse	r24, r1
    1c6c:	03 c0       	rjmp	.+6      	; 0x1c74 <_ZN15OrangutanAnalog7setModeEh+0xa>
    1c6e:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <_ZN15OrangutanAnalog7setModeEh.part.0>
    1c72:	08 95       	ret
    1c74:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1c78:	80 62       	ori	r24, 0x20	; 32
    1c7a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1c7e:	08 95       	ret

00001c80 <_ZN15OrangutanAnalog7getModeEv>:
    1c80:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1c84:	85 fb       	bst	r24, 5
    1c86:	88 27       	eor	r24, r24
    1c88:	80 f9       	bld	r24, 0
    1c8a:	08 95       	ret

00001c8c <_ZN15OrangutanAnalog16conversionResultEv>:
    1c8c:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <_ZN15OrangutanAnalog7getModeEv>
    1c90:	88 23       	and	r24, r24
    1c92:	21 f0       	breq	.+8      	; 0x1c9c <_ZN15OrangutanAnalog16conversionResultEv+0x10>
    1c94:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1c98:	90 e0       	ldi	r25, 0x00	; 0
    1c9a:	08 95       	ret
    1c9c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    1ca0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    1ca4:	08 95       	ret

00001ca6 <_ZN15OrangutanAnalog15startConversionEhh>:
    1ca6:	80 32       	cpi	r24, 0x20	; 32
    1ca8:	a0 f4       	brcc	.+40     	; 0x1cd2 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
    1caa:	97 e8       	ldi	r25, 0x87	; 135
    1cac:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1cb0:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1cb4:	66 23       	and	r22, r22
    1cb6:	11 f0       	breq	.+4      	; 0x1cbc <_ZN15OrangutanAnalog15startConversionEhh+0x16>
    1cb8:	90 6c       	ori	r25, 0xC0	; 192
    1cba:	02 c0       	rjmp	.+4      	; 0x1cc0 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
    1cbc:	9f 77       	andi	r25, 0x7F	; 127
    1cbe:	90 64       	ori	r25, 0x40	; 64
    1cc0:	90 7e       	andi	r25, 0xE0	; 224
    1cc2:	98 2b       	or	r25, r24
    1cc4:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    1cc8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1ccc:	80 64       	ori	r24, 0x40	; 64
    1cce:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1cd2:	08 95       	ret

00001cd4 <_ZN15OrangutanAnalog4readEh>:
    1cd4:	60 e0       	ldi	r22, 0x00	; 0
    1cd6:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <_ZN15OrangutanAnalog15startConversionEhh>
    1cda:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1cde:	86 fd       	sbrc	r24, 6
    1ce0:	fc cf       	rjmp	.-8      	; 0x1cda <_ZN15OrangutanAnalog4readEh+0x6>
    1ce2:	0e 94 46 0e 	call	0x1c8c	; 0x1c8c <_ZN15OrangutanAnalog16conversionResultEv>
    1ce6:	08 95       	ret

00001ce8 <analog_read>:
    1ce8:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <_ZN15OrangutanAnalog4readEh>
    1cec:	08 95       	ret

00001cee <_ZN15OrangutanAnalog11readAverageEhj>:
    1cee:	a0 e0       	ldi	r26, 0x00	; 0
    1cf0:	b0 e0       	ldi	r27, 0x00	; 0
    1cf2:	ed e7       	ldi	r30, 0x7D	; 125
    1cf4:	fe e0       	ldi	r31, 0x0E	; 14
    1cf6:	0c 94 c4 1c 	jmp	0x3988	; 0x3988 <__prologue_saves__+0x14>
    1cfa:	eb 01       	movw	r28, r22
    1cfc:	60 e0       	ldi	r22, 0x00	; 0
    1cfe:	0e 94 53 0e 	call	0x1ca6	; 0x1ca6 <_ZN15OrangutanAnalog15startConversionEhh>
    1d02:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1d06:	86 fd       	sbrc	r24, 6
    1d08:	fc cf       	rjmp	.-8      	; 0x1d02 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
    1d0a:	8e 01       	movw	r16, r28
    1d0c:	c1 2c       	mov	r12, r1
    1d0e:	d1 2c       	mov	r13, r1
    1d10:	76 01       	movw	r14, r12
    1d12:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1d16:	80 64       	ori	r24, 0x40	; 64
    1d18:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1d1c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    1d20:	86 fd       	sbrc	r24, 6
    1d22:	fc cf       	rjmp	.-8      	; 0x1d1c <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
    1d24:	0e 94 46 0e 	call	0x1c8c	; 0x1c8c <_ZN15OrangutanAnalog16conversionResultEv>
    1d28:	c8 0e       	add	r12, r24
    1d2a:	d9 1e       	adc	r13, r25
    1d2c:	e1 1c       	adc	r14, r1
    1d2e:	f1 1c       	adc	r15, r1
    1d30:	01 50       	subi	r16, 0x01	; 1
    1d32:	11 09       	sbc	r17, r1
    1d34:	01 15       	cp	r16, r1
    1d36:	11 05       	cpc	r17, r1
    1d38:	61 f7       	brne	.-40     	; 0x1d12 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
    1d3a:	ce 01       	movw	r24, r28
    1d3c:	96 95       	lsr	r25
    1d3e:	87 95       	ror	r24
    1d40:	c0 34       	cpi	r28, 0x40	; 64
    1d42:	d1 05       	cpc	r29, r1
    1d44:	38 f4       	brcc	.+14     	; 0x1d54 <_ZN15OrangutanAnalog11readAverageEhj+0x66>
    1d46:	8c 0d       	add	r24, r12
    1d48:	9d 1d       	adc	r25, r13
    1d4a:	be 01       	movw	r22, r28
    1d4c:	0e 94 29 1c 	call	0x3852	; 0x3852 <__udivmodhi4>
    1d50:	cb 01       	movw	r24, r22
    1d52:	0e c0       	rjmp	.+28     	; 0x1d70 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
    1d54:	a7 01       	movw	r20, r14
    1d56:	96 01       	movw	r18, r12
    1d58:	28 0f       	add	r18, r24
    1d5a:	39 1f       	adc	r19, r25
    1d5c:	41 1d       	adc	r20, r1
    1d5e:	51 1d       	adc	r21, r1
    1d60:	ca 01       	movw	r24, r20
    1d62:	b9 01       	movw	r22, r18
    1d64:	9e 01       	movw	r18, r28
    1d66:	40 e0       	ldi	r20, 0x00	; 0
    1d68:	50 e0       	ldi	r21, 0x00	; 0
    1d6a:	0e 94 51 1c 	call	0x38a2	; 0x38a2 <__udivmodsi4>
    1d6e:	c9 01       	movw	r24, r18
    1d70:	cd b7       	in	r28, 0x3d	; 61
    1d72:	de b7       	in	r29, 0x3e	; 62
    1d74:	e8 e0       	ldi	r30, 0x08	; 8
    1d76:	0c 94 e0 1c 	jmp	0x39c0	; 0x39c0 <__epilogue_restores__+0x14>

00001d7a <_ZN15OrangutanAnalog12toMillivoltsEj>:
    1d7a:	cf 92       	push	r12
    1d7c:	df 92       	push	r13
    1d7e:	ef 92       	push	r14
    1d80:	ff 92       	push	r15
    1d82:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1d86:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1d8a:	9c 01       	movw	r18, r24
    1d8c:	0e 94 98 1c 	call	0x3930	; 0x3930 <__umulhisi3>
    1d90:	6b 01       	movw	r12, r22
    1d92:	7c 01       	movw	r14, r24
    1d94:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <_ZN15OrangutanAnalog7getModeEv>
    1d98:	88 23       	and	r24, r24
    1d9a:	59 f0       	breq	.+22     	; 0x1db2 <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
    1d9c:	c7 01       	movw	r24, r14
    1d9e:	b6 01       	movw	r22, r12
    1da0:	61 58       	subi	r22, 0x81	; 129
    1da2:	7f 4f       	sbci	r23, 0xFF	; 255
    1da4:	8f 4f       	sbci	r24, 0xFF	; 255
    1da6:	9f 4f       	sbci	r25, 0xFF	; 255
    1da8:	2f ef       	ldi	r18, 0xFF	; 255
    1daa:	30 e0       	ldi	r19, 0x00	; 0
    1dac:	40 e0       	ldi	r20, 0x00	; 0
    1dae:	50 e0       	ldi	r21, 0x00	; 0
    1db0:	0a c0       	rjmp	.+20     	; 0x1dc6 <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
    1db2:	c7 01       	movw	r24, r14
    1db4:	b6 01       	movw	r22, r12
    1db6:	61 50       	subi	r22, 0x01	; 1
    1db8:	7e 4f       	sbci	r23, 0xFE	; 254
    1dba:	8f 4f       	sbci	r24, 0xFF	; 255
    1dbc:	9f 4f       	sbci	r25, 0xFF	; 255
    1dbe:	2f ef       	ldi	r18, 0xFF	; 255
    1dc0:	33 e0       	ldi	r19, 0x03	; 3
    1dc2:	40 e0       	ldi	r20, 0x00	; 0
    1dc4:	50 e0       	ldi	r21, 0x00	; 0
    1dc6:	0e 94 51 1c 	call	0x38a2	; 0x38a2 <__udivmodsi4>
    1dca:	c9 01       	movw	r24, r18
    1dcc:	ff 90       	pop	r15
    1dce:	ef 90       	pop	r14
    1dd0:	df 90       	pop	r13
    1dd2:	cf 90       	pop	r12
    1dd4:	08 95       	ret

00001dd6 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
    1dd6:	0e 94 77 0e 	call	0x1cee	; 0x1cee <_ZN15OrangutanAnalog11readAverageEhj>
    1dda:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <_ZN15OrangutanAnalog12toMillivoltsEj>
    1dde:	08 95       	ret

00001de0 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
    1de0:	1f 93       	push	r17
    1de2:	cf 93       	push	r28
    1de4:	df 93       	push	r29
    1de6:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <_ZN15OrangutanAnalog7getModeEv>
    1dea:	18 2f       	mov	r17, r24
    1dec:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <_ZN15OrangutanAnalog7setModeEh.part.0>
    1df0:	6a e0       	ldi	r22, 0x0A	; 10
    1df2:	70 e0       	ldi	r23, 0x00	; 0
    1df4:	86 e0       	ldi	r24, 0x06	; 6
    1df6:	0e 94 eb 0e 	call	0x1dd6	; 0x1dd6 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
    1dfa:	ec 01       	movw	r28, r24
    1dfc:	81 2f       	mov	r24, r17
    1dfe:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <_ZN15OrangutanAnalog7setModeEh>
    1e02:	ce 01       	movw	r24, r28
    1e04:	88 0f       	add	r24, r24
    1e06:	99 1f       	adc	r25, r25
    1e08:	8c 0f       	add	r24, r28
    1e0a:	9d 1f       	adc	r25, r29
    1e0c:	01 96       	adiw	r24, 0x01	; 1
    1e0e:	96 95       	lsr	r25
    1e10:	87 95       	ror	r24
    1e12:	df 91       	pop	r29
    1e14:	cf 91       	pop	r28
    1e16:	1f 91       	pop	r17
    1e18:	08 95       	ret

00001e1a <read_battery_millivolts_3pi>:
    1e1a:	0e 94 f0 0e 	call	0x1de0	; 0x1de0 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
    1e1e:	08 95       	ret

00001e20 <_ZL16currentCharacterv>:
    1e20:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <_ZL17use_program_space>
    1e24:	e0 91 94 01 	lds	r30, 0x0194	; 0x800194 <__data_end>
    1e28:	f0 91 95 01 	lds	r31, 0x0195	; 0x800195 <__data_end+0x1>
    1e2c:	99 23       	and	r25, r25
    1e2e:	11 f0       	breq	.+4      	; 0x1e34 <_ZL16currentCharacterv+0x14>
    1e30:	84 91       	lpm	r24, Z
    1e32:	01 c0       	rjmp	.+2      	; 0x1e36 <_ZL16currentCharacterv+0x16>
    1e34:	80 81       	ld	r24, Z
    1e36:	2f eb       	ldi	r18, 0xBF	; 191
    1e38:	28 0f       	add	r18, r24
    1e3a:	2a 31       	cpi	r18, 0x1A	; 26
    1e3c:	10 f4       	brcc	.+4      	; 0x1e42 <_ZL16currentCharacterv+0x22>
    1e3e:	80 5e       	subi	r24, 0xE0	; 224
    1e40:	08 95       	ret
    1e42:	80 32       	cpi	r24, 0x20	; 32
    1e44:	49 f4       	brne	.+18     	; 0x1e58 <_ZL16currentCharacterv+0x38>
    1e46:	9f 01       	movw	r18, r30
    1e48:	2f 5f       	subi	r18, 0xFF	; 255
    1e4a:	3f 4f       	sbci	r19, 0xFF	; 255
    1e4c:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    1e50:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    1e54:	ef 2b       	or	r30, r31
    1e56:	31 f7       	brne	.-52     	; 0x1e24 <_ZL16currentCharacterv+0x4>
    1e58:	08 95       	ret

00001e5a <_ZL9getNumberv>:
    1e5a:	1f 93       	push	r17
    1e5c:	cf 93       	push	r28
    1e5e:	df 93       	push	r29
    1e60:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <_ZL16currentCharacterv>
    1e64:	c0 e0       	ldi	r28, 0x00	; 0
    1e66:	d0 e0       	ldi	r29, 0x00	; 0
    1e68:	1a e0       	ldi	r17, 0x0A	; 10
    1e6a:	90 ed       	ldi	r25, 0xD0	; 208
    1e6c:	98 0f       	add	r25, r24
    1e6e:	9a 30       	cpi	r25, 0x0A	; 10
    1e70:	b8 f4       	brcc	.+46     	; 0x1ea0 <_ZL9getNumberv+0x46>
    1e72:	9e 01       	movw	r18, r28
    1e74:	12 9f       	mul	r17, r18
    1e76:	e0 01       	movw	r28, r0
    1e78:	13 9f       	mul	r17, r19
    1e7a:	d0 0d       	add	r29, r0
    1e7c:	11 24       	eor	r1, r1
    1e7e:	c8 0f       	add	r28, r24
    1e80:	d1 1d       	adc	r29, r1
    1e82:	87 fd       	sbrc	r24, 7
    1e84:	da 95       	dec	r29
    1e86:	e0 97       	sbiw	r28, 0x30	; 48
    1e88:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <__data_end>
    1e8c:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <__data_end+0x1>
    1e90:	01 96       	adiw	r24, 0x01	; 1
    1e92:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <__data_end+0x1>
    1e96:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <__data_end>
    1e9a:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <_ZL16currentCharacterv>
    1e9e:	e5 cf       	rjmp	.-54     	; 0x1e6a <_ZL9getNumberv+0x10>
    1ea0:	ce 01       	movw	r24, r28
    1ea2:	df 91       	pop	r29
    1ea4:	cf 91       	pop	r28
    1ea6:	1f 91       	pop	r17
    1ea8:	08 95       	ret

00001eaa <_ZN15OrangutanBuzzer5init2Ev>:
    1eaa:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1eae:	83 e2       	ldi	r24, 0x23	; 35
    1eb0:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    1eb4:	81 e1       	ldi	r24, 0x11	; 17
    1eb6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1eba:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7f8082>
    1ebe:	80 e1       	ldi	r24, 0x10	; 16
    1ec0:	97 e2       	ldi	r25, 0x27	; 39
    1ec2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    1ec6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1eca:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    1ece:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    1ed2:	22 9a       	sbi	0x04, 2	; 4
    1ed4:	78 94       	sei
    1ed6:	08 95       	ret

00001ed8 <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
    1ed8:	8f 92       	push	r8
    1eda:	9f 92       	push	r9
    1edc:	af 92       	push	r10
    1ede:	bf 92       	push	r11
    1ee0:	df 92       	push	r13
    1ee2:	ef 92       	push	r14
    1ee4:	ff 92       	push	r15
    1ee6:	0f 93       	push	r16
    1ee8:	1f 93       	push	r17
    1eea:	cf 93       	push	r28
    1eec:	df 93       	push	r29
    1eee:	5c 01       	movw	r10, r24
    1ef0:	8b 01       	movw	r16, r22
    1ef2:	d4 2e       	mov	r13, r20
    1ef4:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <buzzerInitialized>
    1ef8:	81 11       	cpse	r24, r1
    1efa:	05 c0       	rjmp	.+10     	; 0x1f06 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
    1efc:	81 e0       	ldi	r24, 0x01	; 1
    1efe:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <buzzerInitialized>
    1f02:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <_ZN15OrangutanBuzzer5init2Ev>
    1f06:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <buzzerFinished>
    1f0a:	b7 fe       	sbrs	r11, 7
    1f0c:	05 c0       	rjmp	.+10     	; 0x1f18 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
    1f0e:	e8 94       	clt
    1f10:	b7 f8       	bld	r11, 7
    1f12:	2a e0       	ldi	r18, 0x0A	; 10
    1f14:	f2 2e       	mov	r15, r18
    1f16:	02 c0       	rjmp	.+4      	; 0x1f1c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
    1f18:	ff 24       	eor	r15, r15
    1f1a:	f3 94       	inc	r15
    1f1c:	e0 90 81 00 	lds	r14, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1f20:	2e 2d       	mov	r18, r14
    1f22:	28 7f       	andi	r18, 0xF8	; 248
    1f24:	e2 2e       	mov	r14, r18
    1f26:	48 ec       	ldi	r20, 0xC8	; 200
    1f28:	f4 9e       	mul	r15, r20
    1f2a:	c0 01       	movw	r24, r0
    1f2c:	11 24       	eor	r1, r1
    1f2e:	8a 15       	cp	r24, r10
    1f30:	9b 05       	cpc	r25, r11
    1f32:	e0 f4       	brcc	.+56     	; 0x1f6c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
    1f34:	e5 01       	movw	r28, r10
    1f36:	51 e1       	ldi	r21, 0x11	; 17
    1f38:	a5 16       	cp	r10, r21
    1f3a:	57 e2       	ldi	r21, 0x27	; 39
    1f3c:	b5 06       	cpc	r11, r21
    1f3e:	10 f0       	brcs	.+4      	; 0x1f44 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
    1f40:	c0 e1       	ldi	r28, 0x10	; 16
    1f42:	d7 e2       	ldi	r29, 0x27	; 39
    1f44:	be 01       	movw	r22, r28
    1f46:	76 95       	lsr	r23
    1f48:	67 95       	ror	r22
    1f4a:	80 e0       	ldi	r24, 0x00	; 0
    1f4c:	90 e0       	ldi	r25, 0x00	; 0
    1f4e:	60 58       	subi	r22, 0x80	; 128
    1f50:	79 46       	sbci	r23, 0x69	; 105
    1f52:	87 46       	sbci	r24, 0x67	; 103
    1f54:	9f 4f       	sbci	r25, 0xFF	; 255
    1f56:	4e 01       	movw	r8, r28
    1f58:	a1 2c       	mov	r10, r1
    1f5a:	b1 2c       	mov	r11, r1
    1f5c:	a5 01       	movw	r20, r10
    1f5e:	94 01       	movw	r18, r8
    1f60:	0e 94 51 1c 	call	0x38a2	; 0x38a2 <__udivmodsi4>
    1f64:	59 01       	movw	r10, r18
    1f66:	8e 2d       	mov	r24, r14
    1f68:	81 60       	ori	r24, 0x01	; 1
    1f6a:	24 c0       	rjmp	.+72     	; 0x1fb4 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
    1f6c:	c8 e2       	ldi	r28, 0x28	; 40
    1f6e:	fc 9e       	mul	r15, r28
    1f70:	c0 2d       	mov	r28, r0
    1f72:	11 24       	eor	r1, r1
    1f74:	d0 e0       	ldi	r29, 0x00	; 0
    1f76:	ca 15       	cp	r28, r10
    1f78:	db 05       	cpc	r29, r11
    1f7a:	08 f4       	brcc	.+2      	; 0x1f7e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
    1f7c:	e5 01       	movw	r28, r10
    1f7e:	be 01       	movw	r22, r28
    1f80:	76 95       	lsr	r23
    1f82:	67 95       	ror	r22
    1f84:	9e 01       	movw	r18, r28
    1f86:	40 e0       	ldi	r20, 0x00	; 0
    1f88:	50 e0       	ldi	r21, 0x00	; 0
    1f8a:	8a e0       	ldi	r24, 0x0A	; 10
    1f8c:	f8 12       	cpse	r15, r24
    1f8e:	07 c0       	rjmp	.+14     	; 0x1f9e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
    1f90:	80 e0       	ldi	r24, 0x00	; 0
    1f92:	90 e0       	ldi	r25, 0x00	; 0
    1f94:	60 5e       	subi	r22, 0xE0	; 224
    1f96:	73 44       	sbci	r23, 0x43	; 67
    1f98:	81 44       	sbci	r24, 0x41	; 65
    1f9a:	9f 4f       	sbci	r25, 0xFF	; 255
    1f9c:	06 c0       	rjmp	.+12     	; 0x1faa <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
    1f9e:	80 e0       	ldi	r24, 0x00	; 0
    1fa0:	90 e0       	ldi	r25, 0x00	; 0
    1fa2:	60 53       	subi	r22, 0x30	; 48
    1fa4:	7d 4e       	sbci	r23, 0xED	; 237
    1fa6:	8c 4e       	sbci	r24, 0xEC	; 236
    1fa8:	9f 4f       	sbci	r25, 0xFF	; 255
    1faa:	0e 94 51 1c 	call	0x38a2	; 0x38a2 <__udivmodsi4>
    1fae:	59 01       	movw	r10, r18
    1fb0:	8e 2d       	mov	r24, r14
    1fb2:	82 60       	ori	r24, 0x02	; 2
    1fb4:	88 2e       	mov	r8, r24
    1fb6:	2a e0       	ldi	r18, 0x0A	; 10
    1fb8:	f2 12       	cpse	r15, r18
    1fba:	07 c0       	rjmp	.+14     	; 0x1fca <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
    1fbc:	ce 01       	movw	r24, r28
    1fbe:	05 96       	adiw	r24, 0x05	; 5
    1fc0:	6a e0       	ldi	r22, 0x0A	; 10
    1fc2:	70 e0       	ldi	r23, 0x00	; 0
    1fc4:	0e 94 29 1c 	call	0x3852	; 0x3852 <__udivmodhi4>
    1fc8:	eb 01       	movw	r28, r22
    1fca:	c8 3e       	cpi	r28, 0xE8	; 232
    1fcc:	43 e0       	ldi	r20, 0x03	; 3
    1fce:	d4 07       	cpc	r29, r20
    1fd0:	59 f0       	breq	.+22     	; 0x1fe8 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
    1fd2:	98 01       	movw	r18, r16
    1fd4:	de 01       	movw	r26, r28
    1fd6:	0e 94 98 1c 	call	0x3930	; 0x3930 <__umulhisi3>
    1fda:	28 ee       	ldi	r18, 0xE8	; 232
    1fdc:	33 e0       	ldi	r19, 0x03	; 3
    1fde:	40 e0       	ldi	r20, 0x00	; 0
    1fe0:	50 e0       	ldi	r21, 0x00	; 0
    1fe2:	0e 94 73 1c 	call	0x38e6	; 0x38e6 <__divmodsi4>
    1fe6:	89 01       	movw	r16, r18
    1fe8:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1fec:	80 92 81 00 	sts	0x0081, r8	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1ff0:	b0 92 89 00 	sts	0x0089, r11	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    1ff4:	a0 92 88 00 	sts	0x0088, r10	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1ff8:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1ffc:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    2000:	4d 2d       	mov	r20, r13
    2002:	40 31       	cpi	r20, 0x10	; 16
    2004:	08 f0       	brcs	.+2      	; 0x2008 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
    2006:	4f e0       	ldi	r20, 0x0F	; 15
    2008:	80 e1       	ldi	r24, 0x10	; 16
    200a:	90 e0       	ldi	r25, 0x00	; 0
    200c:	84 1b       	sub	r24, r20
    200e:	91 09       	sbc	r25, r1
    2010:	a9 01       	movw	r20, r18
    2012:	02 c0       	rjmp	.+4      	; 0x2018 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
    2014:	56 95       	lsr	r21
    2016:	47 95       	ror	r20
    2018:	8a 95       	dec	r24
    201a:	e2 f7       	brpl	.-8      	; 0x2014 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
    201c:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    2020:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    2024:	10 93 9c 01 	sts	0x019C, r17	; 0x80019c <_ZL13buzzerTimeout+0x1>
    2028:	00 93 9b 01 	sts	0x019B, r16	; 0x80019b <_ZL13buzzerTimeout>
    202c:	86 b3       	in	r24, 0x16	; 22
    202e:	8f ef       	ldi	r24, 0xFF	; 255
    2030:	86 bb       	out	0x16, r24	; 22
    2032:	81 e0       	ldi	r24, 0x01	; 1
    2034:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    2038:	df 91       	pop	r29
    203a:	cf 91       	pop	r28
    203c:	1f 91       	pop	r17
    203e:	0f 91       	pop	r16
    2040:	ff 90       	pop	r15
    2042:	ef 90       	pop	r14
    2044:	df 90       	pop	r13
    2046:	bf 90       	pop	r11
    2048:	af 90       	pop	r10
    204a:	9f 90       	pop	r9
    204c:	8f 90       	pop	r8
    204e:	08 95       	ret

00002050 <_ZN15OrangutanBuzzer8playNoteEhjh>:
    2050:	cf 93       	push	r28
    2052:	df 93       	push	r29
    2054:	eb 01       	movw	r28, r22
    2056:	8f 3f       	cpi	r24, 0xFF	; 255
    2058:	11 f0       	breq	.+4      	; 0x205e <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
    205a:	41 11       	cpse	r20, r1
    205c:	05 c0       	rjmp	.+10     	; 0x2068 <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
    205e:	40 e0       	ldi	r20, 0x00	; 0
    2060:	be 01       	movw	r22, r28
    2062:	88 ee       	ldi	r24, 0xE8	; 232
    2064:	93 e0       	ldi	r25, 0x03	; 3
    2066:	43 c0       	rjmp	.+134    	; 0x20ee <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
    2068:	81 31       	cpi	r24, 0x11	; 17
    206a:	30 f0       	brcs	.+12     	; 0x2078 <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
    206c:	50 ef       	ldi	r21, 0xF0	; 240
    206e:	58 0f       	add	r21, r24
    2070:	50 36       	cpi	r21, 0x60	; 96
    2072:	18 f0       	brcs	.+6      	; 0x207a <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    2074:	5f e5       	ldi	r21, 0x5F	; 95
    2076:	01 c0       	rjmp	.+2      	; 0x207a <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    2078:	50 e0       	ldi	r21, 0x00	; 0
    207a:	85 2f       	mov	r24, r21
    207c:	6c e0       	ldi	r22, 0x0C	; 12
    207e:	0e 94 1d 1c 	call	0x383a	; 0x383a <__udivmodqi4>
    2082:	68 2f       	mov	r22, r24
    2084:	74 ef       	ldi	r23, 0xF4	; 244
    2086:	76 03       	mulsu	r23, r22
    2088:	90 01       	movw	r18, r0
    208a:	11 24       	eor	r1, r1
    208c:	25 0f       	add	r18, r21
    208e:	31 1d       	adc	r19, r1
    2090:	2c 30       	cpi	r18, 0x0C	; 12
    2092:	31 05       	cpc	r19, r1
    2094:	40 f4       	brcc	.+16     	; 0x20a6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
    2096:	f9 01       	movw	r30, r18
    2098:	ee 0f       	add	r30, r30
    209a:	ff 1f       	adc	r31, r31
    209c:	e8 5c       	subi	r30, 0xC8	; 200
    209e:	fe 4f       	sbci	r31, 0xFE	; 254
    20a0:	20 81       	ld	r18, Z
    20a2:	31 81       	ldd	r19, Z+1	; 0x01
    20a4:	02 c0       	rjmp	.+4      	; 0x20aa <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
    20a6:	20 e0       	ldi	r18, 0x00	; 0
    20a8:	30 e0       	ldi	r19, 0x00	; 0
    20aa:	87 30       	cpi	r24, 0x07	; 7
    20ac:	81 f0       	breq	.+32     	; 0x20ce <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
    20ae:	08 2e       	mov	r0, r24
    20b0:	02 c0       	rjmp	.+4      	; 0x20b6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
    20b2:	22 0f       	add	r18, r18
    20b4:	33 1f       	adc	r19, r19
    20b6:	0a 94       	dec	r0
    20b8:	e2 f7       	brpl	.-8      	; 0x20b2 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
    20ba:	82 30       	cpi	r24, 0x02	; 2
    20bc:	28 f0       	brcs	.+10     	; 0x20c8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
    20be:	c9 01       	movw	r24, r18
    20c0:	05 96       	adiw	r24, 0x05	; 5
    20c2:	6a e0       	ldi	r22, 0x0A	; 10
    20c4:	70 e0       	ldi	r23, 0x00	; 0
    20c6:	0c c0       	rjmp	.+24     	; 0x20e0 <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
    20c8:	c9 01       	movw	r24, r18
    20ca:	90 58       	subi	r25, 0x80	; 128
    20cc:	0c c0       	rjmp	.+24     	; 0x20e6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
    20ce:	c9 01       	movw	r24, r18
    20d0:	36 e0       	ldi	r19, 0x06	; 6
    20d2:	88 0f       	add	r24, r24
    20d4:	99 1f       	adc	r25, r25
    20d6:	3a 95       	dec	r19
    20d8:	e1 f7       	brne	.-8      	; 0x20d2 <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
    20da:	02 96       	adiw	r24, 0x02	; 2
    20dc:	65 e0       	ldi	r22, 0x05	; 5
    20de:	70 e0       	ldi	r23, 0x00	; 0
    20e0:	0e 94 29 1c 	call	0x3852	; 0x3852 <__udivmodhi4>
    20e4:	cb 01       	movw	r24, r22
    20e6:	40 31       	cpi	r20, 0x10	; 16
    20e8:	08 f0       	brcs	.+2      	; 0x20ec <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
    20ea:	4f e0       	ldi	r20, 0x0F	; 15
    20ec:	be 01       	movw	r22, r28
    20ee:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    20f2:	df 91       	pop	r29
    20f4:	cf 91       	pop	r28
    20f6:	08 95       	ret

000020f8 <_ZL8nextNotev>:
    20f8:	a2 e0       	ldi	r26, 0x02	; 2
    20fa:	b0 e0       	ldi	r27, 0x00	; 0
    20fc:	e2 e8       	ldi	r30, 0x82	; 130
    20fe:	f0 e1       	ldi	r31, 0x10	; 16
    2100:	0c 94 bc 1c 	jmp	0x3978	; 0x3978 <__prologue_saves__+0x4>
    2104:	90 90 0a 01 	lds	r9, 0x010A	; 0x80010a <_ZL6octave>
    2108:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <_ZL8staccato>
    210c:	88 23       	and	r24, r24
    210e:	21 f0       	breq	.+8      	; 0x2118 <_ZL8nextNotev+0x20>
    2110:	60 91 97 01 	lds	r22, 0x0197	; 0x800197 <_ZL22staccato_rest_duration>
    2114:	61 11       	cpse	r22, r1
    2116:	17 c0       	rjmp	.+46     	; 0x2146 <_ZL8nextNotev+0x4e>
    2118:	77 24       	eor	r7, r7
    211a:	73 94       	inc	r7
    211c:	b0 ec       	ldi	r27, 0xC0	; 192
    211e:	ab 2e       	mov	r10, r27
    2120:	bd e5       	ldi	r27, 0x5D	; 93
    2122:	bb 2e       	mov	r11, r27
    2124:	1a e0       	ldi	r17, 0x0A	; 10
    2126:	61 2e       	mov	r6, r17
    2128:	04 e0       	ldi	r16, 0x04	; 4
    212a:	80 2e       	mov	r8, r16
    212c:	80 ed       	ldi	r24, 0xD0	; 208
    212e:	c8 2e       	mov	r12, r24
    2130:	87 e0       	ldi	r24, 0x07	; 7
    2132:	d8 2e       	mov	r13, r24
    2134:	94 e0       	ldi	r25, 0x04	; 4
    2136:	e9 2e       	mov	r14, r25
    2138:	f1 2c       	mov	r15, r1
    213a:	04 ef       	ldi	r16, 0xF4	; 244
    213c:	11 e0       	ldi	r17, 0x01	; 1
    213e:	2f e0       	ldi	r18, 0x0F	; 15
    2140:	42 2e       	mov	r4, r18
    2142:	51 2c       	mov	r5, r1
    2144:	15 c0       	rjmp	.+42     	; 0x2170 <_ZL8nextNotev+0x78>
    2146:	70 e0       	ldi	r23, 0x00	; 0
    2148:	40 e0       	ldi	r20, 0x00	; 0
    214a:	88 ee       	ldi	r24, 0xE8	; 232
    214c:	93 e0       	ldi	r25, 0x03	; 3
    214e:	0e 94 6c 0f 	call	0x1ed8	; 0x1ed8 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    2152:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_ZL22staccato_rest_duration>
    2156:	17 c1       	rjmp	.+558    	; 0x2386 <_ZL8nextNotev+0x28e>
    2158:	86 36       	cpi	r24, 0x66	; 102
    215a:	d4 f5       	brge	.+116    	; 0x21d0 <_ZL8nextNotev+0xd8>
    215c:	81 36       	cpi	r24, 0x61	; 97
    215e:	09 f4       	brne	.+2      	; 0x2162 <_ZL8nextNotev+0x6a>
    2160:	a9 c0       	rjmp	.+338    	; 0x22b4 <_ZL8nextNotev+0x1bc>
    2162:	7c f5       	brge	.+94     	; 0x21c2 <_ZL8nextNotev+0xca>
    2164:	8c 33       	cpi	r24, 0x3C	; 60
    2166:	09 f4       	brne	.+2      	; 0x216a <_ZL8nextNotev+0x72>
    2168:	60 c0       	rjmp	.+192    	; 0x222a <_ZL8nextNotev+0x132>
    216a:	8e 33       	cpi	r24, 0x3E	; 62
    216c:	81 f4       	brne	.+32     	; 0x218e <_ZL8nextNotev+0x96>
    216e:	93 94       	inc	r9
    2170:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <_ZL16currentCharacterv>
    2174:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    2178:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    217c:	2f 5f       	subi	r18, 0xFF	; 255
    217e:	3f 4f       	sbci	r19, 0xFF	; 255
    2180:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    2184:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    2188:	85 36       	cpi	r24, 0x65	; 101
    218a:	31 f7       	brne	.-52     	; 0x2158 <_ZL8nextNotev+0x60>
    218c:	52 c0       	rjmp	.+164    	; 0x2232 <_ZL8nextNotev+0x13a>
    218e:	81 32       	cpi	r24, 0x21	; 33
    2190:	09 f0       	breq	.+2      	; 0x2194 <_ZL8nextNotev+0x9c>
    2192:	8b c0       	rjmp	.+278    	; 0x22aa <_ZL8nextNotev+0x1b2>
    2194:	80 92 0a 01 	sts	0x010A, r8	; 0x80010a <_ZL6octave>
    2198:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <_ZL19whole_note_duration+0x1>
    219c:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <_ZL19whole_note_duration>
    21a0:	f0 92 07 01 	sts	0x0107, r15	; 0x800107 <_ZL9note_type+0x1>
    21a4:	e0 92 06 01 	sts	0x0106, r14	; 0x800106 <_ZL9note_type>
    21a8:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <_ZL8duration+0x1>
    21ac:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <_ZL8duration>
    21b0:	50 92 03 01 	sts	0x0103, r5	; 0x800103 <_ZL6volume+0x1>
    21b4:	40 92 02 01 	sts	0x0102, r4	; 0x800102 <_ZL6volume>
    21b8:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <_ZL8staccato>
    21bc:	a4 e0       	ldi	r26, 0x04	; 4
    21be:	9a 2e       	mov	r9, r26
    21c0:	d7 cf       	rjmp	.-82     	; 0x2170 <_ZL8nextNotev+0x78>
    21c2:	83 36       	cpi	r24, 0x63	; 99
    21c4:	a1 f1       	breq	.+104    	; 0x222e <_ZL8nextNotev+0x136>
    21c6:	0c f4       	brge	.+2      	; 0x21ca <_ZL8nextNotev+0xd2>
    21c8:	78 c0       	rjmp	.+240    	; 0x22ba <_ZL8nextNotev+0x1c2>
    21ca:	10 e0       	ldi	r17, 0x00	; 0
    21cc:	82 e0       	ldi	r24, 0x02	; 2
    21ce:	77 c0       	rjmp	.+238    	; 0x22be <_ZL8nextNotev+0x1c6>
    21d0:	8d 36       	cpi	r24, 0x6D	; 109
    21d2:	c1 f1       	breq	.+112    	; 0x2244 <_ZL8nextNotev+0x14c>
    21d4:	94 f4       	brge	.+36     	; 0x21fa <_ZL8nextNotev+0x102>
    21d6:	87 36       	cpi	r24, 0x67	; 103
    21d8:	91 f1       	breq	.+100    	; 0x223e <_ZL8nextNotev+0x146>
    21da:	74 f1       	brlt	.+92     	; 0x2238 <_ZL8nextNotev+0x140>
    21dc:	8c 36       	cpi	r24, 0x6C	; 108
    21de:	09 f0       	breq	.+2      	; 0x21e2 <_ZL8nextNotev+0xea>
    21e0:	64 c0       	rjmp	.+200    	; 0x22aa <_ZL8nextNotev+0x1b2>
    21e2:	0e 94 2d 0f 	call	0x1e5a	; 0x1e5a <_ZL9getNumberv>
    21e6:	bc 01       	movw	r22, r24
    21e8:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_ZL9note_type+0x1>
    21ec:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_ZL9note_type>
    21f0:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    21f4:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    21f8:	51 c0       	rjmp	.+162    	; 0x229c <_ZL8nextNotev+0x1a4>
    21fa:	82 37       	cpi	r24, 0x72	; 114
    21fc:	c9 f1       	breq	.+114    	; 0x2270 <_ZL8nextNotev+0x178>
    21fe:	4c f4       	brge	.+18     	; 0x2212 <_ZL8nextNotev+0x11a>
    2200:	8f 36       	cpi	r24, 0x6F	; 111
    2202:	09 f0       	breq	.+2      	; 0x2206 <_ZL8nextNotev+0x10e>
    2204:	52 c0       	rjmp	.+164    	; 0x22aa <_ZL8nextNotev+0x1b2>
    2206:	0e 94 2d 0f 	call	0x1e5a	; 0x1e5a <_ZL9getNumberv>
    220a:	98 2e       	mov	r9, r24
    220c:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_ZL6octave>
    2210:	af cf       	rjmp	.-162    	; 0x2170 <_ZL8nextNotev+0x78>
    2212:	84 37       	cpi	r24, 0x74	; 116
    2214:	81 f1       	breq	.+96     	; 0x2276 <_ZL8nextNotev+0x17e>
    2216:	86 37       	cpi	r24, 0x76	; 118
    2218:	09 f0       	breq	.+2      	; 0x221c <_ZL8nextNotev+0x124>
    221a:	47 c0       	rjmp	.+142    	; 0x22aa <_ZL8nextNotev+0x1b2>
    221c:	0e 94 2d 0f 	call	0x1e5a	; 0x1e5a <_ZL9getNumberv>
    2220:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_ZL6volume+0x1>
    2224:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_ZL6volume>
    2228:	a3 cf       	rjmp	.-186    	; 0x2170 <_ZL8nextNotev+0x78>
    222a:	9a 94       	dec	r9
    222c:	a1 cf       	rjmp	.-190    	; 0x2170 <_ZL8nextNotev+0x78>
    222e:	10 e0       	ldi	r17, 0x00	; 0
    2230:	20 c0       	rjmp	.+64     	; 0x2272 <_ZL8nextNotev+0x17a>
    2232:	10 e0       	ldi	r17, 0x00	; 0
    2234:	84 e0       	ldi	r24, 0x04	; 4
    2236:	43 c0       	rjmp	.+134    	; 0x22be <_ZL8nextNotev+0x1c6>
    2238:	10 e0       	ldi	r17, 0x00	; 0
    223a:	85 e0       	ldi	r24, 0x05	; 5
    223c:	40 c0       	rjmp	.+128    	; 0x22be <_ZL8nextNotev+0x1c6>
    223e:	10 e0       	ldi	r17, 0x00	; 0
    2240:	87 e0       	ldi	r24, 0x07	; 7
    2242:	3d c0       	rjmp	.+122    	; 0x22be <_ZL8nextNotev+0x1c6>
    2244:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <_ZL16currentCharacterv>
    2248:	8c 36       	cpi	r24, 0x6C	; 108
    224a:	19 f4       	brne	.+6      	; 0x2252 <_ZL8nextNotev+0x15a>
    224c:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <_ZL8staccato>
    2250:	04 c0       	rjmp	.+8      	; 0x225a <_ZL8nextNotev+0x162>
    2252:	70 92 98 01 	sts	0x0198, r7	; 0x800198 <_ZL8staccato>
    2256:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_ZL22staccato_rest_duration>
    225a:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    225e:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    2262:	2f 5f       	subi	r18, 0xFF	; 255
    2264:	3f 4f       	sbci	r19, 0xFF	; 255
    2266:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    226a:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    226e:	80 cf       	rjmp	.-256    	; 0x2170 <_ZL8nextNotev+0x78>
    2270:	11 e0       	ldi	r17, 0x01	; 1
    2272:	80 e0       	ldi	r24, 0x00	; 0
    2274:	24 c0       	rjmp	.+72     	; 0x22be <_ZL8nextNotev+0x1c6>
    2276:	0e 94 2d 0f 	call	0x1e5a	; 0x1e5a <_ZL9getNumberv>
    227a:	bc 01       	movw	r22, r24
    227c:	c5 01       	movw	r24, r10
    227e:	0e 94 29 1c 	call	0x3852	; 0x3852 <__udivmodhi4>
    2282:	66 9e       	mul	r6, r22
    2284:	c0 01       	movw	r24, r0
    2286:	67 9e       	mul	r6, r23
    2288:	90 0d       	add	r25, r0
    228a:	11 24       	eor	r1, r1
    228c:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_ZL19whole_note_duration+0x1>
    2290:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_ZL19whole_note_duration>
    2294:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <_ZL9note_type>
    2298:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <_ZL9note_type+0x1>
    229c:	0e 94 29 1c 	call	0x3852	; 0x3852 <__udivmodhi4>
    22a0:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_ZL8duration+0x1>
    22a4:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_ZL8duration>
    22a8:	63 cf       	rjmp	.-314    	; 0x2170 <_ZL8nextNotev+0x78>
    22aa:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <__data_end+0x1>
    22ae:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <__data_end>
    22b2:	69 c0       	rjmp	.+210    	; 0x2386 <_ZL8nextNotev+0x28e>
    22b4:	10 e0       	ldi	r17, 0x00	; 0
    22b6:	89 e0       	ldi	r24, 0x09	; 9
    22b8:	02 c0       	rjmp	.+4      	; 0x22be <_ZL8nextNotev+0x1c6>
    22ba:	10 e0       	ldi	r17, 0x00	; 0
    22bc:	8b e0       	ldi	r24, 0x0B	; 11
    22be:	08 2f       	mov	r16, r24
    22c0:	9c e0       	ldi	r25, 0x0C	; 12
    22c2:	99 9e       	mul	r9, r25
    22c4:	00 0d       	add	r16, r0
    22c6:	11 24       	eor	r1, r1
    22c8:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <_ZL16currentCharacterv>
    22cc:	98 2f       	mov	r25, r24
    22ce:	97 7f       	andi	r25, 0xF7	; 247
    22d0:	93 32       	cpi	r25, 0x23	; 35
    22d2:	61 f4       	brne	.+24     	; 0x22ec <_ZL8nextNotev+0x1f4>
    22d4:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    22d8:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    22dc:	2f 5f       	subi	r18, 0xFF	; 255
    22de:	3f 4f       	sbci	r19, 0xFF	; 255
    22e0:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    22e4:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    22e8:	0f 5f       	subi	r16, 0xFF	; 255
    22ea:	ee cf       	rjmp	.-36     	; 0x22c8 <_ZL8nextNotev+0x1d0>
    22ec:	8d 32       	cpi	r24, 0x2D	; 45
    22ee:	71 f4       	brne	.+28     	; 0x230c <_ZL8nextNotev+0x214>
    22f0:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    22f4:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    22f8:	2f 5f       	subi	r18, 0xFF	; 255
    22fa:	3f 4f       	sbci	r19, 0xFF	; 255
    22fc:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    2300:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    2304:	01 50       	subi	r16, 0x01	; 1
    2306:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <_ZL16currentCharacterv>
    230a:	f0 cf       	rjmp	.-32     	; 0x22ec <_ZL8nextNotev+0x1f4>
    230c:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <_ZL8duration>
    2310:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <_ZL8duration+0x1>
    2314:	81 53       	subi	r24, 0x31	; 49
    2316:	88 30       	cpi	r24, 0x08	; 8
    2318:	50 f4       	brcc	.+20     	; 0x232e <_ZL8nextNotev+0x236>
    231a:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    231e:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    2322:	0e 94 2d 0f 	call	0x1e5a	; 0x1e5a <_ZL9getNumberv>
    2326:	bc 01       	movw	r22, r24
    2328:	c7 01       	movw	r24, r14
    232a:	0e 94 29 1c 	call	0x3852	; 0x3852 <__udivmodhi4>
    232e:	7b 01       	movw	r14, r22
    2330:	f6 94       	lsr	r15
    2332:	e7 94       	ror	r14
    2334:	69 83       	std	Y+1, r22	; 0x01
    2336:	7a 83       	std	Y+2, r23	; 0x02
    2338:	0e 94 10 0f 	call	0x1e20	; 0x1e20 <_ZL16currentCharacterv>
    233c:	69 81       	ldd	r22, Y+1	; 0x01
    233e:	7a 81       	ldd	r23, Y+2	; 0x02
    2340:	8e 32       	cpi	r24, 0x2E	; 46
    2342:	69 f4       	brne	.+26     	; 0x235e <_ZL8nextNotev+0x266>
    2344:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <__data_end>
    2348:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <__data_end+0x1>
    234c:	2f 5f       	subi	r18, 0xFF	; 255
    234e:	3f 4f       	sbci	r19, 0xFF	; 255
    2350:	30 93 95 01 	sts	0x0195, r19	; 0x800195 <__data_end+0x1>
    2354:	20 93 94 01 	sts	0x0194, r18	; 0x800194 <__data_end>
    2358:	6e 0d       	add	r22, r14
    235a:	7f 1d       	adc	r23, r15
    235c:	e9 cf       	rjmp	.-46     	; 0x2330 <_ZL8nextNotev+0x238>
    235e:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <_ZL8staccato>
    2362:	88 23       	and	r24, r24
    2364:	39 f0       	breq	.+14     	; 0x2374 <_ZL8nextNotev+0x27c>
    2366:	9b 01       	movw	r18, r22
    2368:	36 95       	lsr	r19
    236a:	27 95       	ror	r18
    236c:	20 93 97 01 	sts	0x0197, r18	; 0x800197 <_ZL22staccato_rest_duration>
    2370:	62 1b       	sub	r22, r18
    2372:	71 09       	sbc	r23, r1
    2374:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <_ZL6volume>
    2378:	11 23       	and	r17, r17
    237a:	11 f0       	breq	.+4      	; 0x2380 <_ZL8nextNotev+0x288>
    237c:	8f ef       	ldi	r24, 0xFF	; 255
    237e:	01 c0       	rjmp	.+2      	; 0x2382 <_ZL8nextNotev+0x28a>
    2380:	80 2f       	mov	r24, r16
    2382:	0e 94 28 10 	call	0x2050	; 0x2050 <_ZN15OrangutanBuzzer8playNoteEhjh>
    2386:	22 96       	adiw	r28, 0x02	; 2
    2388:	e0 e1       	ldi	r30, 0x10	; 16
    238a:	0c 94 d8 1c 	jmp	0x39b0	; 0x39b0 <__epilogue_restores__+0x4>

0000238e <__vector_13>:
    238e:	1f 92       	push	r1
    2390:	0f 92       	push	r0
    2392:	0f b6       	in	r0, 0x3f	; 63
    2394:	0f 92       	push	r0
    2396:	11 24       	eor	r1, r1
    2398:	2f 93       	push	r18
    239a:	3f 93       	push	r19
    239c:	4f 93       	push	r20
    239e:	5f 93       	push	r21
    23a0:	6f 93       	push	r22
    23a2:	7f 93       	push	r23
    23a4:	8f 93       	push	r24
    23a6:	9f 93       	push	r25
    23a8:	af 93       	push	r26
    23aa:	bf 93       	push	r27
    23ac:	ef 93       	push	r30
    23ae:	ff 93       	push	r31
    23b0:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <_ZL13buzzerTimeout>
    23b4:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <_ZL13buzzerTimeout+0x1>
    23b8:	9c 01       	movw	r18, r24
    23ba:	21 50       	subi	r18, 0x01	; 1
    23bc:	31 09       	sbc	r19, r1
    23be:	30 93 9c 01 	sts	0x019C, r19	; 0x80019c <_ZL13buzzerTimeout+0x1>
    23c2:	20 93 9b 01 	sts	0x019B, r18	; 0x80019b <_ZL13buzzerTimeout>
    23c6:	89 2b       	or	r24, r25
    23c8:	11 f5       	brne	.+68     	; 0x240e <__vector_13+0x80>
    23ca:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    23ce:	78 94       	sei
    23d0:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    23d4:	88 7f       	andi	r24, 0xF8	; 248
    23d6:	81 60       	ori	r24, 0x01	; 1
    23d8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    23dc:	80 e1       	ldi	r24, 0x10	; 16
    23de:	97 e2       	ldi	r25, 0x27	; 39
    23e0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    23e4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    23e8:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    23ec:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
    23f0:	81 e0       	ldi	r24, 0x01	; 1
    23f2:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <buzzerFinished>
    23f6:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <__data_end>
    23fa:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <__data_end+0x1>
    23fe:	89 2b       	or	r24, r25
    2400:	31 f0       	breq	.+12     	; 0x240e <__vector_13+0x80>
    2402:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <_ZL17play_mode_setting>
    2406:	81 11       	cpse	r24, r1
    2408:	02 c0       	rjmp	.+4      	; 0x240e <__vector_13+0x80>
    240a:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <_ZL8nextNotev>
    240e:	ff 91       	pop	r31
    2410:	ef 91       	pop	r30
    2412:	bf 91       	pop	r27
    2414:	af 91       	pop	r26
    2416:	9f 91       	pop	r25
    2418:	8f 91       	pop	r24
    241a:	7f 91       	pop	r23
    241c:	6f 91       	pop	r22
    241e:	5f 91       	pop	r21
    2420:	4f 91       	pop	r20
    2422:	3f 91       	pop	r19
    2424:	2f 91       	pop	r18
    2426:	0f 90       	pop	r0
    2428:	0f be       	out	0x3f, r0	; 63
    242a:	0f 90       	pop	r0
    242c:	1f 90       	pop	r1
    242e:	18 95       	reti

00002430 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    2430:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    2434:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <__data_end+0x1>
    2438:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <__data_end>
    243c:	81 e0       	ldi	r24, 0x01	; 1
    243e:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <_ZL17use_program_space>
    2442:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_ZL22staccato_rest_duration>
    2446:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <_ZL8nextNotev>
    244a:	08 95       	ret

0000244c <play_from_program_space>:
    244c:	0e 94 18 12 	call	0x2430	; 0x2430 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    2450:	08 95       	ret

00002452 <delay_us.constprop.0>:
    2452:	81 e0       	ldi	r24, 0x01	; 1
    2454:	90 e0       	ldi	r25, 0x00	; 0
    2456:	6f 93       	push	r22
    2458:	64 e0       	ldi	r22, 0x04	; 4
    245a:	6a 95       	dec	r22
    245c:	f1 f7       	brne	.-4      	; 0x245a <delay_us.constprop.0+0x8>
    245e:	6f 91       	pop	r22
    2460:	01 97       	sbiw	r24, 0x01	; 1
    2462:	c9 f7       	brne	.-14     	; 0x2456 <delay_us.constprop.0+0x4>
    2464:	08 95       	ret

00002466 <_ZN12OrangutanLCD8busyWaitEv>:
    2466:	0f 93       	push	r16
    2468:	1f 93       	push	r17
    246a:	cf 93       	push	r28
    246c:	df 93       	push	r29
    246e:	1a b1       	in	r17, 0x0a	; 10
    2470:	57 98       	cbi	0x0a, 7	; 10
    2472:	5a 98       	cbi	0x0b, 2	; 11
    2474:	28 9a       	sbi	0x05, 0	; 5
    2476:	c0 e0       	ldi	r28, 0x00	; 0
    2478:	d0 e0       	ldi	r29, 0x00	; 0
    247a:	0e 94 29 12 	call	0x2452	; 0x2452 <delay_us.constprop.0>
    247e:	5c 9a       	sbi	0x0b, 4	; 11
    2480:	0e 94 29 12 	call	0x2452	; 0x2452 <delay_us.constprop.0>
    2484:	09 b1       	in	r16, 0x09	; 9
    2486:	5c 98       	cbi	0x0b, 4	; 11
    2488:	0e 94 29 12 	call	0x2452	; 0x2452 <delay_us.constprop.0>
    248c:	5c 9a       	sbi	0x0b, 4	; 11
    248e:	0e 94 29 12 	call	0x2452	; 0x2452 <delay_us.constprop.0>
    2492:	5c 98       	cbi	0x0b, 4	; 11
    2494:	24 96       	adiw	r28, 0x04	; 4
    2496:	07 ff       	sbrs	r16, 7
    2498:	10 c0       	rjmp	.+32     	; 0x24ba <_ZN12OrangutanLCD8busyWaitEv+0x54>
    249a:	ae 01       	movw	r20, r28
    249c:	60 e0       	ldi	r22, 0x00	; 0
    249e:	70 e0       	ldi	r23, 0x00	; 0
    24a0:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <lcdTimeout>
    24a4:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <lcdTimeout+0x1>
    24a8:	a0 91 9f 01 	lds	r26, 0x019F	; 0x80019f <lcdTimeout+0x2>
    24ac:	b0 91 a0 01 	lds	r27, 0x01A0	; 0x8001a0 <lcdTimeout+0x3>
    24b0:	48 17       	cp	r20, r24
    24b2:	59 07       	cpc	r21, r25
    24b4:	6a 07       	cpc	r22, r26
    24b6:	7b 07       	cpc	r23, r27
    24b8:	00 f3       	brcs	.-64     	; 0x247a <_ZN12OrangutanLCD8busyWaitEv+0x14>
    24ba:	1a b9       	out	0x0a, r17	; 10
    24bc:	df 91       	pop	r29
    24be:	cf 91       	pop	r28
    24c0:	1f 91       	pop	r17
    24c2:	0f 91       	pop	r16
    24c4:	08 95       	ret

000024c6 <_ZN12OrangutanLCD8sendDataEh>:
    24c6:	95 b1       	in	r25, 0x05	; 5
    24c8:	28 2f       	mov	r18, r24
    24ca:	21 70       	andi	r18, 0x01	; 1
    24cc:	30 e0       	ldi	r19, 0x00	; 0
    24ce:	22 0f       	add	r18, r18
    24d0:	33 1f       	adc	r19, r19
    24d2:	48 2f       	mov	r20, r24
    24d4:	46 70       	andi	r20, 0x06	; 6
    24d6:	68 e0       	ldi	r22, 0x08	; 8
    24d8:	46 9f       	mul	r20, r22
    24da:	a0 01       	movw	r20, r0
    24dc:	11 24       	eor	r1, r1
    24de:	24 2b       	or	r18, r20
    24e0:	9d 7c       	andi	r25, 0xCD	; 205
    24e2:	29 2b       	or	r18, r25
    24e4:	25 b9       	out	0x05, r18	; 5
    24e6:	9b b1       	in	r25, 0x0b	; 11
    24e8:	88 70       	andi	r24, 0x08	; 8
    24ea:	82 95       	swap	r24
    24ec:	80 7f       	andi	r24, 0xF0	; 240
    24ee:	9f 77       	andi	r25, 0x7F	; 127
    24f0:	89 2b       	or	r24, r25
    24f2:	8b b9       	out	0x0b, r24	; 11
    24f4:	5c 9a       	sbi	0x0b, 4	; 11
    24f6:	0e 94 29 12 	call	0x2452	; 0x2452 <delay_us.constprop.0>
    24fa:	5c 98       	cbi	0x0b, 4	; 11
    24fc:	0e 94 29 12 	call	0x2452	; 0x2452 <delay_us.constprop.0>
    2500:	08 95       	ret

00002502 <_ZN12OrangutanLCD4sendEhhh>:
    2502:	a0 e0       	ldi	r26, 0x00	; 0
    2504:	b0 e0       	ldi	r27, 0x00	; 0
    2506:	e7 e8       	ldi	r30, 0x87	; 135
    2508:	f2 e1       	ldi	r31, 0x12	; 18
    250a:	0c 94 c5 1c 	jmp	0x398a	; 0x398a <__prologue_saves__+0x16>
    250e:	c8 2f       	mov	r28, r24
    2510:	d6 2e       	mov	r13, r22
    2512:	e4 2e       	mov	r14, r20
    2514:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <_ZZN12OrangutanLCD4initEvE11initialized>
    2518:	81 11       	cpse	r24, r1
    251a:	05 c0       	rjmp	.+10     	; 0x2526 <_ZN12OrangutanLCD4sendEhhh+0x24>
    251c:	81 e0       	ldi	r24, 0x01	; 1
    251e:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <_ZZN12OrangutanLCD4initEvE11initialized>
    2522:	0e 94 ca 12 	call	0x2594	; 0x2594 <_ZN12OrangutanLCD5init2Ev>
    2526:	0e 94 33 12 	call	0x2466	; 0x2466 <_ZN12OrangutanLCD8busyWaitEv>
    252a:	14 b1       	in	r17, 0x04	; 4
    252c:	d5 b1       	in	r29, 0x05	; 5
    252e:	fa b0       	in	r15, 0x0a	; 10
    2530:	0b b1       	in	r16, 0x0b	; 11
    2532:	28 98       	cbi	0x05, 0	; 5
    2534:	dd 20       	and	r13, r13
    2536:	11 f0       	breq	.+4      	; 0x253c <_ZN12OrangutanLCD4sendEhhh+0x3a>
    2538:	5a 9a       	sbi	0x0b, 2	; 11
    253a:	01 c0       	rjmp	.+2      	; 0x253e <_ZN12OrangutanLCD4sendEhhh+0x3c>
    253c:	5a 98       	cbi	0x0b, 2	; 11
    253e:	94 b1       	in	r25, 0x04	; 4
    2540:	92 63       	ori	r25, 0x32	; 50
    2542:	94 b9       	out	0x04, r25	; 4
    2544:	57 9a       	sbi	0x0a, 7	; 10
    2546:	81 e0       	ldi	r24, 0x01	; 1
    2548:	e8 16       	cp	r14, r24
    254a:	29 f0       	breq	.+10     	; 0x2556 <_ZN12OrangutanLCD4sendEhhh+0x54>
    254c:	8c 2f       	mov	r24, r28
    254e:	82 95       	swap	r24
    2550:	8f 70       	andi	r24, 0x0F	; 15
    2552:	0e 94 63 12 	call	0x24c6	; 0x24c6 <_ZN12OrangutanLCD8sendDataEh>
    2556:	8c 2f       	mov	r24, r28
    2558:	8f 70       	andi	r24, 0x0F	; 15
    255a:	0e 94 63 12 	call	0x24c6	; 0x24c6 <_ZN12OrangutanLCD8sendDataEh>
    255e:	fa b8       	out	0x0a, r15	; 10
    2560:	0b b9       	out	0x0b, r16	; 11
    2562:	14 b9       	out	0x04, r17	; 4
    2564:	d5 b9       	out	0x05, r29	; 5
    2566:	cd b7       	in	r28, 0x3d	; 61
    2568:	de b7       	in	r29, 0x3e	; 62
    256a:	e7 e0       	ldi	r30, 0x07	; 7
    256c:	0c 94 e1 1c 	jmp	0x39c2	; 0x39c2 <__epilogue_restores__+0x16>

00002570 <_ZN12OrangutanLCD8send_cmdEh>:
    2570:	42 e0       	ldi	r20, 0x02	; 2
    2572:	60 e0       	ldi	r22, 0x00	; 0
    2574:	0e 94 81 12 	call	0x2502	; 0x2502 <_ZN12OrangutanLCD4sendEhhh>
    2578:	08 95       	ret

0000257a <_ZN12OrangutanLCD9send_dataEh>:
    257a:	42 e0       	ldi	r20, 0x02	; 2
    257c:	61 e0       	ldi	r22, 0x01	; 1
    257e:	0e 94 81 12 	call	0x2502	; 0x2502 <_ZN12OrangutanLCD4sendEhhh>
    2582:	08 95       	ret

00002584 <print_character>:
    2584:	0e 94 bd 12 	call	0x257a	; 0x257a <_ZN12OrangutanLCD9send_dataEh>
    2588:	08 95       	ret

0000258a <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    258a:	41 e0       	ldi	r20, 0x01	; 1
    258c:	60 e0       	ldi	r22, 0x00	; 0
    258e:	0e 94 81 12 	call	0x2502	; 0x2502 <_ZN12OrangutanLCD4sendEhhh>
    2592:	08 95       	ret

00002594 <_ZN12OrangutanLCD5init2Ev>:
    2594:	80 e1       	ldi	r24, 0x10	; 16
    2596:	97 e2       	ldi	r25, 0x27	; 39
    2598:	a0 e0       	ldi	r26, 0x00	; 0
    259a:	b0 e0       	ldi	r27, 0x00	; 0
    259c:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <lcdTimeout>
    25a0:	90 93 9e 01 	sts	0x019E, r25	; 0x80019e <lcdTimeout+0x1>
    25a4:	a0 93 9f 01 	sts	0x019F, r26	; 0x80019f <lcdTimeout+0x2>
    25a8:	b0 93 a0 01 	sts	0x01A0, r27	; 0x8001a0 <lcdTimeout+0x3>
    25ac:	52 9a       	sbi	0x0a, 2	; 10
    25ae:	20 9a       	sbi	0x04, 0	; 4
    25b0:	54 9a       	sbi	0x0a, 4	; 10
    25b2:	8e e1       	ldi	r24, 0x1E	; 30
    25b4:	90 e0       	ldi	r25, 0x00	; 0
    25b6:	0e 94 78 16 	call	0x2cf0	; 0x2cf0 <delay_ms>
    25ba:	83 e0       	ldi	r24, 0x03	; 3
    25bc:	0e 94 c5 12 	call	0x258a	; 0x258a <_ZN12OrangutanLCD13send_4bit_cmdEh>
    25c0:	86 e0       	ldi	r24, 0x06	; 6
    25c2:	90 e0       	ldi	r25, 0x00	; 0
    25c4:	0e 94 78 16 	call	0x2cf0	; 0x2cf0 <delay_ms>
    25c8:	83 e0       	ldi	r24, 0x03	; 3
    25ca:	0e 94 c5 12 	call	0x258a	; 0x258a <_ZN12OrangutanLCD13send_4bit_cmdEh>
    25ce:	82 e0       	ldi	r24, 0x02	; 2
    25d0:	90 e0       	ldi	r25, 0x00	; 0
    25d2:	0e 94 78 16 	call	0x2cf0	; 0x2cf0 <delay_ms>
    25d6:	83 e0       	ldi	r24, 0x03	; 3
    25d8:	0e 94 c5 12 	call	0x258a	; 0x258a <_ZN12OrangutanLCD13send_4bit_cmdEh>
    25dc:	82 e0       	ldi	r24, 0x02	; 2
    25de:	90 e0       	ldi	r25, 0x00	; 0
    25e0:	0e 94 78 16 	call	0x2cf0	; 0x2cf0 <delay_ms>
    25e4:	82 e0       	ldi	r24, 0x02	; 2
    25e6:	0e 94 c5 12 	call	0x258a	; 0x258a <_ZN12OrangutanLCD13send_4bit_cmdEh>
    25ea:	82 e0       	ldi	r24, 0x02	; 2
    25ec:	90 e0       	ldi	r25, 0x00	; 0
    25ee:	0e 94 78 16 	call	0x2cf0	; 0x2cf0 <delay_ms>
    25f2:	88 e2       	ldi	r24, 0x28	; 40
    25f4:	0e 94 b8 12 	call	0x2570	; 0x2570 <_ZN12OrangutanLCD8send_cmdEh>
    25f8:	88 e0       	ldi	r24, 0x08	; 8
    25fa:	0e 94 b8 12 	call	0x2570	; 0x2570 <_ZN12OrangutanLCD8send_cmdEh>
    25fe:	81 e0       	ldi	r24, 0x01	; 1
    2600:	0e 94 b8 12 	call	0x2570	; 0x2570 <_ZN12OrangutanLCD8send_cmdEh>
    2604:	86 e0       	ldi	r24, 0x06	; 6
    2606:	0e 94 b8 12 	call	0x2570	; 0x2570 <_ZN12OrangutanLCD8send_cmdEh>
    260a:	8c e0       	ldi	r24, 0x0C	; 12
    260c:	0e 94 b8 12 	call	0x2570	; 0x2570 <_ZN12OrangutanLCD8send_cmdEh>
    2610:	08 95       	ret

00002612 <_ZN12OrangutanLCD5clearEv>:
    2612:	81 e0       	ldi	r24, 0x01	; 1
    2614:	0e 94 b8 12 	call	0x2570	; 0x2570 <_ZN12OrangutanLCD8send_cmdEh>
    2618:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <printf_chars>
    261c:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <printf_chars+0x1>
    2620:	89 2b       	or	r24, r25
    2622:	f9 f0       	breq	.+62     	; 0x2662 <_ZN12OrangutanLCD5clearEv+0x50>
    2624:	60 e0       	ldi	r22, 0x00	; 0
    2626:	a0 e2       	ldi	r26, 0x20	; 32
    2628:	26 2f       	mov	r18, r22
    262a:	30 e0       	ldi	r19, 0x00	; 0
    262c:	70 91 0c 01 	lds	r23, 0x010C	; 0x80010c <numLCDCols>
    2630:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <numLCDRows>
    2634:	90 e0       	ldi	r25, 0x00	; 0
    2636:	01 97       	sbiw	r24, 0x01	; 1
    2638:	78 9f       	mul	r23, r24
    263a:	a0 01       	movw	r20, r0
    263c:	79 9f       	mul	r23, r25
    263e:	50 0d       	add	r21, r0
    2640:	11 24       	eor	r1, r1
    2642:	24 17       	cp	r18, r20
    2644:	35 07       	cpc	r19, r21
    2646:	4c f4       	brge	.+18     	; 0x265a <_ZN12OrangutanLCD5clearEv+0x48>
    2648:	e0 91 a3 01 	lds	r30, 0x01A3	; 0x8001a3 <printf_chars>
    264c:	f0 91 a4 01 	lds	r31, 0x01A4	; 0x8001a4 <printf_chars+0x1>
    2650:	e2 0f       	add	r30, r18
    2652:	f3 1f       	adc	r31, r19
    2654:	a0 83       	st	Z, r26
    2656:	6f 5f       	subi	r22, 0xFF	; 255
    2658:	e7 cf       	rjmp	.-50     	; 0x2628 <_ZN12OrangutanLCD5clearEv+0x16>
    265a:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <col>
    265e:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <row>
    2662:	08 95       	ret

00002664 <clear>:
    2664:	0e 94 09 13 	call	0x2612	; 0x2612 <_ZN12OrangutanLCD5clearEv>
    2668:	08 95       	ret

0000266a <_ZN12OrangutanLCD5printEPKc>:
    266a:	cf 93       	push	r28
    266c:	df 93       	push	r29
    266e:	ec 01       	movw	r28, r24
    2670:	89 91       	ld	r24, Y+
    2672:	88 23       	and	r24, r24
    2674:	19 f0       	breq	.+6      	; 0x267c <_ZN12OrangutanLCD5printEPKc+0x12>
    2676:	0e 94 bd 12 	call	0x257a	; 0x257a <_ZN12OrangutanLCD9send_dataEh>
    267a:	fa cf       	rjmp	.-12     	; 0x2670 <_ZN12OrangutanLCD5printEPKc+0x6>
    267c:	df 91       	pop	r29
    267e:	cf 91       	pop	r28
    2680:	08 95       	ret

00002682 <print>:
    2682:	0e 94 35 13 	call	0x266a	; 0x266a <_ZN12OrangutanLCD5printEPKc>
    2686:	08 95       	ret

00002688 <_ZN12OrangutanLCD5printEm>:
    2688:	aa e0       	ldi	r26, 0x0A	; 10
    268a:	b0 e0       	ldi	r27, 0x00	; 0
    268c:	ea e4       	ldi	r30, 0x4A	; 74
    268e:	f3 e1       	ldi	r31, 0x13	; 19
    2690:	0c 94 c4 1c 	jmp	0x3988	; 0x3988 <__prologue_saves__+0x14>
    2694:	1a e0       	ldi	r17, 0x0A	; 10
    2696:	5a e0       	ldi	r21, 0x0A	; 10
    2698:	c5 2e       	mov	r12, r21
    269a:	d1 2c       	mov	r13, r1
    269c:	e1 2c       	mov	r14, r1
    269e:	f1 2c       	mov	r15, r1
    26a0:	06 2f       	mov	r16, r22
    26a2:	a7 01       	movw	r20, r14
    26a4:	96 01       	movw	r18, r12
    26a6:	0e 94 51 1c 	call	0x38a2	; 0x38a2 <__udivmodsi4>
    26aa:	ca 01       	movw	r24, r20
    26ac:	b9 01       	movw	r22, r18
    26ae:	11 50       	subi	r17, 0x01	; 1
    26b0:	e1 e0       	ldi	r30, 0x01	; 1
    26b2:	f0 e0       	ldi	r31, 0x00	; 0
    26b4:	ec 0f       	add	r30, r28
    26b6:	fd 1f       	adc	r31, r29
    26b8:	e1 0f       	add	r30, r17
    26ba:	f1 1d       	adc	r31, r1
    26bc:	00 5d       	subi	r16, 0xD0	; 208
    26be:	2a e0       	ldi	r18, 0x0A	; 10
    26c0:	62 9f       	mul	r22, r18
    26c2:	00 19       	sub	r16, r0
    26c4:	11 24       	eor	r1, r1
    26c6:	00 83       	st	Z, r16
    26c8:	61 15       	cp	r22, r1
    26ca:	71 05       	cpc	r23, r1
    26cc:	81 05       	cpc	r24, r1
    26ce:	91 05       	cpc	r25, r1
    26d0:	39 f7       	brne	.-50     	; 0x26a0 <_ZN12OrangutanLCD5printEm+0x18>
    26d2:	1a 30       	cpi	r17, 0x0A	; 10
    26d4:	58 f4       	brcc	.+22     	; 0x26ec <_ZN12OrangutanLCD5printEm+0x64>
    26d6:	e1 e0       	ldi	r30, 0x01	; 1
    26d8:	f0 e0       	ldi	r31, 0x00	; 0
    26da:	ec 0f       	add	r30, r28
    26dc:	fd 1f       	adc	r31, r29
    26de:	e1 0f       	add	r30, r17
    26e0:	f1 1d       	adc	r31, r1
    26e2:	80 81       	ld	r24, Z
    26e4:	0e 94 bd 12 	call	0x257a	; 0x257a <_ZN12OrangutanLCD9send_dataEh>
    26e8:	1f 5f       	subi	r17, 0xFF	; 255
    26ea:	f3 cf       	rjmp	.-26     	; 0x26d2 <_ZN12OrangutanLCD5printEm+0x4a>
    26ec:	2a 96       	adiw	r28, 0x0a	; 10
    26ee:	e8 e0       	ldi	r30, 0x08	; 8
    26f0:	0c 94 e0 1c 	jmp	0x39c0	; 0x39c0 <__epilogue_restores__+0x14>

000026f4 <_ZN12OrangutanLCD5printEl>:
    26f4:	cf 92       	push	r12
    26f6:	df 92       	push	r13
    26f8:	ef 92       	push	r14
    26fa:	ff 92       	push	r15
    26fc:	6b 01       	movw	r12, r22
    26fe:	7c 01       	movw	r14, r24
    2700:	97 ff       	sbrs	r25, 7
    2702:	0b c0       	rjmp	.+22     	; 0x271a <_ZN12OrangutanLCD5printEl+0x26>
    2704:	f0 94       	com	r15
    2706:	e0 94       	com	r14
    2708:	d0 94       	com	r13
    270a:	c0 94       	com	r12
    270c:	c1 1c       	adc	r12, r1
    270e:	d1 1c       	adc	r13, r1
    2710:	e1 1c       	adc	r14, r1
    2712:	f1 1c       	adc	r15, r1
    2714:	8d e2       	ldi	r24, 0x2D	; 45
    2716:	0e 94 bd 12 	call	0x257a	; 0x257a <_ZN12OrangutanLCD9send_dataEh>
    271a:	c7 01       	movw	r24, r14
    271c:	b6 01       	movw	r22, r12
    271e:	0e 94 44 13 	call	0x2688	; 0x2688 <_ZN12OrangutanLCD5printEm>
    2722:	ff 90       	pop	r15
    2724:	ef 90       	pop	r14
    2726:	df 90       	pop	r13
    2728:	cf 90       	pop	r12
    272a:	08 95       	ret

0000272c <print_long>:
    272c:	0e 94 7a 13 	call	0x26f4	; 0x26f4 <_ZN12OrangutanLCD5printEl>
    2730:	08 95       	ret

00002732 <_ZN12OrangutanLCD6gotoXYEhh>:
    2732:	a5 e0       	ldi	r26, 0x05	; 5
    2734:	b0 e0       	ldi	r27, 0x00	; 0
    2736:	ef e9       	ldi	r30, 0x9F	; 159
    2738:	f3 e1       	ldi	r31, 0x13	; 19
    273a:	0c 94 c9 1c 	jmp	0x3992	; 0x3992 <__prologue_saves__+0x1e>
    273e:	18 2f       	mov	r17, r24
    2740:	80 e8       	ldi	r24, 0x80	; 128
    2742:	89 83       	std	Y+1, r24	; 0x01
    2744:	80 ec       	ldi	r24, 0xC0	; 192
    2746:	8a 83       	std	Y+2, r24	; 0x02
    2748:	84 e9       	ldi	r24, 0x94	; 148
    274a:	8b 83       	std	Y+3, r24	; 0x03
    274c:	84 ed       	ldi	r24, 0xD4	; 212
    274e:	8c 83       	std	Y+4, r24	; 0x04
    2750:	fe 01       	movw	r30, r28
    2752:	e6 0f       	add	r30, r22
    2754:	f1 1d       	adc	r31, r1
    2756:	81 81       	ldd	r24, Z+1	; 0x01
    2758:	81 0f       	add	r24, r17
    275a:	6d 83       	std	Y+5, r22	; 0x05
    275c:	0e 94 b8 12 	call	0x2570	; 0x2570 <_ZN12OrangutanLCD8send_cmdEh>
    2760:	10 93 a1 01 	sts	0x01A1, r17	; 0x8001a1 <col>
    2764:	6d 81       	ldd	r22, Y+5	; 0x05
    2766:	60 93 a2 01 	sts	0x01A2, r22	; 0x8001a2 <row>
    276a:	25 96       	adiw	r28, 0x05	; 5
    276c:	e3 e0       	ldi	r30, 0x03	; 3
    276e:	0c 94 e5 1c 	jmp	0x39ca	; 0x39ca <__epilogue_restores__+0x1e>

00002772 <lcd_goto_xy>:
    2772:	0e 94 99 13 	call	0x2732	; 0x2732 <_ZN12OrangutanLCD6gotoXYEhh>
    2776:	08 95       	ret

00002778 <_ZN16OrangutanDigital9setOutputEhh>:
    2778:	88 30       	cpi	r24, 0x08	; 8
    277a:	58 f4       	brcc	.+22     	; 0x2792 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    277c:	91 e0       	ldi	r25, 0x01	; 1
    277e:	01 c0       	rjmp	.+2      	; 0x2782 <_ZN16OrangutanDigital9setOutputEhh+0xa>
    2780:	99 0f       	add	r25, r25
    2782:	8a 95       	dec	r24
    2784:	ea f7       	brpl	.-6      	; 0x2780 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    2786:	89 2f       	mov	r24, r25
    2788:	aa e2       	ldi	r26, 0x2A	; 42
    278a:	b0 e0       	ldi	r27, 0x00	; 0
    278c:	eb e2       	ldi	r30, 0x2B	; 43
    278e:	f0 e0       	ldi	r31, 0x00	; 0
    2790:	21 c0       	rjmp	.+66     	; 0x27d4 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    2792:	8e 30       	cpi	r24, 0x0E	; 14
    2794:	60 f4       	brcc	.+24     	; 0x27ae <_ZN16OrangutanDigital9setOutputEhh+0x36>
    2796:	98 ef       	ldi	r25, 0xF8	; 248
    2798:	98 0f       	add	r25, r24
    279a:	81 e0       	ldi	r24, 0x01	; 1
    279c:	01 c0       	rjmp	.+2      	; 0x27a0 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    279e:	88 0f       	add	r24, r24
    27a0:	9a 95       	dec	r25
    27a2:	ea f7       	brpl	.-6      	; 0x279e <_ZN16OrangutanDigital9setOutputEhh+0x26>
    27a4:	a4 e2       	ldi	r26, 0x24	; 36
    27a6:	b0 e0       	ldi	r27, 0x00	; 0
    27a8:	e5 e2       	ldi	r30, 0x25	; 37
    27aa:	f0 e0       	ldi	r31, 0x00	; 0
    27ac:	13 c0       	rjmp	.+38     	; 0x27d4 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    27ae:	85 31       	cpi	r24, 0x15	; 21
    27b0:	60 f4       	brcc	.+24     	; 0x27ca <_ZN16OrangutanDigital9setOutputEhh+0x52>
    27b2:	92 ef       	ldi	r25, 0xF2	; 242
    27b4:	98 0f       	add	r25, r24
    27b6:	81 e0       	ldi	r24, 0x01	; 1
    27b8:	01 c0       	rjmp	.+2      	; 0x27bc <_ZN16OrangutanDigital9setOutputEhh+0x44>
    27ba:	88 0f       	add	r24, r24
    27bc:	9a 95       	dec	r25
    27be:	ea f7       	brpl	.-6      	; 0x27ba <_ZN16OrangutanDigital9setOutputEhh+0x42>
    27c0:	a7 e2       	ldi	r26, 0x27	; 39
    27c2:	b0 e0       	ldi	r27, 0x00	; 0
    27c4:	e8 e2       	ldi	r30, 0x28	; 40
    27c6:	f0 e0       	ldi	r31, 0x00	; 0
    27c8:	05 c0       	rjmp	.+10     	; 0x27d4 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    27ca:	80 e0       	ldi	r24, 0x00	; 0
    27cc:	a0 e0       	ldi	r26, 0x00	; 0
    27ce:	b0 e0       	ldi	r27, 0x00	; 0
    27d0:	e0 e0       	ldi	r30, 0x00	; 0
    27d2:	f0 e0       	ldi	r31, 0x00	; 0
    27d4:	6f 3f       	cpi	r22, 0xFF	; 255
    27d6:	19 f4       	brne	.+6      	; 0x27de <_ZN16OrangutanDigital9setOutputEhh+0x66>
    27d8:	90 81       	ld	r25, Z
    27da:	98 27       	eor	r25, r24
    27dc:	09 c0       	rjmp	.+18     	; 0x27f0 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    27de:	66 23       	and	r22, r22
    27e0:	19 f0       	breq	.+6      	; 0x27e8 <_ZN16OrangutanDigital9setOutputEhh+0x70>
    27e2:	90 81       	ld	r25, Z
    27e4:	98 2b       	or	r25, r24
    27e6:	04 c0       	rjmp	.+8      	; 0x27f0 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    27e8:	20 81       	ld	r18, Z
    27ea:	98 2f       	mov	r25, r24
    27ec:	90 95       	com	r25
    27ee:	92 23       	and	r25, r18
    27f0:	90 83       	st	Z, r25
    27f2:	9c 91       	ld	r25, X
    27f4:	98 2b       	or	r25, r24
    27f6:	9c 93       	st	X, r25
    27f8:	08 95       	ret

000027fa <_ZN15OrangutanMotors5init2Ev>:
    27fa:	83 ef       	ldi	r24, 0xF3	; 243
    27fc:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    2800:	84 bd       	out	0x24, r24	; 36
    2802:	82 e0       	ldi	r24, 0x02	; 2
    2804:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    2808:	85 bd       	out	0x25, r24	; 37
    280a:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    280e:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    2812:	18 bc       	out	0x28, r1	; 40
    2814:	17 bc       	out	0x27, r1	; 39
    2816:	60 e0       	ldi	r22, 0x00	; 0
    2818:	86 e0       	ldi	r24, 0x06	; 6
    281a:	0e 94 bc 13 	call	0x2778	; 0x2778 <_ZN16OrangutanDigital9setOutputEhh>
    281e:	60 e0       	ldi	r22, 0x00	; 0
    2820:	85 e0       	ldi	r24, 0x05	; 5
    2822:	0e 94 bc 13 	call	0x2778	; 0x2778 <_ZN16OrangutanDigital9setOutputEhh>
    2826:	60 e0       	ldi	r22, 0x00	; 0
    2828:	8b e0       	ldi	r24, 0x0B	; 11
    282a:	0e 94 bc 13 	call	0x2778	; 0x2778 <_ZN16OrangutanDigital9setOutputEhh>
    282e:	60 e0       	ldi	r22, 0x00	; 0
    2830:	83 e0       	ldi	r24, 0x03	; 3
    2832:	0e 94 bc 13 	call	0x2778	; 0x2778 <_ZN16OrangutanDigital9setOutputEhh>
    2836:	08 95       	ret

00002838 <_ZN15OrangutanMotors4initEv>:
    2838:	80 91 0d 02 	lds	r24, 0x020D	; 0x80020d <_ZZN15OrangutanMotors4initEvE11initialized>
    283c:	81 11       	cpse	r24, r1
    283e:	05 c0       	rjmp	.+10     	; 0x284a <_ZN15OrangutanMotors4initEv+0x12>
    2840:	81 e0       	ldi	r24, 0x01	; 1
    2842:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <_ZZN15OrangutanMotors4initEvE11initialized>
    2846:	0e 94 fd 13 	call	0x27fa	; 0x27fa <_ZN15OrangutanMotors5init2Ev>
    284a:	08 95       	ret

0000284c <_ZN15OrangutanMotors10setM1SpeedEi>:
    284c:	cf 93       	push	r28
    284e:	df 93       	push	r29
    2850:	ec 01       	movw	r28, r24
    2852:	0e 94 1c 14 	call	0x2838	; 0x2838 <_ZN15OrangutanMotors4initEv>
    2856:	d7 ff       	sbrs	r29, 7
    2858:	05 c0       	rjmp	.+10     	; 0x2864 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    285a:	d1 95       	neg	r29
    285c:	c1 95       	neg	r28
    285e:	d1 09       	sbc	r29, r1
    2860:	81 e0       	ldi	r24, 0x01	; 1
    2862:	01 c0       	rjmp	.+2      	; 0x2866 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    2864:	80 e0       	ldi	r24, 0x00	; 0
    2866:	cf 3f       	cpi	r28, 0xFF	; 255
    2868:	d1 05       	cpc	r29, r1
    286a:	19 f0       	breq	.+6      	; 0x2872 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    286c:	14 f0       	brlt	.+4      	; 0x2872 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    286e:	cf ef       	ldi	r28, 0xFF	; 255
    2870:	d0 e0       	ldi	r29, 0x00	; 0
    2872:	88 23       	and	r24, r24
    2874:	19 f0       	breq	.+6      	; 0x287c <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    2876:	18 bc       	out	0x28, r1	; 40
    2878:	c7 bd       	out	0x27, r28	; 39
    287a:	02 c0       	rjmp	.+4      	; 0x2880 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    287c:	c8 bd       	out	0x28, r28	; 40
    287e:	17 bc       	out	0x27, r1	; 39
    2880:	df 91       	pop	r29
    2882:	cf 91       	pop	r28
    2884:	08 95       	ret

00002886 <_ZN15OrangutanMotors10setM2SpeedEi>:
    2886:	cf 93       	push	r28
    2888:	df 93       	push	r29
    288a:	ec 01       	movw	r28, r24
    288c:	0e 94 1c 14 	call	0x2838	; 0x2838 <_ZN15OrangutanMotors4initEv>
    2890:	d7 ff       	sbrs	r29, 7
    2892:	05 c0       	rjmp	.+10     	; 0x289e <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    2894:	d1 95       	neg	r29
    2896:	c1 95       	neg	r28
    2898:	d1 09       	sbc	r29, r1
    289a:	81 e0       	ldi	r24, 0x01	; 1
    289c:	01 c0       	rjmp	.+2      	; 0x28a0 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    289e:	80 e0       	ldi	r24, 0x00	; 0
    28a0:	cf 3f       	cpi	r28, 0xFF	; 255
    28a2:	d1 05       	cpc	r29, r1
    28a4:	19 f0       	breq	.+6      	; 0x28ac <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    28a6:	14 f0       	brlt	.+4      	; 0x28ac <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    28a8:	cf ef       	ldi	r28, 0xFF	; 255
    28aa:	d0 e0       	ldi	r29, 0x00	; 0
    28ac:	88 23       	and	r24, r24
    28ae:	29 f0       	breq	.+10     	; 0x28ba <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    28b0:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    28b4:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    28b8:	04 c0       	rjmp	.+8      	; 0x28c2 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    28ba:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    28be:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    28c2:	df 91       	pop	r29
    28c4:	cf 91       	pop	r28
    28c6:	08 95       	ret

000028c8 <_ZN15OrangutanMotors9setSpeedsEii>:
    28c8:	cf 93       	push	r28
    28ca:	df 93       	push	r29
    28cc:	eb 01       	movw	r28, r22
    28ce:	0e 94 26 14 	call	0x284c	; 0x284c <_ZN15OrangutanMotors10setM1SpeedEi>
    28d2:	ce 01       	movw	r24, r28
    28d4:	0e 94 43 14 	call	0x2886	; 0x2886 <_ZN15OrangutanMotors10setM2SpeedEi>
    28d8:	df 91       	pop	r29
    28da:	cf 91       	pop	r28
    28dc:	08 95       	ret

000028de <set_motors>:
    28de:	0e 94 64 14 	call	0x28c8	; 0x28c8 <_ZN15OrangutanMotors9setSpeedsEii>
    28e2:	08 95       	ret

000028e4 <_ZN20OrangutanPushbuttons5init2Ev>:
    28e4:	84 b1       	in	r24, 0x04	; 4
    28e6:	8d 7c       	andi	r24, 0xCD	; 205
    28e8:	84 b9       	out	0x04, r24	; 4
    28ea:	85 b1       	in	r24, 0x05	; 5
    28ec:	82 63       	ori	r24, 0x32	; 50
    28ee:	85 b9       	out	0x05, r24	; 5
    28f0:	85 e0       	ldi	r24, 0x05	; 5
    28f2:	90 e0       	ldi	r25, 0x00	; 0
    28f4:	6f 93       	push	r22
    28f6:	64 e0       	ldi	r22, 0x04	; 4
    28f8:	6a 95       	dec	r22
    28fa:	f1 f7       	brne	.-4      	; 0x28f8 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    28fc:	6f 91       	pop	r22
    28fe:	01 97       	sbiw	r24, 0x01	; 1
    2900:	c9 f7       	brne	.-14     	; 0x28f4 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    2902:	08 95       	ret

00002904 <_ZN20OrangutanPushbuttons4initEv>:
    2904:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    2908:	81 11       	cpse	r24, r1
    290a:	05 c0       	rjmp	.+10     	; 0x2916 <_ZN20OrangutanPushbuttons4initEv+0x12>
    290c:	81 e0       	ldi	r24, 0x01	; 1
    290e:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    2912:	0e 94 72 14 	call	0x28e4	; 0x28e4 <_ZN20OrangutanPushbuttons5init2Ev>
    2916:	08 95       	ret

00002918 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    2918:	cf 93       	push	r28
    291a:	c8 2f       	mov	r28, r24
    291c:	0e 94 82 14 	call	0x2904	; 0x2904 <_ZN20OrangutanPushbuttons4initEv>
    2920:	83 b1       	in	r24, 0x03	; 3
    2922:	8c 23       	and	r24, r28
    2924:	e9 f3       	breq	.-6      	; 0x2920 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    2926:	8a e0       	ldi	r24, 0x0A	; 10
    2928:	90 e0       	ldi	r25, 0x00	; 0
    292a:	0e 94 78 16 	call	0x2cf0	; 0x2cf0 <delay_ms>
    292e:	83 b1       	in	r24, 0x03	; 3
    2930:	8c 23       	and	r24, r28
    2932:	b1 f3       	breq	.-20     	; 0x2920 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    2934:	83 b1       	in	r24, 0x03	; 3
    2936:	8c 23       	and	r24, r28
    2938:	cf 91       	pop	r28
    293a:	08 95       	ret

0000293c <wait_for_button_release>:
    293c:	0e 94 8c 14 	call	0x2918	; 0x2918 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    2940:	08 95       	ret

00002942 <_ZN20OrangutanPushbuttons9isPressedEh>:
    2942:	a1 e0       	ldi	r26, 0x01	; 1
    2944:	b0 e0       	ldi	r27, 0x00	; 0
    2946:	e7 ea       	ldi	r30, 0xA7	; 167
    2948:	f4 e1       	ldi	r31, 0x14	; 20
    294a:	0c 94 ca 1c 	jmp	0x3994	; 0x3994 <__prologue_saves__+0x20>
    294e:	89 83       	std	Y+1, r24	; 0x01
    2950:	0e 94 82 14 	call	0x2904	; 0x2904 <_ZN20OrangutanPushbuttons4initEv>
    2954:	93 b1       	in	r25, 0x03	; 3
    2956:	90 95       	com	r25
    2958:	89 81       	ldd	r24, Y+1	; 0x01
    295a:	89 23       	and	r24, r25
    295c:	21 96       	adiw	r28, 0x01	; 1
    295e:	e2 e0       	ldi	r30, 0x02	; 2
    2960:	0c 94 e6 1c 	jmp	0x39cc	; 0x39cc <__epilogue_restores__+0x20>

00002964 <button_is_pressed>:
    2964:	0e 94 a1 14 	call	0x2942	; 0x2942 <_ZN20OrangutanPushbuttons9isPressedEh>
    2968:	08 95       	ret

0000296a <serial_receive_buffer_full>:
    296a:	20 91 a7 01 	lds	r18, 0x01A7	; 0x8001a7 <_ZN15OrangutanSerial5portsE+0x2>
    296e:	81 e0       	ldi	r24, 0x01	; 1
    2970:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <_ZN15OrangutanSerial5portsE+0x4>
    2974:	29 13       	cpse	r18, r25
    2976:	80 e0       	ldi	r24, 0x00	; 0
    2978:	08 95       	ret

0000297a <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
    297a:	28 2f       	mov	r18, r24
    297c:	30 e0       	ldi	r19, 0x00	; 0
    297e:	9a e0       	ldi	r25, 0x0A	; 10
    2980:	89 9f       	mul	r24, r25
    2982:	f0 01       	movw	r30, r0
    2984:	11 24       	eor	r1, r1
    2986:	eb 55       	subi	r30, 0x5B	; 91
    2988:	fe 4f       	sbci	r31, 0xFE	; 254
    298a:	80 85       	ldd	r24, Z+8	; 0x08
    298c:	91 85       	ldd	r25, Z+9	; 0x09
    298e:	00 97       	sbiw	r24, 0x00	; 0
    2990:	21 f0       	breq	.+8      	; 0x299a <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    2992:	52 81       	ldd	r21, Z+2	; 0x02
    2994:	44 81       	ldd	r20, Z+4	; 0x04
    2996:	54 17       	cp	r21, r20
    2998:	80 f0       	brcs	.+32     	; 0x29ba <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x40>
    299a:	8a e0       	ldi	r24, 0x0A	; 10
    299c:	82 9f       	mul	r24, r18
    299e:	f0 01       	movw	r30, r0
    29a0:	83 9f       	mul	r24, r19
    29a2:	f0 0d       	add	r31, r0
    29a4:	11 24       	eor	r1, r1
    29a6:	eb 55       	subi	r30, 0x5B	; 91
    29a8:	fe 4f       	sbci	r31, 0xFE	; 254
    29aa:	92 81       	ldd	r25, Z+2	; 0x02
    29ac:	84 81       	ldd	r24, Z+4	; 0x04
    29ae:	98 13       	cpse	r25, r24
    29b0:	0e c0       	rjmp	.+28     	; 0x29ce <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x54>
    29b2:	85 81       	ldd	r24, Z+5	; 0x05
    29b4:	81 11       	cpse	r24, r1
    29b6:	0a c0       	rjmp	.+20     	; 0x29cc <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
    29b8:	08 95       	ret
    29ba:	42 81       	ldd	r20, Z+2	; 0x02
    29bc:	dc 01       	movw	r26, r24
    29be:	a4 0f       	add	r26, r20
    29c0:	b1 1d       	adc	r27, r1
    29c2:	6c 93       	st	X, r22
    29c4:	82 81       	ldd	r24, Z+2	; 0x02
    29c6:	8f 5f       	subi	r24, 0xFF	; 255
    29c8:	82 83       	std	Z+2, r24	; 0x02
    29ca:	e7 cf       	rjmp	.-50     	; 0x299a <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    29cc:	12 82       	std	Z+2, r1	; 0x02
    29ce:	08 95       	ret

000029d0 <_ZN15OrangutanSerial15serial_rx_checkEh>:
    29d0:	cf 93       	push	r28
    29d2:	df 93       	push	r29
    29d4:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    29d8:	9f 77       	andi	r25, 0x7F	; 127
    29da:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    29de:	c8 2f       	mov	r28, r24
    29e0:	d0 e0       	ldi	r29, 0x00	; 0
    29e2:	9a e0       	ldi	r25, 0x0A	; 10
    29e4:	89 9f       	mul	r24, r25
    29e6:	f0 01       	movw	r30, r0
    29e8:	11 24       	eor	r1, r1
    29ea:	eb 55       	subi	r30, 0x5B	; 91
    29ec:	fe 4f       	sbci	r31, 0xFE	; 254
    29ee:	20 85       	ldd	r18, Z+8	; 0x08
    29f0:	31 85       	ldd	r19, Z+9	; 0x09
    29f2:	23 2b       	or	r18, r19
    29f4:	41 f0       	breq	.+16     	; 0x2a06 <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    29f6:	22 81       	ldd	r18, Z+2	; 0x02
    29f8:	94 81       	ldd	r25, Z+4	; 0x04
    29fa:	29 17       	cp	r18, r25
    29fc:	20 f4       	brcc	.+8      	; 0x2a06 <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    29fe:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2a02:	97 fd       	sbrc	r25, 7
    2a04:	11 c0       	rjmp	.+34     	; 0x2a28 <_ZN15OrangutanSerial15serial_rx_checkEh+0x58>
    2a06:	8a e0       	ldi	r24, 0x0A	; 10
    2a08:	8c 9f       	mul	r24, r28
    2a0a:	f0 01       	movw	r30, r0
    2a0c:	8d 9f       	mul	r24, r29
    2a0e:	f0 0d       	add	r31, r0
    2a10:	11 24       	eor	r1, r1
    2a12:	eb 55       	subi	r30, 0x5B	; 91
    2a14:	fe 4f       	sbci	r31, 0xFE	; 254
    2a16:	80 81       	ld	r24, Z
    2a18:	81 11       	cpse	r24, r1
    2a1a:	0b c0       	rjmp	.+22     	; 0x2a32 <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    2a1c:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2a20:	80 68       	ori	r24, 0x80	; 128
    2a22:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2a26:	05 c0       	rjmp	.+10     	; 0x2a32 <_ZN15OrangutanSerial15serial_rx_checkEh+0x62>
    2a28:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2a2c:	0e 94 bd 14 	call	0x297a	; 0x297a <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    2a30:	ea cf       	rjmp	.-44     	; 0x2a06 <_ZN15OrangutanSerial15serial_rx_checkEh+0x36>
    2a32:	df 91       	pop	r29
    2a34:	cf 91       	pop	r28
    2a36:	08 95       	ret

00002a38 <_ZN15OrangutanSerial14receive_inlineEhPchh>:
    2a38:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2a3c:	9f 77       	andi	r25, 0x7F	; 127
    2a3e:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2a42:	9a e0       	ldi	r25, 0x0A	; 10
    2a44:	89 9f       	mul	r24, r25
    2a46:	f0 01       	movw	r30, r0
    2a48:	11 24       	eor	r1, r1
    2a4a:	eb 55       	subi	r30, 0x5B	; 91
    2a4c:	fe 4f       	sbci	r31, 0xFE	; 254
    2a4e:	71 87       	std	Z+9, r23	; 0x09
    2a50:	60 87       	std	Z+8, r22	; 0x08
    2a52:	12 82       	std	Z+2, r1	; 0x02
    2a54:	44 83       	std	Z+4, r20	; 0x04
    2a56:	25 83       	std	Z+5, r18	; 0x05
    2a58:	80 81       	ld	r24, Z
    2a5a:	81 11       	cpse	r24, r1
    2a5c:	05 c0       	rjmp	.+10     	; 0x2a68 <_ZN15OrangutanSerial14receive_inlineEhPchh+0x30>
    2a5e:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2a62:	80 68       	ori	r24, 0x80	; 128
    2a64:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2a68:	08 95       	ret

00002a6a <_ZN15OrangutanSerial7receiveEPch>:
    2a6a:	46 2f       	mov	r20, r22
    2a6c:	20 e0       	ldi	r18, 0x00	; 0
    2a6e:	bc 01       	movw	r22, r24
    2a70:	80 e0       	ldi	r24, 0x00	; 0
    2a72:	0e 94 1c 15 	call	0x2a38	; 0x2a38 <_ZN15OrangutanSerial14receive_inlineEhPchh>
    2a76:	08 95       	ret

00002a78 <serial_receive>:
    2a78:	0e 94 35 15 	call	0x2a6a	; 0x2a6a <_ZN15OrangutanSerial7receiveEPch>
    2a7c:	08 95       	ret

00002a7e <__vector_18>:
    2a7e:	1f 92       	push	r1
    2a80:	0f 92       	push	r0
    2a82:	0f b6       	in	r0, 0x3f	; 63
    2a84:	0f 92       	push	r0
    2a86:	11 24       	eor	r1, r1
    2a88:	2f 93       	push	r18
    2a8a:	3f 93       	push	r19
    2a8c:	4f 93       	push	r20
    2a8e:	5f 93       	push	r21
    2a90:	6f 93       	push	r22
    2a92:	7f 93       	push	r23
    2a94:	8f 93       	push	r24
    2a96:	9f 93       	push	r25
    2a98:	af 93       	push	r26
    2a9a:	bf 93       	push	r27
    2a9c:	ef 93       	push	r30
    2a9e:	ff 93       	push	r31
    2aa0:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2aa4:	80 e0       	ldi	r24, 0x00	; 0
    2aa6:	0e 94 bd 14 	call	0x297a	; 0x297a <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    2aaa:	ff 91       	pop	r31
    2aac:	ef 91       	pop	r30
    2aae:	bf 91       	pop	r27
    2ab0:	af 91       	pop	r26
    2ab2:	9f 91       	pop	r25
    2ab4:	8f 91       	pop	r24
    2ab6:	7f 91       	pop	r23
    2ab8:	6f 91       	pop	r22
    2aba:	5f 91       	pop	r21
    2abc:	4f 91       	pop	r20
    2abe:	3f 91       	pop	r19
    2ac0:	2f 91       	pop	r18
    2ac2:	0f 90       	pop	r0
    2ac4:	0f be       	out	0x3f, r0	; 63
    2ac6:	0f 90       	pop	r0
    2ac8:	1f 90       	pop	r1
    2aca:	18 95       	reti

00002acc <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    2acc:	9a e0       	ldi	r25, 0x0A	; 10
    2ace:	89 9f       	mul	r24, r25
    2ad0:	f0 01       	movw	r30, r0
    2ad2:	11 24       	eor	r1, r1
    2ad4:	eb 55       	subi	r30, 0x5B	; 91
    2ad6:	fe 4f       	sbci	r31, 0xFE	; 254
    2ad8:	86 81       	ldd	r24, Z+6	; 0x06
    2ada:	97 81       	ldd	r25, Z+7	; 0x07
    2adc:	89 2b       	or	r24, r25
    2ade:	59 f0       	breq	.+22     	; 0x2af6 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2ae0:	91 81       	ldd	r25, Z+1	; 0x01
    2ae2:	83 81       	ldd	r24, Z+3	; 0x03
    2ae4:	98 17       	cp	r25, r24
    2ae6:	38 f4       	brcc	.+14     	; 0x2af6 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2ae8:	80 81       	ld	r24, Z
    2aea:	81 11       	cpse	r24, r1
    2aec:	04 c0       	rjmp	.+8      	; 0x2af6 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2aee:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2af2:	80 62       	ori	r24, 0x20	; 32
    2af4:	03 c0       	rjmp	.+6      	; 0x2afc <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x30>
    2af6:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2afa:	8f 7d       	andi	r24, 0xDF	; 223
    2afc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b00:	08 95       	ret

00002b02 <_ZN15OrangutanSerial15initUART_inlineEh>:
    2b02:	9a e0       	ldi	r25, 0x0A	; 10
    2b04:	89 9f       	mul	r24, r25
    2b06:	f0 01       	movw	r30, r0
    2b08:	11 24       	eor	r1, r1
    2b0a:	eb 55       	subi	r30, 0x5B	; 91
    2b0c:	fe 4f       	sbci	r31, 0xFE	; 254
    2b0e:	90 81       	ld	r25, Z
    2b10:	91 11       	cpse	r25, r1
    2b12:	02 c0       	rjmp	.+4      	; 0x2b18 <_ZN15OrangutanSerial15initUART_inlineEh+0x16>
    2b14:	98 e9       	ldi	r25, 0x98	; 152
    2b16:	01 c0       	rjmp	.+2      	; 0x2b1a <_ZN15OrangutanSerial15initUART_inlineEh+0x18>
    2b18:	98 e1       	ldi	r25, 0x18	; 24
    2b1a:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    2b1e:	0e 94 66 15 	call	0x2acc	; 0x2acc <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2b22:	78 94       	sei
    2b24:	08 95       	ret

00002b26 <serial_set_baud_rate>:
    2b26:	cf 92       	push	r12
    2b28:	df 92       	push	r13
    2b2a:	ef 92       	push	r14
    2b2c:	ff 92       	push	r15
    2b2e:	6b 01       	movw	r12, r22
    2b30:	7c 01       	movw	r14, r24
    2b32:	80 e0       	ldi	r24, 0x00	; 0
    2b34:	0e 94 81 15 	call	0x2b02	; 0x2b02 <_ZN15OrangutanSerial15initUART_inlineEh>
    2b38:	a8 ef       	ldi	r26, 0xF8	; 248
    2b3a:	bf ef       	ldi	r27, 0xFF	; 255
    2b3c:	a7 01       	movw	r20, r14
    2b3e:	96 01       	movw	r18, r12
    2b40:	0e 94 b5 1c 	call	0x396a	; 0x396a <__mulohisi3>
    2b44:	73 5d       	subi	r23, 0xD3	; 211
    2b46:	8e 4c       	sbci	r24, 0xCE	; 206
    2b48:	9e 4f       	sbci	r25, 0xFE	; 254
    2b4a:	e4 e0       	ldi	r30, 0x04	; 4
    2b4c:	22 0f       	add	r18, r18
    2b4e:	33 1f       	adc	r19, r19
    2b50:	44 1f       	adc	r20, r20
    2b52:	55 1f       	adc	r21, r21
    2b54:	ea 95       	dec	r30
    2b56:	d1 f7       	brne	.-12     	; 0x2b4c <serial_set_baud_rate+0x26>
    2b58:	0e 94 51 1c 	call	0x38a2	; 0x38a2 <__udivmodsi4>
    2b5c:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
    2b60:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
    2b64:	ff 90       	pop	r15
    2b66:	ef 90       	pop	r14
    2b68:	df 90       	pop	r13
    2b6a:	cf 90       	pop	r12
    2b6c:	08 95       	ret

00002b6e <_ZN15OrangutanSerial4sendEPch>:
    2b6e:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <_ZN15OrangutanSerial5portsE+0x7>
    2b72:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_ZN15OrangutanSerial5portsE+0x6>
    2b76:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <_ZN15OrangutanSerial5portsE+0x1>
    2b7a:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <_ZN15OrangutanSerial5portsE+0x3>
    2b7e:	80 e0       	ldi	r24, 0x00	; 0
    2b80:	0e 94 66 15 	call	0x2acc	; 0x2acc <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2b84:	08 95       	ret

00002b86 <serial_send>:
    2b86:	0e 94 b7 15 	call	0x2b6e	; 0x2b6e <_ZN15OrangutanSerial4sendEPch>
    2b8a:	08 95       	ret

00002b8c <_ZN15OrangutanSerial11uart_tx_isrEh>:
    2b8c:	9a e0       	ldi	r25, 0x0A	; 10
    2b8e:	89 9f       	mul	r24, r25
    2b90:	f0 01       	movw	r30, r0
    2b92:	11 24       	eor	r1, r1
    2b94:	eb 55       	subi	r30, 0x5B	; 91
    2b96:	fe 4f       	sbci	r31, 0xFE	; 254
    2b98:	26 81       	ldd	r18, Z+6	; 0x06
    2b9a:	37 81       	ldd	r19, Z+7	; 0x07
    2b9c:	21 15       	cp	r18, r1
    2b9e:	31 05       	cpc	r19, r1
    2ba0:	41 f0       	breq	.+16     	; 0x2bb2 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2ba2:	41 81       	ldd	r20, Z+1	; 0x01
    2ba4:	93 81       	ldd	r25, Z+3	; 0x03
    2ba6:	49 17       	cp	r20, r25
    2ba8:	20 f4       	brcc	.+8      	; 0x2bb2 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2baa:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
    2bae:	95 fd       	sbrc	r25, 5
    2bb0:	03 c0       	rjmp	.+6      	; 0x2bb8 <_ZN15OrangutanSerial11uart_tx_isrEh+0x2c>
    2bb2:	0e 94 66 15 	call	0x2acc	; 0x2acc <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2bb6:	08 95       	ret
    2bb8:	91 81       	ldd	r25, Z+1	; 0x01
    2bba:	d9 01       	movw	r26, r18
    2bbc:	a9 0f       	add	r26, r25
    2bbe:	b1 1d       	adc	r27, r1
    2bc0:	9c 91       	ld	r25, X
    2bc2:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    2bc6:	91 81       	ldd	r25, Z+1	; 0x01
    2bc8:	9f 5f       	subi	r25, 0xFF	; 255
    2bca:	91 83       	std	Z+1, r25	; 0x01
    2bcc:	f2 cf       	rjmp	.-28     	; 0x2bb2 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>

00002bce <_ZN15OrangutanSerial5checkEv>:
    2bce:	e1 ec       	ldi	r30, 0xC1	; 193
    2bd0:	f0 e0       	ldi	r31, 0x00	; 0
    2bd2:	80 81       	ld	r24, Z
    2bd4:	8f 7d       	andi	r24, 0xDF	; 223
    2bd6:	80 83       	st	Z, r24
    2bd8:	80 e0       	ldi	r24, 0x00	; 0
    2bda:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <_ZN15OrangutanSerial11uart_tx_isrEh>
    2bde:	80 e0       	ldi	r24, 0x00	; 0
    2be0:	0e 94 e8 14 	call	0x29d0	; 0x29d0 <_ZN15OrangutanSerial15serial_rx_checkEh>
    2be4:	08 95       	ret

00002be6 <_ZN15OrangutanSerial12sendBlockingEPch>:
    2be6:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <_ZN15OrangutanSerial5portsE+0x7>
    2bea:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <_ZN15OrangutanSerial5portsE+0x6>
    2bee:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <_ZN15OrangutanSerial5portsE+0x1>
    2bf2:	60 93 a8 01 	sts	0x01A8, r22	; 0x8001a8 <_ZN15OrangutanSerial5portsE+0x3>
    2bf6:	80 e0       	ldi	r24, 0x00	; 0
    2bf8:	0e 94 66 15 	call	0x2acc	; 0x2acc <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2bfc:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <_ZN15OrangutanSerial5portsE+0x1>
    2c00:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <_ZN15OrangutanSerial5portsE+0x3>
    2c04:	98 17       	cp	r25, r24
    2c06:	19 f0       	breq	.+6      	; 0x2c0e <_ZN15OrangutanSerial12sendBlockingEPch+0x28>
    2c08:	0e 94 e7 15 	call	0x2bce	; 0x2bce <_ZN15OrangutanSerial5checkEv>
    2c0c:	f7 cf       	rjmp	.-18     	; 0x2bfc <_ZN15OrangutanSerial12sendBlockingEPch+0x16>
    2c0e:	08 95       	ret

00002c10 <serial_send_blocking>:
    2c10:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <_ZN15OrangutanSerial12sendBlockingEPch>
    2c14:	08 95       	ret

00002c16 <__vector_19>:
    2c16:	1f 92       	push	r1
    2c18:	0f 92       	push	r0
    2c1a:	0f b6       	in	r0, 0x3f	; 63
    2c1c:	0f 92       	push	r0
    2c1e:	11 24       	eor	r1, r1
    2c20:	2f 93       	push	r18
    2c22:	3f 93       	push	r19
    2c24:	4f 93       	push	r20
    2c26:	5f 93       	push	r21
    2c28:	6f 93       	push	r22
    2c2a:	7f 93       	push	r23
    2c2c:	8f 93       	push	r24
    2c2e:	9f 93       	push	r25
    2c30:	af 93       	push	r26
    2c32:	bf 93       	push	r27
    2c34:	ef 93       	push	r30
    2c36:	ff 93       	push	r31
    2c38:	80 e0       	ldi	r24, 0x00	; 0
    2c3a:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <_ZN15OrangutanSerial11uart_tx_isrEh>
    2c3e:	ff 91       	pop	r31
    2c40:	ef 91       	pop	r30
    2c42:	bf 91       	pop	r27
    2c44:	af 91       	pop	r26
    2c46:	9f 91       	pop	r25
    2c48:	8f 91       	pop	r24
    2c4a:	7f 91       	pop	r23
    2c4c:	6f 91       	pop	r22
    2c4e:	5f 91       	pop	r21
    2c50:	4f 91       	pop	r20
    2c52:	3f 91       	pop	r19
    2c54:	2f 91       	pop	r18
    2c56:	0f 90       	pop	r0
    2c58:	0f be       	out	0x3f, r0	; 63
    2c5a:	0f 90       	pop	r0
    2c5c:	1f 90       	pop	r1
    2c5e:	18 95       	reti

00002c60 <__vector_9>:
    2c60:	2f 92       	push	r2
    2c62:	8f 93       	push	r24
    2c64:	9f 93       	push	r25
    2c66:	2f b6       	in	r2, 0x3f	; 63
    2c68:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <tickCount+0x1>
    2c6c:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <tickCount+0x2>
    2c70:	01 96       	adiw	r24, 0x01	; 1
    2c72:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <tickCount+0x1>
    2c76:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <tickCount+0x2>
    2c7a:	90 e0       	ldi	r25, 0x00	; 0
    2c7c:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <tickCount+0x3>
    2c80:	89 1f       	adc	r24, r25
    2c82:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <tickCount+0x3>
    2c86:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <us_over_10+0x1>
    2c8a:	9c 5f       	subi	r25, 0xFC	; 252
    2c8c:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <us_over_10+0x1>
    2c90:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <us_over_10>
    2c94:	80 51       	subi	r24, 0x10	; 16
    2c96:	97 42       	sbci	r25, 0x27	; 39
    2c98:	c0 f0       	brcs	.+48     	; 0x2cca <end>
    2c9a:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <us_over_10+0x1>
    2c9e:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <us_over_10>
    2ca2:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <msCounter>
    2ca6:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <msCounter+0x1>
    2caa:	01 96       	adiw	r24, 0x01	; 1
    2cac:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <msCounter>
    2cb0:	90 93 b2 01 	sts	0x01B2, r25	; 0x8001b2 <msCounter+0x1>
    2cb4:	90 e0       	ldi	r25, 0x00	; 0
    2cb6:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <msCounter+0x2>
    2cba:	89 1f       	adc	r24, r25
    2cbc:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <msCounter+0x2>
    2cc0:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <msCounter+0x3>
    2cc4:	89 1f       	adc	r24, r25
    2cc6:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <msCounter+0x3>

00002cca <end>:
    2cca:	2f be       	out	0x3f, r2	; 63
    2ccc:	9f 91       	pop	r25
    2cce:	8f 91       	pop	r24
    2cd0:	2f 90       	pop	r2
    2cd2:	18 95       	reti

00002cd4 <_ZN13OrangutanTime17delayMillisecondsEj>:
    2cd4:	28 ee       	ldi	r18, 0xE8	; 232
    2cd6:	33 e0       	ldi	r19, 0x03	; 3
    2cd8:	01 97       	sbiw	r24, 0x01	; 1
    2cda:	48 f0       	brcs	.+18     	; 0x2cee <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    2cdc:	f9 01       	movw	r30, r18
    2cde:	6f 93       	push	r22
    2ce0:	64 e0       	ldi	r22, 0x04	; 4
    2ce2:	6a 95       	dec	r22
    2ce4:	f1 f7       	brne	.-4      	; 0x2ce2 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    2ce6:	6f 91       	pop	r22
    2ce8:	31 97       	sbiw	r30, 0x01	; 1
    2cea:	c9 f7       	brne	.-14     	; 0x2cde <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    2cec:	f5 cf       	rjmp	.-22     	; 0x2cd8 <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    2cee:	08 95       	ret

00002cf0 <delay_ms>:
    2cf0:	0e 94 6a 16 	call	0x2cd4	; 0x2cd4 <_ZN13OrangutanTime17delayMillisecondsEj>
    2cf4:	08 95       	ret

00002cf6 <_ZN13OrangutanTime5init2Ev>:
    2cf6:	e0 e7       	ldi	r30, 0x70	; 112
    2cf8:	f0 e0       	ldi	r31, 0x00	; 0
    2cfa:	80 81       	ld	r24, Z
    2cfc:	8e 7f       	andi	r24, 0xFE	; 254
    2cfe:	80 83       	st	Z, r24
    2d00:	a0 eb       	ldi	r26, 0xB0	; 176
    2d02:	b0 e0       	ldi	r27, 0x00	; 0
    2d04:	8c 91       	ld	r24, X
    2d06:	83 60       	ori	r24, 0x03	; 3
    2d08:	8c 93       	st	X, r24
    2d0a:	a1 eb       	ldi	r26, 0xB1	; 177
    2d0c:	b0 e0       	ldi	r27, 0x00	; 0
    2d0e:	8c 91       	ld	r24, X
    2d10:	80 7f       	andi	r24, 0xF0	; 240
    2d12:	8c 93       	st	X, r24
    2d14:	8c 91       	ld	r24, X
    2d16:	82 60       	ori	r24, 0x02	; 2
    2d18:	8c 93       	st	X, r24
    2d1a:	b8 9a       	sbi	0x17, 0	; 23
    2d1c:	80 81       	ld	r24, Z
    2d1e:	81 60       	ori	r24, 0x01	; 1
    2d20:	80 83       	st	Z, r24
    2d22:	78 94       	sei
    2d24:	08 95       	ret

00002d26 <_ZN13OrangutanTime4initEv>:
    2d26:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <_ZZN13OrangutanTime4initEvE11initialized>
    2d2a:	81 11       	cpse	r24, r1
    2d2c:	05 c0       	rjmp	.+10     	; 0x2d38 <_ZN13OrangutanTime4initEv+0x12>
    2d2e:	81 e0       	ldi	r24, 0x01	; 1
    2d30:	80 93 0f 02 	sts	0x020F, r24	; 0x80020f <_ZZN13OrangutanTime4initEvE11initialized>
    2d34:	0e 94 7b 16 	call	0x2cf6	; 0x2cf6 <_ZN13OrangutanTime5init2Ev>
    2d38:	08 95       	ret

00002d3a <_ZN13OrangutanTime2msEv>:
    2d3a:	0e 94 93 16 	call	0x2d26	; 0x2d26 <_ZN13OrangutanTime4initEv>
    2d3e:	e0 e7       	ldi	r30, 0x70	; 112
    2d40:	f0 e0       	ldi	r31, 0x00	; 0
    2d42:	80 81       	ld	r24, Z
    2d44:	8e 7f       	andi	r24, 0xFE	; 254
    2d46:	80 83       	st	Z, r24
    2d48:	60 91 b1 01 	lds	r22, 0x01B1	; 0x8001b1 <msCounter>
    2d4c:	70 91 b2 01 	lds	r23, 0x01B2	; 0x8001b2 <msCounter+0x1>
    2d50:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <msCounter+0x2>
    2d54:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <msCounter+0x3>
    2d58:	20 81       	ld	r18, Z
    2d5a:	21 60       	ori	r18, 0x01	; 1
    2d5c:	20 83       	st	Z, r18
    2d5e:	08 95       	ret

00002d60 <get_ms>:
    2d60:	0e 94 9d 16 	call	0x2d3a	; 0x2d3a <_ZN13OrangutanTime2msEv>
    2d64:	08 95       	ret

00002d66 <_ZN13OrangutanTime5resetEv>:
    2d66:	0e 94 93 16 	call	0x2d26	; 0x2d26 <_ZN13OrangutanTime4initEv>
    2d6a:	e0 e7       	ldi	r30, 0x70	; 112
    2d6c:	f0 e0       	ldi	r31, 0x00	; 0
    2d6e:	80 81       	ld	r24, Z
    2d70:	8e 7f       	andi	r24, 0xFE	; 254
    2d72:	80 83       	st	Z, r24
    2d74:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <msCounter>
    2d78:	10 92 b2 01 	sts	0x01B2, r1	; 0x8001b2 <msCounter+0x1>
    2d7c:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <msCounter+0x2>
    2d80:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <msCounter+0x3>
    2d84:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <us_over_10+0x1>
    2d88:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <us_over_10>
    2d8c:	80 81       	ld	r24, Z
    2d8e:	81 60       	ori	r24, 0x01	; 1
    2d90:	80 83       	st	Z, r24
    2d92:	08 95       	ret

00002d94 <calibrate_line_sensors>:
    2d94:	68 2f       	mov	r22, r24
    2d96:	89 eb       	ldi	r24, 0xB9	; 185
    2d98:	91 e0       	ldi	r25, 0x01	; 1
    2d9a:	0e 94 b9 1a 	call	0x3572	; 0x3572 <_ZN16PololuQTRSensors9calibrateEh>
    2d9e:	08 95       	ret

00002da0 <read_line_sensors_calibrated>:
    2da0:	46 2f       	mov	r20, r22
    2da2:	bc 01       	movw	r22, r24
    2da4:	89 eb       	ldi	r24, 0xB9	; 185
    2da6:	91 e0       	ldi	r25, 0x01	; 1
    2da8:	0e 94 dd 1a 	call	0x35ba	; 0x35ba <_ZN16PololuQTRSensors14readCalibratedEPjh>
    2dac:	08 95       	ret

00002dae <read_line>:
    2dae:	46 2f       	mov	r20, r22
    2db0:	20 e0       	ldi	r18, 0x00	; 0
    2db2:	bc 01       	movw	r22, r24
    2db4:	89 eb       	ldi	r24, 0xB9	; 185
    2db6:	91 e0       	ldi	r25, 0x01	; 1
    2db8:	0e 94 8a 1b 	call	0x3714	; 0x3714 <_ZN16PololuQTRSensors8readLineEPjhh>
    2dbc:	08 95       	ret

00002dbe <_ZN9Pololu3pi4initEjh>:
    2dbe:	0f 93       	push	r16
    2dc0:	cf 93       	push	r28
    2dc2:	df 93       	push	r29
    2dc4:	00 d0       	rcall	.+0      	; 0x2dc6 <_ZN9Pololu3pi4initEjh+0x8>
    2dc6:	00 d0       	rcall	.+0      	; 0x2dc8 <_ZN9Pololu3pi4initEjh+0xa>
    2dc8:	1f 92       	push	r1
    2dca:	cd b7       	in	r28, 0x3d	; 61
    2dcc:	de b7       	in	r29, 0x3e	; 62
    2dce:	9c 01       	movw	r18, r24
    2dd0:	85 e0       	ldi	r24, 0x05	; 5
    2dd2:	e0 e5       	ldi	r30, 0x50	; 80
    2dd4:	f1 e0       	ldi	r31, 0x01	; 1
    2dd6:	de 01       	movw	r26, r28
    2dd8:	11 96       	adiw	r26, 0x01	; 1
    2dda:	01 90       	ld	r0, Z+
    2ddc:	0d 92       	st	X+, r0
    2dde:	8a 95       	dec	r24
    2de0:	e1 f7       	brne	.-8      	; 0x2dda <_ZN9Pololu3pi4initEjh+0x1c>
    2de2:	66 23       	and	r22, r22
    2de4:	11 f0       	breq	.+4      	; 0x2dea <_ZN9Pololu3pi4initEjh+0x2c>
    2de6:	0f ef       	ldi	r16, 0xFF	; 255
    2de8:	01 c0       	rjmp	.+2      	; 0x2dec <_ZN9Pololu3pi4initEjh+0x2e>
    2dea:	03 e1       	ldi	r16, 0x13	; 19
    2dec:	45 e0       	ldi	r20, 0x05	; 5
    2dee:	be 01       	movw	r22, r28
    2df0:	6f 5f       	subi	r22, 0xFF	; 255
    2df2:	7f 4f       	sbci	r23, 0xFF	; 255
    2df4:	89 eb       	ldi	r24, 0xB9	; 185
    2df6:	91 e0       	ldi	r25, 0x01	; 1
    2df8:	0e 94 b1 17 	call	0x2f62	; 0x2f62 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    2dfc:	89 eb       	ldi	r24, 0xB9	; 185
    2dfe:	91 e0       	ldi	r25, 0x01	; 1
    2e00:	0e 94 88 17 	call	0x2f10	; 0x2f10 <_ZN16PololuQTRSensors11emittersOffEv>
    2e04:	0e 94 b3 16 	call	0x2d66	; 0x2d66 <_ZN13OrangutanTime5resetEv>
    2e08:	0f 90       	pop	r0
    2e0a:	0f 90       	pop	r0
    2e0c:	0f 90       	pop	r0
    2e0e:	0f 90       	pop	r0
    2e10:	0f 90       	pop	r0
    2e12:	df 91       	pop	r29
    2e14:	cf 91       	pop	r28
    2e16:	0f 91       	pop	r16
    2e18:	08 95       	ret

00002e1a <pololu_3pi_init>:
    2e1a:	60 e0       	ldi	r22, 0x00	; 0
    2e1c:	0e 94 df 16 	call	0x2dbe	; 0x2dbe <_ZN9Pololu3pi4initEjh>
    2e20:	08 95       	ret

00002e22 <_GLOBAL__sub_D_pololu_3pi_init>:
    2e22:	89 eb       	ldi	r24, 0xB9	; 185
    2e24:	91 e0       	ldi	r25, 0x01	; 1
    2e26:	0e 94 ff 1b 	call	0x37fe	; 0x37fe <_ZN16PololuQTRSensorsD1Ev>
    2e2a:	08 95       	ret

00002e2c <delay_us>:
    2e2c:	6f 93       	push	r22
    2e2e:	64 e0       	ldi	r22, 0x04	; 4
    2e30:	6a 95       	dec	r22
    2e32:	f1 f7       	brne	.-4      	; 0x2e30 <delay_us+0x4>
    2e34:	6f 91       	pop	r22
    2e36:	01 97       	sbiw	r24, 0x01	; 1
    2e38:	c9 f7       	brne	.-14     	; 0x2e2c <delay_us>
    2e3a:	08 95       	ret

00002e3c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    2e3c:	fc 01       	movw	r30, r24
    2e3e:	11 82       	std	Z+1, r1	; 0x01
    2e40:	10 82       	st	Z, r1
    2e42:	13 82       	std	Z+3, r1	; 0x03
    2e44:	12 82       	std	Z+2, r1	; 0x02
    2e46:	15 82       	std	Z+5, r1	; 0x05
    2e48:	14 82       	std	Z+4, r1	; 0x04
    2e4a:	16 82       	std	Z+6, r1	; 0x06
    2e4c:	68 30       	cpi	r22, 0x08	; 8
    2e4e:	68 f4       	brcc	.+26     	; 0x2e6a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    2e50:	89 e2       	ldi	r24, 0x29	; 41
    2e52:	90 e0       	ldi	r25, 0x00	; 0
    2e54:	91 83       	std	Z+1, r25	; 0x01
    2e56:	80 83       	st	Z, r24
    2e58:	8b e2       	ldi	r24, 0x2B	; 43
    2e5a:	90 e0       	ldi	r25, 0x00	; 0
    2e5c:	93 83       	std	Z+3, r25	; 0x03
    2e5e:	82 83       	std	Z+2, r24	; 0x02
    2e60:	8a e2       	ldi	r24, 0x2A	; 42
    2e62:	90 e0       	ldi	r25, 0x00	; 0
    2e64:	95 83       	std	Z+5, r25	; 0x05
    2e66:	84 83       	std	Z+4, r24	; 0x04
    2e68:	1f c0       	rjmp	.+62     	; 0x2ea8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2e6a:	6e 30       	cpi	r22, 0x0E	; 14
    2e6c:	70 f4       	brcc	.+28     	; 0x2e8a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    2e6e:	83 e2       	ldi	r24, 0x23	; 35
    2e70:	90 e0       	ldi	r25, 0x00	; 0
    2e72:	91 83       	std	Z+1, r25	; 0x01
    2e74:	80 83       	st	Z, r24
    2e76:	85 e2       	ldi	r24, 0x25	; 37
    2e78:	90 e0       	ldi	r25, 0x00	; 0
    2e7a:	93 83       	std	Z+3, r25	; 0x03
    2e7c:	82 83       	std	Z+2, r24	; 0x02
    2e7e:	84 e2       	ldi	r24, 0x24	; 36
    2e80:	90 e0       	ldi	r25, 0x00	; 0
    2e82:	95 83       	std	Z+5, r25	; 0x05
    2e84:	84 83       	std	Z+4, r24	; 0x04
    2e86:	68 50       	subi	r22, 0x08	; 8
    2e88:	0f c0       	rjmp	.+30     	; 0x2ea8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2e8a:	65 31       	cpi	r22, 0x15	; 21
    2e8c:	98 f4       	brcc	.+38     	; 0x2eb4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    2e8e:	86 e2       	ldi	r24, 0x26	; 38
    2e90:	90 e0       	ldi	r25, 0x00	; 0
    2e92:	91 83       	std	Z+1, r25	; 0x01
    2e94:	80 83       	st	Z, r24
    2e96:	88 e2       	ldi	r24, 0x28	; 40
    2e98:	90 e0       	ldi	r25, 0x00	; 0
    2e9a:	93 83       	std	Z+3, r25	; 0x03
    2e9c:	82 83       	std	Z+2, r24	; 0x02
    2e9e:	87 e2       	ldi	r24, 0x27	; 39
    2ea0:	90 e0       	ldi	r25, 0x00	; 0
    2ea2:	95 83       	std	Z+5, r25	; 0x05
    2ea4:	84 83       	std	Z+4, r24	; 0x04
    2ea6:	6e 50       	subi	r22, 0x0E	; 14
    2ea8:	81 e0       	ldi	r24, 0x01	; 1
    2eaa:	01 c0       	rjmp	.+2      	; 0x2eae <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    2eac:	88 0f       	add	r24, r24
    2eae:	6a 95       	dec	r22
    2eb0:	ea f7       	brpl	.-6      	; 0x2eac <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    2eb2:	86 83       	std	Z+6, r24	; 0x06
    2eb4:	08 95       	ret

00002eb6 <_ZN16PololuQTRSensors4initEhhh>:
    2eb6:	a7 e0       	ldi	r26, 0x07	; 7
    2eb8:	b0 e0       	ldi	r27, 0x00	; 0
    2eba:	e1 e6       	ldi	r30, 0x61	; 97
    2ebc:	f7 e1       	ldi	r31, 0x17	; 23
    2ebe:	0c 94 c8 1c 	jmp	0x3990	; 0x3990 <__prologue_saves__+0x1c>
    2ec2:	8c 01       	movw	r16, r24
    2ec4:	fc 01       	movw	r30, r24
    2ec6:	11 82       	std	Z+1, r1	; 0x01
    2ec8:	10 82       	st	Z, r1
    2eca:	13 82       	std	Z+3, r1	; 0x03
    2ecc:	12 82       	std	Z+2, r1	; 0x02
    2ece:	15 82       	std	Z+5, r1	; 0x05
    2ed0:	14 82       	std	Z+4, r1	; 0x04
    2ed2:	17 82       	std	Z+7, r1	; 0x07
    2ed4:	16 82       	std	Z+6, r1	; 0x06
    2ed6:	61 31       	cpi	r22, 0x11	; 17
    2ed8:	18 f0       	brcs	.+6      	; 0x2ee0 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    2eda:	80 e1       	ldi	r24, 0x10	; 16
    2edc:	80 87       	std	Z+8, r24	; 0x08
    2ede:	02 c0       	rjmp	.+4      	; 0x2ee4 <_ZN16PololuQTRSensors4initEhhh+0x2e>
    2ee0:	fc 01       	movw	r30, r24
    2ee2:	60 87       	std	Z+8, r22	; 0x08
    2ee4:	f8 01       	movw	r30, r16
    2ee6:	20 8b       	std	Z+16, r18	; 0x10
    2ee8:	64 2f       	mov	r22, r20
    2eea:	ce 01       	movw	r24, r28
    2eec:	01 96       	adiw	r24, 0x01	; 1
    2eee:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    2ef2:	8f 81       	ldd	r24, Y+7	; 0x07
    2ef4:	f8 01       	movw	r30, r16
    2ef6:	81 87       	std	Z+9, r24	; 0x09
    2ef8:	8b 81       	ldd	r24, Y+3	; 0x03
    2efa:	9c 81       	ldd	r25, Y+4	; 0x04
    2efc:	93 87       	std	Z+11, r25	; 0x0b
    2efe:	82 87       	std	Z+10, r24	; 0x0a
    2f00:	8d 81       	ldd	r24, Y+5	; 0x05
    2f02:	9e 81       	ldd	r25, Y+6	; 0x06
    2f04:	95 87       	std	Z+13, r25	; 0x0d
    2f06:	84 87       	std	Z+12, r24	; 0x0c
    2f08:	27 96       	adiw	r28, 0x07	; 7
    2f0a:	e4 e0       	ldi	r30, 0x04	; 4
    2f0c:	0c 94 e4 1c 	jmp	0x39c8	; 0x39c8 <__epilogue_restores__+0x1c>

00002f10 <_ZN16PololuQTRSensors11emittersOffEv>:
    2f10:	fc 01       	movw	r30, r24
    2f12:	a4 85       	ldd	r26, Z+12	; 0x0c
    2f14:	b5 85       	ldd	r27, Z+13	; 0x0d
    2f16:	10 97       	sbiw	r26, 0x00	; 0
    2f18:	79 f0       	breq	.+30     	; 0x2f38 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    2f1a:	8c 91       	ld	r24, X
    2f1c:	91 85       	ldd	r25, Z+9	; 0x09
    2f1e:	89 2b       	or	r24, r25
    2f20:	8c 93       	st	X, r24
    2f22:	a2 85       	ldd	r26, Z+10	; 0x0a
    2f24:	b3 85       	ldd	r27, Z+11	; 0x0b
    2f26:	9c 91       	ld	r25, X
    2f28:	81 85       	ldd	r24, Z+9	; 0x09
    2f2a:	80 95       	com	r24
    2f2c:	89 23       	and	r24, r25
    2f2e:	8c 93       	st	X, r24
    2f30:	88 ec       	ldi	r24, 0xC8	; 200
    2f32:	90 e0       	ldi	r25, 0x00	; 0
    2f34:	0e 94 16 17 	call	0x2e2c	; 0x2e2c <delay_us>
    2f38:	08 95       	ret

00002f3a <_ZN16PololuQTRSensors10emittersOnEv>:
    2f3a:	fc 01       	movw	r30, r24
    2f3c:	a4 85       	ldd	r26, Z+12	; 0x0c
    2f3e:	b5 85       	ldd	r27, Z+13	; 0x0d
    2f40:	10 97       	sbiw	r26, 0x00	; 0
    2f42:	71 f0       	breq	.+28     	; 0x2f60 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    2f44:	8c 91       	ld	r24, X
    2f46:	91 85       	ldd	r25, Z+9	; 0x09
    2f48:	89 2b       	or	r24, r25
    2f4a:	8c 93       	st	X, r24
    2f4c:	a2 85       	ldd	r26, Z+10	; 0x0a
    2f4e:	b3 85       	ldd	r27, Z+11	; 0x0b
    2f50:	8c 91       	ld	r24, X
    2f52:	91 85       	ldd	r25, Z+9	; 0x09
    2f54:	89 2b       	or	r24, r25
    2f56:	8c 93       	st	X, r24
    2f58:	88 ec       	ldi	r24, 0xC8	; 200
    2f5a:	90 e0       	ldi	r25, 0x00	; 0
    2f5c:	0e 94 16 17 	call	0x2e2c	; 0x2e2c <delay_us>
    2f60:	08 95       	ret

00002f62 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    2f62:	a7 e0       	ldi	r26, 0x07	; 7
    2f64:	b0 e0       	ldi	r27, 0x00	; 0
    2f66:	e7 eb       	ldi	r30, 0xB7	; 183
    2f68:	f7 e1       	ldi	r31, 0x17	; 23
    2f6a:	0c 94 bd 1c 	jmp	0x397a	; 0x397a <__prologue_saves__+0x6>
    2f6e:	7c 01       	movw	r14, r24
    2f70:	4b 01       	movw	r8, r22
    2f72:	64 2f       	mov	r22, r20
    2f74:	39 01       	movw	r6, r18
    2f76:	40 2f       	mov	r20, r16
    2f78:	20 e0       	ldi	r18, 0x00	; 0
    2f7a:	0e 94 5b 17 	call	0x2eb6	; 0x2eb6 <_ZN16PololuQTRSensors4initEhhh>
    2f7e:	87 01       	movw	r16, r14
    2f80:	0f 5b       	subi	r16, 0xBF	; 191
    2f82:	1f 4f       	sbci	r17, 0xFF	; 255
    2f84:	f8 01       	movw	r30, r16
    2f86:	10 82       	st	Z, r1
    2f88:	67 01       	movw	r12, r14
    2f8a:	f2 e4       	ldi	r31, 0x42	; 66
    2f8c:	cf 0e       	add	r12, r31
    2f8e:	d1 1c       	adc	r13, r1
    2f90:	f6 01       	movw	r30, r12
    2f92:	10 82       	st	Z, r1
    2f94:	57 01       	movw	r10, r14
    2f96:	f3 e4       	ldi	r31, 0x43	; 67
    2f98:	af 0e       	add	r10, r31
    2f9a:	b1 1c       	adc	r11, r1
    2f9c:	f5 01       	movw	r30, r10
    2f9e:	10 82       	st	Z, r1
    2fa0:	f7 01       	movw	r30, r14
    2fa2:	77 86       	std	Z+15, r7	; 0x0f
    2fa4:	66 86       	std	Z+14, r6	; 0x0e
    2fa6:	51 2c       	mov	r5, r1
    2fa8:	f7 01       	movw	r30, r14
    2faa:	80 85       	ldd	r24, Z+8	; 0x08
    2fac:	58 16       	cp	r5, r24
    2fae:	50 f5       	brcc	.+84     	; 0x3004 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    2fb0:	65 2c       	mov	r6, r5
    2fb2:	71 2c       	mov	r7, r1
    2fb4:	f4 01       	movw	r30, r8
    2fb6:	e6 0d       	add	r30, r6
    2fb8:	f7 1d       	adc	r31, r7
    2fba:	60 81       	ld	r22, Z
    2fbc:	ce 01       	movw	r24, r28
    2fbe:	01 96       	adiw	r24, 0x01	; 1
    2fc0:	0e 94 1e 17 	call	0x2e3c	; 0x2e3c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    2fc4:	2f 81       	ldd	r18, Y+7	; 0x07
    2fc6:	f7 01       	movw	r30, r14
    2fc8:	e6 0d       	add	r30, r6
    2fca:	f7 1d       	adc	r31, r7
    2fcc:	21 8b       	std	Z+17, r18	; 0x11
    2fce:	89 81       	ldd	r24, Y+1	; 0x01
    2fd0:	9a 81       	ldd	r25, Y+2	; 0x02
    2fd2:	f3 01       	movw	r30, r6
    2fd4:	ee 0f       	add	r30, r30
    2fd6:	ff 1f       	adc	r31, r31
    2fd8:	ee 0d       	add	r30, r14
    2fda:	ff 1d       	adc	r31, r15
    2fdc:	92 a3       	std	Z+34, r25	; 0x22
    2fde:	81 a3       	std	Z+33, r24	; 0x21
    2fe0:	83 32       	cpi	r24, 0x23	; 35
    2fe2:	91 05       	cpc	r25, r1
    2fe4:	11 f4       	brne	.+4      	; 0x2fea <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    2fe6:	f8 01       	movw	r30, r16
    2fe8:	08 c0       	rjmp	.+16     	; 0x2ffa <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    2fea:	86 32       	cpi	r24, 0x26	; 38
    2fec:	91 05       	cpc	r25, r1
    2fee:	11 f4       	brne	.+4      	; 0x2ff4 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    2ff0:	f6 01       	movw	r30, r12
    2ff2:	03 c0       	rjmp	.+6      	; 0x2ffa <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    2ff4:	89 97       	sbiw	r24, 0x29	; 41
    2ff6:	21 f4       	brne	.+8      	; 0x3000 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    2ff8:	f5 01       	movw	r30, r10
    2ffa:	80 81       	ld	r24, Z
    2ffc:	82 2b       	or	r24, r18
    2ffe:	80 83       	st	Z, r24
    3000:	53 94       	inc	r5
    3002:	d2 cf       	rjmp	.-92     	; 0x2fa8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    3004:	27 96       	adiw	r28, 0x07	; 7
    3006:	ef e0       	ldi	r30, 0x0F	; 15
    3008:	0c 94 d9 1c 	jmp	0x39b2	; 0x39b2 <__epilogue_restores__+0x6>

0000300c <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    300c:	a0 e0       	ldi	r26, 0x00	; 0
    300e:	b0 e0       	ldi	r27, 0x00	; 0
    3010:	ec e0       	ldi	r30, 0x0C	; 12
    3012:	f8 e1       	ldi	r31, 0x18	; 24
    3014:	0c 94 bf 1c 	jmp	0x397e	; 0x397e <__prologue_saves__+0xa>
    3018:	ec 01       	movw	r28, r24
    301a:	5b 01       	movw	r10, r22
    301c:	6c 01       	movw	r12, r24
    301e:	81 e4       	ldi	r24, 0x41	; 65
    3020:	c8 0e       	add	r12, r24
    3022:	d1 1c       	adc	r13, r1
    3024:	f6 01       	movw	r30, r12
    3026:	80 80       	ld	r8, Z
    3028:	7e 01       	movw	r14, r28
    302a:	f2 e4       	ldi	r31, 0x42	; 66
    302c:	ef 0e       	add	r14, r31
    302e:	f1 1c       	adc	r15, r1
    3030:	f7 01       	movw	r30, r14
    3032:	70 80       	ld	r7, Z
    3034:	8e 01       	movw	r16, r28
    3036:	0d 5b       	subi	r16, 0xBD	; 189
    3038:	1f 4f       	sbci	r17, 0xFF	; 255
    303a:	f8 01       	movw	r30, r16
    303c:	90 80       	ld	r9, Z
    303e:	80 e0       	ldi	r24, 0x00	; 0
    3040:	98 85       	ldd	r25, Y+8	; 0x08
    3042:	89 17       	cp	r24, r25
    3044:	48 f4       	brcc	.+18     	; 0x3058 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    3046:	f5 01       	movw	r30, r10
    3048:	e8 0f       	add	r30, r24
    304a:	f1 1d       	adc	r31, r1
    304c:	e8 0f       	add	r30, r24
    304e:	f1 1d       	adc	r31, r1
    3050:	11 82       	std	Z+1, r1	; 0x01
    3052:	10 82       	st	Z, r1
    3054:	8f 5f       	subi	r24, 0xFF	; 255
    3056:	f4 cf       	rjmp	.-24     	; 0x3040 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    3058:	84 b1       	in	r24, 0x04	; 4
    305a:	f6 01       	movw	r30, r12
    305c:	90 81       	ld	r25, Z
    305e:	89 2b       	or	r24, r25
    3060:	84 b9       	out	0x04, r24	; 4
    3062:	87 b1       	in	r24, 0x07	; 7
    3064:	f7 01       	movw	r30, r14
    3066:	90 81       	ld	r25, Z
    3068:	89 2b       	or	r24, r25
    306a:	87 b9       	out	0x07, r24	; 7
    306c:	8a b1       	in	r24, 0x0a	; 10
    306e:	f8 01       	movw	r30, r16
    3070:	90 81       	ld	r25, Z
    3072:	89 2b       	or	r24, r25
    3074:	8a b9       	out	0x0a, r24	; 10
    3076:	85 b1       	in	r24, 0x05	; 5
    3078:	f6 01       	movw	r30, r12
    307a:	90 81       	ld	r25, Z
    307c:	89 2b       	or	r24, r25
    307e:	85 b9       	out	0x05, r24	; 5
    3080:	88 b1       	in	r24, 0x08	; 8
    3082:	f7 01       	movw	r30, r14
    3084:	90 81       	ld	r25, Z
    3086:	89 2b       	or	r24, r25
    3088:	88 b9       	out	0x08, r24	; 8
    308a:	8b b1       	in	r24, 0x0b	; 11
    308c:	f8 01       	movw	r30, r16
    308e:	90 81       	ld	r25, Z
    3090:	89 2b       	or	r24, r25
    3092:	8b b9       	out	0x0b, r24	; 11
    3094:	8a e0       	ldi	r24, 0x0A	; 10
    3096:	90 e0       	ldi	r25, 0x00	; 0
    3098:	0e 94 16 17 	call	0x2e2c	; 0x2e2c <delay_us>
    309c:	94 b1       	in	r25, 0x04	; 4
    309e:	f6 01       	movw	r30, r12
    30a0:	80 81       	ld	r24, Z
    30a2:	80 95       	com	r24
    30a4:	89 23       	and	r24, r25
    30a6:	84 b9       	out	0x04, r24	; 4
    30a8:	97 b1       	in	r25, 0x07	; 7
    30aa:	f7 01       	movw	r30, r14
    30ac:	80 81       	ld	r24, Z
    30ae:	80 95       	com	r24
    30b0:	89 23       	and	r24, r25
    30b2:	87 b9       	out	0x07, r24	; 7
    30b4:	9a b1       	in	r25, 0x0a	; 10
    30b6:	f8 01       	movw	r30, r16
    30b8:	80 81       	ld	r24, Z
    30ba:	80 95       	com	r24
    30bc:	89 23       	and	r24, r25
    30be:	8a b9       	out	0x0a, r24	; 10
    30c0:	95 b1       	in	r25, 0x05	; 5
    30c2:	f6 01       	movw	r30, r12
    30c4:	80 81       	ld	r24, Z
    30c6:	80 95       	com	r24
    30c8:	89 23       	and	r24, r25
    30ca:	85 b9       	out	0x05, r24	; 5
    30cc:	98 b1       	in	r25, 0x08	; 8
    30ce:	f7 01       	movw	r30, r14
    30d0:	80 81       	ld	r24, Z
    30d2:	80 95       	com	r24
    30d4:	89 23       	and	r24, r25
    30d6:	88 b9       	out	0x08, r24	; 8
    30d8:	9b b1       	in	r25, 0x0b	; 11
    30da:	f8 01       	movw	r30, r16
    30dc:	80 81       	ld	r24, Z
    30de:	80 95       	com	r24
    30e0:	89 23       	and	r24, r25
    30e2:	8b b9       	out	0x0b, r24	; 11
    30e4:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    30e8:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    30ec:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    30f0:	83 60       	ori	r24, 0x03	; 3
    30f2:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    30f6:	82 e0       	ldi	r24, 0x02	; 2
    30f8:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    30fc:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    3100:	80 e0       	ldi	r24, 0x00	; 0
    3102:	90 e0       	ldi	r25, 0x00	; 0
    3104:	2e 85       	ldd	r18, Y+14	; 0x0e
    3106:	3f 85       	ldd	r19, Y+15	; 0x0f
    3108:	82 17       	cp	r24, r18
    310a:	93 07       	cpc	r25, r19
    310c:	20 f5       	brcc	.+72     	; 0x3156 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    310e:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    3112:	2c 2d       	mov	r18, r12
    3114:	24 1b       	sub	r18, r20
    3116:	82 0f       	add	r24, r18
    3118:	91 1d       	adc	r25, r1
    311a:	03 b1       	in	r16, 0x03	; 3
    311c:	08 11       	cpse	r16, r8
    311e:	32 c0       	rjmp	.+100    	; 0x3184 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    3120:	f6 b0       	in	r15, 0x06	; 6
    3122:	f7 10       	cpse	r15, r7
    3124:	2f c0       	rjmp	.+94     	; 0x3184 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    3126:	29 b1       	in	r18, 0x09	; 9
    3128:	29 11       	cpse	r18, r9
    312a:	2c c0       	rjmp	.+88     	; 0x3184 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    312c:	10 c0       	rjmp	.+32     	; 0x314e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    312e:	21 2f       	mov	r18, r17
    3130:	30 e0       	ldi	r19, 0x00	; 0
    3132:	a9 01       	movw	r20, r18
    3134:	44 0f       	add	r20, r20
    3136:	55 1f       	adc	r21, r21
    3138:	f5 01       	movw	r30, r10
    313a:	e4 0f       	add	r30, r20
    313c:	f5 1f       	adc	r31, r21
    313e:	60 81       	ld	r22, Z
    3140:	71 81       	ldd	r23, Z+1	; 0x01
    3142:	67 2b       	or	r22, r23
    3144:	21 f1       	breq	.+72     	; 0x318e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    3146:	1f 5f       	subi	r17, 0xFF	; 255
    3148:	28 85       	ldd	r18, Y+8	; 0x08
    314a:	12 17       	cp	r17, r18
    314c:	80 f3       	brcs	.-32     	; 0x312e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    314e:	7f 2c       	mov	r7, r15
    3150:	80 2e       	mov	r8, r16
    3152:	4c 2d       	mov	r20, r12
    3154:	d7 cf       	rjmp	.-82     	; 0x3104 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    3156:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    315a:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    315e:	20 e0       	ldi	r18, 0x00	; 0
    3160:	88 85       	ldd	r24, Y+8	; 0x08
    3162:	28 17       	cp	r18, r24
    3164:	30 f5       	brcc	.+76     	; 0x31b2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    3166:	f5 01       	movw	r30, r10
    3168:	e2 0f       	add	r30, r18
    316a:	f1 1d       	adc	r31, r1
    316c:	e2 0f       	add	r30, r18
    316e:	f1 1d       	adc	r31, r1
    3170:	80 81       	ld	r24, Z
    3172:	91 81       	ldd	r25, Z+1	; 0x01
    3174:	89 2b       	or	r24, r25
    3176:	21 f4       	brne	.+8      	; 0x3180 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    3178:	8e 85       	ldd	r24, Y+14	; 0x0e
    317a:	9f 85       	ldd	r25, Y+15	; 0x0f
    317c:	91 83       	std	Z+1, r25	; 0x01
    317e:	80 83       	st	Z, r24
    3180:	2f 5f       	subi	r18, 0xFF	; 255
    3182:	ee cf       	rjmp	.-36     	; 0x3160 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    3184:	03 b1       	in	r16, 0x03	; 3
    3186:	f6 b0       	in	r15, 0x06	; 6
    3188:	99 b0       	in	r9, 0x09	; 9
    318a:	10 e0       	ldi	r17, 0x00	; 0
    318c:	dd cf       	rjmp	.-70     	; 0x3148 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    318e:	de 01       	movw	r26, r28
    3190:	a4 0f       	add	r26, r20
    3192:	b5 1f       	adc	r27, r21
    3194:	91 96       	adiw	r26, 0x21	; 33
    3196:	0d 90       	ld	r0, X+
    3198:	bc 91       	ld	r27, X
    319a:	a0 2d       	mov	r26, r0
    319c:	4c 91       	ld	r20, X
    319e:	de 01       	movw	r26, r28
    31a0:	a2 0f       	add	r26, r18
    31a2:	b3 1f       	adc	r27, r19
    31a4:	51 96       	adiw	r26, 0x11	; 17
    31a6:	2c 91       	ld	r18, X
    31a8:	42 23       	and	r20, r18
    31aa:	69 f6       	brne	.-102    	; 0x3146 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    31ac:	91 83       	std	Z+1, r25	; 0x01
    31ae:	80 83       	st	Z, r24
    31b0:	ca cf       	rjmp	.-108    	; 0x3146 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    31b2:	cd b7       	in	r28, 0x3d	; 61
    31b4:	de b7       	in	r29, 0x3e	; 62
    31b6:	ed e0       	ldi	r30, 0x0D	; 13
    31b8:	0c 94 db 1c 	jmp	0x39b6	; 0x39b6 <__epilogue_restores__+0xa>

000031bc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    31bc:	ef 92       	push	r14
    31be:	ff 92       	push	r15
    31c0:	0f 93       	push	r16
    31c2:	1f 93       	push	r17
    31c4:	cf 93       	push	r28
    31c6:	df 93       	push	r29
    31c8:	fc 01       	movw	r30, r24
    31ca:	9b 01       	movw	r18, r22
    31cc:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    31d0:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    31d4:	47 b1       	in	r20, 0x07	; 7
    31d6:	18 b1       	in	r17, 0x08	; 8
    31d8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    31dc:	86 fd       	sbrc	r24, 6
    31de:	fc cf       	rjmp	.-8      	; 0x31d8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    31e0:	80 e0       	ldi	r24, 0x00	; 0
    31e2:	90 85       	ldd	r25, Z+8	; 0x08
    31e4:	89 17       	cp	r24, r25
    31e6:	48 f4       	brcc	.+18     	; 0x31fa <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    31e8:	d9 01       	movw	r26, r18
    31ea:	a8 0f       	add	r26, r24
    31ec:	b1 1d       	adc	r27, r1
    31ee:	a8 0f       	add	r26, r24
    31f0:	b1 1d       	adc	r27, r1
    31f2:	1d 92       	st	X+, r1
    31f4:	1c 92       	st	X, r1
    31f6:	8f 5f       	subi	r24, 0xFF	; 255
    31f8:	f4 cf       	rjmp	.-24     	; 0x31e2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    31fa:	97 b1       	in	r25, 0x07	; 7
    31fc:	82 a1       	ldd	r24, Z+34	; 0x22
    31fe:	80 95       	com	r24
    3200:	89 23       	and	r24, r25
    3202:	87 b9       	out	0x07, r24	; 7
    3204:	98 b1       	in	r25, 0x08	; 8
    3206:	82 a1       	ldd	r24, Z+34	; 0x22
    3208:	80 95       	com	r24
    320a:	89 23       	and	r24, r25
    320c:	88 b9       	out	0x08, r24	; 8
    320e:	87 e8       	ldi	r24, 0x87	; 135
    3210:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3214:	e1 2c       	mov	r14, r1
    3216:	81 a1       	ldd	r24, Z+33	; 0x21
    3218:	e8 16       	cp	r14, r24
    321a:	10 f0       	brcs	.+4      	; 0x3220 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    321c:	e1 2c       	mov	r14, r1
    321e:	29 c0       	rjmp	.+82     	; 0x3272 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    3220:	50 e0       	ldi	r21, 0x00	; 0
    3222:	80 85       	ldd	r24, Z+8	; 0x08
    3224:	58 17       	cp	r21, r24
    3226:	18 f5       	brcc	.+70     	; 0x326e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    3228:	a5 2f       	mov	r26, r21
    322a:	b0 e0       	ldi	r27, 0x00	; 0
    322c:	ef 01       	movw	r28, r30
    322e:	ca 0f       	add	r28, r26
    3230:	db 1f       	adc	r29, r27
    3232:	89 89       	ldd	r24, Y+17	; 0x11
    3234:	80 64       	ori	r24, 0x40	; 64
    3236:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    323a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    323e:	80 64       	ori	r24, 0x40	; 64
    3240:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3244:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    3248:	86 fd       	sbrc	r24, 6
    324a:	fc cf       	rjmp	.-8      	; 0x3244 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    324c:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
    3250:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    3254:	aa 0f       	add	r26, r26
    3256:	bb 1f       	adc	r27, r27
    3258:	a2 0f       	add	r26, r18
    325a:	b3 1f       	adc	r27, r19
    325c:	8d 91       	ld	r24, X+
    325e:	9c 91       	ld	r25, X
    3260:	11 97       	sbiw	r26, 0x01	; 1
    3262:	86 0f       	add	r24, r22
    3264:	97 1f       	adc	r25, r23
    3266:	8d 93       	st	X+, r24
    3268:	9c 93       	st	X, r25
    326a:	5f 5f       	subi	r21, 0xFF	; 255
    326c:	da cf       	rjmp	.-76     	; 0x3222 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    326e:	e3 94       	inc	r14
    3270:	d2 cf       	rjmp	.-92     	; 0x3216 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    3272:	80 85       	ldd	r24, Z+8	; 0x08
    3274:	e8 16       	cp	r14, r24
    3276:	a0 f4       	brcc	.+40     	; 0x32a0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    3278:	e9 01       	movw	r28, r18
    327a:	ce 0d       	add	r28, r14
    327c:	d1 1d       	adc	r29, r1
    327e:	ce 0d       	add	r28, r14
    3280:	d1 1d       	adc	r29, r1
    3282:	61 a1       	ldd	r22, Z+33	; 0x21
    3284:	70 e0       	ldi	r23, 0x00	; 0
    3286:	cb 01       	movw	r24, r22
    3288:	95 95       	asr	r25
    328a:	87 95       	ror	r24
    328c:	a8 81       	ld	r26, Y
    328e:	b9 81       	ldd	r27, Y+1	; 0x01
    3290:	8a 0f       	add	r24, r26
    3292:	9b 1f       	adc	r25, r27
    3294:	0e 94 29 1c 	call	0x3852	; 0x3852 <__udivmodhi4>
    3298:	79 83       	std	Y+1, r23	; 0x01
    329a:	68 83       	st	Y, r22
    329c:	e3 94       	inc	r14
    329e:	e9 cf       	rjmp	.-46     	; 0x3272 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    32a0:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
    32a4:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    32a8:	18 b9       	out	0x08, r17	; 8
    32aa:	47 b9       	out	0x07, r20	; 7
    32ac:	cd b7       	in	r28, 0x3d	; 61
    32ae:	de b7       	in	r29, 0x3e	; 62
    32b0:	e6 e0       	ldi	r30, 0x06	; 6
    32b2:	0c 94 e2 1c 	jmp	0x39c4	; 0x39c4 <__epilogue_restores__+0x18>

000032b6 <_ZN16PololuQTRSensors4readEPjh>:
    32b6:	a0 e2       	ldi	r26, 0x20	; 32
    32b8:	b0 e0       	ldi	r27, 0x00	; 0
    32ba:	e1 e6       	ldi	r30, 0x61	; 97
    32bc:	f9 e1       	ldi	r31, 0x19	; 25
    32be:	0c 94 c5 1c 	jmp	0x398a	; 0x398a <__prologue_saves__+0x16>
    32c2:	8c 01       	movw	r16, r24
    32c4:	7b 01       	movw	r14, r22
    32c6:	d4 2e       	mov	r13, r20
    32c8:	8f ef       	ldi	r24, 0xFF	; 255
    32ca:	84 0f       	add	r24, r20
    32cc:	82 30       	cpi	r24, 0x02	; 2
    32ce:	18 f4       	brcc	.+6      	; 0x32d6 <_ZN16PololuQTRSensors4readEPjh+0x20>
    32d0:	c8 01       	movw	r24, r16
    32d2:	0e 94 9d 17 	call	0x2f3a	; 0x2f3a <_ZN16PololuQTRSensors10emittersOnEv>
    32d6:	d8 01       	movw	r26, r16
    32d8:	50 96       	adiw	r26, 0x10	; 16
    32da:	8c 91       	ld	r24, X
    32dc:	b7 01       	movw	r22, r14
    32de:	81 11       	cpse	r24, r1
    32e0:	10 c0       	rjmp	.+32     	; 0x3302 <_ZN16PololuQTRSensors4readEPjh+0x4c>
    32e2:	c8 01       	movw	r24, r16
    32e4:	0e 94 06 18 	call	0x300c	; 0x300c <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    32e8:	c8 01       	movw	r24, r16
    32ea:	0e 94 88 17 	call	0x2f10	; 0x2f10 <_ZN16PololuQTRSensors11emittersOffEv>
    32ee:	b2 e0       	ldi	r27, 0x02	; 2
    32f0:	db 12       	cpse	r13, r27
    32f2:	3a c0       	rjmp	.+116    	; 0x3368 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    32f4:	be 01       	movw	r22, r28
    32f6:	6f 5f       	subi	r22, 0xFF	; 255
    32f8:	7f 4f       	sbci	r23, 0xFF	; 255
    32fa:	c8 01       	movw	r24, r16
    32fc:	0e 94 06 18 	call	0x300c	; 0x300c <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    3300:	0f c0       	rjmp	.+30     	; 0x3320 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    3302:	c8 01       	movw	r24, r16
    3304:	0e 94 de 18 	call	0x31bc	; 0x31bc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    3308:	c8 01       	movw	r24, r16
    330a:	0e 94 88 17 	call	0x2f10	; 0x2f10 <_ZN16PololuQTRSensors11emittersOffEv>
    330e:	e2 e0       	ldi	r30, 0x02	; 2
    3310:	de 12       	cpse	r13, r30
    3312:	2a c0       	rjmp	.+84     	; 0x3368 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    3314:	be 01       	movw	r22, r28
    3316:	6f 5f       	subi	r22, 0xFF	; 255
    3318:	7f 4f       	sbci	r23, 0xFF	; 255
    331a:	c8 01       	movw	r24, r16
    331c:	0e 94 de 18 	call	0x31bc	; 0x31bc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    3320:	40 e0       	ldi	r20, 0x00	; 0
    3322:	f8 01       	movw	r30, r16
    3324:	80 85       	ldd	r24, Z+8	; 0x08
    3326:	48 17       	cp	r20, r24
    3328:	f8 f4       	brcc	.+62     	; 0x3368 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    332a:	84 2f       	mov	r24, r20
    332c:	90 e0       	ldi	r25, 0x00	; 0
    332e:	88 0f       	add	r24, r24
    3330:	99 1f       	adc	r25, r25
    3332:	f7 01       	movw	r30, r14
    3334:	e8 0f       	add	r30, r24
    3336:	f9 1f       	adc	r31, r25
    3338:	21 e0       	ldi	r18, 0x01	; 1
    333a:	30 e0       	ldi	r19, 0x00	; 0
    333c:	2c 0f       	add	r18, r28
    333e:	3d 1f       	adc	r19, r29
    3340:	82 0f       	add	r24, r18
    3342:	93 1f       	adc	r25, r19
    3344:	d8 01       	movw	r26, r16
    3346:	1e 96       	adiw	r26, 0x0e	; 14
    3348:	2d 91       	ld	r18, X+
    334a:	3c 91       	ld	r19, X
    334c:	1f 97       	sbiw	r26, 0x0f	; 15
    334e:	dc 01       	movw	r26, r24
    3350:	8d 91       	ld	r24, X+
    3352:	9c 91       	ld	r25, X
    3354:	28 1b       	sub	r18, r24
    3356:	39 0b       	sbc	r19, r25
    3358:	80 81       	ld	r24, Z
    335a:	91 81       	ldd	r25, Z+1	; 0x01
    335c:	82 0f       	add	r24, r18
    335e:	93 1f       	adc	r25, r19
    3360:	91 83       	std	Z+1, r25	; 0x01
    3362:	80 83       	st	Z, r24
    3364:	4f 5f       	subi	r20, 0xFF	; 255
    3366:	dd cf       	rjmp	.-70     	; 0x3322 <_ZN16PololuQTRSensors4readEPjh+0x6c>
    3368:	a0 96       	adiw	r28, 0x20	; 32
    336a:	e7 e0       	ldi	r30, 0x07	; 7
    336c:	0c 94 e1 1c 	jmp	0x39c2	; 0x39c2 <__epilogue_restores__+0x16>

00003370 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    3370:	2f 92       	push	r2
    3372:	3f 92       	push	r3
    3374:	5f 92       	push	r5
    3376:	6f 92       	push	r6
    3378:	7f 92       	push	r7
    337a:	8f 92       	push	r8
    337c:	9f 92       	push	r9
    337e:	af 92       	push	r10
    3380:	bf 92       	push	r11
    3382:	cf 92       	push	r12
    3384:	df 92       	push	r13
    3386:	ef 92       	push	r14
    3388:	ff 92       	push	r15
    338a:	0f 93       	push	r16
    338c:	1f 93       	push	r17
    338e:	cf 93       	push	r28
    3390:	df 93       	push	r29
    3392:	cd b7       	in	r28, 0x3d	; 61
    3394:	de b7       	in	r29, 0x3e	; 62
    3396:	c0 56       	subi	r28, 0x60	; 96
    3398:	d1 09       	sbc	r29, r1
    339a:	0f b6       	in	r0, 0x3f	; 63
    339c:	f8 94       	cli
    339e:	de bf       	out	0x3e, r29	; 62
    33a0:	0f be       	out	0x3f, r0	; 63
    33a2:	cd bf       	out	0x3d, r28	; 61
    33a4:	8c 01       	movw	r16, r24
    33a6:	4b 01       	movw	r8, r22
    33a8:	5a 01       	movw	r10, r20
    33aa:	52 2e       	mov	r5, r18
    33ac:	da 01       	movw	r26, r20
    33ae:	8d 91       	ld	r24, X+
    33b0:	9c 91       	ld	r25, X
    33b2:	89 2b       	or	r24, r25
    33b4:	31 f0       	breq	.+12     	; 0x33c2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    33b6:	f4 01       	movw	r30, r8
    33b8:	80 81       	ld	r24, Z
    33ba:	91 81       	ldd	r25, Z+1	; 0x01
    33bc:	89 2b       	or	r24, r25
    33be:	f1 f4       	brne	.+60     	; 0x33fc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    33c0:	24 c0       	rjmp	.+72     	; 0x340a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    33c2:	d8 01       	movw	r26, r16
    33c4:	18 96       	adiw	r26, 0x08	; 8
    33c6:	8c 91       	ld	r24, X
    33c8:	90 e0       	ldi	r25, 0x00	; 0
    33ca:	88 0f       	add	r24, r24
    33cc:	99 1f       	adc	r25, r25
    33ce:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <malloc>
    33d2:	f5 01       	movw	r30, r10
    33d4:	91 83       	std	Z+1, r25	; 0x01
    33d6:	80 83       	st	Z, r24
    33d8:	00 97       	sbiw	r24, 0x00	; 0
    33da:	09 f4       	brne	.+2      	; 0x33de <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    33dc:	b1 c0       	rjmp	.+354    	; 0x3540 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    33de:	fc 01       	movw	r30, r24
    33e0:	20 e0       	ldi	r18, 0x00	; 0
    33e2:	30 e0       	ldi	r19, 0x00	; 0
    33e4:	d8 01       	movw	r26, r16
    33e6:	18 96       	adiw	r26, 0x08	; 8
    33e8:	8c 91       	ld	r24, X
    33ea:	90 e0       	ldi	r25, 0x00	; 0
    33ec:	28 17       	cp	r18, r24
    33ee:	39 07       	cpc	r19, r25
    33f0:	14 f7       	brge	.-60     	; 0x33b6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    33f2:	11 92       	st	Z+, r1
    33f4:	11 92       	st	Z+, r1
    33f6:	2f 5f       	subi	r18, 0xFF	; 255
    33f8:	3f 4f       	sbci	r19, 0xFF	; 255
    33fa:	f4 cf       	rjmp	.-24     	; 0x33e4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    33fc:	e1 2c       	mov	r14, r1
    33fe:	f1 2c       	mov	r15, r1
    3400:	6e 01       	movw	r12, r28
    3402:	b1 e2       	ldi	r27, 0x21	; 33
    3404:	cb 0e       	add	r12, r27
    3406:	d1 1c       	adc	r13, r1
    3408:	21 c0       	rjmp	.+66     	; 0x344c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    340a:	f8 01       	movw	r30, r16
    340c:	80 85       	ldd	r24, Z+8	; 0x08
    340e:	90 e0       	ldi	r25, 0x00	; 0
    3410:	88 0f       	add	r24, r24
    3412:	99 1f       	adc	r25, r25
    3414:	0e 94 f1 1c 	call	0x39e2	; 0x39e2 <malloc>
    3418:	d4 01       	movw	r26, r8
    341a:	8d 93       	st	X+, r24
    341c:	9c 93       	st	X, r25
    341e:	00 97       	sbiw	r24, 0x00	; 0
    3420:	09 f4       	brne	.+2      	; 0x3424 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    3422:	8e c0       	rjmp	.+284    	; 0x3540 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    3424:	fc 01       	movw	r30, r24
    3426:	20 e0       	ldi	r18, 0x00	; 0
    3428:	30 e0       	ldi	r19, 0x00	; 0
    342a:	d8 01       	movw	r26, r16
    342c:	18 96       	adiw	r26, 0x08	; 8
    342e:	8c 91       	ld	r24, X
    3430:	90 e0       	ldi	r25, 0x00	; 0
    3432:	28 17       	cp	r18, r24
    3434:	39 07       	cpc	r19, r25
    3436:	14 f7       	brge	.-60     	; 0x33fc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    3438:	d8 01       	movw	r26, r16
    343a:	1e 96       	adiw	r26, 0x0e	; 14
    343c:	8d 91       	ld	r24, X+
    343e:	9c 91       	ld	r25, X
    3440:	1f 97       	sbiw	r26, 0x0f	; 15
    3442:	81 93       	st	Z+, r24
    3444:	91 93       	st	Z+, r25
    3446:	2f 5f       	subi	r18, 0xFF	; 255
    3448:	3f 4f       	sbci	r19, 0xFF	; 255
    344a:	ef cf       	rjmp	.-34     	; 0x342a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    344c:	45 2d       	mov	r20, r5
    344e:	be 01       	movw	r22, r28
    3450:	6f 5b       	subi	r22, 0xBF	; 191
    3452:	7f 4f       	sbci	r23, 0xFF	; 255
    3454:	c8 01       	movw	r24, r16
    3456:	0e 94 5b 19 	call	0x32b6	; 0x32b6 <_ZN16PololuQTRSensors4readEPjh>
    345a:	f8 01       	movw	r30, r16
    345c:	60 84       	ldd	r6, Z+8	; 0x08
    345e:	71 2c       	mov	r7, r1
    3460:	fe 01       	movw	r30, r28
    3462:	ef 5b       	subi	r30, 0xBF	; 191
    3464:	ff 4f       	sbci	r31, 0xFF	; 255
    3466:	c6 01       	movw	r24, r12
    3468:	9e 01       	movw	r18, r28
    346a:	2f 5f       	subi	r18, 0xFF	; 255
    346c:	3f 4f       	sbci	r19, 0xFF	; 255
    346e:	19 01       	movw	r2, r18
    3470:	20 e0       	ldi	r18, 0x00	; 0
    3472:	30 e0       	ldi	r19, 0x00	; 0
    3474:	26 15       	cp	r18, r6
    3476:	37 05       	cpc	r19, r7
    3478:	4c f5       	brge	.+82     	; 0x34cc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    347a:	e1 14       	cp	r14, r1
    347c:	f1 04       	cpc	r15, r1
    347e:	89 f0       	breq	.+34     	; 0x34a2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    3480:	dc 01       	movw	r26, r24
    3482:	6d 91       	ld	r22, X+
    3484:	7c 91       	ld	r23, X
    3486:	40 81       	ld	r20, Z
    3488:	51 81       	ldd	r21, Z+1	; 0x01
    348a:	64 17       	cp	r22, r20
    348c:	75 07       	cpc	r23, r21
    348e:	48 f0       	brcs	.+18     	; 0x34a2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    3490:	d1 01       	movw	r26, r2
    3492:	6d 91       	ld	r22, X+
    3494:	7c 91       	ld	r23, X
    3496:	40 81       	ld	r20, Z
    3498:	51 81       	ldd	r21, Z+1	; 0x01
    349a:	46 17       	cp	r20, r22
    349c:	57 07       	cpc	r21, r23
    349e:	48 f0       	brcs	.+18     	; 0x34b2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    34a0:	0d c0       	rjmp	.+26     	; 0x34bc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    34a2:	40 81       	ld	r20, Z
    34a4:	51 81       	ldd	r21, Z+1	; 0x01
    34a6:	dc 01       	movw	r26, r24
    34a8:	4d 93       	st	X+, r20
    34aa:	5c 93       	st	X, r21
    34ac:	e1 14       	cp	r14, r1
    34ae:	f1 04       	cpc	r15, r1
    34b0:	79 f7       	brne	.-34     	; 0x3490 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    34b2:	40 81       	ld	r20, Z
    34b4:	51 81       	ldd	r21, Z+1	; 0x01
    34b6:	d1 01       	movw	r26, r2
    34b8:	4d 93       	st	X+, r20
    34ba:	5c 93       	st	X, r21
    34bc:	2f 5f       	subi	r18, 0xFF	; 255
    34be:	3f 4f       	sbci	r19, 0xFF	; 255
    34c0:	b2 e0       	ldi	r27, 0x02	; 2
    34c2:	2b 0e       	add	r2, r27
    34c4:	31 1c       	adc	r3, r1
    34c6:	32 96       	adiw	r30, 0x02	; 2
    34c8:	02 96       	adiw	r24, 0x02	; 2
    34ca:	d4 cf       	rjmp	.-88     	; 0x3474 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    34cc:	ef ef       	ldi	r30, 0xFF	; 255
    34ce:	ee 1a       	sub	r14, r30
    34d0:	fe 0a       	sbc	r15, r30
    34d2:	fa e0       	ldi	r31, 0x0A	; 10
    34d4:	ef 16       	cp	r14, r31
    34d6:	f1 04       	cpc	r15, r1
    34d8:	09 f0       	breq	.+2      	; 0x34dc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    34da:	b8 cf       	rjmp	.-144    	; 0x344c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    34dc:	9e 01       	movw	r18, r28
    34de:	2f 5f       	subi	r18, 0xFF	; 255
    34e0:	3f 4f       	sbci	r19, 0xFF	; 255
    34e2:	79 01       	movw	r14, r18
    34e4:	36 01       	movw	r6, r12
    34e6:	80 e0       	ldi	r24, 0x00	; 0
    34e8:	90 e0       	ldi	r25, 0x00	; 0
    34ea:	f8 01       	movw	r30, r16
    34ec:	20 85       	ldd	r18, Z+8	; 0x08
    34ee:	30 e0       	ldi	r19, 0x00	; 0
    34f0:	82 17       	cp	r24, r18
    34f2:	93 07       	cpc	r25, r19
    34f4:	2c f5       	brge	.+74     	; 0x3540 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    34f6:	d7 01       	movw	r26, r14
    34f8:	2d 91       	ld	r18, X+
    34fa:	3d 91       	ld	r19, X+
    34fc:	7d 01       	movw	r14, r26
    34fe:	b3 01       	movw	r22, r6
    3500:	6c 19       	sub	r22, r12
    3502:	7d 09       	sbc	r23, r13
    3504:	d5 01       	movw	r26, r10
    3506:	ed 91       	ld	r30, X+
    3508:	fc 91       	ld	r31, X
    350a:	e6 0f       	add	r30, r22
    350c:	f7 1f       	adc	r31, r23
    350e:	40 81       	ld	r20, Z
    3510:	51 81       	ldd	r21, Z+1	; 0x01
    3512:	42 17       	cp	r20, r18
    3514:	53 07       	cpc	r21, r19
    3516:	10 f4       	brcc	.+4      	; 0x351c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    3518:	31 83       	std	Z+1, r19	; 0x01
    351a:	20 83       	st	Z, r18
    351c:	f3 01       	movw	r30, r6
    351e:	21 91       	ld	r18, Z+
    3520:	31 91       	ld	r19, Z+
    3522:	3f 01       	movw	r6, r30
    3524:	d4 01       	movw	r26, r8
    3526:	ed 91       	ld	r30, X+
    3528:	fc 91       	ld	r31, X
    352a:	e6 0f       	add	r30, r22
    352c:	f7 1f       	adc	r31, r23
    352e:	40 81       	ld	r20, Z
    3530:	51 81       	ldd	r21, Z+1	; 0x01
    3532:	24 17       	cp	r18, r20
    3534:	35 07       	cpc	r19, r21
    3536:	10 f4       	brcc	.+4      	; 0x353c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    3538:	31 83       	std	Z+1, r19	; 0x01
    353a:	20 83       	st	Z, r18
    353c:	01 96       	adiw	r24, 0x01	; 1
    353e:	d5 cf       	rjmp	.-86     	; 0x34ea <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    3540:	c0 5a       	subi	r28, 0xA0	; 160
    3542:	df 4f       	sbci	r29, 0xFF	; 255
    3544:	0f b6       	in	r0, 0x3f	; 63
    3546:	f8 94       	cli
    3548:	de bf       	out	0x3e, r29	; 62
    354a:	0f be       	out	0x3f, r0	; 63
    354c:	cd bf       	out	0x3d, r28	; 61
    354e:	df 91       	pop	r29
    3550:	cf 91       	pop	r28
    3552:	1f 91       	pop	r17
    3554:	0f 91       	pop	r16
    3556:	ff 90       	pop	r15
    3558:	ef 90       	pop	r14
    355a:	df 90       	pop	r13
    355c:	cf 90       	pop	r12
    355e:	bf 90       	pop	r11
    3560:	af 90       	pop	r10
    3562:	9f 90       	pop	r9
    3564:	8f 90       	pop	r8
    3566:	7f 90       	pop	r7
    3568:	6f 90       	pop	r6
    356a:	5f 90       	pop	r5
    356c:	3f 90       	pop	r3
    356e:	2f 90       	pop	r2
    3570:	08 95       	ret

00003572 <_ZN16PololuQTRSensors9calibrateEh>:
    3572:	1f 93       	push	r17
    3574:	cf 93       	push	r28
    3576:	df 93       	push	r29
    3578:	ec 01       	movw	r28, r24
    357a:	16 2f       	mov	r17, r22
    357c:	8f ef       	ldi	r24, 0xFF	; 255
    357e:	86 0f       	add	r24, r22
    3580:	82 30       	cpi	r24, 0x02	; 2
    3582:	18 f0       	brcs	.+6      	; 0x358a <_ZN16PololuQTRSensors9calibrateEh+0x18>
    3584:	66 23       	and	r22, r22
    3586:	59 f0       	breq	.+22     	; 0x359e <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    3588:	14 c0       	rjmp	.+40     	; 0x35b2 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    358a:	21 e0       	ldi	r18, 0x01	; 1
    358c:	ae 01       	movw	r20, r28
    358e:	4e 5f       	subi	r20, 0xFE	; 254
    3590:	5f 4f       	sbci	r21, 0xFF	; 255
    3592:	be 01       	movw	r22, r28
    3594:	ce 01       	movw	r24, r28
    3596:	0e 94 b8 19 	call	0x3370	; 0x3370 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    359a:	12 30       	cpi	r17, 0x02	; 2
    359c:	51 f4       	brne	.+20     	; 0x35b2 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    359e:	ae 01       	movw	r20, r28
    35a0:	4a 5f       	subi	r20, 0xFA	; 250
    35a2:	5f 4f       	sbci	r21, 0xFF	; 255
    35a4:	be 01       	movw	r22, r28
    35a6:	6c 5f       	subi	r22, 0xFC	; 252
    35a8:	7f 4f       	sbci	r23, 0xFF	; 255
    35aa:	20 e0       	ldi	r18, 0x00	; 0
    35ac:	ce 01       	movw	r24, r28
    35ae:	0e 94 b8 19 	call	0x3370	; 0x3370 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    35b2:	df 91       	pop	r29
    35b4:	cf 91       	pop	r28
    35b6:	1f 91       	pop	r17
    35b8:	08 95       	ret

000035ba <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    35ba:	a0 e0       	ldi	r26, 0x00	; 0
    35bc:	b0 e0       	ldi	r27, 0x00	; 0
    35be:	e3 ee       	ldi	r30, 0xE3	; 227
    35c0:	fa e1       	ldi	r31, 0x1A	; 26
    35c2:	0c 94 c3 1c 	jmp	0x3986	; 0x3986 <__prologue_saves__+0x12>
    35c6:	ec 01       	movw	r28, r24
    35c8:	8b 01       	movw	r16, r22
    35ca:	b4 2e       	mov	r11, r20
    35cc:	84 2f       	mov	r24, r20
    35ce:	8d 7f       	andi	r24, 0xFD	; 253
    35d0:	51 f4       	brne	.+20     	; 0x35e6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    35d2:	8c 81       	ldd	r24, Y+4	; 0x04
    35d4:	9d 81       	ldd	r25, Y+5	; 0x05
    35d6:	89 2b       	or	r24, r25
    35d8:	09 f4       	brne	.+2      	; 0x35dc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    35da:	97 c0       	rjmp	.+302    	; 0x370a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    35dc:	8e 81       	ldd	r24, Y+6	; 0x06
    35de:	9f 81       	ldd	r25, Y+7	; 0x07
    35e0:	89 2b       	or	r24, r25
    35e2:	09 f4       	brne	.+2      	; 0x35e6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    35e4:	92 c0       	rjmp	.+292    	; 0x370a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    35e6:	8f ef       	ldi	r24, 0xFF	; 255
    35e8:	8b 0d       	add	r24, r11
    35ea:	82 30       	cpi	r24, 0x02	; 2
    35ec:	50 f4       	brcc	.+20     	; 0x3602 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    35ee:	88 81       	ld	r24, Y
    35f0:	99 81       	ldd	r25, Y+1	; 0x01
    35f2:	89 2b       	or	r24, r25
    35f4:	09 f4       	brne	.+2      	; 0x35f8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    35f6:	89 c0       	rjmp	.+274    	; 0x370a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    35f8:	8a 81       	ldd	r24, Y+2	; 0x02
    35fa:	9b 81       	ldd	r25, Y+3	; 0x03
    35fc:	89 2b       	or	r24, r25
    35fe:	09 f4       	brne	.+2      	; 0x3602 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    3600:	84 c0       	rjmp	.+264    	; 0x370a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3602:	4b 2d       	mov	r20, r11
    3604:	b8 01       	movw	r22, r16
    3606:	ce 01       	movw	r24, r28
    3608:	0e 94 5b 19 	call	0x32b6	; 0x32b6 <_ZN16PololuQTRSensors4readEPjh>
    360c:	78 01       	movw	r14, r16
    360e:	00 e0       	ldi	r16, 0x00	; 0
    3610:	10 e0       	ldi	r17, 0x00	; 0
    3612:	c1 2c       	mov	r12, r1
    3614:	d1 2c       	mov	r13, r1
    3616:	88 85       	ldd	r24, Y+8	; 0x08
    3618:	90 e0       	ldi	r25, 0x00	; 0
    361a:	c8 16       	cp	r12, r24
    361c:	d9 06       	cpc	r13, r25
    361e:	0c f0       	brlt	.+2      	; 0x3622 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    3620:	74 c0       	rjmp	.+232    	; 0x370a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3622:	81 e0       	ldi	r24, 0x01	; 1
    3624:	b8 12       	cpse	r11, r24
    3626:	0a c0       	rjmp	.+20     	; 0x363c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    3628:	ea 81       	ldd	r30, Y+2	; 0x02
    362a:	fb 81       	ldd	r31, Y+3	; 0x03
    362c:	e0 0f       	add	r30, r16
    362e:	f1 1f       	adc	r31, r17
    3630:	01 90       	ld	r0, Z+
    3632:	f0 81       	ld	r31, Z
    3634:	e0 2d       	mov	r30, r0
    3636:	a8 81       	ld	r26, Y
    3638:	b9 81       	ldd	r27, Y+1	; 0x01
    363a:	0d c0       	rjmp	.+26     	; 0x3656 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    363c:	8c 81       	ldd	r24, Y+4	; 0x04
    363e:	9d 81       	ldd	r25, Y+5	; 0x05
    3640:	2e 81       	ldd	r18, Y+6	; 0x06
    3642:	3f 81       	ldd	r19, Y+7	; 0x07
    3644:	b1 10       	cpse	r11, r1
    3646:	0c c0       	rjmp	.+24     	; 0x3660 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    3648:	f9 01       	movw	r30, r18
    364a:	e0 0f       	add	r30, r16
    364c:	f1 1f       	adc	r31, r17
    364e:	01 90       	ld	r0, Z+
    3650:	f0 81       	ld	r31, Z
    3652:	e0 2d       	mov	r30, r0
    3654:	dc 01       	movw	r26, r24
    3656:	a0 0f       	add	r26, r16
    3658:	b1 1f       	adc	r27, r17
    365a:	8d 91       	ld	r24, X+
    365c:	9c 91       	ld	r25, X
    365e:	28 c0       	rjmp	.+80     	; 0x36b0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    3660:	fc 01       	movw	r30, r24
    3662:	e0 0f       	add	r30, r16
    3664:	f1 1f       	adc	r31, r17
    3666:	40 81       	ld	r20, Z
    3668:	51 81       	ldd	r21, Z+1	; 0x01
    366a:	e8 81       	ld	r30, Y
    366c:	f9 81       	ldd	r31, Y+1	; 0x01
    366e:	e0 0f       	add	r30, r16
    3670:	f1 1f       	adc	r31, r17
    3672:	80 81       	ld	r24, Z
    3674:	91 81       	ldd	r25, Z+1	; 0x01
    3676:	ee 85       	ldd	r30, Y+14	; 0x0e
    3678:	ff 85       	ldd	r31, Y+15	; 0x0f
    367a:	48 17       	cp	r20, r24
    367c:	59 07       	cpc	r21, r25
    367e:	10 f4       	brcc	.+4      	; 0x3684 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    3680:	cf 01       	movw	r24, r30
    3682:	04 c0       	rjmp	.+8      	; 0x368c <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    3684:	8e 0f       	add	r24, r30
    3686:	9f 1f       	adc	r25, r31
    3688:	84 1b       	sub	r24, r20
    368a:	95 0b       	sbc	r25, r21
    368c:	d9 01       	movw	r26, r18
    368e:	a0 0f       	add	r26, r16
    3690:	b1 1f       	adc	r27, r17
    3692:	2d 91       	ld	r18, X+
    3694:	3c 91       	ld	r19, X
    3696:	aa 81       	ldd	r26, Y+2	; 0x02
    3698:	bb 81       	ldd	r27, Y+3	; 0x03
    369a:	a0 0f       	add	r26, r16
    369c:	b1 1f       	adc	r27, r17
    369e:	4d 91       	ld	r20, X+
    36a0:	5c 91       	ld	r21, X
    36a2:	24 17       	cp	r18, r20
    36a4:	35 07       	cpc	r19, r21
    36a6:	20 f0       	brcs	.+8      	; 0x36b0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    36a8:	e4 0f       	add	r30, r20
    36aa:	f5 1f       	adc	r31, r21
    36ac:	e2 1b       	sub	r30, r18
    36ae:	f3 0b       	sbc	r31, r19
    36b0:	e8 1b       	sub	r30, r24
    36b2:	f9 0b       	sbc	r31, r25
    36b4:	a9 f0       	breq	.+42     	; 0x36e0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    36b6:	d7 01       	movw	r26, r14
    36b8:	2d 91       	ld	r18, X+
    36ba:	3c 91       	ld	r19, X
    36bc:	40 e0       	ldi	r20, 0x00	; 0
    36be:	50 e0       	ldi	r21, 0x00	; 0
    36c0:	28 1b       	sub	r18, r24
    36c2:	39 0b       	sbc	r19, r25
    36c4:	41 09       	sbc	r20, r1
    36c6:	51 09       	sbc	r21, r1
    36c8:	a8 ee       	ldi	r26, 0xE8	; 232
    36ca:	b3 e0       	ldi	r27, 0x03	; 3
    36cc:	0e 94 a7 1c 	call	0x394e	; 0x394e <__muluhisi3>
    36d0:	9f 01       	movw	r18, r30
    36d2:	40 e0       	ldi	r20, 0x00	; 0
    36d4:	50 e0       	ldi	r21, 0x00	; 0
    36d6:	0e 94 73 1c 	call	0x38e6	; 0x38e6 <__divmodsi4>
    36da:	37 fd       	sbrc	r19, 7
    36dc:	0a c0       	rjmp	.+20     	; 0x36f2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    36de:	02 c0       	rjmp	.+4      	; 0x36e4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    36e0:	20 e0       	ldi	r18, 0x00	; 0
    36e2:	30 e0       	ldi	r19, 0x00	; 0
    36e4:	29 3e       	cpi	r18, 0xE9	; 233
    36e6:	b3 e0       	ldi	r27, 0x03	; 3
    36e8:	3b 07       	cpc	r19, r27
    36ea:	2c f0       	brlt	.+10     	; 0x36f6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    36ec:	28 ee       	ldi	r18, 0xE8	; 232
    36ee:	33 e0       	ldi	r19, 0x03	; 3
    36f0:	02 c0       	rjmp	.+4      	; 0x36f6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    36f2:	20 e0       	ldi	r18, 0x00	; 0
    36f4:	30 e0       	ldi	r19, 0x00	; 0
    36f6:	f7 01       	movw	r30, r14
    36f8:	21 93       	st	Z+, r18
    36fa:	31 93       	st	Z+, r19
    36fc:	7f 01       	movw	r14, r30
    36fe:	ff ef       	ldi	r31, 0xFF	; 255
    3700:	cf 1a       	sub	r12, r31
    3702:	df 0a       	sbc	r13, r31
    3704:	0e 5f       	subi	r16, 0xFE	; 254
    3706:	1f 4f       	sbci	r17, 0xFF	; 255
    3708:	86 cf       	rjmp	.-244    	; 0x3616 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    370a:	cd b7       	in	r28, 0x3d	; 61
    370c:	de b7       	in	r29, 0x3e	; 62
    370e:	e9 e0       	ldi	r30, 0x09	; 9
    3710:	0c 94 df 1c 	jmp	0x39be	; 0x39be <__epilogue_restores__+0x12>

00003714 <_ZN16PololuQTRSensors8readLineEPjhh>:
    3714:	a0 e0       	ldi	r26, 0x00	; 0
    3716:	b0 e0       	ldi	r27, 0x00	; 0
    3718:	e0 e9       	ldi	r30, 0x90	; 144
    371a:	fb e1       	ldi	r31, 0x1B	; 27
    371c:	0c 94 ba 1c 	jmp	0x3974	; 0x3974 <__prologue_saves__>
    3720:	ec 01       	movw	r28, r24
    3722:	8b 01       	movw	r16, r22
    3724:	82 2e       	mov	r8, r18
    3726:	0e 94 dd 1a 	call	0x35ba	; 0x35ba <_ZN16PololuQTRSensors14readCalibratedEPjh>
    372a:	28 84       	ldd	r2, Y+8	; 0x08
    372c:	e8 01       	movw	r28, r16
    372e:	41 2c       	mov	r4, r1
    3730:	51 2c       	mov	r5, r1
    3732:	32 01       	movw	r6, r4
    3734:	00 e0       	ldi	r16, 0x00	; 0
    3736:	10 e0       	ldi	r17, 0x00	; 0
    3738:	c1 2c       	mov	r12, r1
    373a:	d1 2c       	mov	r13, r1
    373c:	76 01       	movw	r14, r12
    373e:	31 2c       	mov	r3, r1
    3740:	91 2c       	mov	r9, r1
    3742:	58 ee       	ldi	r21, 0xE8	; 232
    3744:	a5 2e       	mov	r10, r21
    3746:	53 e0       	ldi	r21, 0x03	; 3
    3748:	b5 2e       	mov	r11, r21
    374a:	92 14       	cp	r9, r2
    374c:	21 f1       	breq	.+72     	; 0x3796 <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    374e:	e9 91       	ld	r30, Y+
    3750:	f9 91       	ld	r31, Y+
    3752:	88 20       	and	r8, r8
    3754:	21 f0       	breq	.+8      	; 0x375e <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    3756:	c5 01       	movw	r24, r10
    3758:	8e 1b       	sub	r24, r30
    375a:	9f 0b       	sbc	r25, r31
    375c:	fc 01       	movw	r30, r24
    375e:	e9 3c       	cpi	r30, 0xC9	; 201
    3760:	f1 05       	cpc	r31, r1
    3762:	24 f4       	brge	.+8      	; 0x376c <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    3764:	e3 33       	cpi	r30, 0x33	; 51
    3766:	f1 05       	cpc	r31, r1
    3768:	74 f0       	brlt	.+28     	; 0x3786 <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    376a:	02 c0       	rjmp	.+4      	; 0x3770 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    376c:	33 24       	eor	r3, r3
    376e:	33 94       	inc	r3
    3770:	df 01       	movw	r26, r30
    3772:	a3 01       	movw	r20, r6
    3774:	92 01       	movw	r18, r4
    3776:	0e 94 b2 1c 	call	0x3964	; 0x3964 <__mulshisi3>
    377a:	c6 0e       	add	r12, r22
    377c:	d7 1e       	adc	r13, r23
    377e:	e8 1e       	adc	r14, r24
    3780:	f9 1e       	adc	r15, r25
    3782:	0e 0f       	add	r16, r30
    3784:	1f 1f       	adc	r17, r31
    3786:	93 94       	inc	r9
    3788:	98 ee       	ldi	r25, 0xE8	; 232
    378a:	49 0e       	add	r4, r25
    378c:	93 e0       	ldi	r25, 0x03	; 3
    378e:	59 1e       	adc	r5, r25
    3790:	61 1c       	adc	r6, r1
    3792:	71 1c       	adc	r7, r1
    3794:	da cf       	rjmp	.-76     	; 0x374a <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    3796:	31 10       	cpse	r3, r1
    3798:	1e c0       	rjmp	.+60     	; 0x37d6 <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    379a:	49 2d       	mov	r20, r9
    379c:	50 e0       	ldi	r21, 0x00	; 0
    379e:	41 50       	subi	r20, 0x01	; 1
    37a0:	51 09       	sbc	r21, r1
    37a2:	24 ef       	ldi	r18, 0xF4	; 244
    37a4:	31 e0       	ldi	r19, 0x01	; 1
    37a6:	42 9f       	mul	r20, r18
    37a8:	c0 01       	movw	r24, r0
    37aa:	43 9f       	mul	r20, r19
    37ac:	90 0d       	add	r25, r0
    37ae:	52 9f       	mul	r21, r18
    37b0:	90 0d       	add	r25, r0
    37b2:	11 24       	eor	r1, r1
    37b4:	20 91 fd 01 	lds	r18, 0x01FD	; 0x8001fd <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    37b8:	30 91 fe 01 	lds	r19, 0x01FE	; 0x8001fe <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    37bc:	28 17       	cp	r18, r24
    37be:	39 07       	cpc	r19, r25
    37c0:	b4 f0       	brlt	.+44     	; 0x37ee <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    37c2:	88 ee       	ldi	r24, 0xE8	; 232
    37c4:	93 e0       	ldi	r25, 0x03	; 3
    37c6:	48 9f       	mul	r20, r24
    37c8:	90 01       	movw	r18, r0
    37ca:	49 9f       	mul	r20, r25
    37cc:	30 0d       	add	r19, r0
    37ce:	58 9f       	mul	r21, r24
    37d0:	30 0d       	add	r19, r0
    37d2:	11 24       	eor	r1, r1
    37d4:	0e c0       	rjmp	.+28     	; 0x37f2 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    37d6:	98 01       	movw	r18, r16
    37d8:	40 e0       	ldi	r20, 0x00	; 0
    37da:	50 e0       	ldi	r21, 0x00	; 0
    37dc:	c7 01       	movw	r24, r14
    37de:	b6 01       	movw	r22, r12
    37e0:	0e 94 51 1c 	call	0x38a2	; 0x38a2 <__udivmodsi4>
    37e4:	30 93 fe 01 	sts	0x01FE, r19	; 0x8001fe <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    37e8:	20 93 fd 01 	sts	0x01FD, r18	; 0x8001fd <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    37ec:	02 c0       	rjmp	.+4      	; 0x37f2 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    37ee:	20 e0       	ldi	r18, 0x00	; 0
    37f0:	30 e0       	ldi	r19, 0x00	; 0
    37f2:	c9 01       	movw	r24, r18
    37f4:	cd b7       	in	r28, 0x3d	; 61
    37f6:	de b7       	in	r29, 0x3e	; 62
    37f8:	e2 e1       	ldi	r30, 0x12	; 18
    37fa:	0c 94 d6 1c 	jmp	0x39ac	; 0x39ac <__epilogue_restores__>

000037fe <_ZN16PololuQTRSensorsD1Ev>:
    37fe:	cf 93       	push	r28
    3800:	df 93       	push	r29
    3802:	ec 01       	movw	r28, r24
    3804:	8a 81       	ldd	r24, Y+2	; 0x02
    3806:	9b 81       	ldd	r25, Y+3	; 0x03
    3808:	00 97       	sbiw	r24, 0x00	; 0
    380a:	11 f0       	breq	.+4      	; 0x3810 <_ZN16PololuQTRSensorsD1Ev+0x12>
    380c:	0e 94 89 1d 	call	0x3b12	; 0x3b12 <free>
    3810:	8e 81       	ldd	r24, Y+6	; 0x06
    3812:	9f 81       	ldd	r25, Y+7	; 0x07
    3814:	00 97       	sbiw	r24, 0x00	; 0
    3816:	11 f0       	breq	.+4      	; 0x381c <_ZN16PololuQTRSensorsD1Ev+0x1e>
    3818:	0e 94 89 1d 	call	0x3b12	; 0x3b12 <free>
    381c:	88 81       	ld	r24, Y
    381e:	99 81       	ldd	r25, Y+1	; 0x01
    3820:	00 97       	sbiw	r24, 0x00	; 0
    3822:	11 f0       	breq	.+4      	; 0x3828 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    3824:	0e 94 89 1d 	call	0x3b12	; 0x3b12 <free>
    3828:	8c 81       	ldd	r24, Y+4	; 0x04
    382a:	9d 81       	ldd	r25, Y+5	; 0x05
    382c:	00 97       	sbiw	r24, 0x00	; 0
    382e:	11 f0       	breq	.+4      	; 0x3834 <_ZN16PololuQTRSensorsD1Ev+0x36>
    3830:	0e 94 89 1d 	call	0x3b12	; 0x3b12 <free>
    3834:	df 91       	pop	r29
    3836:	cf 91       	pop	r28
    3838:	08 95       	ret

0000383a <__udivmodqi4>:
    383a:	99 1b       	sub	r25, r25
    383c:	79 e0       	ldi	r23, 0x09	; 9
    383e:	04 c0       	rjmp	.+8      	; 0x3848 <__udivmodqi4_ep>

00003840 <__udivmodqi4_loop>:
    3840:	99 1f       	adc	r25, r25
    3842:	96 17       	cp	r25, r22
    3844:	08 f0       	brcs	.+2      	; 0x3848 <__udivmodqi4_ep>
    3846:	96 1b       	sub	r25, r22

00003848 <__udivmodqi4_ep>:
    3848:	88 1f       	adc	r24, r24
    384a:	7a 95       	dec	r23
    384c:	c9 f7       	brne	.-14     	; 0x3840 <__udivmodqi4_loop>
    384e:	80 95       	com	r24
    3850:	08 95       	ret

00003852 <__udivmodhi4>:
    3852:	aa 1b       	sub	r26, r26
    3854:	bb 1b       	sub	r27, r27
    3856:	51 e1       	ldi	r21, 0x11	; 17
    3858:	07 c0       	rjmp	.+14     	; 0x3868 <__udivmodhi4_ep>

0000385a <__udivmodhi4_loop>:
    385a:	aa 1f       	adc	r26, r26
    385c:	bb 1f       	adc	r27, r27
    385e:	a6 17       	cp	r26, r22
    3860:	b7 07       	cpc	r27, r23
    3862:	10 f0       	brcs	.+4      	; 0x3868 <__udivmodhi4_ep>
    3864:	a6 1b       	sub	r26, r22
    3866:	b7 0b       	sbc	r27, r23

00003868 <__udivmodhi4_ep>:
    3868:	88 1f       	adc	r24, r24
    386a:	99 1f       	adc	r25, r25
    386c:	5a 95       	dec	r21
    386e:	a9 f7       	brne	.-22     	; 0x385a <__udivmodhi4_loop>
    3870:	80 95       	com	r24
    3872:	90 95       	com	r25
    3874:	bc 01       	movw	r22, r24
    3876:	cd 01       	movw	r24, r26
    3878:	08 95       	ret

0000387a <__divmodhi4>:
    387a:	97 fb       	bst	r25, 7
    387c:	07 2e       	mov	r0, r23
    387e:	16 f4       	brtc	.+4      	; 0x3884 <__divmodhi4+0xa>
    3880:	00 94       	com	r0
    3882:	07 d0       	rcall	.+14     	; 0x3892 <__divmodhi4_neg1>
    3884:	77 fd       	sbrc	r23, 7
    3886:	09 d0       	rcall	.+18     	; 0x389a <__divmodhi4_neg2>
    3888:	0e 94 29 1c 	call	0x3852	; 0x3852 <__udivmodhi4>
    388c:	07 fc       	sbrc	r0, 7
    388e:	05 d0       	rcall	.+10     	; 0x389a <__divmodhi4_neg2>
    3890:	3e f4       	brtc	.+14     	; 0x38a0 <__divmodhi4_exit>

00003892 <__divmodhi4_neg1>:
    3892:	90 95       	com	r25
    3894:	81 95       	neg	r24
    3896:	9f 4f       	sbci	r25, 0xFF	; 255
    3898:	08 95       	ret

0000389a <__divmodhi4_neg2>:
    389a:	70 95       	com	r23
    389c:	61 95       	neg	r22
    389e:	7f 4f       	sbci	r23, 0xFF	; 255

000038a0 <__divmodhi4_exit>:
    38a0:	08 95       	ret

000038a2 <__udivmodsi4>:
    38a2:	a1 e2       	ldi	r26, 0x21	; 33
    38a4:	1a 2e       	mov	r1, r26
    38a6:	aa 1b       	sub	r26, r26
    38a8:	bb 1b       	sub	r27, r27
    38aa:	fd 01       	movw	r30, r26
    38ac:	0d c0       	rjmp	.+26     	; 0x38c8 <__udivmodsi4_ep>

000038ae <__udivmodsi4_loop>:
    38ae:	aa 1f       	adc	r26, r26
    38b0:	bb 1f       	adc	r27, r27
    38b2:	ee 1f       	adc	r30, r30
    38b4:	ff 1f       	adc	r31, r31
    38b6:	a2 17       	cp	r26, r18
    38b8:	b3 07       	cpc	r27, r19
    38ba:	e4 07       	cpc	r30, r20
    38bc:	f5 07       	cpc	r31, r21
    38be:	20 f0       	brcs	.+8      	; 0x38c8 <__udivmodsi4_ep>
    38c0:	a2 1b       	sub	r26, r18
    38c2:	b3 0b       	sbc	r27, r19
    38c4:	e4 0b       	sbc	r30, r20
    38c6:	f5 0b       	sbc	r31, r21

000038c8 <__udivmodsi4_ep>:
    38c8:	66 1f       	adc	r22, r22
    38ca:	77 1f       	adc	r23, r23
    38cc:	88 1f       	adc	r24, r24
    38ce:	99 1f       	adc	r25, r25
    38d0:	1a 94       	dec	r1
    38d2:	69 f7       	brne	.-38     	; 0x38ae <__udivmodsi4_loop>
    38d4:	60 95       	com	r22
    38d6:	70 95       	com	r23
    38d8:	80 95       	com	r24
    38da:	90 95       	com	r25
    38dc:	9b 01       	movw	r18, r22
    38de:	ac 01       	movw	r20, r24
    38e0:	bd 01       	movw	r22, r26
    38e2:	cf 01       	movw	r24, r30
    38e4:	08 95       	ret

000038e6 <__divmodsi4>:
    38e6:	05 2e       	mov	r0, r21
    38e8:	97 fb       	bst	r25, 7
    38ea:	1e f4       	brtc	.+6      	; 0x38f2 <__divmodsi4+0xc>
    38ec:	00 94       	com	r0
    38ee:	0e 94 8a 1c 	call	0x3914	; 0x3914 <__negsi2>
    38f2:	57 fd       	sbrc	r21, 7
    38f4:	07 d0       	rcall	.+14     	; 0x3904 <__divmodsi4_neg2>
    38f6:	0e 94 51 1c 	call	0x38a2	; 0x38a2 <__udivmodsi4>
    38fa:	07 fc       	sbrc	r0, 7
    38fc:	03 d0       	rcall	.+6      	; 0x3904 <__divmodsi4_neg2>
    38fe:	4e f4       	brtc	.+18     	; 0x3912 <__divmodsi4_exit>
    3900:	0c 94 8a 1c 	jmp	0x3914	; 0x3914 <__negsi2>

00003904 <__divmodsi4_neg2>:
    3904:	50 95       	com	r21
    3906:	40 95       	com	r20
    3908:	30 95       	com	r19
    390a:	21 95       	neg	r18
    390c:	3f 4f       	sbci	r19, 0xFF	; 255
    390e:	4f 4f       	sbci	r20, 0xFF	; 255
    3910:	5f 4f       	sbci	r21, 0xFF	; 255

00003912 <__divmodsi4_exit>:
    3912:	08 95       	ret

00003914 <__negsi2>:
    3914:	90 95       	com	r25
    3916:	80 95       	com	r24
    3918:	70 95       	com	r23
    391a:	61 95       	neg	r22
    391c:	7f 4f       	sbci	r23, 0xFF	; 255
    391e:	8f 4f       	sbci	r24, 0xFF	; 255
    3920:	9f 4f       	sbci	r25, 0xFF	; 255
    3922:	08 95       	ret

00003924 <__tablejump2__>:
    3924:	ee 0f       	add	r30, r30
    3926:	ff 1f       	adc	r31, r31
    3928:	05 90       	lpm	r0, Z+
    392a:	f4 91       	lpm	r31, Z
    392c:	e0 2d       	mov	r30, r0
    392e:	09 94       	ijmp

00003930 <__umulhisi3>:
    3930:	a2 9f       	mul	r26, r18
    3932:	b0 01       	movw	r22, r0
    3934:	b3 9f       	mul	r27, r19
    3936:	c0 01       	movw	r24, r0
    3938:	a3 9f       	mul	r26, r19
    393a:	70 0d       	add	r23, r0
    393c:	81 1d       	adc	r24, r1
    393e:	11 24       	eor	r1, r1
    3940:	91 1d       	adc	r25, r1
    3942:	b2 9f       	mul	r27, r18
    3944:	70 0d       	add	r23, r0
    3946:	81 1d       	adc	r24, r1
    3948:	11 24       	eor	r1, r1
    394a:	91 1d       	adc	r25, r1
    394c:	08 95       	ret

0000394e <__muluhisi3>:
    394e:	0e 94 98 1c 	call	0x3930	; 0x3930 <__umulhisi3>
    3952:	a5 9f       	mul	r26, r21
    3954:	90 0d       	add	r25, r0
    3956:	b4 9f       	mul	r27, r20
    3958:	90 0d       	add	r25, r0
    395a:	a4 9f       	mul	r26, r20
    395c:	80 0d       	add	r24, r0
    395e:	91 1d       	adc	r25, r1
    3960:	11 24       	eor	r1, r1
    3962:	08 95       	ret

00003964 <__mulshisi3>:
    3964:	b7 ff       	sbrs	r27, 7
    3966:	0c 94 a7 1c 	jmp	0x394e	; 0x394e <__muluhisi3>

0000396a <__mulohisi3>:
    396a:	0e 94 a7 1c 	call	0x394e	; 0x394e <__muluhisi3>
    396e:	82 1b       	sub	r24, r18
    3970:	93 0b       	sbc	r25, r19
    3972:	08 95       	ret

00003974 <__prologue_saves__>:
    3974:	2f 92       	push	r2
    3976:	3f 92       	push	r3
    3978:	4f 92       	push	r4
    397a:	5f 92       	push	r5
    397c:	6f 92       	push	r6
    397e:	7f 92       	push	r7
    3980:	8f 92       	push	r8
    3982:	9f 92       	push	r9
    3984:	af 92       	push	r10
    3986:	bf 92       	push	r11
    3988:	cf 92       	push	r12
    398a:	df 92       	push	r13
    398c:	ef 92       	push	r14
    398e:	ff 92       	push	r15
    3990:	0f 93       	push	r16
    3992:	1f 93       	push	r17
    3994:	cf 93       	push	r28
    3996:	df 93       	push	r29
    3998:	cd b7       	in	r28, 0x3d	; 61
    399a:	de b7       	in	r29, 0x3e	; 62
    399c:	ca 1b       	sub	r28, r26
    399e:	db 0b       	sbc	r29, r27
    39a0:	0f b6       	in	r0, 0x3f	; 63
    39a2:	f8 94       	cli
    39a4:	de bf       	out	0x3e, r29	; 62
    39a6:	0f be       	out	0x3f, r0	; 63
    39a8:	cd bf       	out	0x3d, r28	; 61
    39aa:	09 94       	ijmp

000039ac <__epilogue_restores__>:
    39ac:	2a 88       	ldd	r2, Y+18	; 0x12
    39ae:	39 88       	ldd	r3, Y+17	; 0x11
    39b0:	48 88       	ldd	r4, Y+16	; 0x10
    39b2:	5f 84       	ldd	r5, Y+15	; 0x0f
    39b4:	6e 84       	ldd	r6, Y+14	; 0x0e
    39b6:	7d 84       	ldd	r7, Y+13	; 0x0d
    39b8:	8c 84       	ldd	r8, Y+12	; 0x0c
    39ba:	9b 84       	ldd	r9, Y+11	; 0x0b
    39bc:	aa 84       	ldd	r10, Y+10	; 0x0a
    39be:	b9 84       	ldd	r11, Y+9	; 0x09
    39c0:	c8 84       	ldd	r12, Y+8	; 0x08
    39c2:	df 80       	ldd	r13, Y+7	; 0x07
    39c4:	ee 80       	ldd	r14, Y+6	; 0x06
    39c6:	fd 80       	ldd	r15, Y+5	; 0x05
    39c8:	0c 81       	ldd	r16, Y+4	; 0x04
    39ca:	1b 81       	ldd	r17, Y+3	; 0x03
    39cc:	aa 81       	ldd	r26, Y+2	; 0x02
    39ce:	b9 81       	ldd	r27, Y+1	; 0x01
    39d0:	ce 0f       	add	r28, r30
    39d2:	d1 1d       	adc	r29, r1
    39d4:	0f b6       	in	r0, 0x3f	; 63
    39d6:	f8 94       	cli
    39d8:	de bf       	out	0x3e, r29	; 62
    39da:	0f be       	out	0x3f, r0	; 63
    39dc:	cd bf       	out	0x3d, r28	; 61
    39de:	ed 01       	movw	r28, r26
    39e0:	08 95       	ret

000039e2 <malloc>:
    39e2:	0f 93       	push	r16
    39e4:	1f 93       	push	r17
    39e6:	cf 93       	push	r28
    39e8:	df 93       	push	r29
    39ea:	82 30       	cpi	r24, 0x02	; 2
    39ec:	91 05       	cpc	r25, r1
    39ee:	10 f4       	brcc	.+4      	; 0x39f4 <malloc+0x12>
    39f0:	82 e0       	ldi	r24, 0x02	; 2
    39f2:	90 e0       	ldi	r25, 0x00	; 0
    39f4:	e0 91 25 02 	lds	r30, 0x0225	; 0x800225 <__flp>
    39f8:	f0 91 26 02 	lds	r31, 0x0226	; 0x800226 <__flp+0x1>
    39fc:	20 e0       	ldi	r18, 0x00	; 0
    39fe:	30 e0       	ldi	r19, 0x00	; 0
    3a00:	a0 e0       	ldi	r26, 0x00	; 0
    3a02:	b0 e0       	ldi	r27, 0x00	; 0
    3a04:	30 97       	sbiw	r30, 0x00	; 0
    3a06:	19 f1       	breq	.+70     	; 0x3a4e <malloc+0x6c>
    3a08:	40 81       	ld	r20, Z
    3a0a:	51 81       	ldd	r21, Z+1	; 0x01
    3a0c:	02 81       	ldd	r16, Z+2	; 0x02
    3a0e:	13 81       	ldd	r17, Z+3	; 0x03
    3a10:	48 17       	cp	r20, r24
    3a12:	59 07       	cpc	r21, r25
    3a14:	c8 f0       	brcs	.+50     	; 0x3a48 <malloc+0x66>
    3a16:	84 17       	cp	r24, r20
    3a18:	95 07       	cpc	r25, r21
    3a1a:	69 f4       	brne	.+26     	; 0x3a36 <malloc+0x54>
    3a1c:	10 97       	sbiw	r26, 0x00	; 0
    3a1e:	31 f0       	breq	.+12     	; 0x3a2c <malloc+0x4a>
    3a20:	12 96       	adiw	r26, 0x02	; 2
    3a22:	0c 93       	st	X, r16
    3a24:	12 97       	sbiw	r26, 0x02	; 2
    3a26:	13 96       	adiw	r26, 0x03	; 3
    3a28:	1c 93       	st	X, r17
    3a2a:	27 c0       	rjmp	.+78     	; 0x3a7a <malloc+0x98>
    3a2c:	00 93 25 02 	sts	0x0225, r16	; 0x800225 <__flp>
    3a30:	10 93 26 02 	sts	0x0226, r17	; 0x800226 <__flp+0x1>
    3a34:	22 c0       	rjmp	.+68     	; 0x3a7a <malloc+0x98>
    3a36:	21 15       	cp	r18, r1
    3a38:	31 05       	cpc	r19, r1
    3a3a:	19 f0       	breq	.+6      	; 0x3a42 <malloc+0x60>
    3a3c:	42 17       	cp	r20, r18
    3a3e:	53 07       	cpc	r21, r19
    3a40:	18 f4       	brcc	.+6      	; 0x3a48 <malloc+0x66>
    3a42:	9a 01       	movw	r18, r20
    3a44:	bd 01       	movw	r22, r26
    3a46:	ef 01       	movw	r28, r30
    3a48:	df 01       	movw	r26, r30
    3a4a:	f8 01       	movw	r30, r16
    3a4c:	db cf       	rjmp	.-74     	; 0x3a04 <malloc+0x22>
    3a4e:	21 15       	cp	r18, r1
    3a50:	31 05       	cpc	r19, r1
    3a52:	f9 f0       	breq	.+62     	; 0x3a92 <malloc+0xb0>
    3a54:	28 1b       	sub	r18, r24
    3a56:	39 0b       	sbc	r19, r25
    3a58:	24 30       	cpi	r18, 0x04	; 4
    3a5a:	31 05       	cpc	r19, r1
    3a5c:	80 f4       	brcc	.+32     	; 0x3a7e <malloc+0x9c>
    3a5e:	8a 81       	ldd	r24, Y+2	; 0x02
    3a60:	9b 81       	ldd	r25, Y+3	; 0x03
    3a62:	61 15       	cp	r22, r1
    3a64:	71 05       	cpc	r23, r1
    3a66:	21 f0       	breq	.+8      	; 0x3a70 <malloc+0x8e>
    3a68:	fb 01       	movw	r30, r22
    3a6a:	93 83       	std	Z+3, r25	; 0x03
    3a6c:	82 83       	std	Z+2, r24	; 0x02
    3a6e:	04 c0       	rjmp	.+8      	; 0x3a78 <malloc+0x96>
    3a70:	90 93 26 02 	sts	0x0226, r25	; 0x800226 <__flp+0x1>
    3a74:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <__flp>
    3a78:	fe 01       	movw	r30, r28
    3a7a:	32 96       	adiw	r30, 0x02	; 2
    3a7c:	44 c0       	rjmp	.+136    	; 0x3b06 <malloc+0x124>
    3a7e:	fe 01       	movw	r30, r28
    3a80:	e2 0f       	add	r30, r18
    3a82:	f3 1f       	adc	r31, r19
    3a84:	81 93       	st	Z+, r24
    3a86:	91 93       	st	Z+, r25
    3a88:	22 50       	subi	r18, 0x02	; 2
    3a8a:	31 09       	sbc	r19, r1
    3a8c:	39 83       	std	Y+1, r19	; 0x01
    3a8e:	28 83       	st	Y, r18
    3a90:	3a c0       	rjmp	.+116    	; 0x3b06 <malloc+0x124>
    3a92:	20 91 23 02 	lds	r18, 0x0223	; 0x800223 <__brkval>
    3a96:	30 91 24 02 	lds	r19, 0x0224	; 0x800224 <__brkval+0x1>
    3a9a:	23 2b       	or	r18, r19
    3a9c:	41 f4       	brne	.+16     	; 0x3aae <malloc+0xcc>
    3a9e:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__malloc_heap_start>
    3aa2:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__malloc_heap_start+0x1>
    3aa6:	30 93 24 02 	sts	0x0224, r19	; 0x800224 <__brkval+0x1>
    3aaa:	20 93 23 02 	sts	0x0223, r18	; 0x800223 <__brkval>
    3aae:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_end>
    3ab2:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_end+0x1>
    3ab6:	21 15       	cp	r18, r1
    3ab8:	31 05       	cpc	r19, r1
    3aba:	41 f4       	brne	.+16     	; 0x3acc <malloc+0xea>
    3abc:	2d b7       	in	r18, 0x3d	; 61
    3abe:	3e b7       	in	r19, 0x3e	; 62
    3ac0:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <__malloc_margin>
    3ac4:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <__malloc_margin+0x1>
    3ac8:	24 1b       	sub	r18, r20
    3aca:	35 0b       	sbc	r19, r21
    3acc:	e0 91 23 02 	lds	r30, 0x0223	; 0x800223 <__brkval>
    3ad0:	f0 91 24 02 	lds	r31, 0x0224	; 0x800224 <__brkval+0x1>
    3ad4:	e2 17       	cp	r30, r18
    3ad6:	f3 07       	cpc	r31, r19
    3ad8:	a0 f4       	brcc	.+40     	; 0x3b02 <malloc+0x120>
    3ada:	2e 1b       	sub	r18, r30
    3adc:	3f 0b       	sbc	r19, r31
    3ade:	28 17       	cp	r18, r24
    3ae0:	39 07       	cpc	r19, r25
    3ae2:	78 f0       	brcs	.+30     	; 0x3b02 <malloc+0x120>
    3ae4:	ac 01       	movw	r20, r24
    3ae6:	4e 5f       	subi	r20, 0xFE	; 254
    3ae8:	5f 4f       	sbci	r21, 0xFF	; 255
    3aea:	24 17       	cp	r18, r20
    3aec:	35 07       	cpc	r19, r21
    3aee:	48 f0       	brcs	.+18     	; 0x3b02 <malloc+0x120>
    3af0:	4e 0f       	add	r20, r30
    3af2:	5f 1f       	adc	r21, r31
    3af4:	50 93 24 02 	sts	0x0224, r21	; 0x800224 <__brkval+0x1>
    3af8:	40 93 23 02 	sts	0x0223, r20	; 0x800223 <__brkval>
    3afc:	81 93       	st	Z+, r24
    3afe:	91 93       	st	Z+, r25
    3b00:	02 c0       	rjmp	.+4      	; 0x3b06 <malloc+0x124>
    3b02:	e0 e0       	ldi	r30, 0x00	; 0
    3b04:	f0 e0       	ldi	r31, 0x00	; 0
    3b06:	cf 01       	movw	r24, r30
    3b08:	df 91       	pop	r29
    3b0a:	cf 91       	pop	r28
    3b0c:	1f 91       	pop	r17
    3b0e:	0f 91       	pop	r16
    3b10:	08 95       	ret

00003b12 <free>:
    3b12:	cf 93       	push	r28
    3b14:	df 93       	push	r29
    3b16:	00 97       	sbiw	r24, 0x00	; 0
    3b18:	09 f4       	brne	.+2      	; 0x3b1c <free+0xa>
    3b1a:	81 c0       	rjmp	.+258    	; 0x3c1e <free+0x10c>
    3b1c:	fc 01       	movw	r30, r24
    3b1e:	32 97       	sbiw	r30, 0x02	; 2
    3b20:	13 82       	std	Z+3, r1	; 0x03
    3b22:	12 82       	std	Z+2, r1	; 0x02
    3b24:	a0 91 25 02 	lds	r26, 0x0225	; 0x800225 <__flp>
    3b28:	b0 91 26 02 	lds	r27, 0x0226	; 0x800226 <__flp+0x1>
    3b2c:	10 97       	sbiw	r26, 0x00	; 0
    3b2e:	81 f4       	brne	.+32     	; 0x3b50 <free+0x3e>
    3b30:	20 81       	ld	r18, Z
    3b32:	31 81       	ldd	r19, Z+1	; 0x01
    3b34:	82 0f       	add	r24, r18
    3b36:	93 1f       	adc	r25, r19
    3b38:	20 91 23 02 	lds	r18, 0x0223	; 0x800223 <__brkval>
    3b3c:	30 91 24 02 	lds	r19, 0x0224	; 0x800224 <__brkval+0x1>
    3b40:	28 17       	cp	r18, r24
    3b42:	39 07       	cpc	r19, r25
    3b44:	51 f5       	brne	.+84     	; 0x3b9a <free+0x88>
    3b46:	f0 93 24 02 	sts	0x0224, r31	; 0x800224 <__brkval+0x1>
    3b4a:	e0 93 23 02 	sts	0x0223, r30	; 0x800223 <__brkval>
    3b4e:	67 c0       	rjmp	.+206    	; 0x3c1e <free+0x10c>
    3b50:	ed 01       	movw	r28, r26
    3b52:	20 e0       	ldi	r18, 0x00	; 0
    3b54:	30 e0       	ldi	r19, 0x00	; 0
    3b56:	ce 17       	cp	r28, r30
    3b58:	df 07       	cpc	r29, r31
    3b5a:	40 f4       	brcc	.+16     	; 0x3b6c <free+0x5a>
    3b5c:	4a 81       	ldd	r20, Y+2	; 0x02
    3b5e:	5b 81       	ldd	r21, Y+3	; 0x03
    3b60:	9e 01       	movw	r18, r28
    3b62:	41 15       	cp	r20, r1
    3b64:	51 05       	cpc	r21, r1
    3b66:	f1 f0       	breq	.+60     	; 0x3ba4 <free+0x92>
    3b68:	ea 01       	movw	r28, r20
    3b6a:	f5 cf       	rjmp	.-22     	; 0x3b56 <free+0x44>
    3b6c:	d3 83       	std	Z+3, r29	; 0x03
    3b6e:	c2 83       	std	Z+2, r28	; 0x02
    3b70:	40 81       	ld	r20, Z
    3b72:	51 81       	ldd	r21, Z+1	; 0x01
    3b74:	84 0f       	add	r24, r20
    3b76:	95 1f       	adc	r25, r21
    3b78:	c8 17       	cp	r28, r24
    3b7a:	d9 07       	cpc	r29, r25
    3b7c:	59 f4       	brne	.+22     	; 0x3b94 <free+0x82>
    3b7e:	88 81       	ld	r24, Y
    3b80:	99 81       	ldd	r25, Y+1	; 0x01
    3b82:	84 0f       	add	r24, r20
    3b84:	95 1f       	adc	r25, r21
    3b86:	02 96       	adiw	r24, 0x02	; 2
    3b88:	91 83       	std	Z+1, r25	; 0x01
    3b8a:	80 83       	st	Z, r24
    3b8c:	8a 81       	ldd	r24, Y+2	; 0x02
    3b8e:	9b 81       	ldd	r25, Y+3	; 0x03
    3b90:	93 83       	std	Z+3, r25	; 0x03
    3b92:	82 83       	std	Z+2, r24	; 0x02
    3b94:	21 15       	cp	r18, r1
    3b96:	31 05       	cpc	r19, r1
    3b98:	29 f4       	brne	.+10     	; 0x3ba4 <free+0x92>
    3b9a:	f0 93 26 02 	sts	0x0226, r31	; 0x800226 <__flp+0x1>
    3b9e:	e0 93 25 02 	sts	0x0225, r30	; 0x800225 <__flp>
    3ba2:	3d c0       	rjmp	.+122    	; 0x3c1e <free+0x10c>
    3ba4:	e9 01       	movw	r28, r18
    3ba6:	fb 83       	std	Y+3, r31	; 0x03
    3ba8:	ea 83       	std	Y+2, r30	; 0x02
    3baa:	49 91       	ld	r20, Y+
    3bac:	59 91       	ld	r21, Y+
    3bae:	c4 0f       	add	r28, r20
    3bb0:	d5 1f       	adc	r29, r21
    3bb2:	ec 17       	cp	r30, r28
    3bb4:	fd 07       	cpc	r31, r29
    3bb6:	61 f4       	brne	.+24     	; 0x3bd0 <free+0xbe>
    3bb8:	80 81       	ld	r24, Z
    3bba:	91 81       	ldd	r25, Z+1	; 0x01
    3bbc:	84 0f       	add	r24, r20
    3bbe:	95 1f       	adc	r25, r21
    3bc0:	02 96       	adiw	r24, 0x02	; 2
    3bc2:	e9 01       	movw	r28, r18
    3bc4:	99 83       	std	Y+1, r25	; 0x01
    3bc6:	88 83       	st	Y, r24
    3bc8:	82 81       	ldd	r24, Z+2	; 0x02
    3bca:	93 81       	ldd	r25, Z+3	; 0x03
    3bcc:	9b 83       	std	Y+3, r25	; 0x03
    3bce:	8a 83       	std	Y+2, r24	; 0x02
    3bd0:	e0 e0       	ldi	r30, 0x00	; 0
    3bd2:	f0 e0       	ldi	r31, 0x00	; 0
    3bd4:	12 96       	adiw	r26, 0x02	; 2
    3bd6:	8d 91       	ld	r24, X+
    3bd8:	9c 91       	ld	r25, X
    3bda:	13 97       	sbiw	r26, 0x03	; 3
    3bdc:	00 97       	sbiw	r24, 0x00	; 0
    3bde:	19 f0       	breq	.+6      	; 0x3be6 <free+0xd4>
    3be0:	fd 01       	movw	r30, r26
    3be2:	dc 01       	movw	r26, r24
    3be4:	f7 cf       	rjmp	.-18     	; 0x3bd4 <free+0xc2>
    3be6:	8d 91       	ld	r24, X+
    3be8:	9c 91       	ld	r25, X
    3bea:	11 97       	sbiw	r26, 0x01	; 1
    3bec:	9d 01       	movw	r18, r26
    3bee:	2e 5f       	subi	r18, 0xFE	; 254
    3bf0:	3f 4f       	sbci	r19, 0xFF	; 255
    3bf2:	82 0f       	add	r24, r18
    3bf4:	93 1f       	adc	r25, r19
    3bf6:	20 91 23 02 	lds	r18, 0x0223	; 0x800223 <__brkval>
    3bfa:	30 91 24 02 	lds	r19, 0x0224	; 0x800224 <__brkval+0x1>
    3bfe:	28 17       	cp	r18, r24
    3c00:	39 07       	cpc	r19, r25
    3c02:	69 f4       	brne	.+26     	; 0x3c1e <free+0x10c>
    3c04:	30 97       	sbiw	r30, 0x00	; 0
    3c06:	29 f4       	brne	.+10     	; 0x3c12 <free+0x100>
    3c08:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <__flp+0x1>
    3c0c:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <__flp>
    3c10:	02 c0       	rjmp	.+4      	; 0x3c16 <free+0x104>
    3c12:	13 82       	std	Z+3, r1	; 0x03
    3c14:	12 82       	std	Z+2, r1	; 0x02
    3c16:	b0 93 24 02 	sts	0x0224, r27	; 0x800224 <__brkval+0x1>
    3c1a:	a0 93 23 02 	sts	0x0223, r26	; 0x800223 <__brkval>
    3c1e:	df 91       	pop	r29
    3c20:	cf 91       	pop	r28
    3c22:	08 95       	ret

00003c24 <strncat>:
    3c24:	fb 01       	movw	r30, r22
    3c26:	dc 01       	movw	r26, r24
    3c28:	0d 90       	ld	r0, X+
    3c2a:	00 20       	and	r0, r0
    3c2c:	e9 f7       	brne	.-6      	; 0x3c28 <strncat+0x4>
    3c2e:	11 97       	sbiw	r26, 0x01	; 1
    3c30:	41 50       	subi	r20, 0x01	; 1
    3c32:	50 40       	sbci	r21, 0x00	; 0
    3c34:	28 f0       	brcs	.+10     	; 0x3c40 <strncat+0x1c>
    3c36:	01 90       	ld	r0, Z+
    3c38:	00 20       	and	r0, r0
    3c3a:	0d 92       	st	X+, r0
    3c3c:	c9 f7       	brne	.-14     	; 0x3c30 <strncat+0xc>
    3c3e:	08 95       	ret
    3c40:	1c 92       	st	X, r1
    3c42:	08 95       	ret

00003c44 <__do_global_dtors>:
    3c44:	10 e0       	ldi	r17, 0x00	; 0
    3c46:	c2 e4       	ldi	r28, 0x42	; 66
    3c48:	d0 e0       	ldi	r29, 0x00	; 0
    3c4a:	04 c0       	rjmp	.+8      	; 0x3c54 <__do_global_dtors+0x10>
    3c4c:	fe 01       	movw	r30, r28
    3c4e:	0e 94 92 1c 	call	0x3924	; 0x3924 <__tablejump2__>
    3c52:	21 96       	adiw	r28, 0x01	; 1
    3c54:	c3 34       	cpi	r28, 0x43	; 67
    3c56:	d1 07       	cpc	r29, r17
    3c58:	c9 f7       	brne	.-14     	; 0x3c4c <__do_global_dtors+0x8>
    3c5a:	f8 94       	cli

00003c5c <__stop_program>:
    3c5c:	ff cf       	rjmp	.-2      	; 0x3c5c <__stop_program>
